<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2134" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="2117.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="2117.00"> </text><svg id="frames" x="10" width="1180" total_samples="20148584580"><g><title>next_uptodate_folio (3,861,684 samples, 0.02%)</title><rect x="0.0213%" y="1893" width="0.0192%" height="15" fill="rgb(227,0,7)" fg:x="4291098" fg:w="3861684"/><text x="0.2713%" y="1903.50"></text></g><g><title>handle_mm_fault (6,182,162 samples, 0.03%)</title><rect x="0.0135%" y="1989" width="0.0307%" height="15" fill="rgb(217,0,24)" fg:x="2713604" fg:w="6182162"/><text x="0.2635%" y="1999.50"></text></g><g><title>__handle_mm_fault (6,182,162 samples, 0.03%)</title><rect x="0.0135%" y="1973" width="0.0307%" height="15" fill="rgb(221,193,54)" fg:x="2713604" fg:w="6182162"/><text x="0.2635%" y="1983.50"></text></g><g><title>handle_pte_fault (5,393,059 samples, 0.03%)</title><rect x="0.0174%" y="1957" width="0.0268%" height="15" fill="rgb(248,212,6)" fg:x="3502707" fg:w="5393059"/><text x="0.2674%" y="1967.50"></text></g><g><title>do_pte_missing (5,393,059 samples, 0.03%)</title><rect x="0.0174%" y="1941" width="0.0268%" height="15" fill="rgb(208,68,35)" fg:x="3502707" fg:w="5393059"/><text x="0.2674%" y="1951.50"></text></g><g><title>do_read_fault (5,393,059 samples, 0.03%)</title><rect x="0.0174%" y="1925" width="0.0268%" height="15" fill="rgb(232,128,0)" fg:x="3502707" fg:w="5393059"/><text x="0.2674%" y="1935.50"></text></g><g><title>filemap_map_pages (5,393,059 samples, 0.03%)</title><rect x="0.0174%" y="1909" width="0.0268%" height="15" fill="rgb(207,160,47)" fg:x="3502707" fg:w="5393059"/><text x="0.2674%" y="1919.50"></text></g><g><title>asm_exc_page_fault (6,954,826 samples, 0.03%)</title><rect x="0.0135%" y="2037" width="0.0345%" height="15" fill="rgb(228,23,34)" fg:x="2713604" fg:w="6954826"/><text x="0.2635%" y="2047.50"></text></g><g><title>exc_page_fault (6,954,826 samples, 0.03%)</title><rect x="0.0135%" y="2021" width="0.0345%" height="15" fill="rgb(218,30,26)" fg:x="2713604" fg:w="6954826"/><text x="0.2635%" y="2031.50"></text></g><g><title>do_user_addr_fault (6,954,826 samples, 0.03%)</title><rect x="0.0135%" y="2005" width="0.0345%" height="15" fill="rgb(220,122,19)" fg:x="2713604" fg:w="6954826"/><text x="0.2635%" y="2015.50"></text></g><g><title>[libLLVM-14.so.1] (10,840,063 samples, 0.05%)</title><rect x="0.0019%" y="2053" width="0.0538%" height="15" fill="rgb(250,228,42)" fg:x="376056" fg:w="10840063"/><text x="0.2519%" y="2063.50"></text></g><g><title>_dl_lookup_symbol_x (8,420,695 samples, 0.04%)</title><rect x="0.0634%" y="2021" width="0.0418%" height="15" fill="rgb(240,193,28)" fg:x="12775360" fg:w="8420695"/><text x="0.3134%" y="2031.50"></text></g><g><title>asm_exc_page_fault (2,292,086 samples, 0.01%)</title><rect x="0.0938%" y="2005" width="0.0114%" height="15" fill="rgb(216,20,37)" fg:x="18903969" fg:w="2292086"/><text x="0.3438%" y="2015.50"></text></g><g><title>exc_page_fault (2,292,086 samples, 0.01%)</title><rect x="0.0938%" y="1989" width="0.0114%" height="15" fill="rgb(206,188,39)" fg:x="18903969" fg:w="2292086"/><text x="0.3438%" y="1999.50"></text></g><g><title>do_user_addr_fault (2,292,086 samples, 0.01%)</title><rect x="0.0938%" y="1973" width="0.0114%" height="15" fill="rgb(217,207,13)" fg:x="18903969" fg:w="2292086"/><text x="0.3438%" y="1983.50"></text></g><g><title>[libLLVM-14.so.1] (10,745,346 samples, 0.05%)</title><rect x="0.0595%" y="2037" width="0.0533%" height="15" fill="rgb(231,73,38)" fg:x="11986049" fg:w="10745346"/><text x="0.3095%" y="2047.50"></text></g><g><title>[libLLVM-14.so.1] (2,361,237 samples, 0.01%)</title><rect x="0.1128%" y="2021" width="0.0117%" height="15" fill="rgb(225,20,46)" fg:x="22731395" fg:w="2361237"/><text x="0.3628%" y="2031.50"></text></g><g><title>[unknown] (3,148,984 samples, 0.02%)</title><rect x="0.1128%" y="2037" width="0.0156%" height="15" fill="rgb(210,31,41)" fg:x="22731395" fg:w="3148984"/><text x="0.3628%" y="2047.50"></text></g><g><title>copy_page (2,167,312 samples, 0.01%)</title><rect x="0.2259%" y="1877" width="0.0108%" height="15" fill="rgb(221,200,47)" fg:x="45506946" fg:w="2167312"/><text x="0.4759%" y="1887.50"></text></g><g><title>__do_fault (2,213,507 samples, 0.01%)</title><rect x="0.2406%" y="1861" width="0.0110%" height="15" fill="rgb(226,26,5)" fg:x="48471639" fg:w="2213507"/><text x="0.4906%" y="1871.50"></text></g><g><title>filemap_fault (2,213,507 samples, 0.01%)</title><rect x="0.2406%" y="1845" width="0.0110%" height="15" fill="rgb(249,33,26)" fg:x="48471639" fg:w="2213507"/><text x="0.4906%" y="1855.50"></text></g><g><title>__mem_cgroup_charge (2,335,033 samples, 0.01%)</title><rect x="0.2629%" y="1861" width="0.0116%" height="15" fill="rgb(235,183,28)" fg:x="52973721" fg:w="2335033"/><text x="0.5129%" y="1871.50"></text></g><g><title>charge_memcg (2,335,033 samples, 0.01%)</title><rect x="0.2629%" y="1845" width="0.0116%" height="15" fill="rgb(221,5,38)" fg:x="52973721" fg:w="2335033"/><text x="0.5129%" y="1855.50"></text></g><g><title>finish_fault (4,546,287 samples, 0.02%)</title><rect x="0.2783%" y="1861" width="0.0226%" height="15" fill="rgb(247,18,42)" fg:x="56073672" fg:w="4546287"/><text x="0.5283%" y="1871.50"></text></g><g><title>set_pte_range (3,038,291 samples, 0.02%)</title><rect x="0.2858%" y="1845" width="0.0151%" height="15" fill="rgb(241,131,45)" fg:x="57581668" fg:w="3038291"/><text x="0.5358%" y="1855.50"></text></g><g><title>clear_page_rep (4,525,988 samples, 0.02%)</title><rect x="0.3223%" y="1797" width="0.0225%" height="15" fill="rgb(249,31,29)" fg:x="64940211" fg:w="4525988"/><text x="0.5723%" y="1807.50"></text></g><g><title>do_cow_fault (23,200,126 samples, 0.12%)</title><rect x="0.2366%" y="1877" width="0.1151%" height="15" fill="rgb(225,111,53)" fg:x="47674258" fg:w="23200126"/><text x="0.4866%" y="1887.50"></text></g><g><title>vma_alloc_folio (9,610,092 samples, 0.05%)</title><rect x="0.3041%" y="1861" width="0.0477%" height="15" fill="rgb(238,160,17)" fg:x="61264292" fg:w="9610092"/><text x="0.5541%" y="1871.50"></text></g><g><title>__folio_alloc (8,921,078 samples, 0.04%)</title><rect x="0.3075%" y="1845" width="0.0443%" height="15" fill="rgb(214,148,48)" fg:x="61953306" fg:w="8921078"/><text x="0.5575%" y="1855.50"></text></g><g><title>__alloc_pages (8,921,078 samples, 0.04%)</title><rect x="0.3075%" y="1829" width="0.0443%" height="15" fill="rgb(232,36,49)" fg:x="61953306" fg:w="8921078"/><text x="0.5575%" y="1839.50"></text></g><g><title>get_page_from_freelist (7,353,519 samples, 0.04%)</title><rect x="0.3153%" y="1813" width="0.0365%" height="15" fill="rgb(209,103,24)" fg:x="63520865" fg:w="7353519"/><text x="0.5653%" y="1823.50"></text></g><g><title>next_uptodate_folio (2,194,586 samples, 0.01%)</title><rect x="0.3518%" y="1845" width="0.0109%" height="15" fill="rgb(229,88,8)" fg:x="70874384" fg:w="2194586"/><text x="0.6018%" y="1855.50"></text></g><g><title>do_pte_missing (29,113,987 samples, 0.14%)</title><rect x="0.2219%" y="1893" width="0.1445%" height="15" fill="rgb(213,181,19)" fg:x="44710413" fg:w="29113987"/><text x="0.4719%" y="1903.50"></text></g><g><title>do_read_fault (2,950,016 samples, 0.01%)</title><rect x="0.3518%" y="1877" width="0.0146%" height="15" fill="rgb(254,191,54)" fg:x="70874384" fg:w="2950016"/><text x="0.6018%" y="1887.50"></text></g><g><title>filemap_map_pages (2,950,016 samples, 0.01%)</title><rect x="0.3518%" y="1861" width="0.0146%" height="15" fill="rgb(241,83,37)" fg:x="70874384" fg:w="2950016"/><text x="0.6018%" y="1871.50"></text></g><g><title>__handle_mm_fault (32,718,665 samples, 0.16%)</title><rect x="0.2077%" y="1925" width="0.1624%" height="15" fill="rgb(233,36,39)" fg:x="41842184" fg:w="32718665"/><text x="0.4577%" y="1935.50"></text></g><g><title>handle_pte_fault (29,850,436 samples, 0.15%)</title><rect x="0.2219%" y="1909" width="0.1482%" height="15" fill="rgb(226,3,54)" fg:x="44710413" fg:w="29850436"/><text x="0.4719%" y="1919.50"></text></g><g><title>handle_mm_fault (34,255,269 samples, 0.17%)</title><rect x="0.2077%" y="1941" width="0.1700%" height="15" fill="rgb(245,192,40)" fg:x="41842184" fg:w="34255269"/><text x="0.4577%" y="1951.50"></text></g><g><title>exc_page_fault (40,042,795 samples, 0.20%)</title><rect x="0.1898%" y="1973" width="0.1987%" height="15" fill="rgb(238,167,29)" fg:x="38235586" fg:w="40042795"/><text x="0.4398%" y="1983.50"></text></g><g><title>do_user_addr_fault (39,245,121 samples, 0.19%)</title><rect x="0.1937%" y="1957" width="0.1948%" height="15" fill="rgb(232,182,51)" fg:x="39033260" fg:w="39245121"/><text x="0.4437%" y="1967.50"></text></g><g><title>asm_exc_page_fault (44,523,082 samples, 0.22%)</title><rect x="0.1747%" y="1989" width="0.2210%" height="15" fill="rgb(231,60,39)" fg:x="35191704" fg:w="44523082"/><text x="0.4247%" y="1999.50"></text></g><g><title>_dl_relocate_object (60,518,239 samples, 0.30%)</title><rect x="0.1284%" y="2005" width="0.3004%" height="15" fill="rgb(208,69,12)" fg:x="25880379" fg:w="60518239"/><text x="0.3784%" y="2015.50"></text></g><g><title>entry_ibpb (6,683,832 samples, 0.03%)</title><rect x="0.3956%" y="1989" width="0.0332%" height="15" fill="rgb(235,93,37)" fg:x="79714786" fg:w="6683832"/><text x="0.6456%" y="1999.50"></text></g><g><title>_dl_sysdep_start (62,089,991 samples, 0.31%)</title><rect x="0.1284%" y="2037" width="0.3082%" height="15" fill="rgb(213,116,39)" fg:x="25880379" fg:w="62089991"/><text x="0.3784%" y="2047.50"></text></g><g><title>dl_main (62,089,991 samples, 0.31%)</title><rect x="0.1284%" y="2021" width="0.3082%" height="15" fill="rgb(222,207,29)" fg:x="25880379" fg:w="62089991"/><text x="0.3784%" y="2031.50"></text></g><g><title>[unknown] (79,967,431 samples, 0.40%)</title><rect x="0.0557%" y="2053" width="0.3969%" height="15" fill="rgb(206,96,30)" fg:x="11216119" fg:w="79967431"/><text x="0.3057%" y="2063.50"></text></g><g><title>do_vmi_munmap (2,314,027 samples, 0.01%)</title><rect x="0.4719%" y="1909" width="0.0115%" height="15" fill="rgb(218,138,4)" fg:x="95079261" fg:w="2314027"/><text x="0.7219%" y="1919.50"></text></g><g><title>do_vmi_align_munmap (2,314,027 samples, 0.01%)</title><rect x="0.4719%" y="1893" width="0.0115%" height="15" fill="rgb(250,191,14)" fg:x="95079261" fg:w="2314027"/><text x="0.7219%" y="1903.50"></text></g><g><title>entry_SYSCALL_64 (2,911,720 samples, 0.01%)</title><rect x="0.4719%" y="2021" width="0.0145%" height="15" fill="rgb(239,60,40)" fg:x="95079261" fg:w="2911720"/><text x="0.7219%" y="2031.50"></text></g><g><title>do_syscall_64 (2,911,720 samples, 0.01%)</title><rect x="0.4719%" y="2005" width="0.0145%" height="15" fill="rgb(206,27,48)" fg:x="95079261" fg:w="2911720"/><text x="0.7219%" y="2015.50"></text></g><g><title>__x64_sys_mmap (2,911,720 samples, 0.01%)</title><rect x="0.4719%" y="1989" width="0.0145%" height="15" fill="rgb(225,35,8)" fg:x="95079261" fg:w="2911720"/><text x="0.7219%" y="1999.50"></text></g><g><title>ksys_mmap_pgoff (2,911,720 samples, 0.01%)</title><rect x="0.4719%" y="1973" width="0.0145%" height="15" fill="rgb(250,213,24)" fg:x="95079261" fg:w="2911720"/><text x="0.7219%" y="1983.50"></text></g><g><title>vm_mmap_pgoff (2,911,720 samples, 0.01%)</title><rect x="0.4719%" y="1957" width="0.0145%" height="15" fill="rgb(247,123,22)" fg:x="95079261" fg:w="2911720"/><text x="0.7219%" y="1967.50"></text></g><g><title>do_mmap (2,911,720 samples, 0.01%)</title><rect x="0.4719%" y="1941" width="0.0145%" height="15" fill="rgb(231,138,38)" fg:x="95079261" fg:w="2911720"/><text x="0.7219%" y="1951.50"></text></g><g><title>mmap_region (2,911,720 samples, 0.01%)</title><rect x="0.4719%" y="1925" width="0.0145%" height="15" fill="rgb(231,145,46)" fg:x="95079261" fg:w="2911720"/><text x="0.7219%" y="1935.50"></text></g><g><title>mmap64 (3,481,995 samples, 0.02%)</title><rect x="0.4719%" y="2037" width="0.0173%" height="15" fill="rgb(251,118,11)" fg:x="95079261" fg:w="3481995"/><text x="0.7219%" y="2047.50"></text></g><g><title>_dl_map_object (6,135,733 samples, 0.03%)</title><rect x="0.4637%" y="2053" width="0.0305%" height="15" fill="rgb(217,147,25)" fg:x="93428775" fg:w="6135733"/><text x="0.7137%" y="2063.50"></text></g><g><title>do_lookup_x (5,762,039 samples, 0.03%)</title><rect x="0.5016%" y="2053" width="0.0286%" height="15" fill="rgb(247,81,37)" fg:x="101060109" fg:w="5762039"/><text x="0.7516%" y="2063.50"></text></g><g><title>exit_mm (7,930,411 samples, 0.04%)</title><rect x="0.5302%" y="1973" width="0.0394%" height="15" fill="rgb(209,12,38)" fg:x="106822148" fg:w="7930411"/><text x="0.7802%" y="1983.50"></text></g><g><title>mmput (7,930,411 samples, 0.04%)</title><rect x="0.5302%" y="1957" width="0.0394%" height="15" fill="rgb(227,1,9)" fg:x="106822148" fg:w="7930411"/><text x="0.7802%" y="1967.50"></text></g><g><title>__mmput (7,930,411 samples, 0.04%)</title><rect x="0.5302%" y="1941" width="0.0394%" height="15" fill="rgb(248,47,43)" fg:x="106822148" fg:w="7930411"/><text x="0.7802%" y="1951.50"></text></g><g><title>exit_mmap (7,930,411 samples, 0.04%)</title><rect x="0.5302%" y="1925" width="0.0394%" height="15" fill="rgb(221,10,30)" fg:x="106822148" fg:w="7930411"/><text x="0.7802%" y="1935.50"></text></g><g><title>unmap_vmas (6,483,081 samples, 0.03%)</title><rect x="0.5374%" y="1909" width="0.0322%" height="15" fill="rgb(210,229,1)" fg:x="108269478" fg:w="6483081"/><text x="0.7874%" y="1919.50"></text></g><g><title>unmap_single_vma (6,483,081 samples, 0.03%)</title><rect x="0.5374%" y="1893" width="0.0322%" height="15" fill="rgb(222,148,37)" fg:x="108269478" fg:w="6483081"/><text x="0.7874%" y="1903.50"></text></g><g><title>unmap_page_range (5,727,499 samples, 0.03%)</title><rect x="0.5411%" y="1877" width="0.0284%" height="15" fill="rgb(234,67,33)" fg:x="109025060" fg:w="5727499"/><text x="0.7911%" y="1887.50"></text></g><g><title>zap_p4d_range (5,727,499 samples, 0.03%)</title><rect x="0.5411%" y="1861" width="0.0284%" height="15" fill="rgb(247,98,35)" fg:x="109025060" fg:w="5727499"/><text x="0.7911%" y="1871.50"></text></g><g><title>zap_pte_range (5,727,499 samples, 0.03%)</title><rect x="0.5411%" y="1845" width="0.0284%" height="15" fill="rgb(247,138,52)" fg:x="109025060" fg:w="5727499"/><text x="0.7911%" y="1855.50"></text></g><g><title>entry_SYSCALL_64 (8,632,719 samples, 0.04%)</title><rect x="0.5302%" y="2053" width="0.0428%" height="15" fill="rgb(213,79,30)" fg:x="106822148" fg:w="8632719"/><text x="0.7802%" y="2063.50"></text></g><g><title>do_syscall_64 (8,632,719 samples, 0.04%)</title><rect x="0.5302%" y="2037" width="0.0428%" height="15" fill="rgb(246,177,23)" fg:x="106822148" fg:w="8632719"/><text x="0.7802%" y="2047.50"></text></g><g><title>[vmlinux] (8,632,719 samples, 0.04%)</title><rect x="0.5302%" y="2021" width="0.0428%" height="15" fill="rgb(230,62,27)" fg:x="106822148" fg:w="8632719"/><text x="0.7802%" y="2031.50"></text></g><g><title>[vmlinux] (8,632,719 samples, 0.04%)</title><rect x="0.5302%" y="2005" width="0.0428%" height="15" fill="rgb(216,154,8)" fg:x="106822148" fg:w="8632719"/><text x="0.7802%" y="2015.50"></text></g><g><title>do_exit (8,632,719 samples, 0.04%)</title><rect x="0.5302%" y="1989" width="0.0428%" height="15" fill="rgb(244,35,45)" fg:x="106822148" fg:w="8632719"/><text x="0.7802%" y="1999.50"></text></g><g><title>bpftool (118,114,471 samples, 0.59%)</title><rect x="0.0019%" y="2069" width="0.5862%" height="15" fill="rgb(251,115,12)" fg:x="376056" fg:w="118114471"/><text x="0.2519%" y="2079.50"></text></g><g><title>[unknown] (2,078,424 samples, 0.01%)</title><rect x="0.5881%" y="2053" width="0.0103%" height="15" fill="rgb(240,54,50)" fg:x="118490527" fg:w="2078424"/><text x="0.8381%" y="2063.50"></text></g><g><title>_dl_map_object (2,039,786 samples, 0.01%)</title><rect x="0.6084%" y="2053" width="0.0101%" height="15" fill="rgb(233,84,52)" fg:x="122590849" fg:w="2039786"/><text x="0.8584%" y="2063.50"></text></g><g><title>cat (6,562,303 samples, 0.03%)</title><rect x="0.5881%" y="2069" width="0.0326%" height="15" fill="rgb(207,117,47)" fg:x="118490527" fg:w="6562303"/><text x="0.8381%" y="2079.50"></text></g><g><title>__GI___execve (2,146,515 samples, 0.01%)</title><rect x="0.6300%" y="2037" width="0.0107%" height="15" fill="rgb(249,43,39)" fg:x="126931469" fg:w="2146515"/><text x="0.8800%" y="2047.50"></text></g><g><title>entry_SYSCALL_64 (2,146,515 samples, 0.01%)</title><rect x="0.6300%" y="2021" width="0.0107%" height="15" fill="rgb(209,38,44)" fg:x="126931469" fg:w="2146515"/><text x="0.8800%" y="2031.50"></text></g><g><title>do_syscall_64 (2,146,515 samples, 0.01%)</title><rect x="0.6300%" y="2005" width="0.0107%" height="15" fill="rgb(236,212,23)" fg:x="126931469" fg:w="2146515"/><text x="0.8800%" y="2015.50"></text></g><g><title>__x64_sys_execve (2,146,515 samples, 0.01%)</title><rect x="0.6300%" y="1989" width="0.0107%" height="15" fill="rgb(242,79,21)" fg:x="126931469" fg:w="2146515"/><text x="0.8800%" y="1999.50"></text></g><g><title>do_execveat_common (2,146,515 samples, 0.01%)</title><rect x="0.6300%" y="1973" width="0.0107%" height="15" fill="rgb(211,96,35)" fg:x="126931469" fg:w="2146515"/><text x="0.8800%" y="1983.50"></text></g><g><title>[unknown] (12,406,262 samples, 0.06%)</title><rect x="0.6221%" y="2053" width="0.0616%" height="15" fill="rgb(253,215,40)" fg:x="125349103" fg:w="12406262"/><text x="0.8721%" y="2063.50"></text></g><g><title>cpuUsage.sh (21,128,340 samples, 0.10%)</title><rect x="0.6221%" y="2069" width="0.1049%" height="15" fill="rgb(211,81,21)" fg:x="125349103" fg:w="21128340"/><text x="0.8721%" y="2079.50"></text></g><g><title>cursor-b1e87884 (2,124,097 samples, 0.01%)</title><rect x="0.7270%" y="2069" width="0.0105%" height="15" fill="rgb(208,190,38)" fg:x="146477443" fg:w="2124097"/><text x="0.9770%" y="2079.50"></text></g><g><title>[cursor-b1e87884330fc271d5eb589e368c35f14e76dec0] (2,124,097 samples, 0.01%)</title><rect x="0.7270%" y="2053" width="0.0105%" height="15" fill="rgb(235,213,38)" fg:x="146477443" fg:w="2124097"/><text x="0.9770%" y="2063.50"></text></g><g><title>[grep] (2,284,606 samples, 0.01%)</title><rect x="0.7375%" y="2037" width="0.0113%" height="15" fill="rgb(237,122,38)" fg:x="148601540" fg:w="2284606"/><text x="0.9875%" y="2047.50"></text></g><g><title>_dl_sysdep_start (2,541,556 samples, 0.01%)</title><rect x="0.7609%" y="2037" width="0.0126%" height="15" fill="rgb(244,218,35)" fg:x="153317267" fg:w="2541556"/><text x="1.0109%" y="2047.50"></text></g><g><title>[unknown] (8,661,195 samples, 0.04%)</title><rect x="0.7375%" y="2053" width="0.0430%" height="15" fill="rgb(240,68,47)" fg:x="148601540" fg:w="8661195"/><text x="0.9875%" y="2063.50"></text></g><g><title>entry_SYSCALL_64 (2,025,959 samples, 0.01%)</title><rect x="0.7975%" y="2053" width="0.0101%" height="15" fill="rgb(210,16,53)" fg:x="160679522" fg:w="2025959"/><text x="1.0475%" y="2063.50"></text></g><g><title>do_syscall_64 (2,025,959 samples, 0.01%)</title><rect x="0.7975%" y="2037" width="0.0101%" height="15" fill="rgb(235,124,12)" fg:x="160679522" fg:w="2025959"/><text x="1.0475%" y="2047.50"></text></g><g><title>[vmlinux] (2,025,959 samples, 0.01%)</title><rect x="0.7975%" y="2021" width="0.0101%" height="15" fill="rgb(224,169,11)" fg:x="160679522" fg:w="2025959"/><text x="1.0475%" y="2031.50"></text></g><g><title>[vmlinux] (2,025,959 samples, 0.01%)</title><rect x="0.7975%" y="2005" width="0.0101%" height="15" fill="rgb(250,166,2)" fg:x="160679522" fg:w="2025959"/><text x="1.0475%" y="2015.50"></text></g><g><title>do_exit (2,025,959 samples, 0.01%)</title><rect x="0.7975%" y="1989" width="0.0101%" height="15" fill="rgb(242,216,29)" fg:x="160679522" fg:w="2025959"/><text x="1.0475%" y="1999.50"></text></g><g><title>grep (15,598,525 samples, 0.08%)</title><rect x="0.7375%" y="2069" width="0.0774%" height="15" fill="rgb(230,116,27)" fg:x="148601540" fg:w="15598525"/><text x="0.9875%" y="2079.50"></text></g><g><title>[htop] (2,087,529 samples, 0.01%)</title><rect x="0.8257%" y="2037" width="0.0104%" height="15" fill="rgb(228,99,48)" fg:x="166376004" fg:w="2087529"/><text x="1.0757%" y="2047.50"></text></g><g><title>[unknown] (3,079,959 samples, 0.02%)</title><rect x="0.8361%" y="2037" width="0.0153%" height="15" fill="rgb(253,11,6)" fg:x="168463533" fg:w="3079959"/><text x="1.0861%" y="2047.50"></text></g><g><title>__x64_sys_newfstatat (3,677,198 samples, 0.02%)</title><rect x="0.8655%" y="1989" width="0.0183%" height="15" fill="rgb(247,143,39)" fg:x="174388511" fg:w="3677198"/><text x="1.1155%" y="1999.50"></text></g><g><title>__se_sys_newfstatat (3,677,198 samples, 0.02%)</title><rect x="0.8655%" y="1973" width="0.0183%" height="15" fill="rgb(236,97,10)" fg:x="174388511" fg:w="3677198"/><text x="1.1155%" y="1983.50"></text></g><g><title>vfs_fstatat (2,145,537 samples, 0.01%)</title><rect x="0.8731%" y="1957" width="0.0106%" height="15" fill="rgb(233,208,19)" fg:x="175920172" fg:w="2145537"/><text x="1.1231%" y="1967.50"></text></g><g><title>__GI___fstatat64 (5,218,721 samples, 0.03%)</title><rect x="0.8616%" y="2037" width="0.0259%" height="15" fill="rgb(216,164,2)" fg:x="173604474" fg:w="5218721"/><text x="1.1116%" y="2047.50"></text></g><g><title>entry_SYSCALL_64 (5,218,721 samples, 0.03%)</title><rect x="0.8616%" y="2021" width="0.0259%" height="15" fill="rgb(220,129,5)" fg:x="173604474" fg:w="5218721"/><text x="1.1116%" y="2031.50"></text></g><g><title>do_syscall_64 (4,434,684 samples, 0.02%)</title><rect x="0.8655%" y="2005" width="0.0220%" height="15" fill="rgb(242,17,10)" fg:x="174388511" fg:w="4434684"/><text x="1.1155%" y="2015.50"></text></g><g><title>proc_root_readdir (4,170,228 samples, 0.02%)</title><rect x="0.9020%" y="1941" width="0.0207%" height="15" fill="rgb(242,107,0)" fg:x="181736530" fg:w="4170228"/><text x="1.1520%" y="1951.50"></text></g><g><title>proc_pid_readdir (4,170,228 samples, 0.02%)</title><rect x="0.9020%" y="1925" width="0.0207%" height="15" fill="rgb(251,28,31)" fg:x="181736530" fg:w="4170228"/><text x="1.1520%" y="1935.50"></text></g><g><title>proc_fill_cache (4,170,228 samples, 0.02%)</title><rect x="0.9020%" y="1909" width="0.0207%" height="15" fill="rgb(233,223,10)" fg:x="181736530" fg:w="4170228"/><text x="1.1520%" y="1919.50"></text></g><g><title>d_hash_and_lookup (2,282,247 samples, 0.01%)</title><rect x="0.9364%" y="1909" width="0.0113%" height="15" fill="rgb(215,21,27)" fg:x="188661466" fg:w="2282247"/><text x="1.1864%" y="1919.50"></text></g><g><title>__d_lookup (2,282,247 samples, 0.01%)</title><rect x="0.9364%" y="1893" width="0.0113%" height="15" fill="rgb(232,23,21)" fg:x="188661466" fg:w="2282247"/><text x="1.1864%" y="1903.50"></text></g><g><title>proc_fill_cache (4,413,861 samples, 0.02%)</title><rect x="0.9296%" y="1925" width="0.0219%" height="15" fill="rgb(244,5,23)" fg:x="187302431" fg:w="4413861"/><text x="1.1796%" y="1935.50"></text></g><g><title>proc_task_readdir (7,179,167 samples, 0.04%)</title><rect x="0.9227%" y="1941" width="0.0356%" height="15" fill="rgb(226,81,46)" fg:x="185906758" fg:w="7179167"/><text x="1.1727%" y="1951.50"></text></g><g><title>security_file_permission (2,145,356 samples, 0.01%)</title><rect x="0.9583%" y="1941" width="0.0106%" height="15" fill="rgb(247,70,30)" fg:x="193085925" fg:w="2145356"/><text x="1.2083%" y="1951.50"></text></g><g><title>__x64_sys_getdents64 (17,764,666 samples, 0.09%)</title><rect x="0.8875%" y="1989" width="0.0882%" height="15" fill="rgb(212,68,19)" fg:x="178823195" fg:w="17764666"/><text x="1.1375%" y="1999.50"></text></g><g><title>__se_sys_getdents64 (17,764,666 samples, 0.09%)</title><rect x="0.8875%" y="1973" width="0.0882%" height="15" fill="rgb(240,187,13)" fg:x="178823195" fg:w="17764666"/><text x="1.1375%" y="1983.50"></text></g><g><title>iterate_dir (16,406,730 samples, 0.08%)</title><rect x="0.8943%" y="1957" width="0.0814%" height="15" fill="rgb(223,113,26)" fg:x="180181131" fg:w="16406730"/><text x="1.1443%" y="1967.50"></text></g><g><title>entry_SYSCALL_64 (19,822,130 samples, 0.10%)</title><rect x="0.8875%" y="2021" width="0.0984%" height="15" fill="rgb(206,192,2)" fg:x="178823195" fg:w="19822130"/><text x="1.1375%" y="2031.50"></text></g><g><title>do_syscall_64 (19,822,130 samples, 0.10%)</title><rect x="0.8875%" y="2005" width="0.0984%" height="15" fill="rgb(241,108,4)" fg:x="178823195" fg:w="19822130"/><text x="1.1375%" y="2015.50"></text></g><g><title>__GI___getdents64 (24,013,528 samples, 0.12%)</title><rect x="0.8875%" y="2037" width="0.1192%" height="15" fill="rgb(247,173,49)" fg:x="178823195" fg:w="24013528"/><text x="1.1375%" y="2047.50"></text></g><g><title>entry_ibpb (4,191,398 samples, 0.02%)</title><rect x="0.9859%" y="2021" width="0.0208%" height="15" fill="rgb(224,114,35)" fg:x="198645325" fg:w="4191398"/><text x="1.2359%" y="2031.50"></text></g><g><title>dput (3,402,141 samples, 0.02%)</title><rect x="1.0244%" y="1925" width="0.0169%" height="15" fill="rgb(245,159,27)" fg:x="206393636" fg:w="3402141"/><text x="1.2744%" y="1935.50"></text></g><g><title>__fput (10,520,815 samples, 0.05%)</title><rect x="1.0137%" y="1941" width="0.0522%" height="15" fill="rgb(245,172,44)" fg:x="204240181" fg:w="10520815"/><text x="1.2637%" y="1951.50"></text></g><g><title>single_release (2,153,199 samples, 0.01%)</title><rect x="1.0552%" y="1925" width="0.0107%" height="15" fill="rgb(236,23,11)" fg:x="212607797" fg:w="2153199"/><text x="1.3052%" y="1935.50"></text></g><g><title>kvfree (2,153,199 samples, 0.01%)</title><rect x="1.0552%" y="1909" width="0.0107%" height="15" fill="rgb(205,117,38)" fg:x="212607797" fg:w="2153199"/><text x="1.3052%" y="1919.50"></text></g><g><title>kfree (2,153,199 samples, 0.01%)</title><rect x="1.0552%" y="1893" width="0.0107%" height="15" fill="rgb(237,72,25)" fg:x="212607797" fg:w="2153199"/><text x="1.3052%" y="1903.50"></text></g><g><title>__kmem_cache_free (2,153,199 samples, 0.01%)</title><rect x="1.0552%" y="1877" width="0.0107%" height="15" fill="rgb(244,70,9)" fg:x="212607797" fg:w="2153199"/><text x="1.3052%" y="1887.50"></text></g><g><title>__fput_sync (11,178,383 samples, 0.06%)</title><rect x="1.0137%" y="1957" width="0.0555%" height="15" fill="rgb(217,125,39)" fg:x="204240181" fg:w="11178383"/><text x="1.2637%" y="1967.50"></text></g><g><title>__x64_sys_close (11,954,744 samples, 0.06%)</title><rect x="1.0137%" y="1989" width="0.0593%" height="15" fill="rgb(235,36,10)" fg:x="204240181" fg:w="11954744"/><text x="1.2637%" y="1999.50"></text></g><g><title>__se_sys_close (11,954,744 samples, 0.06%)</title><rect x="1.0137%" y="1973" width="0.0593%" height="15" fill="rgb(251,123,47)" fg:x="204240181" fg:w="11954744"/><text x="1.2637%" y="1983.50"></text></g><g><title>entry_SYSCALL_64 (15,452,153 samples, 0.08%)</title><rect x="1.0100%" y="2021" width="0.0767%" height="15" fill="rgb(221,13,13)" fg:x="203499457" fg:w="15452153"/><text x="1.2600%" y="2031.50"></text></g><g><title>do_syscall_64 (14,711,429 samples, 0.07%)</title><rect x="1.0137%" y="2005" width="0.0730%" height="15" fill="rgb(238,131,9)" fg:x="204240181" fg:w="14711429"/><text x="1.2637%" y="2015.50"></text></g><g><title>__close (17,681,281 samples, 0.09%)</title><rect x="1.0100%" y="2037" width="0.0878%" height="15" fill="rgb(211,50,8)" fg:x="203499457" fg:w="17681281"/><text x="1.2600%" y="2047.50"></text></g><g><title>entry_ibpb (2,229,128 samples, 0.01%)</title><rect x="1.0867%" y="2021" width="0.0111%" height="15" fill="rgb(245,182,24)" fg:x="218951610" fg:w="2229128"/><text x="1.3367%" y="2031.50"></text></g><g><title>__fput_sync (4,113,922 samples, 0.02%)</title><rect x="1.1079%" y="1957" width="0.0204%" height="15" fill="rgb(242,14,37)" fg:x="223224268" fg:w="4113922"/><text x="1.3579%" y="1967.50"></text></g><g><title>__fput (4,113,922 samples, 0.02%)</title><rect x="1.1079%" y="1941" width="0.0204%" height="15" fill="rgb(246,228,12)" fg:x="223224268" fg:w="4113922"/><text x="1.3579%" y="1951.50"></text></g><g><title>entry_SYSCALL_64 (6,939,088 samples, 0.03%)</title><rect x="1.0977%" y="2021" width="0.0344%" height="15" fill="rgb(213,55,15)" fg:x="221180738" fg:w="6939088"/><text x="1.3477%" y="2031.50"></text></g><g><title>do_syscall_64 (5,538,084 samples, 0.03%)</title><rect x="1.1047%" y="2005" width="0.0275%" height="15" fill="rgb(209,9,3)" fg:x="222581742" fg:w="5538084"/><text x="1.3547%" y="2015.50"></text></g><g><title>__x64_sys_close (4,895,558 samples, 0.02%)</title><rect x="1.1079%" y="1989" width="0.0243%" height="15" fill="rgb(230,59,30)" fg:x="223224268" fg:w="4895558"/><text x="1.3579%" y="1999.50"></text></g><g><title>__se_sys_close (4,895,558 samples, 0.02%)</title><rect x="1.1079%" y="1973" width="0.0243%" height="15" fill="rgb(209,121,21)" fg:x="223224268" fg:w="4895558"/><text x="1.3579%" y="1983.50"></text></g><g><title>__close_nocancel (9,065,832 samples, 0.04%)</title><rect x="1.0977%" y="2037" width="0.0450%" height="15" fill="rgb(220,109,13)" fg:x="221180738" fg:w="9065832"/><text x="1.3477%" y="2047.50"></text></g><g><title>entry_ibpb (2,126,744 samples, 0.01%)</title><rect x="1.1322%" y="2021" width="0.0106%" height="15" fill="rgb(232,18,1)" fg:x="228119826" fg:w="2126744"/><text x="1.3822%" y="2031.50"></text></g><g><title>memcg_slab_post_alloc_hook (5,644,279 samples, 0.03%)</title><rect x="1.2166%" y="1893" width="0.0280%" height="15" fill="rgb(215,41,42)" fg:x="245126423" fg:w="5644279"/><text x="1.4666%" y="1903.50"></text></g><g><title>mod_objcg_state (2,029,286 samples, 0.01%)</title><rect x="1.2345%" y="1877" width="0.0101%" height="15" fill="rgb(224,123,36)" fg:x="248741416" fg:w="2029286"/><text x="1.4845%" y="1887.50"></text></g><g><title>kmem_cache_alloc (9,043,134 samples, 0.04%)</title><rect x="1.2030%" y="1909" width="0.0449%" height="15" fill="rgb(240,125,3)" fg:x="242385100" fg:w="9043134"/><text x="1.4530%" y="1919.50"></text></g><g><title>alloc_empty_file (14,047,338 samples, 0.07%)</title><rect x="1.1884%" y="1925" width="0.0697%" height="15" fill="rgb(205,98,50)" fg:x="239454263" fg:w="14047338"/><text x="1.4384%" y="1935.50"></text></g><g><title>security_file_alloc (2,073,367 samples, 0.01%)</title><rect x="1.2479%" y="1909" width="0.0103%" height="15" fill="rgb(205,185,37)" fg:x="251428234" fg:w="2073367"/><text x="1.4979%" y="1919.50"></text></g><g><title>d_alloc_parallel (2,049,345 samples, 0.01%)</title><rect x="1.2617%" y="1925" width="0.0102%" height="15" fill="rgb(238,207,15)" fg:x="254215995" fg:w="2049345"/><text x="1.5117%" y="1935.50"></text></g><g><title>__d_alloc (2,049,345 samples, 0.01%)</title><rect x="1.2617%" y="1909" width="0.0102%" height="15" fill="rgb(213,199,42)" fg:x="254215995" fg:w="2049345"/><text x="1.5117%" y="1919.50"></text></g><g><title>link_path_walk (2,794,891 samples, 0.01%)</title><rect x="1.2828%" y="1893" width="0.0139%" height="15" fill="rgb(235,201,11)" fg:x="258456268" fg:w="2794891"/><text x="1.5328%" y="1903.50"></text></g><g><title>do_o_path (7,135,052 samples, 0.04%)</title><rect x="1.2719%" y="1925" width="0.0354%" height="15" fill="rgb(207,46,11)" fg:x="256265340" fg:w="7135052"/><text x="1.5219%" y="1935.50"></text></g><g><title>path_lookupat (6,379,750 samples, 0.03%)</title><rect x="1.2756%" y="1909" width="0.0317%" height="15" fill="rgb(241,35,35)" fg:x="257020642" fg:w="6379750"/><text x="1.5256%" y="1919.50"></text></g><g><title>walk_component (2,149,233 samples, 0.01%)</title><rect x="1.2966%" y="1893" width="0.0107%" height="15" fill="rgb(243,32,47)" fg:x="261251159" fg:w="2149233"/><text x="1.5466%" y="1903.50"></text></g><g><title>lookup_fast (2,149,233 samples, 0.01%)</title><rect x="1.2966%" y="1877" width="0.0107%" height="15" fill="rgb(247,202,23)" fg:x="261251159" fg:w="2149233"/><text x="1.5466%" y="1887.50"></text></g><g><title>link_path_walk (2,136,171 samples, 0.01%)</title><rect x="1.3140%" y="1925" width="0.0106%" height="15" fill="rgb(219,102,11)" fg:x="264750671" fg:w="2136171"/><text x="1.5640%" y="1935.50"></text></g><g><title>lookup_fast (2,836,248 samples, 0.01%)</title><rect x="1.3246%" y="1925" width="0.0141%" height="15" fill="rgb(243,110,44)" fg:x="266886842" fg:w="2836248"/><text x="1.5746%" y="1935.50"></text></g><g><title>[nfsv3.ko] (3,390,853 samples, 0.02%)</title><rect x="1.3805%" y="1909" width="0.0168%" height="15" fill="rgb(222,74,54)" fg:x="278154192" fg:w="3390853"/><text x="1.6305%" y="1919.50"></text></g><g><title>vfs_open (2,652,851 samples, 0.01%)</title><rect x="1.3842%" y="1893" width="0.0132%" height="15" fill="rgb(216,99,12)" fg:x="278892194" fg:w="2652851"/><text x="1.6342%" y="1903.50"></text></g><g><title>do_dentry_open (2,652,851 samples, 0.01%)</title><rect x="1.3842%" y="1877" width="0.0132%" height="15" fill="rgb(226,22,26)" fg:x="278892194" fg:w="2652851"/><text x="1.6342%" y="1887.50"></text></g><g><title>path_openat (46,290,172 samples, 0.23%)</title><rect x="1.1713%" y="1941" width="0.2297%" height="15" fill="rgb(217,163,10)" fg:x="236003437" fg:w="46290172"/><text x="1.4213%" y="1951.50"></text></g><g><title>vfs_open (4,139,417 samples, 0.02%)</title><rect x="1.3805%" y="1925" width="0.0205%" height="15" fill="rgb(213,25,53)" fg:x="278154192" fg:w="4139417"/><text x="1.6305%" y="1935.50"></text></g><g><title>[nfsv3.ko] (2,927,142 samples, 0.01%)</title><rect x="1.4011%" y="1925" width="0.0145%" height="15" fill="rgb(252,105,26)" fg:x="282293609" fg:w="2927142"/><text x="1.6511%" y="1935.50"></text></g><g><title>vfs_open (2,226,540 samples, 0.01%)</title><rect x="1.4045%" y="1909" width="0.0111%" height="15" fill="rgb(220,39,43)" fg:x="282994211" fg:w="2226540"/><text x="1.6545%" y="1919.50"></text></g><g><title>do_filp_open (51,282,935 samples, 0.25%)</title><rect x="1.1677%" y="1957" width="0.2545%" height="15" fill="rgb(229,68,48)" fg:x="235282716" fg:w="51282935"/><text x="1.4177%" y="1967.50"></text></g><g><title>vfs_open (4,272,042 samples, 0.02%)</title><rect x="1.4011%" y="1941" width="0.0212%" height="15" fill="rgb(252,8,32)" fg:x="282293609" fg:w="4272042"/><text x="1.6511%" y="1951.50"></text></g><g><title>get_unused_fd_flags (2,237,577 samples, 0.01%)</title><rect x="1.4223%" y="1957" width="0.0111%" height="15" fill="rgb(223,20,43)" fg:x="286565651" fg:w="2237577"/><text x="1.6723%" y="1967.50"></text></g><g><title>alloc_fd (2,237,577 samples, 0.01%)</title><rect x="1.4223%" y="1941" width="0.0111%" height="15" fill="rgb(229,81,49)" fg:x="286565651" fg:w="2237577"/><text x="1.6723%" y="1951.50"></text></g><g><title>kmem_cache_alloc (2,178,179 samples, 0.01%)</title><rect x="1.4361%" y="1925" width="0.0108%" height="15" fill="rgb(236,28,36)" fg:x="289350698" fg:w="2178179"/><text x="1.6861%" y="1935.50"></text></g><g><title>memset_orig (3,612,241 samples, 0.02%)</title><rect x="1.4469%" y="1925" width="0.0179%" height="15" fill="rgb(249,185,26)" fg:x="291528877" fg:w="3612241"/><text x="1.6969%" y="1935.50"></text></g><g><title>getname (7,707,677 samples, 0.04%)</title><rect x="1.4334%" y="1957" width="0.0383%" height="15" fill="rgb(249,174,33)" fg:x="288803228" fg:w="7707677"/><text x="1.6834%" y="1967.50"></text></g><g><title>getname_flags (7,160,207 samples, 0.04%)</title><rect x="1.4361%" y="1941" width="0.0355%" height="15" fill="rgb(233,201,37)" fg:x="289350698" fg:w="7160207"/><text x="1.6861%" y="1951.50"></text></g><g><title>do_sys_openat2 (64,866,466 samples, 0.32%)</title><rect x="1.1605%" y="1973" width="0.3219%" height="15" fill="rgb(221,78,26)" fg:x="233828710" fg:w="64866466"/><text x="1.4105%" y="1983.50"></text></g><g><title>__x64_sys_openat (65,639,023 samples, 0.33%)</title><rect x="1.1605%" y="1989" width="0.3258%" height="15" fill="rgb(250,127,30)" fg:x="233828710" fg:w="65639023"/><text x="1.4105%" y="1999.50"></text></g><g><title>syscall_exit_to_user_mode (2,883,780 samples, 0.01%)</title><rect x="1.4863%" y="1989" width="0.0143%" height="15" fill="rgb(230,49,44)" fg:x="299467733" fg:w="2883780"/><text x="1.7363%" y="1999.50"></text></g><g><title>entry_SYSCALL_64 (71,378,056 samples, 0.35%)</title><rect x="1.1501%" y="2021" width="0.3543%" height="15" fill="rgb(229,67,23)" fg:x="231719488" fg:w="71378056"/><text x="1.4001%" y="2031.50"></text></g><g><title>do_syscall_64 (69,268,834 samples, 0.34%)</title><rect x="1.1605%" y="2005" width="0.3438%" height="15" fill="rgb(249,83,47)" fg:x="233828710" fg:w="69268834"/><text x="1.4105%" y="2015.50"></text></g><g><title>__libc_openat64 (77,050,904 samples, 0.38%)</title><rect x="1.1464%" y="2037" width="0.3824%" height="15" fill="rgb(215,43,3)" fg:x="230979845" fg:w="77050904"/><text x="1.3964%" y="2047.50"></text></g><g><title>entry_ibpb (4,933,205 samples, 0.02%)</title><rect x="1.5043%" y="2021" width="0.0245%" height="15" fill="rgb(238,154,13)" fg:x="303097544" fg:w="4933205"/><text x="1.7543%" y="2031.50"></text></g><g><title>security_file_permission (3,001,622 samples, 0.01%)</title><rect x="1.5509%" y="1941" width="0.0149%" height="15" fill="rgb(219,56,2)" fg:x="312486556" fg:w="3001622"/><text x="1.8009%" y="1951.50"></text></g><g><title>obj_cgroup_charge (2,082,252 samples, 0.01%)</title><rect x="1.5986%" y="1861" width="0.0103%" height="15" fill="rgb(233,0,4)" fg:x="322086336" fg:w="2082252"/><text x="1.8486%" y="1871.50"></text></g><g><title>obj_cgroup_charge_pages (2,082,252 samples, 0.01%)</title><rect x="1.5986%" y="1845" width="0.0103%" height="15" fill="rgb(235,30,7)" fg:x="322086336" fg:w="2082252"/><text x="1.8486%" y="1855.50"></text></g><g><title>__kmem_cache_alloc_node (6,627,124 samples, 0.03%)</title><rect x="1.5799%" y="1877" width="0.0329%" height="15" fill="rgb(250,79,13)" fg:x="318326037" fg:w="6627124"/><text x="1.8299%" y="1887.50"></text></g><g><title>kvmalloc_node (8,958,188 samples, 0.04%)</title><rect x="1.5799%" y="1909" width="0.0445%" height="15" fill="rgb(211,146,34)" fg:x="318326037" fg:w="8958188"/><text x="1.8299%" y="1919.50"></text></g><g><title>__kmalloc_node (8,958,188 samples, 0.04%)</title><rect x="1.5799%" y="1893" width="0.0445%" height="15" fill="rgb(228,22,38)" fg:x="318326037" fg:w="8958188"/><text x="1.8299%" y="1903.50"></text></g><g><title>memset_orig (2,331,064 samples, 0.01%)</title><rect x="1.6128%" y="1877" width="0.0116%" height="15" fill="rgb(235,168,5)" fg:x="324953161" fg:w="2331064"/><text x="1.8628%" y="1887.50"></text></g><g><title>do_task_stat (2,961,455 samples, 0.01%)</title><rect x="1.6316%" y="1877" width="0.0147%" height="15" fill="rgb(221,155,16)" fg:x="328742803" fg:w="2961455"/><text x="1.8816%" y="1887.50"></text></g><g><title>proc_tgid_stat (3,677,758 samples, 0.02%)</title><rect x="1.6316%" y="1893" width="0.0183%" height="15" fill="rgb(215,215,53)" fg:x="328742803" fg:w="3677758"/><text x="1.8816%" y="1903.50"></text></g><g><title>ptrace_may_access (2,122,613 samples, 0.01%)</title><rect x="1.6709%" y="1861" width="0.0105%" height="15" fill="rgb(223,4,10)" fg:x="336663348" fg:w="2122613"/><text x="1.9209%" y="1871.50"></text></g><g><title>seq_read_iter (26,716,350 samples, 0.13%)</title><rect x="1.5658%" y="1925" width="0.1326%" height="15" fill="rgb(234,103,6)" fg:x="315488178" fg:w="26716350"/><text x="1.8158%" y="1935.50"></text></g><g><title>proc_single_show (14,218,205 samples, 0.07%)</title><rect x="1.6278%" y="1909" width="0.0706%" height="15" fill="rgb(227,97,0)" fg:x="327986323" fg:w="14218205"/><text x="1.8778%" y="1919.50"></text></g><g><title>proc_tid_stat (9,783,967 samples, 0.05%)</title><rect x="1.6498%" y="1893" width="0.0486%" height="15" fill="rgb(234,150,53)" fg:x="332420561" fg:w="9783967"/><text x="1.8998%" y="1903.50"></text></g><g><title>do_task_stat (9,783,967 samples, 0.05%)</title><rect x="1.6498%" y="1877" width="0.0486%" height="15" fill="rgb(228,201,54)" fg:x="332420561" fg:w="9783967"/><text x="1.8998%" y="1887.50"></text></g><g><title>seq_put_decimal_ull (2,771,435 samples, 0.01%)</title><rect x="1.6846%" y="1861" width="0.0138%" height="15" fill="rgb(222,22,37)" fg:x="339433093" fg:w="2771435"/><text x="1.9346%" y="1871.50"></text></g><g><title>seq_read (27,480,655 samples, 0.14%)</title><rect x="1.5658%" y="1941" width="0.1364%" height="15" fill="rgb(237,53,32)" fg:x="315488178" fg:w="27480655"/><text x="1.8158%" y="1951.50"></text></g><g><title>__x64_sys_read (32,766,030 samples, 0.16%)</title><rect x="1.5434%" y="1989" width="0.1626%" height="15" fill="rgb(233,25,53)" fg:x="310981116" fg:w="32766030"/><text x="1.7934%" y="1999.50"></text></g><g><title>ksys_read (32,766,030 samples, 0.16%)</title><rect x="1.5434%" y="1973" width="0.1626%" height="15" fill="rgb(210,40,34)" fg:x="310981116" fg:w="32766030"/><text x="1.7934%" y="1983.50"></text></g><g><title>vfs_read (32,766,030 samples, 0.16%)</title><rect x="1.5434%" y="1957" width="0.1626%" height="15" fill="rgb(241,220,44)" fg:x="310981116" fg:w="32766030"/><text x="1.7934%" y="1967.50"></text></g><g><title>entry_SYSCALL_64 (36,295,295 samples, 0.18%)</title><rect x="1.5434%" y="2021" width="0.1801%" height="15" fill="rgb(235,28,35)" fg:x="310981116" fg:w="36295295"/><text x="1.7934%" y="2031.50"></text></g><g><title>do_syscall_64 (36,295,295 samples, 0.18%)</title><rect x="1.5434%" y="2005" width="0.1801%" height="15" fill="rgb(210,56,17)" fg:x="310981116" fg:w="36295295"/><text x="1.7934%" y="2015.50"></text></g><g><title>syscall_exit_to_user_mode (2,120,790 samples, 0.01%)</title><rect x="1.7131%" y="1989" width="0.0105%" height="15" fill="rgb(224,130,29)" fg:x="345155621" fg:w="2120790"/><text x="1.9631%" y="1999.50"></text></g><g><title>read (39,678,502 samples, 0.20%)</title><rect x="1.5398%" y="2037" width="0.1969%" height="15" fill="rgb(235,212,8)" fg:x="310246293" fg:w="39678502"/><text x="1.7898%" y="2047.50"></text></g><g><title>entry_ibpb (2,648,384 samples, 0.01%)</title><rect x="1.7236%" y="2021" width="0.0131%" height="15" fill="rgb(223,33,50)" fg:x="347276411" fg:w="2648384"/><text x="1.9736%" y="2031.50"></text></g><g><title>[unknown] (185,038,320 samples, 0.92%)</title><rect x="0.8223%" y="2053" width="0.9184%" height="15" fill="rgb(219,149,13)" fg:x="165677100" fg:w="185038320"/><text x="1.0723%" y="2063.50"></text></g><g><title>__GI_____strtoll_l_internal (2,166,852 samples, 0.01%)</title><rect x="1.7406%" y="2053" width="0.0108%" height="15" fill="rgb(250,156,29)" fg:x="350715420" fg:w="2166852"/><text x="1.9906%" y="2063.50"></text></g><g><title>__GI_____strtoull_l_internal (2,112,509 samples, 0.01%)</title><rect x="1.7514%" y="2053" width="0.0105%" height="15" fill="rgb(216,193,19)" fg:x="352882272" fg:w="2112509"/><text x="2.0014%" y="2063.50"></text></g><g><title>entry_SYSCALL_64 (5,839,729 samples, 0.03%)</title><rect x="1.7657%" y="2037" width="0.0290%" height="15" fill="rgb(216,135,14)" fg:x="355756280" fg:w="5839729"/><text x="2.0157%" y="2047.50"></text></g><g><title>do_syscall_64 (5,839,729 samples, 0.03%)</title><rect x="1.7657%" y="2021" width="0.0290%" height="15" fill="rgb(241,47,5)" fg:x="355756280" fg:w="5839729"/><text x="2.0157%" y="2031.50"></text></g><g><title>syscall_exit_to_user_mode (3,008,543 samples, 0.01%)</title><rect x="1.7797%" y="2005" width="0.0149%" height="15" fill="rgb(233,42,35)" fg:x="358587466" fg:w="3008543"/><text x="2.0297%" y="2015.50"></text></g><g><title>syscall_exit_work (2,250,194 samples, 0.01%)</title><rect x="1.7835%" y="1989" width="0.0112%" height="15" fill="rgb(231,13,6)" fg:x="359345815" fg:w="2250194"/><text x="2.0335%" y="1999.50"></text></g><g><title>__GI___fcntl64_nocancel (7,912,429 samples, 0.04%)</title><rect x="1.7619%" y="2053" width="0.0393%" height="15" fill="rgb(207,181,40)" fg:x="354994781" fg:w="7912429"/><text x="2.0119%" y="2063.50"></text></g><g><title>__x64_sys_newfstatat (3,394,059 samples, 0.02%)</title><rect x="1.8012%" y="2005" width="0.0168%" height="15" fill="rgb(254,173,49)" fg:x="362907210" fg:w="3394059"/><text x="2.0512%" y="2015.50"></text></g><g><title>__se_sys_newfstatat (3,394,059 samples, 0.02%)</title><rect x="1.8012%" y="1989" width="0.0168%" height="15" fill="rgb(221,1,38)" fg:x="362907210" fg:w="3394059"/><text x="2.0512%" y="1999.50"></text></g><g><title>vfs_fstatat (2,701,234 samples, 0.01%)</title><rect x="1.8046%" y="1973" width="0.0134%" height="15" fill="rgb(206,124,46)" fg:x="363600035" fg:w="2701234"/><text x="2.0546%" y="1983.50"></text></g><g><title>vfs_fstat (2,701,234 samples, 0.01%)</title><rect x="1.8046%" y="1957" width="0.0134%" height="15" fill="rgb(249,21,11)" fg:x="363600035" fg:w="2701234"/><text x="2.0546%" y="1967.50"></text></g><g><title>do_syscall_64 (5,463,738 samples, 0.03%)</title><rect x="1.8012%" y="2021" width="0.0271%" height="15" fill="rgb(222,201,40)" fg:x="362907210" fg:w="5463738"/><text x="2.0512%" y="2031.50"></text></g><g><title>entry_SYSCALL_64 (6,164,836 samples, 0.03%)</title><rect x="1.8012%" y="2037" width="0.0306%" height="15" fill="rgb(235,61,29)" fg:x="362907210" fg:w="6164836"/><text x="2.0512%" y="2047.50"></text></g><g><title>__GI___fstatat64 (9,427,444 samples, 0.05%)</title><rect x="1.8012%" y="2053" width="0.0468%" height="15" fill="rgb(219,207,3)" fg:x="362907210" fg:w="9427444"/><text x="2.0512%" y="2063.50"></text></g><g><title>entry_ibpb (3,262,608 samples, 0.02%)</title><rect x="1.8318%" y="2037" width="0.0162%" height="15" fill="rgb(222,56,46)" fg:x="369072046" fg:w="3262608"/><text x="2.0818%" y="2047.50"></text></g><g><title>__GI___libc_write (2,979,256 samples, 0.01%)</title><rect x="1.8479%" y="2053" width="0.0148%" height="15" fill="rgb(239,76,54)" fg:x="372334654" fg:w="2979256"/><text x="2.0979%" y="2063.50"></text></g><g><title>entry_SYSCALL_64 (2,979,256 samples, 0.01%)</title><rect x="1.8479%" y="2037" width="0.0148%" height="15" fill="rgb(231,124,27)" fg:x="372334654" fg:w="2979256"/><text x="2.0979%" y="2047.50"></text></g><g><title>do_syscall_64 (2,979,256 samples, 0.01%)</title><rect x="1.8479%" y="2021" width="0.0148%" height="15" fill="rgb(249,195,6)" fg:x="372334654" fg:w="2979256"/><text x="2.0979%" y="2031.50"></text></g><g><title>__x64_sys_write (2,979,256 samples, 0.01%)</title><rect x="1.8479%" y="2005" width="0.0148%" height="15" fill="rgb(237,174,47)" fg:x="372334654" fg:w="2979256"/><text x="2.0979%" y="2015.50"></text></g><g><title>ksys_write (2,979,256 samples, 0.01%)</title><rect x="1.8479%" y="1989" width="0.0148%" height="15" fill="rgb(206,201,31)" fg:x="372334654" fg:w="2979256"/><text x="2.0979%" y="1999.50"></text></g><g><title>vfs_write (2,979,256 samples, 0.01%)</title><rect x="1.8479%" y="1973" width="0.0148%" height="15" fill="rgb(231,57,52)" fg:x="372334654" fg:w="2979256"/><text x="2.0979%" y="1983.50"></text></g><g><title>tty_write (2,230,027 samples, 0.01%)</title><rect x="1.8517%" y="1957" width="0.0111%" height="15" fill="rgb(248,177,22)" fg:x="373083883" fg:w="2230027"/><text x="2.1017%" y="1967.50"></text></g><g><title>file_tty_write (2,230,027 samples, 0.01%)</title><rect x="1.8517%" y="1941" width="0.0111%" height="15" fill="rgb(215,211,37)" fg:x="373083883" fg:w="2230027"/><text x="2.1017%" y="1951.50"></text></g><g><title>n_tty_write (2,230,027 samples, 0.01%)</title><rect x="1.8517%" y="1925" width="0.0111%" height="15" fill="rgb(241,128,51)" fg:x="373083883" fg:w="2230027"/><text x="2.1017%" y="1935.50"></text></g><g><title>__x64_sys_close (4,371,297 samples, 0.02%)</title><rect x="1.8805%" y="2005" width="0.0217%" height="15" fill="rgb(227,165,31)" fg:x="378902534" fg:w="4371297"/><text x="2.1305%" y="2015.50"></text></g><g><title>__se_sys_close (4,371,297 samples, 0.02%)</title><rect x="1.8805%" y="1989" width="0.0217%" height="15" fill="rgb(228,167,24)" fg:x="378902534" fg:w="4371297"/><text x="2.1305%" y="1999.50"></text></g><g><title>__fput_sync (4,371,297 samples, 0.02%)</title><rect x="1.8805%" y="1973" width="0.0217%" height="15" fill="rgb(228,143,12)" fg:x="378902534" fg:w="4371297"/><text x="2.1305%" y="1983.50"></text></g><g><title>__fput (4,371,297 samples, 0.02%)</title><rect x="1.8805%" y="1957" width="0.0217%" height="15" fill="rgb(249,149,8)" fg:x="378902534" fg:w="4371297"/><text x="2.1305%" y="1967.50"></text></g><g><title>entry_SYSCALL_64 (10,289,755 samples, 0.05%)</title><rect x="1.8692%" y="2037" width="0.0511%" height="15" fill="rgb(243,35,44)" fg:x="376627214" fg:w="10289755"/><text x="2.1192%" y="2047.50"></text></g><g><title>do_syscall_64 (9,555,990 samples, 0.05%)</title><rect x="1.8729%" y="2021" width="0.0474%" height="15" fill="rgb(246,89,9)" fg:x="377360979" fg:w="9555990"/><text x="2.1229%" y="2031.50"></text></g><g><title>syscall_exit_to_user_mode (2,944,757 samples, 0.01%)</title><rect x="1.9057%" y="2005" width="0.0146%" height="15" fill="rgb(233,213,13)" fg:x="383972212" fg:w="2944757"/><text x="2.1557%" y="2015.50"></text></g><g><title>__close (11,778,194 samples, 0.06%)</title><rect x="1.8656%" y="2053" width="0.0585%" height="15" fill="rgb(233,141,41)" fg:x="375890071" fg:w="11778194"/><text x="2.1156%" y="2063.50"></text></g><g><title>__fput_sync (4,669,680 samples, 0.02%)</title><rect x="1.9240%" y="1973" width="0.0232%" height="15" fill="rgb(239,167,4)" fg:x="387668265" fg:w="4669680"/><text x="2.1740%" y="1983.50"></text></g><g><title>__fput (4,669,680 samples, 0.02%)</title><rect x="1.9240%" y="1957" width="0.0232%" height="15" fill="rgb(209,217,16)" fg:x="387668265" fg:w="4669680"/><text x="2.1740%" y="1967.50"></text></g><g><title>single_release (2,187,040 samples, 0.01%)</title><rect x="1.9364%" y="1941" width="0.0109%" height="15" fill="rgb(219,88,35)" fg:x="390150905" fg:w="2187040"/><text x="2.1864%" y="1951.50"></text></g><g><title>__close_nocancel (5,277,532 samples, 0.03%)</title><rect x="1.9240%" y="2053" width="0.0262%" height="15" fill="rgb(220,193,23)" fg:x="387668265" fg:w="5277532"/><text x="2.1740%" y="2063.50"></text></g><g><title>entry_SYSCALL_64 (5,277,532 samples, 0.03%)</title><rect x="1.9240%" y="2037" width="0.0262%" height="15" fill="rgb(230,90,52)" fg:x="387668265" fg:w="5277532"/><text x="2.1740%" y="2047.50"></text></g><g><title>do_syscall_64 (5,277,532 samples, 0.03%)</title><rect x="1.9240%" y="2021" width="0.0262%" height="15" fill="rgb(252,106,19)" fg:x="387668265" fg:w="5277532"/><text x="2.1740%" y="2031.50"></text></g><g><title>__x64_sys_close (5,277,532 samples, 0.03%)</title><rect x="1.9240%" y="2005" width="0.0262%" height="15" fill="rgb(206,74,20)" fg:x="387668265" fg:w="5277532"/><text x="2.1740%" y="2015.50"></text></g><g><title>__se_sys_close (5,277,532 samples, 0.03%)</title><rect x="1.9240%" y="1989" width="0.0262%" height="15" fill="rgb(230,138,44)" fg:x="387668265" fg:w="5277532"/><text x="2.1740%" y="1999.50"></text></g><g><title>entry_SYSCALL_64 (2,908,192 samples, 0.01%)</title><rect x="1.9502%" y="2037" width="0.0144%" height="15" fill="rgb(235,182,43)" fg:x="392945797" fg:w="2908192"/><text x="2.2002%" y="2047.50"></text></g><g><title>do_syscall_64 (2,908,192 samples, 0.01%)</title><rect x="1.9502%" y="2021" width="0.0144%" height="15" fill="rgb(242,16,51)" fg:x="392945797" fg:w="2908192"/><text x="2.2002%" y="2031.50"></text></g><g><title>__fcntl64_nocancel_adjusted (4,434,798 samples, 0.02%)</title><rect x="1.9502%" y="2053" width="0.0220%" height="15" fill="rgb(248,9,4)" fg:x="392945797" fg:w="4434798"/><text x="2.2002%" y="2063.50"></text></g><g><title>kmem_cache_alloc (2,944,576 samples, 0.01%)</title><rect x="2.0015%" y="1925" width="0.0146%" height="15" fill="rgb(210,31,22)" fg:x="403276989" fg:w="2944576"/><text x="2.2515%" y="1935.50"></text></g><g><title>alloc_empty_file (5,188,860 samples, 0.03%)</title><rect x="1.9942%" y="1941" width="0.0258%" height="15" fill="rgb(239,54,39)" fg:x="401800460" fg:w="5188860"/><text x="2.2442%" y="1951.50"></text></g><g><title>path_openat (10,923,684 samples, 0.05%)</title><rect x="1.9869%" y="1957" width="0.0542%" height="15" fill="rgb(230,99,41)" fg:x="400337405" fg:w="10923684"/><text x="2.2369%" y="1967.50"></text></g><g><title>lookup_fast (2,187,405 samples, 0.01%)</title><rect x="2.0303%" y="1941" width="0.0109%" height="15" fill="rgb(253,106,12)" fg:x="409073684" fg:w="2187405"/><text x="2.2803%" y="1951.50"></text></g><g><title>do_filp_open (12,404,932 samples, 0.06%)</title><rect x="1.9832%" y="1973" width="0.0616%" height="15" fill="rgb(213,46,41)" fg:x="399583853" fg:w="12404932"/><text x="2.2332%" y="1983.50"></text></g><g><title>getname_flags (2,994,321 samples, 0.01%)</title><rect x="2.0448%" y="1957" width="0.0149%" height="15" fill="rgb(215,133,35)" fg:x="411988785" fg:w="2994321"/><text x="2.2948%" y="1967.50"></text></g><g><title>__x64_sys_openat (16,879,211 samples, 0.08%)</title><rect x="1.9797%" y="2005" width="0.0838%" height="15" fill="rgb(213,28,5)" fg:x="398872828" fg:w="16879211"/><text x="2.2297%" y="2015.50"></text></g><g><title>do_sys_openat2 (16,879,211 samples, 0.08%)</title><rect x="1.9797%" y="1989" width="0.0838%" height="15" fill="rgb(215,77,49)" fg:x="398872828" fg:w="16879211"/><text x="2.2297%" y="1999.50"></text></g><g><title>getname (3,763,254 samples, 0.02%)</title><rect x="2.0448%" y="1973" width="0.0187%" height="15" fill="rgb(248,100,22)" fg:x="411988785" fg:w="3763254"/><text x="2.2948%" y="1983.50"></text></g><g><title>__libc_openat64 (17,478,465 samples, 0.09%)</title><rect x="1.9797%" y="2053" width="0.0867%" height="15" fill="rgb(208,67,9)" fg:x="398872828" fg:w="17478465"/><text x="2.2297%" y="2063.50"></text></g><g><title>entry_SYSCALL_64 (17,478,465 samples, 0.09%)</title><rect x="1.9797%" y="2037" width="0.0867%" height="15" fill="rgb(219,133,21)" fg:x="398872828" fg:w="17478465"/><text x="2.2297%" y="2047.50"></text></g><g><title>do_syscall_64 (17,478,465 samples, 0.09%)</title><rect x="1.9797%" y="2021" width="0.0867%" height="15" fill="rgb(246,46,29)" fg:x="398872828" fg:w="17478465"/><text x="2.2297%" y="2031.50"></text></g><g><title>htop (256,587,133 samples, 1.27%)</title><rect x="0.8149%" y="2069" width="1.2735%" height="15" fill="rgb(246,185,52)" fg:x="164200065" fg:w="256587133"/><text x="1.0649%" y="2079.50"></text></g><g><title>link_path_walk (2,267,797 samples, 0.01%)</title><rect x="2.0978%" y="1925" width="0.0113%" height="15" fill="rgb(252,136,11)" fg:x="422672899" fg:w="2267797"/><text x="2.3478%" y="1935.50"></text></g><g><title>path_openat (2,879,132 samples, 0.01%)</title><rect x="2.0974%" y="1941" width="0.0143%" height="15" fill="rgb(219,138,53)" fg:x="422594153" fg:w="2879132"/><text x="2.3474%" y="1951.50"></text></g><g><title>__GI___libc_open (3,581,706 samples, 0.02%)</title><rect x="2.0974%" y="2037" width="0.0178%" height="15" fill="rgb(211,51,23)" fg:x="422594153" fg:w="3581706"/><text x="2.3474%" y="2047.50"></text></g><g><title>entry_SYSCALL_64 (3,581,706 samples, 0.02%)</title><rect x="2.0974%" y="2021" width="0.0178%" height="15" fill="rgb(247,221,28)" fg:x="422594153" fg:w="3581706"/><text x="2.3474%" y="2031.50"></text></g><g><title>do_syscall_64 (3,581,706 samples, 0.02%)</title><rect x="2.0974%" y="2005" width="0.0178%" height="15" fill="rgb(251,222,45)" fg:x="422594153" fg:w="3581706"/><text x="2.3474%" y="2015.50"></text></g><g><title>__x64_sys_openat (3,581,706 samples, 0.02%)</title><rect x="2.0974%" y="1989" width="0.0178%" height="15" fill="rgb(217,162,53)" fg:x="422594153" fg:w="3581706"/><text x="2.3474%" y="1999.50"></text></g><g><title>do_sys_openat2 (3,581,706 samples, 0.02%)</title><rect x="2.0974%" y="1973" width="0.0178%" height="15" fill="rgb(229,93,14)" fg:x="422594153" fg:w="3581706"/><text x="2.3474%" y="1983.50"></text></g><g><title>do_filp_open (3,581,706 samples, 0.02%)</title><rect x="2.0974%" y="1957" width="0.0178%" height="15" fill="rgb(209,67,49)" fg:x="422594153" fg:w="3581706"/><text x="2.3474%" y="1967.50"></text></g><g><title>[unknown] (7,300,272 samples, 0.04%)</title><rect x="2.0946%" y="2053" width="0.0362%" height="15" fill="rgb(213,87,29)" fg:x="422027946" fg:w="7300272"/><text x="2.3446%" y="2063.50"></text></g><g><title>iostat (10,075,186 samples, 0.05%)</title><rect x="2.0919%" y="2069" width="0.0500%" height="15" fill="rgb(205,151,52)" fg:x="421481238" fg:w="10075186"/><text x="2.3419%" y="2079.50"></text></g><g><title>jbd2/sdb-8 (3,296,219 samples, 0.02%)</title><rect x="2.1444%" y="2069" width="0.0164%" height="15" fill="rgb(253,215,39)" fg:x="432072128" fg:w="3296219"/><text x="2.3944%" y="2079.50"></text></g><g><title>ret_from_fork_asm (3,296,219 samples, 0.02%)</title><rect x="2.1444%" y="2053" width="0.0164%" height="15" fill="rgb(221,220,41)" fg:x="432072128" fg:w="3296219"/><text x="2.3944%" y="2063.50"></text></g><g><title>ret_from_fork (3,296,219 samples, 0.02%)</title><rect x="2.1444%" y="2037" width="0.0164%" height="15" fill="rgb(218,133,21)" fg:x="432072128" fg:w="3296219"/><text x="2.3944%" y="2047.50"></text></g><g><title>kthread (3,296,219 samples, 0.02%)</title><rect x="2.1444%" y="2021" width="0.0164%" height="15" fill="rgb(221,193,43)" fg:x="432072128" fg:w="3296219"/><text x="2.3944%" y="2031.50"></text></g><g><title>kjournald2 (3,296,219 samples, 0.02%)</title><rect x="2.1444%" y="2005" width="0.0164%" height="15" fill="rgb(240,128,52)" fg:x="432072128" fg:w="3296219"/><text x="2.3944%" y="2015.50"></text></g><g><title>jbd2_journal_commit_transaction (3,296,219 samples, 0.02%)</title><rect x="2.1444%" y="1989" width="0.0164%" height="15" fill="rgb(253,114,12)" fg:x="432072128" fg:w="3296219"/><text x="2.3944%" y="1999.50"></text></g><g><title>__collapse_huge_page_copy_succeeded (3,336,040 samples, 0.02%)</title><rect x="2.1625%" y="1925" width="0.0166%" height="15" fill="rgb(215,223,47)" fg:x="435705156" fg:w="3336040"/><text x="2.4125%" y="1935.50"></text></g><g><title>release_pte_page (2,699,936 samples, 0.01%)</title><rect x="2.1656%" y="1909" width="0.0134%" height="15" fill="rgb(248,225,23)" fg:x="436341260" fg:w="2699936"/><text x="2.4156%" y="1919.50"></text></g><g><title>alloc_charge_hpage (2,115,378 samples, 0.01%)</title><rect x="2.1875%" y="1925" width="0.0105%" height="15" fill="rgb(250,108,0)" fg:x="440746207" fg:w="2115378"/><text x="2.4375%" y="1935.50"></text></g><g><title>__alloc_pages (2,115,378 samples, 0.01%)</title><rect x="2.1875%" y="1909" width="0.0105%" height="15" fill="rgb(228,208,7)" fg:x="440746207" fg:w="2115378"/><text x="2.4375%" y="1919.50"></text></g><g><title>get_page_from_freelist (2,115,378 samples, 0.01%)</title><rect x="2.1875%" y="1893" width="0.0105%" height="15" fill="rgb(244,45,10)" fg:x="440746207" fg:w="2115378"/><text x="2.4375%" y="1903.50"></text></g><g><title>clear_page_rep (2,115,378 samples, 0.01%)</title><rect x="2.1875%" y="1877" width="0.0105%" height="15" fill="rgb(207,125,25)" fg:x="440746207" fg:w="2115378"/><text x="2.4375%" y="1887.50"></text></g><g><title>collapse_huge_page (11,855,385 samples, 0.06%)</title><rect x="2.1625%" y="1941" width="0.0588%" height="15" fill="rgb(210,195,18)" fg:x="435705156" fg:w="11855385"/><text x="2.4125%" y="1951.50"></text></g><g><title>memcpy_orig (4,698,956 samples, 0.02%)</title><rect x="2.1980%" y="1925" width="0.0233%" height="15" fill="rgb(249,80,12)" fg:x="442861585" fg:w="4698956"/><text x="2.4480%" y="1935.50"></text></g><g><title>khugepaged (12,961,035 samples, 0.06%)</title><rect x="2.1608%" y="2069" width="0.0643%" height="15" fill="rgb(221,65,9)" fg:x="435368347" fg:w="12961035"/><text x="2.4108%" y="2079.50"></text></g><g><title>ret_from_fork_asm (12,961,035 samples, 0.06%)</title><rect x="2.1608%" y="2053" width="0.0643%" height="15" fill="rgb(235,49,36)" fg:x="435368347" fg:w="12961035"/><text x="2.4108%" y="2063.50"></text></g><g><title>ret_from_fork (12,961,035 samples, 0.06%)</title><rect x="2.1608%" y="2037" width="0.0643%" height="15" fill="rgb(225,32,20)" fg:x="435368347" fg:w="12961035"/><text x="2.4108%" y="2047.50"></text></g><g><title>kthread (12,961,035 samples, 0.06%)</title><rect x="2.1608%" y="2021" width="0.0643%" height="15" fill="rgb(215,141,46)" fg:x="435368347" fg:w="12961035"/><text x="2.4108%" y="2031.50"></text></g><g><title>khugepaged (12,961,035 samples, 0.06%)</title><rect x="2.1608%" y="2005" width="0.0643%" height="15" fill="rgb(250,160,47)" fg:x="435368347" fg:w="12961035"/><text x="2.4108%" y="2015.50"></text></g><g><title>khugepaged_do_scan (12,961,035 samples, 0.06%)</title><rect x="2.1608%" y="1989" width="0.0643%" height="15" fill="rgb(216,222,40)" fg:x="435368347" fg:w="12961035"/><text x="2.4108%" y="1999.50"></text></g><g><title>khugepaged_scan_mm_slot (12,961,035 samples, 0.06%)</title><rect x="2.1608%" y="1973" width="0.0643%" height="15" fill="rgb(234,217,39)" fg:x="435368347" fg:w="12961035"/><text x="2.4108%" y="1983.50"></text></g><g><title>hpage_collapse_scan_pmd (12,961,035 samples, 0.06%)</title><rect x="2.1608%" y="1957" width="0.0643%" height="15" fill="rgb(207,178,40)" fg:x="435368347" fg:w="12961035"/><text x="2.4108%" y="1967.50"></text></g><g><title>amd_iommu_map_pages (6,896,752 samples, 0.03%)</title><rect x="2.2690%" y="1733" width="0.0342%" height="15" fill="rgb(221,136,13)" fg:x="457164050" fg:w="6896752"/><text x="2.5190%" y="1743.50"></text></g><g><title>iommu_v1_map_pages (5,929,358 samples, 0.03%)</title><rect x="2.2738%" y="1717" width="0.0294%" height="15" fill="rgb(249,199,10)" fg:x="458131444" fg:w="5929358"/><text x="2.5238%" y="1727.50"></text></g><g><title>iommu_pgsize (3,036,157 samples, 0.02%)</title><rect x="2.3032%" y="1733" width="0.0151%" height="15" fill="rgb(249,222,13)" fg:x="464060802" fg:w="3036157"/><text x="2.5532%" y="1743.50"></text></g><g><title>__iommu_map_pages (11,083,343 samples, 0.06%)</title><rect x="2.2671%" y="1749" width="0.0550%" height="15" fill="rgb(244,185,38)" fg:x="456780655" fg:w="11083343"/><text x="2.5171%" y="1759.50"></text></g><g><title>__iommu_map (12,979,119 samples, 0.06%)</title><rect x="2.2623%" y="1765" width="0.0644%" height="15" fill="rgb(236,202,9)" fg:x="455823449" fg:w="12979119"/><text x="2.5123%" y="1775.50"></text></g><g><title>__ata_scsi_queuecmd (17,202,394 samples, 0.09%)</title><rect x="2.2429%" y="1861" width="0.0854%" height="15" fill="rgb(250,229,37)" fg:x="451907925" fg:w="17202394"/><text x="2.4929%" y="1871.50"></text></g><g><title>ata_qc_issue (17,202,394 samples, 0.09%)</title><rect x="2.2429%" y="1845" width="0.0854%" height="15" fill="rgb(206,174,23)" fg:x="451907925" fg:w="17202394"/><text x="2.4929%" y="1855.50"></text></g><g><title>dma_map_sg_attrs (15,675,702 samples, 0.08%)</title><rect x="2.2505%" y="1829" width="0.0778%" height="15" fill="rgb(211,33,43)" fg:x="453434617" fg:w="15675702"/><text x="2.5005%" y="1839.50"></text></g><g><title>__dma_map_sg_attrs (15,675,702 samples, 0.08%)</title><rect x="2.2505%" y="1813" width="0.0778%" height="15" fill="rgb(245,58,50)" fg:x="453434617" fg:w="15675702"/><text x="2.5005%" y="1823.50"></text></g><g><title>iommu_dma_map_sg (15,675,702 samples, 0.08%)</title><rect x="2.2505%" y="1797" width="0.0778%" height="15" fill="rgb(244,68,36)" fg:x="453434617" fg:w="15675702"/><text x="2.5005%" y="1807.50"></text></g><g><title>iommu_map_sg (13,286,870 samples, 0.07%)</title><rect x="2.2623%" y="1781" width="0.0659%" height="15" fill="rgb(232,229,15)" fg:x="455823449" fg:w="13286870"/><text x="2.5123%" y="1791.50"></text></g><g><title>scsi_dispatch_cmd (17,562,094 samples, 0.09%)</title><rect x="2.2429%" y="1893" width="0.0872%" height="15" fill="rgb(254,30,23)" fg:x="451907925" fg:w="17562094"/><text x="2.4929%" y="1903.50"></text></g><g><title>ata_scsi_queuecmd (17,562,094 samples, 0.09%)</title><rect x="2.2429%" y="1877" width="0.0872%" height="15" fill="rgb(235,160,14)" fg:x="451907925" fg:w="17562094"/><text x="2.4929%" y="1887.50"></text></g><g><title>blk_mq_dispatch_rq_list (20,161,524 samples, 0.10%)</title><rect x="2.2398%" y="1925" width="0.1001%" height="15" fill="rgb(212,155,44)" fg:x="451284022" fg:w="20161524"/><text x="2.4898%" y="1935.50"></text></g><g><title>scsi_queue_rq (20,161,524 samples, 0.10%)</title><rect x="2.2398%" y="1909" width="0.1001%" height="15" fill="rgb(226,2,50)" fg:x="451284022" fg:w="20161524"/><text x="2.4898%" y="1919.50"></text></g><g><title>blk_mq_run_work_fn (21,713,055 samples, 0.11%)</title><rect x="2.2379%" y="1973" width="0.1078%" height="15" fill="rgb(234,177,6)" fg:x="450915190" fg:w="21713055"/><text x="2.4879%" y="1983.50"></text></g><g><title>blk_mq_sched_dispatch_requests (21,713,055 samples, 0.11%)</title><rect x="2.2379%" y="1957" width="0.1078%" height="15" fill="rgb(217,24,9)" fg:x="450915190" fg:w="21713055"/><text x="2.4879%" y="1967.50"></text></g><g><title>__blk_mq_sched_dispatch_requests (21,713,055 samples, 0.11%)</title><rect x="2.2379%" y="1941" width="0.1078%" height="15" fill="rgb(220,13,46)" fg:x="450915190" fg:w="21713055"/><text x="2.4879%" y="1951.50"></text></g><g><title>process_one_work (22,885,626 samples, 0.11%)</title><rect x="2.2337%" y="1989" width="0.1136%" height="15" fill="rgb(239,221,27)" fg:x="450068421" fg:w="22885626"/><text x="2.4837%" y="1999.50"></text></g><g><title>kworker/0:1H-kb (25,912,805 samples, 0.13%)</title><rect x="2.2322%" y="2069" width="0.1286%" height="15" fill="rgb(222,198,25)" fg:x="449747262" fg:w="25912805"/><text x="2.4822%" y="2079.50"></text></g><g><title>ret_from_fork_asm (25,912,805 samples, 0.13%)</title><rect x="2.2322%" y="2053" width="0.1286%" height="15" fill="rgb(211,99,13)" fg:x="449747262" fg:w="25912805"/><text x="2.4822%" y="2063.50"></text></g><g><title>ret_from_fork (25,912,805 samples, 0.13%)</title><rect x="2.2322%" y="2037" width="0.1286%" height="15" fill="rgb(232,111,31)" fg:x="449747262" fg:w="25912805"/><text x="2.4822%" y="2047.50"></text></g><g><title>kthread (25,912,805 samples, 0.13%)</title><rect x="2.2322%" y="2021" width="0.1286%" height="15" fill="rgb(245,82,37)" fg:x="449747262" fg:w="25912805"/><text x="2.4822%" y="2031.50"></text></g><g><title>worker_thread (25,912,805 samples, 0.13%)</title><rect x="2.2322%" y="2005" width="0.1286%" height="15" fill="rgb(227,149,46)" fg:x="449747262" fg:w="25912805"/><text x="2.4822%" y="2015.50"></text></g><g><title>schedule (2,706,020 samples, 0.01%)</title><rect x="2.3473%" y="1989" width="0.0134%" height="15" fill="rgb(218,36,50)" fg:x="472954047" fg:w="2706020"/><text x="2.5973%" y="1999.50"></text></g><g><title>__sched_text_start (2,706,020 samples, 0.01%)</title><rect x="2.3473%" y="1973" width="0.0134%" height="15" fill="rgb(226,80,48)" fg:x="472954047" fg:w="2706020"/><text x="2.5973%" y="1983.50"></text></g><g><title>pick_next_task (2,706,020 samples, 0.01%)</title><rect x="2.3473%" y="1957" width="0.0134%" height="15" fill="rgb(238,224,15)" fg:x="472954047" fg:w="2706020"/><text x="2.5973%" y="1967.50"></text></g><g><title>pick_next_task_fair (2,398,914 samples, 0.01%)</title><rect x="2.3489%" y="1941" width="0.0119%" height="15" fill="rgb(241,136,10)" fg:x="473261153" fg:w="2398914"/><text x="2.5989%" y="1951.50"></text></g><g><title>newidle_balance (2,398,914 samples, 0.01%)</title><rect x="2.3489%" y="1925" width="0.0119%" height="15" fill="rgb(208,32,45)" fg:x="473261153" fg:w="2398914"/><text x="2.5989%" y="1935.50"></text></g><g><title>amd_iommu_map_pages (3,079,502 samples, 0.02%)</title><rect x="2.3800%" y="1733" width="0.0153%" height="15" fill="rgb(207,135,9)" fg:x="479540241" fg:w="3079502"/><text x="2.6300%" y="1743.50"></text></g><g><title>iommu_v1_map_pages (2,448,830 samples, 0.01%)</title><rect x="2.3831%" y="1717" width="0.0122%" height="15" fill="rgb(206,86,44)" fg:x="480170913" fg:w="2448830"/><text x="2.6331%" y="1727.50"></text></g><g><title>ata_qc_issue (4,874,338 samples, 0.02%)</title><rect x="2.3759%" y="1845" width="0.0242%" height="15" fill="rgb(245,177,15)" fg:x="478716470" fg:w="4874338"/><text x="2.6259%" y="1855.50"></text></g><g><title>dma_map_sg_attrs (4,874,338 samples, 0.02%)</title><rect x="2.3759%" y="1829" width="0.0242%" height="15" fill="rgb(206,64,50)" fg:x="478716470" fg:w="4874338"/><text x="2.6259%" y="1839.50"></text></g><g><title>__dma_map_sg_attrs (4,874,338 samples, 0.02%)</title><rect x="2.3759%" y="1813" width="0.0242%" height="15" fill="rgb(234,36,40)" fg:x="478716470" fg:w="4874338"/><text x="2.6259%" y="1823.50"></text></g><g><title>iommu_dma_map_sg (4,874,338 samples, 0.02%)</title><rect x="2.3759%" y="1797" width="0.0242%" height="15" fill="rgb(213,64,8)" fg:x="478716470" fg:w="4874338"/><text x="2.6259%" y="1807.50"></text></g><g><title>iommu_map_sg (4,874,338 samples, 0.02%)</title><rect x="2.3759%" y="1781" width="0.0242%" height="15" fill="rgb(210,75,36)" fg:x="478716470" fg:w="4874338"/><text x="2.6259%" y="1791.50"></text></g><g><title>__iommu_map (4,874,338 samples, 0.02%)</title><rect x="2.3759%" y="1765" width="0.0242%" height="15" fill="rgb(229,88,21)" fg:x="478716470" fg:w="4874338"/><text x="2.6259%" y="1775.50"></text></g><g><title>__iommu_map_pages (4,050,567 samples, 0.02%)</title><rect x="2.3800%" y="1749" width="0.0201%" height="15" fill="rgb(252,204,47)" fg:x="479540241" fg:w="4050567"/><text x="2.6300%" y="1759.50"></text></g><g><title>scsi_dispatch_cmd (5,386,885 samples, 0.03%)</title><rect x="2.3747%" y="1893" width="0.0267%" height="15" fill="rgb(208,77,27)" fg:x="478473114" fg:w="5386885"/><text x="2.6247%" y="1903.50"></text></g><g><title>ata_scsi_queuecmd (5,386,885 samples, 0.03%)</title><rect x="2.3747%" y="1877" width="0.0267%" height="15" fill="rgb(221,76,26)" fg:x="478473114" fg:w="5386885"/><text x="2.6247%" y="1887.50"></text></g><g><title>__ata_scsi_queuecmd (5,386,885 samples, 0.03%)</title><rect x="2.3747%" y="1861" width="0.0267%" height="15" fill="rgb(225,139,18)" fg:x="478473114" fg:w="5386885"/><text x="2.6247%" y="1871.50"></text></g><g><title>blk_mq_run_work_fn (6,056,664 samples, 0.03%)</title><rect x="2.3737%" y="1973" width="0.0301%" height="15" fill="rgb(230,137,11)" fg:x="478274561" fg:w="6056664"/><text x="2.6237%" y="1983.50"></text></g><g><title>blk_mq_sched_dispatch_requests (6,056,664 samples, 0.03%)</title><rect x="2.3737%" y="1957" width="0.0301%" height="15" fill="rgb(212,28,1)" fg:x="478274561" fg:w="6056664"/><text x="2.6237%" y="1967.50"></text></g><g><title>__blk_mq_sched_dispatch_requests (6,056,664 samples, 0.03%)</title><rect x="2.3737%" y="1941" width="0.0301%" height="15" fill="rgb(248,164,17)" fg:x="478274561" fg:w="6056664"/><text x="2.6237%" y="1951.50"></text></g><g><title>blk_mq_dispatch_rq_list (6,056,664 samples, 0.03%)</title><rect x="2.3737%" y="1925" width="0.0301%" height="15" fill="rgb(222,171,42)" fg:x="478274561" fg:w="6056664"/><text x="2.6237%" y="1935.50"></text></g><g><title>scsi_queue_rq (6,056,664 samples, 0.03%)</title><rect x="2.3737%" y="1909" width="0.0301%" height="15" fill="rgb(243,84,45)" fg:x="478274561" fg:w="6056664"/><text x="2.6237%" y="1919.50"></text></g><g><title>process_one_work (6,368,442 samples, 0.03%)</title><rect x="2.3737%" y="1989" width="0.0316%" height="15" fill="rgb(252,49,23)" fg:x="478274561" fg:w="6368442"/><text x="2.6237%" y="1999.50"></text></g><g><title>kworker/1:1H-kb (7,417,977 samples, 0.04%)</title><rect x="2.3714%" y="2069" width="0.0368%" height="15" fill="rgb(215,19,7)" fg:x="477811705" fg:w="7417977"/><text x="2.6214%" y="2079.50"></text></g><g><title>ret_from_fork_asm (7,417,977 samples, 0.04%)</title><rect x="2.3714%" y="2053" width="0.0368%" height="15" fill="rgb(238,81,41)" fg:x="477811705" fg:w="7417977"/><text x="2.6214%" y="2063.50"></text></g><g><title>ret_from_fork (7,417,977 samples, 0.04%)</title><rect x="2.3714%" y="2037" width="0.0368%" height="15" fill="rgb(210,199,37)" fg:x="477811705" fg:w="7417977"/><text x="2.6214%" y="2047.50"></text></g><g><title>kthread (7,417,977 samples, 0.04%)</title><rect x="2.3714%" y="2021" width="0.0368%" height="15" fill="rgb(244,192,49)" fg:x="477811705" fg:w="7417977"/><text x="2.6214%" y="2031.50"></text></g><g><title>worker_thread (7,417,977 samples, 0.04%)</title><rect x="2.3714%" y="2005" width="0.0368%" height="15" fill="rgb(226,211,11)" fg:x="477811705" fg:w="7417977"/><text x="2.6214%" y="2015.50"></text></g><g><title>iommu_dma_map_sg (2,464,061 samples, 0.01%)</title><rect x="2.4228%" y="1797" width="0.0122%" height="15" fill="rgb(236,162,54)" fg:x="488165894" fg:w="2464061"/><text x="2.6728%" y="1807.50"></text></g><g><title>__dma_map_sg_attrs (3,245,543 samples, 0.02%)</title><rect x="2.4203%" y="1813" width="0.0161%" height="15" fill="rgb(220,229,9)" fg:x="487652476" fg:w="3245543"/><text x="2.6703%" y="1823.50"></text></g><g><title>__ata_scsi_queuecmd (4,776,306 samples, 0.02%)</title><rect x="2.4155%" y="1861" width="0.0237%" height="15" fill="rgb(250,87,22)" fg:x="486694259" fg:w="4776306"/><text x="2.6655%" y="1871.50"></text></g><g><title>ata_qc_issue (4,776,306 samples, 0.02%)</title><rect x="2.4155%" y="1845" width="0.0237%" height="15" fill="rgb(239,43,17)" fg:x="486694259" fg:w="4776306"/><text x="2.6655%" y="1855.50"></text></g><g><title>dma_map_sg_attrs (3,818,089 samples, 0.02%)</title><rect x="2.4203%" y="1829" width="0.0189%" height="15" fill="rgb(231,177,25)" fg:x="487652476" fg:w="3818089"/><text x="2.6703%" y="1839.50"></text></g><g><title>blk_mq_dispatch_rq_list (5,389,322 samples, 0.03%)</title><rect x="2.4131%" y="1925" width="0.0267%" height="15" fill="rgb(219,179,1)" fg:x="486206514" fg:w="5389322"/><text x="2.6631%" y="1935.50"></text></g><g><title>scsi_queue_rq (5,289,868 samples, 0.03%)</title><rect x="2.4136%" y="1909" width="0.0263%" height="15" fill="rgb(238,219,53)" fg:x="486305968" fg:w="5289868"/><text x="2.6636%" y="1919.50"></text></g><g><title>scsi_dispatch_cmd (4,901,577 samples, 0.02%)</title><rect x="2.4155%" y="1893" width="0.0243%" height="15" fill="rgb(232,167,36)" fg:x="486694259" fg:w="4901577"/><text x="2.6655%" y="1903.50"></text></g><g><title>ata_scsi_queuecmd (4,901,577 samples, 0.02%)</title><rect x="2.4155%" y="1877" width="0.0243%" height="15" fill="rgb(244,19,51)" fg:x="486694259" fg:w="4901577"/><text x="2.6655%" y="1887.50"></text></g><g><title>process_one_work (6,160,269 samples, 0.03%)</title><rect x="2.4131%" y="1989" width="0.0306%" height="15" fill="rgb(224,6,22)" fg:x="486206514" fg:w="6160269"/><text x="2.6631%" y="1999.50"></text></g><g><title>blk_mq_run_work_fn (6,160,269 samples, 0.03%)</title><rect x="2.4131%" y="1973" width="0.0306%" height="15" fill="rgb(224,145,5)" fg:x="486206514" fg:w="6160269"/><text x="2.6631%" y="1983.50"></text></g><g><title>blk_mq_sched_dispatch_requests (6,160,269 samples, 0.03%)</title><rect x="2.4131%" y="1957" width="0.0306%" height="15" fill="rgb(234,130,49)" fg:x="486206514" fg:w="6160269"/><text x="2.6631%" y="1967.50"></text></g><g><title>__blk_mq_sched_dispatch_requests (6,160,269 samples, 0.03%)</title><rect x="2.4131%" y="1941" width="0.0306%" height="15" fill="rgb(254,6,2)" fg:x="486206514" fg:w="6160269"/><text x="2.6631%" y="1951.50"></text></g><g><title>kworker/2:1H-kb (8,364,304 samples, 0.04%)</title><rect x="2.4121%" y="2069" width="0.0415%" height="15" fill="rgb(208,96,46)" fg:x="486011149" fg:w="8364304"/><text x="2.6621%" y="2079.50"></text></g><g><title>ret_from_fork_asm (8,364,304 samples, 0.04%)</title><rect x="2.4121%" y="2053" width="0.0415%" height="15" fill="rgb(239,3,39)" fg:x="486011149" fg:w="8364304"/><text x="2.6621%" y="2063.50"></text></g><g><title>ret_from_fork (8,364,304 samples, 0.04%)</title><rect x="2.4121%" y="2037" width="0.0415%" height="15" fill="rgb(233,210,1)" fg:x="486011149" fg:w="8364304"/><text x="2.6621%" y="2047.50"></text></g><g><title>kthread (8,364,304 samples, 0.04%)</title><rect x="2.4121%" y="2021" width="0.0415%" height="15" fill="rgb(244,137,37)" fg:x="486011149" fg:w="8364304"/><text x="2.6621%" y="2031.50"></text></g><g><title>worker_thread (8,364,304 samples, 0.04%)</title><rect x="2.4121%" y="2005" width="0.0415%" height="15" fill="rgb(240,136,2)" fg:x="486011149" fg:w="8364304"/><text x="2.6621%" y="2015.50"></text></g><g><title>iommu_map_sg (2,574,221 samples, 0.01%)</title><rect x="2.4708%" y="1781" width="0.0128%" height="15" fill="rgb(239,18,37)" fg:x="497830841" fg:w="2574221"/><text x="2.7208%" y="1791.50"></text></g><g><title>__iommu_map (2,358,990 samples, 0.01%)</title><rect x="2.4719%" y="1765" width="0.0117%" height="15" fill="rgb(218,185,22)" fg:x="498046072" fg:w="2358990"/><text x="2.7219%" y="1775.50"></text></g><g><title>scsi_dispatch_cmd (3,607,857 samples, 0.02%)</title><rect x="2.4664%" y="1893" width="0.0179%" height="15" fill="rgb(225,218,4)" fg:x="496948130" fg:w="3607857"/><text x="2.7164%" y="1903.50"></text></g><g><title>ata_scsi_queuecmd (3,607,857 samples, 0.02%)</title><rect x="2.4664%" y="1877" width="0.0179%" height="15" fill="rgb(230,182,32)" fg:x="496948130" fg:w="3607857"/><text x="2.7164%" y="1887.50"></text></g><g><title>__ata_scsi_queuecmd (3,607,857 samples, 0.02%)</title><rect x="2.4664%" y="1861" width="0.0179%" height="15" fill="rgb(242,56,43)" fg:x="496948130" fg:w="3607857"/><text x="2.7164%" y="1871.50"></text></g><g><title>ata_qc_issue (3,607,857 samples, 0.02%)</title><rect x="2.4664%" y="1845" width="0.0179%" height="15" fill="rgb(233,99,24)" fg:x="496948130" fg:w="3607857"/><text x="2.7164%" y="1855.50"></text></g><g><title>dma_map_sg_attrs (3,419,424 samples, 0.02%)</title><rect x="2.4674%" y="1829" width="0.0170%" height="15" fill="rgb(234,209,42)" fg:x="497136563" fg:w="3419424"/><text x="2.7174%" y="1839.50"></text></g><g><title>__dma_map_sg_attrs (3,419,424 samples, 0.02%)</title><rect x="2.4674%" y="1813" width="0.0170%" height="15" fill="rgb(227,7,12)" fg:x="497136563" fg:w="3419424"/><text x="2.7174%" y="1823.50"></text></g><g><title>iommu_dma_map_sg (3,419,424 samples, 0.02%)</title><rect x="2.4674%" y="1797" width="0.0170%" height="15" fill="rgb(245,203,43)" fg:x="497136563" fg:w="3419424"/><text x="2.7174%" y="1807.50"></text></g><g><title>blk_mq_dispatch_rq_list (6,704,224 samples, 0.03%)</title><rect x="2.4596%" y="1925" width="0.0333%" height="15" fill="rgb(238,205,33)" fg:x="495570892" fg:w="6704224"/><text x="2.7096%" y="1935.50"></text></g><g><title>scsi_queue_rq (6,400,926 samples, 0.03%)</title><rect x="2.4611%" y="1909" width="0.0318%" height="15" fill="rgb(231,56,7)" fg:x="495874190" fg:w="6400926"/><text x="2.7111%" y="1919.50"></text></g><g><title>blk_mq_run_work_fn (8,889,094 samples, 0.04%)</title><rect x="2.4536%" y="1973" width="0.0441%" height="15" fill="rgb(244,186,29)" fg:x="494375453" fg:w="8889094"/><text x="2.7036%" y="1983.50"></text></g><g><title>blk_mq_sched_dispatch_requests (8,889,094 samples, 0.04%)</title><rect x="2.4536%" y="1957" width="0.0441%" height="15" fill="rgb(234,111,31)" fg:x="494375453" fg:w="8889094"/><text x="2.7036%" y="1967.50"></text></g><g><title>__blk_mq_sched_dispatch_requests (8,288,701 samples, 0.04%)</title><rect x="2.4566%" y="1941" width="0.0411%" height="15" fill="rgb(241,149,10)" fg:x="494975846" fg:w="8288701"/><text x="2.7066%" y="1951.50"></text></g><g><title>process_one_work (9,484,140 samples, 0.05%)</title><rect x="2.4536%" y="1989" width="0.0471%" height="15" fill="rgb(249,206,44)" fg:x="494375453" fg:w="9484140"/><text x="2.7036%" y="1999.50"></text></g><g><title>kworker/3:1H-kb (10,578,675 samples, 0.05%)</title><rect x="2.4536%" y="2069" width="0.0525%" height="15" fill="rgb(251,153,30)" fg:x="494375453" fg:w="10578675"/><text x="2.7036%" y="2079.50"></text></g><g><title>ret_from_fork_asm (10,578,675 samples, 0.05%)</title><rect x="2.4536%" y="2053" width="0.0525%" height="15" fill="rgb(239,152,38)" fg:x="494375453" fg:w="10578675"/><text x="2.7036%" y="2063.50"></text></g><g><title>ret_from_fork (10,578,675 samples, 0.05%)</title><rect x="2.4536%" y="2037" width="0.0525%" height="15" fill="rgb(249,139,47)" fg:x="494375453" fg:w="10578675"/><text x="2.7036%" y="2047.50"></text></g><g><title>kthread (10,578,675 samples, 0.05%)</title><rect x="2.4536%" y="2021" width="0.0525%" height="15" fill="rgb(244,64,35)" fg:x="494375453" fg:w="10578675"/><text x="2.7036%" y="2031.50"></text></g><g><title>worker_thread (10,578,675 samples, 0.05%)</title><rect x="2.4536%" y="2005" width="0.0525%" height="15" fill="rgb(216,46,15)" fg:x="494375453" fg:w="10578675"/><text x="2.7036%" y="2015.50"></text></g><g><title>__ata_scsi_queuecmd (3,447,414 samples, 0.02%)</title><rect x="2.5185%" y="1861" width="0.0171%" height="15" fill="rgb(250,74,19)" fg:x="507443254" fg:w="3447414"/><text x="2.7685%" y="1871.50"></text></g><g><title>ata_qc_issue (3,447,414 samples, 0.02%)</title><rect x="2.5185%" y="1845" width="0.0171%" height="15" fill="rgb(249,42,33)" fg:x="507443254" fg:w="3447414"/><text x="2.7685%" y="1855.50"></text></g><g><title>dma_map_sg_attrs (3,157,692 samples, 0.02%)</title><rect x="2.5199%" y="1829" width="0.0157%" height="15" fill="rgb(242,149,17)" fg:x="507732976" fg:w="3157692"/><text x="2.7699%" y="1839.50"></text></g><g><title>__dma_map_sg_attrs (3,157,692 samples, 0.02%)</title><rect x="2.5199%" y="1813" width="0.0157%" height="15" fill="rgb(244,29,21)" fg:x="507732976" fg:w="3157692"/><text x="2.7699%" y="1823.50"></text></g><g><title>iommu_dma_map_sg (3,157,692 samples, 0.02%)</title><rect x="2.5199%" y="1797" width="0.0157%" height="15" fill="rgb(220,130,37)" fg:x="507732976" fg:w="3157692"/><text x="2.7699%" y="1807.50"></text></g><g><title>iommu_map_sg (3,157,692 samples, 0.02%)</title><rect x="2.5199%" y="1781" width="0.0157%" height="15" fill="rgb(211,67,2)" fg:x="507732976" fg:w="3157692"/><text x="2.7699%" y="1791.50"></text></g><g><title>__iommu_map (3,157,692 samples, 0.02%)</title><rect x="2.5199%" y="1765" width="0.0157%" height="15" fill="rgb(235,68,52)" fg:x="507732976" fg:w="3157692"/><text x="2.7699%" y="1775.50"></text></g><g><title>__iommu_map_pages (2,846,044 samples, 0.01%)</title><rect x="2.5215%" y="1749" width="0.0141%" height="15" fill="rgb(246,142,3)" fg:x="508044624" fg:w="2846044"/><text x="2.7715%" y="1759.50"></text></g><g><title>scsi_dispatch_cmd (3,984,080 samples, 0.02%)</title><rect x="2.5185%" y="1893" width="0.0198%" height="15" fill="rgb(241,25,7)" fg:x="507443254" fg:w="3984080"/><text x="2.7685%" y="1903.50"></text></g><g><title>ata_scsi_queuecmd (3,984,080 samples, 0.02%)</title><rect x="2.5185%" y="1877" width="0.0198%" height="15" fill="rgb(242,119,39)" fg:x="507443254" fg:w="3984080"/><text x="2.7685%" y="1887.50"></text></g><g><title>blk_mq_dispatch_rq_list (5,567,761 samples, 0.03%)</title><rect x="2.5133%" y="1925" width="0.0276%" height="15" fill="rgb(241,98,45)" fg:x="506398173" fg:w="5567761"/><text x="2.7633%" y="1935.50"></text></g><g><title>scsi_queue_rq (4,843,253 samples, 0.02%)</title><rect x="2.5169%" y="1909" width="0.0240%" height="15" fill="rgb(254,28,30)" fg:x="507122681" fg:w="4843253"/><text x="2.7669%" y="1919.50"></text></g><g><title>process_one_work (6,406,436 samples, 0.03%)</title><rect x="2.5133%" y="1989" width="0.0318%" height="15" fill="rgb(241,142,54)" fg:x="506398173" fg:w="6406436"/><text x="2.7633%" y="1999.50"></text></g><g><title>blk_mq_run_work_fn (6,406,436 samples, 0.03%)</title><rect x="2.5133%" y="1973" width="0.0318%" height="15" fill="rgb(222,85,15)" fg:x="506398173" fg:w="6406436"/><text x="2.7633%" y="1983.50"></text></g><g><title>blk_mq_sched_dispatch_requests (6,406,436 samples, 0.03%)</title><rect x="2.5133%" y="1957" width="0.0318%" height="15" fill="rgb(210,85,47)" fg:x="506398173" fg:w="6406436"/><text x="2.7633%" y="1967.50"></text></g><g><title>__blk_mq_sched_dispatch_requests (6,406,436 samples, 0.03%)</title><rect x="2.5133%" y="1941" width="0.0318%" height="15" fill="rgb(224,206,25)" fg:x="506398173" fg:w="6406436"/><text x="2.7633%" y="1951.50"></text></g><g><title>kworker/4:1H-kb (7,821,909 samples, 0.04%)</title><rect x="2.5124%" y="2069" width="0.0388%" height="15" fill="rgb(243,201,19)" fg:x="506211245" fg:w="7821909"/><text x="2.7624%" y="2079.50"></text></g><g><title>ret_from_fork_asm (7,821,909 samples, 0.04%)</title><rect x="2.5124%" y="2053" width="0.0388%" height="15" fill="rgb(236,59,4)" fg:x="506211245" fg:w="7821909"/><text x="2.7624%" y="2063.50"></text></g><g><title>ret_from_fork (7,821,909 samples, 0.04%)</title><rect x="2.5124%" y="2037" width="0.0388%" height="15" fill="rgb(254,179,45)" fg:x="506211245" fg:w="7821909"/><text x="2.7624%" y="2047.50"></text></g><g><title>kthread (7,821,909 samples, 0.04%)</title><rect x="2.5124%" y="2021" width="0.0388%" height="15" fill="rgb(226,14,10)" fg:x="506211245" fg:w="7821909"/><text x="2.7624%" y="2031.50"></text></g><g><title>worker_thread (7,821,909 samples, 0.04%)</title><rect x="2.5124%" y="2005" width="0.0388%" height="15" fill="rgb(244,27,41)" fg:x="506211245" fg:w="7821909"/><text x="2.7624%" y="2015.50"></text></g><g><title>iommu_dma_map_sg (2,137,274 samples, 0.01%)</title><rect x="2.5572%" y="1797" width="0.0106%" height="15" fill="rgb(235,35,32)" fg:x="515231032" fg:w="2137274"/><text x="2.8072%" y="1807.50"></text></g><g><title>iommu_map_sg (2,137,274 samples, 0.01%)</title><rect x="2.5572%" y="1781" width="0.0106%" height="15" fill="rgb(218,68,31)" fg:x="515231032" fg:w="2137274"/><text x="2.8072%" y="1791.50"></text></g><g><title>__ata_scsi_queuecmd (2,971,048 samples, 0.01%)</title><rect x="2.5549%" y="1861" width="0.0147%" height="15" fill="rgb(207,120,37)" fg:x="514772131" fg:w="2971048"/><text x="2.8049%" y="1871.50"></text></g><g><title>ata_qc_issue (2,971,048 samples, 0.01%)</title><rect x="2.5549%" y="1845" width="0.0147%" height="15" fill="rgb(227,98,0)" fg:x="514772131" fg:w="2971048"/><text x="2.8049%" y="1855.50"></text></g><g><title>dma_map_sg_attrs (2,512,147 samples, 0.01%)</title><rect x="2.5572%" y="1829" width="0.0125%" height="15" fill="rgb(207,7,3)" fg:x="515231032" fg:w="2512147"/><text x="2.8072%" y="1839.50"></text></g><g><title>__dma_map_sg_attrs (2,512,147 samples, 0.01%)</title><rect x="2.5572%" y="1813" width="0.0125%" height="15" fill="rgb(206,98,19)" fg:x="515231032" fg:w="2512147"/><text x="2.8072%" y="1823.50"></text></g><g><title>blk_mq_dispatch_rq_list (4,036,474 samples, 0.02%)</title><rect x="2.5512%" y="1925" width="0.0200%" height="15" fill="rgb(217,5,26)" fg:x="514033154" fg:w="4036474"/><text x="2.8012%" y="1935.50"></text></g><g><title>scsi_queue_rq (4,036,474 samples, 0.02%)</title><rect x="2.5512%" y="1909" width="0.0200%" height="15" fill="rgb(235,190,38)" fg:x="514033154" fg:w="4036474"/><text x="2.8012%" y="1919.50"></text></g><g><title>scsi_dispatch_cmd (3,297,497 samples, 0.02%)</title><rect x="2.5549%" y="1893" width="0.0164%" height="15" fill="rgb(247,86,24)" fg:x="514772131" fg:w="3297497"/><text x="2.8049%" y="1903.50"></text></g><g><title>ata_scsi_queuecmd (3,297,497 samples, 0.02%)</title><rect x="2.5549%" y="1877" width="0.0164%" height="15" fill="rgb(205,101,16)" fg:x="514772131" fg:w="3297497"/><text x="2.8049%" y="1887.50"></text></g><g><title>process_one_work (4,368,314 samples, 0.02%)</title><rect x="2.5512%" y="1989" width="0.0217%" height="15" fill="rgb(246,168,33)" fg:x="514033154" fg:w="4368314"/><text x="2.8012%" y="1999.50"></text></g><g><title>blk_mq_run_work_fn (4,368,314 samples, 0.02%)</title><rect x="2.5512%" y="1973" width="0.0217%" height="15" fill="rgb(231,114,1)" fg:x="514033154" fg:w="4368314"/><text x="2.8012%" y="1983.50"></text></g><g><title>blk_mq_sched_dispatch_requests (4,368,314 samples, 0.02%)</title><rect x="2.5512%" y="1957" width="0.0217%" height="15" fill="rgb(207,184,53)" fg:x="514033154" fg:w="4368314"/><text x="2.8012%" y="1967.50"></text></g><g><title>__blk_mq_sched_dispatch_requests (4,368,314 samples, 0.02%)</title><rect x="2.5512%" y="1941" width="0.0217%" height="15" fill="rgb(224,95,51)" fg:x="514033154" fg:w="4368314"/><text x="2.8012%" y="1951.50"></text></g><g><title>kworker/5:1H-kb (4,860,036 samples, 0.02%)</title><rect x="2.5512%" y="2069" width="0.0241%" height="15" fill="rgb(212,188,45)" fg:x="514033154" fg:w="4860036"/><text x="2.8012%" y="2079.50"></text></g><g><title>ret_from_fork_asm (4,860,036 samples, 0.02%)</title><rect x="2.5512%" y="2053" width="0.0241%" height="15" fill="rgb(223,154,38)" fg:x="514033154" fg:w="4860036"/><text x="2.8012%" y="2063.50"></text></g><g><title>ret_from_fork (4,860,036 samples, 0.02%)</title><rect x="2.5512%" y="2037" width="0.0241%" height="15" fill="rgb(251,22,52)" fg:x="514033154" fg:w="4860036"/><text x="2.8012%" y="2047.50"></text></g><g><title>kthread (4,860,036 samples, 0.02%)</title><rect x="2.5512%" y="2021" width="0.0241%" height="15" fill="rgb(229,209,22)" fg:x="514033154" fg:w="4860036"/><text x="2.8012%" y="2031.50"></text></g><g><title>worker_thread (4,860,036 samples, 0.02%)</title><rect x="2.5512%" y="2005" width="0.0241%" height="15" fill="rgb(234,138,34)" fg:x="514033154" fg:w="4860036"/><text x="2.8012%" y="2015.50"></text></g><g><title>__ata_scsi_queuecmd (3,233,284 samples, 0.02%)</title><rect x="2.6049%" y="1861" width="0.0160%" height="15" fill="rgb(212,95,11)" fg:x="524850772" fg:w="3233284"/><text x="2.8549%" y="1871.50"></text></g><g><title>ata_qc_issue (3,233,284 samples, 0.02%)</title><rect x="2.6049%" y="1845" width="0.0160%" height="15" fill="rgb(240,179,47)" fg:x="524850772" fg:w="3233284"/><text x="2.8549%" y="1855.50"></text></g><g><title>dma_map_sg_attrs (3,233,284 samples, 0.02%)</title><rect x="2.6049%" y="1829" width="0.0160%" height="15" fill="rgb(240,163,11)" fg:x="524850772" fg:w="3233284"/><text x="2.8549%" y="1839.50"></text></g><g><title>__dma_map_sg_attrs (3,233,284 samples, 0.02%)</title><rect x="2.6049%" y="1813" width="0.0160%" height="15" fill="rgb(236,37,12)" fg:x="524850772" fg:w="3233284"/><text x="2.8549%" y="1823.50"></text></g><g><title>iommu_dma_map_sg (3,233,284 samples, 0.02%)</title><rect x="2.6049%" y="1797" width="0.0160%" height="15" fill="rgb(232,164,16)" fg:x="524850772" fg:w="3233284"/><text x="2.8549%" y="1807.50"></text></g><g><title>iommu_map_sg (2,782,660 samples, 0.01%)</title><rect x="2.6071%" y="1781" width="0.0138%" height="15" fill="rgb(244,205,15)" fg:x="525301396" fg:w="2782660"/><text x="2.8571%" y="1791.50"></text></g><g><title>blk_mq_dispatch_rq_list (5,493,058 samples, 0.03%)</title><rect x="2.5967%" y="1925" width="0.0273%" height="15" fill="rgb(223,117,47)" fg:x="523189749" fg:w="5493058"/><text x="2.8467%" y="1935.50"></text></g><g><title>scsi_queue_rq (4,926,644 samples, 0.02%)</title><rect x="2.5995%" y="1909" width="0.0245%" height="15" fill="rgb(244,107,35)" fg:x="523756163" fg:w="4926644"/><text x="2.8495%" y="1919.50"></text></g><g><title>scsi_dispatch_cmd (3,832,035 samples, 0.02%)</title><rect x="2.6049%" y="1893" width="0.0190%" height="15" fill="rgb(205,140,8)" fg:x="524850772" fg:w="3832035"/><text x="2.8549%" y="1903.50"></text></g><g><title>ata_scsi_queuecmd (3,832,035 samples, 0.02%)</title><rect x="2.6049%" y="1877" width="0.0190%" height="15" fill="rgb(228,84,46)" fg:x="524850772" fg:w="3832035"/><text x="2.8549%" y="1887.50"></text></g><g><title>blk_mq_run_work_fn (6,509,679 samples, 0.03%)</title><rect x="2.5931%" y="1973" width="0.0323%" height="15" fill="rgb(254,188,9)" fg:x="522471058" fg:w="6509679"/><text x="2.8431%" y="1983.50"></text></g><g><title>blk_mq_sched_dispatch_requests (6,509,679 samples, 0.03%)</title><rect x="2.5931%" y="1957" width="0.0323%" height="15" fill="rgb(206,112,54)" fg:x="522471058" fg:w="6509679"/><text x="2.8431%" y="1967.50"></text></g><g><title>__blk_mq_sched_dispatch_requests (6,509,679 samples, 0.03%)</title><rect x="2.5931%" y="1941" width="0.0323%" height="15" fill="rgb(216,84,49)" fg:x="522471058" fg:w="6509679"/><text x="2.8431%" y="1951.50"></text></g><g><title>process_one_work (6,782,027 samples, 0.03%)</title><rect x="2.5931%" y="1989" width="0.0337%" height="15" fill="rgb(214,194,35)" fg:x="522471058" fg:w="6782027"/><text x="2.8431%" y="1999.50"></text></g><g><title>__sched_text_start (2,084,625 samples, 0.01%)</title><rect x="2.6268%" y="1973" width="0.0103%" height="15" fill="rgb(249,28,3)" fg:x="529253085" fg:w="2084625"/><text x="2.8768%" y="1983.50"></text></g><g><title>pick_next_task (2,084,625 samples, 0.01%)</title><rect x="2.6268%" y="1957" width="0.0103%" height="15" fill="rgb(222,56,52)" fg:x="529253085" fg:w="2084625"/><text x="2.8768%" y="1967.50"></text></g><g><title>pick_next_task_fair (2,084,625 samples, 0.01%)</title><rect x="2.6268%" y="1941" width="0.0103%" height="15" fill="rgb(245,217,50)" fg:x="529253085" fg:w="2084625"/><text x="2.8768%" y="1951.50"></text></g><g><title>newidle_balance (2,084,625 samples, 0.01%)</title><rect x="2.6268%" y="1925" width="0.0103%" height="15" fill="rgb(213,201,24)" fg:x="529253085" fg:w="2084625"/><text x="2.8768%" y="1935.50"></text></g><g><title>kworker/6:1H-kb (9,745,200 samples, 0.05%)</title><rect x="2.5906%" y="2069" width="0.0484%" height="15" fill="rgb(248,116,28)" fg:x="521977289" fg:w="9745200"/><text x="2.8406%" y="2079.50"></text></g><g><title>ret_from_fork_asm (9,745,200 samples, 0.05%)</title><rect x="2.5906%" y="2053" width="0.0484%" height="15" fill="rgb(219,72,43)" fg:x="521977289" fg:w="9745200"/><text x="2.8406%" y="2063.50"></text></g><g><title>ret_from_fork (9,745,200 samples, 0.05%)</title><rect x="2.5906%" y="2037" width="0.0484%" height="15" fill="rgb(209,138,14)" fg:x="521977289" fg:w="9745200"/><text x="2.8406%" y="2047.50"></text></g><g><title>kthread (9,745,200 samples, 0.05%)</title><rect x="2.5906%" y="2021" width="0.0484%" height="15" fill="rgb(222,18,33)" fg:x="521977289" fg:w="9745200"/><text x="2.8406%" y="2031.50"></text></g><g><title>worker_thread (9,745,200 samples, 0.05%)</title><rect x="2.5906%" y="2005" width="0.0484%" height="15" fill="rgb(213,199,7)" fg:x="521977289" fg:w="9745200"/><text x="2.8406%" y="2015.50"></text></g><g><title>schedule (2,469,404 samples, 0.01%)</title><rect x="2.6268%" y="1989" width="0.0123%" height="15" fill="rgb(250,110,10)" fg:x="529253085" fg:w="2469404"/><text x="2.8768%" y="1999.50"></text></g><g><title>scsi_dispatch_cmd (2,324,710 samples, 0.01%)</title><rect x="2.6502%" y="1893" width="0.0115%" height="15" fill="rgb(248,123,6)" fg:x="533970071" fg:w="2324710"/><text x="2.9002%" y="1903.50"></text></g><g><title>ata_scsi_queuecmd (2,324,710 samples, 0.01%)</title><rect x="2.6502%" y="1877" width="0.0115%" height="15" fill="rgb(206,91,31)" fg:x="533970071" fg:w="2324710"/><text x="2.9002%" y="1887.50"></text></g><g><title>blk_mq_dispatch_rq_list (3,788,422 samples, 0.02%)</title><rect x="2.6442%" y="1925" width="0.0188%" height="15" fill="rgb(211,154,13)" fg:x="532772736" fg:w="3788422"/><text x="2.8942%" y="1935.50"></text></g><g><title>scsi_queue_rq (3,788,422 samples, 0.02%)</title><rect x="2.6442%" y="1909" width="0.0188%" height="15" fill="rgb(225,148,7)" fg:x="532772736" fg:w="3788422"/><text x="2.8942%" y="1919.50"></text></g><g><title>blk_mq_run_work_fn (5,306,234 samples, 0.03%)</title><rect x="2.6409%" y="1973" width="0.0263%" height="15" fill="rgb(220,160,43)" fg:x="532100273" fg:w="5306234"/><text x="2.8909%" y="1983.50"></text></g><g><title>blk_mq_sched_dispatch_requests (4,906,157 samples, 0.02%)</title><rect x="2.6429%" y="1957" width="0.0243%" height="15" fill="rgb(213,52,39)" fg:x="532500350" fg:w="4906157"/><text x="2.8929%" y="1967.50"></text></g><g><title>__blk_mq_sched_dispatch_requests (4,906,157 samples, 0.02%)</title><rect x="2.6429%" y="1941" width="0.0243%" height="15" fill="rgb(243,137,7)" fg:x="532500350" fg:w="4906157"/><text x="2.8929%" y="1951.50"></text></g><g><title>process_one_work (6,085,349 samples, 0.03%)</title><rect x="2.6409%" y="1989" width="0.0302%" height="15" fill="rgb(230,79,13)" fg:x="532100273" fg:w="6085349"/><text x="2.8909%" y="1999.50"></text></g><g><title>kworker/7:1H-kb (7,493,207 samples, 0.04%)</title><rect x="2.6390%" y="2069" width="0.0372%" height="15" fill="rgb(247,105,23)" fg:x="531722489" fg:w="7493207"/><text x="2.8890%" y="2079.50"></text></g><g><title>ret_from_fork_asm (7,115,423 samples, 0.04%)</title><rect x="2.6409%" y="2053" width="0.0353%" height="15" fill="rgb(223,179,41)" fg:x="532100273" fg:w="7115423"/><text x="2.8909%" y="2063.50"></text></g><g><title>ret_from_fork (7,115,423 samples, 0.04%)</title><rect x="2.6409%" y="2037" width="0.0353%" height="15" fill="rgb(218,9,34)" fg:x="532100273" fg:w="7115423"/><text x="2.8909%" y="2047.50"></text></g><g><title>kthread (7,115,423 samples, 0.04%)</title><rect x="2.6409%" y="2021" width="0.0353%" height="15" fill="rgb(222,106,8)" fg:x="532100273" fg:w="7115423"/><text x="2.8909%" y="2031.50"></text></g><g><title>worker_thread (7,115,423 samples, 0.04%)</title><rect x="2.6409%" y="2005" width="0.0353%" height="15" fill="rgb(211,220,0)" fg:x="532100273" fg:w="7115423"/><text x="2.8909%" y="2015.50"></text></g><g><title>__rcu_read_unlock (2,612,550 samples, 0.01%)</title><rect x="2.7003%" y="1957" width="0.0130%" height="15" fill="rgb(229,52,16)" fg:x="544079535" fg:w="2612550"/><text x="2.9503%" y="1967.50"></text></g><g><title>gc_worker (6,518,476 samples, 0.03%)</title><rect x="2.6837%" y="1973" width="0.0324%" height="15" fill="rgb(212,155,18)" fg:x="540735173" fg:w="6518476"/><text x="2.9337%" y="1983.50"></text></g><g><title>wb_over_bg_thresh (2,685,378 samples, 0.01%)</title><rect x="2.7161%" y="1941" width="0.0133%" height="15" fill="rgb(242,21,14)" fg:x="547253649" fg:w="2685378"/><text x="2.9661%" y="1951.50"></text></g><g><title>mem_cgroup_wb_stats (2,685,378 samples, 0.01%)</title><rect x="2.7161%" y="1925" width="0.0133%" height="15" fill="rgb(222,19,48)" fg:x="547253649" fg:w="2685378"/><text x="2.9661%" y="1935.50"></text></g><g><title>cgroup_rstat_flush (2,685,378 samples, 0.01%)</title><rect x="2.7161%" y="1909" width="0.0133%" height="15" fill="rgb(232,45,27)" fg:x="547253649" fg:w="2685378"/><text x="2.9661%" y="1919.50"></text></g><g><title>cgroup_rstat_flush_locked (2,685,378 samples, 0.01%)</title><rect x="2.7161%" y="1893" width="0.0133%" height="15" fill="rgb(249,103,42)" fg:x="547253649" fg:w="2685378"/><text x="2.9661%" y="1903.50"></text></g><g><title>__rq_qos_throttle (2,025,983 samples, 0.01%)</title><rect x="2.7378%" y="1733" width="0.0101%" height="15" fill="rgb(246,81,33)" fg:x="551630824" fg:w="2025983"/><text x="2.9878%" y="1743.50"></text></g><g><title>wbt_wait (2,025,983 samples, 0.01%)</title><rect x="2.7378%" y="1717" width="0.0101%" height="15" fill="rgb(252,33,42)" fg:x="551630824" fg:w="2025983"/><text x="2.9878%" y="1727.50"></text></g><g><title>rq_qos_wait (2,025,983 samples, 0.01%)</title><rect x="2.7378%" y="1701" width="0.0101%" height="15" fill="rgb(209,212,41)" fg:x="551630824" fg:w="2025983"/><text x="2.9878%" y="1711.50"></text></g><g><title>io_schedule (2,025,983 samples, 0.01%)</title><rect x="2.7378%" y="1685" width="0.0101%" height="15" fill="rgb(207,154,6)" fg:x="551630824" fg:w="2025983"/><text x="2.9878%" y="1695.50"></text></g><g><title>ext4_io_submit (3,635,148 samples, 0.02%)</title><rect x="2.7335%" y="1829" width="0.0180%" height="15" fill="rgb(223,64,47)" fg:x="550756847" fg:w="3635148"/><text x="2.9835%" y="1839.50"></text></g><g><title>submit_bio (3,635,148 samples, 0.02%)</title><rect x="2.7335%" y="1813" width="0.0180%" height="15" fill="rgb(211,161,38)" fg:x="550756847" fg:w="3635148"/><text x="2.9835%" y="1823.50"></text></g><g><title>submit_bio_noacct (3,635,148 samples, 0.02%)</title><rect x="2.7335%" y="1797" width="0.0180%" height="15" fill="rgb(219,138,40)" fg:x="550756847" fg:w="3635148"/><text x="2.9835%" y="1807.50"></text></g><g><title>submit_bio_noacct_nocheck (3,635,148 samples, 0.02%)</title><rect x="2.7335%" y="1781" width="0.0180%" height="15" fill="rgb(241,228,46)" fg:x="550756847" fg:w="3635148"/><text x="2.9835%" y="1791.50"></text></g><g><title>__submit_bio (3,635,148 samples, 0.02%)</title><rect x="2.7335%" y="1765" width="0.0180%" height="15" fill="rgb(223,209,38)" fg:x="550756847" fg:w="3635148"/><text x="2.9835%" y="1775.50"></text></g><g><title>blk_mq_submit_bio (3,635,148 samples, 0.02%)</title><rect x="2.7335%" y="1749" width="0.0180%" height="15" fill="rgb(236,164,45)" fg:x="550756847" fg:w="3635148"/><text x="2.9835%" y="1759.50"></text></g><g><title>find_get_entry (12,333,467 samples, 0.06%)</title><rect x="2.7575%" y="1797" width="0.0612%" height="15" fill="rgb(231,15,5)" fg:x="555594916" fg:w="12333467"/><text x="3.0075%" y="1807.50"></text></g><g><title>filemap_get_folios_tag (12,516,678 samples, 0.06%)</title><rect x="2.7575%" y="1813" width="0.0621%" height="15" fill="rgb(252,35,15)" fg:x="555594916" fg:w="12516678"/><text x="3.0075%" y="1823.50"></text></g><g><title>__mod_lruvec_page_state (2,447,608 samples, 0.01%)</title><rect x="3.0025%" y="1749" width="0.0121%" height="15" fill="rgb(248,181,18)" fg:x="604957822" fg:w="2447608"/><text x="3.2525%" y="1759.50"></text></g><g><title>__mod_memcg_lruvec_state (2,037,441 samples, 0.01%)</title><rect x="3.0045%" y="1733" width="0.0101%" height="15" fill="rgb(233,39,42)" fg:x="605367989" fg:w="2037441"/><text x="3.2545%" y="1743.50"></text></g><g><title>_raw_spin_lock_irqsave (3,155,761 samples, 0.02%)</title><rect x="3.0170%" y="1749" width="0.0157%" height="15" fill="rgb(238,110,33)" fg:x="607874939" fg:w="3155761"/><text x="3.2670%" y="1759.50"></text></g><g><title>__folio_start_writeback (14,345,365 samples, 0.07%)</title><rect x="2.9854%" y="1765" width="0.0712%" height="15" fill="rgb(233,195,10)" fg:x="601524835" fg:w="14345365"/><text x="3.2354%" y="1775.50"></text></g><g><title>fscrypt_mergeable_bio_bh (2,214,785 samples, 0.01%)</title><rect x="3.0667%" y="1765" width="0.0110%" height="15" fill="rgb(254,105,3)" fg:x="617895685" fg:w="2214785"/><text x="3.3167%" y="1775.50"></text></g><g><title>submit_bio (4,778,182 samples, 0.02%)</title><rect x="3.0783%" y="1765" width="0.0237%" height="15" fill="rgb(221,225,9)" fg:x="620234543" fg:w="4778182"/><text x="3.3283%" y="1775.50"></text></g><g><title>submit_bio_noacct (4,778,182 samples, 0.02%)</title><rect x="3.0783%" y="1749" width="0.0237%" height="15" fill="rgb(224,227,45)" fg:x="620234543" fg:w="4778182"/><text x="3.3283%" y="1759.50"></text></g><g><title>submit_bio_noacct_nocheck (4,778,182 samples, 0.02%)</title><rect x="3.0783%" y="1733" width="0.0237%" height="15" fill="rgb(229,198,43)" fg:x="620234543" fg:w="4778182"/><text x="3.3283%" y="1743.50"></text></g><g><title>__submit_bio (4,778,182 samples, 0.02%)</title><rect x="3.0783%" y="1717" width="0.0237%" height="15" fill="rgb(206,209,35)" fg:x="620234543" fg:w="4778182"/><text x="3.3283%" y="1727.50"></text></g><g><title>blk_mq_submit_bio (4,496,234 samples, 0.02%)</title><rect x="3.0797%" y="1701" width="0.0223%" height="15" fill="rgb(245,195,53)" fg:x="620516491" fg:w="4496234"/><text x="3.3297%" y="1711.50"></text></g><g><title>blk_add_rq_to_plug (2,468,581 samples, 0.01%)</title><rect x="3.0898%" y="1685" width="0.0123%" height="15" fill="rgb(240,92,26)" fg:x="622544144" fg:w="2468581"/><text x="3.3398%" y="1695.50"></text></g><g><title>blk_mq_flush_plug_list (2,468,581 samples, 0.01%)</title><rect x="3.0898%" y="1669" width="0.0123%" height="15" fill="rgb(207,40,23)" fg:x="622544144" fg:w="2468581"/><text x="3.3398%" y="1679.50"></text></g><g><title>blk_mq_dispatch_plug_list (2,468,581 samples, 0.01%)</title><rect x="3.0898%" y="1653" width="0.0123%" height="15" fill="rgb(223,111,35)" fg:x="622544144" fg:w="2468581"/><text x="3.3398%" y="1663.50"></text></g><g><title>blk_mq_run_hw_queue (2,468,581 samples, 0.01%)</title><rect x="3.0898%" y="1637" width="0.0123%" height="15" fill="rgb(229,147,28)" fg:x="622544144" fg:w="2468581"/><text x="3.3398%" y="1647.50"></text></g><g><title>blk_mq_sched_dispatch_requests (2,468,581 samples, 0.01%)</title><rect x="3.0898%" y="1621" width="0.0123%" height="15" fill="rgb(211,29,28)" fg:x="622544144" fg:w="2468581"/><text x="3.3398%" y="1631.50"></text></g><g><title>__blk_mq_sched_dispatch_requests (2,468,581 samples, 0.01%)</title><rect x="3.0898%" y="1605" width="0.0123%" height="15" fill="rgb(228,72,33)" fg:x="622544144" fg:w="2468581"/><text x="3.3398%" y="1615.50"></text></g><g><title>blk_mq_dispatch_rq_list (2,468,581 samples, 0.01%)</title><rect x="3.0898%" y="1589" width="0.0123%" height="15" fill="rgb(205,214,31)" fg:x="622544144" fg:w="2468581"/><text x="3.3398%" y="1599.50"></text></g><g><title>scsi_queue_rq (2,468,581 samples, 0.01%)</title><rect x="3.0898%" y="1573" width="0.0123%" height="15" fill="rgb(224,111,15)" fg:x="622544144" fg:w="2468581"/><text x="3.3398%" y="1583.50"></text></g><g><title>scsi_dispatch_cmd (2,468,581 samples, 0.01%)</title><rect x="3.0898%" y="1557" width="0.0123%" height="15" fill="rgb(253,21,26)" fg:x="622544144" fg:w="2468581"/><text x="3.3398%" y="1567.50"></text></g><g><title>ata_scsi_queuecmd (2,468,581 samples, 0.01%)</title><rect x="3.0898%" y="1541" width="0.0123%" height="15" fill="rgb(245,139,43)" fg:x="622544144" fg:w="2468581"/><text x="3.3398%" y="1551.50"></text></g><g><title>__ata_scsi_queuecmd (2,468,581 samples, 0.01%)</title><rect x="3.0898%" y="1525" width="0.0123%" height="15" fill="rgb(252,170,7)" fg:x="622544144" fg:w="2468581"/><text x="3.3398%" y="1535.50"></text></g><g><title>ata_qc_issue (2,468,581 samples, 0.01%)</title><rect x="3.0898%" y="1509" width="0.0123%" height="15" fill="rgb(231,118,14)" fg:x="622544144" fg:w="2468581"/><text x="3.3398%" y="1519.50"></text></g><g><title>dma_map_sg_attrs (2,468,581 samples, 0.01%)</title><rect x="3.0898%" y="1493" width="0.0123%" height="15" fill="rgb(238,83,0)" fg:x="622544144" fg:w="2468581"/><text x="3.3398%" y="1503.50"></text></g><g><title>__dma_map_sg_attrs (2,468,581 samples, 0.01%)</title><rect x="3.0898%" y="1477" width="0.0123%" height="15" fill="rgb(221,39,39)" fg:x="622544144" fg:w="2468581"/><text x="3.3398%" y="1487.50"></text></g><g><title>iommu_dma_map_sg (2,468,581 samples, 0.01%)</title><rect x="3.0898%" y="1461" width="0.0123%" height="15" fill="rgb(222,119,46)" fg:x="622544144" fg:w="2468581"/><text x="3.3398%" y="1471.50"></text></g><g><title>iommu_map_sg (2,468,581 samples, 0.01%)</title><rect x="3.0898%" y="1445" width="0.0123%" height="15" fill="rgb(222,165,49)" fg:x="622544144" fg:w="2468581"/><text x="3.3398%" y="1455.50"></text></g><g><title>__iommu_map (2,113,020 samples, 0.01%)</title><rect x="3.0915%" y="1429" width="0.0105%" height="15" fill="rgb(219,113,52)" fg:x="622899705" fg:w="2113020"/><text x="3.3415%" y="1439.50"></text></g><g><title>ext4_bio_write_folio (29,573,713 samples, 0.15%)</title><rect x="2.9583%" y="1781" width="0.1468%" height="15" fill="rgb(214,7,15)" fg:x="596051402" fg:w="29573713"/><text x="3.2083%" y="1791.50"></text></g><g><title>__mod_lruvec_page_state (2,084,137 samples, 0.01%)</title><rect x="3.1219%" y="1765" width="0.0103%" height="15" fill="rgb(235,32,4)" fg:x="629010145" fg:w="2084137"/><text x="3.3719%" y="1775.50"></text></g><g><title>folio_clear_dirty_for_io (7,564,002 samples, 0.04%)</title><rect x="3.1051%" y="1781" width="0.0375%" height="15" fill="rgb(238,90,54)" fg:x="625625115" fg:w="7564002"/><text x="3.3551%" y="1791.50"></text></g><g><title>__writeback_single_inode (83,675,163 samples, 0.42%)</title><rect x="2.7294%" y="1893" width="0.4153%" height="15" fill="rgb(213,208,19)" fg:x="549939027" fg:w="83675163"/><text x="2.9794%" y="1903.50"></text></g><g><title>do_writepages (83,675,163 samples, 0.42%)</title><rect x="2.7294%" y="1877" width="0.4153%" height="15" fill="rgb(233,156,4)" fg:x="549939027" fg:w="83675163"/><text x="2.9794%" y="1887.50"></text></g><g><title>ext4_writepages (83,205,143 samples, 0.41%)</title><rect x="2.7318%" y="1861" width="0.4130%" height="15" fill="rgb(207,194,5)" fg:x="550409047" fg:w="83205143"/><text x="2.9818%" y="1871.50"></text></g><g><title>ext4_do_writepages (83,205,143 samples, 0.41%)</title><rect x="2.7318%" y="1845" width="0.4130%" height="15" fill="rgb(206,111,30)" fg:x="550409047" fg:w="83205143"/><text x="2.9818%" y="1855.50"></text></g><g><title>mpage_prepare_extent_to_map (79,222,195 samples, 0.39%)</title><rect x="2.7515%" y="1829" width="0.3932%" height="15" fill="rgb(243,70,54)" fg:x="554391995" fg:w="79222195"/><text x="3.0015%" y="1839.50"></text></g><g><title>mpage_process_page_bufs (65,272,578 samples, 0.32%)</title><rect x="2.8208%" y="1813" width="0.3240%" height="15" fill="rgb(242,28,8)" fg:x="568341612" fg:w="65272578"/><text x="3.0708%" y="1823.50"></text></g><g><title>mpage_submit_folio (38,495,360 samples, 0.19%)</title><rect x="2.9537%" y="1797" width="0.1911%" height="15" fill="rgb(219,106,18)" fg:x="595118830" fg:w="38495360"/><text x="3.2037%" y="1807.50"></text></g><g><title>__writeback_inodes_wb (84,262,843 samples, 0.42%)</title><rect x="2.7294%" y="1925" width="0.4182%" height="15" fill="rgb(244,222,10)" fg:x="549939027" fg:w="84262843"/><text x="2.9794%" y="1935.50"></text></g><g><title>writeback_sb_inodes (84,262,843 samples, 0.42%)</title><rect x="2.7294%" y="1909" width="0.4182%" height="15" fill="rgb(236,179,52)" fg:x="549939027" fg:w="84262843"/><text x="2.9794%" y="1919.50"></text></g><g><title>kworker/u65:2-e (94,581,162 samples, 0.47%)</title><rect x="2.6810%" y="2069" width="0.4694%" height="15" fill="rgb(213,23,39)" fg:x="540190103" fg:w="94581162"/><text x="2.9310%" y="2079.50"></text></g><g><title>ret_from_fork_asm (94,294,905 samples, 0.47%)</title><rect x="2.6825%" y="2053" width="0.4680%" height="15" fill="rgb(238,48,10)" fg:x="540476360" fg:w="94294905"/><text x="2.9325%" y="2063.50"></text></g><g><title>ret_from_fork (94,294,905 samples, 0.47%)</title><rect x="2.6825%" y="2037" width="0.4680%" height="15" fill="rgb(251,196,23)" fg:x="540476360" fg:w="94294905"/><text x="2.9325%" y="2047.50"></text></g><g><title>kthread (94,294,905 samples, 0.47%)</title><rect x="2.6825%" y="2021" width="0.4680%" height="15" fill="rgb(250,152,24)" fg:x="540476360" fg:w="94294905"/><text x="2.9325%" y="2031.50"></text></g><g><title>worker_thread (94,294,905 samples, 0.47%)</title><rect x="2.6825%" y="2005" width="0.4680%" height="15" fill="rgb(209,150,17)" fg:x="540476360" fg:w="94294905"/><text x="2.9325%" y="2015.50"></text></g><g><title>process_one_work (94,294,905 samples, 0.47%)</title><rect x="2.6825%" y="1989" width="0.4680%" height="15" fill="rgb(234,202,34)" fg:x="540476360" fg:w="94294905"/><text x="2.9325%" y="1999.50"></text></g><g><title>wb_workfn (87,517,616 samples, 0.43%)</title><rect x="2.7161%" y="1973" width="0.4344%" height="15" fill="rgb(253,148,53)" fg:x="547253649" fg:w="87517616"/><text x="2.9661%" y="1983.50"></text></g><g><title>wb_do_writeback (87,517,616 samples, 0.43%)</title><rect x="2.7161%" y="1957" width="0.4344%" height="15" fill="rgb(218,129,16)" fg:x="547253649" fg:w="87517616"/><text x="2.9661%" y="1967.50"></text></g><g><title>wb_writeback (84,832,238 samples, 0.42%)</title><rect x="2.7294%" y="1941" width="0.4210%" height="15" fill="rgb(216,85,19)" fg:x="549939027" fg:w="84832238"/><text x="2.9794%" y="1951.50"></text></g><g><title>filemap_get_folios_tag (5,106,509 samples, 0.03%)</title><rect x="3.1606%" y="1813" width="0.0253%" height="15" fill="rgb(235,228,7)" fg:x="636824550" fg:w="5106509"/><text x="3.4106%" y="1823.50"></text></g><g><title>find_get_entry (4,857,934 samples, 0.02%)</title><rect x="3.1619%" y="1797" width="0.0241%" height="15" fill="rgb(245,175,0)" fg:x="637073125" fg:w="4857934"/><text x="3.4119%" y="1807.50"></text></g><g><title>__folio_start_writeback (3,799,626 samples, 0.02%)</title><rect x="3.2428%" y="1765" width="0.0189%" height="15" fill="rgb(208,168,36)" fg:x="653384348" fg:w="3799626"/><text x="3.4928%" y="1775.50"></text></g><g><title>ext4_bio_write_folio (10,633,873 samples, 0.05%)</title><rect x="3.2248%" y="1781" width="0.0528%" height="15" fill="rgb(246,171,24)" fg:x="649745858" fg:w="10633873"/><text x="3.4748%" y="1791.50"></text></g><g><title>__writeback_inodes_wb (26,085,431 samples, 0.13%)</title><rect x="3.1549%" y="1925" width="0.1295%" height="15" fill="rgb(215,142,24)" fg:x="635665648" fg:w="26085431"/><text x="3.4049%" y="1935.50"></text></g><g><title>writeback_sb_inodes (26,085,431 samples, 0.13%)</title><rect x="3.1549%" y="1909" width="0.1295%" height="15" fill="rgb(250,187,7)" fg:x="635665648" fg:w="26085431"/><text x="3.4049%" y="1919.50"></text></g><g><title>__writeback_single_inode (26,085,431 samples, 0.13%)</title><rect x="3.1549%" y="1893" width="0.1295%" height="15" fill="rgb(228,66,33)" fg:x="635665648" fg:w="26085431"/><text x="3.4049%" y="1903.50"></text></g><g><title>do_writepages (26,085,431 samples, 0.13%)</title><rect x="3.1549%" y="1877" width="0.1295%" height="15" fill="rgb(234,215,21)" fg:x="635665648" fg:w="26085431"/><text x="3.4049%" y="1887.50"></text></g><g><title>ext4_writepages (26,085,431 samples, 0.13%)</title><rect x="3.1549%" y="1861" width="0.1295%" height="15" fill="rgb(222,191,20)" fg:x="635665648" fg:w="26085431"/><text x="3.4049%" y="1871.50"></text></g><g><title>ext4_do_writepages (26,085,431 samples, 0.13%)</title><rect x="3.1549%" y="1845" width="0.1295%" height="15" fill="rgb(245,79,54)" fg:x="635665648" fg:w="26085431"/><text x="3.4049%" y="1855.50"></text></g><g><title>mpage_prepare_extent_to_map (25,176,620 samples, 0.12%)</title><rect x="3.1594%" y="1829" width="0.1250%" height="15" fill="rgb(240,10,37)" fg:x="636574459" fg:w="25176620"/><text x="3.4094%" y="1839.50"></text></g><g><title>mpage_process_page_bufs (19,820,020 samples, 0.10%)</title><rect x="3.1860%" y="1813" width="0.0984%" height="15" fill="rgb(214,192,32)" fg:x="641931059" fg:w="19820020"/><text x="3.4360%" y="1823.50"></text></g><g><title>mpage_submit_folio (12,907,924 samples, 0.06%)</title><rect x="3.2203%" y="1797" width="0.0641%" height="15" fill="rgb(209,36,54)" fg:x="648843155" fg:w="12907924"/><text x="3.4703%" y="1807.50"></text></g><g><title>kworker/u66:0-f (27,600,838 samples, 0.14%)</title><rect x="3.1505%" y="2069" width="0.1370%" height="15" fill="rgb(220,10,11)" fg:x="634771265" fg:w="27600838"/><text x="3.4005%" y="2079.50"></text></g><g><title>ret_from_fork_asm (27,600,838 samples, 0.14%)</title><rect x="3.1505%" y="2053" width="0.1370%" height="15" fill="rgb(221,106,17)" fg:x="634771265" fg:w="27600838"/><text x="3.4005%" y="2063.50"></text></g><g><title>ret_from_fork (27,600,838 samples, 0.14%)</title><rect x="3.1505%" y="2037" width="0.1370%" height="15" fill="rgb(251,142,44)" fg:x="634771265" fg:w="27600838"/><text x="3.4005%" y="2047.50"></text></g><g><title>kthread (27,600,838 samples, 0.14%)</title><rect x="3.1505%" y="2021" width="0.1370%" height="15" fill="rgb(238,13,15)" fg:x="634771265" fg:w="27600838"/><text x="3.4005%" y="2031.50"></text></g><g><title>worker_thread (27,600,838 samples, 0.14%)</title><rect x="3.1505%" y="2005" width="0.1370%" height="15" fill="rgb(208,107,27)" fg:x="634771265" fg:w="27600838"/><text x="3.4005%" y="2015.50"></text></g><g><title>process_one_work (27,600,838 samples, 0.14%)</title><rect x="3.1505%" y="1989" width="0.1370%" height="15" fill="rgb(205,136,37)" fg:x="634771265" fg:w="27600838"/><text x="3.4005%" y="1999.50"></text></g><g><title>wb_workfn (27,257,095 samples, 0.14%)</title><rect x="3.1522%" y="1973" width="0.1353%" height="15" fill="rgb(250,205,27)" fg:x="635115008" fg:w="27257095"/><text x="3.4022%" y="1983.50"></text></g><g><title>wb_do_writeback (27,257,095 samples, 0.14%)</title><rect x="3.1522%" y="1957" width="0.1353%" height="15" fill="rgb(210,80,43)" fg:x="635115008" fg:w="27257095"/><text x="3.4022%" y="1967.50"></text></g><g><title>wb_writeback (26,706,455 samples, 0.13%)</title><rect x="3.1549%" y="1941" width="0.1325%" height="15" fill="rgb(247,160,36)" fg:x="635665648" fg:w="26706455"/><text x="3.4049%" y="1951.50"></text></g><g><title>ext4_io_submit (2,300,040 samples, 0.01%)</title><rect x="3.2969%" y="1829" width="0.0114%" height="15" fill="rgb(234,13,49)" fg:x="664274008" fg:w="2300040"/><text x="3.5469%" y="1839.50"></text></g><g><title>submit_bio (2,300,040 samples, 0.01%)</title><rect x="3.2969%" y="1813" width="0.0114%" height="15" fill="rgb(234,122,0)" fg:x="664274008" fg:w="2300040"/><text x="3.5469%" y="1823.50"></text></g><g><title>submit_bio_noacct (2,300,040 samples, 0.01%)</title><rect x="3.2969%" y="1797" width="0.0114%" height="15" fill="rgb(207,146,38)" fg:x="664274008" fg:w="2300040"/><text x="3.5469%" y="1807.50"></text></g><g><title>submit_bio_noacct_nocheck (2,300,040 samples, 0.01%)</title><rect x="3.2969%" y="1781" width="0.0114%" height="15" fill="rgb(207,177,25)" fg:x="664274008" fg:w="2300040"/><text x="3.5469%" y="1791.50"></text></g><g><title>__submit_bio (2,300,040 samples, 0.01%)</title><rect x="3.2969%" y="1765" width="0.0114%" height="15" fill="rgb(211,178,42)" fg:x="664274008" fg:w="2300040"/><text x="3.5469%" y="1775.50"></text></g><g><title>blk_mq_submit_bio (2,300,040 samples, 0.01%)</title><rect x="3.2969%" y="1749" width="0.0114%" height="15" fill="rgb(230,69,54)" fg:x="664274008" fg:w="2300040"/><text x="3.5469%" y="1759.50"></text></g><g><title>filemap_get_folios_tag (7,162,872 samples, 0.04%)</title><rect x="3.3146%" y="1813" width="0.0356%" height="15" fill="rgb(214,135,41)" fg:x="667838153" fg:w="7162872"/><text x="3.5646%" y="1823.50"></text></g><g><title>find_get_entry (7,162,872 samples, 0.04%)</title><rect x="3.3146%" y="1797" width="0.0356%" height="15" fill="rgb(237,67,25)" fg:x="667838153" fg:w="7162872"/><text x="3.5646%" y="1807.50"></text></g><g><title>__folio_start_writeback (9,096,538 samples, 0.05%)</title><rect x="3.4284%" y="1765" width="0.0451%" height="15" fill="rgb(222,189,50)" fg:x="690775916" fg:w="9096538"/><text x="3.6784%" y="1775.50"></text></g><g><title>fscrypt_mergeable_bio_bh (2,120,173 samples, 0.01%)</title><rect x="3.4760%" y="1765" width="0.0105%" height="15" fill="rgb(245,148,34)" fg:x="700359325" fg:w="2120173"/><text x="3.7260%" y="1775.50"></text></g><g><title>io_schedule (2,056,967 samples, 0.01%)</title><rect x="3.4917%" y="1637" width="0.0102%" height="15" fill="rgb(222,29,6)" fg:x="703530860" fg:w="2056967"/><text x="3.7417%" y="1647.50"></text></g><g><title>__rq_qos_throttle (3,156,962 samples, 0.02%)</title><rect x="3.4897%" y="1685" width="0.0157%" height="15" fill="rgb(221,189,43)" fg:x="703119510" fg:w="3156962"/><text x="3.7397%" y="1695.50"></text></g><g><title>wbt_wait (3,156,962 samples, 0.02%)</title><rect x="3.4897%" y="1669" width="0.0157%" height="15" fill="rgb(207,36,27)" fg:x="703119510" fg:w="3156962"/><text x="3.7397%" y="1679.50"></text></g><g><title>rq_qos_wait (3,156,962 samples, 0.02%)</title><rect x="3.4897%" y="1653" width="0.0157%" height="15" fill="rgb(217,90,24)" fg:x="703119510" fg:w="3156962"/><text x="3.7397%" y="1663.50"></text></g><g><title>scsi_dispatch_cmd (3,181,163 samples, 0.02%)</title><rect x="3.5053%" y="1557" width="0.0158%" height="15" fill="rgb(224,66,35)" fg:x="706276472" fg:w="3181163"/><text x="3.7553%" y="1567.50"></text></g><g><title>ata_scsi_queuecmd (3,181,163 samples, 0.02%)</title><rect x="3.5053%" y="1541" width="0.0158%" height="15" fill="rgb(221,13,50)" fg:x="706276472" fg:w="3181163"/><text x="3.7553%" y="1551.50"></text></g><g><title>__ata_scsi_queuecmd (3,181,163 samples, 0.02%)</title><rect x="3.5053%" y="1525" width="0.0158%" height="15" fill="rgb(236,68,49)" fg:x="706276472" fg:w="3181163"/><text x="3.7553%" y="1535.50"></text></g><g><title>ata_qc_issue (3,181,163 samples, 0.02%)</title><rect x="3.5053%" y="1509" width="0.0158%" height="15" fill="rgb(229,146,28)" fg:x="706276472" fg:w="3181163"/><text x="3.7553%" y="1519.50"></text></g><g><title>dma_map_sg_attrs (2,660,028 samples, 0.01%)</title><rect x="3.5079%" y="1493" width="0.0132%" height="15" fill="rgb(225,31,38)" fg:x="706797607" fg:w="2660028"/><text x="3.7579%" y="1503.50"></text></g><g><title>__dma_map_sg_attrs (2,660,028 samples, 0.01%)</title><rect x="3.5079%" y="1477" width="0.0132%" height="15" fill="rgb(250,208,3)" fg:x="706797607" fg:w="2660028"/><text x="3.7579%" y="1487.50"></text></g><g><title>__submit_bio (7,274,540 samples, 0.04%)</title><rect x="3.4897%" y="1717" width="0.0361%" height="15" fill="rgb(246,54,23)" fg:x="703119510" fg:w="7274540"/><text x="3.7397%" y="1727.50"></text></g><g><title>blk_mq_submit_bio (7,274,540 samples, 0.04%)</title><rect x="3.4897%" y="1701" width="0.0361%" height="15" fill="rgb(243,76,11)" fg:x="703119510" fg:w="7274540"/><text x="3.7397%" y="1711.50"></text></g><g><title>blk_add_rq_to_plug (4,117,578 samples, 0.02%)</title><rect x="3.5053%" y="1685" width="0.0204%" height="15" fill="rgb(245,21,50)" fg:x="706276472" fg:w="4117578"/><text x="3.7553%" y="1695.50"></text></g><g><title>blk_mq_flush_plug_list (4,117,578 samples, 0.02%)</title><rect x="3.5053%" y="1669" width="0.0204%" height="15" fill="rgb(228,9,43)" fg:x="706276472" fg:w="4117578"/><text x="3.7553%" y="1679.50"></text></g><g><title>blk_mq_dispatch_plug_list (4,117,578 samples, 0.02%)</title><rect x="3.5053%" y="1653" width="0.0204%" height="15" fill="rgb(208,100,47)" fg:x="706276472" fg:w="4117578"/><text x="3.7553%" y="1663.50"></text></g><g><title>blk_mq_run_hw_queue (4,117,578 samples, 0.02%)</title><rect x="3.5053%" y="1637" width="0.0204%" height="15" fill="rgb(232,26,8)" fg:x="706276472" fg:w="4117578"/><text x="3.7553%" y="1647.50"></text></g><g><title>blk_mq_sched_dispatch_requests (4,117,578 samples, 0.02%)</title><rect x="3.5053%" y="1621" width="0.0204%" height="15" fill="rgb(216,166,38)" fg:x="706276472" fg:w="4117578"/><text x="3.7553%" y="1631.50"></text></g><g><title>__blk_mq_sched_dispatch_requests (4,117,578 samples, 0.02%)</title><rect x="3.5053%" y="1605" width="0.0204%" height="15" fill="rgb(251,202,51)" fg:x="706276472" fg:w="4117578"/><text x="3.7553%" y="1615.50"></text></g><g><title>blk_mq_dispatch_rq_list (4,117,578 samples, 0.02%)</title><rect x="3.5053%" y="1589" width="0.0204%" height="15" fill="rgb(254,216,34)" fg:x="706276472" fg:w="4117578"/><text x="3.7553%" y="1599.50"></text></g><g><title>scsi_queue_rq (4,117,578 samples, 0.02%)</title><rect x="3.5053%" y="1573" width="0.0204%" height="15" fill="rgb(251,32,27)" fg:x="706276472" fg:w="4117578"/><text x="3.7553%" y="1583.50"></text></g><g><title>ext4_bio_write_folio (21,945,844 samples, 0.11%)</title><rect x="3.4195%" y="1781" width="0.1089%" height="15" fill="rgb(208,127,28)" fg:x="688983288" fg:w="21945844"/><text x="3.6695%" y="1791.50"></text></g><g><title>submit_bio (8,449,634 samples, 0.04%)</title><rect x="3.4865%" y="1765" width="0.0419%" height="15" fill="rgb(224,137,22)" fg:x="702479498" fg:w="8449634"/><text x="3.7365%" y="1775.50"></text></g><g><title>submit_bio_noacct (8,449,634 samples, 0.04%)</title><rect x="3.4865%" y="1749" width="0.0419%" height="15" fill="rgb(254,70,32)" fg:x="702479498" fg:w="8449634"/><text x="3.7365%" y="1759.50"></text></g><g><title>submit_bio_noacct_nocheck (7,809,622 samples, 0.04%)</title><rect x="3.4897%" y="1733" width="0.0388%" height="15" fill="rgb(229,75,37)" fg:x="703119510" fg:w="7809622"/><text x="3.7397%" y="1743.50"></text></g><g><title>inode_to_bdi (2,253,951 samples, 0.01%)</title><rect x="3.5479%" y="1765" width="0.0112%" height="15" fill="rgb(252,64,23)" fg:x="714850384" fg:w="2253951"/><text x="3.7979%" y="1775.50"></text></g><g><title>mpage_process_page_bufs (43,099,313 samples, 0.21%)</title><rect x="3.3501%" y="1813" width="0.2139%" height="15" fill="rgb(232,162,48)" fg:x="675001025" fg:w="43099313"/><text x="3.6001%" y="1823.50"></text></g><g><title>mpage_submit_folio (29,704,868 samples, 0.15%)</title><rect x="3.4166%" y="1797" width="0.1474%" height="15" fill="rgb(246,160,12)" fg:x="688395470" fg:w="29704868"/><text x="3.6666%" y="1807.50"></text></g><g><title>folio_clear_dirty_for_io (7,171,206 samples, 0.04%)</title><rect x="3.5284%" y="1781" width="0.0356%" height="15" fill="rgb(247,166,0)" fg:x="710929132" fg:w="7171206"/><text x="3.7784%" y="1791.50"></text></g><g><title>__writeback_inodes_wb (54,161,914 samples, 0.27%)</title><rect x="3.2969%" y="1925" width="0.2688%" height="15" fill="rgb(249,219,21)" fg:x="664274008" fg:w="54161914"/><text x="3.5469%" y="1935.50"></text></g><g><title>writeback_sb_inodes (54,161,914 samples, 0.27%)</title><rect x="3.2969%" y="1909" width="0.2688%" height="15" fill="rgb(205,209,3)" fg:x="664274008" fg:w="54161914"/><text x="3.5469%" y="1919.50"></text></g><g><title>__writeback_single_inode (54,161,914 samples, 0.27%)</title><rect x="3.2969%" y="1893" width="0.2688%" height="15" fill="rgb(243,44,1)" fg:x="664274008" fg:w="54161914"/><text x="3.5469%" y="1903.50"></text></g><g><title>do_writepages (54,161,914 samples, 0.27%)</title><rect x="3.2969%" y="1877" width="0.2688%" height="15" fill="rgb(206,159,16)" fg:x="664274008" fg:w="54161914"/><text x="3.5469%" y="1887.50"></text></g><g><title>ext4_writepages (54,161,914 samples, 0.27%)</title><rect x="3.2969%" y="1861" width="0.2688%" height="15" fill="rgb(244,77,30)" fg:x="664274008" fg:w="54161914"/><text x="3.5469%" y="1871.50"></text></g><g><title>ext4_do_writepages (54,161,914 samples, 0.27%)</title><rect x="3.2969%" y="1845" width="0.2688%" height="15" fill="rgb(218,69,12)" fg:x="664274008" fg:w="54161914"/><text x="3.5469%" y="1855.50"></text></g><g><title>mpage_prepare_extent_to_map (51,861,874 samples, 0.26%)</title><rect x="3.3083%" y="1829" width="0.2574%" height="15" fill="rgb(212,87,7)" fg:x="666574048" fg:w="51861874"/><text x="3.5583%" y="1839.50"></text></g><g><title>kworker/u66:1-f (57,087,458 samples, 0.28%)</title><rect x="3.2874%" y="2069" width="0.2833%" height="15" fill="rgb(245,114,25)" fg:x="662372103" fg:w="57087458"/><text x="3.5374%" y="2079.50"></text></g><g><title>ret_from_fork_asm (57,087,458 samples, 0.28%)</title><rect x="3.2874%" y="2053" width="0.2833%" height="15" fill="rgb(210,61,42)" fg:x="662372103" fg:w="57087458"/><text x="3.5374%" y="2063.50"></text></g><g><title>ret_from_fork (57,087,458 samples, 0.28%)</title><rect x="3.2874%" y="2037" width="0.2833%" height="15" fill="rgb(211,52,33)" fg:x="662372103" fg:w="57087458"/><text x="3.5374%" y="2047.50"></text></g><g><title>kthread (57,087,458 samples, 0.28%)</title><rect x="3.2874%" y="2021" width="0.2833%" height="15" fill="rgb(234,58,33)" fg:x="662372103" fg:w="57087458"/><text x="3.5374%" y="2031.50"></text></g><g><title>worker_thread (57,087,458 samples, 0.28%)</title><rect x="3.2874%" y="2005" width="0.2833%" height="15" fill="rgb(220,115,36)" fg:x="662372103" fg:w="57087458"/><text x="3.5374%" y="2015.50"></text></g><g><title>process_one_work (57,087,458 samples, 0.28%)</title><rect x="3.2874%" y="1989" width="0.2833%" height="15" fill="rgb(243,153,54)" fg:x="662372103" fg:w="57087458"/><text x="3.5374%" y="1999.50"></text></g><g><title>wb_workfn (57,087,458 samples, 0.28%)</title><rect x="3.2874%" y="1973" width="0.2833%" height="15" fill="rgb(251,47,18)" fg:x="662372103" fg:w="57087458"/><text x="3.5374%" y="1983.50"></text></g><g><title>wb_do_writeback (57,087,458 samples, 0.28%)</title><rect x="3.2874%" y="1957" width="0.2833%" height="15" fill="rgb(242,102,42)" fg:x="662372103" fg:w="57087458"/><text x="3.5374%" y="1967.50"></text></g><g><title>wb_writeback (55,185,553 samples, 0.27%)</title><rect x="3.2969%" y="1941" width="0.2739%" height="15" fill="rgb(234,31,38)" fg:x="664274008" fg:w="55185553"/><text x="3.5469%" y="1951.50"></text></g><g><title>filemap_get_folios_tag (7,019,454 samples, 0.03%)</title><rect x="3.5948%" y="1813" width="0.0348%" height="15" fill="rgb(221,117,51)" fg:x="724308222" fg:w="7019454"/><text x="3.8448%" y="1823.50"></text></g><g><title>find_get_entry (7,019,454 samples, 0.03%)</title><rect x="3.5948%" y="1797" width="0.0348%" height="15" fill="rgb(212,20,18)" fg:x="724308222" fg:w="7019454"/><text x="3.8448%" y="1807.50"></text></g><g><title>__mod_memcg_lruvec_state (2,367,725 samples, 0.01%)</title><rect x="3.7069%" y="1733" width="0.0118%" height="15" fill="rgb(245,133,36)" fg:x="746884952" fg:w="2367725"/><text x="3.9569%" y="1743.50"></text></g><g><title>__mod_lruvec_page_state (3,303,878 samples, 0.02%)</title><rect x="3.7056%" y="1749" width="0.0164%" height="15" fill="rgb(212,6,19)" fg:x="746631798" fg:w="3303878"/><text x="3.9556%" y="1759.50"></text></g><g><title>_raw_spin_lock_irqsave (2,223,831 samples, 0.01%)</title><rect x="3.7220%" y="1749" width="0.0110%" height="15" fill="rgb(218,1,36)" fg:x="749935676" fg:w="2223831"/><text x="3.9720%" y="1759.50"></text></g><g><title>__folio_start_writeback (12,769,059 samples, 0.06%)</title><rect x="3.6929%" y="1765" width="0.0634%" height="15" fill="rgb(246,84,54)" fg:x="744077038" fg:w="12769059"/><text x="3.9429%" y="1775.50"></text></g><g><title>__rq_qos_throttle (2,299,822 samples, 0.01%)</title><rect x="3.7696%" y="1685" width="0.0114%" height="15" fill="rgb(242,110,6)" fg:x="759517259" fg:w="2299822"/><text x="4.0196%" y="1695.50"></text></g><g><title>wbt_wait (2,127,313 samples, 0.01%)</title><rect x="3.7704%" y="1669" width="0.0106%" height="15" fill="rgb(214,47,5)" fg:x="759689768" fg:w="2127313"/><text x="4.0204%" y="1679.50"></text></g><g><title>ext4_bio_write_folio (21,703,234 samples, 0.11%)</title><rect x="3.6803%" y="1781" width="0.1077%" height="15" fill="rgb(218,159,25)" fg:x="741537758" fg:w="21703234"/><text x="3.9303%" y="1791.50"></text></g><g><title>submit_bio (4,129,408 samples, 0.02%)</title><rect x="3.7676%" y="1765" width="0.0205%" height="15" fill="rgb(215,211,28)" fg:x="759111584" fg:w="4129408"/><text x="4.0176%" y="1775.50"></text></g><g><title>submit_bio_noacct (4,129,408 samples, 0.02%)</title><rect x="3.7676%" y="1749" width="0.0205%" height="15" fill="rgb(238,59,32)" fg:x="759111584" fg:w="4129408"/><text x="4.0176%" y="1759.50"></text></g><g><title>submit_bio_noacct_nocheck (4,129,408 samples, 0.02%)</title><rect x="3.7676%" y="1733" width="0.0205%" height="15" fill="rgb(226,82,3)" fg:x="759111584" fg:w="4129408"/><text x="4.0176%" y="1743.50"></text></g><g><title>__submit_bio (4,129,408 samples, 0.02%)</title><rect x="3.7676%" y="1717" width="0.0205%" height="15" fill="rgb(240,164,32)" fg:x="759111584" fg:w="4129408"/><text x="4.0176%" y="1727.50"></text></g><g><title>blk_mq_submit_bio (4,129,408 samples, 0.02%)</title><rect x="3.7676%" y="1701" width="0.0205%" height="15" fill="rgb(232,46,7)" fg:x="759111584" fg:w="4129408"/><text x="4.0176%" y="1711.50"></text></g><g><title>__writeback_inodes_wb (44,421,977 samples, 0.22%)</title><rect x="3.5798%" y="1925" width="0.2205%" height="15" fill="rgb(229,129,53)" fg:x="721274860" fg:w="44421977"/><text x="3.8298%" y="1935.50"></text></g><g><title>writeback_sb_inodes (44,421,977 samples, 0.22%)</title><rect x="3.5798%" y="1909" width="0.2205%" height="15" fill="rgb(234,188,29)" fg:x="721274860" fg:w="44421977"/><text x="3.8298%" y="1919.50"></text></g><g><title>__writeback_single_inode (44,146,478 samples, 0.22%)</title><rect x="3.5811%" y="1893" width="0.2191%" height="15" fill="rgb(246,141,4)" fg:x="721550359" fg:w="44146478"/><text x="3.8311%" y="1903.50"></text></g><g><title>do_writepages (44,146,478 samples, 0.22%)</title><rect x="3.5811%" y="1877" width="0.2191%" height="15" fill="rgb(229,23,39)" fg:x="721550359" fg:w="44146478"/><text x="3.8311%" y="1887.50"></text></g><g><title>ext4_writepages (44,146,478 samples, 0.22%)</title><rect x="3.5811%" y="1861" width="0.2191%" height="15" fill="rgb(206,12,3)" fg:x="721550359" fg:w="44146478"/><text x="3.8311%" y="1871.50"></text></g><g><title>ext4_do_writepages (44,146,478 samples, 0.22%)</title><rect x="3.5811%" y="1845" width="0.2191%" height="15" fill="rgb(252,226,20)" fg:x="721550359" fg:w="44146478"/><text x="3.8311%" y="1855.50"></text></g><g><title>mpage_prepare_extent_to_map (42,510,582 samples, 0.21%)</title><rect x="3.5893%" y="1829" width="0.2110%" height="15" fill="rgb(216,123,35)" fg:x="723186255" fg:w="42510582"/><text x="3.8393%" y="1839.50"></text></g><g><title>mpage_process_page_bufs (34,369,161 samples, 0.17%)</title><rect x="3.6297%" y="1813" width="0.1706%" height="15" fill="rgb(212,68,40)" fg:x="731327676" fg:w="34369161"/><text x="3.8797%" y="1823.50"></text></g><g><title>mpage_submit_folio (24,159,079 samples, 0.12%)</title><rect x="3.6803%" y="1797" width="0.1199%" height="15" fill="rgb(254,125,32)" fg:x="741537758" fg:w="24159079"/><text x="3.9303%" y="1807.50"></text></g><g><title>folio_clear_dirty_for_io (2,455,845 samples, 0.01%)</title><rect x="3.7881%" y="1781" width="0.0122%" height="15" fill="rgb(253,97,22)" fg:x="763240992" fg:w="2455845"/><text x="4.0381%" y="1791.50"></text></g><g><title>kworker/u67:1-f (46,844,092 samples, 0.23%)</title><rect x="3.5708%" y="2069" width="0.2325%" height="15" fill="rgb(241,101,14)" fg:x="719459561" fg:w="46844092"/><text x="3.8208%" y="2079.50"></text></g><g><title>ret_from_fork_asm (46,844,092 samples, 0.23%)</title><rect x="3.5708%" y="2053" width="0.2325%" height="15" fill="rgb(238,103,29)" fg:x="719459561" fg:w="46844092"/><text x="3.8208%" y="2063.50"></text></g><g><title>ret_from_fork (46,844,092 samples, 0.23%)</title><rect x="3.5708%" y="2037" width="0.2325%" height="15" fill="rgb(233,195,47)" fg:x="719459561" fg:w="46844092"/><text x="3.8208%" y="2047.50"></text></g><g><title>kthread (46,844,092 samples, 0.23%)</title><rect x="3.5708%" y="2021" width="0.2325%" height="15" fill="rgb(246,218,30)" fg:x="719459561" fg:w="46844092"/><text x="3.8208%" y="2031.50"></text></g><g><title>worker_thread (46,844,092 samples, 0.23%)</title><rect x="3.5708%" y="2005" width="0.2325%" height="15" fill="rgb(219,145,47)" fg:x="719459561" fg:w="46844092"/><text x="3.8208%" y="2015.50"></text></g><g><title>process_one_work (46,844,092 samples, 0.23%)</title><rect x="3.5708%" y="1989" width="0.2325%" height="15" fill="rgb(243,12,26)" fg:x="719459561" fg:w="46844092"/><text x="3.8208%" y="1999.50"></text></g><g><title>wb_workfn (46,844,092 samples, 0.23%)</title><rect x="3.5708%" y="1973" width="0.2325%" height="15" fill="rgb(214,87,16)" fg:x="719459561" fg:w="46844092"/><text x="3.8208%" y="1983.50"></text></g><g><title>wb_do_writeback (46,844,092 samples, 0.23%)</title><rect x="3.5708%" y="1957" width="0.2325%" height="15" fill="rgb(208,99,42)" fg:x="719459561" fg:w="46844092"/><text x="3.8208%" y="1967.50"></text></g><g><title>wb_writeback (45,028,793 samples, 0.22%)</title><rect x="3.5798%" y="1941" width="0.2235%" height="15" fill="rgb(253,99,2)" fg:x="721274860" fg:w="45028793"/><text x="3.8298%" y="1951.50"></text></g><g><title>find_get_entry (4,342,082 samples, 0.02%)</title><rect x="3.8187%" y="1797" width="0.0216%" height="15" fill="rgb(220,168,23)" fg:x="769420817" fg:w="4342082"/><text x="4.0687%" y="1807.50"></text></g><g><title>filemap_get_folios_tag (4,719,762 samples, 0.02%)</title><rect x="3.8187%" y="1813" width="0.0234%" height="15" fill="rgb(242,38,24)" fg:x="769420817" fg:w="4719762"/><text x="4.0687%" y="1823.50"></text></g><g><title>__folio_start_writeback (4,829,685 samples, 0.02%)</title><rect x="3.8740%" y="1765" width="0.0240%" height="15" fill="rgb(225,182,9)" fg:x="780546483" fg:w="4829685"/><text x="4.1240%" y="1775.50"></text></g><g><title>ext4_bio_write_folio (9,351,837 samples, 0.05%)</title><rect x="3.8673%" y="1781" width="0.0464%" height="15" fill="rgb(243,178,37)" fg:x="779214732" fg:w="9351837"/><text x="4.1173%" y="1791.50"></text></g><g><title>__writeback_inodes_wb (23,764,056 samples, 0.12%)</title><rect x="3.8092%" y="1925" width="0.1179%" height="15" fill="rgb(232,139,19)" fg:x="767506038" fg:w="23764056"/><text x="4.0592%" y="1935.50"></text></g><g><title>writeback_sb_inodes (23,764,056 samples, 0.12%)</title><rect x="3.8092%" y="1909" width="0.1179%" height="15" fill="rgb(225,201,24)" fg:x="767506038" fg:w="23764056"/><text x="4.0592%" y="1919.50"></text></g><g><title>__writeback_single_inode (23,764,056 samples, 0.12%)</title><rect x="3.8092%" y="1893" width="0.1179%" height="15" fill="rgb(221,47,46)" fg:x="767506038" fg:w="23764056"/><text x="4.0592%" y="1903.50"></text></g><g><title>do_writepages (23,764,056 samples, 0.12%)</title><rect x="3.8092%" y="1877" width="0.1179%" height="15" fill="rgb(249,23,13)" fg:x="767506038" fg:w="23764056"/><text x="4.0592%" y="1887.50"></text></g><g><title>ext4_writepages (23,764,056 samples, 0.12%)</title><rect x="3.8092%" y="1861" width="0.1179%" height="15" fill="rgb(219,9,5)" fg:x="767506038" fg:w="23764056"/><text x="4.0592%" y="1871.50"></text></g><g><title>ext4_do_writepages (23,764,056 samples, 0.12%)</title><rect x="3.8092%" y="1845" width="0.1179%" height="15" fill="rgb(254,171,16)" fg:x="767506038" fg:w="23764056"/><text x="4.0592%" y="1855.50"></text></g><g><title>mpage_prepare_extent_to_map (22,342,385 samples, 0.11%)</title><rect x="3.8163%" y="1829" width="0.1109%" height="15" fill="rgb(230,171,20)" fg:x="768927709" fg:w="22342385"/><text x="4.0663%" y="1839.50"></text></g><g><title>mpage_process_page_bufs (17,129,515 samples, 0.09%)</title><rect x="3.8422%" y="1813" width="0.0850%" height="15" fill="rgb(210,71,41)" fg:x="774140579" fg:w="17129515"/><text x="4.0922%" y="1823.50"></text></g><g><title>mpage_submit_folio (12,055,362 samples, 0.06%)</title><rect x="3.8673%" y="1797" width="0.0598%" height="15" fill="rgb(206,173,20)" fg:x="779214732" fg:w="12055362"/><text x="4.1173%" y="1807.50"></text></g><g><title>folio_clear_dirty_for_io (2,703,525 samples, 0.01%)</title><rect x="3.9138%" y="1781" width="0.0134%" height="15" fill="rgb(233,88,34)" fg:x="788566569" fg:w="2703525"/><text x="4.1638%" y="1791.50"></text></g><g><title>process_one_work (25,492,060 samples, 0.13%)</title><rect x="3.8033%" y="1989" width="0.1265%" height="15" fill="rgb(223,209,46)" fg:x="766303653" fg:w="25492060"/><text x="4.0533%" y="1999.50"></text></g><g><title>wb_workfn (25,492,060 samples, 0.13%)</title><rect x="3.8033%" y="1973" width="0.1265%" height="15" fill="rgb(250,43,18)" fg:x="766303653" fg:w="25492060"/><text x="4.0533%" y="1983.50"></text></g><g><title>wb_do_writeback (25,492,060 samples, 0.13%)</title><rect x="3.8033%" y="1957" width="0.1265%" height="15" fill="rgb(208,13,10)" fg:x="766303653" fg:w="25492060"/><text x="4.0533%" y="1967.50"></text></g><g><title>wb_writeback (24,289,675 samples, 0.12%)</title><rect x="3.8092%" y="1941" width="0.1206%" height="15" fill="rgb(212,200,36)" fg:x="767506038" fg:w="24289675"/><text x="4.0592%" y="1951.50"></text></g><g><title>kworker/u67:2-f (25,793,915 samples, 0.13%)</title><rect x="3.8033%" y="2069" width="0.1280%" height="15" fill="rgb(225,90,30)" fg:x="766303653" fg:w="25793915"/><text x="4.0533%" y="2079.50"></text></g><g><title>ret_from_fork_asm (25,793,915 samples, 0.13%)</title><rect x="3.8033%" y="2053" width="0.1280%" height="15" fill="rgb(236,182,39)" fg:x="766303653" fg:w="25793915"/><text x="4.0533%" y="2063.50"></text></g><g><title>ret_from_fork (25,793,915 samples, 0.13%)</title><rect x="3.8033%" y="2037" width="0.1280%" height="15" fill="rgb(212,144,35)" fg:x="766303653" fg:w="25793915"/><text x="4.0533%" y="2047.50"></text></g><g><title>kthread (25,793,915 samples, 0.13%)</title><rect x="3.8033%" y="2021" width="0.1280%" height="15" fill="rgb(228,63,44)" fg:x="766303653" fg:w="25793915"/><text x="4.0533%" y="2031.50"></text></g><g><title>worker_thread (25,793,915 samples, 0.13%)</title><rect x="3.8033%" y="2005" width="0.1280%" height="15" fill="rgb(228,109,6)" fg:x="766303653" fg:w="25793915"/><text x="4.0533%" y="2015.50"></text></g><g><title>wb_over_bg_thresh (2,845,326 samples, 0.01%)</title><rect x="3.9332%" y="1941" width="0.0141%" height="15" fill="rgb(238,117,24)" fg:x="792478386" fg:w="2845326"/><text x="4.1832%" y="1951.50"></text></g><g><title>mem_cgroup_wb_stats (2,845,326 samples, 0.01%)</title><rect x="3.9332%" y="1925" width="0.0141%" height="15" fill="rgb(242,26,26)" fg:x="792478386" fg:w="2845326"/><text x="4.1832%" y="1935.50"></text></g><g><title>cgroup_rstat_flush (2,845,326 samples, 0.01%)</title><rect x="3.9332%" y="1909" width="0.0141%" height="15" fill="rgb(221,92,48)" fg:x="792478386" fg:w="2845326"/><text x="4.1832%" y="1919.50"></text></g><g><title>cgroup_rstat_flush_locked (2,845,326 samples, 0.01%)</title><rect x="3.9332%" y="1893" width="0.0141%" height="15" fill="rgb(209,209,32)" fg:x="792478386" fg:w="2845326"/><text x="4.1832%" y="1903.50"></text></g><g><title>filemap_get_folios_tag (6,385,694 samples, 0.03%)</title><rect x="3.9742%" y="1813" width="0.0317%" height="15" fill="rgb(221,70,22)" fg:x="800736449" fg:w="6385694"/><text x="4.2242%" y="1823.50"></text></g><g><title>find_get_entry (6,033,915 samples, 0.03%)</title><rect x="3.9759%" y="1797" width="0.0299%" height="15" fill="rgb(248,145,5)" fg:x="801088228" fg:w="6033915"/><text x="4.2259%" y="1807.50"></text></g><g><title>__folio_start_writeback (7,354,240 samples, 0.04%)</title><rect x="4.1101%" y="1765" width="0.0365%" height="15" fill="rgb(226,116,26)" fg:x="828130339" fg:w="7354240"/><text x="4.3601%" y="1775.50"></text></g><g><title>fscrypt_mergeable_bio_bh (2,384,611 samples, 0.01%)</title><rect x="4.1513%" y="1765" width="0.0118%" height="15" fill="rgb(244,5,17)" fg:x="836425836" fg:w="2384611"/><text x="4.4013%" y="1775.50"></text></g><g><title>submit_bio (3,348,950 samples, 0.02%)</title><rect x="4.1631%" y="1765" width="0.0166%" height="15" fill="rgb(252,159,33)" fg:x="838810447" fg:w="3348950"/><text x="4.4131%" y="1775.50"></text></g><g><title>submit_bio_noacct (2,917,237 samples, 0.01%)</title><rect x="4.1653%" y="1749" width="0.0145%" height="15" fill="rgb(206,71,0)" fg:x="839242160" fg:w="2917237"/><text x="4.4153%" y="1759.50"></text></g><g><title>submit_bio_noacct_nocheck (2,917,237 samples, 0.01%)</title><rect x="4.1653%" y="1733" width="0.0145%" height="15" fill="rgb(233,118,54)" fg:x="839242160" fg:w="2917237"/><text x="4.4153%" y="1743.50"></text></g><g><title>__submit_bio (2,917,237 samples, 0.01%)</title><rect x="4.1653%" y="1717" width="0.0145%" height="15" fill="rgb(234,83,48)" fg:x="839242160" fg:w="2917237"/><text x="4.4153%" y="1727.50"></text></g><g><title>blk_mq_submit_bio (2,917,237 samples, 0.01%)</title><rect x="4.1653%" y="1701" width="0.0145%" height="15" fill="rgb(228,3,54)" fg:x="839242160" fg:w="2917237"/><text x="4.4153%" y="1711.50"></text></g><g><title>ext4_bio_write_folio (19,528,000 samples, 0.10%)</title><rect x="4.0859%" y="1781" width="0.0969%" height="15" fill="rgb(226,155,13)" fg:x="823241404" fg:w="19528000"/><text x="4.3359%" y="1791.50"></text></g><g><title>__mod_memcg_lruvec_state (2,455,382 samples, 0.01%)</title><rect x="4.1934%" y="1749" width="0.0122%" height="15" fill="rgb(241,28,37)" fg:x="844914294" fg:w="2455382"/><text x="4.4434%" y="1759.50"></text></g><g><title>__mod_lruvec_page_state (3,877,169 samples, 0.02%)</title><rect x="4.1918%" y="1765" width="0.0192%" height="15" fill="rgb(233,93,10)" fg:x="844587611" fg:w="3877169"/><text x="4.4418%" y="1775.50"></text></g><g><title>mpage_prepare_extent_to_map (53,332,930 samples, 0.26%)</title><rect x="3.9580%" y="1829" width="0.2647%" height="15" fill="rgb(225,113,19)" fg:x="797472343" fg:w="53332930"/><text x="4.2080%" y="1839.50"></text></g><g><title>mpage_process_page_bufs (43,683,130 samples, 0.22%)</title><rect x="4.0059%" y="1813" width="0.2168%" height="15" fill="rgb(241,2,18)" fg:x="807122143" fg:w="43683130"/><text x="4.2559%" y="1823.50"></text></g><g><title>mpage_submit_folio (28,795,292 samples, 0.14%)</title><rect x="4.0797%" y="1797" width="0.1429%" height="15" fill="rgb(228,207,21)" fg:x="822009981" fg:w="28795292"/><text x="4.3297%" y="1807.50"></text></g><g><title>folio_clear_dirty_for_io (8,035,869 samples, 0.04%)</title><rect x="4.1828%" y="1781" width="0.0399%" height="15" fill="rgb(213,211,35)" fg:x="842769404" fg:w="8035869"/><text x="4.4328%" y="1791.50"></text></g><g><title>__writeback_inodes_wb (55,842,641 samples, 0.28%)</title><rect x="3.9473%" y="1925" width="0.2772%" height="15" fill="rgb(209,83,10)" fg:x="795323712" fg:w="55842641"/><text x="4.1973%" y="1935.50"></text></g><g><title>writeback_sb_inodes (55,794,803 samples, 0.28%)</title><rect x="3.9475%" y="1909" width="0.2769%" height="15" fill="rgb(209,164,1)" fg:x="795371550" fg:w="55794803"/><text x="4.1975%" y="1919.50"></text></g><g><title>__writeback_single_inode (55,794,803 samples, 0.28%)</title><rect x="3.9475%" y="1893" width="0.2769%" height="15" fill="rgb(213,184,43)" fg:x="795371550" fg:w="55794803"/><text x="4.1975%" y="1903.50"></text></g><g><title>do_writepages (55,794,803 samples, 0.28%)</title><rect x="3.9475%" y="1877" width="0.2769%" height="15" fill="rgb(231,61,34)" fg:x="795371550" fg:w="55794803"/><text x="4.1975%" y="1887.50"></text></g><g><title>ext4_writepages (55,624,599 samples, 0.28%)</title><rect x="3.9484%" y="1861" width="0.2761%" height="15" fill="rgb(235,75,3)" fg:x="795541754" fg:w="55624599"/><text x="4.1984%" y="1871.50"></text></g><g><title>ext4_do_writepages (55,624,599 samples, 0.28%)</title><rect x="3.9484%" y="1845" width="0.2761%" height="15" fill="rgb(220,106,47)" fg:x="795541754" fg:w="55624599"/><text x="4.1984%" y="1855.50"></text></g><g><title>kworker/u68:2-e (59,373,336 samples, 0.29%)</title><rect x="3.9313%" y="2069" width="0.2947%" height="15" fill="rgb(210,196,33)" fg:x="792097568" fg:w="59373336"/><text x="4.1813%" y="2079.50"></text></g><g><title>ret_from_fork_asm (58,992,518 samples, 0.29%)</title><rect x="3.9332%" y="2053" width="0.2928%" height="15" fill="rgb(229,154,42)" fg:x="792478386" fg:w="58992518"/><text x="4.1832%" y="2063.50"></text></g><g><title>ret_from_fork (58,992,518 samples, 0.29%)</title><rect x="3.9332%" y="2037" width="0.2928%" height="15" fill="rgb(228,114,26)" fg:x="792478386" fg:w="58992518"/><text x="4.1832%" y="2047.50"></text></g><g><title>kthread (58,992,518 samples, 0.29%)</title><rect x="3.9332%" y="2021" width="0.2928%" height="15" fill="rgb(208,144,1)" fg:x="792478386" fg:w="58992518"/><text x="4.1832%" y="2031.50"></text></g><g><title>worker_thread (58,992,518 samples, 0.29%)</title><rect x="3.9332%" y="2005" width="0.2928%" height="15" fill="rgb(239,112,37)" fg:x="792478386" fg:w="58992518"/><text x="4.1832%" y="2015.50"></text></g><g><title>process_one_work (58,992,518 samples, 0.29%)</title><rect x="3.9332%" y="1989" width="0.2928%" height="15" fill="rgb(210,96,50)" fg:x="792478386" fg:w="58992518"/><text x="4.1832%" y="1999.50"></text></g><g><title>wb_workfn (58,992,518 samples, 0.29%)</title><rect x="3.9332%" y="1973" width="0.2928%" height="15" fill="rgb(222,178,2)" fg:x="792478386" fg:w="58992518"/><text x="4.1832%" y="1983.50"></text></g><g><title>wb_do_writeback (58,992,518 samples, 0.29%)</title><rect x="3.9332%" y="1957" width="0.2928%" height="15" fill="rgb(226,74,18)" fg:x="792478386" fg:w="58992518"/><text x="4.1832%" y="1967.50"></text></g><g><title>wb_writeback (56,147,192 samples, 0.28%)</title><rect x="3.9473%" y="1941" width="0.2787%" height="15" fill="rgb(225,67,54)" fg:x="795323712" fg:w="56147192"/><text x="4.1973%" y="1951.50"></text></g><g><title>filemap_get_folios_tag (3,232,492 samples, 0.02%)</title><rect x="4.2394%" y="1813" width="0.0160%" height="15" fill="rgb(251,92,32)" fg:x="854169366" fg:w="3232492"/><text x="4.4894%" y="1823.50"></text></g><g><title>find_get_entry (3,232,492 samples, 0.02%)</title><rect x="4.2394%" y="1797" width="0.0160%" height="15" fill="rgb(228,149,22)" fg:x="854169366" fg:w="3232492"/><text x="4.4894%" y="1807.50"></text></g><g><title>__folio_start_writeback (2,569,963 samples, 0.01%)</title><rect x="4.2718%" y="1765" width="0.0128%" height="15" fill="rgb(243,54,13)" fg:x="860698078" fg:w="2569963"/><text x="4.5218%" y="1775.50"></text></g><g><title>ext4_bio_write_folio (4,481,149 samples, 0.02%)</title><rect x="4.2675%" y="1781" width="0.0222%" height="15" fill="rgb(243,180,28)" fg:x="859839600" fg:w="4481149"/><text x="4.5175%" y="1791.50"></text></g><g><title>do_writepages (12,163,753 samples, 0.06%)</title><rect x="4.2347%" y="1877" width="0.0604%" height="15" fill="rgb(208,167,24)" fg:x="853240581" fg:w="12163753"/><text x="4.4847%" y="1887.50"></text></g><g><title>ext4_writepages (12,163,753 samples, 0.06%)</title><rect x="4.2347%" y="1861" width="0.0604%" height="15" fill="rgb(245,73,45)" fg:x="853240581" fg:w="12163753"/><text x="4.4847%" y="1871.50"></text></g><g><title>ext4_do_writepages (12,163,753 samples, 0.06%)</title><rect x="4.2347%" y="1845" width="0.0604%" height="15" fill="rgb(237,203,48)" fg:x="853240581" fg:w="12163753"/><text x="4.4847%" y="1855.50"></text></g><g><title>mpage_prepare_extent_to_map (11,234,968 samples, 0.06%)</title><rect x="4.2394%" y="1829" width="0.0558%" height="15" fill="rgb(211,197,16)" fg:x="854169366" fg:w="11234968"/><text x="4.4894%" y="1839.50"></text></g><g><title>mpage_process_page_bufs (8,002,476 samples, 0.04%)</title><rect x="4.2554%" y="1813" width="0.0397%" height="15" fill="rgb(243,99,51)" fg:x="857401858" fg:w="8002476"/><text x="4.5054%" y="1823.50"></text></g><g><title>mpage_submit_folio (5,564,734 samples, 0.03%)</title><rect x="4.2675%" y="1797" width="0.0276%" height="15" fill="rgb(215,123,29)" fg:x="859839600" fg:w="5564734"/><text x="4.5175%" y="1807.50"></text></g><g><title>__writeback_single_inode (12,661,850 samples, 0.06%)</title><rect x="4.2347%" y="1893" width="0.0628%" height="15" fill="rgb(239,186,37)" fg:x="853240581" fg:w="12661850"/><text x="4.4847%" y="1903.50"></text></g><g><title>kworker/u68:4-f (14,716,711 samples, 0.07%)</title><rect x="4.2260%" y="2069" width="0.0730%" height="15" fill="rgb(252,136,39)" fg:x="851470904" fg:w="14716711"/><text x="4.4760%" y="2079.50"></text></g><g><title>ret_from_fork_asm (14,716,711 samples, 0.07%)</title><rect x="4.2260%" y="2053" width="0.0730%" height="15" fill="rgb(223,213,32)" fg:x="851470904" fg:w="14716711"/><text x="4.4760%" y="2063.50"></text></g><g><title>ret_from_fork (14,716,711 samples, 0.07%)</title><rect x="4.2260%" y="2037" width="0.0730%" height="15" fill="rgb(233,115,5)" fg:x="851470904" fg:w="14716711"/><text x="4.4760%" y="2047.50"></text></g><g><title>kthread (14,716,711 samples, 0.07%)</title><rect x="4.2260%" y="2021" width="0.0730%" height="15" fill="rgb(207,226,44)" fg:x="851470904" fg:w="14716711"/><text x="4.4760%" y="2031.50"></text></g><g><title>worker_thread (14,716,711 samples, 0.07%)</title><rect x="4.2260%" y="2005" width="0.0730%" height="15" fill="rgb(208,126,0)" fg:x="851470904" fg:w="14716711"/><text x="4.4760%" y="2015.50"></text></g><g><title>process_one_work (14,716,711 samples, 0.07%)</title><rect x="4.2260%" y="1989" width="0.0730%" height="15" fill="rgb(244,66,21)" fg:x="851470904" fg:w="14716711"/><text x="4.4760%" y="1999.50"></text></g><g><title>wb_workfn (14,045,257 samples, 0.07%)</title><rect x="4.2293%" y="1973" width="0.0697%" height="15" fill="rgb(222,97,12)" fg:x="852142358" fg:w="14045257"/><text x="4.4793%" y="1983.50"></text></g><g><title>wb_do_writeback (14,045,257 samples, 0.07%)</title><rect x="4.2293%" y="1957" width="0.0697%" height="15" fill="rgb(219,213,19)" fg:x="852142358" fg:w="14045257"/><text x="4.4793%" y="1967.50"></text></g><g><title>wb_writeback (12,947,034 samples, 0.06%)</title><rect x="4.2347%" y="1941" width="0.0643%" height="15" fill="rgb(252,169,30)" fg:x="853240581" fg:w="12947034"/><text x="4.4847%" y="1951.50"></text></g><g><title>__writeback_inodes_wb (12,947,034 samples, 0.06%)</title><rect x="4.2347%" y="1925" width="0.0643%" height="15" fill="rgb(206,32,51)" fg:x="853240581" fg:w="12947034"/><text x="4.4847%" y="1935.50"></text></g><g><title>writeback_sb_inodes (12,947,034 samples, 0.06%)</title><rect x="4.2347%" y="1909" width="0.0643%" height="15" fill="rgb(250,172,42)" fg:x="853240581" fg:w="12947034"/><text x="4.4847%" y="1919.50"></text></g><g><title>__switch_to (2,973,612 samples, 0.01%)</title><rect x="4.3027%" y="1957" width="0.0148%" height="15" fill="rgb(209,34,43)" fg:x="866933965" fg:w="2973612"/><text x="4.5527%" y="1967.50"></text></g><g><title>kworker/u69:1-e (3,961,198 samples, 0.02%)</title><rect x="4.2990%" y="2069" width="0.0197%" height="15" fill="rgb(223,11,35)" fg:x="866187615" fg:w="3961198"/><text x="4.5490%" y="2079.50"></text></g><g><title>ret_from_fork_asm (3,961,198 samples, 0.02%)</title><rect x="4.2990%" y="2053" width="0.0197%" height="15" fill="rgb(251,219,26)" fg:x="866187615" fg:w="3961198"/><text x="4.5490%" y="2063.50"></text></g><g><title>ret_from_fork (3,961,198 samples, 0.02%)</title><rect x="4.2990%" y="2037" width="0.0197%" height="15" fill="rgb(231,119,3)" fg:x="866187615" fg:w="3961198"/><text x="4.5490%" y="2047.50"></text></g><g><title>kthread (3,961,198 samples, 0.02%)</title><rect x="4.2990%" y="2021" width="0.0197%" height="15" fill="rgb(216,97,11)" fg:x="866187615" fg:w="3961198"/><text x="4.5490%" y="2031.50"></text></g><g><title>worker_thread (3,961,198 samples, 0.02%)</title><rect x="4.2990%" y="2005" width="0.0197%" height="15" fill="rgb(223,59,9)" fg:x="866187615" fg:w="3961198"/><text x="4.5490%" y="2015.50"></text></g><g><title>schedule (3,337,437 samples, 0.02%)</title><rect x="4.3021%" y="1989" width="0.0166%" height="15" fill="rgb(233,93,31)" fg:x="866811376" fg:w="3337437"/><text x="4.5521%" y="1999.50"></text></g><g><title>__sched_text_start (3,214,848 samples, 0.02%)</title><rect x="4.3027%" y="1973" width="0.0160%" height="15" fill="rgb(239,81,33)" fg:x="866933965" fg:w="3214848"/><text x="4.5527%" y="1983.50"></text></g><g><title>[ls] (3,751,136 samples, 0.02%)</title><rect x="4.3309%" y="2053" width="0.0186%" height="15" fill="rgb(213,120,34)" fg:x="872605122" fg:w="3751136"/><text x="4.5809%" y="2063.50"></text></g><g><title>[ls] (5,631,796 samples, 0.03%)</title><rect x="4.3631%" y="2021" width="0.0280%" height="15" fill="rgb(243,49,53)" fg:x="879109895" fg:w="5631796"/><text x="4.6131%" y="2031.50"></text></g><g><title>[ls] (9,872,036 samples, 0.05%)</title><rect x="4.3495%" y="2037" width="0.0490%" height="15" fill="rgb(247,216,33)" fg:x="876356258" fg:w="9872036"/><text x="4.5995%" y="2047.50"></text></g><g><title>[unknown] (2,276,540 samples, 0.01%)</title><rect x="4.3985%" y="2037" width="0.0113%" height="15" fill="rgb(226,26,14)" fg:x="886228294" fg:w="2276540"/><text x="4.6485%" y="2047.50"></text></g><g><title>inode_permission (2,103,084 samples, 0.01%)</title><rect x="4.4450%" y="1893" width="0.0104%" height="15" fill="rgb(215,49,53)" fg:x="895600561" fg:w="2103084"/><text x="4.6950%" y="1903.50"></text></g><g><title>link_path_walk (6,352,195 samples, 0.03%)</title><rect x="4.4348%" y="1909" width="0.0315%" height="15" fill="rgb(245,162,40)" fg:x="893545866" fg:w="6352195"/><text x="4.6848%" y="1919.50"></text></g><g><title>step_into (2,194,416 samples, 0.01%)</title><rect x="4.4554%" y="1893" width="0.0109%" height="15" fill="rgb(229,68,17)" fg:x="897703645" fg:w="2194416"/><text x="4.7054%" y="1903.50"></text></g><g><title>lookup_fast (2,233,212 samples, 0.01%)</title><rect x="4.4809%" y="1893" width="0.0111%" height="15" fill="rgb(213,182,10)" fg:x="902827968" fg:w="2233212"/><text x="4.7309%" y="1903.50"></text></g><g><title>filename_lookup (14,346,301 samples, 0.07%)</title><rect x="4.4276%" y="1941" width="0.0712%" height="15" fill="rgb(245,125,30)" fg:x="892101369" fg:w="14346301"/><text x="4.6776%" y="1951.50"></text></g><g><title>path_lookupat (13,565,332 samples, 0.07%)</title><rect x="4.4315%" y="1925" width="0.0673%" height="15" fill="rgb(232,202,2)" fg:x="892882338" fg:w="13565332"/><text x="4.6815%" y="1935.50"></text></g><g><title>walk_component (3,619,702 samples, 0.02%)</title><rect x="4.4809%" y="1909" width="0.0180%" height="15" fill="rgb(237,140,51)" fg:x="902827968" fg:w="3619702"/><text x="4.7309%" y="1919.50"></text></g><g><title>memset_orig (5,047,911 samples, 0.03%)</title><rect x="4.4988%" y="1925" width="0.0251%" height="15" fill="rgb(236,157,25)" fg:x="906447670" fg:w="5047911"/><text x="4.7488%" y="1935.50"></text></g><g><title>getname_flags (7,198,726 samples, 0.04%)</title><rect x="4.4988%" y="1941" width="0.0357%" height="15" fill="rgb(219,209,0)" fg:x="906447670" fg:w="7198726"/><text x="4.7488%" y="1951.50"></text></g><g><title>strncpy_from_user (2,150,815 samples, 0.01%)</title><rect x="4.5239%" y="1925" width="0.0107%" height="15" fill="rgb(240,116,54)" fg:x="911495581" fg:w="2150815"/><text x="4.7739%" y="1935.50"></text></g><g><title>user_path_at_empty (23,045,514 samples, 0.11%)</title><rect x="4.4276%" y="1957" width="0.1144%" height="15" fill="rgb(216,10,36)" fg:x="892101369" fg:w="23045514"/><text x="4.6776%" y="1967.50"></text></g><g><title>d_path (7,309,381 samples, 0.04%)</title><rect x="4.5494%" y="1925" width="0.0363%" height="15" fill="rgb(222,72,44)" fg:x="916631044" fg:w="7309381"/><text x="4.7994%" y="1935.50"></text></g><g><title>prepend_path (3,773,820 samples, 0.02%)</title><rect x="4.5669%" y="1909" width="0.0187%" height="15" fill="rgb(232,159,9)" fg:x="920166605" fg:w="3773820"/><text x="4.8169%" y="1919.50"></text></g><g><title>__x64_sys_readlink (40,675,596 samples, 0.20%)</title><rect x="4.4202%" y="1989" width="0.2019%" height="15" fill="rgb(210,39,32)" fg:x="890617734" fg:w="40675596"/><text x="4.6702%" y="1999.50"></text></g><g><title>do_readlinkat (40,675,596 samples, 0.20%)</title><rect x="4.4202%" y="1973" width="0.2019%" height="15" fill="rgb(216,194,45)" fg:x="890617734" fg:w="40675596"/><text x="4.6702%" y="1983.50"></text></g><g><title>vfs_readlink (16,146,447 samples, 0.08%)</title><rect x="4.5420%" y="1957" width="0.0801%" height="15" fill="rgb(218,18,35)" fg:x="915146883" fg:w="16146447"/><text x="4.7920%" y="1967.50"></text></g><g><title>proc_pid_readlink (15,399,521 samples, 0.08%)</title><rect x="4.5457%" y="1941" width="0.0764%" height="15" fill="rgb(207,83,51)" fg:x="915893809" fg:w="15399521"/><text x="4.7957%" y="1951.50"></text></g><g><title>ptrace_may_access (3,770,893 samples, 0.02%)</title><rect x="4.6034%" y="1925" width="0.0187%" height="15" fill="rgb(225,63,43)" fg:x="927522437" fg:w="3770893"/><text x="4.8534%" y="1935.50"></text></g><g><title>__ptrace_may_access (3,770,893 samples, 0.02%)</title><rect x="4.6034%" y="1909" width="0.0187%" height="15" fill="rgb(207,57,36)" fg:x="927522437" fg:w="3770893"/><text x="4.8534%" y="1919.50"></text></g><g><title>security_ptrace_access_check (3,014,442 samples, 0.01%)</title><rect x="4.6072%" y="1893" width="0.0150%" height="15" fill="rgb(216,99,33)" fg:x="928278888" fg:w="3014442"/><text x="4.8572%" y="1903.50"></text></g><g><title>entry_SYSCALL_64 (42,802,257 samples, 0.21%)</title><rect x="4.4167%" y="2021" width="0.2124%" height="15" fill="rgb(225,42,16)" fg:x="889895382" fg:w="42802257"/><text x="4.6667%" y="2031.50"></text></g><g><title>do_syscall_64 (42,079,905 samples, 0.21%)</title><rect x="4.4202%" y="2005" width="0.2088%" height="15" fill="rgb(220,201,45)" fg:x="890617734" fg:w="42079905"/><text x="4.6702%" y="2015.50"></text></g><g><title>__GI___readlink (47,291,454 samples, 0.23%)</title><rect x="4.4167%" y="2037" width="0.2347%" height="15" fill="rgb(225,33,4)" fg:x="889895382" fg:w="47291454"/><text x="4.6667%" y="2047.50"></text></g><g><title>entry_ibpb (4,489,197 samples, 0.02%)</title><rect x="4.6291%" y="2021" width="0.0223%" height="15" fill="rgb(224,33,50)" fg:x="932697639" fg:w="4489197"/><text x="4.8791%" y="2031.50"></text></g><g><title>__strcoll_l (6,517,147 samples, 0.03%)</title><rect x="4.6545%" y="2037" width="0.0323%" height="15" fill="rgb(246,198,51)" fg:x="937823752" fg:w="6517147"/><text x="4.9045%" y="2047.50"></text></g><g><title>[unknown] (70,836,983 samples, 0.35%)</title><rect x="4.3495%" y="2053" width="0.3516%" height="15" fill="rgb(205,22,4)" fg:x="876356258" fg:w="70836983"/><text x="4.5995%" y="2063.50"></text></g><g><title>_int_malloc (3,417,812 samples, 0.02%)</title><rect x="4.7341%" y="2053" width="0.0170%" height="15" fill="rgb(206,3,8)" fg:x="953855840" fg:w="3417812"/><text x="4.9841%" y="2063.50"></text></g><g><title>__check_object_size (2,097,552 samples, 0.01%)</title><rect x="4.7943%" y="1957" width="0.0104%" height="15" fill="rgb(251,23,15)" fg:x="965990667" fg:w="2097552"/><text x="5.0443%" y="1967.50"></text></g><g><title>getname_flags (6,507,191 samples, 0.03%)</title><rect x="4.7761%" y="1989" width="0.0323%" height="15" fill="rgb(252,88,28)" fg:x="962320229" fg:w="6507191"/><text x="5.0261%" y="1999.50"></text></g><g><title>strncpy_from_user (3,522,603 samples, 0.02%)</title><rect x="4.7909%" y="1973" width="0.0175%" height="15" fill="rgb(212,127,14)" fg:x="965304817" fg:w="3522603"/><text x="5.0409%" y="1983.50"></text></g><g><title>inode_permission (2,874,006 samples, 0.01%)</title><rect x="4.8234%" y="1925" width="0.0143%" height="15" fill="rgb(247,145,37)" fg:x="971849717" fg:w="2874006"/><text x="5.0734%" y="1935.50"></text></g><g><title>lookup_fast (5,223,649 samples, 0.03%)</title><rect x="4.8377%" y="1925" width="0.0259%" height="15" fill="rgb(209,117,53)" fg:x="974723723" fg:w="5223649"/><text x="5.0877%" y="1935.50"></text></g><g><title>link_path_walk (8,846,208 samples, 0.04%)</title><rect x="4.8234%" y="1941" width="0.0439%" height="15" fill="rgb(212,90,42)" fg:x="971849717" fg:w="8846208"/><text x="5.0734%" y="1951.50"></text></g><g><title>filename_lookup (11,889,613 samples, 0.06%)</title><rect x="4.8196%" y="1973" width="0.0590%" height="15" fill="rgb(218,164,37)" fg:x="971078362" fg:w="11889613"/><text x="5.0696%" y="1983.50"></text></g><g><title>path_lookupat (11,889,613 samples, 0.06%)</title><rect x="4.8196%" y="1957" width="0.0590%" height="15" fill="rgb(246,65,34)" fg:x="971078362" fg:w="11889613"/><text x="5.0696%" y="1967.50"></text></g><g><title>__x64_sys_statx (23,566,101 samples, 0.12%)</title><rect x="4.7688%" y="2005" width="0.1170%" height="15" fill="rgb(231,100,33)" fg:x="960855495" fg:w="23566101"/><text x="5.0188%" y="2015.50"></text></g><g><title>vfs_statx (14,080,688 samples, 0.07%)</title><rect x="4.8159%" y="1989" width="0.0699%" height="15" fill="rgb(228,126,14)" fg:x="970340908" fg:w="14080688"/><text x="5.0659%" y="1999.50"></text></g><g><title>entry_SYSCALL_64 (26,525,374 samples, 0.13%)</title><rect x="4.7653%" y="2037" width="0.1316%" height="15" fill="rgb(215,173,21)" fg:x="960132224" fg:w="26525374"/><text x="5.0153%" y="2047.50"></text></g><g><title>do_syscall_64 (25,802,103 samples, 0.13%)</title><rect x="4.7688%" y="2021" width="0.1281%" height="15" fill="rgb(210,6,40)" fg:x="960855495" fg:w="25802103"/><text x="5.0188%" y="2031.50"></text></g><g><title>statx (28,798,591 samples, 0.14%)</title><rect x="4.7653%" y="2053" width="0.1429%" height="15" fill="rgb(212,48,18)" fg:x="960132224" fg:w="28798591"/><text x="5.0153%" y="2063.50"></text></g><g><title>entry_ibpb (2,273,217 samples, 0.01%)</title><rect x="4.8969%" y="2037" width="0.0113%" height="15" fill="rgb(230,214,11)" fg:x="986657598" fg:w="2273217"/><text x="5.1469%" y="2047.50"></text></g><g><title>ls (116,974,546 samples, 0.58%)</title><rect x="4.3309%" y="2069" width="0.5806%" height="15" fill="rgb(254,105,39)" fg:x="872605122" fg:w="116974546"/><text x="4.5809%" y="2079.50"></text></g><g><title>InotifyBackend::handleSubscription (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="2053" width="0.0295%" height="15" fill="rgb(245,158,5)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="2063.50"></text></g><g><title>Watcher::isIgnored (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="2037" width="0.0295%" height="15" fill="rgb(249,208,11)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="2047.50"></text></g><g><title>Glob::isIgnored (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="2021" width="0.0295%" height="15" fill="rgb(210,39,28)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="2031.50"></text></g><g><title>bool std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;, (std::__detail::_RegexExecutorPolicy)0, true&gt; (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="2005" width="0.0295%" height="15" fill="rgb(211,56,53)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="2015.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1989" width="0.0295%" height="15" fill="rgb(226,201,30)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1999.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1973" width="0.0295%" height="15" fill="rgb(239,101,34)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1983.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1957" width="0.0295%" height="15" fill="rgb(226,209,5)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1967.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1941" width="0.0295%" height="15" fill="rgb(250,105,47)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1951.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1925" width="0.0295%" height="15" fill="rgb(230,72,3)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1935.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1909" width="0.0295%" height="15" fill="rgb(232,218,39)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1919.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1893" width="0.0295%" height="15" fill="rgb(248,166,6)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1903.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1877" width="0.0295%" height="15" fill="rgb(247,89,20)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1887.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1861" width="0.0295%" height="15" fill="rgb(248,130,54)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1871.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1845" width="0.0295%" height="15" fill="rgb(234,196,4)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1855.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1829" width="0.0295%" height="15" fill="rgb(250,143,31)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1839.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1813" width="0.0295%" height="15" fill="rgb(211,110,34)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1823.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1797" width="0.0295%" height="15" fill="rgb(215,124,48)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1807.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1781" width="0.0295%" height="15" fill="rgb(216,46,13)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1791.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1765" width="0.0295%" height="15" fill="rgb(205,184,25)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1775.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1749" width="0.0295%" height="15" fill="rgb(228,1,10)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1759.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1733" width="0.0295%" height="15" fill="rgb(213,116,27)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1743.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1717" width="0.0295%" height="15" fill="rgb(241,95,50)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1727.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1701" width="0.0295%" height="15" fill="rgb(238,48,32)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1711.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1685" width="0.0295%" height="15" fill="rgb(235,113,49)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1695.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1669" width="0.0295%" height="15" fill="rgb(205,127,43)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1679.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1653" width="0.0295%" height="15" fill="rgb(250,162,2)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1663.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1637" width="0.0295%" height="15" fill="rgb(220,13,41)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1647.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1621" width="0.0295%" height="15" fill="rgb(249,221,25)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1631.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1605" width="0.0295%" height="15" fill="rgb(215,208,19)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1615.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1589" width="0.0295%" height="15" fill="rgb(236,175,2)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1599.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1573" width="0.0295%" height="15" fill="rgb(241,52,2)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1583.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1557" width="0.0295%" height="15" fill="rgb(248,140,14)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1567.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1541" width="0.0295%" height="15" fill="rgb(253,22,42)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1551.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1525" width="0.0295%" height="15" fill="rgb(234,61,47)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1535.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1509" width="0.0295%" height="15" fill="rgb(208,226,15)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1519.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1493" width="0.0295%" height="15" fill="rgb(217,221,4)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1503.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1477" width="0.0295%" height="15" fill="rgb(212,174,34)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1487.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1461" width="0.0295%" height="15" fill="rgb(253,83,4)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1471.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1445" width="0.0295%" height="15" fill="rgb(250,195,49)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1455.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1429" width="0.0295%" height="15" fill="rgb(241,192,25)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1439.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1413" width="0.0295%" height="15" fill="rgb(208,124,10)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1423.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1397" width="0.0295%" height="15" fill="rgb(222,33,0)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1407.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1381" width="0.0295%" height="15" fill="rgb(234,209,28)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1391.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1365" width="0.0295%" height="15" fill="rgb(224,11,23)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1375.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1349" width="0.0295%" height="15" fill="rgb(232,99,1)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1359.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1333" width="0.0295%" height="15" fill="rgb(237,95,45)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1343.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1317" width="0.0295%" height="15" fill="rgb(208,109,11)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1327.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1301" width="0.0295%" height="15" fill="rgb(216,190,48)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1311.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1285" width="0.0295%" height="15" fill="rgb(251,171,36)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1295.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1269" width="0.0295%" height="15" fill="rgb(230,62,22)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1279.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1253" width="0.0295%" height="15" fill="rgb(225,114,35)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1263.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1237" width="0.0295%" height="15" fill="rgb(215,118,42)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1247.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1221" width="0.0295%" height="15" fill="rgb(243,119,21)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1231.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1205" width="0.0295%" height="15" fill="rgb(252,177,53)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1215.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1189" width="0.0295%" height="15" fill="rgb(237,209,29)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1199.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1173" width="0.0295%" height="15" fill="rgb(212,65,23)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1183.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1157" width="0.0295%" height="15" fill="rgb(230,222,46)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1167.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1141" width="0.0295%" height="15" fill="rgb(215,135,32)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1151.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1125" width="0.0295%" height="15" fill="rgb(246,101,22)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1135.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1109" width="0.0295%" height="15" fill="rgb(206,107,13)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1119.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1093" width="0.0295%" height="15" fill="rgb(250,100,44)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1103.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1077" width="0.0295%" height="15" fill="rgb(231,147,38)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1087.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1061" width="0.0295%" height="15" fill="rgb(229,8,40)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1071.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1045" width="0.0295%" height="15" fill="rgb(221,135,30)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1055.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1029" width="0.0295%" height="15" fill="rgb(249,193,18)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1039.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="1013" width="0.0295%" height="15" fill="rgb(209,133,39)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1023.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="997" width="0.0295%" height="15" fill="rgb(232,100,14)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="1007.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="981" width="0.0295%" height="15" fill="rgb(224,185,1)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="991.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="965" width="0.0295%" height="15" fill="rgb(223,139,8)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="975.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="949" width="0.0295%" height="15" fill="rgb(232,213,38)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="959.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="933" width="0.0295%" height="15" fill="rgb(207,94,22)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="943.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="917" width="0.0295%" height="15" fill="rgb(219,183,54)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="927.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="901" width="0.0295%" height="15" fill="rgb(216,185,54)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="911.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="885" width="0.0295%" height="15" fill="rgb(254,217,39)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="895.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="869" width="0.0295%" height="15" fill="rgb(240,178,23)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="879.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="853" width="0.0295%" height="15" fill="rgb(218,11,47)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="863.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="837" width="0.0295%" height="15" fill="rgb(218,51,51)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="847.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="821" width="0.0295%" height="15" fill="rgb(238,126,27)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="831.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="805" width="0.0295%" height="15" fill="rgb(249,202,22)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="815.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="789" width="0.0295%" height="15" fill="rgb(254,195,49)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="799.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="773" width="0.0295%" height="15" fill="rgb(208,123,14)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="783.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="757" width="0.0295%" height="15" fill="rgb(224,200,8)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="767.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="741" width="0.0295%" height="15" fill="rgb(217,61,36)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="751.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="725" width="0.0295%" height="15" fill="rgb(206,35,45)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="735.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="709" width="0.0295%" height="15" fill="rgb(217,65,33)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="719.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="693" width="0.0295%" height="15" fill="rgb(222,158,48)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="703.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="677" width="0.0295%" height="15" fill="rgb(254,2,54)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="687.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="661" width="0.0295%" height="15" fill="rgb(250,143,38)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="671.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="645" width="0.0295%" height="15" fill="rgb(248,25,0)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="655.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="629" width="0.0295%" height="15" fill="rgb(206,152,27)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="639.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="613" width="0.0295%" height="15" fill="rgb(240,77,30)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="623.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="597" width="0.0295%" height="15" fill="rgb(231,5,3)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="607.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="581" width="0.0295%" height="15" fill="rgb(207,226,32)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="591.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="565" width="0.0295%" height="15" fill="rgb(222,207,47)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="575.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="549" width="0.0295%" height="15" fill="rgb(229,115,45)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="559.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="533" width="0.0295%" height="15" fill="rgb(224,191,6)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="543.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="517" width="0.0295%" height="15" fill="rgb(230,227,24)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="527.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="501" width="0.0295%" height="15" fill="rgb(228,80,19)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="511.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="485" width="0.0295%" height="15" fill="rgb(247,229,0)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="495.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="469" width="0.0295%" height="15" fill="rgb(237,194,15)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="479.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="453" width="0.0295%" height="15" fill="rgb(219,203,20)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="463.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="437" width="0.0295%" height="15" fill="rgb(234,128,8)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="447.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="421" width="0.0295%" height="15" fill="rgb(248,202,8)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="431.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="405" width="0.0295%" height="15" fill="rgb(206,104,37)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="415.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="389" width="0.0295%" height="15" fill="rgb(223,8,27)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="399.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="373" width="0.0295%" height="15" fill="rgb(216,217,28)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="383.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="357" width="0.0295%" height="15" fill="rgb(249,199,1)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="367.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="341" width="0.0295%" height="15" fill="rgb(240,85,17)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="351.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="325" width="0.0295%" height="15" fill="rgb(206,108,45)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="335.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="309" width="0.0295%" height="15" fill="rgb(245,210,41)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="319.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="293" width="0.0295%" height="15" fill="rgb(206,13,37)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="303.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="277" width="0.0295%" height="15" fill="rgb(250,61,18)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="287.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="261" width="0.0295%" height="15" fill="rgb(235,172,48)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="271.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="245" width="0.0295%" height="15" fill="rgb(249,201,17)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="255.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="229" width="0.0295%" height="15" fill="rgb(219,208,6)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="239.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="213" width="0.0295%" height="15" fill="rgb(248,31,23)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="223.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="197" width="0.0295%" height="15" fill="rgb(245,15,42)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="207.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="181" width="0.0295%" height="15" fill="rgb(222,217,39)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="191.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="165" width="0.0295%" height="15" fill="rgb(210,219,27)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="175.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="149" width="0.0295%" height="15" fill="rgb(252,166,36)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="159.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="133" width="0.0295%" height="15" fill="rgb(245,132,34)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="143.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="117" width="0.0295%" height="15" fill="rgb(236,54,3)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="127.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="101" width="0.0295%" height="15" fill="rgb(241,173,43)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="111.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="85" width="0.0295%" height="15" fill="rgb(215,190,9)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="95.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="69" width="0.0295%" height="15" fill="rgb(242,101,16)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="79.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,945,090 samples, 0.03%)</title><rect x="4.9243%" y="53" width="0.0295%" height="15" fill="rgb(223,190,21)" fg:x="992179732" fg:w="5945090"/><text x="5.1743%" y="63.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (4,700,716 samples, 0.02%)</title><rect x="4.9305%" y="37" width="0.0233%" height="15" fill="rgb(215,228,25)" fg:x="993424106" fg:w="4700716"/><text x="5.1805%" y="47.50"></text></g><g><title>InotifyBackend::start (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="2053" width="0.0104%" height="15" fill="rgb(225,36,22)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="2063.50"></text></g><g><title>InotifyBackend::handleEvents (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="2037" width="0.0104%" height="15" fill="rgb(251,106,46)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="2047.50"></text></g><g><title>InotifyBackend::handleEvent (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="2021" width="0.0104%" height="15" fill="rgb(208,90,1)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="2031.50"></text></g><g><title>InotifyBackend::handleSubscription (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="2005" width="0.0104%" height="15" fill="rgb(243,10,4)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="2015.50"></text></g><g><title>Watcher::isIgnored (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1989" width="0.0104%" height="15" fill="rgb(212,137,27)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1999.50"></text></g><g><title>Glob::isIgnored (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1973" width="0.0104%" height="15" fill="rgb(231,220,49)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1983.50"></text></g><g><title>bool std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;, (std::__detail::_RegexExecutorPolicy)0, true&gt; (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1957" width="0.0104%" height="15" fill="rgb(237,96,20)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1967.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1941" width="0.0104%" height="15" fill="rgb(239,229,30)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1951.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1925" width="0.0104%" height="15" fill="rgb(219,65,33)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1935.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1909" width="0.0104%" height="15" fill="rgb(243,134,7)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1919.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1893" width="0.0104%" height="15" fill="rgb(216,177,54)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1903.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1877" width="0.0104%" height="15" fill="rgb(211,160,20)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1887.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1861" width="0.0104%" height="15" fill="rgb(239,85,39)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1871.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1845" width="0.0104%" height="15" fill="rgb(232,125,22)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1855.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1829" width="0.0104%" height="15" fill="rgb(244,57,34)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1839.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1813" width="0.0104%" height="15" fill="rgb(214,203,32)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1823.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1797" width="0.0104%" height="15" fill="rgb(207,58,43)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1807.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1781" width="0.0104%" height="15" fill="rgb(215,193,15)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1791.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1765" width="0.0104%" height="15" fill="rgb(232,15,44)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1775.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1749" width="0.0104%" height="15" fill="rgb(212,3,48)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1759.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1733" width="0.0104%" height="15" fill="rgb(218,128,7)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1743.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1717" width="0.0104%" height="15" fill="rgb(226,216,39)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1727.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1701" width="0.0104%" height="15" fill="rgb(243,47,51)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1711.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1685" width="0.0104%" height="15" fill="rgb(241,183,40)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1695.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1669" width="0.0104%" height="15" fill="rgb(231,217,32)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1679.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1653" width="0.0104%" height="15" fill="rgb(229,61,38)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1663.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1637" width="0.0104%" height="15" fill="rgb(225,210,5)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1647.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1621" width="0.0104%" height="15" fill="rgb(231,79,45)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1631.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1605" width="0.0104%" height="15" fill="rgb(224,100,7)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1615.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1589" width="0.0104%" height="15" fill="rgb(241,198,18)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1599.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1573" width="0.0104%" height="15" fill="rgb(252,97,53)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1583.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1557" width="0.0104%" height="15" fill="rgb(220,88,7)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1567.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1541" width="0.0104%" height="15" fill="rgb(213,176,14)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1551.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1525" width="0.0104%" height="15" fill="rgb(246,73,7)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1535.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1509" width="0.0104%" height="15" fill="rgb(245,64,36)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1519.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1493" width="0.0104%" height="15" fill="rgb(245,80,10)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1503.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1477" width="0.0104%" height="15" fill="rgb(232,107,50)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1487.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1461" width="0.0104%" height="15" fill="rgb(253,3,0)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1471.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1445" width="0.0104%" height="15" fill="rgb(212,99,53)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1455.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1429" width="0.0104%" height="15" fill="rgb(249,111,54)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1439.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1413" width="0.0104%" height="15" fill="rgb(249,55,30)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1423.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1397" width="0.0104%" height="15" fill="rgb(237,47,42)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1407.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1381" width="0.0104%" height="15" fill="rgb(211,20,18)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1391.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1365" width="0.0104%" height="15" fill="rgb(231,203,46)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1375.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1349" width="0.0104%" height="15" fill="rgb(237,142,3)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1359.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1333" width="0.0104%" height="15" fill="rgb(241,107,1)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1343.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1317" width="0.0104%" height="15" fill="rgb(229,83,13)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1327.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1301" width="0.0104%" height="15" fill="rgb(241,91,40)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1311.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1285" width="0.0104%" height="15" fill="rgb(225,3,45)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1295.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1269" width="0.0104%" height="15" fill="rgb(244,223,14)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1279.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1253" width="0.0104%" height="15" fill="rgb(224,124,37)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1263.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1237" width="0.0104%" height="15" fill="rgb(251,171,30)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1247.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1221" width="0.0104%" height="15" fill="rgb(236,46,54)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1231.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1205" width="0.0104%" height="15" fill="rgb(245,213,5)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1215.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1189" width="0.0104%" height="15" fill="rgb(230,144,27)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1199.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1173" width="0.0104%" height="15" fill="rgb(220,86,6)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1183.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1157" width="0.0104%" height="15" fill="rgb(240,20,13)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1167.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1141" width="0.0104%" height="15" fill="rgb(217,89,34)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1151.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1125" width="0.0104%" height="15" fill="rgb(229,13,5)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1135.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1109" width="0.0104%" height="15" fill="rgb(244,67,35)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1119.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1093" width="0.0104%" height="15" fill="rgb(221,40,2)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1103.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1077" width="0.0104%" height="15" fill="rgb(237,157,21)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1087.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1061" width="0.0104%" height="15" fill="rgb(222,94,11)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1071.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1045" width="0.0104%" height="15" fill="rgb(249,113,6)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1055.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1029" width="0.0104%" height="15" fill="rgb(238,137,36)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1039.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="1013" width="0.0104%" height="15" fill="rgb(210,102,26)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1023.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="997" width="0.0104%" height="15" fill="rgb(218,30,30)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="1007.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="981" width="0.0104%" height="15" fill="rgb(214,67,26)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="991.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="965" width="0.0104%" height="15" fill="rgb(251,9,53)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="975.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="949" width="0.0104%" height="15" fill="rgb(228,204,25)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="959.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="933" width="0.0104%" height="15" fill="rgb(207,153,8)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="943.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="917" width="0.0104%" height="15" fill="rgb(242,9,16)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="927.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="901" width="0.0104%" height="15" fill="rgb(217,211,10)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="911.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="885" width="0.0104%" height="15" fill="rgb(219,228,52)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="895.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="869" width="0.0104%" height="15" fill="rgb(231,92,29)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="879.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="853" width="0.0104%" height="15" fill="rgb(232,8,23)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="863.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="837" width="0.0104%" height="15" fill="rgb(216,211,34)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="847.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="821" width="0.0104%" height="15" fill="rgb(236,151,0)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="831.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="805" width="0.0104%" height="15" fill="rgb(209,168,3)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="815.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="789" width="0.0104%" height="15" fill="rgb(208,129,28)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="799.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="773" width="0.0104%" height="15" fill="rgb(229,78,22)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="783.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="757" width="0.0104%" height="15" fill="rgb(228,187,13)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="767.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="741" width="0.0104%" height="15" fill="rgb(240,119,24)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="751.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="725" width="0.0104%" height="15" fill="rgb(209,194,42)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="735.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="709" width="0.0104%" height="15" fill="rgb(247,200,46)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="719.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="693" width="0.0104%" height="15" fill="rgb(218,76,16)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="703.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="677" width="0.0104%" height="15" fill="rgb(225,21,48)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="687.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="661" width="0.0104%" height="15" fill="rgb(239,223,50)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="671.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="645" width="0.0104%" height="15" fill="rgb(244,45,21)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="655.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="629" width="0.0104%" height="15" fill="rgb(232,33,43)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="639.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="613" width="0.0104%" height="15" fill="rgb(209,8,3)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="623.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="597" width="0.0104%" height="15" fill="rgb(214,25,53)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="607.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="581" width="0.0104%" height="15" fill="rgb(254,186,54)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="591.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="565" width="0.0104%" height="15" fill="rgb(208,174,49)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="575.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="549" width="0.0104%" height="15" fill="rgb(233,191,51)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="559.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="533" width="0.0104%" height="15" fill="rgb(222,134,10)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="543.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="517" width="0.0104%" height="15" fill="rgb(230,226,20)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="527.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="501" width="0.0104%" height="15" fill="rgb(251,111,25)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="511.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="485" width="0.0104%" height="15" fill="rgb(224,40,46)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="495.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="469" width="0.0104%" height="15" fill="rgb(236,108,47)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="479.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="453" width="0.0104%" height="15" fill="rgb(234,93,0)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="463.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="437" width="0.0104%" height="15" fill="rgb(224,213,32)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="447.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="421" width="0.0104%" height="15" fill="rgb(251,11,48)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="431.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="405" width="0.0104%" height="15" fill="rgb(236,173,5)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="415.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="389" width="0.0104%" height="15" fill="rgb(230,95,12)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="399.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="373" width="0.0104%" height="15" fill="rgb(232,209,1)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="383.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="357" width="0.0104%" height="15" fill="rgb(232,6,1)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="367.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="341" width="0.0104%" height="15" fill="rgb(210,224,50)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="351.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="325" width="0.0104%" height="15" fill="rgb(228,127,35)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="335.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="309" width="0.0104%" height="15" fill="rgb(245,102,45)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="319.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="293" width="0.0104%" height="15" fill="rgb(214,1,49)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="303.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="277" width="0.0104%" height="15" fill="rgb(226,163,40)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="287.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="261" width="0.0104%" height="15" fill="rgb(239,212,28)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="271.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="245" width="0.0104%" height="15" fill="rgb(220,20,13)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="255.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="229" width="0.0104%" height="15" fill="rgb(210,164,35)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="239.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="213" width="0.0104%" height="15" fill="rgb(248,109,41)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="223.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="197" width="0.0104%" height="15" fill="rgb(238,23,50)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="207.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="181" width="0.0104%" height="15" fill="rgb(211,48,49)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="191.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="165" width="0.0104%" height="15" fill="rgb(223,36,21)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="175.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="149" width="0.0104%" height="15" fill="rgb(207,123,46)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="159.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="133" width="0.0104%" height="15" fill="rgb(240,218,32)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="143.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="117" width="0.0104%" height="15" fill="rgb(252,5,43)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="127.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="101" width="0.0104%" height="15" fill="rgb(252,84,19)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="111.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="85" width="0.0104%" height="15" fill="rgb(243,152,39)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="95.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,091,367 samples, 0.01%)</title><rect x="4.9538%" y="69" width="0.0104%" height="15" fill="rgb(234,160,15)" fg:x="998124822" fg:w="2091367"/><text x="5.2038%" y="79.50"></text></g><g><title>entry_SYSCALL_64 (2,381,416 samples, 0.01%)</title><rect x="4.9736%" y="2021" width="0.0118%" height="15" fill="rgb(237,34,20)" fg:x="1002105886" fg:w="2381416"/><text x="5.2236%" y="2031.50"></text></g><g><title>do_syscall_64 (2,381,416 samples, 0.01%)</title><rect x="4.9736%" y="2005" width="0.0118%" height="15" fill="rgb(229,97,13)" fg:x="1002105886" fg:w="2381416"/><text x="5.2236%" y="2015.50"></text></g><g><title>__GI___lll_lock_wake (3,323,838 samples, 0.02%)</title><rect x="4.9736%" y="2037" width="0.0165%" height="15" fill="rgb(234,71,50)" fg:x="1002105886" fg:w="3323838"/><text x="5.2236%" y="2047.50"></text></g><g><title>DirTree::_find (3,582,682 samples, 0.02%)</title><rect x="5.0699%" y="1941" width="0.0178%" height="15" fill="rgb(253,155,4)" fg:x="1021514137" fg:w="3582682"/><text x="5.3199%" y="1951.50"></text></g><g><title>std::_Hashtable&lt;std::string, std::pair&lt;std::string const, DirEntry&gt;, std::allocator&lt;std::pair&lt;std::string const, DirEntry&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::string&gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (3,582,682 samples, 0.02%)</title><rect x="5.0699%" y="1925" width="0.0178%" height="15" fill="rgb(222,185,37)" fg:x="1021514137" fg:w="3582682"/><text x="5.3199%" y="1935.50"></text></g><g><title>DirTree::update (5,230,163 samples, 0.03%)</title><rect x="5.0673%" y="1957" width="0.0260%" height="15" fill="rgb(251,177,13)" fg:x="1020987668" fg:w="5230163"/><text x="5.3173%" y="1967.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,086,186 samples, 0.01%)</title><rect x="5.1930%" y="1845" width="0.0104%" height="15" fill="rgb(250,179,40)" fg:x="1046311289" fg:w="2086186"/><text x="5.4430%" y="1855.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,045,794 samples, 0.01%)</title><rect x="5.5191%" y="85" width="0.0102%" height="15" fill="rgb(242,44,2)" fg:x="1112025587" fg:w="2045794"/><text x="5.7691%" y="95.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,045,794 samples, 0.01%)</title><rect x="5.5191%" y="69" width="0.0102%" height="15" fill="rgb(216,177,13)" fg:x="1112025587" fg:w="2045794"/><text x="5.7691%" y="79.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,295,370 samples, 0.06%)</title><rect x="5.5128%" y="149" width="0.0561%" height="15" fill="rgb(216,106,43)" fg:x="1110751831" fg:w="11295370"/><text x="5.7628%" y="159.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,295,370 samples, 0.06%)</title><rect x="5.5128%" y="133" width="0.0561%" height="15" fill="rgb(216,183,2)" fg:x="1110751831" fg:w="11295370"/><text x="5.7628%" y="143.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11,295,370 samples, 0.06%)</title><rect x="5.5128%" y="117" width="0.0561%" height="15" fill="rgb(249,75,3)" fg:x="1110751831" fg:w="11295370"/><text x="5.7628%" y="127.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,662,664 samples, 0.05%)</title><rect x="5.5159%" y="101" width="0.0529%" height="15" fill="rgb(219,67,39)" fg:x="1111384537" fg:w="10662664"/><text x="5.7659%" y="111.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (7,975,820 samples, 0.04%)</title><rect x="5.5293%" y="85" width="0.0396%" height="15" fill="rgb(253,228,2)" fg:x="1114071381" fg:w="7975820"/><text x="5.7793%" y="95.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,220,830 samples, 0.11%)</title><rect x="5.5011%" y="213" width="0.1103%" height="15" fill="rgb(235,138,27)" fg:x="1108392264" fg:w="22220830"/><text x="5.7511%" y="223.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,220,830 samples, 0.11%)</title><rect x="5.5011%" y="197" width="0.1103%" height="15" fill="rgb(236,97,51)" fg:x="1108392264" fg:w="22220830"/><text x="5.7511%" y="207.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (20,885,128 samples, 0.10%)</title><rect x="5.5077%" y="181" width="0.1037%" height="15" fill="rgb(240,80,30)" fg:x="1109727966" fg:w="20885128"/><text x="5.7577%" y="191.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,300,496 samples, 0.10%)</title><rect x="5.5106%" y="165" width="0.1008%" height="15" fill="rgb(230,178,19)" fg:x="1110312598" fg:w="20300496"/><text x="5.7606%" y="175.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (8,565,893 samples, 0.04%)</title><rect x="5.5689%" y="149" width="0.0425%" height="15" fill="rgb(210,190,27)" fg:x="1122047201" fg:w="8565893"/><text x="5.8189%" y="159.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,253,243 samples, 0.01%)</title><rect x="5.6419%" y="197" width="0.0112%" height="15" fill="rgb(222,107,31)" fg:x="1136764903" fg:w="2253243"/><text x="5.8919%" y="207.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (35,985,087 samples, 0.18%)</title><rect x="5.4811%" y="277" width="0.1786%" height="15" fill="rgb(216,127,34)" fg:x="1104365326" fg:w="35985087"/><text x="5.7311%" y="287.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (35,510,826 samples, 0.18%)</title><rect x="5.4835%" y="261" width="0.1762%" height="15" fill="rgb(234,116,52)" fg:x="1104839587" fg:w="35510826"/><text x="5.7335%" y="271.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (34,937,952 samples, 0.17%)</title><rect x="5.4863%" y="245" width="0.1734%" height="15" fill="rgb(222,124,15)" fg:x="1105412461" fg:w="34937952"/><text x="5.7363%" y="255.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,342,502 samples, 0.17%)</title><rect x="5.4942%" y="229" width="0.1655%" height="15" fill="rgb(231,179,28)" fg:x="1107007911" fg:w="33342502"/><text x="5.7442%" y="239.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (9,737,319 samples, 0.05%)</title><rect x="5.6114%" y="213" width="0.0483%" height="15" fill="rgb(226,93,45)" fg:x="1130613094" fg:w="9737319"/><text x="5.8614%" y="223.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (46,089,302 samples, 0.23%)</title><rect x="5.4650%" y="341" width="0.2287%" height="15" fill="rgb(215,8,51)" fg:x="1101113660" fg:w="46089302"/><text x="5.7150%" y="351.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,618,919 samples, 0.23%)</title><rect x="5.4673%" y="325" width="0.2264%" height="15" fill="rgb(223,106,5)" fg:x="1101584043" fg:w="45618919"/><text x="5.7173%" y="335.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (44,996,493 samples, 0.22%)</title><rect x="5.4704%" y="309" width="0.2233%" height="15" fill="rgb(250,191,5)" fg:x="1102206469" fg:w="44996493"/><text x="5.7204%" y="319.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (43,792,756 samples, 0.22%)</title><rect x="5.4764%" y="293" width="0.2173%" height="15" fill="rgb(242,132,44)" fg:x="1103410206" fg:w="43792756"/><text x="5.7264%" y="303.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (6,852,549 samples, 0.03%)</title><rect x="5.6597%" y="277" width="0.0340%" height="15" fill="rgb(251,152,29)" fg:x="1140350413" fg:w="6852549"/><text x="5.9097%" y="287.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,329,467 samples, 0.01%)</title><rect x="5.7060%" y="325" width="0.0116%" height="15" fill="rgb(218,179,5)" fg:x="1149684395" fg:w="2329467"/><text x="5.9560%" y="335.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,329,467 samples, 0.01%)</title><rect x="5.7060%" y="309" width="0.0116%" height="15" fill="rgb(227,67,19)" fg:x="1149684395" fg:w="2329467"/><text x="5.9560%" y="319.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (57,527,995 samples, 0.29%)</title><rect x="5.4373%" y="405" width="0.2855%" height="15" fill="rgb(233,119,31)" fg:x="1095545441" fg:w="57527995"/><text x="5.6873%" y="415.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,389,612 samples, 0.28%)</title><rect x="5.4430%" y="389" width="0.2799%" height="15" fill="rgb(241,120,22)" fg:x="1096683824" fg:w="56389612"/><text x="5.6930%" y="399.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (53,463,862 samples, 0.27%)</title><rect x="5.4575%" y="373" width="0.2653%" height="15" fill="rgb(224,102,30)" fg:x="1099609574" fg:w="53463862"/><text x="5.7075%" y="383.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (53,463,862 samples, 0.27%)</title><rect x="5.4575%" y="357" width="0.2653%" height="15" fill="rgb(210,164,37)" fg:x="1099609574" fg:w="53463862"/><text x="5.7075%" y="367.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (5,870,474 samples, 0.03%)</title><rect x="5.6937%" y="341" width="0.0291%" height="15" fill="rgb(226,191,16)" fg:x="1147202962" fg:w="5870474"/><text x="5.9437%" y="351.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,472,537 samples, 0.02%)</title><rect x="5.7583%" y="389" width="0.0172%" height="15" fill="rgb(214,40,45)" fg:x="1160215070" fg:w="3472537"/><text x="6.0083%" y="399.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,472,537 samples, 0.02%)</title><rect x="5.7583%" y="373" width="0.0172%" height="15" fill="rgb(244,29,26)" fg:x="1160215070" fg:w="3472537"/><text x="6.0083%" y="383.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (11,356,941 samples, 0.06%)</title><rect x="5.7229%" y="405" width="0.0564%" height="15" fill="rgb(216,16,5)" fg:x="1153073436" fg:w="11356941"/><text x="5.9729%" y="415.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (71,852,134 samples, 0.36%)</title><rect x="5.4251%" y="469" width="0.3566%" height="15" fill="rgb(249,76,35)" fg:x="1093072460" fg:w="71852134"/><text x="5.6751%" y="479.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (71,271,778 samples, 0.35%)</title><rect x="5.4279%" y="453" width="0.3537%" height="15" fill="rgb(207,11,44)" fg:x="1093652816" fg:w="71271778"/><text x="5.6779%" y="463.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (71,271,778 samples, 0.35%)</title><rect x="5.4279%" y="437" width="0.3537%" height="15" fill="rgb(228,190,49)" fg:x="1093652816" fg:w="71271778"/><text x="5.6779%" y="447.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (69,962,381 samples, 0.35%)</title><rect x="5.4344%" y="421" width="0.3472%" height="15" fill="rgb(214,173,12)" fg:x="1094962213" fg:w="69962381"/><text x="5.6844%" y="431.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (81,731,681 samples, 0.41%)</title><rect x="5.4222%" y="533" width="0.4056%" height="15" fill="rgb(218,26,35)" fg:x="1092489831" fg:w="81731681"/><text x="5.6722%" y="543.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (81,731,681 samples, 0.41%)</title><rect x="5.4222%" y="517" width="0.4056%" height="15" fill="rgb(220,200,19)" fg:x="1092489831" fg:w="81731681"/><text x="5.6722%" y="527.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (81,149,052 samples, 0.40%)</title><rect x="5.4251%" y="501" width="0.4028%" height="15" fill="rgb(239,95,49)" fg:x="1093072460" fg:w="81149052"/><text x="5.6751%" y="511.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (81,149,052 samples, 0.40%)</title><rect x="5.4251%" y="485" width="0.4028%" height="15" fill="rgb(235,85,53)" fg:x="1093072460" fg:w="81149052"/><text x="5.6751%" y="495.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (9,296,918 samples, 0.05%)</title><rect x="5.7817%" y="469" width="0.0461%" height="15" fill="rgb(233,133,31)" fg:x="1164924594" fg:w="9296918"/><text x="6.0317%" y="479.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (92,493,432 samples, 0.46%)</title><rect x="5.4137%" y="597" width="0.4591%" height="15" fill="rgb(218,25,20)" fg:x="1090787574" fg:w="92493432"/><text x="5.6637%" y="607.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (92,493,432 samples, 0.46%)</title><rect x="5.4137%" y="581" width="0.4591%" height="15" fill="rgb(252,210,38)" fg:x="1090787574" fg:w="92493432"/><text x="5.6637%" y="591.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (92,036,121 samples, 0.46%)</title><rect x="5.4160%" y="565" width="0.4568%" height="15" fill="rgb(242,134,21)" fg:x="1091244885" fg:w="92036121"/><text x="5.6660%" y="575.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (91,502,248 samples, 0.45%)</title><rect x="5.4186%" y="549" width="0.4541%" height="15" fill="rgb(213,28,48)" fg:x="1091778758" fg:w="91502248"/><text x="5.6686%" y="559.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (9,059,494 samples, 0.04%)</title><rect x="5.8278%" y="533" width="0.0450%" height="15" fill="rgb(250,196,2)" fg:x="1174221512" fg:w="9059494"/><text x="6.0778%" y="543.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,351,060 samples, 0.51%)</title><rect x="5.3973%" y="661" width="0.5080%" height="15" fill="rgb(227,5,17)" fg:x="1087477296" fg:w="102351060"/><text x="5.6473%" y="671.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (101,641,475 samples, 0.50%)</title><rect x="5.4008%" y="645" width="0.5045%" height="15" fill="rgb(221,226,24)" fg:x="1088186881" fg:w="101641475"/><text x="5.6508%" y="655.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (99,811,122 samples, 0.50%)</title><rect x="5.4099%" y="629" width="0.4954%" height="15" fill="rgb(211,5,48)" fg:x="1090017234" fg:w="99811122"/><text x="5.6599%" y="639.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (99,811,122 samples, 0.50%)</title><rect x="5.4099%" y="613" width="0.4954%" height="15" fill="rgb(219,150,6)" fg:x="1090017234" fg:w="99811122"/><text x="5.6599%" y="623.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (6,547,350 samples, 0.03%)</title><rect x="5.8728%" y="597" width="0.0325%" height="15" fill="rgb(251,46,16)" fg:x="1183281006" fg:w="6547350"/><text x="6.1228%" y="607.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (112,346,919 samples, 0.56%)</title><rect x="5.3843%" y="725" width="0.5576%" height="15" fill="rgb(220,204,40)" fg:x="1084854078" fg:w="112346919"/><text x="5.6343%" y="735.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (112,346,919 samples, 0.56%)</title><rect x="5.3843%" y="709" width="0.5576%" height="15" fill="rgb(211,85,2)" fg:x="1084854078" fg:w="112346919"/><text x="5.6343%" y="719.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (111,528,649 samples, 0.55%)</title><rect x="5.3883%" y="693" width="0.5535%" height="15" fill="rgb(229,17,7)" fg:x="1085672348" fg:w="111528649"/><text x="5.6383%" y="703.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (110,961,071 samples, 0.55%)</title><rect x="5.3911%" y="677" width="0.5507%" height="15" fill="rgb(239,72,28)" fg:x="1086239926" fg:w="110961071"/><text x="5.6411%" y="687.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (7,372,641 samples, 0.04%)</title><rect x="5.9053%" y="661" width="0.0366%" height="15" fill="rgb(230,47,54)" fg:x="1189828356" fg:w="7372641"/><text x="6.1553%" y="671.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (118,986,838 samples, 0.59%)</title><rect x="5.3788%" y="789" width="0.5905%" height="15" fill="rgb(214,50,8)" fg:x="1083754377" fg:w="118986838"/><text x="5.6288%" y="799.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (118,494,406 samples, 0.59%)</title><rect x="5.3813%" y="773" width="0.5881%" height="15" fill="rgb(216,198,43)" fg:x="1084246809" fg:w="118494406"/><text x="5.6313%" y="783.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (118,494,406 samples, 0.59%)</title><rect x="5.3813%" y="757" width="0.5881%" height="15" fill="rgb(234,20,35)" fg:x="1084246809" fg:w="118494406"/><text x="5.6313%" y="767.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (118,494,406 samples, 0.59%)</title><rect x="5.3813%" y="741" width="0.5881%" height="15" fill="rgb(254,45,19)" fg:x="1084246809" fg:w="118494406"/><text x="5.6313%" y="751.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (5,540,218 samples, 0.03%)</title><rect x="5.9419%" y="725" width="0.0275%" height="15" fill="rgb(219,14,44)" fg:x="1197200997" fg:w="5540218"/><text x="6.1919%" y="735.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (127,734,192 samples, 0.63%)</title><rect x="5.3736%" y="853" width="0.6340%" height="15" fill="rgb(217,220,26)" fg:x="1082696478" fg:w="127734192"/><text x="5.6236%" y="863.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (127,734,192 samples, 0.63%)</title><rect x="5.3736%" y="837" width="0.6340%" height="15" fill="rgb(213,158,28)" fg:x="1082696478" fg:w="127734192"/><text x="5.6236%" y="847.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (127,734,192 samples, 0.63%)</title><rect x="5.3736%" y="821" width="0.6340%" height="15" fill="rgb(252,51,52)" fg:x="1082696478" fg:w="127734192"/><text x="5.6236%" y="831.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (127,345,802 samples, 0.63%)</title><rect x="5.3755%" y="805" width="0.6320%" height="15" fill="rgb(246,89,16)" fg:x="1083084868" fg:w="127345802"/><text x="5.6255%" y="815.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (7,689,455 samples, 0.04%)</title><rect x="5.9694%" y="789" width="0.0382%" height="15" fill="rgb(216,158,49)" fg:x="1202741215" fg:w="7689455"/><text x="6.2194%" y="799.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (137,589,380 samples, 0.68%)</title><rect x="5.3609%" y="917" width="0.6829%" height="15" fill="rgb(236,107,19)" fg:x="1080143695" fg:w="137589380"/><text x="5.6109%" y="927.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (136,176,473 samples, 0.68%)</title><rect x="5.3679%" y="901" width="0.6759%" height="15" fill="rgb(228,185,30)" fg:x="1081556602" fg:w="136176473"/><text x="5.6179%" y="911.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (136,176,473 samples, 0.68%)</title><rect x="5.3679%" y="885" width="0.6759%" height="15" fill="rgb(246,134,8)" fg:x="1081556602" fg:w="136176473"/><text x="5.6179%" y="895.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (135,746,946 samples, 0.67%)</title><rect x="5.3700%" y="869" width="0.6737%" height="15" fill="rgb(214,143,50)" fg:x="1081986129" fg:w="135746946"/><text x="5.6200%" y="879.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (7,302,405 samples, 0.04%)</title><rect x="6.0075%" y="853" width="0.0362%" height="15" fill="rgb(228,75,8)" fg:x="1210430670" fg:w="7302405"/><text x="6.2575%" y="863.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (142,137,588 samples, 0.71%)</title><rect x="5.3539%" y="981" width="0.7054%" height="15" fill="rgb(207,175,4)" fg:x="1078733558" fg:w="142137588"/><text x="5.6039%" y="991.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (141,273,425 samples, 0.70%)</title><rect x="5.3582%" y="965" width="0.7012%" height="15" fill="rgb(205,108,24)" fg:x="1079597721" fg:w="141273425"/><text x="5.6082%" y="975.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (140,727,451 samples, 0.70%)</title><rect x="5.3609%" y="949" width="0.6984%" height="15" fill="rgb(244,120,49)" fg:x="1080143695" fg:w="140727451"/><text x="5.6109%" y="959.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (140,727,451 samples, 0.70%)</title><rect x="5.3609%" y="933" width="0.6984%" height="15" fill="rgb(223,47,38)" fg:x="1080143695" fg:w="140727451"/><text x="5.6109%" y="943.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (3,138,071 samples, 0.02%)</title><rect x="6.0438%" y="917" width="0.0156%" height="15" fill="rgb(229,179,11)" fg:x="1217733075" fg:w="3138071"/><text x="6.2938%" y="927.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,367,561 samples, 0.01%)</title><rect x="6.0885%" y="965" width="0.0118%" height="15" fill="rgb(231,122,1)" fg:x="1226754772" fg:w="2367561"/><text x="6.3385%" y="975.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,112,267 samples, 0.75%)</title><rect x="5.3539%" y="1045" width="0.7500%" height="15" fill="rgb(245,119,9)" fg:x="1078733558" fg:w="151112267"/><text x="5.6039%" y="1055.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,112,267 samples, 0.75%)</title><rect x="5.3539%" y="1029" width="0.7500%" height="15" fill="rgb(241,163,25)" fg:x="1078733558" fg:w="151112267"/><text x="5.6039%" y="1039.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (151,112,267 samples, 0.75%)</title><rect x="5.3539%" y="1013" width="0.7500%" height="15" fill="rgb(217,214,3)" fg:x="1078733558" fg:w="151112267"/><text x="5.6039%" y="1023.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,112,267 samples, 0.75%)</title><rect x="5.3539%" y="997" width="0.7500%" height="15" fill="rgb(240,86,28)" fg:x="1078733558" fg:w="151112267"/><text x="5.6039%" y="1007.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (8,974,679 samples, 0.04%)</title><rect x="6.0593%" y="981" width="0.0445%" height="15" fill="rgb(215,47,9)" fg:x="1220871146" fg:w="8974679"/><text x="6.3093%" y="991.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,353,667 samples, 0.01%)</title><rect x="6.1203%" y="1029" width="0.0117%" height="15" fill="rgb(252,25,45)" fg:x="1233151008" fg:w="2353667"/><text x="6.3703%" y="1039.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (159,122,752 samples, 0.79%)</title><rect x="5.3478%" y="1109" width="0.7897%" height="15" fill="rgb(251,164,9)" fg:x="1077512739" fg:w="159122752"/><text x="5.5978%" y="1119.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (159,122,752 samples, 0.79%)</title><rect x="5.3478%" y="1093" width="0.7897%" height="15" fill="rgb(233,194,0)" fg:x="1077512739" fg:w="159122752"/><text x="5.5978%" y="1103.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (158,533,595 samples, 0.79%)</title><rect x="5.3508%" y="1077" width="0.7868%" height="15" fill="rgb(249,111,24)" fg:x="1078101896" fg:w="158533595"/><text x="5.6008%" y="1087.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (157,901,933 samples, 0.78%)</title><rect x="5.3539%" y="1061" width="0.7837%" height="15" fill="rgb(250,223,3)" fg:x="1078733558" fg:w="157901933"/><text x="5.6039%" y="1071.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (6,789,666 samples, 0.03%)</title><rect x="6.1039%" y="1045" width="0.0337%" height="15" fill="rgb(236,178,37)" fg:x="1229845825" fg:w="6789666"/><text x="6.3539%" y="1055.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (164,526,378 samples, 0.82%)</title><rect x="5.3422%" y="1173" width="0.8166%" height="15" fill="rgb(241,158,50)" fg:x="1076377048" fg:w="164526378"/><text x="5.5922%" y="1183.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (164,526,378 samples, 0.82%)</title><rect x="5.3422%" y="1157" width="0.8166%" height="15" fill="rgb(213,121,41)" fg:x="1076377048" fg:w="164526378"/><text x="5.5922%" y="1167.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (163,390,687 samples, 0.81%)</title><rect x="5.3478%" y="1141" width="0.8109%" height="15" fill="rgb(240,92,3)" fg:x="1077512739" fg:w="163390687"/><text x="5.5978%" y="1151.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (163,390,687 samples, 0.81%)</title><rect x="5.3478%" y="1125" width="0.8109%" height="15" fill="rgb(205,123,3)" fg:x="1077512739" fg:w="163390687"/><text x="5.5978%" y="1135.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (4,267,935 samples, 0.02%)</title><rect x="6.1376%" y="1109" width="0.0212%" height="15" fill="rgb(205,97,47)" fg:x="1236635491" fg:w="4267935"/><text x="6.3876%" y="1119.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (172,956,880 samples, 0.86%)</title><rect x="5.3347%" y="1237" width="0.8584%" height="15" fill="rgb(247,152,14)" fg:x="1074867088" fg:w="172956880"/><text x="5.5847%" y="1247.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (171,840,511 samples, 0.85%)</title><rect x="5.3402%" y="1221" width="0.8529%" height="15" fill="rgb(248,195,53)" fg:x="1075983457" fg:w="171840511"/><text x="5.5902%" y="1231.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (171,446,920 samples, 0.85%)</title><rect x="5.3422%" y="1205" width="0.8509%" height="15" fill="rgb(226,201,16)" fg:x="1076377048" fg:w="171446920"/><text x="5.5922%" y="1215.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (171,446,920 samples, 0.85%)</title><rect x="5.3422%" y="1189" width="0.8509%" height="15" fill="rgb(205,98,0)" fg:x="1076377048" fg:w="171446920"/><text x="5.5922%" y="1199.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (6,920,542 samples, 0.03%)</title><rect x="6.1588%" y="1173" width="0.0343%" height="15" fill="rgb(214,191,48)" fg:x="1240903426" fg:w="6920542"/><text x="6.4088%" y="1183.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (6,697,760 samples, 0.03%)</title><rect x="6.1931%" y="1237" width="0.0332%" height="15" fill="rgb(237,112,39)" fg:x="1247823968" fg:w="6697760"/><text x="6.4431%" y="1247.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (181,789,487 samples, 0.90%)</title><rect x="5.3260%" y="1301" width="0.9022%" height="15" fill="rgb(247,203,27)" fg:x="1073112914" fg:w="181789487"/><text x="5.5760%" y="1311.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (181,141,531 samples, 0.90%)</title><rect x="5.3292%" y="1285" width="0.8990%" height="15" fill="rgb(235,124,28)" fg:x="1073760870" fg:w="181141531"/><text x="5.5792%" y="1295.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (181,141,531 samples, 0.90%)</title><rect x="5.3292%" y="1269" width="0.8990%" height="15" fill="rgb(208,207,46)" fg:x="1073760870" fg:w="181141531"/><text x="5.5792%" y="1279.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (181,141,531 samples, 0.90%)</title><rect x="5.3292%" y="1253" width="0.8990%" height="15" fill="rgb(234,176,4)" fg:x="1073760870" fg:w="181141531"/><text x="5.5792%" y="1263.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (189,479,979 samples, 0.94%)</title><rect x="5.3147%" y="1365" width="0.9404%" height="15" fill="rgb(230,133,28)" fg:x="1070833172" fg:w="189479979"/><text x="5.5647%" y="1375.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (188,324,992 samples, 0.93%)</title><rect x="5.3204%" y="1349" width="0.9347%" height="15" fill="rgb(211,137,40)" fg:x="1071988159" fg:w="188324992"/><text x="5.5704%" y="1359.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (188,324,992 samples, 0.93%)</title><rect x="5.3204%" y="1333" width="0.9347%" height="15" fill="rgb(254,35,13)" fg:x="1071988159" fg:w="188324992"/><text x="5.5704%" y="1343.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (187,891,819 samples, 0.93%)</title><rect x="5.3226%" y="1317" width="0.9325%" height="15" fill="rgb(225,49,51)" fg:x="1072421332" fg:w="187891819"/><text x="5.5726%" y="1327.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (5,410,750 samples, 0.03%)</title><rect x="6.2282%" y="1301" width="0.0269%" height="15" fill="rgb(251,10,15)" fg:x="1254902401" fg:w="5410750"/><text x="6.4782%" y="1311.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,822,964 samples, 0.01%)</title><rect x="6.2951%" y="1349" width="0.0140%" height="15" fill="rgb(228,207,15)" fg:x="1268374650" fg:w="2822964"/><text x="6.5451%" y="1359.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,822,964 samples, 0.01%)</title><rect x="6.2951%" y="1333" width="0.0140%" height="15" fill="rgb(241,99,19)" fg:x="1268374650" fg:w="2822964"/><text x="6.5451%" y="1343.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (205,238,408 samples, 1.02%)</title><rect x="5.2961%" y="1429" width="1.0186%" height="15" fill="rgb(207,104,49)" fg:x="1067080541" fg:w="205238408"/><text x="5.5461%" y="1439.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (205,238,408 samples, 1.02%)</title><rect x="5.2961%" y="1413" width="1.0186%" height="15" fill="rgb(234,99,18)" fg:x="1067080541" fg:w="205238408"/><text x="5.5461%" y="1423.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (202,074,669 samples, 1.00%)</title><rect x="5.3118%" y="1397" width="1.0029%" height="15" fill="rgb(213,191,49)" fg:x="1070244280" fg:w="202074669"/><text x="5.5618%" y="1407.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (201,485,777 samples, 1.00%)</title><rect x="5.3147%" y="1381" width="1.0000%" height="15" fill="rgb(210,226,19)" fg:x="1070833172" fg:w="201485777"/><text x="5.5647%" y="1391.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (12,005,798 samples, 0.06%)</title><rect x="6.2551%" y="1365" width="0.0596%" height="15" fill="rgb(229,97,18)" fg:x="1260313151" fg:w="12005798"/><text x="6.5051%" y="1375.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (216,282,084 samples, 1.07%)</title><rect x="5.2738%" y="1493" width="1.0734%" height="15" fill="rgb(211,167,15)" fg:x="1062595616" fg:w="216282084"/><text x="5.5238%" y="1503.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (215,089,556 samples, 1.07%)</title><rect x="5.2797%" y="1477" width="1.0675%" height="15" fill="rgb(210,169,34)" fg:x="1063788144" fg:w="215089556"/><text x="5.5297%" y="1487.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (215,089,556 samples, 1.07%)</title><rect x="5.2797%" y="1461" width="1.0675%" height="15" fill="rgb(241,121,31)" fg:x="1063788144" fg:w="215089556"/><text x="5.5297%" y="1471.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (213,410,910 samples, 1.06%)</title><rect x="5.2880%" y="1445" width="1.0592%" height="15" fill="rgb(232,40,11)" fg:x="1065466790" fg:w="213410910"/><text x="5.5380%" y="1455.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (6,558,751 samples, 0.03%)</title><rect x="6.3147%" y="1429" width="0.0326%" height="15" fill="rgb(205,86,26)" fg:x="1272318949" fg:w="6558751"/><text x="6.5647%" y="1439.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (229,666,885 samples, 1.14%)</title><rect x="5.2496%" y="1557" width="1.1399%" height="15" fill="rgb(231,126,28)" fg:x="1057715110" fg:w="229666885"/><text x="5.4996%" y="1567.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (228,666,440 samples, 1.13%)</title><rect x="5.2545%" y="1541" width="1.1349%" height="15" fill="rgb(219,221,18)" fg:x="1058715555" fg:w="228666440"/><text x="5.5045%" y="1551.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (226,288,784 samples, 1.12%)</title><rect x="5.2663%" y="1525" width="1.1231%" height="15" fill="rgb(211,40,0)" fg:x="1061093211" fg:w="226288784"/><text x="5.5163%" y="1535.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (225,709,203 samples, 1.12%)</title><rect x="5.2692%" y="1509" width="1.1202%" height="15" fill="rgb(239,85,43)" fg:x="1061672792" fg:w="225709203"/><text x="5.5192%" y="1519.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (8,504,295 samples, 0.04%)</title><rect x="6.3472%" y="1493" width="0.0422%" height="15" fill="rgb(231,55,21)" fg:x="1278877700" fg:w="8504295"/><text x="6.5972%" y="1503.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (238,993,438 samples, 1.19%)</title><rect x="5.2376%" y="1621" width="1.1862%" height="15" fill="rgb(225,184,43)" fg:x="1055298578" fg:w="238993438"/><text x="5.4876%" y="1631.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (238,518,055 samples, 1.18%)</title><rect x="5.2399%" y="1605" width="1.1838%" height="15" fill="rgb(251,158,41)" fg:x="1055773961" fg:w="238518055"/><text x="5.4899%" y="1615.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (238,049,450 samples, 1.18%)</title><rect x="5.2423%" y="1589" width="1.1815%" height="15" fill="rgb(234,159,37)" fg:x="1056242566" fg:w="238049450"/><text x="5.4923%" y="1599.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (238,049,450 samples, 1.18%)</title><rect x="5.2423%" y="1573" width="1.1815%" height="15" fill="rgb(216,204,22)" fg:x="1056242566" fg:w="238049450"/><text x="5.4923%" y="1583.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (6,910,021 samples, 0.03%)</title><rect x="6.3894%" y="1557" width="0.0343%" height="15" fill="rgb(214,17,3)" fg:x="1287381995" fg:w="6910021"/><text x="6.6394%" y="1567.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (246,896,385 samples, 1.23%)</title><rect x="5.2294%" y="1685" width="1.2254%" height="15" fill="rgb(212,111,17)" fg:x="1053655012" fg:w="246896385"/><text x="5.4794%" y="1695.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (246,321,157 samples, 1.22%)</title><rect x="5.2323%" y="1669" width="1.2225%" height="15" fill="rgb(221,157,24)" fg:x="1054230240" fg:w="246321157"/><text x="5.4823%" y="1679.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (245,765,038 samples, 1.22%)</title><rect x="5.2350%" y="1653" width="1.2198%" height="15" fill="rgb(252,16,13)" fg:x="1054786359" fg:w="245765038"/><text x="5.4850%" y="1663.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (245,465,433 samples, 1.22%)</title><rect x="5.2365%" y="1637" width="1.2183%" height="15" fill="rgb(221,62,2)" fg:x="1055085964" fg:w="245465433"/><text x="5.4865%" y="1647.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (6,259,381 samples, 0.03%)</title><rect x="6.4237%" y="1621" width="0.0311%" height="15" fill="rgb(247,87,22)" fg:x="1294292016" fg:w="6259381"/><text x="6.6737%" y="1631.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,561,926 samples, 0.01%)</title><rect x="6.5000%" y="1669" width="0.0127%" height="15" fill="rgb(215,73,9)" fg:x="1309658827" fg:w="2561926"/><text x="6.7500%" y="1679.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (261,790,214 samples, 1.30%)</title><rect x="5.2185%" y="1749" width="1.2993%" height="15" fill="rgb(207,175,33)" fg:x="1051451268" fg:w="261790214"/><text x="5.4685%" y="1759.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (261,790,214 samples, 1.30%)</title><rect x="5.2185%" y="1733" width="1.2993%" height="15" fill="rgb(243,129,54)" fg:x="1051451268" fg:w="261790214"/><text x="5.4685%" y="1743.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (261,364,427 samples, 1.30%)</title><rect x="5.2206%" y="1717" width="1.2972%" height="15" fill="rgb(227,119,45)" fg:x="1051877055" fg:w="261364427"/><text x="5.4706%" y="1727.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (260,686,083 samples, 1.29%)</title><rect x="5.2240%" y="1701" width="1.2938%" height="15" fill="rgb(205,109,36)" fg:x="1052555399" fg:w="260686083"/><text x="5.4740%" y="1711.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (12,690,085 samples, 0.06%)</title><rect x="6.4548%" y="1685" width="0.0630%" height="15" fill="rgb(205,6,39)" fg:x="1300551397" fg:w="12690085"/><text x="6.7048%" y="1695.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (267,276,214 samples, 1.33%)</title><rect x="5.2056%" y="1813" width="1.3265%" height="15" fill="rgb(221,32,16)" fg:x="1048859457" fg:w="267276214"/><text x="5.4556%" y="1823.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (266,676,627 samples, 1.32%)</title><rect x="5.2086%" y="1797" width="1.3236%" height="15" fill="rgb(228,144,50)" fg:x="1049459044" fg:w="266676627"/><text x="5.4586%" y="1807.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (265,206,587 samples, 1.32%)</title><rect x="5.2159%" y="1781" width="1.3163%" height="15" fill="rgb(229,201,53)" fg:x="1050929084" fg:w="265206587"/><text x="5.4659%" y="1791.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (264,684,403 samples, 1.31%)</title><rect x="5.2185%" y="1765" width="1.3137%" height="15" fill="rgb(249,153,27)" fg:x="1051451268" fg:w="264684403"/><text x="5.4685%" y="1775.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (2,894,189 samples, 0.01%)</title><rect x="6.5178%" y="1749" width="0.0144%" height="15" fill="rgb(227,106,25)" fg:x="1313241482" fg:w="2894189"/><text x="6.7678%" y="1759.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (283,997,192 samples, 1.41%)</title><rect x="5.1453%" y="1909" width="1.4095%" height="15" fill="rgb(230,65,29)" fg:x="1036707706" fg:w="283997192"/><text x="5.3953%" y="1919.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (280,992,073 samples, 1.39%)</title><rect x="5.1602%" y="1893" width="1.3946%" height="15" fill="rgb(221,57,46)" fg:x="1039712825" fg:w="280992073"/><text x="5.4102%" y="1903.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (278,733,782 samples, 1.38%)</title><rect x="5.1714%" y="1877" width="1.3834%" height="15" fill="rgb(229,161,17)" fg:x="1041971116" fg:w="278733782"/><text x="5.4214%" y="1887.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (278,289,215 samples, 1.38%)</title><rect x="5.1736%" y="1861" width="1.3812%" height="15" fill="rgb(222,213,11)" fg:x="1042415683" fg:w="278289215"/><text x="5.4236%" y="1871.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (272,307,423 samples, 1.35%)</title><rect x="5.2033%" y="1845" width="1.3515%" height="15" fill="rgb(235,35,13)" fg:x="1048397475" fg:w="272307423"/><text x="5.4533%" y="1855.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (272,307,423 samples, 1.35%)</title><rect x="5.2033%" y="1829" width="1.3515%" height="15" fill="rgb(233,158,34)" fg:x="1048397475" fg:w="272307423"/><text x="5.4533%" y="1839.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (4,569,227 samples, 0.02%)</title><rect x="6.5321%" y="1813" width="0.0227%" height="15" fill="rgb(215,151,48)" fg:x="1316135671" fg:w="4569227"/><text x="6.7821%" y="1823.50"></text></g><g><title>bool std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;, (std::__detail::_RegexExecutorPolicy)0, true&gt; (291,202,965 samples, 1.45%)</title><rect x="5.1135%" y="1925" width="1.4453%" height="15" fill="rgb(229,84,14)" fg:x="1030301175" fg:w="291202965"/><text x="5.3635%" y="1935.50"></text></g><g><title>Glob::isIgnored (292,803,774 samples, 1.45%)</title><rect x="5.1135%" y="1941" width="1.4532%" height="15" fill="rgb(229,68,14)" fg:x="1030301175" fg:w="292803774"/><text x="5.3635%" y="1951.50"></text></g><g><title>Watcher::isIgnored (297,716,733 samples, 1.48%)</title><rect x="5.0968%" y="1957" width="1.4776%" height="15" fill="rgb(243,106,26)" fg:x="1026939093" fg:w="297716733"/><text x="5.3468%" y="1967.50"></text></g><g><title>__memcmp_avx2_movbe (2,045,780 samples, 0.01%)</title><rect x="6.5744%" y="1957" width="0.0102%" height="15" fill="rgb(206,45,38)" fg:x="1324655826" fg:w="2045780"/><text x="6.8244%" y="1967.50"></text></g><g><title>InotifyBackend::handleSubscription (321,181,963 samples, 1.59%)</title><rect x="5.0405%" y="1973" width="1.5941%" height="15" fill="rgb(226,6,15)" fg:x="1015580865" fg:w="321181963"/><text x="5.2905%" y="1983.50"></text></g><g><title>memset_orig (3,313,736 samples, 0.02%)</title><rect x="6.6577%" y="1877" width="0.0164%" height="15" fill="rgb(232,22,54)" fg:x="1341425870" fg:w="3313736"/><text x="6.9077%" y="1887.50"></text></g><g><title>getname_flags (8,833,975 samples, 0.04%)</title><rect x="6.6533%" y="1893" width="0.0438%" height="15" fill="rgb(229,222,32)" fg:x="1340546325" fg:w="8833975"/><text x="6.9033%" y="1903.50"></text></g><g><title>strncpy_from_user (4,640,694 samples, 0.02%)</title><rect x="6.6741%" y="1877" width="0.0230%" height="15" fill="rgb(228,62,29)" fg:x="1344739606" fg:w="4640694"/><text x="6.9241%" y="1887.50"></text></g><g><title>__check_object_size (3,497,930 samples, 0.02%)</title><rect x="6.6798%" y="1861" width="0.0174%" height="15" fill="rgb(251,103,34)" fg:x="1345882370" fg:w="3497930"/><text x="6.9298%" y="1871.50"></text></g><g><title>putname (2,942,661 samples, 0.01%)</title><rect x="6.6971%" y="1893" width="0.0146%" height="15" fill="rgb(233,12,30)" fg:x="1349380300" fg:w="2942661"/><text x="6.9471%" y="1903.50"></text></g><g><title>kmem_cache_free (2,942,661 samples, 0.01%)</title><rect x="6.6971%" y="1877" width="0.0146%" height="15" fill="rgb(238,52,0)" fg:x="1349380300" fg:w="2942661"/><text x="6.9471%" y="1887.50"></text></g><g><title>inode_permission (7,727,328 samples, 0.04%)</title><rect x="6.7478%" y="1829" width="0.0384%" height="15" fill="rgb(223,98,5)" fg:x="1359595281" fg:w="7727328"/><text x="6.9978%" y="1839.50"></text></g><g><title>generic_permission (5,196,942 samples, 0.03%)</title><rect x="6.7604%" y="1813" width="0.0258%" height="15" fill="rgb(228,75,37)" fg:x="1362125667" fg:w="5196942"/><text x="7.0104%" y="1823.50"></text></g><g><title>lookup_fast (2,378,097 samples, 0.01%)</title><rect x="6.7862%" y="1829" width="0.0118%" height="15" fill="rgb(205,115,49)" fg:x="1367322609" fg:w="2378097"/><text x="7.0362%" y="1839.50"></text></g><g><title>link_path_walk (14,371,995 samples, 0.07%)</title><rect x="6.7322%" y="1845" width="0.0713%" height="15" fill="rgb(250,154,43)" fg:x="1356445608" fg:w="14371995"/><text x="6.9822%" y="1855.50"></text></g><g><title>path_init (3,438,582 samples, 0.02%)</title><rect x="6.8035%" y="1845" width="0.0171%" height="15" fill="rgb(226,43,29)" fg:x="1370817603" fg:w="3438582"/><text x="7.0535%" y="1855.50"></text></g><g><title>filename_lookup (25,714,330 samples, 0.13%)</title><rect x="6.7205%" y="1877" width="0.1276%" height="15" fill="rgb(249,228,39)" fg:x="1354080822" fg:w="25714330"/><text x="6.9705%" y="1887.50"></text></g><g><title>path_lookupat (25,157,853 samples, 0.12%)</title><rect x="6.7232%" y="1861" width="0.1249%" height="15" fill="rgb(216,79,43)" fg:x="1354637299" fg:w="25157853"/><text x="6.9732%" y="1871.50"></text></g><g><title>walk_component (3,709,705 samples, 0.02%)</title><rect x="6.8297%" y="1845" width="0.0184%" height="15" fill="rgb(228,95,12)" fg:x="1376085447" fg:w="3709705"/><text x="7.0797%" y="1855.50"></text></g><g><title>lookup_fast (3,709,705 samples, 0.02%)</title><rect x="6.8297%" y="1829" width="0.0184%" height="15" fill="rgb(249,221,15)" fg:x="1376085447" fg:w="3709705"/><text x="7.0797%" y="1839.50"></text></g><g><title>__d_lookup_rcu (3,709,705 samples, 0.02%)</title><rect x="6.8297%" y="1813" width="0.0184%" height="15" fill="rgb(233,34,13)" fg:x="1376085447" fg:w="3709705"/><text x="7.0797%" y="1823.50"></text></g><g><title>path_put (3,013,066 samples, 0.01%)</title><rect x="6.8498%" y="1877" width="0.0150%" height="15" fill="rgb(214,103,39)" fg:x="1380132592" fg:w="3013066"/><text x="7.0998%" y="1887.50"></text></g><g><title>security_inode_getattr (7,631,641 samples, 0.04%)</title><rect x="6.8647%" y="1877" width="0.0379%" height="15" fill="rgb(251,126,39)" fg:x="1383145658" fg:w="7631641"/><text x="7.1147%" y="1887.50"></text></g><g><title>apparmor_inode_getattr (4,962,600 samples, 0.02%)</title><rect x="6.8780%" y="1861" width="0.0246%" height="15" fill="rgb(214,216,36)" fg:x="1385814699" fg:w="4962600"/><text x="7.1280%" y="1871.50"></text></g><g><title>__se_sys_newstat (51,969,492 samples, 0.26%)</title><rect x="6.6477%" y="1909" width="0.2579%" height="15" fill="rgb(220,221,8)" fg:x="1339411022" fg:w="51969492"/><text x="6.8977%" y="1919.50"></text></g><g><title>vfs_statx (37,299,692 samples, 0.19%)</title><rect x="6.7205%" y="1893" width="0.1851%" height="15" fill="rgb(240,216,3)" fg:x="1354080822" fg:w="37299692"/><text x="6.9705%" y="1903.50"></text></g><g><title>__x64_sys_newstat (52,570,378 samples, 0.26%)</title><rect x="6.6477%" y="1925" width="0.2609%" height="15" fill="rgb(232,218,17)" fg:x="1339411022" fg:w="52570378"/><text x="6.8977%" y="1935.50"></text></g><g><title>entry_SYSCALL_64 (59,607,456 samples, 0.30%)</title><rect x="6.6405%" y="1957" width="0.2958%" height="15" fill="rgb(229,163,45)" fg:x="1337967301" fg:w="59607456"/><text x="6.8905%" y="1967.50"></text></g><g><title>do_syscall_64 (58,719,797 samples, 0.29%)</title><rect x="6.6449%" y="1941" width="0.2914%" height="15" fill="rgb(231,110,42)" fg:x="1338854960" fg:w="58719797"/><text x="6.8949%" y="1951.50"></text></g><g><title>syscall_exit_to_user_mode (3,888,499 samples, 0.02%)</title><rect x="6.9170%" y="1925" width="0.0193%" height="15" fill="rgb(208,170,48)" fg:x="1393686258" fg:w="3888499"/><text x="7.1670%" y="1935.50"></text></g><g><title>__xstat64 (66,120,964 samples, 0.33%)</title><rect x="6.6345%" y="1973" width="0.3282%" height="15" fill="rgb(239,116,25)" fg:x="1336762828" fg:w="66120964"/><text x="6.8845%" y="1983.50"></text></g><g><title>entry_ibpb (5,309,035 samples, 0.03%)</title><rect x="6.9363%" y="1957" width="0.0263%" height="15" fill="rgb(219,200,50)" fg:x="1397574757" fg:w="5309035"/><text x="7.1863%" y="1967.50"></text></g><g><title>pthread_mutex_unlock@@GLIBC_2.2.5 (2,469,013 samples, 0.01%)</title><rect x="6.9658%" y="1973" width="0.0123%" height="15" fill="rgb(245,200,0)" fg:x="1403512052" fg:w="2469013"/><text x="7.2158%" y="1983.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (2,821,433 samples, 0.01%)</title><rect x="6.9926%" y="1973" width="0.0140%" height="15" fill="rgb(245,119,33)" fg:x="1408917742" fg:w="2821433"/><text x="7.2426%" y="1983.50"></text></g><g><title>InotifyBackend::handleEvent (401,691,033 samples, 1.99%)</title><rect x="5.0218%" y="1989" width="1.9936%" height="15" fill="rgb(231,125,12)" fg:x="1011816295" fg:w="401691033"/><text x="5.2718%" y="1999.50">I..</text></g><g><title>pthread_mutex_lock@@GLIBC_2.2.5 (3,051,001 samples, 0.02%)</title><rect x="7.0329%" y="1989" width="0.0151%" height="15" fill="rgb(216,96,41)" fg:x="1417027236" fg:w="3051001"/><text x="7.2829%" y="1999.50"></text></g><g><title>InotifyBackend::handleEvents (412,312,213 samples, 2.05%)</title><rect x="5.0075%" y="2005" width="2.0464%" height="15" fill="rgb(248,43,45)" fg:x="1008935907" fg:w="412312213"/><text x="5.2575%" y="2015.50">I..</text></g><g><title>copy_event_to_user (5,633,025 samples, 0.03%)</title><rect x="7.1177%" y="1893" width="0.0280%" height="15" fill="rgb(217,222,7)" fg:x="1434108318" fg:w="5633025"/><text x="7.3677%" y="1903.50"></text></g><g><title>inotify_read (13,685,752 samples, 0.07%)</title><rect x="7.0971%" y="1909" width="0.0679%" height="15" fill="rgb(233,28,6)" fg:x="1429973331" fg:w="13685752"/><text x="7.3471%" y="1919.50"></text></g><g><title>fsnotify_destroy_event (3,917,740 samples, 0.02%)</title><rect x="7.1456%" y="1893" width="0.0194%" height="15" fill="rgb(231,218,15)" fg:x="1439741343" fg:w="3917740"/><text x="7.3956%" y="1903.50"></text></g><g><title>inotify_free_event (3,917,740 samples, 0.02%)</title><rect x="7.1456%" y="1877" width="0.0194%" height="15" fill="rgb(226,171,48)" fg:x="1439741343" fg:w="3917740"/><text x="7.3956%" y="1887.50"></text></g><g><title>kfree (3,917,740 samples, 0.02%)</title><rect x="7.1456%" y="1861" width="0.0194%" height="15" fill="rgb(235,201,9)" fg:x="1439741343" fg:w="3917740"/><text x="7.3956%" y="1871.50"></text></g><g><title>__kmem_cache_free (3,917,740 samples, 0.02%)</title><rect x="7.1456%" y="1845" width="0.0194%" height="15" fill="rgb(217,80,15)" fg:x="1439741343" fg:w="3917740"/><text x="7.3956%" y="1855.50"></text></g><g><title>apparmor_file_permission (2,110,119 samples, 0.01%)</title><rect x="7.1651%" y="1893" width="0.0105%" height="15" fill="rgb(219,152,8)" fg:x="1443659083" fg:w="2110119"/><text x="7.4151%" y="1903.50"></text></g><g><title>ksys_read (21,137,355 samples, 0.10%)</title><rect x="7.0813%" y="1941" width="0.1049%" height="15" fill="rgb(243,107,38)" fg:x="1426777203" fg:w="21137355"/><text x="7.3313%" y="1951.50"></text></g><g><title>vfs_read (20,596,136 samples, 0.10%)</title><rect x="7.0840%" y="1925" width="0.1022%" height="15" fill="rgb(231,17,5)" fg:x="1427318422" fg:w="20596136"/><text x="7.3340%" y="1935.50"></text></g><g><title>security_file_permission (4,255,475 samples, 0.02%)</title><rect x="7.1651%" y="1909" width="0.0211%" height="15" fill="rgb(209,25,54)" fg:x="1443659083" fg:w="4255475"/><text x="7.4151%" y="1919.50"></text></g><g><title>fsnotify_perm (2,145,356 samples, 0.01%)</title><rect x="7.1755%" y="1893" width="0.0106%" height="15" fill="rgb(219,0,2)" fg:x="1445769202" fg:w="2145356"/><text x="7.4255%" y="1903.50"></text></g><g><title>__x64_sys_read (22,351,881 samples, 0.11%)</title><rect x="7.0783%" y="1957" width="0.1109%" height="15" fill="rgb(246,9,5)" fg:x="1426167833" fg:w="22351881"/><text x="7.3283%" y="1967.50"></text></g><g><title>syscall_enter_from_user_mode (3,321,464 samples, 0.02%)</title><rect x="7.1892%" y="1957" width="0.0165%" height="15" fill="rgb(226,159,4)" fg:x="1448519714" fg:w="3321464"/><text x="7.4392%" y="1967.50"></text></g><g><title>entry_SYSCALL_64 (26,354,545 samples, 0.13%)</title><rect x="7.0783%" y="1989" width="0.1308%" height="15" fill="rgb(219,175,34)" fg:x="1426167833" fg:w="26354545"/><text x="7.3283%" y="1999.50"></text></g><g><title>do_syscall_64 (26,354,545 samples, 0.13%)</title><rect x="7.0783%" y="1973" width="0.1308%" height="15" fill="rgb(236,10,46)" fg:x="1426167833" fg:w="26354545"/><text x="7.3283%" y="1983.50"></text></g><g><title>InotifyBackend::start (451,206,328 samples, 2.24%)</title><rect x="5.0075%" y="2021" width="2.2394%" height="15" fill="rgb(240,211,16)" fg:x="1008935907" fg:w="451206328"/><text x="5.2575%" y="2031.50">I..</text></g><g><title>read (36,862,401 samples, 0.18%)</title><rect x="7.0639%" y="2005" width="0.1830%" height="15" fill="rgb(205,3,43)" fg:x="1423279834" fg:w="36862401"/><text x="7.3139%" y="2015.50"></text></g><g><title>entry_ibpb (7,619,857 samples, 0.04%)</title><rect x="7.2091%" y="1989" width="0.0378%" height="15" fill="rgb(245,7,22)" fg:x="1452522378" fg:w="7619857"/><text x="7.4591%" y="1999.50"></text></g><g><title>hrtimer_start_range_ns (2,612,042 samples, 0.01%)</title><rect x="7.3109%" y="1893" width="0.0130%" height="15" fill="rgb(239,132,32)" fg:x="1473046420" fg:w="2612042"/><text x="7.5609%" y="1903.50"></text></g><g><title>__cgroup_account_cputime (2,794,433 samples, 0.01%)</title><rect x="7.3839%" y="1797" width="0.0139%" height="15" fill="rgb(228,202,34)" fg:x="1487759540" fg:w="2794433"/><text x="7.6339%" y="1807.50"></text></g><g><title>update_curr (5,146,074 samples, 0.03%)</title><rect x="7.3752%" y="1813" width="0.0255%" height="15" fill="rgb(254,200,22)" fg:x="1486002934" fg:w="5146074"/><text x="7.6252%" y="1823.50"></text></g><g><title>dequeue_task_fair (12,763,828 samples, 0.06%)</title><rect x="7.3533%" y="1845" width="0.0633%" height="15" fill="rgb(219,10,39)" fg:x="1481595021" fg:w="12763828"/><text x="7.6033%" y="1855.50"></text></g><g><title>dequeue_entity (11,030,739 samples, 0.05%)</title><rect x="7.3619%" y="1829" width="0.0547%" height="15" fill="rgb(226,210,39)" fg:x="1483328110" fg:w="11030739"/><text x="7.6119%" y="1839.50"></text></g><g><title>update_load_avg (3,209,841 samples, 0.02%)</title><rect x="7.4008%" y="1813" width="0.0159%" height="15" fill="rgb(208,219,16)" fg:x="1491149008" fg:w="3209841"/><text x="7.6508%" y="1823.50"></text></g><g><title>dequeue_task (14,867,539 samples, 0.07%)</title><rect x="7.3444%" y="1861" width="0.0738%" height="15" fill="rgb(216,158,51)" fg:x="1479793332" fg:w="14867539"/><text x="7.5944%" y="1871.50"></text></g><g><title>load_balance (3,096,397 samples, 0.02%)</title><rect x="7.4302%" y="1813" width="0.0154%" height="15" fill="rgb(233,14,44)" fg:x="1497089004" fg:w="3096397"/><text x="7.6802%" y="1823.50"></text></g><g><title>pick_next_task (6,265,488 samples, 0.03%)</title><rect x="7.4182%" y="1861" width="0.0311%" height="15" fill="rgb(237,97,39)" fg:x="1494660871" fg:w="6265488"/><text x="7.6682%" y="1871.50"></text></g><g><title>pick_next_task_fair (6,265,488 samples, 0.03%)</title><rect x="7.4182%" y="1845" width="0.0311%" height="15" fill="rgb(218,198,43)" fg:x="1494660871" fg:w="6265488"/><text x="7.6682%" y="1855.50"></text></g><g><title>newidle_balance (5,665,570 samples, 0.03%)</title><rect x="7.4212%" y="1829" width="0.0281%" height="15" fill="rgb(231,104,20)" fg:x="1495260789" fg:w="5665570"/><text x="7.6712%" y="1839.50"></text></g><g><title>do_sys_poll (44,232,766 samples, 0.22%)</title><rect x="7.2532%" y="1941" width="0.2195%" height="15" fill="rgb(254,36,13)" fg:x="1461425407" fg:w="44232766"/><text x="7.5032%" y="1951.50"></text></g><g><title>schedule_hrtimeout_range (36,289,729 samples, 0.18%)</title><rect x="7.2927%" y="1925" width="0.1801%" height="15" fill="rgb(248,14,50)" fg:x="1469368444" fg:w="36289729"/><text x="7.5427%" y="1935.50"></text></g><g><title>schedule_hrtimeout_range_clock (35,357,662 samples, 0.18%)</title><rect x="7.2973%" y="1909" width="0.1755%" height="15" fill="rgb(217,107,29)" fg:x="1470300511" fg:w="35357662"/><text x="7.5473%" y="1919.50"></text></g><g><title>schedule (29,999,711 samples, 0.15%)</title><rect x="7.3239%" y="1893" width="0.1489%" height="15" fill="rgb(251,169,33)" fg:x="1475658462" fg:w="29999711"/><text x="7.5739%" y="1903.50"></text></g><g><title>__sched_text_start (29,416,759 samples, 0.15%)</title><rect x="7.3268%" y="1877" width="0.1460%" height="15" fill="rgb(217,108,32)" fg:x="1476241414" fg:w="29416759"/><text x="7.5768%" y="1887.50"></text></g><g><title>ktime_get_ts64 (2,238,252 samples, 0.01%)</title><rect x="7.4728%" y="1941" width="0.0111%" height="15" fill="rgb(219,66,42)" fg:x="1505658173" fg:w="2238252"/><text x="7.7228%" y="1951.50"></text></g><g><title>__x64_sys_poll (46,924,913 samples, 0.23%)</title><rect x="7.2532%" y="1973" width="0.2329%" height="15" fill="rgb(206,180,7)" fg:x="1461425407" fg:w="46924913"/><text x="7.5032%" y="1983.50"></text></g><g><title>__se_sys_poll (46,924,913 samples, 0.23%)</title><rect x="7.2532%" y="1957" width="0.2329%" height="15" fill="rgb(208,226,31)" fg:x="1461425407" fg:w="46924913"/><text x="7.5032%" y="1967.50"></text></g><g><title>syscall_enter_from_user_mode (2,747,143 samples, 0.01%)</title><rect x="7.4890%" y="1973" width="0.0136%" height="15" fill="rgb(218,26,49)" fg:x="1508926295" fg:w="2747143"/><text x="7.7390%" y="1983.50"></text></g><g><title>__rseq_handle_notify_resume (2,105,624 samples, 0.01%)</title><rect x="7.5026%" y="1925" width="0.0105%" height="15" fill="rgb(233,197,48)" fg:x="1511673438" fg:w="2105624"/><text x="7.7526%" y="1935.50"></text></g><g><title>exit_to_user_mode_loop (2,613,355 samples, 0.01%)</title><rect x="7.5026%" y="1941" width="0.0130%" height="15" fill="rgb(252,181,51)" fg:x="1511673438" fg:w="2613355"/><text x="7.7526%" y="1951.50"></text></g><g><title>exit_to_user_mode_prepare (3,337,987 samples, 0.02%)</title><rect x="7.5026%" y="1957" width="0.0166%" height="15" fill="rgb(253,90,19)" fg:x="1511673438" fg:w="3337987"/><text x="7.7526%" y="1967.50"></text></g><g><title>entry_SYSCALL_64 (54,313,495 samples, 0.27%)</title><rect x="7.2532%" y="2005" width="0.2696%" height="15" fill="rgb(215,171,30)" fg:x="1461425407" fg:w="54313495"/><text x="7.5032%" y="2015.50"></text></g><g><title>do_syscall_64 (54,313,495 samples, 0.27%)</title><rect x="7.2532%" y="1989" width="0.2696%" height="15" fill="rgb(214,222,9)" fg:x="1461425407" fg:w="54313495"/><text x="7.5032%" y="1999.50"></text></g><g><title>syscall_exit_to_user_mode (4,065,464 samples, 0.02%)</title><rect x="7.5026%" y="1973" width="0.0202%" height="15" fill="rgb(223,3,22)" fg:x="1511673438" fg:w="4065464"/><text x="7.7526%" y="1983.50"></text></g><g><title>entry_ibpb (3,044,801 samples, 0.02%)</title><rect x="7.5228%" y="2005" width="0.0151%" height="15" fill="rgb(225,196,46)" fg:x="1515738902" fg:w="3044801"/><text x="7.7728%" y="2015.50"></text></g><g><title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Backend::run()::{lambda()#1}&gt; &gt; &gt;::_M_run (510,730,969 samples, 2.53%)</title><rect x="5.0060%" y="2037" width="2.5348%" height="15" fill="rgb(209,110,37)" fg:x="1008643526" fg:w="510730969"/><text x="5.2560%" y="2047.50">st..</text></g><g><title>__poll (59,232,260 samples, 0.29%)</title><rect x="7.2469%" y="2021" width="0.2940%" height="15" fill="rgb(249,89,12)" fg:x="1460142235" fg:w="59232260"/><text x="7.4969%" y="2031.50"></text></g><g><title>[libstdc++.so.6.0.30] (517,781,413 samples, 2.57%)</title><rect x="4.9736%" y="2053" width="2.5698%" height="15" fill="rgb(226,27,33)" fg:x="1002105886" fg:w="517781413"/><text x="5.2236%" y="2063.50">[l..</text></g><g><title>[unknown] (12,293,656 samples, 0.06%)</title><rect x="7.5434%" y="2037" width="0.0610%" height="15" fill="rgb(213,82,22)" fg:x="1519887299" fg:w="12293656"/><text x="7.7934%" y="2047.50"></text></g><g><title>_int_malloc (12,293,656 samples, 0.06%)</title><rect x="7.5434%" y="2021" width="0.0610%" height="15" fill="rgb(248,140,0)" fg:x="1519887299" fg:w="12293656"/><text x="7.7934%" y="2031.50"></text></g><g><title>[node] (99,803,269 samples, 0.50%)</title><rect x="7.5434%" y="2053" width="0.4953%" height="15" fill="rgb(228,106,3)" fg:x="1519887299" fg:w="99803269"/><text x="7.7934%" y="2063.50"></text></g><g><title>_int_malloc (86,813,459 samples, 0.43%)</title><rect x="7.6079%" y="2037" width="0.4309%" height="15" fill="rgb(209,23,37)" fg:x="1532877109" fg:w="86813459"/><text x="7.8579%" y="2047.50"></text></g><g><title>[unknown] (2,259,283 samples, 0.01%)</title><rect x="8.0396%" y="1189" width="0.0112%" height="15" fill="rgb(241,93,50)" fg:x="1619861319" fg:w="2259283"/><text x="8.2896%" y="1199.50"></text></g><g><title>[unknown] (2,259,283 samples, 0.01%)</title><rect x="8.0396%" y="1173" width="0.0112%" height="15" fill="rgb(253,46,43)" fg:x="1619861319" fg:w="2259283"/><text x="8.2896%" y="1183.50"></text></g><g><title>[unknown] (2,259,283 samples, 0.01%)</title><rect x="8.0396%" y="1157" width="0.0112%" height="15" fill="rgb(226,206,43)" fg:x="1619861319" fg:w="2259283"/><text x="8.2896%" y="1167.50"></text></g><g><title>[unknown] (2,259,283 samples, 0.01%)</title><rect x="8.0396%" y="1141" width="0.0112%" height="15" fill="rgb(217,54,7)" fg:x="1619861319" fg:w="2259283"/><text x="8.2896%" y="1151.50"></text></g><g><title>[unknown] (2,259,283 samples, 0.01%)</title><rect x="8.0396%" y="1125" width="0.0112%" height="15" fill="rgb(223,5,52)" fg:x="1619861319" fg:w="2259283"/><text x="8.2896%" y="1135.50"></text></g><g><title>[unknown] (2,259,283 samples, 0.01%)</title><rect x="8.0396%" y="1109" width="0.0112%" height="15" fill="rgb(206,52,46)" fg:x="1619861319" fg:w="2259283"/><text x="8.2896%" y="1119.50"></text></g><g><title>[unknown] (2,259,283 samples, 0.01%)</title><rect x="8.0396%" y="1093" width="0.0112%" height="15" fill="rgb(253,136,11)" fg:x="1619861319" fg:w="2259283"/><text x="8.2896%" y="1103.50"></text></g><g><title>[unknown] (2,259,283 samples, 0.01%)</title><rect x="8.0396%" y="1077" width="0.0112%" height="15" fill="rgb(208,106,33)" fg:x="1619861319" fg:w="2259283"/><text x="8.2896%" y="1087.50"></text></g><g><title>[unknown] (2,259,283 samples, 0.01%)</title><rect x="8.0396%" y="1061" width="0.0112%" height="15" fill="rgb(206,54,4)" fg:x="1619861319" fg:w="2259283"/><text x="8.2896%" y="1071.50"></text></g><g><title>[unknown] (2,259,283 samples, 0.01%)</title><rect x="8.0396%" y="1045" width="0.0112%" height="15" fill="rgb(213,3,15)" fg:x="1619861319" fg:w="2259283"/><text x="8.2896%" y="1055.50"></text></g><g><title>[unknown] (2,259,283 samples, 0.01%)</title><rect x="8.0396%" y="1029" width="0.0112%" height="15" fill="rgb(252,211,39)" fg:x="1619861319" fg:w="2259283"/><text x="8.2896%" y="1039.50"></text></g><g><title>_int_malloc (2,259,283 samples, 0.01%)</title><rect x="8.0396%" y="1013" width="0.0112%" height="15" fill="rgb(223,6,36)" fg:x="1619861319" fg:w="2259283"/><text x="8.2896%" y="1023.50"></text></g><g><title>[unknown] (2,526,569 samples, 0.01%)</title><rect x="8.0396%" y="1285" width="0.0125%" height="15" fill="rgb(252,169,45)" fg:x="1619861319" fg:w="2526569"/><text x="8.2896%" y="1295.50"></text></g><g><title>[unknown] (2,526,569 samples, 0.01%)</title><rect x="8.0396%" y="1269" width="0.0125%" height="15" fill="rgb(212,48,26)" fg:x="1619861319" fg:w="2526569"/><text x="8.2896%" y="1279.50"></text></g><g><title>[unknown] (2,526,569 samples, 0.01%)</title><rect x="8.0396%" y="1253" width="0.0125%" height="15" fill="rgb(251,102,48)" fg:x="1619861319" fg:w="2526569"/><text x="8.2896%" y="1263.50"></text></g><g><title>[unknown] (2,526,569 samples, 0.01%)</title><rect x="8.0396%" y="1237" width="0.0125%" height="15" fill="rgb(243,208,16)" fg:x="1619861319" fg:w="2526569"/><text x="8.2896%" y="1247.50"></text></g><g><title>[unknown] (2,526,569 samples, 0.01%)</title><rect x="8.0396%" y="1221" width="0.0125%" height="15" fill="rgb(219,96,24)" fg:x="1619861319" fg:w="2526569"/><text x="8.2896%" y="1231.50"></text></g><g><title>[unknown] (2,526,569 samples, 0.01%)</title><rect x="8.0396%" y="1205" width="0.0125%" height="15" fill="rgb(219,33,29)" fg:x="1619861319" fg:w="2526569"/><text x="8.2896%" y="1215.50"></text></g><g><title>[unknown] (4,659,692 samples, 0.02%)</title><rect x="8.0396%" y="1349" width="0.0231%" height="15" fill="rgb(223,176,5)" fg:x="1619861319" fg:w="4659692"/><text x="8.2896%" y="1359.50"></text></g><g><title>[unknown] (4,659,692 samples, 0.02%)</title><rect x="8.0396%" y="1333" width="0.0231%" height="15" fill="rgb(228,140,14)" fg:x="1619861319" fg:w="4659692"/><text x="8.2896%" y="1343.50"></text></g><g><title>[unknown] (4,659,692 samples, 0.02%)</title><rect x="8.0396%" y="1317" width="0.0231%" height="15" fill="rgb(217,179,31)" fg:x="1619861319" fg:w="4659692"/><text x="8.2896%" y="1327.50"></text></g><g><title>[unknown] (4,659,692 samples, 0.02%)</title><rect x="8.0396%" y="1301" width="0.0231%" height="15" fill="rgb(230,9,30)" fg:x="1619861319" fg:w="4659692"/><text x="8.2896%" y="1311.50"></text></g><g><title>_int_malloc (2,133,123 samples, 0.01%)</title><rect x="8.0521%" y="1285" width="0.0106%" height="15" fill="rgb(230,136,20)" fg:x="1622387888" fg:w="2133123"/><text x="8.3021%" y="1295.50"></text></g><g><title>[unknown] (5,828,071 samples, 0.03%)</title><rect x="8.0396%" y="1413" width="0.0289%" height="15" fill="rgb(215,210,22)" fg:x="1619861319" fg:w="5828071"/><text x="8.2896%" y="1423.50"></text></g><g><title>[unknown] (5,828,071 samples, 0.03%)</title><rect x="8.0396%" y="1397" width="0.0289%" height="15" fill="rgb(218,43,5)" fg:x="1619861319" fg:w="5828071"/><text x="8.2896%" y="1407.50"></text></g><g><title>[unknown] (5,828,071 samples, 0.03%)</title><rect x="8.0396%" y="1381" width="0.0289%" height="15" fill="rgb(216,11,5)" fg:x="1619861319" fg:w="5828071"/><text x="8.2896%" y="1391.50"></text></g><g><title>[unknown] (5,828,071 samples, 0.03%)</title><rect x="8.0396%" y="1365" width="0.0289%" height="15" fill="rgb(209,82,29)" fg:x="1619861319" fg:w="5828071"/><text x="8.2896%" y="1375.50"></text></g><g><title>[unknown] (7,863,775 samples, 0.04%)</title><rect x="8.0396%" y="1429" width="0.0390%" height="15" fill="rgb(244,115,12)" fg:x="1619861319" fg:w="7863775"/><text x="8.2896%" y="1439.50"></text></g><g><title>_int_malloc (2,035,704 samples, 0.01%)</title><rect x="8.0685%" y="1413" width="0.0101%" height="15" fill="rgb(222,82,18)" fg:x="1625689390" fg:w="2035704"/><text x="8.3185%" y="1423.50"></text></g><g><title>[unknown] (12,680,096 samples, 0.06%)</title><rect x="8.0396%" y="1477" width="0.0629%" height="15" fill="rgb(249,227,8)" fg:x="1619861319" fg:w="12680096"/><text x="8.2896%" y="1487.50"></text></g><g><title>[unknown] (12,680,096 samples, 0.06%)</title><rect x="8.0396%" y="1461" width="0.0629%" height="15" fill="rgb(253,141,45)" fg:x="1619861319" fg:w="12680096"/><text x="8.2896%" y="1471.50"></text></g><g><title>[unknown] (12,680,096 samples, 0.06%)</title><rect x="8.0396%" y="1445" width="0.0629%" height="15" fill="rgb(234,184,4)" fg:x="1619861319" fg:w="12680096"/><text x="8.2896%" y="1455.50"></text></g><g><title>_int_malloc (4,816,321 samples, 0.02%)</title><rect x="8.0786%" y="1429" width="0.0239%" height="15" fill="rgb(218,194,23)" fg:x="1627725094" fg:w="4816321"/><text x="8.3286%" y="1439.50"></text></g><g><title>[unknown] (13,313,932 samples, 0.07%)</title><rect x="8.0396%" y="1509" width="0.0661%" height="15" fill="rgb(235,66,41)" fg:x="1619861319" fg:w="13313932"/><text x="8.2896%" y="1519.50"></text></g><g><title>[unknown] (13,313,932 samples, 0.07%)</title><rect x="8.0396%" y="1493" width="0.0661%" height="15" fill="rgb(245,217,1)" fg:x="1619861319" fg:w="13313932"/><text x="8.2896%" y="1503.50"></text></g><g><title>[unknown] (13,926,232 samples, 0.07%)</title><rect x="8.0396%" y="1525" width="0.0691%" height="15" fill="rgb(229,91,1)" fg:x="1619861319" fg:w="13926232"/><text x="8.2896%" y="1535.50"></text></g><g><title>[unknown] (16,650,911 samples, 0.08%)</title><rect x="8.0396%" y="1541" width="0.0826%" height="15" fill="rgb(207,101,30)" fg:x="1619861319" fg:w="16650911"/><text x="8.2896%" y="1551.50"></text></g><g><title>_int_malloc (2,724,679 samples, 0.01%)</title><rect x="8.1087%" y="1525" width="0.0135%" height="15" fill="rgb(223,82,49)" fg:x="1633787551" fg:w="2724679"/><text x="8.3587%" y="1535.50"></text></g><g><title>[unknown] (17,113,132 samples, 0.08%)</title><rect x="8.0396%" y="1557" width="0.0849%" height="15" fill="rgb(218,167,17)" fg:x="1619861319" fg:w="17113132"/><text x="8.2896%" y="1567.50"></text></g><g><title>[unknown] (19,428,116 samples, 0.10%)</title><rect x="8.0396%" y="1573" width="0.0964%" height="15" fill="rgb(208,103,14)" fg:x="1619861319" fg:w="19428116"/><text x="8.2896%" y="1583.50"></text></g><g><title>_int_malloc (2,314,984 samples, 0.01%)</title><rect x="8.1245%" y="1557" width="0.0115%" height="15" fill="rgb(238,20,8)" fg:x="1636974451" fg:w="2314984"/><text x="8.3745%" y="1567.50"></text></g><g><title>[unknown] (21,024,403 samples, 0.10%)</title><rect x="8.0396%" y="1589" width="0.1043%" height="15" fill="rgb(218,80,54)" fg:x="1619861319" fg:w="21024403"/><text x="8.2896%" y="1599.50"></text></g><g><title>[unknown] (24,063,864 samples, 0.12%)</title><rect x="8.0396%" y="1605" width="0.1194%" height="15" fill="rgb(240,144,17)" fg:x="1619861319" fg:w="24063864"/><text x="8.2896%" y="1615.50"></text></g><g><title>_int_malloc (3,039,461 samples, 0.02%)</title><rect x="8.1439%" y="1589" width="0.0151%" height="15" fill="rgb(245,27,50)" fg:x="1640885722" fg:w="3039461"/><text x="8.3939%" y="1599.50"></text></g><g><title>[unknown] (24,777,841 samples, 0.12%)</title><rect x="8.0396%" y="1621" width="0.1230%" height="15" fill="rgb(251,51,7)" fg:x="1619861319" fg:w="24777841"/><text x="8.2896%" y="1631.50"></text></g><g><title>[unknown] (27,371,682 samples, 0.14%)</title><rect x="8.0396%" y="1637" width="0.1358%" height="15" fill="rgb(245,217,29)" fg:x="1619861319" fg:w="27371682"/><text x="8.2896%" y="1647.50"></text></g><g><title>_int_malloc (2,593,841 samples, 0.01%)</title><rect x="8.1626%" y="1621" width="0.0129%" height="15" fill="rgb(221,176,29)" fg:x="1644639160" fg:w="2593841"/><text x="8.4126%" y="1631.50"></text></g><g><title>[unknown] (28,058,059 samples, 0.14%)</title><rect x="8.0396%" y="1669" width="0.1393%" height="15" fill="rgb(212,180,24)" fg:x="1619861319" fg:w="28058059"/><text x="8.2896%" y="1679.50"></text></g><g><title>[unknown] (28,058,059 samples, 0.14%)</title><rect x="8.0396%" y="1653" width="0.1393%" height="15" fill="rgb(254,24,2)" fg:x="1619861319" fg:w="28058059"/><text x="8.2896%" y="1663.50"></text></g><g><title>[unknown] (30,186,299 samples, 0.15%)</title><rect x="8.0396%" y="1685" width="0.1498%" height="15" fill="rgb(230,100,2)" fg:x="1619861319" fg:w="30186299"/><text x="8.2896%" y="1695.50"></text></g><g><title>_int_malloc (2,128,240 samples, 0.01%)</title><rect x="8.1788%" y="1669" width="0.0106%" height="15" fill="rgb(219,142,25)" fg:x="1647919378" fg:w="2128240"/><text x="8.4288%" y="1679.50"></text></g><g><title>[unknown] (33,764,341 samples, 0.17%)</title><rect x="8.0396%" y="1701" width="0.1676%" height="15" fill="rgb(240,73,43)" fg:x="1619861319" fg:w="33764341"/><text x="8.2896%" y="1711.50"></text></g><g><title>_int_malloc (3,578,042 samples, 0.02%)</title><rect x="8.1894%" y="1685" width="0.0178%" height="15" fill="rgb(214,114,15)" fg:x="1650047618" fg:w="3578042"/><text x="8.4394%" y="1695.50"></text></g><g><title>[unknown] (34,963,592 samples, 0.17%)</title><rect x="8.0396%" y="1765" width="0.1735%" height="15" fill="rgb(207,130,4)" fg:x="1619861319" fg:w="34963592"/><text x="8.2896%" y="1775.50"></text></g><g><title>[unknown] (34,963,592 samples, 0.17%)</title><rect x="8.0396%" y="1749" width="0.1735%" height="15" fill="rgb(221,25,40)" fg:x="1619861319" fg:w="34963592"/><text x="8.2896%" y="1759.50"></text></g><g><title>[unknown] (34,963,592 samples, 0.17%)</title><rect x="8.0396%" y="1733" width="0.1735%" height="15" fill="rgb(241,184,7)" fg:x="1619861319" fg:w="34963592"/><text x="8.2896%" y="1743.50"></text></g><g><title>[unknown] (34,963,592 samples, 0.17%)</title><rect x="8.0396%" y="1717" width="0.1735%" height="15" fill="rgb(235,159,4)" fg:x="1619861319" fg:w="34963592"/><text x="8.2896%" y="1727.50"></text></g><g><title>[unknown] (36,256,610 samples, 0.18%)</title><rect x="8.0396%" y="1813" width="0.1799%" height="15" fill="rgb(214,87,48)" fg:x="1619861319" fg:w="36256610"/><text x="8.2896%" y="1823.50"></text></g><g><title>[unknown] (36,256,610 samples, 0.18%)</title><rect x="8.0396%" y="1797" width="0.1799%" height="15" fill="rgb(246,198,24)" fg:x="1619861319" fg:w="36256610"/><text x="8.2896%" y="1807.50"></text></g><g><title>[unknown] (36,256,610 samples, 0.18%)</title><rect x="8.0396%" y="1781" width="0.1799%" height="15" fill="rgb(209,66,40)" fg:x="1619861319" fg:w="36256610"/><text x="8.2896%" y="1791.50"></text></g><g><title>[unknown] (36,771,630 samples, 0.18%)</title><rect x="8.0396%" y="1845" width="0.1825%" height="15" fill="rgb(233,147,39)" fg:x="1619861319" fg:w="36771630"/><text x="8.2896%" y="1855.50"></text></g><g><title>[unknown] (36,771,630 samples, 0.18%)</title><rect x="8.0396%" y="1829" width="0.1825%" height="15" fill="rgb(231,145,52)" fg:x="1619861319" fg:w="36771630"/><text x="8.2896%" y="1839.50"></text></g><g><title>[unknown] (37,813,249 samples, 0.19%)</title><rect x="8.0396%" y="1861" width="0.1877%" height="15" fill="rgb(206,20,26)" fg:x="1619861319" fg:w="37813249"/><text x="8.2896%" y="1871.50"></text></g><g><title>[unknown] (38,051,256 samples, 0.19%)</title><rect x="8.0396%" y="1877" width="0.1889%" height="15" fill="rgb(238,220,4)" fg:x="1619861319" fg:w="38051256"/><text x="8.2896%" y="1887.50"></text></g><g><title>[unknown] (38,503,498 samples, 0.19%)</title><rect x="8.0396%" y="1909" width="0.1911%" height="15" fill="rgb(252,195,42)" fg:x="1619861319" fg:w="38503498"/><text x="8.2896%" y="1919.50"></text></g><g><title>[unknown] (38,503,498 samples, 0.19%)</title><rect x="8.0396%" y="1893" width="0.1911%" height="15" fill="rgb(209,10,6)" fg:x="1619861319" fg:w="38503498"/><text x="8.2896%" y="1903.50"></text></g><g><title>[unknown] (38,963,930 samples, 0.19%)</title><rect x="8.0396%" y="1925" width="0.1934%" height="15" fill="rgb(229,3,52)" fg:x="1619861319" fg:w="38963930"/><text x="8.2896%" y="1935.50"></text></g><g><title>[unknown] (40,331,403 samples, 0.20%)</title><rect x="8.0396%" y="1941" width="0.2002%" height="15" fill="rgb(253,49,37)" fg:x="1619861319" fg:w="40331403"/><text x="8.2896%" y="1951.50"></text></g><g><title>[unknown] (41,259,477 samples, 0.20%)</title><rect x="8.0396%" y="1989" width="0.2048%" height="15" fill="rgb(240,103,49)" fg:x="1619861319" fg:w="41259477"/><text x="8.2896%" y="1999.50"></text></g><g><title>[unknown] (41,259,477 samples, 0.20%)</title><rect x="8.0396%" y="1973" width="0.2048%" height="15" fill="rgb(250,182,30)" fg:x="1619861319" fg:w="41259477"/><text x="8.2896%" y="1983.50"></text></g><g><title>[unknown] (41,259,477 samples, 0.20%)</title><rect x="8.0396%" y="1957" width="0.2048%" height="15" fill="rgb(248,8,30)" fg:x="1619861319" fg:w="41259477"/><text x="8.2896%" y="1967.50"></text></g><g><title>[unknown] (42,016,531 samples, 0.21%)</title><rect x="8.0396%" y="2005" width="0.2085%" height="15" fill="rgb(237,120,30)" fg:x="1619861319" fg:w="42016531"/><text x="8.2896%" y="2015.50"></text></g><g><title>[unknown] (44,062,432 samples, 0.22%)</title><rect x="8.0396%" y="2021" width="0.2187%" height="15" fill="rgb(221,146,34)" fg:x="1619861319" fg:w="44062432"/><text x="8.2896%" y="2031.50"></text></g><g><title>_int_free (2,022,209 samples, 0.01%)</title><rect x="8.2583%" y="2021" width="0.0100%" height="15" fill="rgb(242,55,13)" fg:x="1663923751" fg:w="2022209"/><text x="8.5083%" y="2031.50"></text></g><g><title>[unknown] (49,022,493 samples, 0.24%)</title><rect x="8.0387%" y="2037" width="0.2433%" height="15" fill="rgb(242,112,31)" fg:x="1619690568" fg:w="49022493"/><text x="8.2887%" y="2047.50"></text></g><g><title>update_curr (6,518,610 samples, 0.03%)</title><rect x="8.3739%" y="1845" width="0.0324%" height="15" fill="rgb(249,192,27)" fg:x="1687212251" fg:w="6518610"/><text x="8.6239%" y="1855.50"></text></g><g><title>dequeue_entity (11,194,283 samples, 0.06%)</title><rect x="8.3579%" y="1861" width="0.0556%" height="15" fill="rgb(208,204,44)" fg:x="1684001770" fg:w="11194283"/><text x="8.6079%" y="1871.50"></text></g><g><title>dequeue_task (12,979,171 samples, 0.06%)</title><rect x="8.3528%" y="1893" width="0.0644%" height="15" fill="rgb(208,93,54)" fg:x="1682961988" fg:w="12979171"/><text x="8.6028%" y="1903.50"></text></g><g><title>dequeue_task_fair (12,979,171 samples, 0.06%)</title><rect x="8.3528%" y="1877" width="0.0644%" height="15" fill="rgb(242,1,31)" fg:x="1682961988" fg:w="12979171"/><text x="8.6028%" y="1887.50"></text></g><g><title>load_balance (2,153,606 samples, 0.01%)</title><rect x="8.4406%" y="1845" width="0.0107%" height="15" fill="rgb(241,83,25)" fg:x="1700659688" fg:w="2153606"/><text x="8.6906%" y="1855.50"></text></g><g><title>pick_next_task_fair (6,242,256 samples, 0.03%)</title><rect x="8.4278%" y="1877" width="0.0310%" height="15" fill="rgb(205,169,50)" fg:x="1698081971" fg:w="6242256"/><text x="8.6778%" y="1887.50"></text></g><g><title>newidle_balance (3,757,031 samples, 0.02%)</title><rect x="8.4401%" y="1861" width="0.0186%" height="15" fill="rgb(239,186,37)" fg:x="1700567196" fg:w="3757031"/><text x="8.6901%" y="1871.50"></text></g><g><title>pick_next_task (7,222,864 samples, 0.04%)</title><rect x="8.4276%" y="1893" width="0.0358%" height="15" fill="rgb(205,221,10)" fg:x="1698051135" fg:w="7222864"/><text x="8.6776%" y="1903.50"></text></g><g><title>psi_group_change (2,110,855 samples, 0.01%)</title><rect x="8.4715%" y="1877" width="0.0105%" height="15" fill="rgb(218,196,15)" fg:x="1706885863" fg:w="2110855"/><text x="8.7215%" y="1887.50"></text></g><g><title>psi_task_switch (3,764,355 samples, 0.02%)</title><rect x="8.4638%" y="1893" width="0.0187%" height="15" fill="rgb(218,196,35)" fg:x="1705331642" fg:w="3764355"/><text x="8.7138%" y="1903.50"></text></g><g><title>futex_wait (35,167,074 samples, 0.17%)</title><rect x="8.3167%" y="1941" width="0.1745%" height="15" fill="rgb(233,63,24)" fg:x="1675706855" fg:w="35167074"/><text x="8.5667%" y="1951.50"></text></g><g><title>schedule (29,435,882 samples, 0.15%)</title><rect x="8.3452%" y="1925" width="0.1461%" height="15" fill="rgb(225,8,4)" fg:x="1681438047" fg:w="29435882"/><text x="8.5952%" y="1935.50"></text></g><g><title>__sched_text_start (29,381,986 samples, 0.15%)</title><rect x="8.3455%" y="1909" width="0.1458%" height="15" fill="rgb(234,105,35)" fg:x="1681491943" fg:w="29381986"/><text x="8.5955%" y="1919.50"></text></g><g><title>do_futex (36,112,155 samples, 0.18%)</title><rect x="8.3131%" y="1957" width="0.1792%" height="15" fill="rgb(236,21,32)" fg:x="1674981560" fg:w="36112155"/><text x="8.5631%" y="1967.50"></text></g><g><title>__se_sys_futex (37,568,049 samples, 0.19%)</title><rect x="8.3094%" y="1973" width="0.1865%" height="15" fill="rgb(228,109,6)" fg:x="1674226868" fg:w="37568049"/><text x="8.5594%" y="1983.50"></text></g><g><title>__x64_sys_futex (37,800,696 samples, 0.19%)</title><rect x="8.3092%" y="1989" width="0.1876%" height="15" fill="rgb(229,215,31)" fg:x="1674178325" fg:w="37800696"/><text x="8.5592%" y="1999.50"></text></g><g><title>__rseq_handle_notify_resume (2,460,027 samples, 0.01%)</title><rect x="8.5144%" y="1941" width="0.0122%" height="15" fill="rgb(221,52,54)" fg:x="1715535466" fg:w="2460027"/><text x="8.7644%" y="1951.50"></text></g><g><title>exit_to_user_mode_loop (3,974,821 samples, 0.02%)</title><rect x="8.5104%" y="1957" width="0.0197%" height="15" fill="rgb(252,129,43)" fg:x="1714718993" fg:w="3974821"/><text x="8.7604%" y="1967.50"></text></g><g><title>exit_to_user_mode_prepare (6,809,914 samples, 0.03%)</title><rect x="8.5045%" y="1973" width="0.0338%" height="15" fill="rgb(248,183,27)" fg:x="1713534021" fg:w="6809914"/><text x="8.7545%" y="1983.50"></text></g><g><title>syscall_exit_to_user_mode (7,238,419 samples, 0.04%)</title><rect x="8.5041%" y="1989" width="0.0359%" height="15" fill="rgb(250,0,22)" fg:x="1713446178" fg:w="7238419"/><text x="8.7541%" y="1999.50"></text></g><g><title>entry_SYSCALL_64 (48,054,938 samples, 0.24%)</title><rect x="8.3024%" y="2021" width="0.2385%" height="15" fill="rgb(213,166,10)" fg:x="1672814733" fg:w="48054938"/><text x="8.5524%" y="2031.50"></text></g><g><title>do_syscall_64 (47,436,805 samples, 0.24%)</title><rect x="8.3055%" y="2005" width="0.2354%" height="15" fill="rgb(207,163,36)" fg:x="1673432866" fg:w="47436805"/><text x="8.5555%" y="2015.50"></text></g><g><title>entry_ibpb (5,910,253 samples, 0.03%)</title><rect x="8.5409%" y="2021" width="0.0293%" height="15" fill="rgb(208,122,22)" fg:x="1720869671" fg:w="5910253"/><text x="8.7909%" y="2031.50"></text></g><g><title>__GI___futex_abstimed_wait_cancelable64 (57,972,484 samples, 0.29%)</title><rect x="8.2843%" y="2037" width="0.2877%" height="15" fill="rgb(207,104,49)" fg:x="1669176364" fg:w="57972484"/><text x="8.5343%" y="2047.50"></text></g><g><title>next_tgid (2,060,618 samples, 0.01%)</title><rect x="8.5738%" y="1909" width="0.0102%" height="15" fill="rgb(248,211,50)" fg:x="1727494673" fg:w="2060618"/><text x="8.8238%" y="1919.50"></text></g><g><title>__GI___getdents64 (3,559,161 samples, 0.02%)</title><rect x="8.5721%" y="2037" width="0.0177%" height="15" fill="rgb(217,13,45)" fg:x="1727148848" fg:w="3559161"/><text x="8.8221%" y="2047.50"></text></g><g><title>entry_SYSCALL_64 (3,559,161 samples, 0.02%)</title><rect x="8.5721%" y="2021" width="0.0177%" height="15" fill="rgb(211,216,49)" fg:x="1727148848" fg:w="3559161"/><text x="8.8221%" y="2031.50"></text></g><g><title>do_syscall_64 (3,559,161 samples, 0.02%)</title><rect x="8.5721%" y="2005" width="0.0177%" height="15" fill="rgb(221,58,53)" fg:x="1727148848" fg:w="3559161"/><text x="8.8221%" y="2015.50"></text></g><g><title>__x64_sys_getdents64 (3,559,161 samples, 0.02%)</title><rect x="8.5721%" y="1989" width="0.0177%" height="15" fill="rgb(220,112,41)" fg:x="1727148848" fg:w="3559161"/><text x="8.8221%" y="1999.50"></text></g><g><title>__se_sys_getdents64 (3,559,161 samples, 0.02%)</title><rect x="8.5721%" y="1973" width="0.0177%" height="15" fill="rgb(236,38,28)" fg:x="1727148848" fg:w="3559161"/><text x="8.8221%" y="1983.50"></text></g><g><title>iterate_dir (3,559,161 samples, 0.02%)</title><rect x="8.5721%" y="1957" width="0.0177%" height="15" fill="rgb(227,195,22)" fg:x="1727148848" fg:w="3559161"/><text x="8.8221%" y="1967.50"></text></g><g><title>proc_root_readdir (3,467,200 samples, 0.02%)</title><rect x="8.5725%" y="1941" width="0.0172%" height="15" fill="rgb(214,55,33)" fg:x="1727240809" fg:w="3467200"/><text x="8.8225%" y="1951.50"></text></g><g><title>proc_pid_readdir (3,467,200 samples, 0.02%)</title><rect x="8.5725%" y="1925" width="0.0172%" height="15" fill="rgb(248,80,13)" fg:x="1727240809" fg:w="3467200"/><text x="8.8225%" y="1935.50"></text></g><g><title>path_openat (2,740,670 samples, 0.01%)</title><rect x="8.5906%" y="1941" width="0.0136%" height="15" fill="rgb(238,52,6)" fg:x="1730881188" fg:w="2740670"/><text x="8.8406%" y="1951.50"></text></g><g><title>do_filp_open (3,470,703 samples, 0.02%)</title><rect x="8.5906%" y="1957" width="0.0172%" height="15" fill="rgb(224,198,47)" fg:x="1730881188" fg:w="3470703"/><text x="8.8406%" y="1967.50"></text></g><g><title>__x64_sys_openat (4,278,539 samples, 0.02%)</title><rect x="8.5906%" y="1989" width="0.0212%" height="15" fill="rgb(233,171,20)" fg:x="1730881188" fg:w="4278539"/><text x="8.8406%" y="1999.50"></text></g><g><title>do_sys_openat2 (4,278,539 samples, 0.02%)</title><rect x="8.5906%" y="1973" width="0.0212%" height="15" fill="rgb(241,30,25)" fg:x="1730881188" fg:w="4278539"/><text x="8.8406%" y="1983.50"></text></g><g><title>entry_SYSCALL_64 (5,098,207 samples, 0.03%)</title><rect x="8.5897%" y="2021" width="0.0253%" height="15" fill="rgb(207,171,38)" fg:x="1730708009" fg:w="5098207"/><text x="8.8397%" y="2031.50"></text></g><g><title>do_syscall_64 (5,098,207 samples, 0.03%)</title><rect x="8.5897%" y="2005" width="0.0253%" height="15" fill="rgb(234,70,1)" fg:x="1730708009" fg:w="5098207"/><text x="8.8397%" y="2015.50"></text></g><g><title>__GI___libc_open (5,874,776 samples, 0.03%)</title><rect x="8.5897%" y="2037" width="0.0292%" height="15" fill="rgb(232,178,18)" fg:x="1730708009" fg:w="5874776"/><text x="8.8397%" y="2047.50"></text></g><g><title>link_path_walk (3,610,208 samples, 0.02%)</title><rect x="8.6666%" y="1909" width="0.0179%" height="15" fill="rgb(241,78,40)" fg:x="1746204484" fg:w="3610208"/><text x="8.9166%" y="1919.50"></text></g><g><title>path_init (2,456,909 samples, 0.01%)</title><rect x="8.6881%" y="1909" width="0.0122%" height="15" fill="rgb(222,35,25)" fg:x="1750522736" fg:w="2456909"/><text x="8.9381%" y="1919.50"></text></g><g><title>filename_lookup (10,135,833 samples, 0.05%)</title><rect x="8.6601%" y="1941" width="0.0503%" height="15" fill="rgb(207,92,16)" fg:x="1744895374" fg:w="10135833"/><text x="8.9101%" y="1951.50"></text></g><g><title>path_lookupat (10,135,833 samples, 0.05%)</title><rect x="8.6601%" y="1925" width="0.0503%" height="15" fill="rgb(216,59,51)" fg:x="1744895374" fg:w="10135833"/><text x="8.9101%" y="1935.50"></text></g><g><title>memset_orig (3,391,589 samples, 0.02%)</title><rect x="8.7249%" y="1925" width="0.0168%" height="15" fill="rgb(213,80,28)" fg:x="1757950940" fg:w="3391589"/><text x="8.9749%" y="1935.50"></text></g><g><title>__check_object_size (2,754,939 samples, 0.01%)</title><rect x="8.7425%" y="1909" width="0.0137%" height="15" fill="rgb(220,93,7)" fg:x="1761499140" fg:w="2754939"/><text x="8.9925%" y="1919.50"></text></g><g><title>getname_flags (9,795,987 samples, 0.05%)</title><rect x="8.7104%" y="1941" width="0.0486%" height="15" fill="rgb(225,24,44)" fg:x="1755031207" fg:w="9795987"/><text x="8.9604%" y="1951.50"></text></g><g><title>strncpy_from_user (3,484,665 samples, 0.02%)</title><rect x="8.7418%" y="1925" width="0.0173%" height="15" fill="rgb(243,74,40)" fg:x="1761342529" fg:w="3484665"/><text x="8.9918%" y="1935.50"></text></g><g><title>do_readlinkat (23,475,260 samples, 0.12%)</title><rect x="8.6484%" y="1973" width="0.1165%" height="15" fill="rgb(228,39,7)" fg:x="1742530043" fg:w="23475260"/><text x="8.8984%" y="1983.50"></text></g><g><title>user_path_at_empty (21,109,929 samples, 0.10%)</title><rect x="8.6601%" y="1957" width="0.1048%" height="15" fill="rgb(227,79,8)" fg:x="1744895374" fg:w="21109929"/><text x="8.9101%" y="1967.50"></text></g><g><title>__x64_sys_readlink (24,676,090 samples, 0.12%)</title><rect x="8.6466%" y="1989" width="0.1225%" height="15" fill="rgb(236,58,11)" fg:x="1742170744" fg:w="24676090"/><text x="8.8966%" y="1999.50"></text></g><g><title>entry_SYSCALL_64 (30,585,369 samples, 0.15%)</title><rect x="8.6308%" y="2021" width="0.1518%" height="15" fill="rgb(249,63,35)" fg:x="1738985147" fg:w="30585369"/><text x="8.8808%" y="2031.50"></text></g><g><title>do_syscall_64 (27,883,381 samples, 0.14%)</title><rect x="8.6442%" y="2005" width="0.1384%" height="15" fill="rgb(252,114,16)" fg:x="1741687135" fg:w="27883381"/><text x="8.8942%" y="2015.50"></text></g><g><title>__GI___readlink (36,891,784 samples, 0.18%)</title><rect x="8.6243%" y="2037" width="0.1831%" height="15" fill="rgb(254,151,24)" fg:x="1737675951" fg:w="36891784"/><text x="8.8743%" y="2047.50"></text></g><g><title>entry_ibpb (4,382,082 samples, 0.02%)</title><rect x="8.7857%" y="2021" width="0.0217%" height="15" fill="rgb(253,54,39)" fg:x="1770185653" fg:w="4382082"/><text x="9.0357%" y="2031.50"></text></g><g><title>asm_exc_page_fault (2,108,100 samples, 0.01%)</title><rect x="8.8111%" y="2021" width="0.0105%" height="15" fill="rgb(243,25,45)" fg:x="1775309427" fg:w="2108100"/><text x="9.0611%" y="2031.50"></text></g><g><title>exc_page_fault (2,108,100 samples, 0.01%)</title><rect x="8.8111%" y="2005" width="0.0105%" height="15" fill="rgb(234,134,9)" fg:x="1775309427" fg:w="2108100"/><text x="9.0611%" y="2015.50"></text></g><g><title>do_user_addr_fault (2,108,100 samples, 0.01%)</title><rect x="8.8111%" y="1989" width="0.0105%" height="15" fill="rgb(227,166,31)" fg:x="1775309427" fg:w="2108100"/><text x="9.0611%" y="1999.50"></text></g><g><title>__malloc_fork_unlock_parent (2,894,926 samples, 0.01%)</title><rect x="8.8111%" y="2037" width="0.0144%" height="15" fill="rgb(245,143,41)" fg:x="1775309427" fg:w="2894926"/><text x="9.0611%" y="2047.50"></text></g><g><title>handle_mm_fault (2,645,899 samples, 0.01%)</title><rect x="9.3400%" y="1973" width="0.0131%" height="15" fill="rgb(238,181,32)" fg:x="1881869937" fg:w="2645899"/><text x="9.5900%" y="1983.50"></text></g><g><title>do_user_addr_fault (3,573,810 samples, 0.02%)</title><rect x="9.3400%" y="1989" width="0.0177%" height="15" fill="rgb(224,113,18)" fg:x="1881869937" fg:w="3573810"/><text x="9.5900%" y="1999.50"></text></g><g><title>asm_exc_page_fault (4,306,572 samples, 0.02%)</title><rect x="9.3400%" y="2021" width="0.0214%" height="15" fill="rgb(240,229,28)" fg:x="1881869937" fg:w="4306572"/><text x="9.5900%" y="2031.50"></text></g><g><title>exc_page_fault (4,306,572 samples, 0.02%)</title><rect x="9.3400%" y="2005" width="0.0214%" height="15" fill="rgb(250,185,3)" fg:x="1881869937" fg:w="4306572"/><text x="9.5900%" y="2015.50"></text></g><g><title>_int_free (107,230,164 samples, 0.53%)</title><rect x="8.8339%" y="2037" width="0.5322%" height="15" fill="rgb(212,59,25)" fg:x="1779897816" fg:w="107230164"/><text x="9.0839%" y="2047.50"></text></g><g><title>realpath_stk (2,388,414 samples, 0.01%)</title><rect x="9.3848%" y="2037" width="0.0119%" height="15" fill="rgb(221,87,20)" fg:x="1890913133" fg:w="2388414"/><text x="9.6348%" y="2047.50"></text></g><g><title>unlink_chunk.constprop.0 (25,715,219 samples, 0.13%)</title><rect x="9.3967%" y="2037" width="0.1276%" height="15" fill="rgb(213,74,28)" fg:x="1893301547" fg:w="25715219"/><text x="9.6467%" y="2047.50"></text></g><g><title>[unknown] (299,464,633 samples, 1.49%)</title><rect x="8.0387%" y="2053" width="1.4863%" height="15" fill="rgb(224,132,34)" fg:x="1619690568" fg:w="299464633"/><text x="8.2887%" y="2063.50"></text></g><g><title>clear_page_rep (3,057,090 samples, 0.02%)</title><rect x="9.5632%" y="1797" width="0.0152%" height="15" fill="rgb(222,101,24)" fg:x="1926851584" fg:w="3057090"/><text x="9.8132%" y="1807.50"></text></g><g><title>__pte_alloc (4,570,098 samples, 0.02%)</title><rect x="9.5632%" y="1877" width="0.0227%" height="15" fill="rgb(254,142,4)" fg:x="1926851584" fg:w="4570098"/><text x="9.8132%" y="1887.50"></text></g><g><title>pte_alloc_one (4,570,098 samples, 0.02%)</title><rect x="9.5632%" y="1861" width="0.0227%" height="15" fill="rgb(230,229,49)" fg:x="1926851584" fg:w="4570098"/><text x="9.8132%" y="1871.50"></text></g><g><title>alloc_pages (4,570,098 samples, 0.02%)</title><rect x="9.5632%" y="1845" width="0.0227%" height="15" fill="rgb(238,70,47)" fg:x="1926851584" fg:w="4570098"/><text x="9.8132%" y="1855.50"></text></g><g><title>__alloc_pages (4,570,098 samples, 0.02%)</title><rect x="9.5632%" y="1829" width="0.0227%" height="15" fill="rgb(231,160,17)" fg:x="1926851584" fg:w="4570098"/><text x="9.8132%" y="1839.50"></text></g><g><title>get_page_from_freelist (4,570,098 samples, 0.02%)</title><rect x="9.5632%" y="1813" width="0.0227%" height="15" fill="rgb(218,68,53)" fg:x="1926851584" fg:w="4570098"/><text x="9.8132%" y="1823.50"></text></g><g><title>copy_page_range (87,369,871 samples, 0.43%)</title><rect x="9.5438%" y="1925" width="0.4336%" height="15" fill="rgb(236,111,10)" fg:x="1922949388" fg:w="87369871"/><text x="9.7938%" y="1935.50"></text></g><g><title>copy_p4d_range (87,369,871 samples, 0.43%)</title><rect x="9.5438%" y="1909" width="0.4336%" height="15" fill="rgb(224,34,41)" fg:x="1922949388" fg:w="87369871"/><text x="9.7938%" y="1919.50"></text></g><g><title>copy_pte_range (86,870,565 samples, 0.43%)</title><rect x="9.5463%" y="1893" width="0.4311%" height="15" fill="rgb(241,118,19)" fg:x="1923448694" fg:w="86870565"/><text x="9.7963%" y="1903.50"></text></g><g><title>copy_present_pte (78,101,757 samples, 0.39%)</title><rect x="9.5898%" y="1877" width="0.3876%" height="15" fill="rgb(238,129,25)" fg:x="1932217502" fg:w="78101757"/><text x="9.8398%" y="1887.50"></text></g><g><title>vm_normal_page (3,030,444 samples, 0.02%)</title><rect x="9.9624%" y="1861" width="0.0150%" height="15" fill="rgb(238,22,31)" fg:x="2007288815" fg:w="3030444"/><text x="10.2124%" y="1871.50"></text></g><g><title>vm_area_dup (2,385,998 samples, 0.01%)</title><rect x="9.9975%" y="1925" width="0.0118%" height="15" fill="rgb(222,174,48)" fg:x="2014351750" fg:w="2385998"/><text x="10.2475%" y="1935.50"></text></g><g><title>kmem_cache_alloc (2,385,998 samples, 0.01%)</title><rect x="9.9975%" y="1909" width="0.0118%" height="15" fill="rgb(206,152,40)" fg:x="2014351750" fg:w="2385998"/><text x="10.2475%" y="1919.50"></text></g><g><title>copy_process (99,488,748 samples, 0.49%)</title><rect x="9.5252%" y="1973" width="0.4938%" height="15" fill="rgb(218,99,54)" fg:x="1919201396" fg:w="99488748"/><text x="9.7752%" y="1983.50"></text></g><g><title>copy_mm (99,488,748 samples, 0.49%)</title><rect x="9.5252%" y="1957" width="0.4938%" height="15" fill="rgb(220,174,26)" fg:x="1919201396" fg:w="99488748"/><text x="9.7752%" y="1967.50"></text></g><g><title>dup_mmap (99,488,748 samples, 0.49%)</title><rect x="9.5252%" y="1941" width="0.4938%" height="15" fill="rgb(245,116,9)" fg:x="1919201396" fg:w="99488748"/><text x="9.7752%" y="1951.50"></text></g><g><title>entry_SYSCALL_64 (100,287,230 samples, 0.50%)</title><rect x="9.5252%" y="2037" width="0.4977%" height="15" fill="rgb(209,72,35)" fg:x="1919201396" fg:w="100287230"/><text x="9.7752%" y="2047.50"></text></g><g><title>do_syscall_64 (100,287,230 samples, 0.50%)</title><rect x="9.5252%" y="2021" width="0.4977%" height="15" fill="rgb(226,126,21)" fg:x="1919201396" fg:w="100287230"/><text x="9.7752%" y="2031.50"></text></g><g><title>__x64_sys_clone (100,287,230 samples, 0.50%)</title><rect x="9.5252%" y="2005" width="0.4977%" height="15" fill="rgb(227,192,1)" fg:x="1919201396" fg:w="100287230"/><text x="9.7752%" y="2015.50"></text></g><g><title>kernel_clone (100,287,230 samples, 0.50%)</title><rect x="9.5252%" y="1989" width="0.4977%" height="15" fill="rgb(237,180,29)" fg:x="1919201396" fg:w="100287230"/><text x="9.7752%" y="1999.50"></text></g><g><title>_Fork (100,470,837 samples, 0.50%)</title><rect x="9.5250%" y="2053" width="0.4986%" height="15" fill="rgb(230,197,35)" fg:x="1919155201" fg:w="100470837"/><text x="9.7750%" y="2063.50"></text></g><g><title>__vm_area_free (2,033,334 samples, 0.01%)</title><rect x="10.0237%" y="1845" width="0.0101%" height="15" fill="rgb(246,193,31)" fg:x="2019626038" fg:w="2033334"/><text x="10.2737%" y="1855.50"></text></g><g><title>kmem_cache_free (2,033,334 samples, 0.01%)</title><rect x="10.0237%" y="1829" width="0.0101%" height="15" fill="rgb(241,36,4)" fg:x="2019626038" fg:w="2033334"/><text x="10.2737%" y="1839.50"></text></g><g><title>memcg_slab_free_hook (2,033,334 samples, 0.01%)</title><rect x="10.0237%" y="1813" width="0.0101%" height="15" fill="rgb(241,130,17)" fg:x="2019626038" fg:w="2033334"/><text x="10.2737%" y="1823.50"></text></g><g><title>free_pgtables (2,776,641 samples, 0.01%)</title><rect x="10.0377%" y="1845" width="0.0138%" height="15" fill="rgb(206,137,32)" fg:x="2022457045" fg:w="2776641"/><text x="10.2877%" y="1855.50"></text></g><g><title>__tlb_remove_page_size (2,820,623 samples, 0.01%)</title><rect x="10.3561%" y="1765" width="0.0140%" height="15" fill="rgb(237,228,51)" fg:x="2086602583" fg:w="2820623"/><text x="10.6061%" y="1775.50"></text></g><g><title>page_remove_rmap (28,891,612 samples, 0.14%)</title><rect x="10.3738%" y="1765" width="0.1434%" height="15" fill="rgb(243,6,42)" fg:x="2090170909" fg:w="28891612"/><text x="10.6238%" y="1775.50"></text></g><g><title>free_swap_cache (5,617,356 samples, 0.03%)</title><rect x="10.5211%" y="1733" width="0.0279%" height="15" fill="rgb(251,74,28)" fg:x="2119854382" fg:w="5617356"/><text x="10.7711%" y="1743.50"></text></g><g><title>tlb_flush_mmu (14,569,967 samples, 0.07%)</title><rect x="10.5172%" y="1765" width="0.0723%" height="15" fill="rgb(218,20,49)" fg:x="2119062521" fg:w="14569967"/><text x="10.7672%" y="1775.50"></text></g><g><title>free_pages_and_swap_cache (13,778,106 samples, 0.07%)</title><rect x="10.5211%" y="1749" width="0.0684%" height="15" fill="rgb(238,28,14)" fg:x="2119854382" fg:w="13778106"/><text x="10.7711%" y="1759.50"></text></g><g><title>release_pages (8,160,750 samples, 0.04%)</title><rect x="10.5490%" y="1733" width="0.0405%" height="15" fill="rgb(229,40,46)" fg:x="2125471738" fg:w="8160750"/><text x="10.7990%" y="1743.50"></text></g><g><title>vm_normal_page (2,239,137 samples, 0.01%)</title><rect x="10.5895%" y="1765" width="0.0111%" height="15" fill="rgb(244,195,20)" fg:x="2133632488" fg:w="2239137"/><text x="10.8395%" y="1775.50"></text></g><g><title>__GI___execve (118,605,113 samples, 0.59%)</title><rect x="10.0237%" y="2053" width="0.5887%" height="15" fill="rgb(253,56,35)" fg:x="2019626038" fg:w="118605113"/><text x="10.2737%" y="2063.50"></text></g><g><title>entry_SYSCALL_64 (118,605,113 samples, 0.59%)</title><rect x="10.0237%" y="2037" width="0.5887%" height="15" fill="rgb(210,149,44)" fg:x="2019626038" fg:w="118605113"/><text x="10.2737%" y="2047.50"></text></g><g><title>do_syscall_64 (118,605,113 samples, 0.59%)</title><rect x="10.0237%" y="2021" width="0.5887%" height="15" fill="rgb(240,135,12)" fg:x="2019626038" fg:w="118605113"/><text x="10.2737%" y="2031.50"></text></g><g><title>__x64_sys_execve (118,605,113 samples, 0.59%)</title><rect x="10.0237%" y="2005" width="0.5887%" height="15" fill="rgb(251,24,50)" fg:x="2019626038" fg:w="118605113"/><text x="10.2737%" y="2015.50"></text></g><g><title>do_execveat_common (118,605,113 samples, 0.59%)</title><rect x="10.0237%" y="1989" width="0.5887%" height="15" fill="rgb(243,200,47)" fg:x="2019626038" fg:w="118605113"/><text x="10.2737%" y="1999.50"></text></g><g><title>bprm_execve (118,605,113 samples, 0.59%)</title><rect x="10.0237%" y="1973" width="0.5887%" height="15" fill="rgb(224,166,26)" fg:x="2019626038" fg:w="118605113"/><text x="10.2737%" y="1983.50"></text></g><g><title>exec_binprm (118,605,113 samples, 0.59%)</title><rect x="10.0237%" y="1957" width="0.5887%" height="15" fill="rgb(233,0,47)" fg:x="2019626038" fg:w="118605113"/><text x="10.2737%" y="1967.50"></text></g><g><title>load_elf_binary (118,605,113 samples, 0.59%)</title><rect x="10.0237%" y="1941" width="0.5887%" height="15" fill="rgb(253,80,5)" fg:x="2019626038" fg:w="118605113"/><text x="10.2737%" y="1951.50"></text></g><g><title>begin_new_exec (118,605,113 samples, 0.59%)</title><rect x="10.0237%" y="1925" width="0.5887%" height="15" fill="rgb(214,133,25)" fg:x="2019626038" fg:w="118605113"/><text x="10.2737%" y="1935.50"></text></g><g><title>exec_mmap (118,605,113 samples, 0.59%)</title><rect x="10.0237%" y="1909" width="0.5887%" height="15" fill="rgb(209,27,14)" fg:x="2019626038" fg:w="118605113"/><text x="10.2737%" y="1919.50"></text></g><g><title>mmput (118,605,113 samples, 0.59%)</title><rect x="10.0237%" y="1893" width="0.5887%" height="15" fill="rgb(219,102,51)" fg:x="2019626038" fg:w="118605113"/><text x="10.2737%" y="1903.50"></text></g><g><title>__mmput (118,605,113 samples, 0.59%)</title><rect x="10.0237%" y="1877" width="0.5887%" height="15" fill="rgb(237,18,16)" fg:x="2019626038" fg:w="118605113"/><text x="10.2737%" y="1887.50"></text></g><g><title>exit_mmap (118,605,113 samples, 0.59%)</title><rect x="10.0237%" y="1861" width="0.5887%" height="15" fill="rgb(241,85,17)" fg:x="2019626038" fg:w="118605113"/><text x="10.2737%" y="1871.50"></text></g><g><title>unmap_vmas (112,997,465 samples, 0.56%)</title><rect x="10.0515%" y="1845" width="0.5608%" height="15" fill="rgb(236,90,42)" fg:x="2025233686" fg:w="112997465"/><text x="10.3015%" y="1855.50"></text></g><g><title>unmap_single_vma (112,508,707 samples, 0.56%)</title><rect x="10.0539%" y="1829" width="0.5584%" height="15" fill="rgb(249,57,21)" fg:x="2025722444" fg:w="112508707"/><text x="10.3039%" y="1839.50"></text></g><g><title>unmap_page_range (112,508,707 samples, 0.56%)</title><rect x="10.0539%" y="1813" width="0.5584%" height="15" fill="rgb(243,12,36)" fg:x="2025722444" fg:w="112508707"/><text x="10.3039%" y="1823.50"></text></g><g><title>zap_p4d_range (112,508,707 samples, 0.56%)</title><rect x="10.0539%" y="1797" width="0.5584%" height="15" fill="rgb(253,128,47)" fg:x="2025722444" fg:w="112508707"/><text x="10.3039%" y="1807.50"></text></g><g><title>zap_pte_range (110,235,837 samples, 0.55%)</title><rect x="10.0652%" y="1781" width="0.5471%" height="15" fill="rgb(207,33,20)" fg:x="2027995314" fg:w="110235837"/><text x="10.3152%" y="1791.50"></text></g><g><title>zap_install_uffd_wp_if_needed (2,359,526 samples, 0.01%)</title><rect x="10.6006%" y="1765" width="0.0117%" height="15" fill="rgb(233,215,35)" fg:x="2135871625" fg:w="2359526"/><text x="10.8506%" y="1775.50"></text></g><g><title>exc_page_fault (2,235,782 samples, 0.01%)</title><rect x="10.6243%" y="2021" width="0.0111%" height="15" fill="rgb(249,188,52)" fg:x="2140646245" fg:w="2235782"/><text x="10.8743%" y="2031.50"></text></g><g><title>asm_exc_page_fault (2,710,047 samples, 0.01%)</title><rect x="10.6231%" y="2037" width="0.0135%" height="15" fill="rgb(225,12,32)" fg:x="2140394248" fg:w="2710047"/><text x="10.8731%" y="2047.50"></text></g><g><title>__libc_fork (2,953,761 samples, 0.01%)</title><rect x="10.6231%" y="2053" width="0.0147%" height="15" fill="rgb(247,98,14)" fg:x="2140394248" fg:w="2953761"/><text x="10.8731%" y="2063.50"></text></g><g><title>update_curr (2,144,197 samples, 0.01%)</title><rect x="10.7647%" y="1749" width="0.0106%" height="15" fill="rgb(247,219,48)" fg:x="2168933371" fg:w="2144197"/><text x="11.0147%" y="1759.50"></text></g><g><title>dequeue_entity (8,483,216 samples, 0.04%)</title><rect x="10.7475%" y="1765" width="0.0421%" height="15" fill="rgb(253,60,48)" fg:x="2165471274" fg:w="8483216"/><text x="10.9975%" y="1775.50"></text></g><g><title>update_load_avg (2,876,922 samples, 0.01%)</title><rect x="10.7753%" y="1749" width="0.0143%" height="15" fill="rgb(245,15,52)" fg:x="2171077568" fg:w="2876922"/><text x="11.0253%" y="1759.50"></text></g><g><title>dequeue_task_fair (9,225,225 samples, 0.05%)</title><rect x="10.7475%" y="1781" width="0.0458%" height="15" fill="rgb(220,133,28)" fg:x="2165471274" fg:w="9225225"/><text x="10.9975%" y="1791.50"></text></g><g><title>dequeue_task (9,308,222 samples, 0.05%)</title><rect x="10.7475%" y="1797" width="0.0462%" height="15" fill="rgb(217,180,4)" fg:x="2165471274" fg:w="9308222"/><text x="10.9975%" y="1807.50"></text></g><g><title>pick_next_task_fair (3,313,724 samples, 0.02%)</title><rect x="10.7939%" y="1781" width="0.0164%" height="15" fill="rgb(251,24,1)" fg:x="2174811334" fg:w="3313724"/><text x="11.0439%" y="1791.50"></text></g><g><title>pick_next_task (4,575,840 samples, 0.02%)</title><rect x="10.7939%" y="1797" width="0.0227%" height="15" fill="rgb(212,185,49)" fg:x="2174811334" fg:w="4575840"/><text x="11.0439%" y="1807.50"></text></g><g><title>psi_group_change (2,144,054 samples, 0.01%)</title><rect x="10.8304%" y="1781" width="0.0106%" height="15" fill="rgb(215,175,22)" fg:x="2182167720" fg:w="2144054"/><text x="11.0804%" y="1791.50"></text></g><g><title>psi_task_switch (4,183,075 samples, 0.02%)</title><rect x="10.8241%" y="1797" width="0.0208%" height="15" fill="rgb(250,205,14)" fg:x="2180900475" fg:w="4183075"/><text x="11.0741%" y="1807.50"></text></g><g><title>schedule_hrtimeout_range (26,244,540 samples, 0.13%)</title><rect x="10.7213%" y="1861" width="0.1303%" height="15" fill="rgb(225,211,22)" fg:x="2160189553" fg:w="26244540"/><text x="10.9713%" y="1871.50"></text></g><g><title>schedule_hrtimeout_range_clock (24,021,677 samples, 0.12%)</title><rect x="10.7323%" y="1845" width="0.1192%" height="15" fill="rgb(251,179,42)" fg:x="2162412416" fg:w="24021677"/><text x="10.9823%" y="1855.50"></text></g><g><title>schedule (22,610,204 samples, 0.11%)</title><rect x="10.7393%" y="1829" width="0.1122%" height="15" fill="rgb(208,216,51)" fg:x="2163823889" fg:w="22610204"/><text x="10.9893%" y="1839.50"></text></g><g><title>__sched_text_start (22,610,204 samples, 0.11%)</title><rect x="10.7393%" y="1813" width="0.1122%" height="15" fill="rgb(235,36,11)" fg:x="2163823889" fg:w="22610204"/><text x="10.9893%" y="1823.50"></text></g><g><title>do_epoll_wait (33,854,022 samples, 0.17%)</title><rect x="10.6872%" y="1877" width="0.1680%" height="15" fill="rgb(213,189,28)" fg:x="2153319821" fg:w="33854022"/><text x="10.9372%" y="1887.50"></text></g><g><title>__se_sys_epoll_pwait (39,028,922 samples, 0.19%)</title><rect x="10.6725%" y="1893" width="0.1937%" height="15" fill="rgb(227,203,42)" fg:x="2150349510" fg:w="39028922"/><text x="10.9225%" y="1903.50"></text></g><g><title>__x64_sys_epoll_pwait (39,697,763 samples, 0.20%)</title><rect x="10.6725%" y="1909" width="0.1970%" height="15" fill="rgb(244,72,36)" fg:x="2150349510" fg:w="39697763"/><text x="10.9225%" y="1919.50"></text></g><g><title>syscall_enter_from_user_mode (2,255,985 samples, 0.01%)</title><rect x="10.8695%" y="1909" width="0.0112%" height="15" fill="rgb(213,53,17)" fg:x="2190047273" fg:w="2255985"/><text x="11.1195%" y="1919.50"></text></g><g><title>syscall_exit_to_user_mode (2,385,454 samples, 0.01%)</title><rect x="10.8807%" y="1909" width="0.0118%" height="15" fill="rgb(207,167,3)" fg:x="2192303258" fg:w="2385454"/><text x="11.1307%" y="1919.50"></text></g><g><title>do_syscall_64 (44,518,456 samples, 0.22%)</title><rect x="10.6725%" y="1925" width="0.2210%" height="15" fill="rgb(216,98,30)" fg:x="2150349510" fg:w="44518456"/><text x="10.9225%" y="1935.50"></text></g><g><title>entry_SYSCALL_64 (45,396,424 samples, 0.23%)</title><rect x="10.6686%" y="1941" width="0.2253%" height="15" fill="rgb(236,123,15)" fg:x="2149575249" fg:w="45396424"/><text x="10.9186%" y="1951.50"></text></g><g><title>entry_ibpb (6,439,833 samples, 0.03%)</title><rect x="10.8939%" y="1941" width="0.0320%" height="15" fill="rgb(248,81,50)" fg:x="2194971673" fg:w="6439833"/><text x="11.1439%" y="1951.50"></text></g><g><title>save_fpregs_to_fpstate (4,053,899 samples, 0.02%)</title><rect x="10.9259%" y="1941" width="0.0201%" height="15" fill="rgb(214,120,4)" fg:x="2201411506" fg:w="4053899"/><text x="11.1759%" y="1951.50"></text></g><g><title>epoll_pwait (58,450,426 samples, 0.29%)</title><rect x="10.6592%" y="1957" width="0.2901%" height="15" fill="rgb(208,179,34)" fg:x="2147682714" fg:w="58450426"/><text x="10.9092%" y="1967.50"></text></g><g><title>eventfd_read (3,664,433 samples, 0.02%)</title><rect x="11.0054%" y="1845" width="0.0182%" height="15" fill="rgb(227,140,7)" fg:x="2217440454" fg:w="3664433"/><text x="11.2554%" y="1855.50"></text></g><g><title>__wake_up_locked_key (2,932,320 samples, 0.01%)</title><rect x="11.0091%" y="1829" width="0.0146%" height="15" fill="rgb(214,22,6)" fg:x="2218172567" fg:w="2932320"/><text x="11.2591%" y="1839.50"></text></g><g><title>ep_poll_callback (2,080,899 samples, 0.01%)</title><rect x="11.0133%" y="1813" width="0.0103%" height="15" fill="rgb(207,137,27)" fg:x="2219023988" fg:w="2080899"/><text x="11.2633%" y="1823.50"></text></g><g><title>inotify_read (2,112,303 samples, 0.01%)</title><rect x="11.0256%" y="1845" width="0.0105%" height="15" fill="rgb(210,8,46)" fg:x="2221497203" fg:w="2112303"/><text x="11.2756%" y="1855.50"></text></g><g><title>__x64_sys_read (15,006,919 samples, 0.07%)</title><rect x="10.9863%" y="1893" width="0.0745%" height="15" fill="rgb(240,16,54)" fg:x="2213587513" fg:w="15006919"/><text x="11.2363%" y="1903.50"></text></g><g><title>ksys_read (14,452,273 samples, 0.07%)</title><rect x="10.9891%" y="1877" width="0.0717%" height="15" fill="rgb(211,209,29)" fg:x="2214142159" fg:w="14452273"/><text x="11.2391%" y="1887.50"></text></g><g><title>vfs_read (13,041,796 samples, 0.06%)</title><rect x="10.9961%" y="1861" width="0.0647%" height="15" fill="rgb(226,228,24)" fg:x="2215552636" fg:w="13041796"/><text x="11.2461%" y="1871.50"></text></g><g><title>security_file_permission (4,984,926 samples, 0.02%)</title><rect x="11.0361%" y="1845" width="0.0247%" height="15" fill="rgb(222,84,9)" fg:x="2223609506" fg:w="4984926"/><text x="11.2861%" y="1855.50"></text></g><g><title>entry_SYSCALL_64 (19,471,912 samples, 0.10%)</title><rect x="10.9794%" y="1925" width="0.0966%" height="15" fill="rgb(234,203,30)" fg:x="2212197045" fg:w="19471912"/><text x="11.2294%" y="1935.50"></text></g><g><title>do_syscall_64 (18,761,789 samples, 0.09%)</title><rect x="10.9829%" y="1909" width="0.0931%" height="15" fill="rgb(238,109,14)" fg:x="2212907168" fg:w="18761789"/><text x="11.2329%" y="1919.50"></text></g><g><title>syscall_exit_to_user_mode (2,376,731 samples, 0.01%)</title><rect x="11.0643%" y="1893" width="0.0118%" height="15" fill="rgb(233,206,34)" fg:x="2229292226" fg:w="2376731"/><text x="11.3143%" y="1903.50"></text></g><g><title>entry_ibpb (7,124,098 samples, 0.04%)</title><rect x="11.0761%" y="1925" width="0.0354%" height="15" fill="rgb(220,167,47)" fg:x="2231668957" fg:w="7124098"/><text x="11.3261%" y="1935.50"></text></g><g><title>read (28,932,842 samples, 0.14%)</title><rect x="10.9712%" y="1941" width="0.1436%" height="15" fill="rgb(238,105,10)" fg:x="2210548243" fg:w="28932842"/><text x="11.2212%" y="1951.50"></text></g><g><title>Watcher::callbackEventsToJS (4,535,590 samples, 0.02%)</title><rect x="11.1254%" y="1909" width="0.0225%" height="15" fill="rgb(213,227,17)" fg:x="2241603395" fg:w="4535590"/><text x="11.3754%" y="1919.50"></text></g><g><title>Watcher::fireCallbacks (5,991,117 samples, 0.03%)</title><rect x="11.1254%" y="1925" width="0.0297%" height="15" fill="rgb(217,132,38)" fg:x="2241603395" fg:w="5991117"/><text x="11.3754%" y="1935.50"></text></g><g><title>v8::internal::Heap::IterateRoots (2,474,604 samples, 0.01%)</title><rect x="11.2046%" y="1813" width="0.0123%" height="15" fill="rgb(242,146,4)" fg:x="2257566060" fg:w="2474604"/><text x="11.4546%" y="1823.50"></text></g><g><title>v8::internal::Heap::Scavenge (11,610,907 samples, 0.06%)</title><rect x="11.1718%" y="1845" width="0.0576%" height="15" fill="rgb(212,61,9)" fg:x="2250965676" fg:w="11610907"/><text x="11.4218%" y="1855.50"></text></g><g><title>v8::internal::ScavengerCollector::CollectGarbage (10,911,101 samples, 0.05%)</title><rect x="11.1753%" y="1829" width="0.0542%" height="15" fill="rgb(247,126,22)" fg:x="2251665482" fg:w="10911101"/><text x="11.4253%" y="1839.50"></text></g><g><title>v8::platform::DefaultJobHandle::Join (2,535,919 samples, 0.01%)</title><rect x="11.2169%" y="1813" width="0.0126%" height="15" fill="rgb(220,196,2)" fg:x="2260040664" fg:w="2535919"/><text x="11.4669%" y="1823.50"></text></g><g><title>v8::platform::DefaultJobState::Join (2,535,919 samples, 0.01%)</title><rect x="11.2169%" y="1797" width="0.0126%" height="15" fill="rgb(208,46,4)" fg:x="2260040664" fg:w="2535919"/><text x="11.4669%" y="1807.50"></text></g><g><title>node::PerIsolatePlatformData::FlushForegroundTasksInternal (14,889,361 samples, 0.07%)</title><rect x="11.1580%" y="1925" width="0.0739%" height="15" fill="rgb(252,104,46)" fg:x="2248170176" fg:w="14889361"/><text x="11.4080%" y="1935.50"></text></g><g><title>node::PerIsolatePlatformData::RunForegroundTask (14,889,361 samples, 0.07%)</title><rect x="11.1580%" y="1909" width="0.0739%" height="15" fill="rgb(237,152,48)" fg:x="2248170176" fg:w="14889361"/><text x="11.4080%" y="1919.50"></text></g><g><title>v8::internal::MinorGCJob::Task::RunInternal (14,889,361 samples, 0.07%)</title><rect x="11.1580%" y="1893" width="0.0739%" height="15" fill="rgb(221,59,37)" fg:x="2248170176" fg:w="14889361"/><text x="11.4080%" y="1903.50"></text></g><g><title>v8::internal::Heap::CollectGarbage (14,889,361 samples, 0.07%)</title><rect x="11.1580%" y="1877" width="0.0739%" height="15" fill="rgb(209,202,51)" fg:x="2248170176" fg:w="14889361"/><text x="11.4080%" y="1887.50"></text></g><g><title>v8::internal::Heap::PerformGarbageCollection (14,429,324 samples, 0.07%)</title><rect x="11.1602%" y="1861" width="0.0716%" height="15" fill="rgb(228,81,30)" fg:x="2248630213" fg:w="14429324"/><text x="11.4102%" y="1871.50"></text></g><g><title>Builtins_CallApiCallback (2,246,835 samples, 0.01%)</title><rect x="11.2439%" y="1669" width="0.0112%" height="15" fill="rgb(227,42,39)" fg:x="2265492322" fg:w="2246835"/><text x="11.4939%" y="1679.50"></text></g><g><title>node::fs::Read (2,246,835 samples, 0.01%)</title><rect x="11.2439%" y="1653" width="0.0112%" height="15" fill="rgb(221,26,2)" fg:x="2265492322" fg:w="2246835"/><text x="11.4939%" y="1663.50"></text></g><g><title>node::fs::GetReqWrap (2,246,835 samples, 0.01%)</title><rect x="11.2439%" y="1637" width="0.0112%" height="15" fill="rgb(254,61,31)" fg:x="2265492322" fg:w="2246835"/><text x="11.4939%" y="1647.50"></text></g><g><title>node::fs::FSReqPromise&lt;node::AliasedBufferBase&lt;double, v8::Float64Array&gt; &gt;::New (2,246,835 samples, 0.01%)</title><rect x="11.2439%" y="1621" width="0.0112%" height="15" fill="rgb(222,173,38)" fg:x="2265492322" fg:w="2246835"/><text x="11.4939%" y="1631.50"></text></g><g><title>Builtins_AsyncFunctionAwaitResolveClosure (3,033,098 samples, 0.02%)</title><rect x="11.2439%" y="1701" width="0.0151%" height="15" fill="rgb(218,50,12)" fg:x="2265492322" fg:w="3033098"/><text x="11.4939%" y="1711.50"></text></g><g><title>[perf-50199.map] (3,033,098 samples, 0.02%)</title><rect x="11.2439%" y="1685" width="0.0151%" height="15" fill="rgb(223,88,40)" fg:x="2265492322" fg:w="3033098"/><text x="11.4939%" y="1695.50"></text></g><g><title>node::InternalCallbackScope::~InternalCallbackScope (4,520,572 samples, 0.02%)</title><rect x="11.2439%" y="1861" width="0.0224%" height="15" fill="rgb(237,54,19)" fg:x="2265492322" fg:w="4520572"/><text x="11.4939%" y="1871.50"></text></g><g><title>node::InternalCallbackScope::Close (4,520,572 samples, 0.02%)</title><rect x="11.2439%" y="1845" width="0.0224%" height="15" fill="rgb(251,129,25)" fg:x="2265492322" fg:w="4520572"/><text x="11.4939%" y="1855.50"></text></g><g><title>v8::internal::MicrotaskQueue::PerformCheckpoint (4,520,572 samples, 0.02%)</title><rect x="11.2439%" y="1829" width="0.0224%" height="15" fill="rgb(238,97,19)" fg:x="2265492322" fg:w="4520572"/><text x="11.4939%" y="1839.50"></text></g><g><title>v8::internal::MicrotaskQueue::RunMicrotasks (4,520,572 samples, 0.02%)</title><rect x="11.2439%" y="1813" width="0.0224%" height="15" fill="rgb(240,169,18)" fg:x="2265492322" fg:w="4520572"/><text x="11.4939%" y="1823.50"></text></g><g><title>v8::internal::Execution::TryRunMicrotasks (4,520,572 samples, 0.02%)</title><rect x="11.2439%" y="1797" width="0.0224%" height="15" fill="rgb(230,187,49)" fg:x="2265492322" fg:w="4520572"/><text x="11.4939%" y="1807.50"></text></g><g><title>v8::internal::(anonymous namespace)::InvokeWithTryCatch (4,520,572 samples, 0.02%)</title><rect x="11.2439%" y="1781" width="0.0224%" height="15" fill="rgb(209,44,26)" fg:x="2265492322" fg:w="4520572"/><text x="11.4939%" y="1791.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (4,520,572 samples, 0.02%)</title><rect x="11.2439%" y="1765" width="0.0224%" height="15" fill="rgb(244,0,6)" fg:x="2265492322" fg:w="4520572"/><text x="11.4939%" y="1775.50"></text></g><g><title>Builtins_JSRunMicrotasksEntry (4,520,572 samples, 0.02%)</title><rect x="11.2439%" y="1749" width="0.0224%" height="15" fill="rgb(248,18,21)" fg:x="2265492322" fg:w="4520572"/><text x="11.4939%" y="1759.50"></text></g><g><title>Builtins_RunMicrotasks (4,520,572 samples, 0.02%)</title><rect x="11.2439%" y="1733" width="0.0224%" height="15" fill="rgb(245,180,19)" fg:x="2265492322" fg:w="4520572"/><text x="11.4939%" y="1743.50"></text></g><g><title>Builtins_PromiseFulfillReactionJob (4,520,572 samples, 0.02%)</title><rect x="11.2439%" y="1717" width="0.0224%" height="15" fill="rgb(252,118,36)" fg:x="2265492322" fg:w="4520572"/><text x="11.4939%" y="1727.50"></text></g><g><title>node::fs::AfterInteger (6,033,256 samples, 0.03%)</title><rect x="11.2400%" y="1893" width="0.0299%" height="15" fill="rgb(210,224,19)" fg:x="2264707722" fg:w="6033256"/><text x="11.4900%" y="1903.50"></text></g><g><title>node::fs::FSReqPromise&lt;node::AliasedBufferBase&lt;double, v8::Float64Array&gt; &gt;::Resolve (5,248,656 samples, 0.03%)</title><rect x="11.2439%" y="1877" width="0.0260%" height="15" fill="rgb(218,30,24)" fg:x="2265492322" fg:w="5248656"/><text x="11.4939%" y="1887.50"></text></g><g><title>node::fs::FStat (2,222,788 samples, 0.01%)</title><rect x="11.2732%" y="1637" width="0.0110%" height="15" fill="rgb(219,75,50)" fg:x="2271392899" fg:w="2222788"/><text x="11.5232%" y="1647.50"></text></g><g><title>node::fs::FSReqPromise&lt;node::AliasedBufferBase&lt;double, v8::Float64Array&gt; &gt;::SetReturnValue (2,222,788 samples, 0.01%)</title><rect x="11.2732%" y="1621" width="0.0110%" height="15" fill="rgb(234,72,50)" fg:x="2271392899" fg:w="2222788"/><text x="11.5232%" y="1631.50"></text></g><g><title>v8::Object::Get (2,222,788 samples, 0.01%)</title><rect x="11.2732%" y="1605" width="0.0110%" height="15" fill="rgb(219,100,48)" fg:x="2271392899" fg:w="2222788"/><text x="11.5232%" y="1615.50"></text></g><g><title>v8::internal::Runtime::GetObjectProperty (2,222,788 samples, 0.01%)</title><rect x="11.2732%" y="1589" width="0.0110%" height="15" fill="rgb(253,5,41)" fg:x="2271392899" fg:w="2222788"/><text x="11.5232%" y="1599.50"></text></g><g><title>node::fs::AfterOpenFileHandle (3,588,099 samples, 0.02%)</title><rect x="11.2700%" y="1893" width="0.0178%" height="15" fill="rgb(247,181,11)" fg:x="2270740978" fg:w="3588099"/><text x="11.5200%" y="1903.50"></text></g><g><title>node::fs::FSReqPromise&lt;node::AliasedBufferBase&lt;double, v8::Float64Array&gt; &gt;::Resolve (3,588,099 samples, 0.02%)</title><rect x="11.2700%" y="1877" width="0.0178%" height="15" fill="rgb(222,223,25)" fg:x="2270740978" fg:w="3588099"/><text x="11.5200%" y="1887.50"></text></g><g><title>node::InternalCallbackScope::~InternalCallbackScope (3,588,099 samples, 0.02%)</title><rect x="11.2700%" y="1861" width="0.0178%" height="15" fill="rgb(214,198,28)" fg:x="2270740978" fg:w="3588099"/><text x="11.5200%" y="1871.50"></text></g><g><title>node::InternalCallbackScope::Close (3,588,099 samples, 0.02%)</title><rect x="11.2700%" y="1845" width="0.0178%" height="15" fill="rgb(230,46,43)" fg:x="2270740978" fg:w="3588099"/><text x="11.5200%" y="1855.50"></text></g><g><title>v8::internal::MicrotaskQueue::PerformCheckpoint (3,588,099 samples, 0.02%)</title><rect x="11.2700%" y="1829" width="0.0178%" height="15" fill="rgb(233,65,53)" fg:x="2270740978" fg:w="3588099"/><text x="11.5200%" y="1839.50"></text></g><g><title>v8::internal::MicrotaskQueue::RunMicrotasks (3,588,099 samples, 0.02%)</title><rect x="11.2700%" y="1813" width="0.0178%" height="15" fill="rgb(221,121,27)" fg:x="2270740978" fg:w="3588099"/><text x="11.5200%" y="1823.50"></text></g><g><title>v8::internal::Execution::TryRunMicrotasks (3,588,099 samples, 0.02%)</title><rect x="11.2700%" y="1797" width="0.0178%" height="15" fill="rgb(247,70,47)" fg:x="2270740978" fg:w="3588099"/><text x="11.5200%" y="1807.50"></text></g><g><title>v8::internal::(anonymous namespace)::InvokeWithTryCatch (3,588,099 samples, 0.02%)</title><rect x="11.2700%" y="1781" width="0.0178%" height="15" fill="rgb(228,85,35)" fg:x="2270740978" fg:w="3588099"/><text x="11.5200%" y="1791.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (3,588,099 samples, 0.02%)</title><rect x="11.2700%" y="1765" width="0.0178%" height="15" fill="rgb(209,50,18)" fg:x="2270740978" fg:w="3588099"/><text x="11.5200%" y="1775.50"></text></g><g><title>Builtins_JSRunMicrotasksEntry (3,588,099 samples, 0.02%)</title><rect x="11.2700%" y="1749" width="0.0178%" height="15" fill="rgb(250,19,35)" fg:x="2270740978" fg:w="3588099"/><text x="11.5200%" y="1759.50"></text></g><g><title>Builtins_RunMicrotasks (3,588,099 samples, 0.02%)</title><rect x="11.2700%" y="1733" width="0.0178%" height="15" fill="rgb(253,107,29)" fg:x="2270740978" fg:w="3588099"/><text x="11.5200%" y="1743.50"></text></g><g><title>Builtins_PromiseFulfillReactionJob (3,588,099 samples, 0.02%)</title><rect x="11.2700%" y="1717" width="0.0178%" height="15" fill="rgb(252,179,29)" fg:x="2270740978" fg:w="3588099"/><text x="11.5200%" y="1727.50"></text></g><g><title>Builtins_AsyncFunctionAwaitResolveClosure (3,588,099 samples, 0.02%)</title><rect x="11.2700%" y="1701" width="0.0178%" height="15" fill="rgb(238,194,6)" fg:x="2270740978" fg:w="3588099"/><text x="11.5200%" y="1711.50"></text></g><g><title>[perf-50199.map] (3,263,826 samples, 0.02%)</title><rect x="11.2716%" y="1685" width="0.0162%" height="15" fill="rgb(238,164,29)" fg:x="2271065251" fg:w="3263826"/><text x="11.5216%" y="1695.50"></text></g><g><title>[perf-50199.map] (2,936,178 samples, 0.01%)</title><rect x="11.2732%" y="1669" width="0.0146%" height="15" fill="rgb(224,25,9)" fg:x="2271392899" fg:w="2936178"/><text x="11.5232%" y="1679.50"></text></g><g><title>Builtins_CallApiCallback (2,936,178 samples, 0.01%)</title><rect x="11.2732%" y="1653" width="0.0146%" height="15" fill="rgb(244,153,23)" fg:x="2271392899" fg:w="2936178"/><text x="11.5232%" y="1663.50"></text></g><g><title>node::fs::Read (3,027,394 samples, 0.02%)</title><rect x="11.3742%" y="1653" width="0.0150%" height="15" fill="rgb(212,203,14)" fg:x="2291741579" fg:w="3027394"/><text x="11.6242%" y="1663.50"></text></g><g><title>Builtins_CallApiCallback (6,010,642 samples, 0.03%)</title><rect x="11.3742%" y="1669" width="0.0298%" height="15" fill="rgb(220,164,20)" fg:x="2291741579" fg:w="6010642"/><text x="11.6242%" y="1679.50"></text></g><g><title>node::fs::Stat (2,983,248 samples, 0.01%)</title><rect x="11.3892%" y="1653" width="0.0148%" height="15" fill="rgb(222,203,48)" fg:x="2294768973" fg:w="2983248"/><text x="11.6392%" y="1663.50"></text></g><g><title>node::fs::GetReqWrap (2,983,248 samples, 0.01%)</title><rect x="11.3892%" y="1637" width="0.0148%" height="15" fill="rgb(215,159,22)" fg:x="2294768973" fg:w="2983248"/><text x="11.6392%" y="1647.50"></text></g><g><title>node::fs::FSReqPromise&lt;node::AliasedBufferBase&lt;double, v8::Float64Array&gt; &gt;::New (2,983,248 samples, 0.01%)</title><rect x="11.3892%" y="1621" width="0.0148%" height="15" fill="rgb(216,183,47)" fg:x="2294768973" fg:w="2983248"/><text x="11.6392%" y="1631.50"></text></g><g><title>v8::internal::Object::SetProperty (2,852,425 samples, 0.01%)</title><rect x="11.4935%" y="1557" width="0.0142%" height="15" fill="rgb(229,195,25)" fg:x="2315768650" fg:w="2852425"/><text x="11.7435%" y="1567.50"></text></g><g><title>v8::internal::Object::AddDataProperty (2,852,425 samples, 0.01%)</title><rect x="11.4935%" y="1541" width="0.0142%" height="15" fill="rgb(224,132,51)" fg:x="2315768650" fg:w="2852425"/><text x="11.7435%" y="1551.50"></text></g><g><title>v8::internal::Object::TransitionAndWriteDataProperty (2,852,425 samples, 0.01%)</title><rect x="11.4935%" y="1525" width="0.0142%" height="15" fill="rgb(240,63,7)" fg:x="2315768650" fg:w="2852425"/><text x="11.7435%" y="1535.50"></text></g><g><title>v8::internal::LookupIterator::ApplyTransitionToDataProperty (2,852,425 samples, 0.01%)</title><rect x="11.4935%" y="1509" width="0.0142%" height="15" fill="rgb(249,182,41)" fg:x="2315768650" fg:w="2852425"/><text x="11.7435%" y="1519.50"></text></g><g><title>v8::internal::JSObject::MigrateToMap (2,852,425 samples, 0.01%)</title><rect x="11.4935%" y="1493" width="0.0142%" height="15" fill="rgb(243,47,26)" fg:x="2315768650" fg:w="2852425"/><text x="11.7435%" y="1503.50"></text></g><g><title>v8::Object::Set (4,119,678 samples, 0.02%)</title><rect x="11.4902%" y="1589" width="0.0204%" height="15" fill="rgb(233,48,2)" fg:x="2315109024" fg:w="4119678"/><text x="11.7402%" y="1599.50"></text></g><g><title>v8::internal::Runtime::SetObjectProperty (3,460,052 samples, 0.02%)</title><rect x="11.4935%" y="1573" width="0.0172%" height="15" fill="rgb(244,165,34)" fg:x="2315768650" fg:w="3460052"/><text x="11.7435%" y="1583.50"></text></g><g><title>node::fs::GetReqWrap (9,022,860 samples, 0.04%)</title><rect x="11.4763%" y="1621" width="0.0448%" height="15" fill="rgb(207,89,7)" fg:x="2312304084" fg:w="9022860"/><text x="11.7263%" y="1631.50"></text></g><g><title>node::fs::FSReqPromise&lt;node::AliasedBufferBase&lt;double, v8::Float64Array&gt; &gt;::New (8,390,040 samples, 0.04%)</title><rect x="11.4794%" y="1605" width="0.0416%" height="15" fill="rgb(244,117,36)" fg:x="2312936904" fg:w="8390040"/><text x="11.7294%" y="1615.50"></text></g><g><title>Builtins_CallApiCallback (14,604,509 samples, 0.07%)</title><rect x="11.4590%" y="1653" width="0.0725%" height="15" fill="rgb(226,144,34)" fg:x="2308835622" fg:w="14604509"/><text x="11.7090%" y="1663.50"></text></g><g><title>node::fs::ReadLink (12,576,121 samples, 0.06%)</title><rect x="11.4691%" y="1637" width="0.0624%" height="15" fill="rgb(213,23,19)" fg:x="2310864010" fg:w="12576121"/><text x="11.7191%" y="1647.50"></text></g><g><title>uv_fs_readlink (2,113,187 samples, 0.01%)</title><rect x="11.5210%" y="1621" width="0.0105%" height="15" fill="rgb(217,75,12)" fg:x="2321326944" fg:w="2113187"/><text x="11.7710%" y="1631.50"></text></g><g><title>Builtins_RegExpPrototypeTestFast (2,735,525 samples, 0.01%)</title><rect x="11.5534%" y="1653" width="0.0136%" height="15" fill="rgb(224,159,17)" fg:x="2327836609" fg:w="2735525"/><text x="11.8034%" y="1663.50"></text></g><g><title>Builtins_StringAdd_CheckNone (2,259,096 samples, 0.01%)</title><rect x="11.5669%" y="1653" width="0.0112%" height="15" fill="rgb(217,118,1)" fg:x="2330572134" fg:w="2259096"/><text x="11.8169%" y="1663.50"></text></g><g><title>[perf-50199.map] (8,402,357 samples, 0.04%)</title><rect x="11.5817%" y="1653" width="0.0417%" height="15" fill="rgb(232,180,48)" fg:x="2333539516" fg:w="8402357"/><text x="11.8317%" y="1663.50"></text></g><g><title>[perf-50199.map] (3,265,010 samples, 0.02%)</title><rect x="11.6072%" y="1637" width="0.0162%" height="15" fill="rgb(230,27,33)" fg:x="2338676863" fg:w="3265010"/><text x="11.8572%" y="1647.50"></text></g><g><title>[perf-50199.map] (3,265,010 samples, 0.02%)</title><rect x="11.6072%" y="1621" width="0.0162%" height="15" fill="rgb(205,31,21)" fg:x="2338676863" fg:w="3265010"/><text x="11.8572%" y="1631.50"></text></g><g><title>[perf-50199.map] (2,865,337 samples, 0.01%)</title><rect x="11.6091%" y="1605" width="0.0142%" height="15" fill="rgb(253,59,4)" fg:x="2339076536" fg:w="2865337"/><text x="11.8591%" y="1615.50"></text></g><g><title>[perf-50199.map] (41,257,868 samples, 0.20%)</title><rect x="11.4224%" y="1669" width="0.2048%" height="15" fill="rgb(224,201,9)" fg:x="2301447065" fg:w="41257868"/><text x="11.6724%" y="1679.50"></text></g><g><title>Builtins_AsyncFunctionAwaitResolveClosure (56,424,428 samples, 0.28%)</title><rect x="11.3485%" y="1701" width="0.2800%" height="15" fill="rgb(229,206,30)" fg:x="2286562621" fg:w="56424428"/><text x="11.5985%" y="1711.50"></text></g><g><title>[perf-50199.map] (54,799,061 samples, 0.27%)</title><rect x="11.3566%" y="1685" width="0.2720%" height="15" fill="rgb(212,67,47)" fg:x="2288187988" fg:w="54799061"/><text x="11.6066%" y="1695.50"></text></g><g><title>Builtins_ResolvePromise (3,451,520 samples, 0.02%)</title><rect x="11.6285%" y="1701" width="0.0171%" height="15" fill="rgb(211,96,50)" fg:x="2342987049" fg:w="3451520"/><text x="11.8785%" y="1711.50"></text></g><g><title>Builtins_GetProperty (2,798,052 samples, 0.01%)</title><rect x="11.6318%" y="1685" width="0.0139%" height="15" fill="rgb(252,114,18)" fg:x="2343640517" fg:w="2798052"/><text x="11.8818%" y="1695.50"></text></g><g><title>Builtins_PromiseFulfillReactionJob (61,596,300 samples, 0.31%)</title><rect x="11.3450%" y="1717" width="0.3057%" height="15" fill="rgb(223,58,37)" fg:x="2285850846" fg:w="61596300"/><text x="11.5950%" y="1727.50"></text></g><g><title>node::InternalCallbackScope::~InternalCallbackScope (65,984,274 samples, 0.33%)</title><rect x="11.3265%" y="1861" width="0.3275%" height="15" fill="rgb(237,70,4)" fg:x="2282133757" fg:w="65984274"/><text x="11.5765%" y="1871.50"></text></g><g><title>node::InternalCallbackScope::Close (65,264,389 samples, 0.32%)</title><rect x="11.3301%" y="1845" width="0.3239%" height="15" fill="rgb(244,85,46)" fg:x="2282853642" fg:w="65264389"/><text x="11.5801%" y="1855.50"></text></g><g><title>v8::internal::MicrotaskQueue::PerformCheckpoint (63,825,462 samples, 0.32%)</title><rect x="11.3372%" y="1829" width="0.3168%" height="15" fill="rgb(223,39,52)" fg:x="2284292569" fg:w="63825462"/><text x="11.5872%" y="1839.50"></text></g><g><title>v8::internal::MicrotaskQueue::RunMicrotasks (63,825,462 samples, 0.32%)</title><rect x="11.3372%" y="1813" width="0.3168%" height="15" fill="rgb(218,200,14)" fg:x="2284292569" fg:w="63825462"/><text x="11.5872%" y="1823.50"></text></g><g><title>v8::internal::Execution::TryRunMicrotasks (63,825,462 samples, 0.32%)</title><rect x="11.3372%" y="1797" width="0.3168%" height="15" fill="rgb(208,171,16)" fg:x="2284292569" fg:w="63825462"/><text x="11.5872%" y="1807.50"></text></g><g><title>v8::internal::(anonymous namespace)::InvokeWithTryCatch (63,035,128 samples, 0.31%)</title><rect x="11.3412%" y="1781" width="0.3129%" height="15" fill="rgb(234,200,18)" fg:x="2285082903" fg:w="63035128"/><text x="11.5912%" y="1791.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (63,035,128 samples, 0.31%)</title><rect x="11.3412%" y="1765" width="0.3129%" height="15" fill="rgb(228,45,11)" fg:x="2285082903" fg:w="63035128"/><text x="11.5912%" y="1775.50"></text></g><g><title>Builtins_JSRunMicrotasksEntry (62,267,185 samples, 0.31%)</title><rect x="11.3450%" y="1749" width="0.3090%" height="15" fill="rgb(237,182,11)" fg:x="2285850846" fg:w="62267185"/><text x="11.5950%" y="1759.50"></text></g><g><title>Builtins_RunMicrotasks (62,267,185 samples, 0.31%)</title><rect x="11.3450%" y="1733" width="0.3090%" height="15" fill="rgb(241,175,49)" fg:x="2285850846" fg:w="62267185"/><text x="11.5950%" y="1743.50"></text></g><g><title>v8::Object::Get (2,042,934 samples, 0.01%)</title><rect x="11.6540%" y="1861" width="0.0101%" height="15" fill="rgb(247,38,35)" fg:x="2348118031" fg:w="2042934"/><text x="11.9040%" y="1871.50"></text></g><g><title>v8::Promise::Resolver::Resolve (2,968,923 samples, 0.01%)</title><rect x="11.6641%" y="1861" width="0.0147%" height="15" fill="rgb(228,39,49)" fg:x="2350160965" fg:w="2968923"/><text x="11.9141%" y="1871.50"></text></g><g><title>v8::internal::JSPromise::Resolve (2,968,923 samples, 0.01%)</title><rect x="11.6641%" y="1845" width="0.0147%" height="15" fill="rgb(226,101,26)" fg:x="2350160965" fg:w="2968923"/><text x="11.9141%" y="1855.50"></text></g><g><title>node::fs::FSReqPromise&lt;node::AliasedBufferBase&lt;double, v8::Float64Array&gt; &gt;::ResolveStat (73,897,891 samples, 0.37%)</title><rect x="11.3156%" y="1877" width="0.3668%" height="15" fill="rgb(206,141,19)" fg:x="2279924771" fg:w="73897891"/><text x="11.5656%" y="1887.50"></text></g><g><title>node::fs::AfterStat (79,418,627 samples, 0.39%)</title><rect x="11.2919%" y="1893" width="0.3942%" height="15" fill="rgb(211,200,13)" fg:x="2275148098" fg:w="79418627"/><text x="11.5419%" y="1903.50"></text></g><g><title>v8::Exception::Error (5,681,241 samples, 0.03%)</title><rect x="11.7027%" y="1845" width="0.0282%" height="15" fill="rgb(241,121,6)" fg:x="2357929936" fg:w="5681241"/><text x="11.9527%" y="1855.50"></text></g><g><title>v8::internal::Factory::NewError (5,681,241 samples, 0.03%)</title><rect x="11.7027%" y="1829" width="0.0282%" height="15" fill="rgb(234,221,29)" fg:x="2357929936" fg:w="5681241"/><text x="11.9527%" y="1839.50"></text></g><g><title>v8::internal::ErrorUtils::Construct (5,681,241 samples, 0.03%)</title><rect x="11.7027%" y="1813" width="0.0282%" height="15" fill="rgb(229,136,5)" fg:x="2357929936" fg:w="5681241"/><text x="11.9527%" y="1823.50"></text></g><g><title>v8::Object::Set (3,211,607 samples, 0.02%)</title><rect x="11.7309%" y="1845" width="0.0159%" height="15" fill="rgb(238,36,11)" fg:x="2363611177" fg:w="3211607"/><text x="11.9809%" y="1855.50"></text></g><g><title>v8::internal::Runtime::SetObjectProperty (3,211,607 samples, 0.02%)</title><rect x="11.7309%" y="1829" width="0.0159%" height="15" fill="rgb(251,55,41)" fg:x="2363611177" fg:w="3211607"/><text x="11.9809%" y="1839.50"></text></g><g><title>v8::internal::Object::SetProperty (3,211,607 samples, 0.02%)</title><rect x="11.7309%" y="1813" width="0.0159%" height="15" fill="rgb(242,34,40)" fg:x="2363611177" fg:w="3211607"/><text x="11.9809%" y="1823.50"></text></g><g><title>v8::internal::Object::AddDataProperty (3,211,607 samples, 0.02%)</title><rect x="11.7309%" y="1797" width="0.0159%" height="15" fill="rgb(215,42,17)" fg:x="2363611177" fg:w="3211607"/><text x="11.9809%" y="1807.50"></text></g><g><title>v8::internal::Object::TransitionAndWriteDataProperty (3,211,607 samples, 0.02%)</title><rect x="11.7309%" y="1781" width="0.0159%" height="15" fill="rgb(207,44,46)" fg:x="2363611177" fg:w="3211607"/><text x="11.9809%" y="1791.50"></text></g><g><title>v8::String::NewFromUtf8 (2,223,821 samples, 0.01%)</title><rect x="11.7575%" y="1845" width="0.0110%" height="15" fill="rgb(211,206,28)" fg:x="2368966203" fg:w="2223821"/><text x="12.0075%" y="1855.50"></text></g><g><title>v8::internal::Factory::NewStringFromUtf8 (2,223,821 samples, 0.01%)</title><rect x="11.7575%" y="1829" width="0.0110%" height="15" fill="rgb(237,167,16)" fg:x="2368966203" fg:w="2223821"/><text x="12.0075%" y="1839.50"></text></g><g><title>node::UVException (14,671,581 samples, 0.07%)</title><rect x="11.6993%" y="1861" width="0.0728%" height="15" fill="rgb(233,66,6)" fg:x="2357236627" fg:w="14671581"/><text x="11.9493%" y="1871.50"></text></g><g><title>v8::internal::Execution::Call (2,819,663 samples, 0.01%)</title><rect x="11.7850%" y="1797" width="0.0140%" height="15" fill="rgb(246,123,29)" fg:x="2374518722" fg:w="2819663"/><text x="12.0350%" y="1807.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (2,819,663 samples, 0.01%)</title><rect x="11.7850%" y="1781" width="0.0140%" height="15" fill="rgb(209,62,40)" fg:x="2374518722" fg:w="2819663"/><text x="12.0350%" y="1791.50"></text></g><g><title>v8::Function::Call (4,179,047 samples, 0.02%)</title><rect x="11.7817%" y="1813" width="0.0207%" height="15" fill="rgb(218,4,25)" fg:x="2373840628" fg:w="4179047"/><text x="12.0317%" y="1823.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_NoBuiltinExit (2,219,337 samples, 0.01%)</title><rect x="11.8485%" y="1653" width="0.0110%" height="15" fill="rgb(253,91,49)" fg:x="2387309812" fg:w="2219337"/><text x="12.0985%" y="1663.50"></text></g><g><title>v8::internal::Runtime_UnwindAndFindExceptionHandler (2,219,337 samples, 0.01%)</title><rect x="11.8485%" y="1637" width="0.0110%" height="15" fill="rgb(228,155,29)" fg:x="2387309812" fg:w="2219337"/><text x="12.0985%" y="1647.50"></text></g><g><title>v8::internal::Isolate::UnwindAndFindHandler (2,219,337 samples, 0.01%)</title><rect x="11.8485%" y="1621" width="0.0110%" height="15" fill="rgb(243,57,37)" fg:x="2387309812" fg:w="2219337"/><text x="12.0985%" y="1631.50"></text></g><g><title>v8::ArrayBuffer::New (3,249,477 samples, 0.02%)</title><rect x="11.8658%" y="1573" width="0.0161%" height="15" fill="rgb(244,167,17)" fg:x="2390789695" fg:w="3249477"/><text x="12.1158%" y="1583.50"></text></g><g><title>v8::internal::Factory::NewJSArrayBufferAndBackingStore (3,249,477 samples, 0.02%)</title><rect x="11.8658%" y="1557" width="0.0161%" height="15" fill="rgb(207,181,38)" fg:x="2390789695" fg:w="3249477"/><text x="12.1158%" y="1567.50"></text></g><g><title>node::AliasedBufferBase&lt;double, v8::Float64Array&gt;::AliasedBufferBase (6,109,135 samples, 0.03%)</title><rect x="11.8658%" y="1589" width="0.0303%" height="15" fill="rgb(211,8,23)" fg:x="2390789695" fg:w="6109135"/><text x="12.1158%" y="1599.50"></text></g><g><title>v8::Float64Array::New (2,859,658 samples, 0.01%)</title><rect x="11.8819%" y="1573" width="0.0142%" height="15" fill="rgb(235,11,44)" fg:x="2394039172" fg:w="2859658"/><text x="12.1319%" y="1583.50"></text></g><g><title>node::AsyncWrap::AsyncWrap (2,867,614 samples, 0.01%)</title><rect x="11.8961%" y="1589" width="0.0142%" height="15" fill="rgb(248,18,52)" fg:x="2396898830" fg:w="2867614"/><text x="12.1461%" y="1599.50"></text></g><g><title>node::fs::FSReqPromise&lt;node::AliasedBufferBase&lt;double, v8::Float64Array&gt; &gt;::New (11,875,453 samples, 0.06%)</title><rect x="11.8658%" y="1605" width="0.0589%" height="15" fill="rgb(208,4,7)" fg:x="2390789695" fg:w="11875453"/><text x="12.1158%" y="1615.50"></text></g><g><title>node::fs::GetReqWrap (12,629,842 samples, 0.06%)</title><rect x="11.8658%" y="1621" width="0.0627%" height="15" fill="rgb(240,17,39)" fg:x="2390789695" fg:w="12629842"/><text x="12.1158%" y="1631.50"></text></g><g><title>uv_fs_stat (3,748,902 samples, 0.02%)</title><rect x="11.9285%" y="1621" width="0.0186%" height="15" fill="rgb(207,170,3)" fg:x="2403419537" fg:w="3748902"/><text x="12.1785%" y="1631.50"></text></g><g><title>Builtins_CallApiCallback (20,321,000 samples, 0.10%)</title><rect x="11.8595%" y="1653" width="0.1009%" height="15" fill="rgb(236,100,52)" fg:x="2389529149" fg:w="20321000"/><text x="12.1095%" y="1663.50"></text></g><g><title>node::fs::Stat (20,321,000 samples, 0.10%)</title><rect x="11.8595%" y="1637" width="0.1009%" height="15" fill="rgb(246,78,51)" fg:x="2389529149" fg:w="20321000"/><text x="12.1095%" y="1647.50"></text></g><g><title>Builtins_AsyncFunctionAwaitRejectClosure (36,346,360 samples, 0.18%)</title><rect x="11.8225%" y="1685" width="0.1804%" height="15" fill="rgb(211,17,15)" fg:x="2382070544" fg:w="36346360"/><text x="12.0725%" y="1695.50"></text></g><g><title>[perf-50199.map] (34,192,040 samples, 0.17%)</title><rect x="11.8332%" y="1669" width="0.1697%" height="15" fill="rgb(209,59,46)" fg:x="2384224864" fg:w="34192040"/><text x="12.0832%" y="1679.50"></text></g><g><title>[perf-50199.map] (2,762,633 samples, 0.01%)</title><rect x="11.9892%" y="1653" width="0.0137%" height="15" fill="rgb(210,92,25)" fg:x="2415654271" fg:w="2762633"/><text x="12.2392%" y="1663.50"></text></g><g><title>v8::internal::(anonymous namespace)::CaptureAsyncStackTrace (2,842,928 samples, 0.01%)</title><rect x="12.0105%" y="1605" width="0.0141%" height="15" fill="rgb(238,174,52)" fg:x="2419946667" fg:w="2842928"/><text x="12.2605%" y="1615.50"></text></g><g><title>v8::internal::BuiltinExitFrame::Summarize (2,163,961 samples, 0.01%)</title><rect x="12.0246%" y="1589" width="0.0107%" height="15" fill="rgb(230,73,7)" fg:x="2422789595" fg:w="2163961"/><text x="12.2746%" y="1599.50"></text></g><g><title>v8::internal::(anonymous namespace)::CaptureSimpleStackTrace (9,862,090 samples, 0.05%)</title><rect x="12.0068%" y="1621" width="0.0489%" height="15" fill="rgb(243,124,40)" fg:x="2419206546" fg:w="9862090"/><text x="12.2568%" y="1631.50"></text></g><g><title>void v8::internal::(anonymous namespace)::VisitStack&lt;v8::internal::(anonymous namespace)::CallSiteBuilder&gt; (6,279,041 samples, 0.03%)</title><rect x="12.0246%" y="1605" width="0.0312%" height="15" fill="rgb(244,170,11)" fg:x="2422789595" fg:w="6279041"/><text x="12.2746%" y="1615.50"></text></g><g><title>v8::internal::Isolate::CaptureAndSetErrorStack (10,627,260 samples, 0.05%)</title><rect x="12.0068%" y="1637" width="0.0527%" height="15" fill="rgb(207,114,54)" fg:x="2419206546" fg:w="10627260"/><text x="12.2568%" y="1647.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_BuiltinExit (16,638,928 samples, 0.08%)</title><rect x="12.0029%" y="1669" width="0.0826%" height="15" fill="rgb(205,42,20)" fg:x="2418416904" fg:w="16638928"/><text x="12.2529%" y="1679.50"></text></g><g><title>v8::internal::Builtin_ErrorCaptureStackTrace (16,638,928 samples, 0.08%)</title><rect x="12.0029%" y="1653" width="0.0826%" height="15" fill="rgb(230,30,28)" fg:x="2418416904" fg:w="16638928"/><text x="12.2529%" y="1663.50"></text></g><g><title>v8::internal::JSObject::SetAccessor (5,222,026 samples, 0.03%)</title><rect x="12.0596%" y="1637" width="0.0259%" height="15" fill="rgb(205,73,54)" fg:x="2429833806" fg:w="5222026"/><text x="12.3096%" y="1647.50"></text></g><g><title>v8::internal::LookupIterator::TransitionToAccessorPair (3,869,716 samples, 0.02%)</title><rect x="12.0663%" y="1621" width="0.0192%" height="15" fill="rgb(254,227,23)" fg:x="2431186116" fg:w="3869716"/><text x="12.3163%" y="1631.50"></text></g><g><title>node::PromiseRejectCallback (5,060,164 samples, 0.03%)</title><rect x="12.0855%" y="1605" width="0.0251%" height="15" fill="rgb(228,202,34)" fg:x="2435055832" fg:w="5060164"/><text x="12.3355%" y="1615.50"></text></g><g><title>v8::Function::Call (3,646,575 samples, 0.02%)</title><rect x="12.0925%" y="1589" width="0.0181%" height="15" fill="rgb(222,225,37)" fg:x="2436469421" fg:w="3646575"/><text x="12.3425%" y="1599.50"></text></g><g><title>v8::internal::Execution::Call (2,950,278 samples, 0.01%)</title><rect x="12.0960%" y="1573" width="0.0146%" height="15" fill="rgb(221,14,54)" fg:x="2437165718" fg:w="2950278"/><text x="12.3460%" y="1583.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (2,950,278 samples, 0.01%)</title><rect x="12.0960%" y="1557" width="0.0146%" height="15" fill="rgb(254,102,2)" fg:x="2437165718" fg:w="2950278"/><text x="12.3460%" y="1567.50"></text></g><g><title>Builtins_PromiseRejectReactionJob (59,427,349 samples, 0.29%)</title><rect x="11.8193%" y="1701" width="0.2949%" height="15" fill="rgb(232,104,17)" fg:x="2381420424" fg:w="59427349"/><text x="12.0693%" y="1711.50"></text></g><g><title>[perf-50199.map] (22,430,869 samples, 0.11%)</title><rect x="12.0029%" y="1685" width="0.1113%" height="15" fill="rgb(250,220,14)" fg:x="2418416904" fg:w="22430869"/><text x="12.2529%" y="1695.50"></text></g><g><title>Builtins_PromiseReject (5,791,941 samples, 0.03%)</title><rect x="12.0855%" y="1669" width="0.0287%" height="15" fill="rgb(241,158,9)" fg:x="2435055832" fg:w="5791941"/><text x="12.3355%" y="1679.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_NoBuiltinExit (5,791,941 samples, 0.03%)</title><rect x="12.0855%" y="1653" width="0.0287%" height="15" fill="rgb(246,9,43)" fg:x="2435055832" fg:w="5791941"/><text x="12.3355%" y="1663.50"></text></g><g><title>v8::internal::Runtime_PromiseRejectEventFromStack (5,791,941 samples, 0.03%)</title><rect x="12.0855%" y="1637" width="0.0287%" height="15" fill="rgb(206,73,33)" fg:x="2435055832" fg:w="5791941"/><text x="12.3355%" y="1647.50"></text></g><g><title>v8::internal::Isolate::ReportPromiseReject (5,791,941 samples, 0.03%)</title><rect x="12.0855%" y="1621" width="0.0287%" height="15" fill="rgb(222,79,8)" fg:x="2435055832" fg:w="5791941"/><text x="12.3355%" y="1631.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (63,557,467 samples, 0.32%)</title><rect x="11.8090%" y="1749" width="0.3154%" height="15" fill="rgb(234,8,54)" fg:x="2379352887" fg:w="63557467"/><text x="12.0590%" y="1759.50"></text></g><g><title>Builtins_JSRunMicrotasksEntry (62,207,121 samples, 0.31%)</title><rect x="11.8157%" y="1733" width="0.3087%" height="15" fill="rgb(209,134,38)" fg:x="2380703233" fg:w="62207121"/><text x="12.0657%" y="1743.50"></text></g><g><title>Builtins_RunMicrotasks (62,207,121 samples, 0.31%)</title><rect x="11.8157%" y="1717" width="0.3087%" height="15" fill="rgb(230,127,29)" fg:x="2380703233" fg:w="62207121"/><text x="12.0657%" y="1727.50"></text></g><g><title>Builtins_PromiseResolveThenableJob (2,062,581 samples, 0.01%)</title><rect x="12.1142%" y="1701" width="0.0102%" height="15" fill="rgb(242,44,41)" fg:x="2440847773" fg:w="2062581"/><text x="12.3642%" y="1711.50"></text></g><g><title>Builtins_PerformPromiseThen (2,062,581 samples, 0.01%)</title><rect x="12.1142%" y="1685" width="0.0102%" height="15" fill="rgb(222,56,43)" fg:x="2440847773" fg:w="2062581"/><text x="12.3642%" y="1695.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_NoBuiltinExit (2,062,581 samples, 0.01%)</title><rect x="12.1142%" y="1669" width="0.0102%" height="15" fill="rgb(238,39,47)" fg:x="2440847773" fg:w="2062581"/><text x="12.3642%" y="1679.50"></text></g><g><title>v8::internal::Runtime_PromiseRevokeReject (2,062,581 samples, 0.01%)</title><rect x="12.1142%" y="1653" width="0.0102%" height="15" fill="rgb(226,79,43)" fg:x="2440847773" fg:w="2062581"/><text x="12.3642%" y="1663.50"></text></g><g><title>v8::internal::Isolate::ReportPromiseReject (2,062,581 samples, 0.01%)</title><rect x="12.1142%" y="1637" width="0.0102%" height="15" fill="rgb(242,105,53)" fg:x="2440847773" fg:w="2062581"/><text x="12.3642%" y="1647.50"></text></g><g><title>node::PromiseRejectCallback (2,062,581 samples, 0.01%)</title><rect x="12.1142%" y="1621" width="0.0102%" height="15" fill="rgb(251,132,46)" fg:x="2440847773" fg:w="2062581"/><text x="12.3642%" y="1631.50"></text></g><g><title>node::InternalCallbackScope::Close (70,960,643 samples, 0.35%)</title><rect x="11.7757%" y="1829" width="0.3522%" height="15" fill="rgb(231,77,14)" fg:x="2372640261" fg:w="70960643"/><text x="12.0257%" y="1839.50"></text></g><g><title>v8::internal::MicrotaskQueue::PerformCheckpoint (64,839,789 samples, 0.32%)</title><rect x="11.8061%" y="1813" width="0.3218%" height="15" fill="rgb(240,135,9)" fg:x="2378761115" fg:w="64839789"/><text x="12.0561%" y="1823.50"></text></g><g><title>v8::internal::MicrotaskQueue::RunMicrotasks (64,839,789 samples, 0.32%)</title><rect x="11.8061%" y="1797" width="0.3218%" height="15" fill="rgb(248,109,14)" fg:x="2378761115" fg:w="64839789"/><text x="12.0561%" y="1807.50"></text></g><g><title>v8::internal::Execution::TryRunMicrotasks (64,839,789 samples, 0.32%)</title><rect x="11.8061%" y="1781" width="0.3218%" height="15" fill="rgb(227,146,52)" fg:x="2378761115" fg:w="64839789"/><text x="12.0561%" y="1791.50"></text></g><g><title>v8::internal::(anonymous namespace)::InvokeWithTryCatch (64,248,017 samples, 0.32%)</title><rect x="11.8090%" y="1765" width="0.3189%" height="15" fill="rgb(232,54,3)" fg:x="2379352887" fg:w="64248017"/><text x="12.0590%" y="1775.50"></text></g><g><title>node::InternalCallbackScope::~InternalCallbackScope (71,752,468 samples, 0.36%)</title><rect x="11.7757%" y="1845" width="0.3561%" height="15" fill="rgb(229,201,43)" fg:x="2372640261" fg:w="71752468"/><text x="12.0257%" y="1855.50"></text></g><g><title>node::fs::FSReqPromise&lt;node::AliasedBufferBase&lt;double, v8::Float64Array&gt; &gt;::Reject (75,849,682 samples, 0.38%)</title><rect x="11.7721%" y="1861" width="0.3765%" height="15" fill="rgb(252,161,33)" fg:x="2371908208" fg:w="75849682"/><text x="12.0221%" y="1871.50"></text></g><g><title>v8::Promise::Resolver::Reject (2,723,296 samples, 0.01%)</title><rect x="12.1350%" y="1845" width="0.0135%" height="15" fill="rgb(226,146,40)" fg:x="2445034594" fg:w="2723296"/><text x="12.3850%" y="1855.50"></text></g><g><title>node::fs::FSReqAfterScope::Reject (93,820,085 samples, 0.47%)</title><rect x="11.6896%" y="1877" width="0.4656%" height="15" fill="rgb(219,47,25)" fg:x="2355293606" fg:w="93820085"/><text x="11.9396%" y="1887.50"></text></g><g><title>node::fs::FSReqAfterScope::~FSReqAfterScope (3,608,493 samples, 0.02%)</title><rect x="12.1553%" y="1877" width="0.0179%" height="15" fill="rgb(250,135,13)" fg:x="2449113691" fg:w="3608493"/><text x="12.4053%" y="1887.50"></text></g><g><title>v8::internal::Runtime_KeyedStoreIC_Slow (2,125,998 samples, 0.01%)</title><rect x="12.1802%" y="1637" width="0.0106%" height="15" fill="rgb(219,229,18)" fg:x="2454145538" fg:w="2125998"/><text x="12.4302%" y="1647.50"></text></g><g><title>v8::internal::Runtime::SetObjectProperty (2,125,998 samples, 0.01%)</title><rect x="12.1802%" y="1621" width="0.0106%" height="15" fill="rgb(217,152,27)" fg:x="2454145538" fg:w="2125998"/><text x="12.4302%" y="1631.50"></text></g><g><title>v8::internal::Object::SetProperty (2,125,998 samples, 0.01%)</title><rect x="12.1802%" y="1605" width="0.0106%" height="15" fill="rgb(225,71,47)" fg:x="2454145538" fg:w="2125998"/><text x="12.4302%" y="1615.50"></text></g><g><title>v8::internal::Object::AddDataProperty (2,125,998 samples, 0.01%)</title><rect x="12.1802%" y="1589" width="0.0106%" height="15" fill="rgb(220,139,14)" fg:x="2454145538" fg:w="2125998"/><text x="12.4302%" y="1599.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_NoBuiltinExit (2,736,499 samples, 0.01%)</title><rect x="12.1802%" y="1653" width="0.0136%" height="15" fill="rgb(247,54,32)" fg:x="2454145538" fg:w="2736499"/><text x="12.4302%" y="1663.50"></text></g><g><title>node::fs::GetReqWrap (2,207,594 samples, 0.01%)</title><rect x="12.1938%" y="1605" width="0.0110%" height="15" fill="rgb(252,131,39)" fg:x="2456882037" fg:w="2207594"/><text x="12.4438%" y="1615.50"></text></g><g><title>node::fs::FSReqPromise&lt;node::AliasedBufferBase&lt;double, v8::Float64Array&gt; &gt;::New (2,207,594 samples, 0.01%)</title><rect x="12.1938%" y="1589" width="0.0110%" height="15" fill="rgb(210,108,39)" fg:x="2456882037" fg:w="2207594"/><text x="12.4438%" y="1599.50"></text></g><g><title>node::AliasedBufferBase&lt;double, v8::Float64Array&gt;::AliasedBufferBase (2,207,594 samples, 0.01%)</title><rect x="12.1938%" y="1573" width="0.0110%" height="15" fill="rgb(205,23,29)" fg:x="2456882037" fg:w="2207594"/><text x="12.4438%" y="1583.50"></text></g><g><title>Builtins_CallApiCallback (3,609,316 samples, 0.02%)</title><rect x="12.1938%" y="1637" width="0.0179%" height="15" fill="rgb(246,139,46)" fg:x="2456882037" fg:w="3609316"/><text x="12.4438%" y="1647.50"></text></g><g><title>node::fs::OpenFileHandle (3,609,316 samples, 0.02%)</title><rect x="12.1938%" y="1621" width="0.0179%" height="15" fill="rgb(250,81,26)" fg:x="2456882037" fg:w="3609316"/><text x="12.4438%" y="1631.50"></text></g><g><title>node::fs::AfterStringPtr (108,195,690 samples, 0.54%)</title><rect x="11.6860%" y="1893" width="0.5370%" height="15" fill="rgb(214,104,7)" fg:x="2354566725" fg:w="108195690"/><text x="11.9360%" y="1903.50"></text></g><g><title>node::fs::FSReqPromise&lt;node::AliasedBufferBase&lt;double, v8::Float64Array&gt; &gt;::Resolve (10,040,231 samples, 0.05%)</title><rect x="12.1732%" y="1877" width="0.0498%" height="15" fill="rgb(233,189,8)" fg:x="2452722184" fg:w="10040231"/><text x="12.4232%" y="1887.50"></text></g><g><title>node::InternalCallbackScope::~InternalCallbackScope (10,040,231 samples, 0.05%)</title><rect x="12.1732%" y="1861" width="0.0498%" height="15" fill="rgb(228,141,17)" fg:x="2452722184" fg:w="10040231"/><text x="12.4232%" y="1871.50"></text></g><g><title>node::InternalCallbackScope::Close (10,040,231 samples, 0.05%)</title><rect x="12.1732%" y="1845" width="0.0498%" height="15" fill="rgb(247,157,1)" fg:x="2452722184" fg:w="10040231"/><text x="12.4232%" y="1855.50"></text></g><g><title>v8::internal::MicrotaskQueue::PerformCheckpoint (10,040,231 samples, 0.05%)</title><rect x="12.1732%" y="1829" width="0.0498%" height="15" fill="rgb(249,225,5)" fg:x="2452722184" fg:w="10040231"/><text x="12.4232%" y="1839.50"></text></g><g><title>v8::internal::MicrotaskQueue::RunMicrotasks (10,040,231 samples, 0.05%)</title><rect x="12.1732%" y="1813" width="0.0498%" height="15" fill="rgb(242,55,13)" fg:x="2452722184" fg:w="10040231"/><text x="12.4232%" y="1823.50"></text></g><g><title>v8::internal::Execution::TryRunMicrotasks (10,040,231 samples, 0.05%)</title><rect x="12.1732%" y="1797" width="0.0498%" height="15" fill="rgb(230,49,50)" fg:x="2452722184" fg:w="10040231"/><text x="12.4232%" y="1807.50"></text></g><g><title>v8::internal::(anonymous namespace)::InvokeWithTryCatch (10,040,231 samples, 0.05%)</title><rect x="12.1732%" y="1781" width="0.0498%" height="15" fill="rgb(241,111,38)" fg:x="2452722184" fg:w="10040231"/><text x="12.4232%" y="1791.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (10,040,231 samples, 0.05%)</title><rect x="12.1732%" y="1765" width="0.0498%" height="15" fill="rgb(252,155,4)" fg:x="2452722184" fg:w="10040231"/><text x="12.4232%" y="1775.50"></text></g><g><title>Builtins_JSRunMicrotasksEntry (10,040,231 samples, 0.05%)</title><rect x="12.1732%" y="1749" width="0.0498%" height="15" fill="rgb(212,69,32)" fg:x="2452722184" fg:w="10040231"/><text x="12.4232%" y="1759.50"></text></g><g><title>Builtins_RunMicrotasks (10,040,231 samples, 0.05%)</title><rect x="12.1732%" y="1733" width="0.0498%" height="15" fill="rgb(243,107,47)" fg:x="2452722184" fg:w="10040231"/><text x="12.4232%" y="1743.50"></text></g><g><title>Builtins_PromiseFulfillReactionJob (10,040,231 samples, 0.05%)</title><rect x="12.1732%" y="1717" width="0.0498%" height="15" fill="rgb(247,130,12)" fg:x="2452722184" fg:w="10040231"/><text x="12.4232%" y="1727.50"></text></g><g><title>Builtins_AsyncFunctionAwaitResolveClosure (10,040,231 samples, 0.05%)</title><rect x="12.1732%" y="1701" width="0.0498%" height="15" fill="rgb(233,74,16)" fg:x="2452722184" fg:w="10040231"/><text x="12.4232%" y="1711.50"></text></g><g><title>[perf-50199.map] (10,040,231 samples, 0.05%)</title><rect x="12.1732%" y="1685" width="0.0498%" height="15" fill="rgb(208,58,18)" fg:x="2452722184" fg:w="10040231"/><text x="12.4232%" y="1695.50"></text></g><g><title>[perf-50199.map] (9,292,798 samples, 0.05%)</title><rect x="12.1769%" y="1669" width="0.0461%" height="15" fill="rgb(242,225,1)" fg:x="2453469617" fg:w="9292798"/><text x="12.4269%" y="1679.50"></text></g><g><title>[perf-50199.map] (5,880,378 samples, 0.03%)</title><rect x="12.1938%" y="1653" width="0.0292%" height="15" fill="rgb(249,39,40)" fg:x="2456882037" fg:w="5880378"/><text x="12.4438%" y="1663.50"></text></g><g><title>node::BaseObject::~BaseObject (2,328,487 samples, 0.01%)</title><rect x="12.2320%" y="1861" width="0.0116%" height="15" fill="rgb(207,72,44)" fg:x="2464582726" fg:w="2328487"/><text x="12.4820%" y="1871.50"></text></g><g><title>node::fs::FSReqPromise&lt;node::AliasedBufferBase&lt;double, v8::Float64Array&gt; &gt;::~FSReqPromise (4,538,578 samples, 0.02%)</title><rect x="12.2248%" y="1893" width="0.0225%" height="15" fill="rgb(215,193,12)" fg:x="2463134155" fg:w="4538578"/><text x="12.4748%" y="1903.50"></text></g><g><title>node::AsyncWrap::~AsyncWrap (3,867,397 samples, 0.02%)</title><rect x="12.2282%" y="1877" width="0.0192%" height="15" fill="rgb(248,41,39)" fg:x="2463805336" fg:w="3867397"/><text x="12.4782%" y="1887.50"></text></g><g><title>Builtins_CallApiCallback (2,135,447 samples, 0.01%)</title><rect x="12.2561%" y="1669" width="0.0106%" height="15" fill="rgb(253,85,4)" fg:x="2469437763" fg:w="2135447"/><text x="12.5061%" y="1679.50"></text></g><g><title>node::fs::Stat (2,135,447 samples, 0.01%)</title><rect x="12.2561%" y="1653" width="0.0106%" height="15" fill="rgb(243,70,31)" fg:x="2469437763" fg:w="2135447"/><text x="12.5061%" y="1663.50"></text></g><g><title>node::fs::GetReqWrap (2,135,447 samples, 0.01%)</title><rect x="12.2561%" y="1637" width="0.0106%" height="15" fill="rgb(253,195,26)" fg:x="2469437763" fg:w="2135447"/><text x="12.5061%" y="1647.50"></text></g><g><title>Builtins_AsyncFunctionAwaitResolveClosure (9,364,350 samples, 0.05%)</title><rect x="12.2511%" y="1701" width="0.0465%" height="15" fill="rgb(243,42,11)" fg:x="2468430816" fg:w="9364350"/><text x="12.5011%" y="1711.50"></text></g><g><title>[perf-50199.map] (9,059,646 samples, 0.04%)</title><rect x="12.2526%" y="1685" width="0.0450%" height="15" fill="rgb(239,66,17)" fg:x="2468735520" fg:w="9059646"/><text x="12.5026%" y="1695.50"></text></g><g><title>[perf-50199.map] (6,221,956 samples, 0.03%)</title><rect x="12.2667%" y="1669" width="0.0309%" height="15" fill="rgb(217,132,21)" fg:x="2471573210" fg:w="6221956"/><text x="12.5167%" y="1679.50"></text></g><g><title>[perf-50199.map] (4,630,909 samples, 0.02%)</title><rect x="12.2746%" y="1653" width="0.0230%" height="15" fill="rgb(252,202,21)" fg:x="2473164257" fg:w="4630909"/><text x="12.5246%" y="1663.50"></text></g><g><title>[perf-50199.map] (3,579,353 samples, 0.02%)</title><rect x="12.2798%" y="1637" width="0.0178%" height="15" fill="rgb(233,98,36)" fg:x="2474215813" fg:w="3579353"/><text x="12.5298%" y="1647.50"></text></g><g><title>[perf-50199.map] (3,579,353 samples, 0.02%)</title><rect x="12.2798%" y="1621" width="0.0178%" height="15" fill="rgb(216,153,54)" fg:x="2474215813" fg:w="3579353"/><text x="12.5298%" y="1631.50"></text></g><g><title>[perf-50199.map] (3,579,353 samples, 0.02%)</title><rect x="12.2798%" y="1605" width="0.0178%" height="15" fill="rgb(250,99,7)" fg:x="2474215813" fg:w="3579353"/><text x="12.5298%" y="1615.50"></text></g><g><title>Builtins_PromiseFulfillReactionJob (10,151,794 samples, 0.05%)</title><rect x="12.2511%" y="1717" width="0.0504%" height="15" fill="rgb(207,56,50)" fg:x="2468430816" fg:w="10151794"/><text x="12.5011%" y="1727.50"></text></g><g><title>node::fs::FileHandle::ClosePromise (12,287,511 samples, 0.06%)</title><rect x="12.2474%" y="1893" width="0.0610%" height="15" fill="rgb(244,61,34)" fg:x="2467672733" fg:w="12287511"/><text x="12.4974%" y="1903.50"></text></g><g><title>node::fs::FileHandle::CloseReq::Resolve (12,287,511 samples, 0.06%)</title><rect x="12.2474%" y="1877" width="0.0610%" height="15" fill="rgb(241,50,38)" fg:x="2467672733" fg:w="12287511"/><text x="12.4974%" y="1887.50"></text></g><g><title>node::InternalCallbackScope::~InternalCallbackScope (12,287,511 samples, 0.06%)</title><rect x="12.2474%" y="1861" width="0.0610%" height="15" fill="rgb(212,166,30)" fg:x="2467672733" fg:w="12287511"/><text x="12.4974%" y="1871.50"></text></g><g><title>node::InternalCallbackScope::Close (12,287,511 samples, 0.06%)</title><rect x="12.2474%" y="1845" width="0.0610%" height="15" fill="rgb(249,127,32)" fg:x="2467672733" fg:w="12287511"/><text x="12.4974%" y="1855.50"></text></g><g><title>v8::internal::MicrotaskQueue::PerformCheckpoint (12,287,511 samples, 0.06%)</title><rect x="12.2474%" y="1829" width="0.0610%" height="15" fill="rgb(209,103,0)" fg:x="2467672733" fg:w="12287511"/><text x="12.4974%" y="1839.50"></text></g><g><title>v8::internal::MicrotaskQueue::RunMicrotasks (12,287,511 samples, 0.06%)</title><rect x="12.2474%" y="1813" width="0.0610%" height="15" fill="rgb(238,209,51)" fg:x="2467672733" fg:w="12287511"/><text x="12.4974%" y="1823.50"></text></g><g><title>v8::internal::Execution::TryRunMicrotasks (12,287,511 samples, 0.06%)</title><rect x="12.2474%" y="1797" width="0.0610%" height="15" fill="rgb(237,56,23)" fg:x="2467672733" fg:w="12287511"/><text x="12.4974%" y="1807.50"></text></g><g><title>v8::internal::(anonymous namespace)::InvokeWithTryCatch (12,287,511 samples, 0.06%)</title><rect x="12.2474%" y="1781" width="0.0610%" height="15" fill="rgb(215,153,46)" fg:x="2467672733" fg:w="12287511"/><text x="12.4974%" y="1791.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (12,287,511 samples, 0.06%)</title><rect x="12.2474%" y="1765" width="0.0610%" height="15" fill="rgb(224,49,31)" fg:x="2467672733" fg:w="12287511"/><text x="12.4974%" y="1775.50"></text></g><g><title>Builtins_JSRunMicrotasksEntry (12,287,511 samples, 0.06%)</title><rect x="12.2474%" y="1749" width="0.0610%" height="15" fill="rgb(250,18,42)" fg:x="2467672733" fg:w="12287511"/><text x="12.4974%" y="1759.50"></text></g><g><title>Builtins_RunMicrotasks (12,287,511 samples, 0.06%)</title><rect x="12.2474%" y="1733" width="0.0610%" height="15" fill="rgb(215,176,39)" fg:x="2467672733" fg:w="12287511"/><text x="12.4974%" y="1743.50"></text></g><g><title>node::MakeLibuvRequestCallback&lt;uv_fs_s, void (*)(uv_fs_s*)&gt;::Wrapper (217,642,952 samples, 1.08%)</title><rect x="11.2363%" y="1909" width="1.0802%" height="15" fill="rgb(223,77,29)" fg:x="2263964766" fg:w="217642952"/><text x="11.4863%" y="1919.50"></text></g><g><title>uv__work_done (219,082,114 samples, 1.09%)</title><rect x="11.2329%" y="1925" width="1.0873%" height="15" fill="rgb(234,94,52)" fg:x="2263266474" fg:w="219082114"/><text x="11.4829%" y="1935.50"></text></g><g><title>uv__async_io.part.3 (243,603,833 samples, 1.21%)</title><rect x="11.1148%" y="1941" width="1.2090%" height="15" fill="rgb(220,154,50)" fg:x="2239481085" fg:w="243603833"/><text x="11.3648%" y="1951.50"></text></g><g><title>Builtins_RegExpPrototypeTestFast (2,508,082 samples, 0.01%)</title><rect x="12.3535%" y="1749" width="0.0124%" height="15" fill="rgb(212,11,10)" fg:x="2489057744" fg:w="2508082"/><text x="12.6035%" y="1759.50"></text></g><g><title>[perf-1798.map] (2,173,000 samples, 0.01%)</title><rect x="12.3552%" y="1733" width="0.0108%" height="15" fill="rgb(205,166,19)" fg:x="2489392826" fg:w="2173000"/><text x="12.6052%" y="1743.50"></text></g><g><title>Builtins_InterpreterEntryTrampoline (10,375,336 samples, 0.05%)</title><rect x="12.3357%" y="1797" width="0.0515%" height="15" fill="rgb(244,198,16)" fg:x="2485478720" fg:w="10375336"/><text x="12.5857%" y="1807.50"></text></g><g><title>[perf-1798.map] (9,017,192 samples, 0.04%)</title><rect x="12.3425%" y="1781" width="0.0448%" height="15" fill="rgb(219,69,12)" fg:x="2486836864" fg:w="9017192"/><text x="12.5925%" y="1791.50"></text></g><g><title>[perf-1798.map] (9,017,192 samples, 0.04%)</title><rect x="12.3425%" y="1765" width="0.0448%" height="15" fill="rgb(245,30,7)" fg:x="2486836864" fg:w="9017192"/><text x="12.5925%" y="1775.50"></text></g><g><title>[perf-1798.map] (3,855,528 samples, 0.02%)</title><rect x="12.3681%" y="1749" width="0.0191%" height="15" fill="rgb(218,221,48)" fg:x="2491998528" fg:w="3855528"/><text x="12.6181%" y="1759.50"></text></g><g><title>v8::internal::Execution::Call (11,494,276 samples, 0.06%)</title><rect x="12.3333%" y="1861" width="0.0570%" height="15" fill="rgb(216,66,15)" fg:x="2484980572" fg:w="11494276"/><text x="12.5833%" y="1871.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (10,996,128 samples, 0.05%)</title><rect x="12.3357%" y="1845" width="0.0546%" height="15" fill="rgb(226,122,50)" fg:x="2485478720" fg:w="10996128"/><text x="12.5857%" y="1855.50"></text></g><g><title>Builtins_JSEntry (10,996,128 samples, 0.05%)</title><rect x="12.3357%" y="1829" width="0.0546%" height="15" fill="rgb(239,156,16)" fg:x="2485478720" fg:w="10996128"/><text x="12.5857%" y="1839.50"></text></g><g><title>Builtins_JSEntryTrampoline (10,996,128 samples, 0.05%)</title><rect x="12.3357%" y="1813" width="0.0546%" height="15" fill="rgb(224,27,38)" fg:x="2485478720" fg:w="10996128"/><text x="12.5857%" y="1823.50"></text></g><g><title>v8::Function::Call (12,062,974 samples, 0.06%)</title><rect x="12.3319%" y="1877" width="0.0599%" height="15" fill="rgb(224,39,27)" fg:x="2484693390" fg:w="12062974"/><text x="12.5819%" y="1887.50"></text></g><g><title>node::AsyncWrap::MakeCallback (13,135,419 samples, 0.07%)</title><rect x="12.3294%" y="1909" width="0.0652%" height="15" fill="rgb(215,92,29)" fg:x="2484194165" fg:w="13135419"/><text x="12.5794%" y="1919.50"></text></g><g><title>node::InternalMakeCallback (13,135,419 samples, 0.07%)</title><rect x="12.3294%" y="1893" width="0.0652%" height="15" fill="rgb(207,159,16)" fg:x="2484194165" fg:w="13135419"/><text x="12.5794%" y="1903.50"></text></g><g><title>node::(anonymous namespace)::FSEventWrap::OnEvent (14,970,279 samples, 0.07%)</title><rect x="12.3277%" y="1925" width="0.0743%" height="15" fill="rgb(238,163,47)" fg:x="2483866423" fg:w="14970279"/><text x="12.5777%" y="1935.50"></text></g><g><title>uv__inotify_read (15,468,427 samples, 0.08%)</title><rect x="12.3277%" y="1941" width="0.0768%" height="15" fill="rgb(219,91,49)" fg:x="2483866423" fg:w="15468427"/><text x="12.5777%" y="1951.50"></text></g><g><title>node::InternalCallbackScope::Close (3,239,192 samples, 0.02%)</title><rect x="12.4109%" y="1861" width="0.0161%" height="15" fill="rgb(227,167,31)" fg:x="2500628109" fg:w="3239192"/><text x="12.6609%" y="1871.50"></text></g><g><title>v8::Function::Call (3,239,192 samples, 0.02%)</title><rect x="12.4109%" y="1845" width="0.0161%" height="15" fill="rgb(234,80,54)" fg:x="2500628109" fg:w="3239192"/><text x="12.6609%" y="1855.50"></text></g><g><title>v8::internal::Execution::Call (3,239,192 samples, 0.02%)</title><rect x="12.4109%" y="1829" width="0.0161%" height="15" fill="rgb(212,114,2)" fg:x="2500628109" fg:w="3239192"/><text x="12.6609%" y="1839.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (3,239,192 samples, 0.02%)</title><rect x="12.4109%" y="1813" width="0.0161%" height="15" fill="rgb(234,50,24)" fg:x="2500628109" fg:w="3239192"/><text x="12.6609%" y="1823.50"></text></g><g><title>Builtins_JSEntry (3,239,192 samples, 0.02%)</title><rect x="12.4109%" y="1797" width="0.0161%" height="15" fill="rgb(221,68,8)" fg:x="2500628109" fg:w="3239192"/><text x="12.6609%" y="1807.50"></text></g><g><title>Builtins_JSEntryTrampoline (3,239,192 samples, 0.02%)</title><rect x="12.4109%" y="1781" width="0.0161%" height="15" fill="rgb(254,180,31)" fg:x="2500628109" fg:w="3239192"/><text x="12.6609%" y="1791.50"></text></g><g><title>[perf-50199.map] (3,239,192 samples, 0.02%)</title><rect x="12.4109%" y="1765" width="0.0161%" height="15" fill="rgb(247,130,50)" fg:x="2500628109" fg:w="3239192"/><text x="12.6609%" y="1775.50"></text></g><g><title>Builtins_CallApiCallback (3,239,192 samples, 0.02%)</title><rect x="12.4109%" y="1749" width="0.0161%" height="15" fill="rgb(211,109,4)" fg:x="2500628109" fg:w="3239192"/><text x="12.6609%" y="1759.50"></text></g><g><title>v8::internal::MicrotaskQueue::PerformCheckpoint (3,239,192 samples, 0.02%)</title><rect x="12.4109%" y="1733" width="0.0161%" height="15" fill="rgb(238,50,21)" fg:x="2500628109" fg:w="3239192"/><text x="12.6609%" y="1743.50"></text></g><g><title>v8::internal::MicrotaskQueue::RunMicrotasks (3,239,192 samples, 0.02%)</title><rect x="12.4109%" y="1717" width="0.0161%" height="15" fill="rgb(225,57,45)" fg:x="2500628109" fg:w="3239192"/><text x="12.6609%" y="1727.50"></text></g><g><title>v8::internal::Execution::TryRunMicrotasks (3,239,192 samples, 0.02%)</title><rect x="12.4109%" y="1701" width="0.0161%" height="15" fill="rgb(209,196,50)" fg:x="2500628109" fg:w="3239192"/><text x="12.6609%" y="1711.50"></text></g><g><title>v8::internal::(anonymous namespace)::InvokeWithTryCatch (3,239,192 samples, 0.02%)</title><rect x="12.4109%" y="1685" width="0.0161%" height="15" fill="rgb(242,140,13)" fg:x="2500628109" fg:w="3239192"/><text x="12.6609%" y="1695.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (3,239,192 samples, 0.02%)</title><rect x="12.4109%" y="1669" width="0.0161%" height="15" fill="rgb(217,111,7)" fg:x="2500628109" fg:w="3239192"/><text x="12.6609%" y="1679.50"></text></g><g><title>Builtins_JSRunMicrotasksEntry (3,239,192 samples, 0.02%)</title><rect x="12.4109%" y="1653" width="0.0161%" height="15" fill="rgb(253,193,51)" fg:x="2500628109" fg:w="3239192"/><text x="12.6609%" y="1663.50"></text></g><g><title>Builtins_RunMicrotasks (3,239,192 samples, 0.02%)</title><rect x="12.4109%" y="1637" width="0.0161%" height="15" fill="rgb(252,70,29)" fg:x="2500628109" fg:w="3239192"/><text x="12.6609%" y="1647.50"></text></g><g><title>Builtins_PromiseFulfillReactionJob (3,239,192 samples, 0.02%)</title><rect x="12.4109%" y="1621" width="0.0161%" height="15" fill="rgb(232,127,12)" fg:x="2500628109" fg:w="3239192"/><text x="12.6609%" y="1631.50"></text></g><g><title>Builtins_AsyncFunctionAwaitResolveClosure (3,239,192 samples, 0.02%)</title><rect x="12.4109%" y="1605" width="0.0161%" height="15" fill="rgb(211,180,21)" fg:x="2500628109" fg:w="3239192"/><text x="12.6609%" y="1615.50"></text></g><g><title>[perf-50199.map] (3,239,192 samples, 0.02%)</title><rect x="12.4109%" y="1589" width="0.0161%" height="15" fill="rgb(229,72,13)" fg:x="2500628109" fg:w="3239192"/><text x="12.6609%" y="1599.50"></text></g><g><title>[perf-50199.map] (2,805,191 samples, 0.01%)</title><rect x="12.4131%" y="1573" width="0.0139%" height="15" fill="rgb(240,211,49)" fg:x="2501062110" fg:w="2805191"/><text x="12.6631%" y="1583.50"></text></g><g><title>[perf-50199.map] (2,038,326 samples, 0.01%)</title><rect x="12.4169%" y="1557" width="0.0101%" height="15" fill="rgb(219,149,40)" fg:x="2501828975" fg:w="2038326"/><text x="12.6669%" y="1567.50"></text></g><g><title>Builtins_ArrayForEach (2,038,326 samples, 0.01%)</title><rect x="12.4169%" y="1541" width="0.0101%" height="15" fill="rgb(210,127,46)" fg:x="2501828975" fg:w="2038326"/><text x="12.6669%" y="1551.50"></text></g><g><title>[perf-50199.map] (2,038,326 samples, 0.01%)</title><rect x="12.4169%" y="1525" width="0.0101%" height="15" fill="rgb(220,106,7)" fg:x="2501828975" fg:w="2038326"/><text x="12.6669%" y="1535.50"></text></g><g><title>[perf-1865.map] (3,288,027 samples, 0.02%)</title><rect x="12.4270%" y="1781" width="0.0163%" height="15" fill="rgb(249,31,22)" fg:x="2503867301" fg:w="3288027"/><text x="12.6770%" y="1791.50"></text></g><g><title>[perf-1865.map] (3,288,027 samples, 0.02%)</title><rect x="12.4270%" y="1765" width="0.0163%" height="15" fill="rgb(253,1,49)" fg:x="2503867301" fg:w="3288027"/><text x="12.6770%" y="1775.50"></text></g><g><title>[perf-1865.map] (3,108,210 samples, 0.02%)</title><rect x="12.4279%" y="1749" width="0.0154%" height="15" fill="rgb(227,144,33)" fg:x="2504047118" fg:w="3108210"/><text x="12.6779%" y="1759.50"></text></g><g><title>[perf-1865.map] (3,108,210 samples, 0.02%)</title><rect x="12.4279%" y="1733" width="0.0154%" height="15" fill="rgb(249,163,44)" fg:x="2504047118" fg:w="3108210"/><text x="12.6779%" y="1743.50"></text></g><g><title>[perf-1865.map] (2,950,534 samples, 0.01%)</title><rect x="12.4287%" y="1717" width="0.0146%" height="15" fill="rgb(234,15,39)" fg:x="2504204794" fg:w="2950534"/><text x="12.6787%" y="1727.50"></text></g><g><title>[perf-1865.map] (2,950,534 samples, 0.01%)</title><rect x="12.4287%" y="1701" width="0.0146%" height="15" fill="rgb(207,66,16)" fg:x="2504204794" fg:w="2950534"/><text x="12.6787%" y="1711.50"></text></g><g><title>uv__signal_event (7,816,326 samples, 0.04%)</title><rect x="12.4074%" y="1941" width="0.0388%" height="15" fill="rgb(233,112,24)" fg:x="2499906762" fg:w="7816326"/><text x="12.6574%" y="1951.50"></text></g><g><title>uv__wait_children (7,094,979 samples, 0.04%)</title><rect x="12.4109%" y="1925" width="0.0352%" height="15" fill="rgb(230,90,22)" fg:x="2500628109" fg:w="7094979"/><text x="12.6609%" y="1935.50"></text></g><g><title>node::(anonymous namespace)::ProcessWrap::OnExit (7,094,979 samples, 0.04%)</title><rect x="12.4109%" y="1909" width="0.0352%" height="15" fill="rgb(229,61,13)" fg:x="2500628109" fg:w="7094979"/><text x="12.6609%" y="1919.50"></text></g><g><title>node::AsyncWrap::MakeCallback (7,094,979 samples, 0.04%)</title><rect x="12.4109%" y="1893" width="0.0352%" height="15" fill="rgb(225,57,24)" fg:x="2500628109" fg:w="7094979"/><text x="12.6609%" y="1903.50"></text></g><g><title>node::InternalMakeCallback (7,094,979 samples, 0.04%)</title><rect x="12.4109%" y="1877" width="0.0352%" height="15" fill="rgb(208,169,48)" fg:x="2500628109" fg:w="7094979"/><text x="12.6609%" y="1887.50"></text></g><g><title>v8::Function::Call (3,855,787 samples, 0.02%)</title><rect x="12.4270%" y="1861" width="0.0191%" height="15" fill="rgb(244,218,51)" fg:x="2503867301" fg:w="3855787"/><text x="12.6770%" y="1871.50"></text></g><g><title>v8::internal::Execution::Call (3,855,787 samples, 0.02%)</title><rect x="12.4270%" y="1845" width="0.0191%" height="15" fill="rgb(214,148,10)" fg:x="2503867301" fg:w="3855787"/><text x="12.6770%" y="1855.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (3,855,787 samples, 0.02%)</title><rect x="12.4270%" y="1829" width="0.0191%" height="15" fill="rgb(225,174,27)" fg:x="2503867301" fg:w="3855787"/><text x="12.6770%" y="1839.50"></text></g><g><title>Builtins_JSEntry (3,855,787 samples, 0.02%)</title><rect x="12.4270%" y="1813" width="0.0191%" height="15" fill="rgb(230,96,26)" fg:x="2503867301" fg:w="3855787"/><text x="12.6770%" y="1823.50"></text></g><g><title>Builtins_JSEntryTrampoline (3,855,787 samples, 0.02%)</title><rect x="12.4270%" y="1797" width="0.0191%" height="15" fill="rgb(232,10,30)" fg:x="2503867301" fg:w="3855787"/><text x="12.6770%" y="1807.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_BuiltinExit (2,810,703 samples, 0.01%)</title><rect x="12.4869%" y="1605" width="0.0139%" height="15" fill="rgb(222,8,50)" fg:x="2515939026" fg:w="2810703"/><text x="12.7369%" y="1615.50"></text></g><g><title>v8::internal::Builtin_JsonParse (2,810,703 samples, 0.01%)</title><rect x="12.4869%" y="1589" width="0.0139%" height="15" fill="rgb(213,81,27)" fg:x="2515939026" fg:w="2810703"/><text x="12.7369%" y="1599.50"></text></g><g><title>v8::internal::JsonParser&lt;unsigned char&gt;::ParseJson (2,810,703 samples, 0.01%)</title><rect x="12.4869%" y="1573" width="0.0139%" height="15" fill="rgb(245,50,10)" fg:x="2515939026" fg:w="2810703"/><text x="12.7369%" y="1583.50"></text></g><g><title>v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::JsonParser&lt;unsigned char&gt;::ParseJsonValue&lt;false&gt; (2,254,696 samples, 0.01%)</title><rect x="12.4897%" y="1557" width="0.0112%" height="15" fill="rgb(216,100,18)" fg:x="2516495033" fg:w="2254696"/><text x="12.7397%" y="1567.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_BuiltinExit (3,628,830 samples, 0.02%)</title><rect x="12.5281%" y="1477" width="0.0180%" height="15" fill="rgb(236,147,54)" fg:x="2524244288" fg:w="3628830"/><text x="12.7781%" y="1487.50"></text></g><g><title>v8::internal::Builtin_JsonStringify (3,628,830 samples, 0.02%)</title><rect x="12.5281%" y="1461" width="0.0180%" height="15" fill="rgb(205,143,26)" fg:x="2524244288" fg:w="3628830"/><text x="12.7781%" y="1471.50"></text></g><g><title>v8::internal::JsonStringify (3,628,830 samples, 0.02%)</title><rect x="12.5281%" y="1445" width="0.0180%" height="15" fill="rgb(236,26,9)" fg:x="2524244288" fg:w="3628830"/><text x="12.7781%" y="1455.50"></text></g><g><title>v8::internal::JsonStringifier::Stringify (3,300,523 samples, 0.02%)</title><rect x="12.5298%" y="1429" width="0.0164%" height="15" fill="rgb(221,165,53)" fg:x="2524572595" fg:w="3300523"/><text x="12.7798%" y="1439.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (3,300,523 samples, 0.02%)</title><rect x="12.5298%" y="1413" width="0.0164%" height="15" fill="rgb(214,110,17)" fg:x="2524572595" fg:w="3300523"/><text x="12.7798%" y="1423.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (2,264,240 samples, 0.01%)</title><rect x="12.5349%" y="1397" width="0.0112%" height="15" fill="rgb(237,197,12)" fg:x="2525608878" fg:w="2264240"/><text x="12.7849%" y="1407.50"></text></g><g><title>[perf-1798.map] (9,709,125 samples, 0.05%)</title><rect x="12.5082%" y="1557" width="0.0482%" height="15" fill="rgb(205,84,17)" fg:x="2520225284" fg:w="9709125"/><text x="12.7582%" y="1567.50"></text></g><g><title>[perf-1798.map] (9,709,125 samples, 0.05%)</title><rect x="12.5082%" y="1541" width="0.0482%" height="15" fill="rgb(237,18,45)" fg:x="2520225284" fg:w="9709125"/><text x="12.7582%" y="1551.50"></text></g><g><title>[perf-1798.map] (7,672,280 samples, 0.04%)</title><rect x="12.5183%" y="1525" width="0.0381%" height="15" fill="rgb(221,87,14)" fg:x="2522262129" fg:w="7672280"/><text x="12.7683%" y="1535.50"></text></g><g><title>[perf-1798.map] (7,032,410 samples, 0.03%)</title><rect x="12.5215%" y="1509" width="0.0349%" height="15" fill="rgb(238,186,15)" fg:x="2522901999" fg:w="7032410"/><text x="12.7715%" y="1519.50"></text></g><g><title>[perf-1798.map] (5,690,121 samples, 0.03%)</title><rect x="12.5281%" y="1493" width="0.0282%" height="15" fill="rgb(208,115,11)" fg:x="2524244288" fg:w="5690121"/><text x="12.7781%" y="1503.50"></text></g><g><title>[perf-1798.map] (2,061,291 samples, 0.01%)</title><rect x="12.5462%" y="1477" width="0.0102%" height="15" fill="rgb(254,175,0)" fg:x="2527873118" fg:w="2061291"/><text x="12.7962%" y="1487.50"></text></g><g><title>[perf-1798.map] (17,714,397 samples, 0.09%)</title><rect x="12.4688%" y="1717" width="0.0879%" height="15" fill="rgb(227,24,42)" fg:x="2512278783" fg:w="17714397"/><text x="12.7188%" y="1727.50"></text></g><g><title>[perf-1798.map] (16,536,173 samples, 0.08%)</title><rect x="12.4746%" y="1701" width="0.0821%" height="15" fill="rgb(223,211,37)" fg:x="2513457007" fg:w="16536173"/><text x="12.7246%" y="1711.50"></text></g><g><title>[perf-1798.map] (16,536,173 samples, 0.08%)</title><rect x="12.4746%" y="1685" width="0.0821%" height="15" fill="rgb(235,49,27)" fg:x="2513457007" fg:w="16536173"/><text x="12.7246%" y="1695.50"></text></g><g><title>[perf-1798.map] (16,536,173 samples, 0.08%)</title><rect x="12.4746%" y="1669" width="0.0821%" height="15" fill="rgb(254,97,51)" fg:x="2513457007" fg:w="16536173"/><text x="12.7246%" y="1679.50"></text></g><g><title>[perf-1798.map] (16,536,173 samples, 0.08%)</title><rect x="12.4746%" y="1653" width="0.0821%" height="15" fill="rgb(249,51,40)" fg:x="2513457007" fg:w="16536173"/><text x="12.7246%" y="1663.50"></text></g><g><title>[perf-1798.map] (15,694,030 samples, 0.08%)</title><rect x="12.4788%" y="1637" width="0.0779%" height="15" fill="rgb(210,128,45)" fg:x="2514299150" fg:w="15694030"/><text x="12.7288%" y="1647.50"></text></g><g><title>[perf-1798.map] (14,890,704 samples, 0.07%)</title><rect x="12.4828%" y="1621" width="0.0739%" height="15" fill="rgb(224,137,50)" fg:x="2515102476" fg:w="14890704"/><text x="12.7328%" y="1631.50"></text></g><g><title>[perf-1798.map] (10,801,786 samples, 0.05%)</title><rect x="12.5031%" y="1605" width="0.0536%" height="15" fill="rgb(242,15,9)" fg:x="2519191394" fg:w="10801786"/><text x="12.7531%" y="1615.50"></text></g><g><title>[perf-1798.map] (9,767,896 samples, 0.05%)</title><rect x="12.5082%" y="1589" width="0.0485%" height="15" fill="rgb(233,187,41)" fg:x="2520225284" fg:w="9767896"/><text x="12.7582%" y="1599.50"></text></g><g><title>[perf-1798.map] (9,767,896 samples, 0.05%)</title><rect x="12.5082%" y="1573" width="0.0485%" height="15" fill="rgb(227,2,29)" fg:x="2520225284" fg:w="9767896"/><text x="12.7582%" y="1583.50"></text></g><g><title>node::InternalCallbackScope::Close (19,516,443 samples, 0.10%)</title><rect x="12.4688%" y="1813" width="0.0969%" height="15" fill="rgb(222,70,3)" fg:x="2512278783" fg:w="19516443"/><text x="12.7188%" y="1823.50"></text></g><g><title>v8::Function::Call (19,516,443 samples, 0.10%)</title><rect x="12.4688%" y="1797" width="0.0969%" height="15" fill="rgb(213,11,42)" fg:x="2512278783" fg:w="19516443"/><text x="12.7188%" y="1807.50"></text></g><g><title>v8::internal::Execution::Call (19,516,443 samples, 0.10%)</title><rect x="12.4688%" y="1781" width="0.0969%" height="15" fill="rgb(225,150,9)" fg:x="2512278783" fg:w="19516443"/><text x="12.7188%" y="1791.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (19,516,443 samples, 0.10%)</title><rect x="12.4688%" y="1765" width="0.0969%" height="15" fill="rgb(230,162,45)" fg:x="2512278783" fg:w="19516443"/><text x="12.7188%" y="1775.50"></text></g><g><title>Builtins_JSEntry (19,516,443 samples, 0.10%)</title><rect x="12.4688%" y="1749" width="0.0969%" height="15" fill="rgb(222,14,52)" fg:x="2512278783" fg:w="19516443"/><text x="12.7188%" y="1759.50"></text></g><g><title>Builtins_JSEntryTrampoline (19,516,443 samples, 0.10%)</title><rect x="12.4688%" y="1733" width="0.0969%" height="15" fill="rgb(254,198,14)" fg:x="2512278783" fg:w="19516443"/><text x="12.7188%" y="1743.50"></text></g><g><title>[perf-1798.map] (3,806,745 samples, 0.02%)</title><rect x="12.5713%" y="1733" width="0.0189%" height="15" fill="rgb(220,217,30)" fg:x="2532934699" fg:w="3806745"/><text x="12.8213%" y="1743.50"></text></g><g><title>[perf-1798.map] (2,490,010 samples, 0.01%)</title><rect x="12.5778%" y="1717" width="0.0124%" height="15" fill="rgb(215,146,41)" fg:x="2534251434" fg:w="2490010"/><text x="12.8278%" y="1727.50"></text></g><g><title>[perf-1798.map] (2,309,540 samples, 0.01%)</title><rect x="12.5787%" y="1701" width="0.0115%" height="15" fill="rgb(217,27,36)" fg:x="2534431904" fg:w="2309540"/><text x="12.8287%" y="1711.50"></text></g><g><title>[perf-1798.map] (2,309,540 samples, 0.01%)</title><rect x="12.5787%" y="1685" width="0.0115%" height="15" fill="rgb(219,218,39)" fg:x="2534431904" fg:w="2309540"/><text x="12.8287%" y="1695.50"></text></g><g><title>[perf-1798.map] (2,086,293 samples, 0.01%)</title><rect x="12.5798%" y="1669" width="0.0104%" height="15" fill="rgb(219,4,42)" fg:x="2534655151" fg:w="2086293"/><text x="12.8298%" y="1679.50"></text></g><g><title>[perf-1798.map] (2,086,293 samples, 0.01%)</title><rect x="12.5798%" y="1653" width="0.0104%" height="15" fill="rgb(249,119,36)" fg:x="2534655151" fg:w="2086293"/><text x="12.8298%" y="1663.50"></text></g><g><title>[perf-1798.map] (2,086,293 samples, 0.01%)</title><rect x="12.5798%" y="1637" width="0.0104%" height="15" fill="rgb(209,23,33)" fg:x="2534655151" fg:w="2086293"/><text x="12.8298%" y="1647.50"></text></g><g><title>[perf-1798.map] (2,086,293 samples, 0.01%)</title><rect x="12.5798%" y="1621" width="0.0104%" height="15" fill="rgb(211,10,0)" fg:x="2534655151" fg:w="2086293"/><text x="12.8298%" y="1631.50"></text></g><g><title>[perf-1798.map] (2,086,293 samples, 0.01%)</title><rect x="12.5798%" y="1605" width="0.0104%" height="15" fill="rgb(208,99,37)" fg:x="2534655151" fg:w="2086293"/><text x="12.8298%" y="1615.50"></text></g><g><title>[perf-1798.map] (2,086,293 samples, 0.01%)</title><rect x="12.5798%" y="1589" width="0.0104%" height="15" fill="rgb(213,132,31)" fg:x="2534655151" fg:w="2086293"/><text x="12.8298%" y="1599.50"></text></g><g><title>[perf-1798.map] (2,086,293 samples, 0.01%)</title><rect x="12.5798%" y="1573" width="0.0104%" height="15" fill="rgb(243,129,40)" fg:x="2534655151" fg:w="2086293"/><text x="12.8298%" y="1583.50"></text></g><g><title>Builtins_StringSlowFlatten (2,107,154 samples, 0.01%)</title><rect x="12.6608%" y="1445" width="0.0105%" height="15" fill="rgb(210,66,33)" fg:x="2550961995" fg:w="2107154"/><text x="12.9108%" y="1455.50"></text></g><g><title>void v8::internal::String::WriteToFlat&lt;unsigned char&gt; (2,107,154 samples, 0.01%)</title><rect x="12.6608%" y="1429" width="0.0105%" height="15" fill="rgb(209,189,4)" fg:x="2550961995" fg:w="2107154"/><text x="12.9108%" y="1439.50"></text></g><g><title>long v8::internal::SearchStringRaw&lt;unsigned char const, unsigned char const&gt; (2,027,373 samples, 0.01%)</title><rect x="12.6712%" y="1445" width="0.0101%" height="15" fill="rgb(214,107,37)" fg:x="2553069149" fg:w="2027373"/><text x="12.9212%" y="1455.50"></text></g><g><title>Builtins_StringIndexOf (4,828,273 samples, 0.02%)</title><rect x="12.6608%" y="1461" width="0.0240%" height="15" fill="rgb(245,88,54)" fg:x="2550961995" fg:w="4828273"/><text x="12.9108%" y="1471.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_NoBuiltinExit (2,700,345 samples, 0.01%)</title><rect x="12.7427%" y="1397" width="0.0134%" height="15" fill="rgb(205,146,20)" fg:x="2567464302" fg:w="2700345"/><text x="12.9927%" y="1407.50"></text></g><g><title>Builtins_KeyedHasIC_Megamorphic (2,559,997 samples, 0.01%)</title><rect x="12.7561%" y="1397" width="0.0127%" height="15" fill="rgb(220,161,25)" fg:x="2570164647" fg:w="2559997"/><text x="13.0061%" y="1407.50"></text></g><g><title>v8::internal::JSReceiver::GetOwnPropertyDescriptor (4,614,811 samples, 0.02%)</title><rect x="12.7948%" y="1253" width="0.0229%" height="15" fill="rgb(215,152,15)" fg:x="2577976120" fg:w="4614811"/><text x="13.0448%" y="1263.50"></text></g><g><title>v8::internal::FilterProxyKeys (9,946,792 samples, 0.05%)</title><rect x="12.7905%" y="1285" width="0.0494%" height="15" fill="rgb(233,192,44)" fg:x="2577113248" fg:w="9946792"/><text x="13.0405%" y="1295.50"></text></g><g><title>v8::internal::JSProxy::GetOwnPropertyDescriptor (9,083,920 samples, 0.05%)</title><rect x="12.7948%" y="1269" width="0.0451%" height="15" fill="rgb(240,170,46)" fg:x="2577976120" fg:w="9083920"/><text x="13.0448%" y="1279.50"></text></g><g><title>v8::internal::Object::GetMethod (4,469,109 samples, 0.02%)</title><rect x="12.8177%" y="1253" width="0.0222%" height="15" fill="rgb(207,104,33)" fg:x="2582590931" fg:w="4469109"/><text x="13.0677%" y="1263.50"></text></g><g><title>v8::internal::JSReceiver::GetProperty (3,860,148 samples, 0.02%)</title><rect x="12.8208%" y="1237" width="0.0192%" height="15" fill="rgb(219,21,39)" fg:x="2583199892" fg:w="3860148"/><text x="13.0708%" y="1247.50"></text></g><g><title>void v8::internal::LookupIterator::Start&lt;false&gt; (2,026,596 samples, 0.01%)</title><rect x="12.8299%" y="1221" width="0.0101%" height="15" fill="rgb(214,133,29)" fg:x="2585033444" fg:w="2026596"/><text x="13.0799%" y="1231.50"></text></g><g><title>v8::internal::LookupIterator::State v8::internal::LookupIterator::LookupInRegularHolder&lt;false&gt; (2,026,596 samples, 0.01%)</title><rect x="12.8299%" y="1205" width="0.0101%" height="15" fill="rgb(226,93,6)" fg:x="2585033444" fg:w="2026596"/><text x="13.0799%" y="1215.50"></text></g><g><title>v8::internal::OrderedHashSet::Add (4,793,744 samples, 0.02%)</title><rect x="12.8466%" y="1253" width="0.0238%" height="15" fill="rgb(252,222,34)" fg:x="2588407391" fg:w="4793744"/><text x="13.0966%" y="1263.50"></text></g><g><title>v8::internal::KeyAccumulator::AddKeys (6,218,599 samples, 0.03%)</title><rect x="12.8419%" y="1285" width="0.0309%" height="15" fill="rgb(252,92,48)" fg:x="2587470408" fg:w="6218599"/><text x="13.0919%" y="1295.50"></text></g><g><title>v8::internal::KeyAccumulator::AddKey (5,763,410 samples, 0.03%)</title><rect x="12.8442%" y="1269" width="0.0286%" height="15" fill="rgb(245,223,24)" fg:x="2587925597" fg:w="5763410"/><text x="13.0942%" y="1279.50"></text></g><g><title>v8::internal::ExceptionStatus v8::internal::(anonymous namespace)::CollectKeysFromDictionary&lt;v8::internal::NameDictionary&gt; (4,241,254 samples, 0.02%)</title><rect x="12.8728%" y="1237" width="0.0210%" height="15" fill="rgb(205,176,3)" fg:x="2593689007" fg:w="4241254"/><text x="13.1228%" y="1247.50"></text></g><g><title>v8::internal::KeyAccumulator::AddKey (3,479,726 samples, 0.02%)</title><rect x="12.8766%" y="1221" width="0.0173%" height="15" fill="rgb(235,151,15)" fg:x="2594450535" fg:w="3479726"/><text x="13.1266%" y="1231.50"></text></g><g><title>v8::internal::OrderedHashSet::Add (2,498,226 samples, 0.01%)</title><rect x="12.8815%" y="1205" width="0.0124%" height="15" fill="rgb(237,209,11)" fg:x="2595432035" fg:w="2498226"/><text x="13.1315%" y="1215.50"></text></g><g><title>v8::internal::KeyAccumulator::CollectKeys (4,768,520 samples, 0.02%)</title><rect x="12.8728%" y="1285" width="0.0237%" height="15" fill="rgb(243,227,24)" fg:x="2593689007" fg:w="4768520"/><text x="13.1228%" y="1295.50"></text></g><g><title>v8::internal::KeyAccumulator::CollectOwnKeys (4,768,520 samples, 0.02%)</title><rect x="12.8728%" y="1269" width="0.0237%" height="15" fill="rgb(239,193,16)" fg:x="2593689007" fg:w="4768520"/><text x="13.1228%" y="1279.50"></text></g><g><title>v8::internal::KeyAccumulator::CollectOwnPropertyNames (4,768,520 samples, 0.02%)</title><rect x="12.8728%" y="1253" width="0.0237%" height="15" fill="rgb(231,27,9)" fg:x="2593689007" fg:w="4768520"/><text x="13.1228%" y="1263.50"></text></g><g><title>v8::internal::KeyAccumulator::CollectOwnJSProxyTargetKeys (22,208,166 samples, 0.11%)</title><rect x="12.7905%" y="1301" width="0.1102%" height="15" fill="rgb(219,169,10)" fg:x="2577113248" fg:w="22208166"/><text x="13.0405%" y="1311.50"></text></g><g><title>Builtins_ObjectKeys (24,545,817 samples, 0.12%)</title><rect x="12.7823%" y="1397" width="0.1218%" height="15" fill="rgb(244,229,43)" fg:x="2575451841" fg:w="24545817"/><text x="13.0323%" y="1407.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_NoBuiltinExit (23,909,694 samples, 0.12%)</title><rect x="12.7855%" y="1381" width="0.1187%" height="15" fill="rgb(254,38,20)" fg:x="2576087964" fg:w="23909694"/><text x="13.0355%" y="1391.50"></text></g><g><title>v8::internal::Runtime_ObjectKeys (23,909,694 samples, 0.12%)</title><rect x="12.7855%" y="1365" width="0.1187%" height="15" fill="rgb(250,47,30)" fg:x="2576087964" fg:w="23909694"/><text x="13.0355%" y="1375.50"></text></g><g><title>v8::internal::KeyAccumulator::GetKeys (23,909,694 samples, 0.12%)</title><rect x="12.7855%" y="1349" width="0.1187%" height="15" fill="rgb(224,124,36)" fg:x="2576087964" fg:w="23909694"/><text x="13.0355%" y="1359.50"></text></g><g><title>v8::internal::KeyAccumulator::CollectKeys (23,909,694 samples, 0.12%)</title><rect x="12.7855%" y="1333" width="0.1187%" height="15" fill="rgb(246,68,51)" fg:x="2576087964" fg:w="23909694"/><text x="13.0355%" y="1343.50"></text></g><g><title>v8::internal::KeyAccumulator::CollectOwnJSProxyKeys (23,407,917 samples, 0.12%)</title><rect x="12.7879%" y="1317" width="0.1162%" height="15" fill="rgb(253,43,49)" fg:x="2576589741" fg:w="23407917"/><text x="13.0379%" y="1327.50"></text></g><g><title>Builtins_ProxyGetProperty (3,634,640 samples, 0.02%)</title><rect x="12.9041%" y="1397" width="0.0180%" height="15" fill="rgb(219,54,36)" fg:x="2599997658" fg:w="3634640"/><text x="13.1541%" y="1407.50"></text></g><g><title>[perf-50199.map] (41,012,323 samples, 0.20%)</title><rect x="12.7235%" y="1429" width="0.2035%" height="15" fill="rgb(227,133,34)" fg:x="2563602102" fg:w="41012323"/><text x="12.9735%" y="1439.50"></text></g><g><title>[perf-50199.map] (39,662,509 samples, 0.20%)</title><rect x="12.7302%" y="1413" width="0.1969%" height="15" fill="rgb(247,227,15)" fg:x="2564951916" fg:w="39662509"/><text x="12.9802%" y="1423.50"></text></g><g><title>Builtins_InterpreterEntryTrampoline (61,941,347 samples, 0.31%)</title><rect x="12.6228%" y="1525" width="0.3074%" height="15" fill="rgb(229,96,14)" fg:x="2543323379" fg:w="61941347"/><text x="12.8728%" y="1535.50"></text></g><g><title>[perf-50199.map] (61,941,347 samples, 0.31%)</title><rect x="12.6228%" y="1509" width="0.3074%" height="15" fill="rgb(220,79,17)" fg:x="2543323379" fg:w="61941347"/><text x="12.8728%" y="1519.50"></text></g><g><title>[perf-50199.map] (61,677,543 samples, 0.31%)</title><rect x="12.6241%" y="1493" width="0.3061%" height="15" fill="rgb(205,131,53)" fg:x="2543587183" fg:w="61677543"/><text x="12.8741%" y="1503.50"></text></g><g><title>[perf-50199.map] (58,321,763 samples, 0.29%)</title><rect x="12.6408%" y="1477" width="0.2895%" height="15" fill="rgb(209,50,29)" fg:x="2546942963" fg:w="58321763"/><text x="12.8908%" y="1487.50"></text></g><g><title>[perf-50199.map] (49,215,065 samples, 0.24%)</title><rect x="12.6860%" y="1461" width="0.2443%" height="15" fill="rgb(245,86,46)" fg:x="2556049661" fg:w="49215065"/><text x="12.9360%" y="1471.50"></text></g><g><title>[perf-50199.map] (45,130,624 samples, 0.22%)</title><rect x="12.7063%" y="1445" width="0.2240%" height="15" fill="rgb(235,66,46)" fg:x="2560134102" fg:w="45130624"/><text x="12.9563%" y="1455.50"></text></g><g><title>[perf-50199.map] (67,131,345 samples, 0.33%)</title><rect x="12.5998%" y="1733" width="0.3332%" height="15" fill="rgb(232,148,31)" fg:x="2538686870" fg:w="67131345"/><text x="12.8498%" y="1743.50"></text></g><g><title>[perf-50199.map] (67,131,345 samples, 0.33%)</title><rect x="12.5998%" y="1717" width="0.3332%" height="15" fill="rgb(217,149,8)" fg:x="2538686870" fg:w="67131345"/><text x="12.8498%" y="1727.50"></text></g><g><title>[perf-50199.map] (66,382,230 samples, 0.33%)</title><rect x="12.6035%" y="1701" width="0.3295%" height="15" fill="rgb(209,183,11)" fg:x="2539435985" fg:w="66382230"/><text x="12.8535%" y="1711.50"></text></g><g><title>[perf-50199.map] (66,078,335 samples, 0.33%)</title><rect x="12.6051%" y="1685" width="0.3280%" height="15" fill="rgb(208,55,20)" fg:x="2539739880" fg:w="66078335"/><text x="12.8551%" y="1695.50"></text></g><g><title>[perf-50199.map] (66,078,335 samples, 0.33%)</title><rect x="12.6051%" y="1669" width="0.3280%" height="15" fill="rgb(218,39,14)" fg:x="2539739880" fg:w="66078335"/><text x="12.8551%" y="1679.50"></text></g><g><title>[perf-50199.map] (65,532,639 samples, 0.33%)</title><rect x="12.6078%" y="1653" width="0.3252%" height="15" fill="rgb(216,169,33)" fg:x="2540285576" fg:w="65532639"/><text x="12.8578%" y="1663.50"></text></g><g><title>[perf-50199.map] (65,280,696 samples, 0.32%)</title><rect x="12.6090%" y="1637" width="0.3240%" height="15" fill="rgb(233,80,24)" fg:x="2540537519" fg:w="65280696"/><text x="12.8590%" y="1647.50"></text></g><g><title>[perf-50199.map] (65,280,696 samples, 0.32%)</title><rect x="12.6090%" y="1621" width="0.3240%" height="15" fill="rgb(213,179,31)" fg:x="2540537519" fg:w="65280696"/><text x="12.8590%" y="1631.50"></text></g><g><title>[perf-50199.map] (65,280,696 samples, 0.32%)</title><rect x="12.6090%" y="1605" width="0.3240%" height="15" fill="rgb(209,19,5)" fg:x="2540537519" fg:w="65280696"/><text x="12.8590%" y="1615.50"></text></g><g><title>[perf-50199.map] (65,280,696 samples, 0.32%)</title><rect x="12.6090%" y="1589" width="0.3240%" height="15" fill="rgb(219,18,35)" fg:x="2540537519" fg:w="65280696"/><text x="12.8590%" y="1599.50"></text></g><g><title>[perf-50199.map] (65,280,696 samples, 0.32%)</title><rect x="12.6090%" y="1573" width="0.3240%" height="15" fill="rgb(209,169,16)" fg:x="2540537519" fg:w="65280696"/><text x="12.8590%" y="1583.50"></text></g><g><title>[perf-50199.map] (65,280,696 samples, 0.32%)</title><rect x="12.6090%" y="1557" width="0.3240%" height="15" fill="rgb(245,90,51)" fg:x="2540537519" fg:w="65280696"/><text x="12.8590%" y="1567.50"></text></g><g><title>[perf-50199.map] (62,690,508 samples, 0.31%)</title><rect x="12.6219%" y="1541" width="0.3111%" height="15" fill="rgb(220,99,45)" fg:x="2543127707" fg:w="62690508"/><text x="12.8719%" y="1551.50"></text></g><g><title>v8::Function::Call (74,055,389 samples, 0.37%)</title><rect x="12.5686%" y="1813" width="0.3675%" height="15" fill="rgb(249,89,25)" fg:x="2532395875" fg:w="74055389"/><text x="12.8186%" y="1823.50"></text></g><g><title>v8::internal::Execution::Call (73,842,258 samples, 0.37%)</title><rect x="12.5697%" y="1797" width="0.3665%" height="15" fill="rgb(239,193,0)" fg:x="2532609006" fg:w="73842258"/><text x="12.8197%" y="1807.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (73,842,258 samples, 0.37%)</title><rect x="12.5697%" y="1781" width="0.3665%" height="15" fill="rgb(231,126,1)" fg:x="2532609006" fg:w="73842258"/><text x="12.8197%" y="1791.50"></text></g><g><title>Builtins_JSEntry (73,583,448 samples, 0.37%)</title><rect x="12.5709%" y="1765" width="0.3652%" height="15" fill="rgb(243,166,3)" fg:x="2532867816" fg:w="73583448"/><text x="12.8209%" y="1775.50"></text></g><g><title>Builtins_JSEntryTrampoline (73,583,448 samples, 0.37%)</title><rect x="12.5709%" y="1749" width="0.3652%" height="15" fill="rgb(223,22,34)" fg:x="2532867816" fg:w="73583448"/><text x="12.8209%" y="1759.50"></text></g><g><title>node::StreamBase::CallJSOnreadMethod (94,763,749 samples, 0.47%)</title><rect x="12.4688%" y="1861" width="0.4703%" height="15" fill="rgb(251,52,51)" fg:x="2512278783" fg:w="94763749"/><text x="12.7188%" y="1871.50"></text></g><g><title>node::AsyncWrap::MakeCallback (94,763,749 samples, 0.47%)</title><rect x="12.4688%" y="1845" width="0.4703%" height="15" fill="rgb(221,165,28)" fg:x="2512278783" fg:w="94763749"/><text x="12.7188%" y="1855.50"></text></g><g><title>node::InternalMakeCallback (94,763,749 samples, 0.47%)</title><rect x="12.4688%" y="1829" width="0.4703%" height="15" fill="rgb(218,121,47)" fg:x="2512278783" fg:w="94763749"/><text x="12.7188%" y="1839.50"></text></g><g><title>node::LibuvStreamWrap::OnUvRead (96,087,447 samples, 0.48%)</title><rect x="12.4652%" y="1893" width="0.4769%" height="15" fill="rgb(209,120,9)" fg:x="2511555837" fg:w="96087447"/><text x="12.7152%" y="1903.50"></text></g><g><title>node::EmitToJSStreamListener::OnStreamRead (95,994,335 samples, 0.48%)</title><rect x="12.4656%" y="1877" width="0.4764%" height="15" fill="rgb(236,68,12)" fg:x="2511648949" fg:w="95994335"/><text x="12.7156%" y="1887.50"></text></g><g><title>uv__stream_io (100,049,971 samples, 0.50%)</title><rect x="12.4462%" y="1941" width="0.4966%" height="15" fill="rgb(225,194,26)" fg:x="2507723088" fg:w="100049971"/><text x="12.6962%" y="1951.50"></text></g><g><title>uv__read (98,429,955 samples, 0.49%)</title><rect x="12.4542%" y="1925" width="0.4885%" height="15" fill="rgb(231,84,39)" fg:x="2509343104" fg:w="98429955"/><text x="12.7042%" y="1935.50"></text></g><g><title>node::LibuvStreamWrap::ReadStart (96,217,222 samples, 0.48%)</title><rect x="12.4652%" y="1909" width="0.4775%" height="15" fill="rgb(210,11,45)" fg:x="2511555837" fg:w="96217222"/><text x="12.7152%" y="1919.50"></text></g><g><title>uv__io_poll (400,286,901 samples, 1.99%)</title><rect x="10.9591%" y="1957" width="1.9867%" height="15" fill="rgb(224,54,52)" fg:x="2208107815" fg:w="400286901"/><text x="11.2091%" y="1967.50">u..</text></g><g><title>v8::Object::New (2,602,967 samples, 0.01%)</title><rect x="12.9773%" y="1909" width="0.0129%" height="15" fill="rgb(238,102,14)" fg:x="2614740313" fg:w="2602967"/><text x="13.2273%" y="1919.50"></text></g><g><title>node::Environment::RunAndClearNativeImmediates (8,994,318 samples, 0.04%)</title><rect x="12.9497%" y="1925" width="0.0446%" height="15" fill="rgb(243,160,52)" fg:x="2609173875" fg:w="8994318"/><text x="13.1997%" y="1935.50"></text></g><g><title>Builtins_FindOrderedHashMapEntry (5,243,969 samples, 0.03%)</title><rect x="13.0768%" y="1717" width="0.0260%" height="15" fill="rgb(216,114,19)" fg:x="2634792959" fg:w="5243969"/><text x="13.3268%" y="1727.50"></text></g><g><title>v8::internal::OrderedHashMap::GetHash (3,005,112 samples, 0.01%)</title><rect x="13.0879%" y="1701" width="0.0149%" height="15" fill="rgb(244,166,37)" fg:x="2637031816" fg:w="3005112"/><text x="13.3379%" y="1711.50"></text></g><g><title>v8::internal::String::ComputeAndSetRawHash (3,005,112 samples, 0.01%)</title><rect x="13.0879%" y="1685" width="0.0149%" height="15" fill="rgb(246,29,44)" fg:x="2637031816" fg:w="3005112"/><text x="13.3379%" y="1695.50"></text></g><g><title>v8::internal::String::ComputeAndSetRawHash (2,382,866 samples, 0.01%)</title><rect x="13.0910%" y="1669" width="0.0118%" height="15" fill="rgb(215,56,53)" fg:x="2637654062" fg:w="2382866"/><text x="13.3410%" y="1679.50"></text></g><g><title>Builtins_RegExpPrototypeExec (2,045,468 samples, 0.01%)</title><rect x="13.1212%" y="1717" width="0.0102%" height="15" fill="rgb(217,60,2)" fg:x="2643730742" fg:w="2045468"/><text x="13.3712%" y="1727.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_NoBuiltinExit (3,637,645 samples, 0.02%)</title><rect x="13.1729%" y="1701" width="0.0181%" height="15" fill="rgb(207,26,24)" fg:x="2654155945" fg:w="3637645"/><text x="13.4229%" y="1711.50"></text></g><g><title>v8::internal::Runtime_StringEqual (3,637,645 samples, 0.02%)</title><rect x="13.1729%" y="1685" width="0.0181%" height="15" fill="rgb(252,210,15)" fg:x="2654155945" fg:w="3637645"/><text x="13.4229%" y="1695.50"></text></g><g><title>v8::internal::String::SlowEquals (3,637,645 samples, 0.02%)</title><rect x="13.1729%" y="1669" width="0.0181%" height="15" fill="rgb(253,209,26)" fg:x="2654155945" fg:w="3637645"/><text x="13.4229%" y="1679.50"></text></g><g><title>v8::internal::String::SlowFlatten (2,937,220 samples, 0.01%)</title><rect x="13.1764%" y="1653" width="0.0146%" height="15" fill="rgb(238,170,14)" fg:x="2654856370" fg:w="2937220"/><text x="13.4264%" y="1663.50"></text></g><g><title>__x64_sys_access (2,478,548 samples, 0.01%)</title><rect x="13.2728%" y="1589" width="0.0123%" height="15" fill="rgb(216,178,15)" fg:x="2674289205" fg:w="2478548"/><text x="13.5228%" y="1599.50"></text></g><g><title>do_faccessat (2,478,548 samples, 0.01%)</title><rect x="13.2728%" y="1573" width="0.0123%" height="15" fill="rgb(250,197,2)" fg:x="2674289205" fg:w="2478548"/><text x="13.5228%" y="1583.50"></text></g><g><title>user_path_at_empty (2,227,151 samples, 0.01%)</title><rect x="13.2741%" y="1557" width="0.0111%" height="15" fill="rgb(212,70,42)" fg:x="2674540602" fg:w="2227151"/><text x="13.5241%" y="1567.50"></text></g><g><title>__GI___access (3,782,563 samples, 0.02%)</title><rect x="13.2728%" y="1637" width="0.0188%" height="15" fill="rgb(227,213,9)" fg:x="2674289205" fg:w="3782563"/><text x="13.5228%" y="1647.50"></text></g><g><title>entry_SYSCALL_64 (3,782,563 samples, 0.02%)</title><rect x="13.2728%" y="1621" width="0.0188%" height="15" fill="rgb(245,99,25)" fg:x="2674289205" fg:w="3782563"/><text x="13.5228%" y="1631.50"></text></g><g><title>do_syscall_64 (3,782,563 samples, 0.02%)</title><rect x="13.2728%" y="1605" width="0.0188%" height="15" fill="rgb(250,82,29)" fg:x="2674289205" fg:w="3782563"/><text x="13.5228%" y="1615.50"></text></g><g><title>Builtins_CallApiCallback (5,122,590 samples, 0.03%)</title><rect x="13.2699%" y="1685" width="0.0254%" height="15" fill="rgb(241,226,54)" fg:x="2673695295" fg:w="5122590"/><text x="13.5199%" y="1695.50"></text></g><g><title>node::fs::ExistsSync (5,122,590 samples, 0.03%)</title><rect x="13.2699%" y="1669" width="0.0254%" height="15" fill="rgb(221,99,41)" fg:x="2673695295" fg:w="5122590"/><text x="13.5199%" y="1679.50"></text></g><g><title>uv_fs_access (4,528,680 samples, 0.02%)</title><rect x="13.2728%" y="1653" width="0.0225%" height="15" fill="rgb(213,90,21)" fg:x="2674289205" fg:w="4528680"/><text x="13.5228%" y="1663.50"></text></g><g><title>Builtins_StringIndexOf (2,204,220 samples, 0.01%)</title><rect x="13.3027%" y="1685" width="0.0109%" height="15" fill="rgb(205,208,24)" fg:x="2680301408" fg:w="2204220"/><text x="13.5527%" y="1695.50"></text></g><g><title>__x64_sys_access (5,242,788 samples, 0.03%)</title><rect x="13.3567%" y="1573" width="0.0260%" height="15" fill="rgb(246,31,12)" fg:x="2691189863" fg:w="5242788"/><text x="13.6067%" y="1583.50"></text></g><g><title>do_faccessat (5,242,788 samples, 0.03%)</title><rect x="13.3567%" y="1557" width="0.0260%" height="15" fill="rgb(213,154,6)" fg:x="2691189863" fg:w="5242788"/><text x="13.6067%" y="1567.50"></text></g><g><title>user_path_at_empty (3,452,431 samples, 0.02%)</title><rect x="13.3656%" y="1541" width="0.0171%" height="15" fill="rgb(222,163,29)" fg:x="2692980220" fg:w="3452431"/><text x="13.6156%" y="1551.50"></text></g><g><title>getname_flags (2,070,355 samples, 0.01%)</title><rect x="13.3725%" y="1525" width="0.0103%" height="15" fill="rgb(227,201,8)" fg:x="2694362296" fg:w="2070355"/><text x="13.6225%" y="1535.50"></text></g><g><title>uv_fs_access (7,097,844 samples, 0.04%)</title><rect x="13.3516%" y="1637" width="0.0352%" height="15" fill="rgb(233,9,32)" fg:x="2690152700" fg:w="7097844"/><text x="13.6016%" y="1647.50"></text></g><g><title>__GI___access (6,491,906 samples, 0.03%)</title><rect x="13.3546%" y="1621" width="0.0322%" height="15" fill="rgb(217,54,24)" fg:x="2690758638" fg:w="6491906"/><text x="13.6046%" y="1631.50"></text></g><g><title>entry_SYSCALL_64 (6,160,495 samples, 0.03%)</title><rect x="13.3562%" y="1605" width="0.0306%" height="15" fill="rgb(235,192,0)" fg:x="2691090049" fg:w="6160495"/><text x="13.6062%" y="1615.50"></text></g><g><title>do_syscall_64 (6,060,681 samples, 0.03%)</title><rect x="13.3567%" y="1589" width="0.0301%" height="15" fill="rgb(235,45,9)" fg:x="2691189863" fg:w="6060681"/><text x="13.6067%" y="1599.50"></text></g><g><title>Builtins_CallApiCallback (9,929,719 samples, 0.05%)</title><rect x="13.3447%" y="1669" width="0.0493%" height="15" fill="rgb(246,42,40)" fg:x="2688776404" fg:w="9929719"/><text x="13.5947%" y="1679.50"></text></g><g><title>node::fs::ExistsSync (9,278,692 samples, 0.05%)</title><rect x="13.3480%" y="1653" width="0.0461%" height="15" fill="rgb(248,111,24)" fg:x="2689427431" fg:w="9278692"/><text x="13.5980%" y="1663.50"></text></g><g><title>int node::fs::SyncCallAndThrowIf&lt;bool (*)(int), int (*)(uv_loop_s*, uv_fs_s*, char const*, void (*)(uv_fs_s*)), char*&gt; (2,480,710 samples, 0.01%)</title><rect x="13.4721%" y="1589" width="0.0123%" height="15" fill="rgb(249,65,22)" fg:x="2714437410" fg:w="2480710"/><text x="13.7221%" y="1599.50"></text></g><g><title>uv_fs_stat (2,480,710 samples, 0.01%)</title><rect x="13.4721%" y="1573" width="0.0123%" height="15" fill="rgb(238,111,51)" fg:x="2714437410" fg:w="2480710"/><text x="13.7221%" y="1583.50"></text></g><g><title>uv__fs_work (2,480,710 samples, 0.01%)</title><rect x="13.4721%" y="1557" width="0.0123%" height="15" fill="rgb(250,118,22)" fg:x="2714437410" fg:w="2480710"/><text x="13.7221%" y="1567.50"></text></g><g><title>uv__fs_statx (2,480,710 samples, 0.01%)</title><rect x="13.4721%" y="1541" width="0.0123%" height="15" fill="rgb(234,84,26)" fg:x="2714437410" fg:w="2480710"/><text x="13.7221%" y="1551.50"></text></g><g><title>syscall (2,480,710 samples, 0.01%)</title><rect x="13.4721%" y="1525" width="0.0123%" height="15" fill="rgb(243,172,12)" fg:x="2714437410" fg:w="2480710"/><text x="13.7221%" y="1535.50"></text></g><g><title>entry_SYSCALL_64 (2,480,710 samples, 0.01%)</title><rect x="13.4721%" y="1509" width="0.0123%" height="15" fill="rgb(236,150,49)" fg:x="2714437410" fg:w="2480710"/><text x="13.7221%" y="1519.50"></text></g><g><title>do_syscall_64 (2,480,710 samples, 0.01%)</title><rect x="13.4721%" y="1493" width="0.0123%" height="15" fill="rgb(225,197,26)" fg:x="2714437410" fg:w="2480710"/><text x="13.7221%" y="1503.50"></text></g><g><title>v8::Function::Call (99,524,942 samples, 0.49%)</title><rect x="12.9943%" y="1893" width="0.4940%" height="15" fill="rgb(214,17,42)" fg:x="2618168193" fg:w="99524942"/><text x="13.2443%" y="1903.50"></text></g><g><title>v8::internal::Execution::Call (99,524,942 samples, 0.49%)</title><rect x="12.9943%" y="1877" width="0.4940%" height="15" fill="rgb(224,165,40)" fg:x="2618168193" fg:w="99524942"/><text x="13.2443%" y="1887.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (99,524,942 samples, 0.49%)</title><rect x="12.9943%" y="1861" width="0.4940%" height="15" fill="rgb(246,100,4)" fg:x="2618168193" fg:w="99524942"/><text x="13.2443%" y="1871.50"></text></g><g><title>Builtins_JSEntry (99,524,942 samples, 0.49%)</title><rect x="12.9943%" y="1845" width="0.4940%" height="15" fill="rgb(222,103,0)" fg:x="2618168193" fg:w="99524942"/><text x="13.2443%" y="1855.50"></text></g><g><title>Builtins_JSEntryTrampoline (99,524,942 samples, 0.49%)</title><rect x="12.9943%" y="1829" width="0.4940%" height="15" fill="rgb(227,189,26)" fg:x="2618168193" fg:w="99524942"/><text x="13.2443%" y="1839.50"></text></g><g><title>[perf-51263.map] (99,524,942 samples, 0.49%)</title><rect x="12.9943%" y="1813" width="0.4940%" height="15" fill="rgb(214,202,17)" fg:x="2618168193" fg:w="99524942"/><text x="13.2443%" y="1823.50"></text></g><g><title>[perf-51263.map] (99,524,942 samples, 0.49%)</title><rect x="12.9943%" y="1797" width="0.4940%" height="15" fill="rgb(229,111,3)" fg:x="2618168193" fg:w="99524942"/><text x="13.2443%" y="1807.50"></text></g><g><title>[perf-51263.map] (99,524,942 samples, 0.49%)</title><rect x="12.9943%" y="1781" width="0.4940%" height="15" fill="rgb(229,172,15)" fg:x="2618168193" fg:w="99524942"/><text x="13.2443%" y="1791.50"></text></g><g><title>[perf-51263.map] (99,003,428 samples, 0.49%)</title><rect x="12.9969%" y="1765" width="0.4914%" height="15" fill="rgb(230,224,35)" fg:x="2618689707" fg:w="99003428"/><text x="13.2469%" y="1775.50"></text></g><g><title>[perf-51263.map] (95,017,570 samples, 0.47%)</title><rect x="13.0167%" y="1749" width="0.4716%" height="15" fill="rgb(251,141,6)" fg:x="2622675565" fg:w="95017570"/><text x="13.2667%" y="1759.50"></text></g><g><title>[perf-51263.map] (88,024,732 samples, 0.44%)</title><rect x="13.0514%" y="1733" width="0.4369%" height="15" fill="rgb(225,208,6)" fg:x="2629668403" fg:w="88024732"/><text x="13.3014%" y="1743.50"></text></g><g><title>[perf-51263.map] (68,203,267 samples, 0.34%)</title><rect x="13.1498%" y="1717" width="0.3385%" height="15" fill="rgb(246,181,16)" fg:x="2649489868" fg:w="68203267"/><text x="13.3998%" y="1727.50"></text></g><g><title>[perf-51263.map] (48,264,075 samples, 0.24%)</title><rect x="13.2487%" y="1701" width="0.2395%" height="15" fill="rgb(227,129,36)" fg:x="2669429060" fg:w="48264075"/><text x="13.4987%" y="1711.50"></text></g><g><title>[perf-51263.map] (34,097,083 samples, 0.17%)</title><rect x="13.3190%" y="1685" width="0.1692%" height="15" fill="rgb(248,117,24)" fg:x="2683596052" fg:w="34097083"/><text x="13.5690%" y="1695.50"></text></g><g><title>[perf-51263.map] (17,920,614 samples, 0.09%)</title><rect x="13.3993%" y="1669" width="0.0889%" height="15" fill="rgb(214,185,35)" fg:x="2699772521" fg:w="17920614"/><text x="13.6493%" y="1679.50"></text></g><g><title>[perf-51263.map] (8,081,059 samples, 0.04%)</title><rect x="13.4482%" y="1653" width="0.0401%" height="15" fill="rgb(236,150,34)" fg:x="2709612076" fg:w="8081059"/><text x="13.6982%" y="1663.50"></text></g><g><title>[perf-51263.map] (5,184,238 samples, 0.03%)</title><rect x="13.4625%" y="1637" width="0.0257%" height="15" fill="rgb(243,228,27)" fg:x="2712508897" fg:w="5184238"/><text x="13.7125%" y="1647.50"></text></g><g><title>Builtins_CallApiCallback (4,552,374 samples, 0.02%)</title><rect x="13.4657%" y="1621" width="0.0226%" height="15" fill="rgb(245,77,44)" fg:x="2713140761" fg:w="4552374"/><text x="13.7157%" y="1631.50"></text></g><g><title>node::fs::Stat (4,246,099 samples, 0.02%)</title><rect x="13.4672%" y="1605" width="0.0211%" height="15" fill="rgb(235,214,42)" fg:x="2713447036" fg:w="4246099"/><text x="13.7172%" y="1615.50"></text></g><g><title>node::MakeCallback (100,219,624 samples, 0.50%)</title><rect x="12.9943%" y="1925" width="0.4974%" height="15" fill="rgb(221,74,3)" fg:x="2618168193" fg:w="100219624"/><text x="13.2443%" y="1935.50"></text></g><g><title>node::InternalMakeCallback (100,219,624 samples, 0.50%)</title><rect x="12.9943%" y="1909" width="0.4974%" height="15" fill="rgb(206,121,29)" fg:x="2618168193" fg:w="100219624"/><text x="13.2443%" y="1919.50"></text></g><g><title>uv__run_check (109,995,756 samples, 0.55%)</title><rect x="12.9497%" y="1957" width="0.5459%" height="15" fill="rgb(249,131,53)" fg:x="2609173875" fg:w="109995756"/><text x="13.1997%" y="1967.50"></text></g><g><title>node::Environment::CheckImmediate (109,995,756 samples, 0.55%)</title><rect x="12.9497%" y="1941" width="0.5459%" height="15" fill="rgb(236,170,29)" fg:x="2609173875" fg:w="109995756"/><text x="13.1997%" y="1951.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_BuiltinExit (2,187,107 samples, 0.01%)</title><rect x="13.5207%" y="1733" width="0.0109%" height="15" fill="rgb(247,96,15)" fg:x="2724234318" fg:w="2187107"/><text x="13.7707%" y="1743.50"></text></g><g><title>v8::internal::Builtin_JsonStringify (2,187,107 samples, 0.01%)</title><rect x="13.5207%" y="1717" width="0.0109%" height="15" fill="rgb(211,210,7)" fg:x="2724234318" fg:w="2187107"/><text x="13.7707%" y="1727.50"></text></g><g><title>v8::internal::JsonStringify (2,187,107 samples, 0.01%)</title><rect x="13.5207%" y="1701" width="0.0109%" height="15" fill="rgb(240,88,50)" fg:x="2724234318" fg:w="2187107"/><text x="13.7707%" y="1711.50"></text></g><g><title>v8::internal::JsonStringifier::Stringify (2,187,107 samples, 0.01%)</title><rect x="13.5207%" y="1685" width="0.0109%" height="15" fill="rgb(209,229,26)" fg:x="2724234318" fg:w="2187107"/><text x="13.7707%" y="1695.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (2,187,107 samples, 0.01%)</title><rect x="13.5207%" y="1669" width="0.0109%" height="15" fill="rgb(210,68,23)" fg:x="2724234318" fg:w="2187107"/><text x="13.7707%" y="1679.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeString (2,187,107 samples, 0.01%)</title><rect x="13.5207%" y="1653" width="0.0109%" height="15" fill="rgb(229,180,13)" fg:x="2724234318" fg:w="2187107"/><text x="13.7707%" y="1663.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_BuiltinExit (3,444,978 samples, 0.02%)</title><rect x="13.5387%" y="1717" width="0.0171%" height="15" fill="rgb(236,53,44)" fg:x="2727861974" fg:w="3444978"/><text x="13.7887%" y="1727.50"></text></g><g><title>v8::internal::Builtin_JsonStringify (2,709,651 samples, 0.01%)</title><rect x="13.5424%" y="1701" width="0.0134%" height="15" fill="rgb(244,214,29)" fg:x="2728597301" fg:w="2709651"/><text x="13.7924%" y="1711.50"></text></g><g><title>v8::internal::JsonStringify (2,709,651 samples, 0.01%)</title><rect x="13.5424%" y="1685" width="0.0134%" height="15" fill="rgb(220,75,29)" fg:x="2728597301" fg:w="2709651"/><text x="13.7924%" y="1695.50"></text></g><g><title>v8::internal::JsonStringifier::Stringify (2,355,112 samples, 0.01%)</title><rect x="13.5441%" y="1669" width="0.0117%" height="15" fill="rgb(214,183,37)" fg:x="2728951840" fg:w="2355112"/><text x="13.7941%" y="1679.50"></text></g><g><title>[perf-1847.map] (9,773,700 samples, 0.05%)</title><rect x="13.5143%" y="1845" width="0.0485%" height="15" fill="rgb(239,117,29)" fg:x="2722946109" fg:w="9773700"/><text x="13.7643%" y="1855.50"></text></g><g><title>[perf-1847.map] (9,773,700 samples, 0.05%)</title><rect x="13.5143%" y="1829" width="0.0485%" height="15" fill="rgb(237,171,35)" fg:x="2722946109" fg:w="9773700"/><text x="13.7643%" y="1839.50"></text></g><g><title>[perf-1847.map] (9,773,700 samples, 0.05%)</title><rect x="13.5143%" y="1813" width="0.0485%" height="15" fill="rgb(229,178,53)" fg:x="2722946109" fg:w="9773700"/><text x="13.7643%" y="1823.50"></text></g><g><title>[perf-1847.map] (9,773,700 samples, 0.05%)</title><rect x="13.5143%" y="1797" width="0.0485%" height="15" fill="rgb(210,102,19)" fg:x="2722946109" fg:w="9773700"/><text x="13.7643%" y="1807.50"></text></g><g><title>[perf-1847.map] (9,637,875 samples, 0.05%)</title><rect x="13.5150%" y="1781" width="0.0478%" height="15" fill="rgb(235,127,22)" fg:x="2723081934" fg:w="9637875"/><text x="13.7650%" y="1791.50"></text></g><g><title>[perf-1847.map] (9,378,397 samples, 0.05%)</title><rect x="13.5163%" y="1765" width="0.0465%" height="15" fill="rgb(244,31,31)" fg:x="2723341412" fg:w="9378397"/><text x="13.7663%" y="1775.50"></text></g><g><title>[perf-1847.map] (8,696,525 samples, 0.04%)</title><rect x="13.5197%" y="1749" width="0.0432%" height="15" fill="rgb(231,43,21)" fg:x="2724023284" fg:w="8696525"/><text x="13.7697%" y="1759.50"></text></g><g><title>[perf-1847.map] (4,995,087 samples, 0.02%)</title><rect x="13.5380%" y="1733" width="0.0248%" height="15" fill="rgb(217,131,35)" fg:x="2727724722" fg:w="4995087"/><text x="13.7880%" y="1743.50"></text></g><g><title>[perf-1865.map] (3,411,637 samples, 0.02%)</title><rect x="13.5870%" y="1749" width="0.0169%" height="15" fill="rgb(221,149,4)" fg:x="2737597007" fg:w="3411637"/><text x="13.8370%" y="1759.50"></text></g><g><title>[perf-1865.map] (2,502,433 samples, 0.01%)</title><rect x="13.5916%" y="1733" width="0.0124%" height="15" fill="rgb(232,170,28)" fg:x="2738506211" fg:w="2502433"/><text x="13.8416%" y="1743.50"></text></g><g><title>[perf-1865.map] (2,328,639 samples, 0.01%)</title><rect x="13.5924%" y="1717" width="0.0116%" height="15" fill="rgb(238,56,10)" fg:x="2738680005" fg:w="2328639"/><text x="13.8424%" y="1727.50"></text></g><g><title>[perf-1865.map] (8,519,866 samples, 0.04%)</title><rect x="13.5628%" y="1845" width="0.0423%" height="15" fill="rgb(235,196,14)" fg:x="2732719809" fg:w="8519866"/><text x="13.8128%" y="1855.50"></text></g><g><title>[perf-1865.map] (8,046,861 samples, 0.04%)</title><rect x="13.5652%" y="1829" width="0.0399%" height="15" fill="rgb(216,45,48)" fg:x="2733192814" fg:w="8046861"/><text x="13.8152%" y="1839.50"></text></g><g><title>[perf-1865.map] (7,919,870 samples, 0.04%)</title><rect x="13.5658%" y="1813" width="0.0393%" height="15" fill="rgb(238,213,17)" fg:x="2733319805" fg:w="7919870"/><text x="13.8158%" y="1823.50"></text></g><g><title>[perf-1865.map] (6,895,136 samples, 0.03%)</title><rect x="13.5709%" y="1797" width="0.0342%" height="15" fill="rgb(212,13,2)" fg:x="2734344539" fg:w="6895136"/><text x="13.8209%" y="1807.50"></text></g><g><title>[perf-1865.map] (6,895,136 samples, 0.03%)</title><rect x="13.5709%" y="1781" width="0.0342%" height="15" fill="rgb(240,114,20)" fg:x="2734344539" fg:w="6895136"/><text x="13.8209%" y="1791.50"></text></g><g><title>[perf-1865.map] (4,893,223 samples, 0.02%)</title><rect x="13.5808%" y="1765" width="0.0243%" height="15" fill="rgb(228,41,40)" fg:x="2736346452" fg:w="4893223"/><text x="13.8308%" y="1775.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_BuiltinExit (3,040,492 samples, 0.02%)</title><rect x="13.6178%" y="1653" width="0.0151%" height="15" fill="rgb(244,132,35)" fg:x="2743784630" fg:w="3040492"/><text x="13.8678%" y="1663.50"></text></g><g><title>v8::internal::Builtin_JsonStringify (2,752,192 samples, 0.01%)</title><rect x="13.6192%" y="1637" width="0.0137%" height="15" fill="rgb(253,189,4)" fg:x="2744072930" fg:w="2752192"/><text x="13.8692%" y="1647.50"></text></g><g><title>v8::internal::JsonStringify (2,752,192 samples, 0.01%)</title><rect x="13.6192%" y="1621" width="0.0137%" height="15" fill="rgb(224,37,19)" fg:x="2744072930" fg:w="2752192"/><text x="13.8692%" y="1631.50"></text></g><g><title>v8::internal::JsonStringifier::Stringify (2,188,750 samples, 0.01%)</title><rect x="13.6220%" y="1605" width="0.0109%" height="15" fill="rgb(235,223,18)" fg:x="2744636372" fg:w="2188750"/><text x="13.8720%" y="1615.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_BuiltinExit (4,126,613 samples, 0.02%)</title><rect x="13.6433%" y="1605" width="0.0205%" height="15" fill="rgb(235,163,25)" fg:x="2748928572" fg:w="4126613"/><text x="13.8933%" y="1615.50"></text></g><g><title>v8::internal::Builtin_JsonStringify (2,938,284 samples, 0.01%)</title><rect x="13.6492%" y="1589" width="0.0146%" height="15" fill="rgb(217,145,28)" fg:x="2750116901" fg:w="2938284"/><text x="13.8992%" y="1599.50"></text></g><g><title>v8::internal::JsonStringify (2,938,284 samples, 0.01%)</title><rect x="13.6492%" y="1573" width="0.0146%" height="15" fill="rgb(223,223,32)" fg:x="2750116901" fg:w="2938284"/><text x="13.8992%" y="1583.50"></text></g><g><title>v8::internal::JsonStringifier::Stringify (2,938,284 samples, 0.01%)</title><rect x="13.6492%" y="1557" width="0.0146%" height="15" fill="rgb(227,189,39)" fg:x="2750116901" fg:w="2938284"/><text x="13.8992%" y="1567.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (2,938,284 samples, 0.01%)</title><rect x="13.6492%" y="1541" width="0.0146%" height="15" fill="rgb(248,10,22)" fg:x="2750116901" fg:w="2938284"/><text x="13.8992%" y="1551.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeString (2,938,284 samples, 0.01%)</title><rect x="13.6492%" y="1525" width="0.0146%" height="15" fill="rgb(248,46,39)" fg:x="2750116901" fg:w="2938284"/><text x="13.8992%" y="1535.50"></text></g><g><title>[perf-50210.map] (6,425,060 samples, 0.03%)</title><rect x="13.6334%" y="1653" width="0.0319%" height="15" fill="rgb(248,113,48)" fg:x="2746931414" fg:w="6425060"/><text x="13.8834%" y="1663.50"></text></g><g><title>[perf-50210.map] (5,357,211 samples, 0.03%)</title><rect x="13.6387%" y="1637" width="0.0266%" height="15" fill="rgb(245,16,25)" fg:x="2747999263" fg:w="5357211"/><text x="13.8887%" y="1647.50"></text></g><g><title>[perf-50210.map] (4,427,902 samples, 0.02%)</title><rect x="13.6433%" y="1621" width="0.0220%" height="15" fill="rgb(249,152,16)" fg:x="2748928572" fg:w="4427902"/><text x="13.8933%" y="1631.50"></text></g><g><title>uv__run_timers (34,772,670 samples, 0.17%)</title><rect x="13.4956%" y="1957" width="0.1726%" height="15" fill="rgb(250,16,1)" fg:x="2719169631" fg:w="34772670"/><text x="13.7456%" y="1967.50"></text></g><g><title>node::Environment::RunTimers (34,772,670 samples, 0.17%)</title><rect x="13.4956%" y="1941" width="0.1726%" height="15" fill="rgb(249,138,3)" fg:x="2719169631" fg:w="34772670"/><text x="13.7456%" y="1951.50"></text></g><g><title>v8::Function::Call (33,222,162 samples, 0.16%)</title><rect x="13.5033%" y="1925" width="0.1649%" height="15" fill="rgb(227,71,41)" fg:x="2720720139" fg:w="33222162"/><text x="13.7533%" y="1935.50"></text></g><g><title>v8::internal::Execution::Call (33,222,162 samples, 0.16%)</title><rect x="13.5033%" y="1909" width="0.1649%" height="15" fill="rgb(209,184,23)" fg:x="2720720139" fg:w="33222162"/><text x="13.7533%" y="1919.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (33,222,162 samples, 0.16%)</title><rect x="13.5033%" y="1893" width="0.1649%" height="15" fill="rgb(223,215,31)" fg:x="2720720139" fg:w="33222162"/><text x="13.7533%" y="1903.50"></text></g><g><title>Builtins_JSEntry (33,155,012 samples, 0.16%)</title><rect x="13.5036%" y="1877" width="0.1646%" height="15" fill="rgb(210,146,28)" fg:x="2720787289" fg:w="33155012"/><text x="13.7536%" y="1887.50"></text></g><g><title>Builtins_JSEntryTrampoline (33,155,012 samples, 0.16%)</title><rect x="13.5036%" y="1861" width="0.1646%" height="15" fill="rgb(209,183,41)" fg:x="2720787289" fg:w="33155012"/><text x="13.7536%" y="1871.50"></text></g><g><title>[perf-50210.map] (12,084,102 samples, 0.06%)</title><rect x="13.6082%" y="1845" width="0.0600%" height="15" fill="rgb(209,224,45)" fg:x="2741858199" fg:w="12084102"/><text x="13.8582%" y="1855.50"></text></g><g><title>[perf-50210.map] (12,084,102 samples, 0.06%)</title><rect x="13.6082%" y="1829" width="0.0600%" height="15" fill="rgb(224,209,51)" fg:x="2741858199" fg:w="12084102"/><text x="13.8582%" y="1839.50"></text></g><g><title>[perf-50210.map] (12,084,102 samples, 0.06%)</title><rect x="13.6082%" y="1813" width="0.0600%" height="15" fill="rgb(223,17,39)" fg:x="2741858199" fg:w="12084102"/><text x="13.8582%" y="1823.50"></text></g><g><title>[perf-50210.map] (12,084,102 samples, 0.06%)</title><rect x="13.6082%" y="1797" width="0.0600%" height="15" fill="rgb(234,204,37)" fg:x="2741858199" fg:w="12084102"/><text x="13.8582%" y="1807.50"></text></g><g><title>[perf-50210.map] (12,084,102 samples, 0.06%)</title><rect x="13.6082%" y="1781" width="0.0600%" height="15" fill="rgb(236,120,5)" fg:x="2741858199" fg:w="12084102"/><text x="13.8582%" y="1791.50"></text></g><g><title>[perf-50210.map] (12,084,102 samples, 0.06%)</title><rect x="13.6082%" y="1765" width="0.0600%" height="15" fill="rgb(248,97,27)" fg:x="2741858199" fg:w="12084102"/><text x="13.8582%" y="1775.50"></text></g><g><title>[perf-50210.map] (11,899,088 samples, 0.06%)</title><rect x="13.6091%" y="1749" width="0.0591%" height="15" fill="rgb(240,66,17)" fg:x="2742043213" fg:w="11899088"/><text x="13.8591%" y="1759.50"></text></g><g><title>[perf-50210.map] (11,560,834 samples, 0.06%)</title><rect x="13.6108%" y="1733" width="0.0574%" height="15" fill="rgb(210,79,3)" fg:x="2742381467" fg:w="11560834"/><text x="13.8608%" y="1743.50"></text></g><g><title>[perf-50210.map] (11,019,276 samples, 0.05%)</title><rect x="13.6135%" y="1717" width="0.0547%" height="15" fill="rgb(214,176,27)" fg:x="2742923025" fg:w="11019276"/><text x="13.8635%" y="1727.50"></text></g><g><title>[perf-50210.map] (10,750,396 samples, 0.05%)</title><rect x="13.6148%" y="1701" width="0.0534%" height="15" fill="rgb(235,185,3)" fg:x="2743191905" fg:w="10750396"/><text x="13.8648%" y="1711.50"></text></g><g><title>[perf-50210.map] (10,750,396 samples, 0.05%)</title><rect x="13.6148%" y="1685" width="0.0534%" height="15" fill="rgb(227,24,12)" fg:x="2743191905" fg:w="10750396"/><text x="13.8648%" y="1695.50"></text></g><g><title>[perf-50210.map] (10,157,671 samples, 0.05%)</title><rect x="13.6178%" y="1669" width="0.0504%" height="15" fill="rgb(252,169,48)" fg:x="2743784630" fg:w="10157671"/><text x="13.8678%" y="1679.50"></text></g><g><title>__libc_start_call_main (610,930,295 samples, 3.03%)</title><rect x="10.6377%" y="2053" width="3.0321%" height="15" fill="rgb(212,65,1)" fg:x="2143348009" fg:w="610930295"/><text x="10.8877%" y="2063.50">__l..</text></g><g><title>node::Start (610,930,295 samples, 3.03%)</title><rect x="10.6377%" y="2037" width="3.0321%" height="15" fill="rgb(242,39,24)" fg:x="2143348009" fg:w="610930295"/><text x="10.8877%" y="2047.50">nod..</text></g><g><title>node::NodeMainInstance::Run (610,930,295 samples, 3.03%)</title><rect x="10.6377%" y="2021" width="3.0321%" height="15" fill="rgb(249,32,23)" fg:x="2143348009" fg:w="610930295"/><text x="10.8877%" y="2031.50">nod..</text></g><g><title>node::NodeMainInstance::Run (610,930,295 samples, 3.03%)</title><rect x="10.6377%" y="2005" width="3.0321%" height="15" fill="rgb(251,195,23)" fg:x="2143348009" fg:w="610930295"/><text x="10.8877%" y="2015.50">nod..</text></g><g><title>node::SpinEventLoopInternal (610,930,295 samples, 3.03%)</title><rect x="10.6377%" y="1989" width="3.0321%" height="15" fill="rgb(236,174,8)" fg:x="2143348009" fg:w="610930295"/><text x="10.8877%" y="1999.50">nod..</text></g><g><title>uv_run (610,579,930 samples, 3.03%)</title><rect x="10.6394%" y="1973" width="3.0304%" height="15" fill="rgb(220,197,8)" fg:x="2143698374" fg:w="610579930"/><text x="10.8894%" y="1983.50">uv_..</text></g><g><title>_int_free (28,495,647 samples, 0.14%)</title><rect x="13.6804%" y="2053" width="0.1414%" height="15" fill="rgb(240,108,37)" fg:x="2756416981" fg:w="28495647"/><text x="13.9304%" y="2063.50"></text></g><g><title>__handle_mm_fault (2,317,760 samples, 0.01%)</title><rect x="14.3762%" y="1973" width="0.0115%" height="15" fill="rgb(232,176,24)" fg:x="2896605676" fg:w="2317760"/><text x="14.6262%" y="1983.50"></text></g><g><title>handle_pte_fault (2,317,760 samples, 0.01%)</title><rect x="14.3762%" y="1957" width="0.0115%" height="15" fill="rgb(243,35,29)" fg:x="2896605676" fg:w="2317760"/><text x="14.6262%" y="1967.50"></text></g><g><title>handle_mm_fault (3,106,850 samples, 0.02%)</title><rect x="14.3762%" y="1989" width="0.0154%" height="15" fill="rgb(210,37,18)" fg:x="2896605676" fg:w="3106850"/><text x="14.6262%" y="1999.50"></text></g><g><title>asm_exc_page_fault (3,927,012 samples, 0.02%)</title><rect x="14.3732%" y="2037" width="0.0195%" height="15" fill="rgb(224,184,40)" fg:x="2896005740" fg:w="3927012"/><text x="14.6232%" y="2047.50"></text></g><g><title>exc_page_fault (3,755,142 samples, 0.02%)</title><rect x="14.3741%" y="2021" width="0.0186%" height="15" fill="rgb(236,39,29)" fg:x="2896177610" fg:w="3755142"/><text x="14.6241%" y="2031.50"></text></g><g><title>do_user_addr_fault (3,542,202 samples, 0.02%)</title><rect x="14.3752%" y="2005" width="0.0176%" height="15" fill="rgb(232,48,39)" fg:x="2896390550" fg:w="3542202"/><text x="14.6252%" y="2015.50"></text></g><g><title>_int_malloc (116,058,223 samples, 0.58%)</title><rect x="13.8219%" y="2053" width="0.5760%" height="15" fill="rgb(236,34,42)" fg:x="2784912628" fg:w="116058223"/><text x="14.0719%" y="2063.50"></text></g><g><title>cfree@GLIBC_2.2.5 (49,997,501 samples, 0.25%)</title><rect x="14.4019%" y="2053" width="0.2481%" height="15" fill="rgb(243,106,37)" fg:x="2901788922" fg:w="49997501"/><text x="14.6519%" y="2063.50"></text></g><g><title>malloc (162,131,010 samples, 0.80%)</title><rect x="14.6537%" y="2053" width="0.8047%" height="15" fill="rgb(218,96,6)" fg:x="2952508582" fg:w="162131010"/><text x="14.9037%" y="2063.50"></text></g><g><title>select_task_rq_fair (2,109,368 samples, 0.01%)</title><rect x="15.5042%" y="1909" width="0.0105%" height="15" fill="rgb(235,130,12)" fg:x="3123883713" fg:w="2109368"/><text x="15.7542%" y="1919.50"></text></g><g><title>__x64_sys_futex (12,488,021 samples, 0.06%)</title><rect x="15.4666%" y="2005" width="0.0620%" height="15" fill="rgb(231,95,0)" fg:x="3116299655" fg:w="12488021"/><text x="15.7166%" y="2015.50"></text></g><g><title>__se_sys_futex (12,488,021 samples, 0.06%)</title><rect x="15.4666%" y="1989" width="0.0620%" height="15" fill="rgb(228,12,23)" fg:x="3116299655" fg:w="12488021"/><text x="15.7166%" y="1999.50"></text></g><g><title>do_futex (12,005,829 samples, 0.06%)</title><rect x="15.4690%" y="1973" width="0.0596%" height="15" fill="rgb(216,12,1)" fg:x="3116781847" fg:w="12005829"/><text x="15.7190%" y="1983.50"></text></g><g><title>futex_wake (12,005,829 samples, 0.06%)</title><rect x="15.4690%" y="1957" width="0.0596%" height="15" fill="rgb(219,59,3)" fg:x="3116781847" fg:w="12005829"/><text x="15.7190%" y="1967.50"></text></g><g><title>wake_up_q (6,967,153 samples, 0.03%)</title><rect x="15.4940%" y="1941" width="0.0346%" height="15" fill="rgb(215,208,46)" fg:x="3121820523" fg:w="6967153"/><text x="15.7440%" y="1951.50"></text></g><g><title>try_to_wake_up (6,460,212 samples, 0.03%)</title><rect x="15.4965%" y="1925" width="0.0321%" height="15" fill="rgb(254,224,29)" fg:x="3122327464" fg:w="6460212"/><text x="15.7465%" y="1935.50"></text></g><g><title>ttwu_queue (2,794,595 samples, 0.01%)</title><rect x="15.5147%" y="1909" width="0.0139%" height="15" fill="rgb(232,14,29)" fg:x="3125993081" fg:w="2794595"/><text x="15.7647%" y="1919.50"></text></g><g><title>ttwu_queue_wakelist (2,177,708 samples, 0.01%)</title><rect x="15.5178%" y="1893" width="0.0108%" height="15" fill="rgb(208,45,52)" fg:x="3126609968" fg:w="2177708"/><text x="15.7678%" y="1903.50"></text></g><g><title>__smp_call_single_queue (2,177,708 samples, 0.01%)</title><rect x="15.5178%" y="1877" width="0.0108%" height="15" fill="rgb(234,191,28)" fg:x="3126609968" fg:w="2177708"/><text x="15.7678%" y="1887.50"></text></g><g><title>native_send_call_func_single_ipi (2,177,708 samples, 0.01%)</title><rect x="15.5178%" y="1861" width="0.0108%" height="15" fill="rgb(244,67,43)" fg:x="3126609968" fg:w="2177708"/><text x="15.7678%" y="1871.50"></text></g><g><title>default_send_IPI_single_phys (2,177,708 samples, 0.01%)</title><rect x="15.5178%" y="1845" width="0.0108%" height="15" fill="rgb(236,189,24)" fg:x="3126609968" fg:w="2177708"/><text x="15.7678%" y="1855.50"></text></g><g><title>entry_SYSCALL_64 (14,218,471 samples, 0.07%)</title><rect x="15.4637%" y="2037" width="0.0706%" height="15" fill="rgb(239,214,33)" fg:x="3115712622" fg:w="14218471"/><text x="15.7137%" y="2047.50"></text></g><g><title>do_syscall_64 (14,218,471 samples, 0.07%)</title><rect x="15.4637%" y="2021" width="0.0706%" height="15" fill="rgb(226,176,41)" fg:x="3115712622" fg:w="14218471"/><text x="15.7137%" y="2031.50"></text></g><g><title>pthread_cond_broadcast@@GLIBC_2.3.2 (17,884,684 samples, 0.09%)</title><rect x="15.4637%" y="2053" width="0.0888%" height="15" fill="rgb(248,47,8)" fg:x="3115712622" fg:w="17884684"/><text x="15.7137%" y="2063.50"></text></g><g><title>entry_ibpb (3,666,213 samples, 0.02%)</title><rect x="15.5342%" y="2037" width="0.0182%" height="15" fill="rgb(218,81,44)" fg:x="3129931093" fg:w="3666213"/><text x="15.7842%" y="2047.50"></text></g><g><title>__x64_sys_futex (7,012,016 samples, 0.03%)</title><rect x="15.5543%" y="2005" width="0.0348%" height="15" fill="rgb(213,98,6)" fg:x="3133979827" fg:w="7012016"/><text x="15.8043%" y="2015.50"></text></g><g><title>__se_sys_futex (7,012,016 samples, 0.03%)</title><rect x="15.5543%" y="1989" width="0.0348%" height="15" fill="rgb(222,85,22)" fg:x="3133979827" fg:w="7012016"/><text x="15.8043%" y="1999.50"></text></g><g><title>do_futex (7,012,016 samples, 0.03%)</title><rect x="15.5543%" y="1973" width="0.0348%" height="15" fill="rgb(239,46,39)" fg:x="3133979827" fg:w="7012016"/><text x="15.8043%" y="1983.50"></text></g><g><title>futex_wake (7,012,016 samples, 0.03%)</title><rect x="15.5543%" y="1957" width="0.0348%" height="15" fill="rgb(237,12,29)" fg:x="3133979827" fg:w="7012016"/><text x="15.8043%" y="1967.50"></text></g><g><title>wake_up_q (5,525,555 samples, 0.03%)</title><rect x="15.5617%" y="1941" width="0.0274%" height="15" fill="rgb(214,77,8)" fg:x="3135466288" fg:w="5525555"/><text x="15.8117%" y="1951.50"></text></g><g><title>try_to_wake_up (4,108,438 samples, 0.02%)</title><rect x="15.5688%" y="1925" width="0.0204%" height="15" fill="rgb(217,168,37)" fg:x="3136883405" fg:w="4108438"/><text x="15.8188%" y="1935.50"></text></g><g><title>ttwu_queue (2,758,260 samples, 0.01%)</title><rect x="15.5755%" y="1909" width="0.0137%" height="15" fill="rgb(221,217,23)" fg:x="3138233583" fg:w="2758260"/><text x="15.8255%" y="1919.50"></text></g><g><title>ttwu_queue_wakelist (2,758,260 samples, 0.01%)</title><rect x="15.5755%" y="1893" width="0.0137%" height="15" fill="rgb(243,229,36)" fg:x="3138233583" fg:w="2758260"/><text x="15.8255%" y="1903.50"></text></g><g><title>sched_clock_cpu (2,109,033 samples, 0.01%)</title><rect x="15.5787%" y="1877" width="0.0105%" height="15" fill="rgb(251,163,40)" fg:x="3138882810" fg:w="2109033"/><text x="15.8287%" y="1887.50"></text></g><g><title>entry_SYSCALL_64 (10,646,318 samples, 0.05%)</title><rect x="15.5543%" y="2037" width="0.0528%" height="15" fill="rgb(237,222,12)" fg:x="3133979827" fg:w="10646318"/><text x="15.8043%" y="2047.50"></text></g><g><title>do_syscall_64 (10,646,318 samples, 0.05%)</title><rect x="15.5543%" y="2021" width="0.0528%" height="15" fill="rgb(248,132,6)" fg:x="3133979827" fg:w="10646318"/><text x="15.8043%" y="2031.50"></text></g><g><title>syscall_exit_to_user_mode (2,922,034 samples, 0.01%)</title><rect x="15.5927%" y="2005" width="0.0145%" height="15" fill="rgb(227,167,50)" fg:x="3141704111" fg:w="2922034"/><text x="15.8427%" y="2015.50"></text></g><g><title>pthread_cond_signal@@GLIBC_2.3.2 (15,448,358 samples, 0.08%)</title><rect x="15.5524%" y="2053" width="0.0767%" height="15" fill="rgb(242,84,37)" fg:x="3133597306" fg:w="15448358"/><text x="15.8024%" y="2063.50"></text></g><g><title>entry_ibpb (4,419,519 samples, 0.02%)</title><rect x="15.6072%" y="2037" width="0.0219%" height="15" fill="rgb(212,4,50)" fg:x="3144626145" fg:w="4419519"/><text x="15.8572%" y="2047.50"></text></g><g><title>std::_Function_handler&lt;void (), v8::internal::ArrayBufferSweeper::RequestSweep(v8::internal::ArrayBufferSweeper::SweepingType, v8::internal::ArrayBufferSweeper::TreatAllYoungAsPromoted)::{lambda()#1}&gt;::_M_invoke (6,412,313 samples, 0.03%)</title><rect x="15.6294%" y="2021" width="0.0318%" height="15" fill="rgb(230,228,32)" fg:x="3149112427" fg:w="6412313"/><text x="15.8794%" y="2031.50"></text></g><g><title>v8::internal::ArrayBufferSweeper::SweepingJob::SweepYoung (6,412,313 samples, 0.03%)</title><rect x="15.6294%" y="2005" width="0.0318%" height="15" fill="rgb(248,217,23)" fg:x="3149112427" fg:w="6412313"/><text x="15.8794%" y="2015.50"></text></g><g><title>std::_Sp_counted_deleter&lt;v8::internal::BackingStore*, std::default_delete&lt;v8::internal::BackingStore&gt;, std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (3,242,905 samples, 0.02%)</title><rect x="15.6452%" y="1989" width="0.0161%" height="15" fill="rgb(238,197,32)" fg:x="3152281835" fg:w="3242905"/><text x="15.8952%" y="1999.50"></text></g><g><title>v8::internal::compiler::GraphReducer::ReduceTop (2,089,365 samples, 0.01%)</title><rect x="15.6633%" y="1909" width="0.0104%" height="15" fill="rgb(236,106,1)" fg:x="3155936650" fg:w="2089365"/><text x="15.9133%" y="1919.50"></text></g><g><title>v8::internal::compiler::GraphReducer::Reduce (2,089,365 samples, 0.01%)</title><rect x="15.6633%" y="1893" width="0.0104%" height="15" fill="rgb(219,228,13)" fg:x="3155936650" fg:w="2089365"/><text x="15.9133%" y="1903.50"></text></g><g><title>v8::internal::compiler::(anonymous namespace)::SourcePositionWrapper::Reduce (2,089,365 samples, 0.01%)</title><rect x="15.6633%" y="1877" width="0.0104%" height="15" fill="rgb(238,30,35)" fg:x="3155936650" fg:w="2089365"/><text x="15.9133%" y="1887.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::CreateGraph (4,605,603 samples, 0.02%)</title><rect x="15.6613%" y="1957" width="0.0229%" height="15" fill="rgb(236,70,23)" fg:x="3155524740" fg:w="4605603"/><text x="15.9113%" y="1967.50"></text></g><g><title>v8::internal::compiler::InliningPhase::Run (4,193,693 samples, 0.02%)</title><rect x="15.6633%" y="1941" width="0.0208%" height="15" fill="rgb(249,104,48)" fg:x="3155936650" fg:w="4193693"/><text x="15.9133%" y="1951.50"></text></g><g><title>v8::internal::compiler::GraphReducer::ReduceNode (4,193,693 samples, 0.02%)</title><rect x="15.6633%" y="1925" width="0.0208%" height="15" fill="rgb(254,117,50)" fg:x="3155936650" fg:w="4193693"/><text x="15.9133%" y="1935.50"></text></g><g><title>v8::internal::compiler::JSInliningHeuristic::Finalize (2,104,328 samples, 0.01%)</title><rect x="15.6737%" y="1909" width="0.0104%" height="15" fill="rgb(223,152,4)" fg:x="3158026015" fg:w="2104328"/><text x="15.9237%" y="1919.50"></text></g><g><title>v8::internal::compiler::JSInliningHeuristic::InlineCandidate (2,104,328 samples, 0.01%)</title><rect x="15.6737%" y="1893" width="0.0104%" height="15" fill="rgb(245,6,2)" fg:x="3158026015" fg:w="2104328"/><text x="15.9237%" y="1903.50"></text></g><g><title>v8::internal::compiler::JSInliner::ReduceJSCall (2,104,328 samples, 0.01%)</title><rect x="15.6737%" y="1877" width="0.0104%" height="15" fill="rgb(249,150,24)" fg:x="3158026015" fg:w="2104328"/><text x="15.9237%" y="1887.50"></text></g><g><title>v8::internal::compiler::BuildGraphFromBytecode (2,104,328 samples, 0.01%)</title><rect x="15.6737%" y="1861" width="0.0104%" height="15" fill="rgb(228,185,42)" fg:x="3158026015" fg:w="2104328"/><text x="15.9237%" y="1871.50"></text></g><g><title>v8::internal::compiler::LoadEliminationPhase::Run (2,376,321 samples, 0.01%)</title><rect x="15.7034%" y="1941" width="0.0118%" height="15" fill="rgb(226,39,33)" fg:x="3164022818" fg:w="2376321"/><text x="15.9534%" y="1951.50"></text></g><g><title>v8::internal::compiler::GraphReducer::ReduceNode (2,376,321 samples, 0.01%)</title><rect x="15.7034%" y="1925" width="0.0118%" height="15" fill="rgb(221,166,19)" fg:x="3164022818" fg:w="2376321"/><text x="15.9534%" y="1935.50"></text></g><g><title>v8::internal::compiler::GraphReducer::ReduceTop (2,376,321 samples, 0.01%)</title><rect x="15.7034%" y="1909" width="0.0118%" height="15" fill="rgb(209,109,2)" fg:x="3164022818" fg:w="2376321"/><text x="15.9534%" y="1919.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::SelectInstructions (2,674,873 samples, 0.01%)</title><rect x="15.7238%" y="1941" width="0.0133%" height="15" fill="rgb(252,216,26)" fg:x="3168121876" fg:w="2674873"/><text x="15.9738%" y="1951.50"></text></g><g><title>v8::internal::OptimizingCompileDispatcher::CompileTask::RunInternal (17,276,866 samples, 0.09%)</title><rect x="15.6613%" y="2021" width="0.0857%" height="15" fill="rgb(227,173,36)" fg:x="3155524740" fg:w="17276866"/><text x="15.9113%" y="2031.50"></text></g><g><title>v8::internal::OptimizingCompileDispatcher::CompileNext (17,276,866 samples, 0.09%)</title><rect x="15.6613%" y="2005" width="0.0857%" height="15" fill="rgb(209,90,7)" fg:x="3155524740" fg:w="17276866"/><text x="15.9113%" y="2015.50"></text></g><g><title>v8::internal::OptimizedCompilationJob::ExecuteJob (17,276,866 samples, 0.09%)</title><rect x="15.6613%" y="1989" width="0.0857%" height="15" fill="rgb(250,194,11)" fg:x="3155524740" fg:w="17276866"/><text x="15.9113%" y="1999.50"></text></g><g><title>v8::internal::compiler::PipelineCompilationJob::ExecuteJobImpl (17,276,866 samples, 0.09%)</title><rect x="15.6613%" y="1973" width="0.0857%" height="15" fill="rgb(220,72,50)" fg:x="3155524740" fg:w="17276866"/><text x="15.9113%" y="1983.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::OptimizeGraph (12,671,263 samples, 0.06%)</title><rect x="15.6841%" y="1957" width="0.0629%" height="15" fill="rgb(222,106,48)" fg:x="3160130343" fg:w="12671263"/><text x="15.9341%" y="1967.50"></text></g><g><title>node::(anonymous namespace)::PlatformWorkerThread (26,257,092 samples, 0.13%)</title><rect x="15.6291%" y="2037" width="0.1303%" height="15" fill="rgb(216,220,45)" fg:x="3149045664" fg:w="26257092"/><text x="15.8791%" y="2047.50"></text></g><g><title>v8::platform::DefaultJobWorker::Run (2,501,150 samples, 0.01%)</title><rect x="15.7470%" y="2021" width="0.0124%" height="15" fill="rgb(234,112,18)" fg:x="3172801606" fg:w="2501150"/><text x="15.9970%" y="2031.50"></text></g><g><title>__wake_up_locked_key (10,098,530 samples, 0.05%)</title><rect x="15.7906%" y="1909" width="0.0501%" height="15" fill="rgb(206,179,9)" fg:x="3181582500" fg:w="10098530"/><text x="16.0406%" y="1919.50"></text></g><g><title>ep_poll_callback (10,098,530 samples, 0.05%)</title><rect x="15.7906%" y="1893" width="0.0501%" height="15" fill="rgb(215,115,40)" fg:x="3181582500" fg:w="10098530"/><text x="16.0406%" y="1903.50"></text></g><g><title>__wake_up (10,098,530 samples, 0.05%)</title><rect x="15.7906%" y="1877" width="0.0501%" height="15" fill="rgb(222,69,34)" fg:x="3181582500" fg:w="10098530"/><text x="16.0406%" y="1887.50"></text></g><g><title>__wake_up_common_lock (10,098,530 samples, 0.05%)</title><rect x="15.7906%" y="1861" width="0.0501%" height="15" fill="rgb(209,161,10)" fg:x="3181582500" fg:w="10098530"/><text x="16.0406%" y="1871.50"></text></g><g><title>ep_autoremove_wake_function (7,237,823 samples, 0.04%)</title><rect x="15.8048%" y="1845" width="0.0359%" height="15" fill="rgb(217,6,38)" fg:x="3184443207" fg:w="7237823"/><text x="16.0548%" y="1855.50"></text></g><g><title>default_wake_function (7,237,823 samples, 0.04%)</title><rect x="15.8048%" y="1829" width="0.0359%" height="15" fill="rgb(229,229,48)" fg:x="3184443207" fg:w="7237823"/><text x="16.0548%" y="1839.50"></text></g><g><title>try_to_wake_up (7,237,823 samples, 0.04%)</title><rect x="15.8048%" y="1813" width="0.0359%" height="15" fill="rgb(225,21,28)" fg:x="3184443207" fg:w="7237823"/><text x="16.0548%" y="1823.50"></text></g><g><title>ttwu_queue_wakelist (3,624,649 samples, 0.02%)</title><rect x="15.8227%" y="1797" width="0.0180%" height="15" fill="rgb(206,33,13)" fg:x="3188056381" fg:w="3624649"/><text x="16.0727%" y="1807.50"></text></g><g><title>eventfd_write (10,835,233 samples, 0.05%)</title><rect x="15.7906%" y="1925" width="0.0538%" height="15" fill="rgb(242,178,17)" fg:x="3181582500" fg:w="10835233"/><text x="16.0406%" y="1935.50"></text></g><g><title>__x64_sys_write (14,262,841 samples, 0.07%)</title><rect x="15.7770%" y="1973" width="0.0708%" height="15" fill="rgb(220,162,5)" fg:x="3178844707" fg:w="14262841"/><text x="16.0270%" y="1983.50"></text></g><g><title>ksys_write (14,262,841 samples, 0.07%)</title><rect x="15.7770%" y="1957" width="0.0708%" height="15" fill="rgb(210,33,43)" fg:x="3178844707" fg:w="14262841"/><text x="16.0270%" y="1967.50"></text></g><g><title>vfs_write (12,822,252 samples, 0.06%)</title><rect x="15.7842%" y="1941" width="0.0636%" height="15" fill="rgb(216,116,54)" fg:x="3180285296" fg:w="12822252"/><text x="16.0342%" y="1951.50"></text></g><g><title>entry_SYSCALL_64 (19,221,009 samples, 0.10%)</title><rect x="15.7665%" y="2005" width="0.0954%" height="15" fill="rgb(249,92,24)" fg:x="3176726398" fg:w="19221009"/><text x="16.0165%" y="2015.50"></text></g><g><title>do_syscall_64 (17,757,460 samples, 0.09%)</title><rect x="15.7738%" y="1989" width="0.0881%" height="15" fill="rgb(231,189,14)" fg:x="3178189947" fg:w="17757460"/><text x="16.0238%" y="1999.50"></text></g><g><title>__GI___libc_write (24,496,030 samples, 0.12%)</title><rect x="15.7629%" y="2021" width="0.1216%" height="15" fill="rgb(230,8,41)" fg:x="3176005388" fg:w="24496030"/><text x="16.0129%" y="2031.50"></text></g><g><title>entry_ibpb (4,554,011 samples, 0.02%)</title><rect x="15.8619%" y="2005" width="0.0226%" height="15" fill="rgb(249,7,27)" fg:x="3195947407" fg:w="4554011"/><text x="16.1119%" y="2015.50"></text></g><g><title>syscall_enter_from_user_mode (2,216,990 samples, 0.01%)</title><rect x="15.8918%" y="1973" width="0.0110%" height="15" fill="rgb(232,86,5)" fg:x="3201970790" fg:w="2216990"/><text x="16.1418%" y="1983.50"></text></g><g><title>entry_SYSCALL_64 (4,395,089 samples, 0.02%)</title><rect x="15.8845%" y="2005" width="0.0218%" height="15" fill="rgb(224,175,18)" fg:x="3200501418" fg:w="4395089"/><text x="16.1345%" y="2015.50"></text></g><g><title>do_syscall_64 (4,395,089 samples, 0.02%)</title><rect x="15.8845%" y="1989" width="0.0218%" height="15" fill="rgb(220,129,12)" fg:x="3200501418" fg:w="4395089"/><text x="16.1345%" y="1999.50"></text></g><g><title>__GI___lll_lock_wake (10,229,659 samples, 0.05%)</title><rect x="15.8845%" y="2021" width="0.0508%" height="15" fill="rgb(210,19,36)" fg:x="3200501418" fg:w="10229659"/><text x="16.1345%" y="2031.50"></text></g><g><title>entry_ibpb (5,834,570 samples, 0.03%)</title><rect x="15.9063%" y="2005" width="0.0290%" height="15" fill="rgb(219,96,14)" fg:x="3204896507" fg:w="5834570"/><text x="16.1563%" y="2015.50"></text></g><g><title>inode_permission (2,159,307 samples, 0.01%)</title><rect x="15.9600%" y="1877" width="0.0107%" height="15" fill="rgb(249,106,1)" fg:x="3215712186" fg:w="2159307"/><text x="16.2100%" y="1887.50"></text></g><g><title>generic_permission (2,159,307 samples, 0.01%)</title><rect x="15.9600%" y="1861" width="0.0107%" height="15" fill="rgb(249,155,20)" fg:x="3215712186" fg:w="2159307"/><text x="16.2100%" y="1871.50"></text></g><g><title>lookup_fast (2,131,745 samples, 0.01%)</title><rect x="15.9707%" y="1877" width="0.0106%" height="15" fill="rgb(244,168,9)" fg:x="3217871493" fg:w="2131745"/><text x="16.2207%" y="1887.50"></text></g><g><title>link_path_walk (5,687,669 samples, 0.03%)</title><rect x="15.9564%" y="1893" width="0.0282%" height="15" fill="rgb(216,23,50)" fg:x="3214997442" fg:w="5687669"/><text x="16.2064%" y="1903.50"></text></g><g><title>filename_lookup (8,571,786 samples, 0.04%)</title><rect x="15.9564%" y="1925" width="0.0425%" height="15" fill="rgb(224,219,20)" fg:x="3214997442" fg:w="8571786"/><text x="16.2064%" y="1935.50"></text></g><g><title>path_lookupat (8,571,786 samples, 0.04%)</title><rect x="15.9564%" y="1909" width="0.0425%" height="15" fill="rgb(222,156,15)" fg:x="3214997442" fg:w="8571786"/><text x="16.2064%" y="1919.50"></text></g><g><title>user_path_at_empty (11,945,748 samples, 0.06%)</title><rect x="15.9564%" y="1941" width="0.0593%" height="15" fill="rgb(231,97,17)" fg:x="3214997442" fg:w="11945748"/><text x="16.2064%" y="1951.50"></text></g><g><title>do_readlinkat (16,715,874 samples, 0.08%)</title><rect x="15.9461%" y="1957" width="0.0830%" height="15" fill="rgb(218,70,48)" fg:x="3212912320" fg:w="16715874"/><text x="16.1961%" y="1967.50"></text></g><g><title>vfs_readlink (2,685,004 samples, 0.01%)</title><rect x="16.0157%" y="1941" width="0.0133%" height="15" fill="rgb(212,196,52)" fg:x="3226943190" fg:w="2685004"/><text x="16.2657%" y="1951.50"></text></g><g><title>proc_pid_readlink (2,685,004 samples, 0.01%)</title><rect x="16.0157%" y="1925" width="0.0133%" height="15" fill="rgb(243,203,18)" fg:x="3226943190" fg:w="2685004"/><text x="16.2657%" y="1935.50"></text></g><g><title>__x64_sys_readlink (17,477,260 samples, 0.09%)</title><rect x="15.9461%" y="1973" width="0.0867%" height="15" fill="rgb(252,125,41)" fg:x="3212912320" fg:w="17477260"/><text x="16.1961%" y="1983.50"></text></g><g><title>entry_SYSCALL_64 (21,180,000 samples, 0.11%)</title><rect x="15.9386%" y="2005" width="0.1051%" height="15" fill="rgb(223,180,33)" fg:x="3211401840" fg:w="21180000"/><text x="16.1886%" y="2015.50"></text></g><g><title>do_syscall_64 (19,669,520 samples, 0.10%)</title><rect x="15.9461%" y="1989" width="0.0976%" height="15" fill="rgb(254,159,46)" fg:x="3212912320" fg:w="19669520"/><text x="16.1961%" y="1999.50"></text></g><g><title>__GI___readlink (23,934,094 samples, 0.12%)</title><rect x="15.9353%" y="2021" width="0.1188%" height="15" fill="rgb(254,38,10)" fg:x="3210731077" fg:w="23934094"/><text x="16.1853%" y="2031.50"></text></g><g><title>entry_ibpb (2,083,331 samples, 0.01%)</title><rect x="16.0437%" y="2005" width="0.0103%" height="15" fill="rgb(208,217,32)" fg:x="3232581840" fg:w="2083331"/><text x="16.2937%" y="2015.50"></text></g><g><title>pthread_mutex_lock@@GLIBC_2.2.5 (2,808,686 samples, 0.01%)</title><rect x="16.0581%" y="2021" width="0.0139%" height="15" fill="rgb(221,120,13)" fg:x="3235488910" fg:w="2808686"/><text x="16.3081%" y="2031.50"></text></g><g><title>established_get_first (10,210,117 samples, 0.05%)</title><rect x="16.0878%" y="1861" width="0.0507%" height="15" fill="rgb(246,54,52)" fg:x="3241468983" fg:w="10210117"/><text x="16.3378%" y="1871.50"></text></g><g><title>established_get_next (8,442,072 samples, 0.04%)</title><rect x="16.1385%" y="1861" width="0.0419%" height="15" fill="rgb(242,34,25)" fg:x="3251679100" fg:w="8442072"/><text x="16.3885%" y="1871.50"></text></g><g><title>established_get_first (8,442,072 samples, 0.04%)</title><rect x="16.1385%" y="1845" width="0.0419%" height="15" fill="rgb(247,209,9)" fg:x="3251679100" fg:w="8442072"/><text x="16.3885%" y="1855.50"></text></g><g><title>tcp_seq_next (19,893,121 samples, 0.10%)</title><rect x="16.0878%" y="1877" width="0.0987%" height="15" fill="rgb(228,71,26)" fg:x="3241468983" fg:w="19893121"/><text x="16.3378%" y="1887.50"></text></g><g><title>established_get_first (10,152,441 samples, 0.05%)</title><rect x="16.1866%" y="1845" width="0.0504%" height="15" fill="rgb(222,145,49)" fg:x="3261362104" fg:w="10152441"/><text x="16.4366%" y="1855.50"></text></g><g><title>established_get_next (10,451,337 samples, 0.05%)</title><rect x="16.2369%" y="1845" width="0.0519%" height="15" fill="rgb(218,121,17)" fg:x="3271514545" fg:w="10451337"/><text x="16.4869%" y="1855.50"></text></g><g><title>established_get_first (10,451,337 samples, 0.05%)</title><rect x="16.2369%" y="1829" width="0.0519%" height="15" fill="rgb(244,50,7)" fg:x="3271514545" fg:w="10451337"/><text x="16.4869%" y="1839.50"></text></g><g><title>proc_reg_read (42,307,622 samples, 0.21%)</title><rect x="16.0828%" y="1925" width="0.2100%" height="15" fill="rgb(246,229,37)" fg:x="3240449825" fg:w="42307622"/><text x="16.3328%" y="1935.50"></text></g><g><title>seq_read (42,307,622 samples, 0.21%)</title><rect x="16.0828%" y="1909" width="0.2100%" height="15" fill="rgb(225,18,5)" fg:x="3240449825" fg:w="42307622"/><text x="16.3328%" y="1919.50"></text></g><g><title>seq_read_iter (42,307,622 samples, 0.21%)</title><rect x="16.0828%" y="1893" width="0.2100%" height="15" fill="rgb(213,204,8)" fg:x="3240449825" fg:w="42307622"/><text x="16.3328%" y="1903.50"></text></g><g><title>tcp_seq_start (21,395,343 samples, 0.11%)</title><rect x="16.1866%" y="1877" width="0.1062%" height="15" fill="rgb(238,103,6)" fg:x="3261362104" fg:w="21395343"/><text x="16.4366%" y="1887.50"></text></g><g><title>tcp_get_idx (21,395,343 samples, 0.11%)</title><rect x="16.1866%" y="1861" width="0.1062%" height="15" fill="rgb(222,25,35)" fg:x="3261362104" fg:w="21395343"/><text x="16.4366%" y="1871.50"></text></g><g><title>read (43,873,448 samples, 0.22%)</title><rect x="16.0757%" y="2021" width="0.2177%" height="15" fill="rgb(213,203,35)" fg:x="3239033953" fg:w="43873448"/><text x="16.3257%" y="2031.50"></text></g><g><title>entry_SYSCALL_64 (43,873,448 samples, 0.22%)</title><rect x="16.0757%" y="2005" width="0.2177%" height="15" fill="rgb(221,79,53)" fg:x="3239033953" fg:w="43873448"/><text x="16.3257%" y="2015.50"></text></g><g><title>do_syscall_64 (43,873,448 samples, 0.22%)</title><rect x="16.0757%" y="1989" width="0.2177%" height="15" fill="rgb(243,200,35)" fg:x="3239033953" fg:w="43873448"/><text x="16.3257%" y="1999.50"></text></g><g><title>__x64_sys_read (43,873,448 samples, 0.22%)</title><rect x="16.0757%" y="1973" width="0.2177%" height="15" fill="rgb(248,60,25)" fg:x="3239033953" fg:w="43873448"/><text x="16.3257%" y="1983.50"></text></g><g><title>ksys_read (43,873,448 samples, 0.22%)</title><rect x="16.0757%" y="1957" width="0.2177%" height="15" fill="rgb(227,53,46)" fg:x="3239033953" fg:w="43873448"/><text x="16.3257%" y="1967.50"></text></g><g><title>vfs_read (43,177,770 samples, 0.21%)</title><rect x="16.0792%" y="1941" width="0.2143%" height="15" fill="rgb(216,120,32)" fg:x="3239729631" fg:w="43177770"/><text x="16.3292%" y="1951.50"></text></g><g><title>getname_flags (3,551,762 samples, 0.02%)</title><rect x="16.3079%" y="1925" width="0.0176%" height="15" fill="rgb(220,134,1)" fg:x="3285806624" fg:w="3551762"/><text x="16.5579%" y="1935.50"></text></g><g><title>filename_lookup (3,762,596 samples, 0.02%)</title><rect x="16.3255%" y="1909" width="0.0187%" height="15" fill="rgb(237,168,5)" fg:x="3289358386" fg:w="3762596"/><text x="16.5755%" y="1919.50"></text></g><g><title>path_lookupat (3,762,596 samples, 0.02%)</title><rect x="16.3255%" y="1893" width="0.0187%" height="15" fill="rgb(231,100,33)" fg:x="3289358386" fg:w="3762596"/><text x="16.5755%" y="1903.50"></text></g><g><title>walk_component (2,212,654 samples, 0.01%)</title><rect x="16.3332%" y="1877" width="0.0110%" height="15" fill="rgb(236,177,47)" fg:x="3290908328" fg:w="2212654"/><text x="16.5832%" y="1887.50"></text></g><g><title>lookup_fast (2,212,654 samples, 0.01%)</title><rect x="16.3332%" y="1861" width="0.0110%" height="15" fill="rgb(235,7,49)" fg:x="3290908328" fg:w="2212654"/><text x="16.5832%" y="1871.50"></text></g><g><title>__x64_sys_statx (10,242,119 samples, 0.05%)</title><rect x="16.3008%" y="1941" width="0.0508%" height="15" fill="rgb(232,119,22)" fg:x="3284381236" fg:w="10242119"/><text x="16.5508%" y="1951.50"></text></g><g><title>vfs_statx (5,264,969 samples, 0.03%)</title><rect x="16.3255%" y="1925" width="0.0261%" height="15" fill="rgb(254,73,53)" fg:x="3289358386" fg:w="5264969"/><text x="16.5755%" y="1935.50"></text></g><g><title>entry_SYSCALL_64 (10,930,828 samples, 0.05%)</title><rect x="16.3008%" y="1973" width="0.0543%" height="15" fill="rgb(251,35,20)" fg:x="3284381236" fg:w="10930828"/><text x="16.5508%" y="1983.50"></text></g><g><title>do_syscall_64 (10,930,828 samples, 0.05%)</title><rect x="16.3008%" y="1957" width="0.0543%" height="15" fill="rgb(241,119,20)" fg:x="3284381236" fg:w="10930828"/><text x="16.5508%" y="1967.50"></text></g><g><title>uv__fs_work (14,521,637 samples, 0.07%)</title><rect x="16.2935%" y="2021" width="0.0721%" height="15" fill="rgb(207,102,14)" fg:x="3282907401" fg:w="14521637"/><text x="16.5435%" y="2031.50"></text></g><g><title>uv__fs_statx (13,777,029 samples, 0.07%)</title><rect x="16.2972%" y="2005" width="0.0684%" height="15" fill="rgb(248,201,50)" fg:x="3283652009" fg:w="13777029"/><text x="16.5472%" y="2015.50"></text></g><g><title>syscall (13,777,029 samples, 0.07%)</title><rect x="16.2972%" y="1989" width="0.0684%" height="15" fill="rgb(222,185,44)" fg:x="3283652009" fg:w="13777029"/><text x="16.5472%" y="1999.50"></text></g><g><title>entry_ibpb (2,116,974 samples, 0.01%)</title><rect x="16.3551%" y="1973" width="0.0105%" height="15" fill="rgb(218,107,18)" fg:x="3295312064" fg:w="2116974"/><text x="16.6051%" y="1983.50"></text></g><g><title>start_thread (149,075,679 samples, 0.74%)</title><rect x="15.6291%" y="2053" width="0.7399%" height="15" fill="rgb(237,177,39)" fg:x="3149045664" fg:w="149075679"/><text x="15.8791%" y="2063.50"></text></g><g><title>worker (122,818,587 samples, 0.61%)</title><rect x="15.7594%" y="2037" width="0.6096%" height="15" fill="rgb(246,69,6)" fg:x="3175302756" fg:w="122818587"/><text x="16.0094%" y="2047.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="2005" width="0.0291%" height="15" fill="rgb(234,208,37)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="2015.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1989" width="0.0291%" height="15" fill="rgb(225,4,6)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1999.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1973" width="0.0291%" height="15" fill="rgb(233,45,0)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1983.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1957" width="0.0291%" height="15" fill="rgb(226,136,5)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1967.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1941" width="0.0291%" height="15" fill="rgb(211,91,47)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1951.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1925" width="0.0291%" height="15" fill="rgb(242,88,51)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1935.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1909" width="0.0291%" height="15" fill="rgb(230,91,28)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1919.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1893" width="0.0291%" height="15" fill="rgb(254,186,29)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1903.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1877" width="0.0291%" height="15" fill="rgb(238,6,4)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1887.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1861" width="0.0291%" height="15" fill="rgb(221,151,16)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1871.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1845" width="0.0291%" height="15" fill="rgb(251,143,52)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1855.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1829" width="0.0291%" height="15" fill="rgb(206,90,15)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1839.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1813" width="0.0291%" height="15" fill="rgb(218,35,8)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1823.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1797" width="0.0291%" height="15" fill="rgb(239,215,6)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1807.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1781" width="0.0291%" height="15" fill="rgb(245,116,39)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1791.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1765" width="0.0291%" height="15" fill="rgb(242,65,28)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1775.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1749" width="0.0291%" height="15" fill="rgb(252,132,53)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1759.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1733" width="0.0291%" height="15" fill="rgb(224,159,50)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1743.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1717" width="0.0291%" height="15" fill="rgb(224,93,4)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1727.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1701" width="0.0291%" height="15" fill="rgb(208,81,34)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1711.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1685" width="0.0291%" height="15" fill="rgb(233,92,54)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1695.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1669" width="0.0291%" height="15" fill="rgb(237,21,14)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1679.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1653" width="0.0291%" height="15" fill="rgb(249,128,51)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1663.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1637" width="0.0291%" height="15" fill="rgb(223,129,24)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1647.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1621" width="0.0291%" height="15" fill="rgb(231,168,25)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1631.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1605" width="0.0291%" height="15" fill="rgb(224,39,20)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1615.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1589" width="0.0291%" height="15" fill="rgb(225,152,53)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1599.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1573" width="0.0291%" height="15" fill="rgb(252,17,24)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1583.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1557" width="0.0291%" height="15" fill="rgb(250,114,30)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1567.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1541" width="0.0291%" height="15" fill="rgb(229,5,4)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1551.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1525" width="0.0291%" height="15" fill="rgb(225,176,49)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1535.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1509" width="0.0291%" height="15" fill="rgb(224,221,49)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1519.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1493" width="0.0291%" height="15" fill="rgb(253,169,27)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1503.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1477" width="0.0291%" height="15" fill="rgb(211,206,16)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1487.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1461" width="0.0291%" height="15" fill="rgb(244,87,35)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1471.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1445" width="0.0291%" height="15" fill="rgb(246,28,10)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1455.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1429" width="0.0291%" height="15" fill="rgb(229,12,44)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1439.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1413" width="0.0291%" height="15" fill="rgb(210,145,37)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1423.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1397" width="0.0291%" height="15" fill="rgb(227,112,52)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1407.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1381" width="0.0291%" height="15" fill="rgb(238,155,34)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1391.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1365" width="0.0291%" height="15" fill="rgb(239,226,36)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1375.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1349" width="0.0291%" height="15" fill="rgb(230,16,23)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1359.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1333" width="0.0291%" height="15" fill="rgb(236,171,36)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1343.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1317" width="0.0291%" height="15" fill="rgb(221,22,14)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1327.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1301" width="0.0291%" height="15" fill="rgb(242,43,11)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1311.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1285" width="0.0291%" height="15" fill="rgb(232,69,23)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1295.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1269" width="0.0291%" height="15" fill="rgb(216,180,54)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1279.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1253" width="0.0291%" height="15" fill="rgb(216,5,24)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1263.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1237" width="0.0291%" height="15" fill="rgb(225,89,9)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1247.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1221" width="0.0291%" height="15" fill="rgb(243,75,33)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1231.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1205" width="0.0291%" height="15" fill="rgb(247,141,45)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1215.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1189" width="0.0291%" height="15" fill="rgb(232,177,36)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1199.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1173" width="0.0291%" height="15" fill="rgb(219,125,36)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1183.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1157" width="0.0291%" height="15" fill="rgb(227,94,9)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1167.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1141" width="0.0291%" height="15" fill="rgb(240,34,52)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1151.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1125" width="0.0291%" height="15" fill="rgb(216,45,12)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1135.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1109" width="0.0291%" height="15" fill="rgb(246,21,19)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1119.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1093" width="0.0291%" height="15" fill="rgb(213,98,42)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1103.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1077" width="0.0291%" height="15" fill="rgb(250,136,47)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1087.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1061" width="0.0291%" height="15" fill="rgb(251,124,27)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1071.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1045" width="0.0291%" height="15" fill="rgb(229,180,14)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1055.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1029" width="0.0291%" height="15" fill="rgb(245,216,25)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1039.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="1013" width="0.0291%" height="15" fill="rgb(251,43,5)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1023.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="997" width="0.0291%" height="15" fill="rgb(250,128,24)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="1007.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="981" width="0.0291%" height="15" fill="rgb(217,117,27)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="991.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="965" width="0.0291%" height="15" fill="rgb(245,147,4)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="975.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="949" width="0.0291%" height="15" fill="rgb(242,201,35)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="959.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="933" width="0.0291%" height="15" fill="rgb(218,181,1)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="943.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="917" width="0.0291%" height="15" fill="rgb(222,6,29)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="927.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="901" width="0.0291%" height="15" fill="rgb(208,186,3)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="911.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="885" width="0.0291%" height="15" fill="rgb(216,36,26)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="895.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="869" width="0.0291%" height="15" fill="rgb(248,201,23)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="879.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="853" width="0.0291%" height="15" fill="rgb(251,170,31)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="863.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="837" width="0.0291%" height="15" fill="rgb(207,110,25)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="847.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="821" width="0.0291%" height="15" fill="rgb(250,54,15)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="831.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="805" width="0.0291%" height="15" fill="rgb(227,68,33)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="815.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="789" width="0.0291%" height="15" fill="rgb(238,34,41)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="799.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="773" width="0.0291%" height="15" fill="rgb(220,11,15)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="783.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="757" width="0.0291%" height="15" fill="rgb(246,111,35)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="767.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="741" width="0.0291%" height="15" fill="rgb(209,88,53)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="751.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="725" width="0.0291%" height="15" fill="rgb(231,185,47)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="735.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="709" width="0.0291%" height="15" fill="rgb(233,154,1)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="719.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="693" width="0.0291%" height="15" fill="rgb(225,15,46)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="703.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="677" width="0.0291%" height="15" fill="rgb(211,135,41)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="687.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="661" width="0.0291%" height="15" fill="rgb(208,54,0)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="671.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="645" width="0.0291%" height="15" fill="rgb(244,136,14)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="655.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="629" width="0.0291%" height="15" fill="rgb(241,56,14)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="639.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="613" width="0.0291%" height="15" fill="rgb(205,80,24)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="623.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="597" width="0.0291%" height="15" fill="rgb(220,57,4)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="607.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="581" width="0.0291%" height="15" fill="rgb(226,193,50)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="591.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="565" width="0.0291%" height="15" fill="rgb(231,168,22)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="575.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="549" width="0.0291%" height="15" fill="rgb(254,215,14)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="559.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="533" width="0.0291%" height="15" fill="rgb(211,115,16)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="543.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="517" width="0.0291%" height="15" fill="rgb(236,210,16)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="527.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="501" width="0.0291%" height="15" fill="rgb(221,94,12)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="511.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="485" width="0.0291%" height="15" fill="rgb(235,218,49)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="495.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="469" width="0.0291%" height="15" fill="rgb(217,114,14)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="479.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="453" width="0.0291%" height="15" fill="rgb(216,145,22)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="463.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="437" width="0.0291%" height="15" fill="rgb(217,112,39)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="447.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="421" width="0.0291%" height="15" fill="rgb(225,85,32)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="431.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="405" width="0.0291%" height="15" fill="rgb(245,209,47)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="415.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="389" width="0.0291%" height="15" fill="rgb(218,220,15)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="399.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="373" width="0.0291%" height="15" fill="rgb(222,202,31)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="383.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="357" width="0.0291%" height="15" fill="rgb(243,203,4)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="367.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="341" width="0.0291%" height="15" fill="rgb(237,92,17)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="351.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="325" width="0.0291%" height="15" fill="rgb(231,119,7)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="335.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="309" width="0.0291%" height="15" fill="rgb(237,82,41)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="319.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="293" width="0.0291%" height="15" fill="rgb(226,81,48)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="303.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="277" width="0.0291%" height="15" fill="rgb(234,70,51)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="287.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="261" width="0.0291%" height="15" fill="rgb(251,86,4)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="271.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="245" width="0.0291%" height="15" fill="rgb(244,144,28)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="255.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="229" width="0.0291%" height="15" fill="rgb(232,161,39)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="239.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="213" width="0.0291%" height="15" fill="rgb(247,34,51)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="223.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="197" width="0.0291%" height="15" fill="rgb(225,132,2)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="207.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="181" width="0.0291%" height="15" fill="rgb(209,159,44)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="191.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="165" width="0.0291%" height="15" fill="rgb(251,214,1)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="175.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="149" width="0.0291%" height="15" fill="rgb(247,84,47)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="159.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="133" width="0.0291%" height="15" fill="rgb(240,111,43)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="143.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="117" width="0.0291%" height="15" fill="rgb(215,214,35)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="127.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="101" width="0.0291%" height="15" fill="rgb(248,207,23)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="111.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="85" width="0.0291%" height="15" fill="rgb(214,186,4)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="95.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="69" width="0.0291%" height="15" fill="rgb(220,133,22)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="79.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="53" width="0.0291%" height="15" fill="rgb(239,134,19)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="63.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (5,854,364 samples, 0.03%)</title><rect x="16.3690%" y="37" width="0.0291%" height="15" fill="rgb(250,140,9)" fg:x="3298121343" fg:w="5854364"/><text x="16.6190%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,278,140 samples, 0.25%)</title><rect x="16.3981%" y="37" width="0.2495%" height="15" fill="rgb(225,59,14)" fg:x="3303975707" fg:w="50278140"/><text x="16.6481%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (52,028,199 samples, 0.26%)</title><rect x="16.3981%" y="53" width="0.2582%" height="15" fill="rgb(214,152,51)" fg:x="3303975707" fg:w="52028199"/><text x="16.6481%" y="63.50"></text></g><g><title>malloc (17,309,084 samples, 0.09%)</title><rect x="16.6563%" y="37" width="0.0859%" height="15" fill="rgb(251,227,43)" fg:x="3356003906" fg:w="17309084"/><text x="16.9063%" y="47.50"></text></g><g><title>operator new (19,734,330 samples, 0.10%)</title><rect x="16.7468%" y="37" width="0.0979%" height="15" fill="rgb(241,96,17)" fg:x="3374239098" fg:w="19734330"/><text x="16.9968%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (39,304,018 samples, 0.20%)</title><rect x="16.8447%" y="37" width="0.1951%" height="15" fill="rgb(234,198,43)" fg:x="3393973428" fg:w="39304018"/><text x="17.0947%" y="47.50"></text></g><g><title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (51,227,113 samples, 0.25%)</title><rect x="17.0398%" y="37" width="0.2542%" height="15" fill="rgb(220,108,29)" fg:x="3433277446" fg:w="51227113"/><text x="17.2898%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,678,742 samples, 1.13%)</title><rect x="16.3981%" y="181" width="1.1250%" height="15" fill="rgb(226,163,33)" fg:x="3303975707" fg:w="226678742"/><text x="16.6481%" y="191.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,678,742 samples, 1.13%)</title><rect x="16.3981%" y="165" width="1.1250%" height="15" fill="rgb(205,194,45)" fg:x="3303975707" fg:w="226678742"/><text x="16.6481%" y="175.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (226,678,742 samples, 1.13%)</title><rect x="16.3981%" y="149" width="1.1250%" height="15" fill="rgb(206,143,44)" fg:x="3303975707" fg:w="226678742"/><text x="16.6481%" y="159.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,678,742 samples, 1.13%)</title><rect x="16.3981%" y="133" width="1.1250%" height="15" fill="rgb(236,136,36)" fg:x="3303975707" fg:w="226678742"/><text x="16.6481%" y="143.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,678,742 samples, 1.13%)</title><rect x="16.3981%" y="117" width="1.1250%" height="15" fill="rgb(249,172,42)" fg:x="3303975707" fg:w="226678742"/><text x="16.6481%" y="127.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,678,742 samples, 1.13%)</title><rect x="16.3981%" y="101" width="1.1250%" height="15" fill="rgb(216,139,23)" fg:x="3303975707" fg:w="226678742"/><text x="16.6481%" y="111.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (226,678,742 samples, 1.13%)</title><rect x="16.3981%" y="85" width="1.1250%" height="15" fill="rgb(207,166,20)" fg:x="3303975707" fg:w="226678742"/><text x="16.6481%" y="95.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,678,742 samples, 1.13%)</title><rect x="16.3981%" y="69" width="1.1250%" height="15" fill="rgb(210,209,22)" fg:x="3303975707" fg:w="226678742"/><text x="16.6481%" y="79.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (174,650,543 samples, 0.87%)</title><rect x="16.6563%" y="53" width="0.8668%" height="15" fill="rgb(232,118,20)" fg:x="3356003906" fg:w="174650543"/><text x="16.9063%" y="63.50"></text></g><g><title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (46,149,890 samples, 0.23%)</title><rect x="17.2940%" y="37" width="0.2290%" height="15" fill="rgb(238,113,42)" fg:x="3484504559" fg:w="46149890"/><text x="17.5440%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (233,052,971 samples, 1.16%)</title><rect x="16.3690%" y="2021" width="1.1567%" height="15" fill="rgb(231,42,5)" fg:x="3298121343" fg:w="233052971"/><text x="16.6190%" y="2031.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="2005" width="1.1276%" height="15" fill="rgb(243,166,24)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="2015.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1989" width="1.1276%" height="15" fill="rgb(237,226,12)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1999.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1973" width="1.1276%" height="15" fill="rgb(229,133,24)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1983.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1957" width="1.1276%" height="15" fill="rgb(238,33,43)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1967.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1941" width="1.1276%" height="15" fill="rgb(227,59,38)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1951.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1925" width="1.1276%" height="15" fill="rgb(230,97,0)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1935.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1909" width="1.1276%" height="15" fill="rgb(250,173,50)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1919.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1893" width="1.1276%" height="15" fill="rgb(240,15,50)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1903.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1877" width="1.1276%" height="15" fill="rgb(221,93,22)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1887.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1861" width="1.1276%" height="15" fill="rgb(245,180,53)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1871.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1845" width="1.1276%" height="15" fill="rgb(231,88,51)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1855.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1829" width="1.1276%" height="15" fill="rgb(240,58,21)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1839.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1813" width="1.1276%" height="15" fill="rgb(237,21,10)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1823.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1797" width="1.1276%" height="15" fill="rgb(218,43,11)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1807.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1781" width="1.1276%" height="15" fill="rgb(218,221,29)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1791.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1765" width="1.1276%" height="15" fill="rgb(214,118,42)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1775.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1749" width="1.1276%" height="15" fill="rgb(251,200,26)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1759.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1733" width="1.1276%" height="15" fill="rgb(237,101,39)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1743.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1717" width="1.1276%" height="15" fill="rgb(251,117,11)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1727.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1701" width="1.1276%" height="15" fill="rgb(216,223,23)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1711.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1685" width="1.1276%" height="15" fill="rgb(251,54,12)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1695.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1669" width="1.1276%" height="15" fill="rgb(254,176,54)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1679.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1653" width="1.1276%" height="15" fill="rgb(210,32,8)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1663.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1637" width="1.1276%" height="15" fill="rgb(235,52,38)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1647.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1621" width="1.1276%" height="15" fill="rgb(231,4,44)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1631.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1605" width="1.1276%" height="15" fill="rgb(249,2,32)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1615.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1589" width="1.1276%" height="15" fill="rgb(224,65,26)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1599.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1573" width="1.1276%" height="15" fill="rgb(250,73,40)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1583.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1557" width="1.1276%" height="15" fill="rgb(253,177,16)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1567.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1541" width="1.1276%" height="15" fill="rgb(217,32,34)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1551.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1525" width="1.1276%" height="15" fill="rgb(212,7,10)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1535.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1509" width="1.1276%" height="15" fill="rgb(245,89,8)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1519.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1493" width="1.1276%" height="15" fill="rgb(237,16,53)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1503.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1477" width="1.1276%" height="15" fill="rgb(250,204,30)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1487.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1461" width="1.1276%" height="15" fill="rgb(208,77,27)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1471.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1445" width="1.1276%" height="15" fill="rgb(250,204,28)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1455.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1429" width="1.1276%" height="15" fill="rgb(244,63,21)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1439.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1413" width="1.1276%" height="15" fill="rgb(236,85,44)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1423.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1397" width="1.1276%" height="15" fill="rgb(215,98,4)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1407.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1381" width="1.1276%" height="15" fill="rgb(235,38,11)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1391.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1365" width="1.1276%" height="15" fill="rgb(254,186,25)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1375.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1349" width="1.1276%" height="15" fill="rgb(225,55,31)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1359.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1333" width="1.1276%" height="15" fill="rgb(211,15,21)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1343.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1317" width="1.1276%" height="15" fill="rgb(215,187,41)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1327.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1301" width="1.1276%" height="15" fill="rgb(248,69,32)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1311.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1285" width="1.1276%" height="15" fill="rgb(252,102,52)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1295.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1269" width="1.1276%" height="15" fill="rgb(253,140,32)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1279.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1253" width="1.1276%" height="15" fill="rgb(216,56,42)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1263.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1237" width="1.1276%" height="15" fill="rgb(216,184,14)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1247.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1221" width="1.1276%" height="15" fill="rgb(237,187,27)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1231.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1205" width="1.1276%" height="15" fill="rgb(219,65,3)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1215.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1189" width="1.1276%" height="15" fill="rgb(245,83,25)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1199.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1173" width="1.1276%" height="15" fill="rgb(214,205,45)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1183.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1157" width="1.1276%" height="15" fill="rgb(241,20,18)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1167.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1141" width="1.1276%" height="15" fill="rgb(232,163,23)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1151.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1125" width="1.1276%" height="15" fill="rgb(214,5,46)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1135.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1109" width="1.1276%" height="15" fill="rgb(229,78,17)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1119.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1093" width="1.1276%" height="15" fill="rgb(248,89,10)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1103.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1077" width="1.1276%" height="15" fill="rgb(248,54,15)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1087.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1061" width="1.1276%" height="15" fill="rgb(223,116,6)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1071.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1045" width="1.1276%" height="15" fill="rgb(205,125,38)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1055.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1029" width="1.1276%" height="15" fill="rgb(251,78,38)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1039.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="1013" width="1.1276%" height="15" fill="rgb(253,78,28)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1023.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="997" width="1.1276%" height="15" fill="rgb(209,120,3)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="1007.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="981" width="1.1276%" height="15" fill="rgb(238,229,9)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="991.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="965" width="1.1276%" height="15" fill="rgb(253,159,18)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="975.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="949" width="1.1276%" height="15" fill="rgb(244,42,34)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="959.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="933" width="1.1276%" height="15" fill="rgb(224,8,7)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="943.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="917" width="1.1276%" height="15" fill="rgb(210,201,45)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="927.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="901" width="1.1276%" height="15" fill="rgb(252,185,21)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="911.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="885" width="1.1276%" height="15" fill="rgb(223,131,1)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="895.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="869" width="1.1276%" height="15" fill="rgb(245,141,16)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="879.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="853" width="1.1276%" height="15" fill="rgb(229,55,45)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="863.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="837" width="1.1276%" height="15" fill="rgb(208,92,15)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="847.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="821" width="1.1276%" height="15" fill="rgb(234,185,47)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="831.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="805" width="1.1276%" height="15" fill="rgb(253,104,50)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="815.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="789" width="1.1276%" height="15" fill="rgb(205,70,7)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="799.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="773" width="1.1276%" height="15" fill="rgb(240,178,43)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="783.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="757" width="1.1276%" height="15" fill="rgb(214,112,2)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="767.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="741" width="1.1276%" height="15" fill="rgb(206,46,17)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="751.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="725" width="1.1276%" height="15" fill="rgb(225,220,16)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="735.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="709" width="1.1276%" height="15" fill="rgb(238,65,40)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="719.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="693" width="1.1276%" height="15" fill="rgb(230,151,21)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="703.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="677" width="1.1276%" height="15" fill="rgb(218,58,49)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="687.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="661" width="1.1276%" height="15" fill="rgb(219,179,14)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="671.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="645" width="1.1276%" height="15" fill="rgb(223,72,1)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="655.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="629" width="1.1276%" height="15" fill="rgb(238,126,10)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="639.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="613" width="1.1276%" height="15" fill="rgb(224,206,38)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="623.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="597" width="1.1276%" height="15" fill="rgb(212,201,54)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="607.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="581" width="1.1276%" height="15" fill="rgb(218,154,48)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="591.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="565" width="1.1276%" height="15" fill="rgb(232,93,24)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="575.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="549" width="1.1276%" height="15" fill="rgb(245,30,21)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="559.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="533" width="1.1276%" height="15" fill="rgb(242,148,29)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="543.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="517" width="1.1276%" height="15" fill="rgb(244,153,54)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="527.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="501" width="1.1276%" height="15" fill="rgb(252,87,22)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="511.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="485" width="1.1276%" height="15" fill="rgb(210,51,29)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="495.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="469" width="1.1276%" height="15" fill="rgb(242,136,47)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="479.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="453" width="1.1276%" height="15" fill="rgb(238,68,4)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="463.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="437" width="1.1276%" height="15" fill="rgb(242,161,30)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="447.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="421" width="1.1276%" height="15" fill="rgb(218,58,44)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="431.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="405" width="1.1276%" height="15" fill="rgb(252,125,32)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="415.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="389" width="1.1276%" height="15" fill="rgb(219,178,0)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="399.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="373" width="1.1276%" height="15" fill="rgb(213,152,7)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="383.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="357" width="1.1276%" height="15" fill="rgb(249,109,34)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="367.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="341" width="1.1276%" height="15" fill="rgb(232,96,21)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="351.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="325" width="1.1276%" height="15" fill="rgb(228,27,39)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="335.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="309" width="1.1276%" height="15" fill="rgb(211,182,52)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="319.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="293" width="1.1276%" height="15" fill="rgb(234,178,38)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="303.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="277" width="1.1276%" height="15" fill="rgb(221,111,3)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="287.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="261" width="1.1276%" height="15" fill="rgb(228,175,21)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="271.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="245" width="1.1276%" height="15" fill="rgb(228,174,43)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="255.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="229" width="1.1276%" height="15" fill="rgb(211,191,0)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="239.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="213" width="1.1276%" height="15" fill="rgb(253,117,3)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="223.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,198,607 samples, 1.13%)</title><rect x="16.3981%" y="197" width="1.1276%" height="15" fill="rgb(241,127,19)" fg:x="3303975707" fg:w="227198607"/><text x="16.6481%" y="207.50"></text></g><g><title>std::_Function_handler&lt;bool (char), std::__detail::_CharMatcher&lt;std::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_invoke (4,391,746 samples, 0.02%)</title><rect x="17.5257%" y="37" width="0.0218%" height="15" fill="rgb(218,103,12)" fg:x="3531174314" fg:w="4391746"/><text x="17.7757%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,496,893 samples, 0.13%)</title><rect x="17.5475%" y="37" width="0.1315%" height="15" fill="rgb(236,214,43)" fg:x="3535566060" fg:w="26496893"/><text x="17.7975%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (70,370,770 samples, 0.35%)</title><rect x="17.5257%" y="69" width="0.3493%" height="15" fill="rgb(244,144,19)" fg:x="3531174314" fg:w="70370770"/><text x="17.7757%" y="79.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (70,370,770 samples, 0.35%)</title><rect x="17.5257%" y="53" width="0.3493%" height="15" fill="rgb(246,188,10)" fg:x="3531174314" fg:w="70370770"/><text x="17.7757%" y="63.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (39,482,131 samples, 0.20%)</title><rect x="17.6790%" y="37" width="0.1960%" height="15" fill="rgb(212,193,33)" fg:x="3562062953" fg:w="39482131"/><text x="17.9290%" y="47.50"></text></g><g><title>std::_Function_handler&lt;bool (char), std::__detail::_CharMatcher&lt;std::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_invoke (4,149,988 samples, 0.02%)</title><rect x="17.8749%" y="37" width="0.0206%" height="15" fill="rgb(241,51,29)" fg:x="3601545084" fg:w="4149988"/><text x="18.1249%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (150,495,242 samples, 0.75%)</title><rect x="17.5257%" y="197" width="0.7469%" height="15" fill="rgb(211,58,19)" fg:x="3531174314" fg:w="150495242"/><text x="17.7757%" y="207.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (150,495,242 samples, 0.75%)</title><rect x="17.5257%" y="181" width="0.7469%" height="15" fill="rgb(229,111,26)" fg:x="3531174314" fg:w="150495242"/><text x="17.7757%" y="191.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (150,495,242 samples, 0.75%)</title><rect x="17.5257%" y="165" width="0.7469%" height="15" fill="rgb(213,115,40)" fg:x="3531174314" fg:w="150495242"/><text x="17.7757%" y="175.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (150,495,242 samples, 0.75%)</title><rect x="17.5257%" y="149" width="0.7469%" height="15" fill="rgb(209,56,44)" fg:x="3531174314" fg:w="150495242"/><text x="17.7757%" y="159.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (150,495,242 samples, 0.75%)</title><rect x="17.5257%" y="133" width="0.7469%" height="15" fill="rgb(230,108,32)" fg:x="3531174314" fg:w="150495242"/><text x="17.7757%" y="143.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (150,495,242 samples, 0.75%)</title><rect x="17.5257%" y="117" width="0.7469%" height="15" fill="rgb(216,165,31)" fg:x="3531174314" fg:w="150495242"/><text x="17.7757%" y="127.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (150,495,242 samples, 0.75%)</title><rect x="17.5257%" y="101" width="0.7469%" height="15" fill="rgb(218,122,21)" fg:x="3531174314" fg:w="150495242"/><text x="17.7757%" y="111.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (150,495,242 samples, 0.75%)</title><rect x="17.5257%" y="85" width="0.7469%" height="15" fill="rgb(223,224,47)" fg:x="3531174314" fg:w="150495242"/><text x="17.7757%" y="95.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (80,124,472 samples, 0.40%)</title><rect x="17.8749%" y="69" width="0.3977%" height="15" fill="rgb(238,102,44)" fg:x="3601545084" fg:w="80124472"/><text x="18.1249%" y="79.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (80,124,472 samples, 0.40%)</title><rect x="17.8749%" y="53" width="0.3977%" height="15" fill="rgb(236,46,40)" fg:x="3601545084" fg:w="80124472"/><text x="18.1249%" y="63.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (75,974,484 samples, 0.38%)</title><rect x="17.8955%" y="37" width="0.3771%" height="15" fill="rgb(247,202,50)" fg:x="3605695072" fg:w="75974484"/><text x="18.1455%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (384,457,765 samples, 1.91%)</title><rect x="16.3690%" y="2037" width="1.9081%" height="15" fill="rgb(209,99,20)" fg:x="3298121343" fg:w="384457765"/><text x="16.6190%" y="2047.50">s..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="2021" width="0.7514%" height="15" fill="rgb(252,27,34)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="2031.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="2005" width="0.7514%" height="15" fill="rgb(215,206,23)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="2015.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1989" width="0.7514%" height="15" fill="rgb(212,135,36)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1999.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1973" width="0.7514%" height="15" fill="rgb(240,189,1)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1983.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1957" width="0.7514%" height="15" fill="rgb(242,56,20)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1967.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1941" width="0.7514%" height="15" fill="rgb(247,132,33)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1951.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1925" width="0.7514%" height="15" fill="rgb(208,149,11)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1935.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1909" width="0.7514%" height="15" fill="rgb(211,33,11)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1919.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1893" width="0.7514%" height="15" fill="rgb(221,29,38)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1903.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1877" width="0.7514%" height="15" fill="rgb(206,182,49)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1887.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1861" width="0.7514%" height="15" fill="rgb(216,140,1)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1871.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1845" width="0.7514%" height="15" fill="rgb(232,57,40)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1855.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1829" width="0.7514%" height="15" fill="rgb(224,186,18)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1839.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1813" width="0.7514%" height="15" fill="rgb(215,121,11)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1823.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1797" width="0.7514%" height="15" fill="rgb(245,147,10)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1807.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1781" width="0.7514%" height="15" fill="rgb(238,153,13)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1791.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1765" width="0.7514%" height="15" fill="rgb(233,108,0)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1775.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1749" width="0.7514%" height="15" fill="rgb(212,157,17)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1759.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1733" width="0.7514%" height="15" fill="rgb(225,213,38)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1743.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1717" width="0.7514%" height="15" fill="rgb(248,16,11)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1727.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1701" width="0.7514%" height="15" fill="rgb(241,33,4)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1711.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1685" width="0.7514%" height="15" fill="rgb(222,26,43)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1695.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1669" width="0.7514%" height="15" fill="rgb(243,29,36)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1679.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1653" width="0.7514%" height="15" fill="rgb(241,9,27)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1663.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1637" width="0.7514%" height="15" fill="rgb(205,117,26)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1647.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1621" width="0.7514%" height="15" fill="rgb(209,80,39)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1631.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1605" width="0.7514%" height="15" fill="rgb(239,155,6)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1615.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1589" width="0.7514%" height="15" fill="rgb(212,104,12)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1599.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1573" width="0.7514%" height="15" fill="rgb(234,204,3)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1583.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1557" width="0.7514%" height="15" fill="rgb(251,218,7)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1567.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1541" width="0.7514%" height="15" fill="rgb(221,81,32)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1551.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1525" width="0.7514%" height="15" fill="rgb(214,152,26)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1535.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1509" width="0.7514%" height="15" fill="rgb(223,22,3)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1519.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1493" width="0.7514%" height="15" fill="rgb(207,174,7)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1503.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1477" width="0.7514%" height="15" fill="rgb(224,19,52)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1487.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1461" width="0.7514%" height="15" fill="rgb(228,24,14)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1471.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1445" width="0.7514%" height="15" fill="rgb(230,153,43)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1455.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1429" width="0.7514%" height="15" fill="rgb(231,106,12)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1439.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1413" width="0.7514%" height="15" fill="rgb(215,92,2)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1423.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1397" width="0.7514%" height="15" fill="rgb(249,143,25)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1407.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1381" width="0.7514%" height="15" fill="rgb(252,7,35)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1391.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1365" width="0.7514%" height="15" fill="rgb(216,69,40)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1375.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1349" width="0.7514%" height="15" fill="rgb(240,36,33)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1359.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1333" width="0.7514%" height="15" fill="rgb(231,128,14)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1343.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1317" width="0.7514%" height="15" fill="rgb(245,143,14)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1327.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1301" width="0.7514%" height="15" fill="rgb(222,130,28)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1311.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1285" width="0.7514%" height="15" fill="rgb(212,10,48)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1295.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1269" width="0.7514%" height="15" fill="rgb(254,118,45)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1279.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1253" width="0.7514%" height="15" fill="rgb(228,6,45)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1263.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1237" width="0.7514%" height="15" fill="rgb(241,18,35)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1247.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1221" width="0.7514%" height="15" fill="rgb(227,214,53)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1231.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1205" width="0.7514%" height="15" fill="rgb(224,107,51)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1215.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1189" width="0.7514%" height="15" fill="rgb(248,60,28)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1199.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1173" width="0.7514%" height="15" fill="rgb(249,101,23)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1183.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1157" width="0.7514%" height="15" fill="rgb(228,51,19)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1167.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1141" width="0.7514%" height="15" fill="rgb(213,20,6)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1151.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1125" width="0.7514%" height="15" fill="rgb(212,124,10)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1135.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1109" width="0.7514%" height="15" fill="rgb(248,3,40)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1119.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1093" width="0.7514%" height="15" fill="rgb(223,178,23)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1103.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1077" width="0.7514%" height="15" fill="rgb(240,132,45)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1087.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1061" width="0.7514%" height="15" fill="rgb(245,164,36)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1071.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1045" width="0.7514%" height="15" fill="rgb(231,188,53)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1055.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1029" width="0.7514%" height="15" fill="rgb(237,198,39)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1039.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="1013" width="0.7514%" height="15" fill="rgb(223,120,35)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1023.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="997" width="0.7514%" height="15" fill="rgb(253,107,49)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="1007.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="981" width="0.7514%" height="15" fill="rgb(216,44,31)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="991.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="965" width="0.7514%" height="15" fill="rgb(253,87,21)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="975.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="949" width="0.7514%" height="15" fill="rgb(226,18,2)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="959.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="933" width="0.7514%" height="15" fill="rgb(216,8,46)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="943.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="917" width="0.7514%" height="15" fill="rgb(226,140,39)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="927.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="901" width="0.7514%" height="15" fill="rgb(221,194,54)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="911.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="885" width="0.7514%" height="15" fill="rgb(213,92,11)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="895.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="869" width="0.7514%" height="15" fill="rgb(229,162,46)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="879.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="853" width="0.7514%" height="15" fill="rgb(214,111,36)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="863.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="837" width="0.7514%" height="15" fill="rgb(207,6,21)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="847.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="821" width="0.7514%" height="15" fill="rgb(213,127,38)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="831.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="805" width="0.7514%" height="15" fill="rgb(238,118,32)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="815.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="789" width="0.7514%" height="15" fill="rgb(240,139,39)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="799.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="773" width="0.7514%" height="15" fill="rgb(235,10,37)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="783.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="757" width="0.7514%" height="15" fill="rgb(249,171,38)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="767.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="741" width="0.7514%" height="15" fill="rgb(242,144,32)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="751.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="725" width="0.7514%" height="15" fill="rgb(217,117,21)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="735.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="709" width="0.7514%" height="15" fill="rgb(249,87,1)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="719.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="693" width="0.7514%" height="15" fill="rgb(248,196,48)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="703.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="677" width="0.7514%" height="15" fill="rgb(251,206,33)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="687.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="661" width="0.7514%" height="15" fill="rgb(232,141,28)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="671.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="645" width="0.7514%" height="15" fill="rgb(209,167,14)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="655.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="629" width="0.7514%" height="15" fill="rgb(225,11,50)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="639.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="613" width="0.7514%" height="15" fill="rgb(209,50,20)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="623.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="597" width="0.7514%" height="15" fill="rgb(212,17,46)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="607.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="581" width="0.7514%" height="15" fill="rgb(216,101,39)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="591.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="565" width="0.7514%" height="15" fill="rgb(212,228,48)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="575.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="549" width="0.7514%" height="15" fill="rgb(250,6,50)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="559.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="533" width="0.7514%" height="15" fill="rgb(250,160,48)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="543.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="517" width="0.7514%" height="15" fill="rgb(244,216,33)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="527.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="501" width="0.7514%" height="15" fill="rgb(207,157,5)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="511.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="485" width="0.7514%" height="15" fill="rgb(228,199,8)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="495.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="469" width="0.7514%" height="15" fill="rgb(227,80,20)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="479.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="453" width="0.7514%" height="15" fill="rgb(222,9,33)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="463.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="437" width="0.7514%" height="15" fill="rgb(239,44,28)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="447.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="421" width="0.7514%" height="15" fill="rgb(249,187,43)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="431.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="405" width="0.7514%" height="15" fill="rgb(216,141,28)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="415.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="389" width="0.7514%" height="15" fill="rgb(230,154,53)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="399.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="373" width="0.7514%" height="15" fill="rgb(227,82,4)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="383.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="357" width="0.7514%" height="15" fill="rgb(220,107,16)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="367.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="341" width="0.7514%" height="15" fill="rgb(207,187,2)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="351.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="325" width="0.7514%" height="15" fill="rgb(210,162,52)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="335.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="309" width="0.7514%" height="15" fill="rgb(217,216,49)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="319.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="293" width="0.7514%" height="15" fill="rgb(218,146,49)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="303.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="277" width="0.7514%" height="15" fill="rgb(216,55,40)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="287.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="261" width="0.7514%" height="15" fill="rgb(208,196,21)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="271.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="245" width="0.7514%" height="15" fill="rgb(242,117,42)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="255.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="229" width="0.7514%" height="15" fill="rgb(210,11,23)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="239.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (151,404,794 samples, 0.75%)</title><rect x="17.5257%" y="213" width="0.7514%" height="15" fill="rgb(217,110,2)" fg:x="3531174314" fg:w="151404794"/><text x="17.7757%" y="223.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (62,649,780 samples, 0.31%)</title><rect x="18.2771%" y="85" width="0.3109%" height="15" fill="rgb(229,77,54)" fg:x="3682579108" fg:w="62649780"/><text x="18.5271%" y="95.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (62,649,780 samples, 0.31%)</title><rect x="18.2771%" y="69" width="0.3109%" height="15" fill="rgb(218,53,16)" fg:x="3682579108" fg:w="62649780"/><text x="18.5271%" y="79.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (61,981,142 samples, 0.31%)</title><rect x="18.2804%" y="53" width="0.3076%" height="15" fill="rgb(215,38,13)" fg:x="3683247746" fg:w="61981142"/><text x="18.5304%" y="63.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,981,142 samples, 0.31%)</title><rect x="18.2804%" y="37" width="0.3076%" height="15" fill="rgb(235,42,18)" fg:x="3683247746" fg:w="61981142"/><text x="18.5304%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (88,842,553 samples, 0.44%)</title><rect x="18.2771%" y="213" width="0.4409%" height="15" fill="rgb(219,66,54)" fg:x="3682579108" fg:w="88842553"/><text x="18.5271%" y="223.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (88,842,553 samples, 0.44%)</title><rect x="18.2771%" y="197" width="0.4409%" height="15" fill="rgb(222,205,4)" fg:x="3682579108" fg:w="88842553"/><text x="18.5271%" y="207.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (88,842,553 samples, 0.44%)</title><rect x="18.2771%" y="181" width="0.4409%" height="15" fill="rgb(227,213,46)" fg:x="3682579108" fg:w="88842553"/><text x="18.5271%" y="191.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (88,842,553 samples, 0.44%)</title><rect x="18.2771%" y="165" width="0.4409%" height="15" fill="rgb(250,145,42)" fg:x="3682579108" fg:w="88842553"/><text x="18.5271%" y="175.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (88,842,553 samples, 0.44%)</title><rect x="18.2771%" y="149" width="0.4409%" height="15" fill="rgb(219,15,2)" fg:x="3682579108" fg:w="88842553"/><text x="18.5271%" y="159.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (88,842,553 samples, 0.44%)</title><rect x="18.2771%" y="133" width="0.4409%" height="15" fill="rgb(231,181,52)" fg:x="3682579108" fg:w="88842553"/><text x="18.5271%" y="143.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (88,842,553 samples, 0.44%)</title><rect x="18.2771%" y="117" width="0.4409%" height="15" fill="rgb(235,1,42)" fg:x="3682579108" fg:w="88842553"/><text x="18.5271%" y="127.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (88,842,553 samples, 0.44%)</title><rect x="18.2771%" y="101" width="0.4409%" height="15" fill="rgb(249,88,27)" fg:x="3682579108" fg:w="88842553"/><text x="18.5271%" y="111.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (26,192,773 samples, 0.13%)</title><rect x="18.5880%" y="85" width="0.1300%" height="15" fill="rgb(235,145,16)" fg:x="3745228888" fg:w="26192773"/><text x="18.8380%" y="95.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,192,773 samples, 0.13%)</title><rect x="18.5880%" y="69" width="0.1300%" height="15" fill="rgb(237,114,19)" fg:x="3745228888" fg:w="26192773"/><text x="18.8380%" y="79.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,192,773 samples, 0.13%)</title><rect x="18.5880%" y="53" width="0.1300%" height="15" fill="rgb(238,51,50)" fg:x="3745228888" fg:w="26192773"/><text x="18.8380%" y="63.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,446,975 samples, 0.12%)</title><rect x="18.5967%" y="37" width="0.1213%" height="15" fill="rgb(205,194,25)" fg:x="3746974686" fg:w="24446975"/><text x="18.8467%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (473,814,604 samples, 2.35%)</title><rect x="16.3690%" y="2053" width="2.3516%" height="15" fill="rgb(215,203,17)" fg:x="3298121343" fg:w="473814604"/><text x="16.6190%" y="2063.50">s..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="2037" width="0.4435%" height="15" fill="rgb(233,112,49)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="2047.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="2021" width="0.4435%" height="15" fill="rgb(241,130,26)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="2031.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="2005" width="0.4435%" height="15" fill="rgb(252,223,19)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="2015.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1989" width="0.4435%" height="15" fill="rgb(211,95,25)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1999.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1973" width="0.4435%" height="15" fill="rgb(251,182,27)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1983.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1957" width="0.4435%" height="15" fill="rgb(238,24,4)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1967.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1941" width="0.4435%" height="15" fill="rgb(224,220,25)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1951.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1925" width="0.4435%" height="15" fill="rgb(239,133,26)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1935.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1909" width="0.4435%" height="15" fill="rgb(211,94,48)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1919.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1893" width="0.4435%" height="15" fill="rgb(239,87,6)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1903.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1877" width="0.4435%" height="15" fill="rgb(227,62,0)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1887.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1861" width="0.4435%" height="15" fill="rgb(211,226,4)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1871.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1845" width="0.4435%" height="15" fill="rgb(253,38,52)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1855.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1829" width="0.4435%" height="15" fill="rgb(229,126,40)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1839.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1813" width="0.4435%" height="15" fill="rgb(229,165,44)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1823.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1797" width="0.4435%" height="15" fill="rgb(247,95,47)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1807.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1781" width="0.4435%" height="15" fill="rgb(216,140,30)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1791.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1765" width="0.4435%" height="15" fill="rgb(246,214,8)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1775.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1749" width="0.4435%" height="15" fill="rgb(227,224,15)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1759.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1733" width="0.4435%" height="15" fill="rgb(233,175,4)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1743.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1717" width="0.4435%" height="15" fill="rgb(221,66,45)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1727.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1701" width="0.4435%" height="15" fill="rgb(221,178,18)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1711.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1685" width="0.4435%" height="15" fill="rgb(213,81,29)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1695.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1669" width="0.4435%" height="15" fill="rgb(220,89,49)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1679.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1653" width="0.4435%" height="15" fill="rgb(227,60,33)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1663.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1637" width="0.4435%" height="15" fill="rgb(205,113,12)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1647.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1621" width="0.4435%" height="15" fill="rgb(211,32,1)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1631.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1605" width="0.4435%" height="15" fill="rgb(246,2,12)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1615.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1589" width="0.4435%" height="15" fill="rgb(243,37,27)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1599.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1573" width="0.4435%" height="15" fill="rgb(248,211,31)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1583.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1557" width="0.4435%" height="15" fill="rgb(242,146,47)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1567.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1541" width="0.4435%" height="15" fill="rgb(206,70,20)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1551.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1525" width="0.4435%" height="15" fill="rgb(215,10,51)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1535.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1509" width="0.4435%" height="15" fill="rgb(243,178,53)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1519.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1493" width="0.4435%" height="15" fill="rgb(233,221,20)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1503.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1477" width="0.4435%" height="15" fill="rgb(218,95,35)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1487.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1461" width="0.4435%" height="15" fill="rgb(229,13,5)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1471.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1445" width="0.4435%" height="15" fill="rgb(252,164,30)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1455.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1429" width="0.4435%" height="15" fill="rgb(232,68,36)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1439.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1413" width="0.4435%" height="15" fill="rgb(219,59,54)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1423.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1397" width="0.4435%" height="15" fill="rgb(250,92,33)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1407.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1381" width="0.4435%" height="15" fill="rgb(229,162,54)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1391.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1365" width="0.4435%" height="15" fill="rgb(244,114,52)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1375.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1349" width="0.4435%" height="15" fill="rgb(212,211,43)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1359.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1333" width="0.4435%" height="15" fill="rgb(226,147,8)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1343.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1317" width="0.4435%" height="15" fill="rgb(226,23,13)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1327.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1301" width="0.4435%" height="15" fill="rgb(240,63,4)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1311.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1285" width="0.4435%" height="15" fill="rgb(221,1,32)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1295.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1269" width="0.4435%" height="15" fill="rgb(242,117,10)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1279.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1253" width="0.4435%" height="15" fill="rgb(249,172,44)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1263.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1237" width="0.4435%" height="15" fill="rgb(244,46,45)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1247.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1221" width="0.4435%" height="15" fill="rgb(206,43,17)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1231.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1205" width="0.4435%" height="15" fill="rgb(239,218,39)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1215.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1189" width="0.4435%" height="15" fill="rgb(208,169,54)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1199.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1173" width="0.4435%" height="15" fill="rgb(247,25,42)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1183.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1157" width="0.4435%" height="15" fill="rgb(226,23,31)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1167.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1141" width="0.4435%" height="15" fill="rgb(247,16,28)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1151.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1125" width="0.4435%" height="15" fill="rgb(231,147,38)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1135.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1109" width="0.4435%" height="15" fill="rgb(253,81,48)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1119.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1093" width="0.4435%" height="15" fill="rgb(249,222,43)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1103.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1077" width="0.4435%" height="15" fill="rgb(221,3,27)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1087.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1061" width="0.4435%" height="15" fill="rgb(228,180,5)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1071.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1045" width="0.4435%" height="15" fill="rgb(227,131,42)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1055.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1029" width="0.4435%" height="15" fill="rgb(212,3,39)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1039.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="1013" width="0.4435%" height="15" fill="rgb(226,45,5)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1023.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="997" width="0.4435%" height="15" fill="rgb(215,167,45)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="1007.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="981" width="0.4435%" height="15" fill="rgb(250,218,53)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="991.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="965" width="0.4435%" height="15" fill="rgb(207,140,0)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="975.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="949" width="0.4435%" height="15" fill="rgb(238,133,51)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="959.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="933" width="0.4435%" height="15" fill="rgb(218,203,53)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="943.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="917" width="0.4435%" height="15" fill="rgb(226,184,25)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="927.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="901" width="0.4435%" height="15" fill="rgb(231,121,21)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="911.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="885" width="0.4435%" height="15" fill="rgb(251,14,34)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="895.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="869" width="0.4435%" height="15" fill="rgb(249,193,11)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="879.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="853" width="0.4435%" height="15" fill="rgb(220,172,37)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="863.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="837" width="0.4435%" height="15" fill="rgb(231,229,43)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="847.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="821" width="0.4435%" height="15" fill="rgb(250,161,5)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="831.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="805" width="0.4435%" height="15" fill="rgb(218,225,18)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="815.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="789" width="0.4435%" height="15" fill="rgb(245,45,42)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="799.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="773" width="0.4435%" height="15" fill="rgb(211,115,1)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="783.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="757" width="0.4435%" height="15" fill="rgb(248,133,52)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="767.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="741" width="0.4435%" height="15" fill="rgb(238,100,21)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="751.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="725" width="0.4435%" height="15" fill="rgb(247,144,11)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="735.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="709" width="0.4435%" height="15" fill="rgb(206,164,16)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="719.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="693" width="0.4435%" height="15" fill="rgb(222,34,3)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="703.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="677" width="0.4435%" height="15" fill="rgb(248,82,4)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="687.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="661" width="0.4435%" height="15" fill="rgb(228,81,46)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="671.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="645" width="0.4435%" height="15" fill="rgb(227,67,47)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="655.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="629" width="0.4435%" height="15" fill="rgb(215,93,53)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="639.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="613" width="0.4435%" height="15" fill="rgb(248,194,39)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="623.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="597" width="0.4435%" height="15" fill="rgb(215,5,19)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="607.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="581" width="0.4435%" height="15" fill="rgb(226,215,51)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="591.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="565" width="0.4435%" height="15" fill="rgb(225,56,26)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="575.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="549" width="0.4435%" height="15" fill="rgb(222,75,29)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="559.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="533" width="0.4435%" height="15" fill="rgb(236,139,6)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="543.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="517" width="0.4435%" height="15" fill="rgb(223,137,36)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="527.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="501" width="0.4435%" height="15" fill="rgb(226,99,2)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="511.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="485" width="0.4435%" height="15" fill="rgb(206,133,23)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="495.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="469" width="0.4435%" height="15" fill="rgb(243,173,15)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="479.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="453" width="0.4435%" height="15" fill="rgb(228,69,28)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="463.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="437" width="0.4435%" height="15" fill="rgb(212,51,22)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="447.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="421" width="0.4435%" height="15" fill="rgb(227,113,0)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="431.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="405" width="0.4435%" height="15" fill="rgb(252,84,27)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="415.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="389" width="0.4435%" height="15" fill="rgb(223,145,39)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="399.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="373" width="0.4435%" height="15" fill="rgb(239,219,30)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="383.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="357" width="0.4435%" height="15" fill="rgb(224,196,39)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="367.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="341" width="0.4435%" height="15" fill="rgb(205,35,43)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="351.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="325" width="0.4435%" height="15" fill="rgb(228,201,21)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="335.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="309" width="0.4435%" height="15" fill="rgb(237,118,16)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="319.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="293" width="0.4435%" height="15" fill="rgb(241,17,19)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="303.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="277" width="0.4435%" height="15" fill="rgb(214,10,25)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="287.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="261" width="0.4435%" height="15" fill="rgb(238,37,29)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="271.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="245" width="0.4435%" height="15" fill="rgb(253,83,25)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="255.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,356,839 samples, 0.44%)</title><rect x="18.2771%" y="229" width="0.4435%" height="15" fill="rgb(234,192,12)" fg:x="3682579108" fg:w="89356839"/><text x="18.5271%" y="239.50"></text></g><g><title>cfree@GLIBC_2.2.5 (23,005,961 samples, 0.11%)</title><rect x="18.7206%" y="37" width="0.1142%" height="15" fill="rgb(241,216,45)" fg:x="3771935947" fg:w="23005961"/><text x="18.9706%" y="47.50"></text></g><g><title>malloc (2,792,066 samples, 0.01%)</title><rect x="18.8402%" y="37" width="0.0139%" height="15" fill="rgb(242,22,33)" fg:x="3796036529" fg:w="2792066"/><text x="19.0902%" y="47.50"></text></g><g><title>operator delete (2,392,298 samples, 0.01%)</title><rect x="18.8541%" y="37" width="0.0119%" height="15" fill="rgb(231,105,49)" fg:x="3798828595" fg:w="2392298"/><text x="19.1041%" y="47.50"></text></g><g><title>operator new (4,116,715 samples, 0.02%)</title><rect x="18.8659%" y="37" width="0.0204%" height="15" fill="rgb(218,204,15)" fg:x="3801220893" fg:w="4116715"/><text x="19.1159%" y="47.50"></text></g><g><title>std::_Function_handler&lt;bool (char), std::__detail::_AnyMatcher&lt;std::regex_traits&lt;char&gt;, true, false, false&gt; &gt;::_M_invoke (4,438,672 samples, 0.02%)</title><rect x="18.8864%" y="37" width="0.0220%" height="15" fill="rgb(235,138,41)" fg:x="3805337608" fg:w="4438672"/><text x="19.1364%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (58,820,317 samples, 0.29%)</title><rect x="18.9084%" y="37" width="0.2919%" height="15" fill="rgb(246,0,9)" fg:x="3809776280" fg:w="58820317"/><text x="19.1584%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (590,433,494 samples, 2.93%)</title><rect x="19.2003%" y="37" width="2.9304%" height="15" fill="rgb(210,74,4)" fg:x="3868596597" fg:w="590433494"/><text x="19.4503%" y="47.50">st..</text></g><g><title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (4,693,905 samples, 0.02%)</title><rect x="22.1307%" y="37" width="0.0233%" height="15" fill="rgb(250,60,41)" fg:x="4459030091" fg:w="4693905"/><text x="22.3807%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (695,231,794 samples, 3.45%)</title><rect x="18.7206%" y="101" width="3.4505%" height="15" fill="rgb(220,115,12)" fg:x="3771935947" fg:w="695231794"/><text x="18.9706%" y="111.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (695,231,794 samples, 3.45%)</title><rect x="18.7206%" y="85" width="3.4505%" height="15" fill="rgb(237,100,13)" fg:x="3771935947" fg:w="695231794"/><text x="18.9706%" y="95.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (695,231,794 samples, 3.45%)</title><rect x="18.7206%" y="69" width="3.4505%" height="15" fill="rgb(213,55,26)" fg:x="3771935947" fg:w="695231794"/><text x="18.9706%" y="79.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (695,231,794 samples, 3.45%)</title><rect x="18.7206%" y="53" width="3.4505%" height="15" fill="rgb(216,17,4)" fg:x="3771935947" fg:w="695231794"/><text x="18.9706%" y="63.50">std..</text></g><g><title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (3,443,745 samples, 0.02%)</title><rect x="22.1540%" y="37" width="0.0171%" height="15" fill="rgb(220,153,47)" fg:x="4463723996" fg:w="3443745"/><text x="22.4040%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (695,764,759 samples, 3.45%)</title><rect x="18.7206%" y="165" width="3.4532%" height="15" fill="rgb(215,131,9)" fg:x="3771935947" fg:w="695764759"/><text x="18.9706%" y="175.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (695,764,759 samples, 3.45%)</title><rect x="18.7206%" y="149" width="3.4532%" height="15" fill="rgb(233,46,42)" fg:x="3771935947" fg:w="695764759"/><text x="18.9706%" y="159.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (695,764,759 samples, 3.45%)</title><rect x="18.7206%" y="133" width="3.4532%" height="15" fill="rgb(226,86,7)" fg:x="3771935947" fg:w="695764759"/><text x="18.9706%" y="143.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (695,764,759 samples, 3.45%)</title><rect x="18.7206%" y="117" width="3.4532%" height="15" fill="rgb(239,226,21)" fg:x="3771935947" fg:w="695764759"/><text x="18.9706%" y="127.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="2053" width="3.4562%" height="15" fill="rgb(244,137,22)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="2063.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="2037" width="3.4562%" height="15" fill="rgb(211,139,35)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="2047.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="2021" width="3.4562%" height="15" fill="rgb(214,62,50)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="2031.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="2005" width="3.4562%" height="15" fill="rgb(212,113,44)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="2015.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1989" width="3.4562%" height="15" fill="rgb(226,150,43)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1999.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1973" width="3.4562%" height="15" fill="rgb(250,71,37)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1983.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1957" width="3.4562%" height="15" fill="rgb(219,76,19)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1967.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1941" width="3.4562%" height="15" fill="rgb(250,39,11)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1951.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1925" width="3.4562%" height="15" fill="rgb(230,64,31)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1935.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1909" width="3.4562%" height="15" fill="rgb(208,222,23)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1919.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1893" width="3.4562%" height="15" fill="rgb(227,125,18)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1903.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1877" width="3.4562%" height="15" fill="rgb(234,210,9)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1887.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1861" width="3.4562%" height="15" fill="rgb(217,127,24)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1871.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1845" width="3.4562%" height="15" fill="rgb(239,141,48)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1855.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1829" width="3.4562%" height="15" fill="rgb(227,109,8)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1839.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1813" width="3.4562%" height="15" fill="rgb(235,184,23)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1823.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1797" width="3.4562%" height="15" fill="rgb(227,226,48)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1807.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1781" width="3.4562%" height="15" fill="rgb(206,150,11)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1791.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1765" width="3.4562%" height="15" fill="rgb(254,2,33)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1775.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1749" width="3.4562%" height="15" fill="rgb(243,160,20)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1759.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1733" width="3.4562%" height="15" fill="rgb(218,208,30)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1743.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1717" width="3.4562%" height="15" fill="rgb(224,120,49)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1727.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1701" width="3.4562%" height="15" fill="rgb(246,12,2)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1711.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1685" width="3.4562%" height="15" fill="rgb(236,117,3)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1695.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1669" width="3.4562%" height="15" fill="rgb(216,128,52)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1679.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1653" width="3.4562%" height="15" fill="rgb(246,145,19)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1663.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1637" width="3.4562%" height="15" fill="rgb(222,11,46)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1647.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1621" width="3.4562%" height="15" fill="rgb(245,82,36)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1631.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1605" width="3.4562%" height="15" fill="rgb(250,73,51)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1615.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1589" width="3.4562%" height="15" fill="rgb(221,189,23)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1599.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1573" width="3.4562%" height="15" fill="rgb(210,33,7)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1583.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1557" width="3.4562%" height="15" fill="rgb(210,107,22)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1567.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1541" width="3.4562%" height="15" fill="rgb(222,116,37)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1551.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1525" width="3.4562%" height="15" fill="rgb(254,17,48)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1535.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1509" width="3.4562%" height="15" fill="rgb(224,36,32)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1519.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1493" width="3.4562%" height="15" fill="rgb(232,90,46)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1503.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1477" width="3.4562%" height="15" fill="rgb(241,66,40)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1487.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1461" width="3.4562%" height="15" fill="rgb(249,184,29)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1471.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1445" width="3.4562%" height="15" fill="rgb(231,181,1)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1455.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1429" width="3.4562%" height="15" fill="rgb(224,94,2)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1439.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1413" width="3.4562%" height="15" fill="rgb(229,170,15)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1423.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1397" width="3.4562%" height="15" fill="rgb(240,127,35)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1407.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1381" width="3.4562%" height="15" fill="rgb(248,196,34)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1391.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1365" width="3.4562%" height="15" fill="rgb(236,137,7)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1375.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1349" width="3.4562%" height="15" fill="rgb(235,127,16)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1359.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1333" width="3.4562%" height="15" fill="rgb(250,192,54)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1343.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1317" width="3.4562%" height="15" fill="rgb(218,98,20)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1327.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1301" width="3.4562%" height="15" fill="rgb(230,176,47)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1311.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1285" width="3.4562%" height="15" fill="rgb(244,2,33)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1295.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1269" width="3.4562%" height="15" fill="rgb(231,100,17)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1279.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1253" width="3.4562%" height="15" fill="rgb(245,23,12)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1263.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1237" width="3.4562%" height="15" fill="rgb(249,55,22)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1247.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1221" width="3.4562%" height="15" fill="rgb(207,134,9)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1231.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1205" width="3.4562%" height="15" fill="rgb(218,134,0)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1215.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1189" width="3.4562%" height="15" fill="rgb(213,212,33)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1199.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1173" width="3.4562%" height="15" fill="rgb(252,106,18)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1183.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1157" width="3.4562%" height="15" fill="rgb(208,126,42)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1167.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1141" width="3.4562%" height="15" fill="rgb(246,175,29)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1151.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1125" width="3.4562%" height="15" fill="rgb(215,13,50)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1135.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1109" width="3.4562%" height="15" fill="rgb(216,172,15)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1119.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1093" width="3.4562%" height="15" fill="rgb(212,103,13)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1103.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1077" width="3.4562%" height="15" fill="rgb(231,171,36)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1087.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1061" width="3.4562%" height="15" fill="rgb(250,123,20)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1071.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1045" width="3.4562%" height="15" fill="rgb(212,53,50)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1055.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1029" width="3.4562%" height="15" fill="rgb(243,54,12)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1039.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="1013" width="3.4562%" height="15" fill="rgb(234,101,34)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1023.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="997" width="3.4562%" height="15" fill="rgb(254,67,22)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="1007.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="981" width="3.4562%" height="15" fill="rgb(250,35,47)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="991.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="965" width="3.4562%" height="15" fill="rgb(226,126,38)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="975.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="949" width="3.4562%" height="15" fill="rgb(216,138,53)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="959.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="933" width="3.4562%" height="15" fill="rgb(246,199,43)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="943.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="917" width="3.4562%" height="15" fill="rgb(232,125,11)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="927.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="901" width="3.4562%" height="15" fill="rgb(218,219,45)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="911.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="885" width="3.4562%" height="15" fill="rgb(216,102,54)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="895.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="869" width="3.4562%" height="15" fill="rgb(250,228,7)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="879.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="853" width="3.4562%" height="15" fill="rgb(226,125,25)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="863.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="837" width="3.4562%" height="15" fill="rgb(224,165,27)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="847.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="821" width="3.4562%" height="15" fill="rgb(233,86,3)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="831.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="805" width="3.4562%" height="15" fill="rgb(228,116,20)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="815.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="789" width="3.4562%" height="15" fill="rgb(209,192,17)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="799.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="773" width="3.4562%" height="15" fill="rgb(224,88,34)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="783.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="757" width="3.4562%" height="15" fill="rgb(233,38,6)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="767.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="741" width="3.4562%" height="15" fill="rgb(212,59,30)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="751.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="725" width="3.4562%" height="15" fill="rgb(213,80,3)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="735.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="709" width="3.4562%" height="15" fill="rgb(251,178,7)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="719.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="693" width="3.4562%" height="15" fill="rgb(213,154,26)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="703.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="677" width="3.4562%" height="15" fill="rgb(238,165,49)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="687.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="661" width="3.4562%" height="15" fill="rgb(248,91,46)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="671.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="645" width="3.4562%" height="15" fill="rgb(244,21,52)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="655.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="629" width="3.4562%" height="15" fill="rgb(247,122,20)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="639.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="613" width="3.4562%" height="15" fill="rgb(218,27,9)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="623.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="597" width="3.4562%" height="15" fill="rgb(246,7,6)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="607.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="581" width="3.4562%" height="15" fill="rgb(227,135,54)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="591.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="565" width="3.4562%" height="15" fill="rgb(247,14,11)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="575.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="549" width="3.4562%" height="15" fill="rgb(206,149,34)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="559.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="533" width="3.4562%" height="15" fill="rgb(227,228,4)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="543.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="517" width="3.4562%" height="15" fill="rgb(238,218,28)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="527.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="501" width="3.4562%" height="15" fill="rgb(252,86,40)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="511.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="485" width="3.4562%" height="15" fill="rgb(251,225,11)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="495.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="469" width="3.4562%" height="15" fill="rgb(206,46,49)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="479.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="453" width="3.4562%" height="15" fill="rgb(245,128,24)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="463.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="437" width="3.4562%" height="15" fill="rgb(219,177,34)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="447.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="421" width="3.4562%" height="15" fill="rgb(218,60,48)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="431.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="405" width="3.4562%" height="15" fill="rgb(221,11,5)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="415.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="389" width="3.4562%" height="15" fill="rgb(220,148,13)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="399.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="373" width="3.4562%" height="15" fill="rgb(210,16,3)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="383.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="357" width="3.4562%" height="15" fill="rgb(236,80,2)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="367.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="341" width="3.4562%" height="15" fill="rgb(239,129,19)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="351.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="325" width="3.4562%" height="15" fill="rgb(220,106,35)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="335.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="309" width="3.4562%" height="15" fill="rgb(252,139,45)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="319.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="293" width="3.4562%" height="15" fill="rgb(229,8,36)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="303.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="277" width="3.4562%" height="15" fill="rgb(230,126,33)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="287.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="261" width="3.4562%" height="15" fill="rgb(239,140,21)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="271.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="245" width="3.4562%" height="15" fill="rgb(254,104,9)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="255.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="229" width="3.4562%" height="15" fill="rgb(239,52,14)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="239.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="213" width="3.4562%" height="15" fill="rgb(208,227,44)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="223.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="197" width="3.4562%" height="15" fill="rgb(246,18,19)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="207.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (696,377,731 samples, 3.46%)</title><rect x="18.7206%" y="181" width="3.4562%" height="15" fill="rgb(235,228,25)" fg:x="3771935947" fg:w="696377731"/><text x="18.9706%" y="191.50">std..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (3,955,838 samples, 0.02%)</title><rect x="22.1801%" y="37" width="0.0196%" height="15" fill="rgb(240,156,20)" fg:x="4468984062" fg:w="3955838"/><text x="22.4301%" y="47.50"></text></g><g><title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Backend::run()::{lambda()#1}&gt; &gt; &gt;::_M_run (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="2053" width="0.0236%" height="15" fill="rgb(224,8,20)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="2063.50"></text></g><g><title>InotifyBackend::start (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="2037" width="0.0236%" height="15" fill="rgb(214,12,52)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="2047.50"></text></g><g><title>InotifyBackend::handleEvents (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="2021" width="0.0236%" height="15" fill="rgb(211,220,47)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="2031.50"></text></g><g><title>InotifyBackend::handleEvent (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="2005" width="0.0236%" height="15" fill="rgb(250,173,5)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="2015.50"></text></g><g><title>InotifyBackend::handleSubscription (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1989" width="0.0236%" height="15" fill="rgb(250,125,52)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1999.50"></text></g><g><title>Watcher::isIgnored (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1973" width="0.0236%" height="15" fill="rgb(209,133,18)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1983.50"></text></g><g><title>Glob::isIgnored (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1957" width="0.0236%" height="15" fill="rgb(216,173,22)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1967.50"></text></g><g><title>bool std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;, (std::__detail::_RegexExecutorPolicy)0, true&gt; (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1941" width="0.0236%" height="15" fill="rgb(205,3,22)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1951.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1925" width="0.0236%" height="15" fill="rgb(248,22,20)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1935.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1909" width="0.0236%" height="15" fill="rgb(233,6,29)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1919.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1893" width="0.0236%" height="15" fill="rgb(240,22,54)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1903.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1877" width="0.0236%" height="15" fill="rgb(231,133,32)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1887.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1861" width="0.0236%" height="15" fill="rgb(248,193,4)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1871.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1845" width="0.0236%" height="15" fill="rgb(211,178,46)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1855.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1829" width="0.0236%" height="15" fill="rgb(224,5,42)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1839.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1813" width="0.0236%" height="15" fill="rgb(239,176,25)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1823.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1797" width="0.0236%" height="15" fill="rgb(245,187,50)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1807.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1781" width="0.0236%" height="15" fill="rgb(248,24,15)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1791.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1765" width="0.0236%" height="15" fill="rgb(205,166,13)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1775.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1749" width="0.0236%" height="15" fill="rgb(208,114,23)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1759.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1733" width="0.0236%" height="15" fill="rgb(239,127,18)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1743.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1717" width="0.0236%" height="15" fill="rgb(219,154,28)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1727.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1701" width="0.0236%" height="15" fill="rgb(225,157,23)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1711.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1685" width="0.0236%" height="15" fill="rgb(219,8,6)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1695.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1669" width="0.0236%" height="15" fill="rgb(212,47,6)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1679.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1653" width="0.0236%" height="15" fill="rgb(224,190,4)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1663.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1637" width="0.0236%" height="15" fill="rgb(239,183,29)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1647.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1621" width="0.0236%" height="15" fill="rgb(213,57,7)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1631.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1605" width="0.0236%" height="15" fill="rgb(216,148,1)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1615.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1589" width="0.0236%" height="15" fill="rgb(236,182,29)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1599.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1573" width="0.0236%" height="15" fill="rgb(244,120,48)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1583.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1557" width="0.0236%" height="15" fill="rgb(206,71,34)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1567.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1541" width="0.0236%" height="15" fill="rgb(242,32,6)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1551.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1525" width="0.0236%" height="15" fill="rgb(241,35,3)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1535.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1509" width="0.0236%" height="15" fill="rgb(222,62,19)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1519.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1493" width="0.0236%" height="15" fill="rgb(223,110,41)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1503.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1477" width="0.0236%" height="15" fill="rgb(208,224,4)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1487.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1461" width="0.0236%" height="15" fill="rgb(241,137,19)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1471.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1445" width="0.0236%" height="15" fill="rgb(244,24,17)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1455.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1429" width="0.0236%" height="15" fill="rgb(245,178,49)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1439.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1413" width="0.0236%" height="15" fill="rgb(219,160,38)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1423.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1397" width="0.0236%" height="15" fill="rgb(228,137,14)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1407.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1381" width="0.0236%" height="15" fill="rgb(237,134,11)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1391.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1365" width="0.0236%" height="15" fill="rgb(211,126,44)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1375.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1349" width="0.0236%" height="15" fill="rgb(226,171,33)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1359.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1333" width="0.0236%" height="15" fill="rgb(253,99,13)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1343.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1317" width="0.0236%" height="15" fill="rgb(244,48,7)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1327.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1301" width="0.0236%" height="15" fill="rgb(244,217,54)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1311.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1285" width="0.0236%" height="15" fill="rgb(224,15,18)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1295.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1269" width="0.0236%" height="15" fill="rgb(244,99,12)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1279.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1253" width="0.0236%" height="15" fill="rgb(233,226,8)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1263.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1237" width="0.0236%" height="15" fill="rgb(229,211,3)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1247.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1221" width="0.0236%" height="15" fill="rgb(216,140,21)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1231.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1205" width="0.0236%" height="15" fill="rgb(234,122,30)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1215.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1189" width="0.0236%" height="15" fill="rgb(236,25,46)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1199.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1173" width="0.0236%" height="15" fill="rgb(217,52,54)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1183.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1157" width="0.0236%" height="15" fill="rgb(222,29,26)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1167.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1141" width="0.0236%" height="15" fill="rgb(216,177,29)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1151.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1125" width="0.0236%" height="15" fill="rgb(247,136,51)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1135.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1109" width="0.0236%" height="15" fill="rgb(231,47,47)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1119.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1093" width="0.0236%" height="15" fill="rgb(211,192,36)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1103.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1077" width="0.0236%" height="15" fill="rgb(229,156,32)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1087.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1061" width="0.0236%" height="15" fill="rgb(248,213,20)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1071.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1045" width="0.0236%" height="15" fill="rgb(217,64,7)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1055.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1029" width="0.0236%" height="15" fill="rgb(232,142,8)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1039.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="1013" width="0.0236%" height="15" fill="rgb(224,92,44)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1023.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="997" width="0.0236%" height="15" fill="rgb(214,169,17)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="1007.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="981" width="0.0236%" height="15" fill="rgb(210,59,37)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="991.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="965" width="0.0236%" height="15" fill="rgb(214,116,48)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="975.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="949" width="0.0236%" height="15" fill="rgb(244,191,6)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="959.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="933" width="0.0236%" height="15" fill="rgb(241,50,52)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="943.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="917" width="0.0236%" height="15" fill="rgb(236,75,39)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="927.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="901" width="0.0236%" height="15" fill="rgb(236,99,0)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="911.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="885" width="0.0236%" height="15" fill="rgb(207,202,15)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="895.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="869" width="0.0236%" height="15" fill="rgb(233,207,14)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="879.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="853" width="0.0236%" height="15" fill="rgb(226,27,51)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="863.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="837" width="0.0236%" height="15" fill="rgb(206,104,42)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="847.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="821" width="0.0236%" height="15" fill="rgb(212,225,4)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="831.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="805" width="0.0236%" height="15" fill="rgb(233,96,42)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="815.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="789" width="0.0236%" height="15" fill="rgb(229,21,32)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="799.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="773" width="0.0236%" height="15" fill="rgb(226,216,24)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="783.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="757" width="0.0236%" height="15" fill="rgb(221,163,17)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="767.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="741" width="0.0236%" height="15" fill="rgb(216,216,42)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="751.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="725" width="0.0236%" height="15" fill="rgb(240,118,7)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="735.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="709" width="0.0236%" height="15" fill="rgb(221,67,37)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="719.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="693" width="0.0236%" height="15" fill="rgb(241,32,44)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="703.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="677" width="0.0236%" height="15" fill="rgb(235,204,43)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="687.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="661" width="0.0236%" height="15" fill="rgb(213,116,10)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="671.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="645" width="0.0236%" height="15" fill="rgb(239,15,48)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="655.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="629" width="0.0236%" height="15" fill="rgb(207,123,36)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="639.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="613" width="0.0236%" height="15" fill="rgb(209,103,30)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="623.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="597" width="0.0236%" height="15" fill="rgb(238,100,19)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="607.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="581" width="0.0236%" height="15" fill="rgb(244,30,14)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="591.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="565" width="0.0236%" height="15" fill="rgb(249,174,6)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="575.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="549" width="0.0236%" height="15" fill="rgb(235,213,41)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="559.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="533" width="0.0236%" height="15" fill="rgb(213,118,6)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="543.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="517" width="0.0236%" height="15" fill="rgb(235,44,51)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="527.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="501" width="0.0236%" height="15" fill="rgb(217,9,53)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="511.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="485" width="0.0236%" height="15" fill="rgb(237,172,34)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="495.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="469" width="0.0236%" height="15" fill="rgb(206,206,11)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="479.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="453" width="0.0236%" height="15" fill="rgb(214,149,29)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="463.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="437" width="0.0236%" height="15" fill="rgb(208,123,3)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="447.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="421" width="0.0236%" height="15" fill="rgb(229,126,4)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="431.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="405" width="0.0236%" height="15" fill="rgb(222,92,36)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="415.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="389" width="0.0236%" height="15" fill="rgb(216,39,41)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="399.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="373" width="0.0236%" height="15" fill="rgb(253,127,28)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="383.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="357" width="0.0236%" height="15" fill="rgb(249,152,51)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="367.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="341" width="0.0236%" height="15" fill="rgb(209,123,42)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="351.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="325" width="0.0236%" height="15" fill="rgb(241,118,22)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="335.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="309" width="0.0236%" height="15" fill="rgb(208,25,7)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="319.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="293" width="0.0236%" height="15" fill="rgb(243,144,39)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="303.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="277" width="0.0236%" height="15" fill="rgb(250,50,5)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="287.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="261" width="0.0236%" height="15" fill="rgb(207,67,11)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="271.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="245" width="0.0236%" height="15" fill="rgb(245,204,40)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="255.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="229" width="0.0236%" height="15" fill="rgb(238,228,24)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="239.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="213" width="0.0236%" height="15" fill="rgb(217,116,22)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="223.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="197" width="0.0236%" height="15" fill="rgb(234,98,12)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="207.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="181" width="0.0236%" height="15" fill="rgb(242,170,50)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="191.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="165" width="0.0236%" height="15" fill="rgb(235,7,5)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="175.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="149" width="0.0236%" height="15" fill="rgb(241,114,28)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="159.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="133" width="0.0236%" height="15" fill="rgb(246,112,42)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="143.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="117" width="0.0236%" height="15" fill="rgb(248,228,14)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="127.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="101" width="0.0236%" height="15" fill="rgb(208,133,18)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="111.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="85" width="0.0236%" height="15" fill="rgb(207,35,49)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="95.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="69" width="0.0236%" height="15" fill="rgb(205,68,36)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="79.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4,757,818 samples, 0.02%)</title><rect x="22.1768%" y="53" width="0.0236%" height="15" fill="rgb(245,62,40)" fg:x="4468313678" fg:w="4757818"/><text x="22.4268%" y="63.50"></text></g><g><title>handle_mm_fault (2,060,672 samples, 0.01%)</title><rect x="22.4203%" y="1989" width="0.0102%" height="15" fill="rgb(228,27,24)" fg:x="4517365232" fg:w="2060672"/><text x="22.6703%" y="1999.50"></text></g><g><title>do_user_addr_fault (2,785,335 samples, 0.01%)</title><rect x="22.4203%" y="2005" width="0.0138%" height="15" fill="rgb(253,19,12)" fg:x="4517365232" fg:w="2785335"/><text x="22.6703%" y="2015.50"></text></g><g><title>unlink_chunk.constprop.0 (47,860,539 samples, 0.24%)</title><rect x="22.2004%" y="2053" width="0.2375%" height="15" fill="rgb(232,28,20)" fg:x="4473071496" fg:w="47860539"/><text x="22.4504%" y="2063.50"></text></g><g><title>asm_exc_page_fault (4,269,091 samples, 0.02%)</title><rect x="22.4168%" y="2037" width="0.0212%" height="15" fill="rgb(218,35,51)" fg:x="4516662944" fg:w="4269091"/><text x="22.6668%" y="2047.50"></text></g><g><title>exc_page_fault (3,566,803 samples, 0.02%)</title><rect x="22.4203%" y="2021" width="0.0177%" height="15" fill="rgb(212,90,40)" fg:x="4517365232" fg:w="3566803"/><text x="22.6703%" y="2031.50"></text></g><g><title>node (3,533,579,068 samples, 17.54%)</title><rect x="4.9118%" y="2069" width="17.5376%" height="15" fill="rgb(220,172,12)" fg:x="989655694" fg:w="3533579068"/><text x="5.1618%" y="2079.50">node</text></g><g><title>__wake_up (2,412,465 samples, 0.01%)</title><rect x="22.4776%" y="1717" width="0.0120%" height="15" fill="rgb(226,159,20)" fg:x="4528918228" fg:w="2412465"/><text x="22.7276%" y="1727.50"></text></g><g><title>__wake_up_common_lock (2,412,465 samples, 0.01%)</title><rect x="22.4776%" y="1701" width="0.0120%" height="15" fill="rgb(234,205,16)" fg:x="4528918228" fg:w="2412465"/><text x="22.7276%" y="1711.50"></text></g><g><title>__fsnotify_parent (3,788,752 samples, 0.02%)</title><rect x="22.4732%" y="1813" width="0.0188%" height="15" fill="rgb(207,9,39)" fg:x="4528032169" fg:w="3788752"/><text x="22.7232%" y="1823.50"></text></g><g><title>fsnotify (3,788,752 samples, 0.02%)</title><rect x="22.4732%" y="1797" width="0.0188%" height="15" fill="rgb(249,143,15)" fg:x="4528032169" fg:w="3788752"/><text x="22.7232%" y="1807.50"></text></g><g><title>send_to_group (3,788,752 samples, 0.02%)</title><rect x="22.4732%" y="1781" width="0.0188%" height="15" fill="rgb(253,133,29)" fg:x="4528032169" fg:w="3788752"/><text x="22.7232%" y="1791.50"></text></g><g><title>fsnotify_handle_inode_event (3,698,125 samples, 0.02%)</title><rect x="22.4737%" y="1765" width="0.0184%" height="15" fill="rgb(221,187,0)" fg:x="4528122796" fg:w="3698125"/><text x="22.7237%" y="1775.50"></text></g><g><title>inotify_handle_inode_event (3,698,125 samples, 0.02%)</title><rect x="22.4737%" y="1749" width="0.0184%" height="15" fill="rgb(205,204,26)" fg:x="4528122796" fg:w="3698125"/><text x="22.7237%" y="1759.50"></text></g><g><title>fsnotify_insert_event (2,902,693 samples, 0.01%)</title><rect x="22.4776%" y="1733" width="0.0144%" height="15" fill="rgb(224,68,54)" fg:x="4528918228" fg:w="2902693"/><text x="22.7276%" y="1743.50"></text></g><g><title>__filemap_add_folio (2,814,642 samples, 0.01%)</title><rect x="22.5041%" y="1733" width="0.0140%" height="15" fill="rgb(209,67,4)" fg:x="4534265594" fg:w="2814642"/><text x="22.7541%" y="1743.50"></text></g><g><title>filemap_alloc_folio (3,699,689 samples, 0.02%)</title><rect x="22.5181%" y="1733" width="0.0184%" height="15" fill="rgb(228,229,18)" fg:x="4537080236" fg:w="3699689"/><text x="22.7681%" y="1743.50"></text></g><g><title>folio_alloc (3,699,689 samples, 0.02%)</title><rect x="22.5181%" y="1717" width="0.0184%" height="15" fill="rgb(231,89,13)" fg:x="4537080236" fg:w="3699689"/><text x="22.7681%" y="1727.50"></text></g><g><title>alloc_pages (3,699,689 samples, 0.02%)</title><rect x="22.5181%" y="1701" width="0.0184%" height="15" fill="rgb(210,182,18)" fg:x="4537080236" fg:w="3699689"/><text x="22.7681%" y="1711.50"></text></g><g><title>__alloc_pages (3,699,689 samples, 0.02%)</title><rect x="22.5181%" y="1685" width="0.0184%" height="15" fill="rgb(240,105,2)" fg:x="4537080236" fg:w="3699689"/><text x="22.7681%" y="1695.50"></text></g><g><title>get_page_from_freelist (3,699,689 samples, 0.02%)</title><rect x="22.5181%" y="1669" width="0.0184%" height="15" fill="rgb(207,170,50)" fg:x="4537080236" fg:w="3699689"/><text x="22.7681%" y="1679.50"></text></g><g><title>__filemap_get_folio (8,231,812 samples, 0.04%)</title><rect x="22.4993%" y="1749" width="0.0409%" height="15" fill="rgb(232,133,24)" fg:x="4533292447" fg:w="8231812"/><text x="22.7493%" y="1759.50"></text></g><g><title>create_empty_buffers (3,413,739 samples, 0.02%)</title><rect x="22.5402%" y="1733" width="0.0169%" height="15" fill="rgb(235,166,27)" fg:x="4541524259" fg:w="3413739"/><text x="22.7902%" y="1743.50"></text></g><g><title>folio_create_empty_buffers (3,413,739 samples, 0.02%)</title><rect x="22.5402%" y="1717" width="0.0169%" height="15" fill="rgb(209,19,13)" fg:x="4541524259" fg:w="3413739"/><text x="22.7902%" y="1727.50"></text></g><g><title>folio_alloc_buffers (3,413,739 samples, 0.02%)</title><rect x="22.5402%" y="1701" width="0.0169%" height="15" fill="rgb(226,79,39)" fg:x="4541524259" fg:w="3413739"/><text x="22.7902%" y="1711.50"></text></g><g><title>kmem_cache_alloc (2,915,151 samples, 0.01%)</title><rect x="22.5426%" y="1685" width="0.0145%" height="15" fill="rgb(222,163,10)" fg:x="4542022847" fg:w="2915151"/><text x="22.7926%" y="1695.50"></text></g><g><title>___slab_alloc (2,236,945 samples, 0.01%)</title><rect x="22.5460%" y="1669" width="0.0111%" height="15" fill="rgb(214,44,19)" fg:x="4542701053" fg:w="2236945"/><text x="22.7960%" y="1679.50"></text></g><g><title>ext4_da_write_begin (13,128,656 samples, 0.07%)</title><rect x="22.4993%" y="1765" width="0.0652%" height="15" fill="rgb(210,217,13)" fg:x="4533292447" fg:w="13128656"/><text x="22.7493%" y="1775.50"></text></g><g><title>ext4_block_write_begin (4,896,844 samples, 0.02%)</title><rect x="22.5402%" y="1749" width="0.0243%" height="15" fill="rgb(237,61,54)" fg:x="4541524259" fg:w="4896844"/><text x="22.7902%" y="1759.50"></text></g><g><title>handle_pte_fault (2,300,559 samples, 0.01%)</title><rect x="22.5850%" y="1653" width="0.0114%" height="15" fill="rgb(226,184,24)" fg:x="4550550500" fg:w="2300559"/><text x="22.8350%" y="1663.50"></text></g><g><title>handle_mm_fault (2,645,409 samples, 0.01%)</title><rect x="22.5850%" y="1685" width="0.0131%" height="15" fill="rgb(223,226,4)" fg:x="4550550500" fg:w="2645409"/><text x="22.8350%" y="1695.50"></text></g><g><title>__handle_mm_fault (2,645,409 samples, 0.01%)</title><rect x="22.5850%" y="1669" width="0.0131%" height="15" fill="rgb(210,26,41)" fg:x="4550550500" fg:w="2645409"/><text x="22.8350%" y="1679.50"></text></g><g><title>do_user_addr_fault (3,232,551 samples, 0.02%)</title><rect x="22.5850%" y="1701" width="0.0160%" height="15" fill="rgb(220,221,6)" fg:x="4550550500" fg:w="3232551"/><text x="22.8350%" y="1711.50"></text></g><g><title>fault_in_iov_iter_readable (6,964,702 samples, 0.03%)</title><rect x="22.5680%" y="1765" width="0.0346%" height="15" fill="rgb(225,89,49)" fg:x="4547140690" fg:w="6964702"/><text x="22.8180%" y="1775.50"></text></g><g><title>fault_in_readable (5,405,305 samples, 0.03%)</title><rect x="22.5758%" y="1749" width="0.0268%" height="15" fill="rgb(218,70,45)" fg:x="4548700087" fg:w="5405305"/><text x="22.8258%" y="1759.50"></text></g><g><title>asm_exc_page_fault (3,554,892 samples, 0.02%)</title><rect x="22.5850%" y="1733" width="0.0176%" height="15" fill="rgb(238,166,21)" fg:x="4550550500" fg:w="3554892"/><text x="22.8350%" y="1743.50"></text></g><g><title>exc_page_fault (3,554,892 samples, 0.02%)</title><rect x="22.5850%" y="1717" width="0.0176%" height="15" fill="rgb(224,141,44)" fg:x="4550550500" fg:w="3554892"/><text x="22.8350%" y="1727.50"></text></g><g><title>ext4_buffered_write_iter (23,999,164 samples, 0.12%)</title><rect x="22.4920%" y="1797" width="0.1191%" height="15" fill="rgb(230,12,49)" fg:x="4531820921" fg:w="23999164"/><text x="22.7420%" y="1807.50"></text></g><g><title>generic_perform_write (23,999,164 samples, 0.12%)</title><rect x="22.4920%" y="1781" width="0.1191%" height="15" fill="rgb(212,174,12)" fg:x="4531820921" fg:w="23999164"/><text x="22.7420%" y="1791.50"></text></g><g><title>__x64_sys_write (28,377,598 samples, 0.14%)</title><rect x="22.4732%" y="1861" width="0.1408%" height="15" fill="rgb(246,67,9)" fg:x="4528032169" fg:w="28377598"/><text x="22.7232%" y="1871.50"></text></g><g><title>ksys_write (28,377,598 samples, 0.14%)</title><rect x="22.4732%" y="1845" width="0.1408%" height="15" fill="rgb(239,35,23)" fg:x="4528032169" fg:w="28377598"/><text x="22.7232%" y="1855.50"></text></g><g><title>vfs_write (28,377,598 samples, 0.14%)</title><rect x="22.4732%" y="1829" width="0.1408%" height="15" fill="rgb(211,167,0)" fg:x="4528032169" fg:w="28377598"/><text x="22.7232%" y="1839.50"></text></g><g><title>ext4_file_write_iter (24,588,846 samples, 0.12%)</title><rect x="22.4920%" y="1813" width="0.1220%" height="15" fill="rgb(225,119,45)" fg:x="4531820921" fg:w="24588846"/><text x="22.7420%" y="1823.50"></text></g><g><title>entry_SYSCALL_64 (29,562,627 samples, 0.15%)</title><rect x="22.4717%" y="1893" width="0.1467%" height="15" fill="rgb(210,162,6)" fg:x="4527737040" fg:w="29562627"/><text x="22.7217%" y="1903.50"></text></g><g><title>do_syscall_64 (29,562,627 samples, 0.15%)</title><rect x="22.4717%" y="1877" width="0.1467%" height="15" fill="rgb(208,118,35)" fg:x="4527737040" fg:w="29562627"/><text x="22.7217%" y="1887.50"></text></g><g><title>__libc_start_call_main (33,064,262 samples, 0.16%)</title><rect x="22.4575%" y="2053" width="0.1641%" height="15" fill="rgb(239,4,53)" fg:x="4524874214" fg:w="33064262"/><text x="22.7075%" y="2063.50"></text></g><g><title>main (33,064,262 samples, 0.16%)</title><rect x="22.4575%" y="2037" width="0.1641%" height="15" fill="rgb(213,130,21)" fg:x="4524874214" fg:w="33064262"/><text x="22.7075%" y="2047.50"></text></g><g><title>run_builtin (33,064,262 samples, 0.16%)</title><rect x="22.4575%" y="2021" width="0.1641%" height="15" fill="rgb(235,148,0)" fg:x="4524874214" fg:w="33064262"/><text x="22.7075%" y="2031.50"></text></g><g><title>cmd_record (33,064,262 samples, 0.16%)</title><rect x="22.4575%" y="2005" width="0.1641%" height="15" fill="rgb(244,224,18)" fg:x="4524874214" fg:w="33064262"/><text x="22.7075%" y="2015.50"></text></g><g><title>__cmd_record.constprop.0 (33,064,262 samples, 0.16%)</title><rect x="22.4575%" y="1989" width="0.1641%" height="15" fill="rgb(211,214,4)" fg:x="4524874214" fg:w="33064262"/><text x="22.7075%" y="1999.50"></text></g><g><title>record__mmap_read_evlist (31,442,268 samples, 0.16%)</title><rect x="22.4656%" y="1973" width="0.1561%" height="15" fill="rgb(206,119,25)" fg:x="4526496208" fg:w="31442268"/><text x="22.7156%" y="1983.50"></text></g><g><title>perf_mmap__push (30,911,619 samples, 0.15%)</title><rect x="22.4682%" y="1957" width="0.1534%" height="15" fill="rgb(243,93,47)" fg:x="4527026857" fg:w="30911619"/><text x="22.7182%" y="1967.50"></text></g><g><title>record__pushfn (30,201,436 samples, 0.15%)</title><rect x="22.4717%" y="1941" width="0.1499%" height="15" fill="rgb(224,194,6)" fg:x="4527737040" fg:w="30201436"/><text x="22.7217%" y="1951.50"></text></g><g><title>writen (30,201,436 samples, 0.15%)</title><rect x="22.4717%" y="1925" width="0.1499%" height="15" fill="rgb(243,229,6)" fg:x="4527737040" fg:w="30201436"/><text x="22.7217%" y="1935.50"></text></g><g><title>__GI___libc_write (30,201,436 samples, 0.15%)</title><rect x="22.4717%" y="1909" width="0.1499%" height="15" fill="rgb(207,23,50)" fg:x="4527737040" fg:w="30201436"/><text x="22.7217%" y="1919.50"></text></g><g><title>perf (33,314,810 samples, 0.17%)</title><rect x="22.4574%" y="2069" width="0.1653%" height="15" fill="rgb(253,192,32)" fg:x="4524848949" fg:w="33314810"/><text x="22.7074%" y="2079.50"></text></g><g><title>[libprocps.so.8.0.3] (5,719,816 samples, 0.03%)</title><rect x="22.6227%" y="2053" width="0.0284%" height="15" fill="rgb(213,21,6)" fg:x="4558163759" fg:w="5719816"/><text x="22.8727%" y="2063.50"></text></g><g><title>[ps] (2,127,628 samples, 0.01%)</title><rect x="22.6511%" y="2053" width="0.0106%" height="15" fill="rgb(243,151,13)" fg:x="4563883575" fg:w="2127628"/><text x="22.9011%" y="2063.50"></text></g><g><title>getname_flags (2,990,815 samples, 0.01%)</title><rect x="22.6802%" y="1925" width="0.0148%" height="15" fill="rgb(233,165,41)" fg:x="4569735624" fg:w="2990815"/><text x="22.9302%" y="1935.50"></text></g><g><title>inode_permission (2,977,690 samples, 0.01%)</title><rect x="22.7020%" y="1861" width="0.0148%" height="15" fill="rgb(246,176,45)" fg:x="4574141605" fg:w="2977690"/><text x="22.9520%" y="1871.50"></text></g><g><title>generic_permission (2,315,393 samples, 0.01%)</title><rect x="22.7053%" y="1845" width="0.0115%" height="15" fill="rgb(217,170,52)" fg:x="4574803902" fg:w="2315393"/><text x="22.9553%" y="1855.50"></text></g><g><title>link_path_walk (4,506,112 samples, 0.02%)</title><rect x="22.7020%" y="1877" width="0.0224%" height="15" fill="rgb(214,203,54)" fg:x="4574141605" fg:w="4506112"/><text x="22.9520%" y="1887.50"></text></g><g><title>path_lookupat (6,621,654 samples, 0.03%)</title><rect x="22.6984%" y="1893" width="0.0329%" height="15" fill="rgb(248,215,49)" fg:x="4573414805" fg:w="6621654"/><text x="22.9484%" y="1903.50"></text></g><g><title>filename_lookup (7,373,583 samples, 0.04%)</title><rect x="22.6984%" y="1909" width="0.0366%" height="15" fill="rgb(208,46,10)" fg:x="4573414805" fg:w="7373583"/><text x="22.9484%" y="1919.50"></text></g><g><title>entry_SYSCALL_64 (14,771,272 samples, 0.07%)</title><rect x="22.6729%" y="2005" width="0.0733%" height="15" fill="rgb(254,5,31)" fg:x="4568269400" fg:w="14771272"/><text x="22.9229%" y="2015.50"></text></g><g><title>do_syscall_64 (14,084,348 samples, 0.07%)</title><rect x="22.6763%" y="1989" width="0.0699%" height="15" fill="rgb(222,104,33)" fg:x="4568956324" fg:w="14084348"/><text x="22.9263%" y="1999.50"></text></g><g><title>__x64_sys_newfstatat (14,084,348 samples, 0.07%)</title><rect x="22.6763%" y="1973" width="0.0699%" height="15" fill="rgb(248,49,16)" fg:x="4568956324" fg:w="14084348"/><text x="22.9263%" y="1983.50"></text></g><g><title>__se_sys_newfstatat (14,084,348 samples, 0.07%)</title><rect x="22.6763%" y="1957" width="0.0699%" height="15" fill="rgb(232,198,41)" fg:x="4568956324" fg:w="14084348"/><text x="22.9263%" y="1967.50"></text></g><g><title>vfs_fstatat (13,305,048 samples, 0.07%)</title><rect x="22.6802%" y="1941" width="0.0660%" height="15" fill="rgb(214,125,3)" fg:x="4569735624" fg:w="13305048"/><text x="22.9302%" y="1951.50"></text></g><g><title>vfs_statx (9,625,867 samples, 0.05%)</title><rect x="22.6984%" y="1925" width="0.0478%" height="15" fill="rgb(229,220,28)" fg:x="4573414805" fg:w="9625867"/><text x="22.9484%" y="1935.50"></text></g><g><title>__GI___fstatat64 (17,590,894 samples, 0.09%)</title><rect x="22.6729%" y="2021" width="0.0873%" height="15" fill="rgb(222,64,37)" fg:x="4568269400" fg:w="17590894"/><text x="22.9229%" y="2031.50"></text></g><g><title>entry_ibpb (2,819,622 samples, 0.01%)</title><rect x="22.7462%" y="2005" width="0.0140%" height="15" fill="rgb(249,184,13)" fg:x="4583040672" fg:w="2819622"/><text x="22.9962%" y="2015.50"></text></g><g><title>[unknown] (20,873,255 samples, 0.10%)</title><rect x="22.6653%" y="2037" width="0.1036%" height="15" fill="rgb(252,176,6)" fg:x="4566738523" fg:w="20873255"/><text x="22.9153%" y="2047.50"></text></g><g><title>__GI___getdents64 (4,493,743 samples, 0.02%)</title><rect x="22.7867%" y="2037" width="0.0223%" height="15" fill="rgb(228,153,7)" fg:x="4591195888" fg:w="4493743"/><text x="23.0367%" y="2047.50"></text></g><g><title>entry_SYSCALL_64 (4,493,743 samples, 0.02%)</title><rect x="22.7867%" y="2021" width="0.0223%" height="15" fill="rgb(242,193,5)" fg:x="4591195888" fg:w="4493743"/><text x="23.0367%" y="2031.50"></text></g><g><title>do_syscall_64 (4,493,743 samples, 0.02%)</title><rect x="22.7867%" y="2005" width="0.0223%" height="15" fill="rgb(232,140,9)" fg:x="4591195888" fg:w="4493743"/><text x="23.0367%" y="2015.50"></text></g><g><title>__x64_sys_getdents64 (4,493,743 samples, 0.02%)</title><rect x="22.7867%" y="1989" width="0.0223%" height="15" fill="rgb(213,222,16)" fg:x="4591195888" fg:w="4493743"/><text x="23.0367%" y="1999.50"></text></g><g><title>__se_sys_getdents64 (4,493,743 samples, 0.02%)</title><rect x="22.7867%" y="1973" width="0.0223%" height="15" fill="rgb(222,75,50)" fg:x="4591195888" fg:w="4493743"/><text x="23.0367%" y="1983.50"></text></g><g><title>iterate_dir (4,493,743 samples, 0.02%)</title><rect x="22.7867%" y="1957" width="0.0223%" height="15" fill="rgb(205,180,2)" fg:x="4591195888" fg:w="4493743"/><text x="23.0367%" y="1967.50"></text></g><g><title>proc_root_readdir (4,493,743 samples, 0.02%)</title><rect x="22.7867%" y="1941" width="0.0223%" height="15" fill="rgb(216,34,7)" fg:x="4591195888" fg:w="4493743"/><text x="23.0367%" y="1951.50"></text></g><g><title>proc_pid_readdir (4,493,743 samples, 0.02%)</title><rect x="22.7867%" y="1925" width="0.0223%" height="15" fill="rgb(253,16,32)" fg:x="4591195888" fg:w="4493743"/><text x="23.0367%" y="1935.50"></text></g><g><title>proc_fill_cache (3,231,304 samples, 0.02%)</title><rect x="22.7930%" y="1909" width="0.0160%" height="15" fill="rgb(208,97,28)" fg:x="4592458327" fg:w="3231304"/><text x="23.0430%" y="1919.50"></text></g><g><title>kmem_cache_alloc (6,878,451 samples, 0.03%)</title><rect x="22.8554%" y="1909" width="0.0341%" height="15" fill="rgb(225,92,11)" fg:x="4605046397" fg:w="6878451"/><text x="23.1054%" y="1919.50"></text></g><g><title>memset_orig (2,977,606 samples, 0.01%)</title><rect x="22.9004%" y="1893" width="0.0148%" height="15" fill="rgb(243,38,12)" fg:x="4614100922" fg:w="2977606"/><text x="23.1504%" y="1903.50"></text></g><g><title>alloc_empty_file (12,766,774 samples, 0.06%)</title><rect x="22.8554%" y="1925" width="0.0634%" height="15" fill="rgb(208,139,16)" fg:x="4605046397" fg:w="12766774"/><text x="23.1054%" y="1935.50"></text></g><g><title>security_file_alloc (5,888,323 samples, 0.03%)</title><rect x="22.8896%" y="1909" width="0.0292%" height="15" fill="rgb(227,24,9)" fg:x="4611924848" fg:w="5888323"/><text x="23.1396%" y="1919.50"></text></g><g><title>inode_permission (2,944,736 samples, 0.01%)</title><rect x="22.9329%" y="1909" width="0.0146%" height="15" fill="rgb(206,62,11)" fg:x="4620655240" fg:w="2944736"/><text x="23.1829%" y="1919.50"></text></g><g><title>generic_permission (2,183,117 samples, 0.01%)</title><rect x="22.9367%" y="1893" width="0.0108%" height="15" fill="rgb(228,134,27)" fg:x="4621416859" fg:w="2183117"/><text x="23.1867%" y="1903.50"></text></g><g><title>pid_revalidate (2,915,847 samples, 0.01%)</title><rect x="22.9475%" y="1893" width="0.0145%" height="15" fill="rgb(205,55,33)" fg:x="4623599976" fg:w="2915847"/><text x="23.1975%" y="1903.50"></text></g><g><title>lookup_fast (3,602,524 samples, 0.02%)</title><rect x="22.9475%" y="1909" width="0.0179%" height="15" fill="rgb(243,75,43)" fg:x="4623599976" fg:w="3602524"/><text x="23.1975%" y="1919.50"></text></g><g><title>link_path_walk (11,530,452 samples, 0.06%)</title><rect x="22.9259%" y="1925" width="0.0572%" height="15" fill="rgb(223,27,42)" fg:x="4619250200" fg:w="11530452"/><text x="23.1759%" y="1935.50"></text></g><g><title>__d_lookup_rcu (4,266,834 samples, 0.02%)</title><rect x="22.9832%" y="1909" width="0.0212%" height="15" fill="rgb(232,189,33)" fg:x="4630780652" fg:w="4266834"/><text x="23.2332%" y="1919.50"></text></g><g><title>lookup_fast (5,657,776 samples, 0.03%)</title><rect x="22.9832%" y="1925" width="0.0281%" height="15" fill="rgb(210,9,39)" fg:x="4630780652" fg:w="5657776"/><text x="23.2332%" y="1935.50"></text></g><g><title>path_openat (39,390,124 samples, 0.20%)</title><rect x="22.8370%" y="1941" width="0.1955%" height="15" fill="rgb(242,85,26)" fg:x="4601327715" fg:w="39390124"/><text x="23.0870%" y="1951.50"></text></g><g><title>__kmem_cache_alloc_node (2,943,292 samples, 0.01%)</title><rect x="23.0654%" y="1829" width="0.0146%" height="15" fill="rgb(248,44,4)" fg:x="4647358149" fg:w="2943292"/><text x="23.3154%" y="1839.50"></text></g><g><title>kmalloc_trace (3,618,366 samples, 0.02%)</title><rect x="23.0654%" y="1845" width="0.0180%" height="15" fill="rgb(250,96,46)" fg:x="4647358149" fg:w="3618366"/><text x="23.3154%" y="1855.50"></text></g><g><title>proc_single_open (6,541,261 samples, 0.03%)</title><rect x="23.0618%" y="1877" width="0.0325%" height="15" fill="rgb(229,116,26)" fg:x="4646618611" fg:w="6541261"/><text x="23.3118%" y="1887.50"></text></g><g><title>single_open (6,541,261 samples, 0.03%)</title><rect x="23.0618%" y="1861" width="0.0325%" height="15" fill="rgb(246,94,34)" fg:x="4646618611" fg:w="6541261"/><text x="23.3118%" y="1871.50"></text></g><g><title>kmem_cache_alloc (2,183,357 samples, 0.01%)</title><rect x="23.0834%" y="1845" width="0.0108%" height="15" fill="rgb(251,73,21)" fg:x="4650976515" fg:w="2183357"/><text x="23.3334%" y="1855.50"></text></g><g><title>apparmor_file_open (2,285,366 samples, 0.01%)</title><rect x="23.0981%" y="1861" width="0.0113%" height="15" fill="rgb(254,121,25)" fg:x="4653943368" fg:w="2285366"/><text x="23.3481%" y="1871.50"></text></g><g><title>do_dentry_open (13,257,363 samples, 0.07%)</title><rect x="23.0510%" y="1893" width="0.0658%" height="15" fill="rgb(215,161,49)" fg:x="4644441604" fg:w="13257363"/><text x="23.3010%" y="1903.50"></text></g><g><title>security_file_open (4,539,095 samples, 0.02%)</title><rect x="23.0942%" y="1877" width="0.0225%" height="15" fill="rgb(221,43,13)" fg:x="4653159872" fg:w="4539095"/><text x="23.3442%" y="1887.50"></text></g><g><title>[nfsv3.ko] (16,901,885 samples, 0.08%)</title><rect x="23.0362%" y="1925" width="0.0839%" height="15" fill="rgb(249,5,37)" fg:x="4641464819" fg:w="16901885"/><text x="23.2862%" y="1935.50"></text></g><g><title>vfs_open (13,925,100 samples, 0.07%)</title><rect x="23.0510%" y="1909" width="0.0691%" height="15" fill="rgb(226,25,44)" fg:x="4644441604" fg:w="13925100"/><text x="23.3010%" y="1919.50"></text></g><g><title>do_filp_open (61,360,209 samples, 0.30%)</title><rect x="22.8225%" y="1957" width="0.3045%" height="15" fill="rgb(238,189,16)" fg:x="4598413459" fg:w="61360209"/><text x="23.0725%" y="1967.50"></text></g><g><title>vfs_open (18,308,849 samples, 0.09%)</title><rect x="23.0362%" y="1941" width="0.0909%" height="15" fill="rgb(251,186,8)" fg:x="4641464819" fg:w="18308849"/><text x="23.2862%" y="1951.50"></text></g><g><title>alloc_fd (2,245,378 samples, 0.01%)</title><rect x="23.1271%" y="1941" width="0.0111%" height="15" fill="rgb(254,34,31)" fg:x="4659773668" fg:w="2245378"/><text x="23.3771%" y="1951.50"></text></g><g><title>get_unused_fd_flags (2,914,897 samples, 0.01%)</title><rect x="23.1271%" y="1957" width="0.0145%" height="15" fill="rgb(225,215,27)" fg:x="4659773668" fg:w="2914897"/><text x="23.3771%" y="1967.50"></text></g><g><title>getname (5,114,733 samples, 0.03%)</title><rect x="23.1415%" y="1957" width="0.0254%" height="15" fill="rgb(221,192,48)" fg:x="4662688565" fg:w="5114733"/><text x="23.3915%" y="1967.50"></text></g><g><title>getname_flags (5,114,733 samples, 0.03%)</title><rect x="23.1415%" y="1941" width="0.0254%" height="15" fill="rgb(219,137,20)" fg:x="4662688565" fg:w="5114733"/><text x="23.3915%" y="1951.50"></text></g><g><title>strncpy_from_user (2,917,789 samples, 0.01%)</title><rect x="23.1524%" y="1925" width="0.0145%" height="15" fill="rgb(219,84,11)" fg:x="4664885509" fg:w="2917789"/><text x="23.4024%" y="1935.50"></text></g><g><title>__check_object_size (2,917,789 samples, 0.01%)</title><rect x="23.1524%" y="1909" width="0.0145%" height="15" fill="rgb(224,10,23)" fg:x="4664885509" fg:w="2917789"/><text x="23.4024%" y="1919.50"></text></g><g><title>do_sys_openat2 (72,375,533 samples, 0.36%)</title><rect x="22.8189%" y="1973" width="0.3592%" height="15" fill="rgb(248,22,39)" fg:x="4597677269" fg:w="72375533"/><text x="23.0689%" y="1983.50"></text></g><g><title>putname (2,249,504 samples, 0.01%)</title><rect x="23.1669%" y="1957" width="0.0112%" height="15" fill="rgb(212,154,20)" fg:x="4667803298" fg:w="2249504"/><text x="23.4169%" y="1967.50"></text></g><g><title>__x64_sys_openat (73,734,238 samples, 0.37%)</title><rect x="22.8152%" y="1989" width="0.3660%" height="15" fill="rgb(236,199,50)" fg:x="4596949662" fg:w="73734238"/><text x="23.0652%" y="1999.50"></text></g><g><title>syscall_enter_from_user_mode (2,092,682 samples, 0.01%)</title><rect x="23.1849%" y="1989" width="0.0104%" height="15" fill="rgb(211,9,17)" fg:x="4671435528" fg:w="2092682"/><text x="23.4349%" y="1999.50"></text></g><g><title>entry_SYSCALL_64 (77,316,323 samples, 0.38%)</title><rect x="22.8152%" y="2021" width="0.3837%" height="15" fill="rgb(243,216,36)" fg:x="4596949662" fg:w="77316323"/><text x="23.0652%" y="2031.50"></text></g><g><title>do_syscall_64 (77,316,323 samples, 0.38%)</title><rect x="22.8152%" y="2005" width="0.3837%" height="15" fill="rgb(250,2,10)" fg:x="4596949662" fg:w="77316323"/><text x="23.0652%" y="2015.50"></text></g><g><title>__GI___libc_open (88,356,005 samples, 0.44%)</title><rect x="22.8117%" y="2037" width="0.4385%" height="15" fill="rgb(226,50,48)" fg:x="4596242394" fg:w="88356005"/><text x="23.0617%" y="2047.50"></text></g><g><title>entry_ibpb (10,332,414 samples, 0.05%)</title><rect x="23.1990%" y="2021" width="0.0513%" height="15" fill="rgb(243,81,16)" fg:x="4674265985" fg:w="10332414"/><text x="23.4490%" y="2031.50"></text></g><g><title>entry_SYSCALL_64 (2,166,996 samples, 0.01%)</title><rect x="23.2540%" y="2021" width="0.0108%" height="15" fill="rgb(250,14,2)" fg:x="4685341982" fg:w="2166996"/><text x="23.5040%" y="2031.50"></text></g><g><title>do_syscall_64 (2,166,996 samples, 0.01%)</title><rect x="23.2540%" y="2005" width="0.0108%" height="15" fill="rgb(233,135,29)" fg:x="4685341982" fg:w="2166996"/><text x="23.5040%" y="2015.50"></text></g><g><title>__close (4,300,297 samples, 0.02%)</title><rect x="23.2540%" y="2037" width="0.0213%" height="15" fill="rgb(224,64,43)" fg:x="4685341982" fg:w="4300297"/><text x="23.5040%" y="2047.50"></text></g><g><title>entry_ibpb (2,133,301 samples, 0.01%)</title><rect x="23.2647%" y="2021" width="0.0106%" height="15" fill="rgb(238,84,13)" fg:x="4687508978" fg:w="2133301"/><text x="23.5147%" y="2031.50"></text></g><g><title>__isoc99_sscanf (13,949,076 samples, 0.07%)</title><rect x="23.2791%" y="2037" width="0.0692%" height="15" fill="rgb(253,48,26)" fg:x="4690407365" fg:w="13949076"/><text x="23.5291%" y="2047.50"></text></g><g><title>__vfscanf_internal (11,033,350 samples, 0.05%)</title><rect x="23.2936%" y="2021" width="0.0548%" height="15" fill="rgb(205,223,31)" fg:x="4693323091" fg:w="11033350"/><text x="23.5436%" y="2031.50"></text></g><g><title>__mbrtowc (2,978,634 samples, 0.01%)</title><rect x="23.3483%" y="2037" width="0.0148%" height="15" fill="rgb(221,41,32)" fg:x="4704356441" fg:w="2978634"/><text x="23.5983%" y="2047.50"></text></g><g><title>__vfprintf_internal (3,635,768 samples, 0.02%)</title><rect x="23.3883%" y="2037" width="0.0180%" height="15" fill="rgb(213,158,31)" fg:x="4712409960" fg:w="3635768"/><text x="23.6383%" y="2047.50"></text></g><g><title>_dl_sysdep_start (2,429,616 samples, 0.01%)</title><rect x="23.4100%" y="2037" width="0.0121%" height="15" fill="rgb(245,126,43)" fg:x="4716786851" fg:w="2429616"/><text x="23.6600%" y="2047.50"></text></g><g><title>get_user_pages_remote (2,022,147 samples, 0.01%)</title><rect x="23.4403%" y="1893" width="0.0100%" height="15" fill="rgb(227,7,22)" fg:x="4722893019" fg:w="2022147"/><text x="23.6903%" y="1903.50"></text></g><g><title>__get_user_pages (2,022,147 samples, 0.01%)</title><rect x="23.4403%" y="1877" width="0.0100%" height="15" fill="rgb(252,90,44)" fg:x="4722893019" fg:w="2022147"/><text x="23.6903%" y="1887.50"></text></g><g><title>__access_remote_vm (4,851,492 samples, 0.02%)</title><rect x="23.4403%" y="1909" width="0.0241%" height="15" fill="rgb(253,91,0)" fg:x="4722893019" fg:w="4851492"/><text x="23.6903%" y="1919.50"></text></g><g><title>mtree_load (2,829,345 samples, 0.01%)</title><rect x="23.4504%" y="1893" width="0.0140%" height="15" fill="rgb(252,175,49)" fg:x="4724915166" fg:w="2829345"/><text x="23.7004%" y="1903.50"></text></g><g><title>access_remote_vm (5,592,829 samples, 0.03%)</title><rect x="23.4403%" y="1925" width="0.0278%" height="15" fill="rgb(246,150,1)" fg:x="4722893019" fg:w="5592829"/><text x="23.6903%" y="1935.50"></text></g><g><title>proc_pid_cmdline_read (7,038,761 samples, 0.03%)</title><rect x="23.4366%" y="1941" width="0.0349%" height="15" fill="rgb(241,192,25)" fg:x="4722138911" fg:w="7038761"/><text x="23.6866%" y="1951.50"></text></g><g><title>__x64_sys_read (8,457,127 samples, 0.04%)</title><rect x="23.4366%" y="1989" width="0.0420%" height="15" fill="rgb(239,187,11)" fg:x="4722138911" fg:w="8457127"/><text x="23.6866%" y="1999.50"></text></g><g><title>ksys_read (8,457,127 samples, 0.04%)</title><rect x="23.4366%" y="1973" width="0.0420%" height="15" fill="rgb(218,202,51)" fg:x="4722138911" fg:w="8457127"/><text x="23.6866%" y="1983.50"></text></g><g><title>vfs_read (8,457,127 samples, 0.04%)</title><rect x="23.4366%" y="1957" width="0.0420%" height="15" fill="rgb(225,176,8)" fg:x="4722138911" fg:w="8457127"/><text x="23.6866%" y="1967.50"></text></g><g><title>entry_SYSCALL_64 (11,409,481 samples, 0.06%)</title><rect x="23.4330%" y="2021" width="0.0566%" height="15" fill="rgb(219,122,41)" fg:x="4721425907" fg:w="11409481"/><text x="23.6830%" y="2031.50"></text></g><g><title>do_syscall_64 (10,696,477 samples, 0.05%)</title><rect x="23.4366%" y="2005" width="0.0531%" height="15" fill="rgb(248,140,20)" fg:x="4722138911" fg:w="10696477"/><text x="23.6866%" y="2015.50"></text></g><g><title>syscall_exit_to_user_mode (2,239,350 samples, 0.01%)</title><rect x="23.4786%" y="1989" width="0.0111%" height="15" fill="rgb(245,41,37)" fg:x="4730596038" fg:w="2239350"/><text x="23.7286%" y="1999.50"></text></g><g><title>[unknown] (172,231,264 samples, 0.85%)</title><rect x="22.6617%" y="2053" width="0.8548%" height="15" fill="rgb(235,82,39)" fg:x="4566011203" fg:w="172231264"/><text x="22.9117%" y="2063.50"></text></g><g><title>read (16,816,560 samples, 0.08%)</title><rect x="23.4330%" y="2037" width="0.0835%" height="15" fill="rgb(230,108,42)" fg:x="4721425907" fg:w="16816560"/><text x="23.6830%" y="2047.50"></text></g><g><title>entry_ibpb (4,688,295 samples, 0.02%)</title><rect x="23.4932%" y="2021" width="0.0233%" height="15" fill="rgb(215,150,50)" fg:x="4733554172" fg:w="4688295"/><text x="23.7432%" y="2031.50"></text></g><g><title>_IO_default_xsputn (2,973,063 samples, 0.01%)</title><rect x="23.5165%" y="2053" width="0.0148%" height="15" fill="rgb(233,212,5)" fg:x="4738242467" fg:w="2973063"/><text x="23.7665%" y="2063.50"></text></g><g><title>__GI_____strtoll_l_internal (5,147,633 samples, 0.03%)</title><rect x="23.5389%" y="2053" width="0.0255%" height="15" fill="rgb(245,80,22)" fg:x="4742745787" fg:w="5147633"/><text x="23.7889%" y="2063.50"></text></g><g><title>mod_objcg_state (2,976,101 samples, 0.01%)</title><rect x="23.6119%" y="1861" width="0.0148%" height="15" fill="rgb(238,129,16)" fg:x="4757471336" fg:w="2976101"/><text x="23.8619%" y="1871.50"></text></g><g><title>__fput_sync (12,890,740 samples, 0.06%)</title><rect x="23.5732%" y="1973" width="0.0640%" height="15" fill="rgb(240,19,0)" fg:x="4749659519" fg:w="12890740"/><text x="23.8232%" y="1983.50"></text></g><g><title>__fput (12,890,740 samples, 0.06%)</title><rect x="23.5732%" y="1957" width="0.0640%" height="15" fill="rgb(232,42,35)" fg:x="4749659519" fg:w="12890740"/><text x="23.8232%" y="1967.50"></text></g><g><title>single_release (9,262,896 samples, 0.05%)</title><rect x="23.5912%" y="1941" width="0.0460%" height="15" fill="rgb(223,130,24)" fg:x="4753287363" fg:w="9262896"/><text x="23.8412%" y="1951.50"></text></g><g><title>kvfree (6,524,565 samples, 0.03%)</title><rect x="23.6048%" y="1925" width="0.0324%" height="15" fill="rgb(237,16,22)" fg:x="4756025694" fg:w="6524565"/><text x="23.8548%" y="1935.50"></text></g><g><title>kfree (6,524,565 samples, 0.03%)</title><rect x="23.6048%" y="1909" width="0.0324%" height="15" fill="rgb(248,192,20)" fg:x="4756025694" fg:w="6524565"/><text x="23.8548%" y="1919.50"></text></g><g><title>__kmem_cache_free (6,524,565 samples, 0.03%)</title><rect x="23.6048%" y="1893" width="0.0324%" height="15" fill="rgb(233,167,2)" fg:x="4756025694" fg:w="6524565"/><text x="23.8548%" y="1903.50"></text></g><g><title>memcg_slab_free_hook (5,078,923 samples, 0.03%)</title><rect x="23.6119%" y="1877" width="0.0252%" height="15" fill="rgb(252,71,44)" fg:x="4757471336" fg:w="5078923"/><text x="23.8619%" y="1887.50"></text></g><g><title>obj_cgroup_uncharge (2,102,822 samples, 0.01%)</title><rect x="23.6267%" y="1861" width="0.0104%" height="15" fill="rgb(238,37,47)" fg:x="4760447437" fg:w="2102822"/><text x="23.8767%" y="1871.50"></text></g><g><title>refill_obj_stock (2,102,822 samples, 0.01%)</title><rect x="23.6267%" y="1845" width="0.0104%" height="15" fill="rgb(214,202,54)" fg:x="4760447437" fg:w="2102822"/><text x="23.8767%" y="1855.50"></text></g><g><title>obj_cgroup_uncharge_pages (2,102,822 samples, 0.01%)</title><rect x="23.6267%" y="1829" width="0.0104%" height="15" fill="rgb(254,165,40)" fg:x="4760447437" fg:w="2102822"/><text x="23.8767%" y="1839.50"></text></g><g><title>__x64_sys_close (13,667,234 samples, 0.07%)</title><rect x="23.5732%" y="2005" width="0.0678%" height="15" fill="rgb(246,173,38)" fg:x="4749659519" fg:w="13667234"/><text x="23.8232%" y="2015.50"></text></g><g><title>__se_sys_close (13,667,234 samples, 0.07%)</title><rect x="23.5732%" y="1989" width="0.0678%" height="15" fill="rgb(215,3,27)" fg:x="4749659519" fg:w="13667234"/><text x="23.8232%" y="1999.50"></text></g><g><title>entry_SYSCALL_64 (16,548,599 samples, 0.08%)</title><rect x="23.5693%" y="2037" width="0.0821%" height="15" fill="rgb(239,169,51)" fg:x="4748888886" fg:w="16548599"/><text x="23.8193%" y="2047.50"></text></g><g><title>do_syscall_64 (15,777,966 samples, 0.08%)</title><rect x="23.5732%" y="2021" width="0.0783%" height="15" fill="rgb(212,5,25)" fg:x="4749659519" fg:w="15777966"/><text x="23.8232%" y="2031.50"></text></g><g><title>__close (20,202,018 samples, 0.10%)</title><rect x="23.5693%" y="2053" width="0.1003%" height="15" fill="rgb(243,45,17)" fg:x="4748888886" fg:w="20202018"/><text x="23.8193%" y="2063.50"></text></g><g><title>entry_ibpb (3,653,419 samples, 0.02%)</title><rect x="23.6515%" y="2037" width="0.0181%" height="15" fill="rgb(242,97,9)" fg:x="4765437485" fg:w="3653419"/><text x="23.9015%" y="2047.50"></text></g><g><title>__strchr_avx2 (2,229,889 samples, 0.01%)</title><rect x="23.7106%" y="2053" width="0.0111%" height="15" fill="rgb(228,71,31)" fg:x="4777344820" fg:w="2229889"/><text x="23.9606%" y="2063.50"></text></g><g><title>entry_SYSCALL_64 (2,287,122 samples, 0.01%)</title><rect x="23.7312%" y="2021" width="0.0114%" height="15" fill="rgb(252,184,16)" fg:x="4781505057" fg:w="2287122"/><text x="23.9812%" y="2031.50"></text></g><g><title>do_syscall_64 (2,287,122 samples, 0.01%)</title><rect x="23.7312%" y="2005" width="0.0114%" height="15" fill="rgb(236,169,46)" fg:x="4781505057" fg:w="2287122"/><text x="23.9812%" y="2015.50"></text></g><g><title>__x64_sys_mmap (2,287,122 samples, 0.01%)</title><rect x="23.7312%" y="1989" width="0.0114%" height="15" fill="rgb(207,17,47)" fg:x="4781505057" fg:w="2287122"/><text x="23.9812%" y="1999.50"></text></g><g><title>ksys_mmap_pgoff (2,287,122 samples, 0.01%)</title><rect x="23.7312%" y="1973" width="0.0114%" height="15" fill="rgb(206,201,28)" fg:x="4781505057" fg:w="2287122"/><text x="23.9812%" y="1983.50"></text></g><g><title>vm_mmap_pgoff (2,287,122 samples, 0.01%)</title><rect x="23.7312%" y="1957" width="0.0114%" height="15" fill="rgb(224,184,23)" fg:x="4781505057" fg:w="2287122"/><text x="23.9812%" y="1967.50"></text></g><g><title>mmap64 (2,521,937 samples, 0.01%)</title><rect x="23.7312%" y="2037" width="0.0125%" height="15" fill="rgb(208,139,48)" fg:x="4781505057" fg:w="2521937"/><text x="23.9812%" y="2047.50"></text></g><g><title>_dl_map_object (4,873,163 samples, 0.02%)</title><rect x="23.7216%" y="2053" width="0.0242%" height="15" fill="rgb(208,130,10)" fg:x="4779574709" fg:w="4873163"/><text x="23.9716%" y="2063.50"></text></g><g><title>security_file_permission (2,121,955 samples, 0.01%)</title><rect x="23.7877%" y="1957" width="0.0105%" height="15" fill="rgb(211,213,45)" fg:x="4792889059" fg:w="2121955"/><text x="24.0377%" y="1967.50"></text></g><g><title>apparmor_file_permission (2,121,955 samples, 0.01%)</title><rect x="23.7877%" y="1941" width="0.0105%" height="15" fill="rgb(235,100,30)" fg:x="4792889059" fg:w="2121955"/><text x="24.0377%" y="1951.50"></text></g><g><title>memcg_slab_post_alloc_hook (2,200,446 samples, 0.01%)</title><rect x="23.8327%" y="1877" width="0.0109%" height="15" fill="rgb(206,144,31)" fg:x="4801955023" fg:w="2200446"/><text x="24.0827%" y="1887.50"></text></g><g><title>__kmem_cache_alloc_node (4,360,483 samples, 0.02%)</title><rect x="23.8327%" y="1893" width="0.0216%" height="15" fill="rgb(224,200,26)" fg:x="4801955023" fg:w="4360483"/><text x="24.0827%" y="1903.50"></text></g><g><title>obj_cgroup_charge (2,160,037 samples, 0.01%)</title><rect x="23.8436%" y="1877" width="0.0107%" height="15" fill="rgb(247,104,53)" fg:x="4804155469" fg:w="2160037"/><text x="24.0936%" y="1887.50"></text></g><g><title>kvmalloc_node (7,758,968 samples, 0.04%)</title><rect x="23.8263%" y="1925" width="0.0385%" height="15" fill="rgb(220,14,17)" fg:x="4800654294" fg:w="7758968"/><text x="24.0763%" y="1935.50"></text></g><g><title>__kmalloc_node (7,110,830 samples, 0.04%)</title><rect x="23.8295%" y="1909" width="0.0353%" height="15" fill="rgb(230,140,40)" fg:x="4801302432" fg:w="7110830"/><text x="24.0795%" y="1919.50"></text></g><g><title>cpuset_task_status_allowed (3,669,748 samples, 0.02%)</title><rect x="23.8940%" y="1893" width="0.0182%" height="15" fill="rgb(229,2,41)" fg:x="4814294864" fg:w="3669748"/><text x="24.1440%" y="1903.50"></text></g><g><title>seq_printf (3,669,748 samples, 0.02%)</title><rect x="23.8940%" y="1877" width="0.0182%" height="15" fill="rgb(232,89,16)" fg:x="4814294864" fg:w="3669748"/><text x="24.1440%" y="1887.50"></text></g><g><title>vsnprintf (3,669,748 samples, 0.02%)</title><rect x="23.8940%" y="1861" width="0.0182%" height="15" fill="rgb(247,59,52)" fg:x="4814294864" fg:w="3669748"/><text x="24.1440%" y="1871.50"></text></g><g><title>pointer (3,669,748 samples, 0.02%)</title><rect x="23.8940%" y="1845" width="0.0182%" height="15" fill="rgb(226,110,21)" fg:x="4814294864" fg:w="3669748"/><text x="24.1440%" y="1855.50"></text></g><g><title>bitmap_string (3,669,748 samples, 0.02%)</title><rect x="23.8940%" y="1829" width="0.0182%" height="15" fill="rgb(224,176,43)" fg:x="4814294864" fg:w="3669748"/><text x="24.1440%" y="1839.50"></text></g><g><title>number (2,935,630 samples, 0.01%)</title><rect x="23.8976%" y="1813" width="0.0146%" height="15" fill="rgb(221,73,6)" fg:x="4815028982" fg:w="2935630"/><text x="24.1476%" y="1823.50"></text></g><g><title>proc_task_name (2,819,447 samples, 0.01%)</title><rect x="23.9195%" y="1893" width="0.0140%" height="15" fill="rgb(232,78,19)" fg:x="4819441056" fg:w="2819447"/><text x="24.1695%" y="1903.50"></text></g><g><title>seq_printf (4,217,343 samples, 0.02%)</title><rect x="23.9335%" y="1893" width="0.0209%" height="15" fill="rgb(233,112,48)" fg:x="4822260503" fg:w="4217343"/><text x="24.1835%" y="1903.50"></text></g><g><title>vsnprintf (3,479,034 samples, 0.02%)</title><rect x="23.9372%" y="1877" width="0.0173%" height="15" fill="rgb(243,131,47)" fg:x="4822998812" fg:w="3479034"/><text x="24.1872%" y="1887.50"></text></g><g><title>num_to_str (2,882,713 samples, 0.01%)</title><rect x="23.9656%" y="1877" width="0.0143%" height="15" fill="rgb(226,51,1)" fg:x="4828731900" fg:w="2882713"/><text x="24.2156%" y="1887.50"></text></g><g><title>seq_put_decimal_ull (5,845,877 samples, 0.03%)</title><rect x="23.9544%" y="1893" width="0.0290%" height="15" fill="rgb(247,58,7)" fg:x="4826477846" fg:w="5845877"/><text x="24.2044%" y="1903.50"></text></g><g><title>proc_pid_status (23,953,757 samples, 0.12%)</title><rect x="23.8832%" y="1909" width="0.1189%" height="15" fill="rgb(209,7,32)" fg:x="4812129988" fg:w="23953757"/><text x="24.1332%" y="1919.50"></text></g><g><title>do_task_stat (8,724,818 samples, 0.04%)</title><rect x="24.0060%" y="1893" width="0.0433%" height="15" fill="rgb(209,39,41)" fg:x="4836871061" fg:w="8724818"/><text x="24.2560%" y="1903.50"></text></g><g><title>wq_worker_comm (2,216,452 samples, 0.01%)</title><rect x="24.0383%" y="1877" width="0.0110%" height="15" fill="rgb(226,182,46)" fg:x="4843379427" fg:w="2216452"/><text x="24.2883%" y="1887.50"></text></g><g><title>proc_tgid_stat (10,185,185 samples, 0.05%)</title><rect x="24.0060%" y="1909" width="0.0506%" height="15" fill="rgb(230,219,10)" fg:x="4836871061" fg:w="10185185"/><text x="24.2560%" y="1919.50"></text></g><g><title>__x64_sys_read (57,143,729 samples, 0.28%)</title><rect x="23.7768%" y="2005" width="0.2836%" height="15" fill="rgb(227,175,30)" fg:x="4790679473" fg:w="57143729"/><text x="24.0268%" y="2015.50"></text></g><g><title>ksys_read (57,143,729 samples, 0.28%)</title><rect x="23.7768%" y="1989" width="0.2836%" height="15" fill="rgb(217,2,50)" fg:x="4790679473" fg:w="57143729"/><text x="24.0268%" y="1999.50"></text></g><g><title>vfs_read (56,404,397 samples, 0.28%)</title><rect x="23.7804%" y="1973" width="0.2799%" height="15" fill="rgb(229,160,0)" fg:x="4791418805" fg:w="56404397"/><text x="24.0304%" y="1983.50"></text></g><g><title>seq_read (52,812,188 samples, 0.26%)</title><rect x="23.7983%" y="1957" width="0.2621%" height="15" fill="rgb(207,78,37)" fg:x="4795011014" fg:w="52812188"/><text x="24.0483%" y="1967.50"></text></g><g><title>seq_read_iter (52,116,683 samples, 0.26%)</title><rect x="23.8017%" y="1941" width="0.2587%" height="15" fill="rgb(225,57,0)" fg:x="4795706519" fg:w="52116683"/><text x="24.0517%" y="1951.50"></text></g><g><title>proc_single_show (39,409,940 samples, 0.20%)</title><rect x="23.8648%" y="1925" width="0.1956%" height="15" fill="rgb(232,154,2)" fg:x="4808413262" fg:w="39409940"/><text x="24.1148%" y="1935.50"></text></g><g><title>entry_SYSCALL_64 (62,278,735 samples, 0.31%)</title><rect x="23.7657%" y="2037" width="0.3091%" height="15" fill="rgb(241,212,25)" fg:x="4788446014" fg:w="62278735"/><text x="24.0157%" y="2047.50"></text></g><g><title>do_syscall_64 (60,796,622 samples, 0.30%)</title><rect x="23.7730%" y="2021" width="0.3017%" height="15" fill="rgb(226,69,20)" fg:x="4789928127" fg:w="60796622"/><text x="24.0230%" y="2031.50"></text></g><g><title>entry_ibpb (4,073,837 samples, 0.02%)</title><rect x="24.0748%" y="2037" width="0.0202%" height="15" fill="rgb(247,184,54)" fg:x="4850724749" fg:w="4073837"/><text x="24.3248%" y="2047.50"></text></g><g><title>read (67,124,989 samples, 0.33%)</title><rect x="23.7657%" y="2053" width="0.3331%" height="15" fill="rgb(210,145,0)" fg:x="4788446014" fg:w="67124989"/><text x="24.0157%" y="2063.50"></text></g><g><title>ps (298,597,862 samples, 1.48%)</title><rect x="22.6227%" y="2069" width="1.4820%" height="15" fill="rgb(253,82,12)" fg:x="4558163759" fg:w="298597862"/><text x="22.8727%" y="2079.50"></text></g><g><title>[unknown] (4,169,414 samples, 0.02%)</title><rect x="24.1060%" y="2053" width="0.0207%" height="15" fill="rgb(245,42,11)" fg:x="4857009468" fg:w="4169414"/><text x="24.3560%" y="2063.50"></text></g><g><title>python3 (5,732,856 samples, 0.03%)</title><rect x="24.1047%" y="2069" width="0.0285%" height="15" fill="rgb(219,147,32)" fg:x="4856761621" fg:w="5732856"/><text x="24.3547%" y="2079.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (3,664,741 samples, 0.02%)</title><rect x="24.1403%" y="1957" width="0.0182%" height="15" fill="rgb(246,12,7)" fg:x="4863923463" fg:w="3664741"/><text x="24.3903%" y="1967.50"></text></g><g><title>__vdso_clock_gettime (2,570,735 samples, 0.01%)</title><rect x="24.1457%" y="1941" width="0.0128%" height="15" fill="rgb(243,50,9)" fg:x="4865017469" fg:w="2570735"/><text x="24.3957%" y="1951.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (2,085,081 samples, 0.01%)</title><rect x="24.1910%" y="1861" width="0.0103%" height="15" fill="rgb(219,149,6)" fg:x="4874150647" fg:w="2085081"/><text x="24.4410%" y="1871.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (2,085,081 samples, 0.01%)</title><rect x="24.1910%" y="1845" width="0.0103%" height="15" fill="rgb(241,51,42)" fg:x="4874150647" fg:w="2085081"/><text x="24.4410%" y="1855.50"></text></g><g><title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (2,085,081 samples, 0.01%)</title><rect x="24.1910%" y="1829" width="0.0103%" height="15" fill="rgb(226,128,27)" fg:x="4874150647" fg:w="2085081"/><text x="24.4410%" y="1839.50"></text></g><g><title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; &gt; &gt;::find (3,814,720 samples, 0.02%)</title><rect x="24.1897%" y="1893" width="0.0189%" height="15" fill="rgb(244,144,4)" fg:x="4873885377" fg:w="3814720"/><text x="24.4397%" y="1903.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (3,814,720 samples, 0.02%)</title><rect x="24.1897%" y="1877" width="0.0189%" height="15" fill="rgb(221,4,13)" fg:x="4873885377" fg:w="3814720"/><text x="24.4397%" y="1887.50"></text></g><g><title>FileDescriptorCache::get_file_descriptor (6,578,069 samples, 0.03%)</title><rect x="24.1785%" y="1909" width="0.0326%" height="15" fill="rgb(208,170,28)" fg:x="4871626272" fg:w="6578069"/><text x="24.4285%" y="1919.50"></text></g><g><title>__memmove_avx_unaligned_erms (72,857,133 samples, 0.36%)</title><rect x="24.2150%" y="1909" width="0.3616%" height="15" fill="rgb(226,131,13)" fg:x="4878986260" fg:w="72857133"/><text x="24.4650%" y="1919.50"></text></g><g><title>split (3,290,669 samples, 0.02%)</title><rect x="24.5875%" y="1893" width="0.0163%" height="15" fill="rgb(215,72,41)" fg:x="4954025799" fg:w="3290669"/><text x="24.8375%" y="1903.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (2,829,669 samples, 0.01%)</title><rect x="24.5898%" y="1877" width="0.0140%" height="15" fill="rgb(243,108,20)" fg:x="4954486799" fg:w="2829669"/><text x="24.8398%" y="1887.50"></text></g><g><title>void std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (2,357,751 samples, 0.01%)</title><rect x="24.5921%" y="1861" width="0.0117%" height="15" fill="rgb(230,189,17)" fg:x="4954958717" fg:w="2357751"/><text x="24.8421%" y="1871.50"></text></g><g><title>get_file_and_offset_and_size_from_key (8,661,005 samples, 0.04%)</title><rect x="24.5766%" y="1909" width="0.0430%" height="15" fill="rgb(220,50,17)" fg:x="4951843393" fg:w="8661005"/><text x="24.8266%" y="1919.50"></text></g><g><title>IOTraceClient::do_insert (91,465,908 samples, 0.45%)</title><rect x="24.1720%" y="1925" width="0.4540%" height="15" fill="rgb(248,152,48)" fg:x="4870325828" fg:w="91465908"/><text x="24.4220%" y="1935.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (2,582,410 samples, 0.01%)</title><rect x="24.6293%" y="1861" width="0.0128%" height="15" fill="rgb(244,91,11)" fg:x="4962446413" fg:w="2582410"/><text x="24.8793%" y="1871.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (2,582,410 samples, 0.01%)</title><rect x="24.6293%" y="1845" width="0.0128%" height="15" fill="rgb(220,157,5)" fg:x="4962446413" fg:w="2582410"/><text x="24.8793%" y="1855.50"></text></g><g><title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; &gt; &gt;::find (3,462,750 samples, 0.02%)</title><rect x="24.6293%" y="1893" width="0.0172%" height="15" fill="rgb(253,137,8)" fg:x="4962446413" fg:w="3462750"/><text x="24.8793%" y="1903.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (3,462,750 samples, 0.02%)</title><rect x="24.6293%" y="1877" width="0.0172%" height="15" fill="rgb(217,137,51)" fg:x="4962446413" fg:w="3462750"/><text x="24.8793%" y="1887.50"></text></g><g><title>FileDescriptorCache::get_file_descriptor (4,317,464 samples, 0.02%)</title><rect x="24.6260%" y="1909" width="0.0214%" height="15" fill="rgb(218,209,53)" fg:x="4961791736" fg:w="4317464"/><text x="24.8760%" y="1919.50"></text></g><g><title>get_file_and_offset_and_size_from_key (4,101,403 samples, 0.02%)</title><rect x="24.6474%" y="1909" width="0.0204%" height="15" fill="rgb(249,137,25)" fg:x="4966109200" fg:w="4101403"/><text x="24.8974%" y="1919.50"></text></g><g><title>IOTraceClient::do_read (8,766,784 samples, 0.04%)</title><rect x="24.6260%" y="1925" width="0.0435%" height="15" fill="rgb(239,155,26)" fg:x="4961791736" fg:w="8766784"/><text x="24.8760%" y="1935.50"></text></g><g><title>__rcu_read_unlock (2,250,036 samples, 0.01%)</title><rect x="24.6875%" y="1893" width="0.0112%" height="15" fill="rgb(227,85,46)" fg:x="4974190699" fg:w="2250036"/><text x="24.9375%" y="1903.50"></text></g><g><title>__bpf_prog_exit (6,995,341 samples, 0.03%)</title><rect x="24.6716%" y="1909" width="0.0347%" height="15" fill="rgb(251,107,43)" fg:x="4970974195" fg:w="6995341"/><text x="24.9216%" y="1919.50"></text></g><g><title>__htab_map_lookup_elem (42,077,594 samples, 0.21%)</title><rect x="24.7199%" y="1893" width="0.2088%" height="15" fill="rgb(234,170,33)" fg:x="4980719868" fg:w="42077594"/><text x="24.9699%" y="1903.50"></text></g><g><title>bpf_ktime_get_ns (7,570,428 samples, 0.04%)</title><rect x="24.9288%" y="1893" width="0.0376%" height="15" fill="rgb(206,29,35)" fg:x="5022797462" fg:w="7570428"/><text x="25.1788%" y="1903.50"></text></g><g><title>ktime_get_mono_fast_ns (7,570,428 samples, 0.04%)</title><rect x="24.9288%" y="1877" width="0.0376%" height="15" fill="rgb(227,138,25)" fg:x="5022797462" fg:w="7570428"/><text x="25.1788%" y="1887.50"></text></g><g><title>read_tsc (6,248,632 samples, 0.03%)</title><rect x="24.9353%" y="1861" width="0.0310%" height="15" fill="rgb(249,131,35)" fg:x="5024119258" fg:w="6248632"/><text x="25.1853%" y="1871.50"></text></g><g><title>bpf_prog_790e9b214d9c9b97_sampling_folio_accessed (50,298,241 samples, 0.25%)</title><rect x="24.7179%" y="1909" width="0.2496%" height="15" fill="rgb(239,6,40)" fg:x="4980304229" fg:w="50298241"/><text x="24.9679%" y="1919.50"></text></g><g><title>_raw_spin_lock (33,858,100 samples, 0.17%)</title><rect x="25.0419%" y="1861" width="0.1680%" height="15" fill="rgb(246,136,47)" fg:x="5045582575" fg:w="33858100"/><text x="25.2919%" y="1871.50"></text></g><g><title>_raw_write_lock (194,619,192 samples, 0.97%)</title><rect x="25.2133%" y="1861" width="0.9659%" height="15" fill="rgb(253,58,26)" fg:x="5080119442" fg:w="194619192"/><text x="25.4633%" y="1871.50"></text></g><g><title>queued_write_lock_slowpath (182,016,799 samples, 0.90%)</title><rect x="25.2758%" y="1845" width="0.9034%" height="15" fill="rgb(237,141,10)" fg:x="5092721835" fg:w="182016799"/><text x="25.5258%" y="1855.50"></text></g><g><title>native_queued_spin_lock_slowpath (74,011,363 samples, 0.37%)</title><rect x="25.8119%" y="1829" width="0.3673%" height="15" fill="rgb(234,156,12)" fg:x="5200727271" fg:w="74011363"/><text x="26.0619%" y="1839.50"></text></g><g><title>valid_folios_lookup (2,896,297 samples, 0.01%)</title><rect x="26.1859%" y="1861" width="0.0144%" height="15" fill="rgb(243,224,36)" fg:x="5276095638" fg:w="2896297"/><text x="26.4359%" y="1871.50"></text></g><g><title>bpf_cache_ext_list_del (236,297,030 samples, 1.17%)</title><rect x="25.0312%" y="1893" width="1.1728%" height="15" fill="rgb(205,229,51)" fg:x="5043432604" fg:w="236297030"/><text x="25.2812%" y="1903.50"></text></g><g><title>cache_ext_list_del (235,524,247 samples, 1.17%)</title><rect x="25.0350%" y="1877" width="1.1689%" height="15" fill="rgb(223,189,4)" fg:x="5044205387" fg:w="235524247"/><text x="25.2850%" y="1887.50"></text></g><g><title>_raw_spin_lock (5,277,744 samples, 0.03%)</title><rect x="26.2989%" y="1877" width="0.0262%" height="15" fill="rgb(249,167,54)" fg:x="5298860814" fg:w="5277744"/><text x="26.5489%" y="1887.50"></text></g><g><title>__pcpu_freelist_push (3,318,945 samples, 0.02%)</title><rect x="26.3308%" y="1861" width="0.0165%" height="15" fill="rgb(218,34,28)" fg:x="5305286533" fg:w="3318945"/><text x="26.5808%" y="1871.50"></text></g><g><title>free_htab_elem (4,966,053 samples, 0.02%)</title><rect x="26.3278%" y="1877" width="0.0246%" height="15" fill="rgb(232,109,42)" fg:x="5304684960" fg:w="4966053"/><text x="26.5778%" y="1887.50"></text></g><g><title>bpf_prog_da529bdc9d890a05_sampling_folio_evicted (279,632,978 samples, 1.39%)</title><rect x="24.9675%" y="1909" width="1.3879%" height="15" fill="rgb(248,214,46)" fg:x="5030602470" fg:w="279632978"/><text x="25.2175%" y="1919.50"></text></g><g><title>htab_map_delete_elem (30,505,814 samples, 0.15%)</title><rect x="26.2040%" y="1893" width="0.1514%" height="15" fill="rgb(244,216,40)" fg:x="5279729634" fg:w="30505814"/><text x="26.4540%" y="1903.50"></text></g><g><title>__htab_map_lookup_elem (3,001,848 samples, 0.01%)</title><rect x="26.4761%" y="1893" width="0.0149%" height="15" fill="rgb(231,226,31)" fg:x="5334558629" fg:w="3001848"/><text x="26.7261%" y="1903.50"></text></g><g><title>_raw_write_lock (7,234,580 samples, 0.04%)</title><rect x="26.5290%" y="1861" width="0.0359%" height="15" fill="rgb(238,38,43)" fg:x="5345209043" fg:w="7234580"/><text x="26.7790%" y="1871.50"></text></g><g><title>queued_write_lock_slowpath (6,135,631 samples, 0.03%)</title><rect x="26.5344%" y="1845" width="0.0305%" height="15" fill="rgb(208,88,43)" fg:x="5346307992" fg:w="6135631"/><text x="26.7844%" y="1855.50"></text></g><g><title>__cache_ext_list_add_impl (15,181,987 samples, 0.08%)</title><rect x="26.4929%" y="1877" width="0.0754%" height="15" fill="rgb(205,136,37)" fg:x="5337937890" fg:w="15181987"/><text x="26.7429%" y="1887.50"></text></g><g><title>_raw_read_lock (133,818,888 samples, 0.66%)</title><rect x="26.5682%" y="1877" width="0.6642%" height="15" fill="rgb(237,34,14)" fg:x="5353119877" fg:w="133818888"/><text x="26.8182%" y="1887.50"></text></g><g><title>queued_read_lock_slowpath (114,483,854 samples, 0.57%)</title><rect x="26.6642%" y="1861" width="0.5682%" height="15" fill="rgb(236,193,44)" fg:x="5372454911" fg:w="114483854"/><text x="26.9142%" y="1871.50"></text></g><g><title>native_queued_spin_lock_slowpath (44,913,116 samples, 0.22%)</title><rect x="27.0095%" y="1845" width="0.2229%" height="15" fill="rgb(231,48,10)" fg:x="5442025649" fg:w="44913116"/><text x="27.2595%" y="1855.50"></text></g><g><title>bpf_cache_ext_list_add_tail (152,352,239 samples, 0.76%)</title><rect x="26.4910%" y="1893" width="0.7561%" height="15" fill="rgb(213,141,34)" fg:x="5337560477" fg:w="152352239"/><text x="26.7410%" y="1903.50"></text></g><g><title>ktime_get_mono_fast_ns (6,842,598 samples, 0.03%)</title><rect x="27.2471%" y="1877" width="0.0340%" height="15" fill="rgb(249,130,34)" fg:x="5489912716" fg:w="6842598"/><text x="27.4971%" y="1887.50"></text></g><g><title>read_tsc (5,946,483 samples, 0.03%)</title><rect x="27.2516%" y="1861" width="0.0295%" height="15" fill="rgb(219,42,41)" fg:x="5490808831" fg:w="5946483"/><text x="27.5016%" y="1871.50"></text></g><g><title>bpf_ktime_get_ns (7,572,695 samples, 0.04%)</title><rect x="27.2471%" y="1893" width="0.0376%" height="15" fill="rgb(224,100,54)" fg:x="5489912716" fg:w="7572695"/><text x="27.4971%" y="1903.50"></text></g><g><title>_raw_spin_lock (22,376,778 samples, 0.11%)</title><rect x="27.4544%" y="1877" width="0.1111%" height="15" fill="rgb(229,200,27)" fg:x="5531676191" fg:w="22376778"/><text x="27.7044%" y="1887.50"></text></g><g><title>alloc_htab_elem (8,696,103 samples, 0.04%)</title><rect x="27.5697%" y="1877" width="0.0432%" height="15" fill="rgb(217,118,10)" fg:x="5554901571" fg:w="8696103"/><text x="27.8197%" y="1887.50"></text></g><g><title>__pcpu_freelist_pop (8,353,909 samples, 0.04%)</title><rect x="27.5714%" y="1861" width="0.0415%" height="15" fill="rgb(206,22,3)" fg:x="5555243765" fg:w="8353909"/><text x="27.8214%" y="1871.50"></text></g><g><title>_raw_spin_lock (2,031,128 samples, 0.01%)</title><rect x="27.6028%" y="1845" width="0.0101%" height="15" fill="rgb(232,163,46)" fg:x="5561566546" fg:w="2031128"/><text x="27.8528%" y="1855.50"></text></g><g><title>asm_common_interrupt (2,022,082 samples, 0.01%)</title><rect x="27.6128%" y="1877" width="0.0100%" height="15" fill="rgb(206,95,13)" fg:x="5563597674" fg:w="2022082"/><text x="27.8628%" y="1887.50"></text></g><g><title>common_interrupt (2,022,082 samples, 0.01%)</title><rect x="27.6128%" y="1861" width="0.0100%" height="15" fill="rgb(253,154,18)" fg:x="5563597674" fg:w="2022082"/><text x="27.8628%" y="1871.50"></text></g><g><title>htab_map_update_elem (72,864,835 samples, 0.36%)</title><rect x="27.2847%" y="1893" width="0.3616%" height="15" fill="rgb(219,32,23)" fg:x="5497485411" fg:w="72864835"/><text x="27.5347%" y="1903.50"></text></g><g><title>htab_map_hash (3,909,151 samples, 0.02%)</title><rect x="27.6270%" y="1877" width="0.0194%" height="15" fill="rgb(230,191,45)" fg:x="5566441095" fg:w="3909151"/><text x="27.8770%" y="1887.50"></text></g><g><title>bpf_prog_e5152a252114b42e_sampling_folio_added (260,808,811 samples, 1.29%)</title><rect x="26.3554%" y="1909" width="1.2944%" height="15" fill="rgb(229,64,36)" fg:x="5310235448" fg:w="260808811"/><text x="26.6054%" y="1919.50"></text></g><g><title>_raw_read_lock (17,304,776 samples, 0.09%)</title><rect x="30.3284%" y="1877" width="0.0859%" height="15" fill="rgb(205,129,25)" fg:x="6110749189" fg:w="17304776"/><text x="30.5784%" y="1887.50"></text></g><g><title>queued_read_lock_slowpath (15,702,213 samples, 0.08%)</title><rect x="30.3364%" y="1861" width="0.0779%" height="15" fill="rgb(254,112,7)" fg:x="6112351752" fg:w="15702213"/><text x="30.5864%" y="1871.50"></text></g><g><title>native_queued_spin_lock_slowpath (10,434,080 samples, 0.05%)</title><rect x="30.3625%" y="1845" width="0.0518%" height="15" fill="rgb(226,53,48)" fg:x="6117619885" fg:w="10434080"/><text x="30.6125%" y="1855.50"></text></g><g><title>_raw_write_lock (99,475,913 samples, 0.49%)</title><rect x="30.4143%" y="1877" width="0.4937%" height="15" fill="rgb(214,153,38)" fg:x="6128053965" fg:w="99475913"/><text x="30.6643%" y="1887.50"></text></g><g><title>queued_write_lock_slowpath (97,289,250 samples, 0.48%)</title><rect x="30.4252%" y="1861" width="0.4829%" height="15" fill="rgb(243,101,7)" fg:x="6130240628" fg:w="97289250"/><text x="30.6752%" y="1871.50"></text></g><g><title>native_queued_spin_lock_slowpath (54,238,282 samples, 0.27%)</title><rect x="30.6388%" y="1845" width="0.2692%" height="15" fill="rgb(240,140,22)" fg:x="6173291596" fg:w="54238282"/><text x="30.8888%" y="1855.50"></text></g><g><title>asm_common_interrupt (2,148,429 samples, 0.01%)</title><rect x="36.2437%" y="1845" width="0.0107%" height="15" fill="rgb(235,114,2)" fg:x="7302595562" fg:w="2148429"/><text x="36.4937%" y="1855.50"></text></g><g><title>common_interrupt (2,148,429 samples, 0.01%)</title><rect x="36.2437%" y="1829" width="0.0107%" height="15" fill="rgb(242,59,12)" fg:x="7302595562" fg:w="2148429"/><text x="36.4937%" y="1839.50"></text></g><g><title>__common_interrupt (2,148,429 samples, 0.01%)</title><rect x="36.2437%" y="1813" width="0.0107%" height="15" fill="rgb(252,134,9)" fg:x="7302595562" fg:w="2148429"/><text x="36.4937%" y="1823.50"></text></g><g><title>handle_edge_irq (2,148,429 samples, 0.01%)</title><rect x="36.2437%" y="1797" width="0.0107%" height="15" fill="rgb(236,4,44)" fg:x="7302595562" fg:w="2148429"/><text x="36.4937%" y="1807.50"></text></g><g><title>handle_irq_event (2,148,429 samples, 0.01%)</title><rect x="36.2437%" y="1781" width="0.0107%" height="15" fill="rgb(254,172,41)" fg:x="7302595562" fg:w="2148429"/><text x="36.4937%" y="1791.50"></text></g><g><title>__handle_irq_event_percpu (2,148,429 samples, 0.01%)</title><rect x="36.2437%" y="1765" width="0.0107%" height="15" fill="rgb(244,63,20)" fg:x="7302595562" fg:w="2148429"/><text x="36.4937%" y="1775.50"></text></g><g><title>[tls.ko] (2,148,429 samples, 0.01%)</title><rect x="36.2437%" y="1749" width="0.0107%" height="15" fill="rgb(250,73,31)" fg:x="7302595562" fg:w="2148429"/><text x="36.4937%" y="1759.50"></text></g><g><title>[tls.ko] (2,148,429 samples, 0.01%)</title><rect x="36.2437%" y="1733" width="0.0107%" height="15" fill="rgb(241,38,36)" fg:x="7302595562" fg:w="2148429"/><text x="36.4937%" y="1743.50"></text></g><g><title>[tls.ko] (2,148,429 samples, 0.01%)</title><rect x="36.2437%" y="1717" width="0.0107%" height="15" fill="rgb(245,211,2)" fg:x="7302595562" fg:w="2148429"/><text x="36.4937%" y="1727.50"></text></g><g><title>__sysvec_apic_timer_interrupt (2,758,435 samples, 0.01%)</title><rect x="36.2544%" y="1813" width="0.0137%" height="15" fill="rgb(206,120,28)" fg:x="7304743991" fg:w="2758435"/><text x="36.5044%" y="1823.50"></text></g><g><title>hrtimer_interrupt (2,758,435 samples, 0.01%)</title><rect x="36.2544%" y="1797" width="0.0137%" height="15" fill="rgb(211,59,34)" fg:x="7304743991" fg:w="2758435"/><text x="36.5044%" y="1807.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (3,476,784 samples, 0.02%)</title><rect x="36.2544%" y="1845" width="0.0173%" height="15" fill="rgb(233,168,5)" fg:x="7304743991" fg:w="3476784"/><text x="36.5044%" y="1855.50"></text></g><g><title>sysvec_apic_timer_interrupt (3,476,784 samples, 0.02%)</title><rect x="36.2544%" y="1829" width="0.0173%" height="15" fill="rgb(234,33,13)" fg:x="7304743991" fg:w="3476784"/><text x="36.5044%" y="1839.50"></text></g><g><title>__htab_map_lookup_elem (1,043,399,805 samples, 5.18%)</title><rect x="31.1506%" y="1861" width="5.1785%" height="15" fill="rgb(231,150,26)" fg:x="6276409909" fg:w="1043399805"/><text x="31.4006%" y="1871.50">__htab..</text></g><g><title>htab_map_hash (10,169,522 samples, 0.05%)</title><rect x="36.2787%" y="1845" width="0.0505%" height="15" fill="rgb(217,191,4)" fg:x="7309640192" fg:w="10169522"/><text x="36.5287%" y="1855.50"></text></g><g><title>bpf_cache_ext_list_sample (1,750,070,282 samples, 8.69%)</title><rect x="27.6533%" y="1893" width="8.6858%" height="15" fill="rgb(246,198,38)" fg:x="5571742520" fg:w="1750070282"/><text x="27.9033%" y="1903.50">bpf_cache_ex..</text></g><g><title>bpf_prog_eade6cb1e4780183_bpf_lfu_score_fn (1,091,059,653 samples, 5.42%)</title><rect x="30.9240%" y="1877" width="5.4151%" height="15" fill="rgb(245,64,37)" fg:x="6230753149" fg:w="1091059653"/><text x="31.1740%" y="1887.50">bpf_pro..</text></g><g><title>bpf_prog_e60b9b119b1b8022_sampling_evict_folios (1,757,896,705 samples, 8.72%)</title><rect x="27.6498%" y="1909" width="8.7247%" height="15" fill="rgb(250,30,36)" fg:x="5571044259" fg:w="1757896705"/><text x="27.8998%" y="1919.50">bpf_prog_e60..</text></g><g><title>bpf_prog_eade6cb1e4780183_bpf_lfu_score_fn (7,128,162 samples, 0.04%)</title><rect x="36.3391%" y="1893" width="0.0354%" height="15" fill="rgb(217,86,53)" fg:x="7321812802" fg:w="7128162"/><text x="36.5891%" y="1903.50"></text></g><g><title>__fdget (2,520,136 samples, 0.01%)</title><rect x="36.3813%" y="1861" width="0.0125%" height="15" fill="rgb(228,157,16)" fg:x="7330318216" fg:w="2520136"/><text x="36.6313%" y="1871.50"></text></g><g><title>_copy_to_iter (7,913,944 samples, 0.04%)</title><rect x="36.4437%" y="1781" width="0.0393%" height="15" fill="rgb(217,59,31)" fg:x="7342898033" fg:w="7913944"/><text x="36.6937%" y="1791.50"></text></g><g><title>copy_page_to_iter (150,398,109 samples, 0.75%)</title><rect x="36.4437%" y="1797" width="0.7464%" height="15" fill="rgb(237,138,41)" fg:x="7342898033" fg:w="150398109"/><text x="36.6937%" y="1807.50"></text></g><g><title>rep_movs_alternative (142,484,165 samples, 0.71%)</title><rect x="36.4830%" y="1781" width="0.7072%" height="15" fill="rgb(227,91,49)" fg:x="7350811977" fg:w="142484165"/><text x="36.7330%" y="1791.50"></text></g><g><title>filemap_get_read_batch (23,874,953 samples, 0.12%)</title><rect x="37.1942%" y="1781" width="0.1185%" height="15" fill="rgb(247,21,44)" fg:x="7494095799" fg:w="23874953"/><text x="37.4442%" y="1791.50"></text></g><g><title>xas_load (2,113,339 samples, 0.01%)</title><rect x="37.3022%" y="1765" width="0.0105%" height="15" fill="rgb(219,210,51)" fg:x="7515857413" fg:w="2113339"/><text x="37.5522%" y="1775.50"></text></g><g><title>dequeue_task (3,449,313 samples, 0.02%)</title><rect x="37.3296%" y="1717" width="0.0171%" height="15" fill="rgb(209,140,6)" fg:x="7521378828" fg:w="3449313"/><text x="37.5796%" y="1727.50"></text></g><g><title>dequeue_task_fair (3,034,991 samples, 0.02%)</title><rect x="37.3316%" y="1701" width="0.0151%" height="15" fill="rgb(221,188,24)" fg:x="7521793150" fg:w="3034991"/><text x="37.5816%" y="1711.50"></text></g><g><title>dequeue_entity (3,034,991 samples, 0.02%)</title><rect x="37.3316%" y="1685" width="0.0151%" height="15" fill="rgb(232,154,20)" fg:x="7521793150" fg:w="3034991"/><text x="37.5816%" y="1695.50"></text></g><g><title>load_balance (2,306,254 samples, 0.01%)</title><rect x="37.3623%" y="1669" width="0.0114%" height="15" fill="rgb(244,137,50)" fg:x="7527973618" fg:w="2306254"/><text x="37.6123%" y="1679.50"></text></g><g><title>pick_next_task (5,436,939 samples, 0.03%)</title><rect x="37.3488%" y="1717" width="0.0270%" height="15" fill="rgb(225,185,43)" fg:x="7525245050" fg:w="5436939"/><text x="37.5988%" y="1727.50"></text></g><g><title>pick_next_task_fair (4,644,068 samples, 0.02%)</title><rect x="37.3527%" y="1701" width="0.0230%" height="15" fill="rgb(213,205,38)" fg:x="7526037921" fg:w="4644068"/><text x="37.6027%" y="1711.50"></text></g><g><title>newidle_balance (4,644,068 samples, 0.02%)</title><rect x="37.3527%" y="1685" width="0.0230%" height="15" fill="rgb(236,73,12)" fg:x="7526037921" fg:w="4644068"/><text x="37.6027%" y="1695.50"></text></g><g><title>folio_wait_bit_common (14,004,731 samples, 0.07%)</title><rect x="37.3126%" y="1781" width="0.0695%" height="15" fill="rgb(235,219,13)" fg:x="7517970752" fg:w="14004731"/><text x="37.5626%" y="1791.50"></text></g><g><title>io_schedule (11,705,077 samples, 0.06%)</title><rect x="37.3241%" y="1765" width="0.0581%" height="15" fill="rgb(218,59,36)" fg:x="7520270406" fg:w="11705077"/><text x="37.5741%" y="1775.50"></text></g><g><title>schedule (11,705,077 samples, 0.06%)</title><rect x="37.3241%" y="1749" width="0.0581%" height="15" fill="rgb(205,110,39)" fg:x="7520270406" fg:w="11705077"/><text x="37.5741%" y="1759.50"></text></g><g><title>__sched_text_start (11,705,077 samples, 0.06%)</title><rect x="37.3241%" y="1733" width="0.0581%" height="15" fill="rgb(218,206,42)" fg:x="7520270406" fg:w="11705077"/><text x="37.5741%" y="1743.50"></text></g><g><title>page_cache_ext_isolate_folio (6,697,189 samples, 0.03%)</title><rect x="37.4328%" y="1509" width="0.0332%" height="15" fill="rgb(248,125,24)" fg:x="7542172223" fg:w="6697189"/><text x="37.6828%" y="1519.50"></text></g><g><title>folio_add_lru (3,161,729 samples, 0.02%)</title><rect x="37.4801%" y="1477" width="0.0157%" height="15" fill="rgb(242,28,27)" fg:x="7551715906" fg:w="3161729"/><text x="37.7301%" y="1487.50"></text></g><g><title>__mod_memcg_lruvec_state (2,061,863 samples, 0.01%)</title><rect x="37.5621%" y="1397" width="0.0102%" height="15" fill="rgb(216,228,15)" fg:x="7568236391" fg:w="2061863"/><text x="37.8121%" y="1407.50"></text></g><g><title>filemap_unaccount_folio (3,490,865 samples, 0.02%)</title><rect x="37.5584%" y="1429" width="0.0173%" height="15" fill="rgb(235,116,46)" fg:x="7567485290" fg:w="3490865"/><text x="37.8084%" y="1439.50"></text></g><g><title>__mod_lruvec_page_state (3,490,865 samples, 0.02%)</title><rect x="37.5584%" y="1413" width="0.0173%" height="15" fill="rgb(224,18,32)" fg:x="7567485290" fg:w="3490865"/><text x="37.8084%" y="1423.50"></text></g><g><title>get_page_cache_ext_ops (3,749,326 samples, 0.02%)</title><rect x="37.5757%" y="1429" width="0.0186%" height="15" fill="rgb(252,5,12)" fg:x="7570976155" fg:w="3749326"/><text x="37.8257%" y="1439.50"></text></g><g><title>_raw_read_lock (3,298,442 samples, 0.02%)</title><rect x="37.5780%" y="1413" width="0.0164%" height="15" fill="rgb(251,36,5)" fg:x="7571427039" fg:w="3298442"/><text x="37.8280%" y="1423.50"></text></g><g><title>cache_ext_ds_registry_write_lock (10,696,685 samples, 0.05%)</title><rect x="37.6355%" y="1413" width="0.0531%" height="15" fill="rgb(217,53,14)" fg:x="7583025527" fg:w="10696685"/><text x="37.8855%" y="1423.50"></text></g><g><title>_raw_write_lock (10,696,685 samples, 0.05%)</title><rect x="37.6355%" y="1397" width="0.0531%" height="15" fill="rgb(215,86,45)" fg:x="7583025527" fg:w="10696685"/><text x="37.8855%" y="1407.50"></text></g><g><title>queued_write_lock_slowpath (4,943,763 samples, 0.02%)</title><rect x="37.6641%" y="1381" width="0.0245%" height="15" fill="rgb(242,169,11)" fg:x="7588778449" fg:w="4943763"/><text x="37.9141%" y="1391.50"></text></g><g><title>cache_ext_list_node_free (10,847,014 samples, 0.05%)</title><rect x="37.6886%" y="1413" width="0.0538%" height="15" fill="rgb(211,213,45)" fg:x="7593722212" fg:w="10847014"/><text x="37.9386%" y="1423.50"></text></g><g><title>kfree (10,847,014 samples, 0.05%)</title><rect x="37.6886%" y="1397" width="0.0538%" height="15" fill="rgb(205,88,11)" fg:x="7593722212" fg:w="10847014"/><text x="37.9386%" y="1407.50"></text></g><g><title>__kmem_cache_free (4,812,944 samples, 0.02%)</title><rect x="37.7186%" y="1381" width="0.0239%" height="15" fill="rgb(252,69,26)" fg:x="7599756282" fg:w="4812944"/><text x="37.9686%" y="1391.50"></text></g><g><title>__slab_free (4,812,944 samples, 0.02%)</title><rect x="37.7186%" y="1365" width="0.0239%" height="15" fill="rgb(246,123,37)" fg:x="7599756282" fg:w="4812944"/><text x="37.9686%" y="1375.50"></text></g><g><title>put_cpu_partial (2,129,151 samples, 0.01%)</title><rect x="37.7319%" y="1349" width="0.0106%" height="15" fill="rgb(212,205,5)" fg:x="7602440075" fg:w="2129151"/><text x="37.9819%" y="1359.50"></text></g><g><title>valid_folios_del (33,254,663 samples, 0.17%)</title><rect x="37.5943%" y="1429" width="0.1650%" height="15" fill="rgb(253,148,0)" fg:x="7574725481" fg:w="33254663"/><text x="37.8443%" y="1439.50"></text></g><g><title>kfree (3,410,918 samples, 0.02%)</title><rect x="37.7424%" y="1413" width="0.0169%" height="15" fill="rgb(239,22,4)" fg:x="7604569226" fg:w="3410918"/><text x="37.9924%" y="1423.50"></text></g><g><title>xas_init_marks (3,354,574 samples, 0.02%)</title><rect x="37.7594%" y="1429" width="0.0166%" height="15" fill="rgb(226,26,53)" fg:x="7607980144" fg:w="3354574"/><text x="38.0094%" y="1439.50"></text></g><g><title>xas_clear_mark (3,354,574 samples, 0.02%)</title><rect x="37.7594%" y="1413" width="0.0166%" height="15" fill="rgb(225,229,45)" fg:x="7607980144" fg:w="3354574"/><text x="38.0094%" y="1423.50"></text></g><g><title>__filemap_remove_folio (65,871,435 samples, 0.33%)</title><rect x="37.5474%" y="1445" width="0.3269%" height="15" fill="rgb(220,60,37)" fg:x="7565271913" fg:w="65871435"/><text x="37.7974%" y="1455.50"></text></g><g><title>xas_store (19,808,630 samples, 0.10%)</title><rect x="37.7760%" y="1429" width="0.0983%" height="15" fill="rgb(217,180,35)" fg:x="7611334718" fg:w="19808630"/><text x="38.0260%" y="1439.50"></text></g><g><title>xas_create (17,707,682 samples, 0.09%)</title><rect x="37.7865%" y="1413" width="0.0879%" height="15" fill="rgb(229,7,53)" fg:x="7613435666" fg:w="17707682"/><text x="38.0365%" y="1423.50"></text></g><g><title>_raw_spin_lock (6,602,881 samples, 0.03%)</title><rect x="37.8743%" y="1445" width="0.0328%" height="15" fill="rgb(254,137,3)" fg:x="7631143348" fg:w="6602881"/><text x="38.1243%" y="1455.50"></text></g><g><title>native_queued_spin_lock_slowpath (3,701,814 samples, 0.02%)</title><rect x="37.8887%" y="1429" width="0.0184%" height="15" fill="rgb(215,140,41)" fg:x="7634044415" fg:w="3701814"/><text x="38.1387%" y="1439.50"></text></g><g><title>_raw_spin_lock_irq (2,716,492 samples, 0.01%)</title><rect x="37.9071%" y="1445" width="0.0135%" height="15" fill="rgb(250,80,15)" fg:x="7637746229" fg:w="2716492"/><text x="38.1571%" y="1455.50"></text></g><g><title>_raw_spin_unlock_irq (2,146,629 samples, 0.01%)</title><rect x="37.9206%" y="1445" width="0.0107%" height="15" fill="rgb(252,191,6)" fg:x="7640462721" fg:w="2146629"/><text x="38.1706%" y="1455.50"></text></g><g><title>__remove_mapping (81,588,817 samples, 0.40%)</title><rect x="37.5384%" y="1461" width="0.4049%" height="15" fill="rgb(246,217,18)" fg:x="7563459798" fg:w="81588817"/><text x="37.7884%" y="1471.50"></text></g><g><title>workingset_eviction (2,439,265 samples, 0.01%)</title><rect x="37.9312%" y="1445" width="0.0121%" height="15" fill="rgb(223,93,7)" fg:x="7642609350" fg:w="2439265"/><text x="38.1812%" y="1455.50"></text></g><g><title>jbd2_journal_grab_journal_head (5,671,341 samples, 0.03%)</title><rect x="37.9458%" y="1413" width="0.0281%" height="15" fill="rgb(225,55,52)" fg:x="7645533893" fg:w="5671341"/><text x="38.1958%" y="1423.50"></text></g><g><title>cache_from_obj (3,475,261 samples, 0.02%)</title><rect x="37.9889%" y="1365" width="0.0172%" height="15" fill="rgb(240,31,24)" fg:x="7654222699" fg:w="3475261"/><text x="38.2389%" y="1375.50"></text></g><g><title>free_buffer_head (10,582,827 samples, 0.05%)</title><rect x="37.9814%" y="1397" width="0.0525%" height="15" fill="rgb(205,56,52)" fg:x="7652709051" fg:w="10582827"/><text x="38.2314%" y="1407.50"></text></g><g><title>kmem_cache_free (10,582,827 samples, 0.05%)</title><rect x="37.9814%" y="1381" width="0.0525%" height="15" fill="rgb(246,146,12)" fg:x="7652709051" fg:w="10582827"/><text x="38.2314%" y="1391.50"></text></g><g><title>memcg_slab_free_hook (5,593,918 samples, 0.03%)</title><rect x="38.0061%" y="1365" width="0.0278%" height="15" fill="rgb(239,84,36)" fg:x="7657697960" fg:w="5593918"/><text x="38.2561%" y="1375.50"></text></g><g><title>filemap_release_folio (17,957,898 samples, 0.09%)</title><rect x="37.9458%" y="1461" width="0.0891%" height="15" fill="rgb(207,41,40)" fg:x="7645533893" fg:w="17957898"/><text x="38.1958%" y="1471.50"></text></g><g><title>ext4_release_folio (17,957,898 samples, 0.09%)</title><rect x="37.9458%" y="1445" width="0.0891%" height="15" fill="rgb(241,179,25)" fg:x="7645533893" fg:w="17957898"/><text x="38.1958%" y="1455.50"></text></g><g><title>jbd2_journal_try_to_free_buffers (17,957,898 samples, 0.09%)</title><rect x="37.9458%" y="1429" width="0.0891%" height="15" fill="rgb(210,0,34)" fg:x="7645533893" fg:w="17957898"/><text x="38.1958%" y="1439.50"></text></g><g><title>try_to_free_buffers (12,286,557 samples, 0.06%)</title><rect x="37.9739%" y="1413" width="0.0610%" height="15" fill="rgb(225,217,29)" fg:x="7651205234" fg:w="12286557"/><text x="38.2239%" y="1423.50"></text></g><g><title>free_unref_page_commit (2,188,100 samples, 0.01%)</title><rect x="38.0382%" y="1445" width="0.0109%" height="15" fill="rgb(216,191,38)" fg:x="7664159347" fg:w="2188100"/><text x="38.2882%" y="1455.50"></text></g><g><title>reclaim_folio_list (118,011,768 samples, 0.59%)</title><rect x="37.4733%" y="1493" width="0.5857%" height="15" fill="rgb(232,140,52)" fg:x="7550333659" fg:w="118011768"/><text x="37.7233%" y="1503.50"></text></g><g><title>shrink_folio_list (113,467,792 samples, 0.56%)</title><rect x="37.4958%" y="1477" width="0.5632%" height="15" fill="rgb(223,158,51)" fg:x="7554877635" fg:w="113467792"/><text x="37.7458%" y="1487.50"></text></g><g><title>free_unref_page_list (4,853,636 samples, 0.02%)</title><rect x="38.0349%" y="1461" width="0.0241%" height="15" fill="rgb(235,29,51)" fg:x="7663491791" fg:w="4853636"/><text x="38.2849%" y="1471.50"></text></g><g><title>reclaim_pages (120,202,886 samples, 0.60%)</title><rect x="37.4660%" y="1509" width="0.5966%" height="15" fill="rgb(215,181,18)" fg:x="7548869412" fg:w="120202886"/><text x="37.7160%" y="1519.50"></text></g><g><title>page_cache_ext_isolate_and_reclaim (155,239,529 samples, 0.77%)</title><rect x="37.4291%" y="1541" width="0.7705%" height="15" fill="rgb(227,125,34)" fg:x="7541442728" fg:w="155239529"/><text x="37.6791%" y="1551.50"></text></g><g><title>__page_cache_ext_isolate_and_reclaim (155,239,529 samples, 0.77%)</title><rect x="37.4291%" y="1525" width="0.7705%" height="15" fill="rgb(230,197,49)" fg:x="7541442728" fg:w="155239529"/><text x="37.6791%" y="1535.50"></text></g><g><title>valid_folios_exists_unlocked (27,609,959 samples, 0.14%)</title><rect x="38.0626%" y="1509" width="0.1370%" height="15" fill="rgb(239,141,16)" fg:x="7669072298" fg:w="27609959"/><text x="38.3126%" y="1519.50"></text></g><g><title>__remove_mapping (4,456,741 samples, 0.02%)</title><rect x="38.2068%" y="1493" width="0.0221%" height="15" fill="rgb(225,105,43)" fg:x="7698130121" fg:w="4456741"/><text x="38.4568%" y="1503.50"></text></g><g><title>_raw_spin_lock (3,739,941 samples, 0.02%)</title><rect x="38.2104%" y="1477" width="0.0186%" height="15" fill="rgb(214,131,14)" fg:x="7698846921" fg:w="3739941"/><text x="38.4604%" y="1487.50"></text></g><g><title>native_queued_spin_lock_slowpath (3,739,941 samples, 0.02%)</title><rect x="38.2104%" y="1461" width="0.0186%" height="15" fill="rgb(229,177,11)" fg:x="7698846921" fg:w="3739941"/><text x="38.4604%" y="1471.50"></text></g><g><title>filemap_release_folio (2,187,018 samples, 0.01%)</title><rect x="38.2289%" y="1493" width="0.0109%" height="15" fill="rgb(231,180,14)" fg:x="7702586862" fg:w="2187018"/><text x="38.4789%" y="1503.50"></text></g><g><title>ext4_release_folio (2,187,018 samples, 0.01%)</title><rect x="38.2289%" y="1477" width="0.0109%" height="15" fill="rgb(232,88,2)" fg:x="7702586862" fg:w="2187018"/><text x="38.4789%" y="1487.50"></text></g><g><title>jbd2_journal_try_to_free_buffers (2,187,018 samples, 0.01%)</title><rect x="38.2289%" y="1461" width="0.0109%" height="15" fill="rgb(205,220,8)" fg:x="7702586862" fg:w="2187018"/><text x="38.4789%" y="1471.50"></text></g><g><title>shrink_lruvec (164,074,949 samples, 0.81%)</title><rect x="37.4291%" y="1557" width="0.8143%" height="15" fill="rgb(225,23,53)" fg:x="7541442728" fg:w="164074949"/><text x="37.6791%" y="1567.50"></text></g><g><title>shrink_list (8,835,420 samples, 0.04%)</title><rect x="38.1996%" y="1541" width="0.0439%" height="15" fill="rgb(213,62,29)" fg:x="7696682257" fg:w="8835420"/><text x="38.4496%" y="1551.50"></text></g><g><title>shrink_inactive_list (8,835,420 samples, 0.04%)</title><rect x="38.1996%" y="1525" width="0.0439%" height="15" fill="rgb(227,75,7)" fg:x="7696682257" fg:w="8835420"/><text x="38.4496%" y="1535.50"></text></g><g><title>shrink_folio_list (7,387,556 samples, 0.04%)</title><rect x="38.2068%" y="1509" width="0.0367%" height="15" fill="rgb(207,105,14)" fg:x="7698130121" fg:w="7387556"/><text x="38.4568%" y="1519.50"></text></g><g><title>count_shadow_nodes (2,861,932 samples, 0.01%)</title><rect x="38.2435%" y="1509" width="0.0142%" height="15" fill="rgb(245,62,29)" fg:x="7705517677" fg:w="2861932"/><text x="38.4935%" y="1519.50"></text></g><g><title>mem_cgroup_flush_stats (2,861,932 samples, 0.01%)</title><rect x="38.2435%" y="1493" width="0.0142%" height="15" fill="rgb(236,202,4)" fg:x="7705517677" fg:w="2861932"/><text x="38.4935%" y="1503.50"></text></g><g><title>cgroup_rstat_flush (2,861,932 samples, 0.01%)</title><rect x="38.2435%" y="1477" width="0.0142%" height="15" fill="rgb(250,67,1)" fg:x="7705517677" fg:w="2861932"/><text x="38.4935%" y="1487.50"></text></g><g><title>cgroup_rstat_flush_locked (2,861,932 samples, 0.01%)</title><rect x="38.2435%" y="1461" width="0.0142%" height="15" fill="rgb(253,115,44)" fg:x="7705517677" fg:w="2861932"/><text x="38.4935%" y="1471.50"></text></g><g><title>charge_memcg (174,213,351 samples, 0.86%)</title><rect x="37.4003%" y="1669" width="0.8646%" height="15" fill="rgb(251,139,18)" fg:x="7535630739" fg:w="174213351"/><text x="37.6503%" y="1679.50"></text></g><g><title>try_charge_memcg (172,076,450 samples, 0.85%)</title><rect x="37.4109%" y="1653" width="0.8540%" height="15" fill="rgb(218,22,32)" fg:x="7537767640" fg:w="172076450"/><text x="37.6609%" y="1663.50"></text></g><g><title>try_to_free_mem_cgroup_pages (170,305,277 samples, 0.85%)</title><rect x="37.4197%" y="1637" width="0.8452%" height="15" fill="rgb(243,53,5)" fg:x="7539538813" fg:w="170305277"/><text x="37.6697%" y="1647.50"></text></g><g><title>do_try_to_free_pages (170,305,277 samples, 0.85%)</title><rect x="37.4197%" y="1621" width="0.8452%" height="15" fill="rgb(227,56,16)" fg:x="7539538813" fg:w="170305277"/><text x="37.6697%" y="1631.50"></text></g><g><title>shrink_zones (170,305,277 samples, 0.85%)</title><rect x="37.4197%" y="1605" width="0.8452%" height="15" fill="rgb(245,53,0)" fg:x="7539538813" fg:w="170305277"/><text x="37.6697%" y="1615.50"></text></g><g><title>shrink_node (170,305,277 samples, 0.85%)</title><rect x="37.4197%" y="1589" width="0.8452%" height="15" fill="rgb(216,170,35)" fg:x="7539538813" fg:w="170305277"/><text x="37.6697%" y="1599.50"></text></g><g><title>shrink_node_memcgs (168,401,362 samples, 0.84%)</title><rect x="37.4291%" y="1573" width="0.8358%" height="15" fill="rgb(211,200,8)" fg:x="7541442728" fg:w="168401362"/><text x="37.6791%" y="1583.50"></text></g><g><title>shrink_slab (4,326,413 samples, 0.02%)</title><rect x="38.2435%" y="1557" width="0.0215%" height="15" fill="rgb(228,204,44)" fg:x="7705517677" fg:w="4326413"/><text x="38.4935%" y="1567.50"></text></g><g><title>shrink_slab_memcg (4,326,413 samples, 0.02%)</title><rect x="38.2435%" y="1541" width="0.0215%" height="15" fill="rgb(214,121,17)" fg:x="7705517677" fg:w="4326413"/><text x="38.4935%" y="1551.50"></text></g><g><title>do_shrink_slab (4,326,413 samples, 0.02%)</title><rect x="38.2435%" y="1525" width="0.0215%" height="15" fill="rgb(233,64,38)" fg:x="7705517677" fg:w="4326413"/><text x="38.4935%" y="1535.50"></text></g><g><title>__mem_cgroup_charge (174,945,065 samples, 0.87%)</title><rect x="37.4003%" y="1685" width="0.8683%" height="15" fill="rgb(253,54,19)" fg:x="7535630739" fg:w="174945065"/><text x="37.6503%" y="1695.50"></text></g><g><title>__mod_memcg_lruvec_state (8,314,301 samples, 0.04%)</title><rect x="38.2724%" y="1669" width="0.0413%" height="15" fill="rgb(253,94,18)" fg:x="7711337996" fg:w="8314301"/><text x="38.5224%" y="1679.50"></text></g><g><title>__mod_lruvec_page_state (9,459,718 samples, 0.05%)</title><rect x="38.2686%" y="1685" width="0.0469%" height="15" fill="rgb(227,57,52)" fg:x="7710575804" fg:w="9459718"/><text x="38.5186%" y="1695.50"></text></g><g><title>_raw_spin_lock (4,287,854 samples, 0.02%)</title><rect x="38.3755%" y="1669" width="0.0213%" height="15" fill="rgb(230,228,50)" fg:x="7732122275" fg:w="4287854"/><text x="38.6255%" y="1679.50"></text></g><g><title>___slab_alloc (6,418,522 samples, 0.03%)</title><rect x="38.4414%" y="1621" width="0.0319%" height="15" fill="rgb(217,205,27)" fg:x="7745403170" fg:w="6418522"/><text x="38.6914%" y="1631.50"></text></g><g><title>get_partial_node (3,682,365 samples, 0.02%)</title><rect x="38.4550%" y="1605" width="0.0183%" height="15" fill="rgb(252,71,50)" fg:x="7748139327" fg:w="3682365"/><text x="38.7050%" y="1615.50"></text></g><g><title>cache_ext_list_node_alloc (15,672,808 samples, 0.08%)</title><rect x="38.3968%" y="1669" width="0.0778%" height="15" fill="rgb(209,86,4)" fg:x="7736410129" fg:w="15672808"/><text x="38.6468%" y="1679.50"></text></g><g><title>kmalloc_trace (15,672,808 samples, 0.08%)</title><rect x="38.3968%" y="1653" width="0.0778%" height="15" fill="rgb(229,94,0)" fg:x="7736410129" fg:w="15672808"/><text x="38.6468%" y="1663.50"></text></g><g><title>__kmem_cache_alloc_node (15,672,808 samples, 0.08%)</title><rect x="38.3968%" y="1637" width="0.0778%" height="15" fill="rgb(252,223,21)" fg:x="7736410129" fg:w="15672808"/><text x="38.6468%" y="1647.50"></text></g><g><title>__kmem_cache_alloc_node (6,670,367 samples, 0.03%)</title><rect x="38.4774%" y="1653" width="0.0331%" height="15" fill="rgb(230,210,4)" fg:x="7752651177" fg:w="6670367"/><text x="38.7274%" y="1663.50"></text></g><g><title>___slab_alloc (3,220,505 samples, 0.02%)</title><rect x="38.4945%" y="1637" width="0.0160%" height="15" fill="rgb(240,149,38)" fg:x="7756101039" fg:w="3220505"/><text x="38.7445%" y="1647.50"></text></g><g><title>get_partial_node (2,362,884 samples, 0.01%)</title><rect x="38.4988%" y="1621" width="0.0117%" height="15" fill="rgb(254,105,20)" fg:x="7756958660" fg:w="2362884"/><text x="38.7488%" y="1631.50"></text></g><g><title>valid_folios_add (36,635,218 samples, 0.18%)</title><rect x="38.3314%" y="1685" width="0.1818%" height="15" fill="rgb(253,87,46)" fg:x="7723238506" fg:w="36635218"/><text x="38.5814%" y="1695.50"></text></g><g><title>kmalloc_trace (7,790,787 samples, 0.04%)</title><rect x="38.4746%" y="1669" width="0.0387%" height="15" fill="rgb(253,116,33)" fg:x="7752082937" fg:w="7790787"/><text x="38.7246%" y="1679.50"></text></g><g><title>xa_get_order (3,922,765 samples, 0.02%)</title><rect x="38.5132%" y="1685" width="0.0195%" height="15" fill="rgb(229,198,5)" fg:x="7759873724" fg:w="3922765"/><text x="38.7632%" y="1695.50"></text></g><g><title>xas_load (2,035,588 samples, 0.01%)</title><rect x="38.5226%" y="1669" width="0.0101%" height="15" fill="rgb(242,38,37)" fg:x="7761760901" fg:w="2035588"/><text x="38.7726%" y="1679.50"></text></g><g><title>__filemap_add_folio (234,587,343 samples, 1.16%)</title><rect x="37.3880%" y="1701" width="1.1643%" height="15" fill="rgb(242,69,53)" fg:x="7533158033" fg:w="234587343"/><text x="37.6380%" y="1711.50"></text></g><g><title>xas_store (2,600,262 samples, 0.01%)</title><rect x="38.5394%" y="1685" width="0.0129%" height="15" fill="rgb(249,80,16)" fg:x="7765145114" fg:w="2600262"/><text x="38.7894%" y="1695.50"></text></g><g><title>__mod_lruvec_state (2,457,509 samples, 0.01%)</title><rect x="38.5661%" y="1653" width="0.0122%" height="15" fill="rgb(206,128,11)" fg:x="7770521057" fg:w="2457509"/><text x="38.8161%" y="1663.50"></text></g><g><title>lru_add_fn (6,510,497 samples, 0.03%)</title><rect x="38.5576%" y="1669" width="0.0323%" height="15" fill="rgb(212,35,20)" fg:x="7768814627" fg:w="6510497"/><text x="38.8076%" y="1679.50"></text></g><g><title>folio_add_lru (8,875,194 samples, 0.04%)</title><rect x="38.5523%" y="1701" width="0.0440%" height="15" fill="rgb(236,79,13)" fg:x="7767745376" fg:w="8875194"/><text x="38.8023%" y="1711.50"></text></g><g><title>folio_batch_move_lru (8,594,544 samples, 0.04%)</title><rect x="38.5537%" y="1685" width="0.0427%" height="15" fill="rgb(233,123,3)" fg:x="7768026026" fg:w="8594544"/><text x="38.8037%" y="1695.50"></text></g><g><title>filemap_add_folio (244,014,407 samples, 1.21%)</title><rect x="37.3873%" y="1717" width="1.2111%" height="15" fill="rgb(214,93,52)" fg:x="7533005062" fg:w="244014407"/><text x="37.6373%" y="1727.50"></text></g><g><title>clear_page_rep (25,783,905 samples, 0.13%)</title><rect x="38.6188%" y="1637" width="0.1280%" height="15" fill="rgb(251,37,40)" fg:x="7781150098" fg:w="25783905"/><text x="38.8688%" y="1647.50"></text></g><g><title>filemap_alloc_folio (34,439,593 samples, 0.17%)</title><rect x="38.5983%" y="1717" width="0.1709%" height="15" fill="rgb(227,80,54)" fg:x="7777019469" fg:w="34439593"/><text x="38.8483%" y="1727.50"></text></g><g><title>folio_alloc (33,905,339 samples, 0.17%)</title><rect x="38.6010%" y="1701" width="0.1683%" height="15" fill="rgb(254,48,11)" fg:x="7777553723" fg:w="33905339"/><text x="38.8510%" y="1711.50"></text></g><g><title>alloc_pages (33,905,339 samples, 0.17%)</title><rect x="38.6010%" y="1685" width="0.1683%" height="15" fill="rgb(235,193,26)" fg:x="7777553723" fg:w="33905339"/><text x="38.8510%" y="1695.50"></text></g><g><title>__alloc_pages (33,313,536 samples, 0.17%)</title><rect x="38.6039%" y="1669" width="0.1653%" height="15" fill="rgb(229,99,21)" fg:x="7778145526" fg:w="33313536"/><text x="38.8539%" y="1679.50"></text></g><g><title>get_page_from_freelist (31,749,286 samples, 0.16%)</title><rect x="38.6117%" y="1653" width="0.1576%" height="15" fill="rgb(211,140,41)" fg:x="7779709776" fg:w="31749286"/><text x="38.8617%" y="1663.50"></text></g><g><title>rmqueue (4,525,059 samples, 0.02%)</title><rect x="38.7468%" y="1637" width="0.0225%" height="15" fill="rgb(240,227,30)" fg:x="7806934003" fg:w="4525059"/><text x="38.9968%" y="1647.50"></text></g><g><title>rmqueue_pcplist (2,930,838 samples, 0.01%)</title><rect x="38.7547%" y="1621" width="0.0145%" height="15" fill="rgb(215,224,45)" fg:x="7808528224" fg:w="2930838"/><text x="39.0047%" y="1631.50"></text></g><g><title>__rmqueue_pcplist (2,268,680 samples, 0.01%)</title><rect x="38.7580%" y="1605" width="0.0113%" height="15" fill="rgb(206,123,31)" fg:x="7809190382" fg:w="2268680"/><text x="39.0080%" y="1615.50"></text></g><g><title>amd_iommu_map_pages (2,105,323 samples, 0.01%)</title><rect x="38.7927%" y="1397" width="0.0104%" height="15" fill="rgb(210,138,16)" fg:x="7816189520" fg:w="2105323"/><text x="39.0427%" y="1407.50"></text></g><g><title>iommu_v1_map_pages (2,105,323 samples, 0.01%)</title><rect x="38.7927%" y="1381" width="0.0104%" height="15" fill="rgb(228,57,28)" fg:x="7816189520" fg:w="2105323"/><text x="39.0427%" y="1391.50"></text></g><g><title>__iommu_map_pages (3,803,732 samples, 0.02%)</title><rect x="38.7927%" y="1413" width="0.0189%" height="15" fill="rgb(242,170,10)" fg:x="7816189520" fg:w="3803732"/><text x="39.0427%" y="1423.50"></text></g><g><title>ata_qc_issue (5,704,705 samples, 0.03%)</title><rect x="38.7854%" y="1509" width="0.0283%" height="15" fill="rgb(228,214,39)" fg:x="7814699317" fg:w="5704705"/><text x="39.0354%" y="1519.50"></text></g><g><title>dma_map_sg_attrs (5,704,705 samples, 0.03%)</title><rect x="38.7854%" y="1493" width="0.0283%" height="15" fill="rgb(218,179,33)" fg:x="7814699317" fg:w="5704705"/><text x="39.0354%" y="1503.50"></text></g><g><title>__dma_map_sg_attrs (5,704,705 samples, 0.03%)</title><rect x="38.7854%" y="1477" width="0.0283%" height="15" fill="rgb(235,193,39)" fg:x="7814699317" fg:w="5704705"/><text x="39.0354%" y="1487.50"></text></g><g><title>iommu_dma_map_sg (5,704,705 samples, 0.03%)</title><rect x="38.7854%" y="1461" width="0.0283%" height="15" fill="rgb(219,221,36)" fg:x="7814699317" fg:w="5704705"/><text x="39.0354%" y="1471.50"></text></g><g><title>iommu_map_sg (4,682,043 samples, 0.02%)</title><rect x="38.7904%" y="1445" width="0.0232%" height="15" fill="rgb(248,218,19)" fg:x="7815721979" fg:w="4682043"/><text x="39.0404%" y="1455.50"></text></g><g><title>__iommu_map (4,682,043 samples, 0.02%)</title><rect x="38.7904%" y="1429" width="0.0232%" height="15" fill="rgb(205,50,9)" fg:x="7815721979" fg:w="4682043"/><text x="39.0404%" y="1439.50"></text></g><g><title>__ata_scsi_queuecmd (6,902,599 samples, 0.03%)</title><rect x="38.7818%" y="1525" width="0.0343%" height="15" fill="rgb(238,81,28)" fg:x="7813979633" fg:w="6902599"/><text x="39.0318%" y="1535.50"></text></g><g><title>scsi_dispatch_cmd (7,370,831 samples, 0.04%)</title><rect x="38.7818%" y="1557" width="0.0366%" height="15" fill="rgb(235,110,19)" fg:x="7813979633" fg:w="7370831"/><text x="39.0318%" y="1567.50"></text></g><g><title>ata_scsi_queuecmd (7,370,831 samples, 0.04%)</title><rect x="38.7818%" y="1541" width="0.0366%" height="15" fill="rgb(214,7,14)" fg:x="7813979633" fg:w="7370831"/><text x="39.0318%" y="1551.50"></text></g><g><title>blk_mq_dispatch_rq_list (8,462,379 samples, 0.04%)</title><rect x="38.7801%" y="1589" width="0.0420%" height="15" fill="rgb(211,77,3)" fg:x="7813636692" fg:w="8462379"/><text x="39.0301%" y="1599.50"></text></g><g><title>scsi_queue_rq (8,119,438 samples, 0.04%)</title><rect x="38.7818%" y="1573" width="0.0403%" height="15" fill="rgb(229,5,9)" fg:x="7813979633" fg:w="8119438"/><text x="39.0318%" y="1583.50"></text></g><g><title>blk_mq_sched_dispatch_requests (11,725,457 samples, 0.06%)</title><rect x="38.7745%" y="1621" width="0.0582%" height="15" fill="rgb(225,90,11)" fg:x="7812504345" fg:w="11725457"/><text x="39.0245%" y="1631.50"></text></g><g><title>__blk_mq_sched_dispatch_requests (11,725,457 samples, 0.06%)</title><rect x="38.7745%" y="1605" width="0.0582%" height="15" fill="rgb(242,56,8)" fg:x="7812504345" fg:w="11725457"/><text x="39.0245%" y="1615.50"></text></g><g><title>scsi_mq_get_budget (2,130,731 samples, 0.01%)</title><rect x="38.8221%" y="1589" width="0.0106%" height="15" fill="rgb(249,212,39)" fg:x="7822099071" fg:w="2130731"/><text x="39.0721%" y="1599.50"></text></g><g><title>sbitmap_get (2,130,731 samples, 0.01%)</title><rect x="38.8221%" y="1573" width="0.0106%" height="15" fill="rgb(236,90,9)" fg:x="7822099071" fg:w="2130731"/><text x="39.0721%" y="1583.50"></text></g><g><title>blk_finish_plug (13,317,775 samples, 0.07%)</title><rect x="38.7693%" y="1701" width="0.0661%" height="15" fill="rgb(206,88,35)" fg:x="7811459062" fg:w="13317775"/><text x="39.0193%" y="1711.50"></text></g><g><title>__blk_flush_plug (13,317,775 samples, 0.07%)</title><rect x="38.7693%" y="1685" width="0.0661%" height="15" fill="rgb(205,126,30)" fg:x="7811459062" fg:w="13317775"/><text x="39.0193%" y="1695.50"></text></g><g><title>blk_mq_flush_plug_list (13,317,775 samples, 0.07%)</title><rect x="38.7693%" y="1669" width="0.0661%" height="15" fill="rgb(230,176,12)" fg:x="7811459062" fg:w="13317775"/><text x="39.0193%" y="1679.50"></text></g><g><title>blk_mq_dispatch_plug_list (13,317,775 samples, 0.07%)</title><rect x="38.7693%" y="1653" width="0.0661%" height="15" fill="rgb(243,19,9)" fg:x="7811459062" fg:w="13317775"/><text x="39.0193%" y="1663.50"></text></g><g><title>blk_mq_run_hw_queue (12,935,649 samples, 0.06%)</title><rect x="38.7712%" y="1637" width="0.0642%" height="15" fill="rgb(245,171,17)" fg:x="7811841188" fg:w="12935649"/><text x="39.0212%" y="1647.50"></text></g><g><title>__submit_bio (4,320,636 samples, 0.02%)</title><rect x="38.8732%" y="1621" width="0.0214%" height="15" fill="rgb(227,52,21)" fg:x="7832403930" fg:w="4320636"/><text x="39.1232%" y="1631.50"></text></g><g><title>blk_mq_submit_bio (3,717,461 samples, 0.02%)</title><rect x="38.8762%" y="1605" width="0.0185%" height="15" fill="rgb(238,69,14)" fg:x="7833007105" fg:w="3717461"/><text x="39.1262%" y="1615.50"></text></g><g><title>submit_bio (5,215,815 samples, 0.03%)</title><rect x="38.8708%" y="1669" width="0.0259%" height="15" fill="rgb(241,156,39)" fg:x="7831907216" fg:w="5215815"/><text x="39.1208%" y="1679.50"></text></g><g><title>submit_bio_noacct (5,215,815 samples, 0.03%)</title><rect x="38.8708%" y="1653" width="0.0259%" height="15" fill="rgb(212,227,28)" fg:x="7831907216" fg:w="5215815"/><text x="39.1208%" y="1663.50"></text></g><g><title>submit_bio_noacct_nocheck (4,719,101 samples, 0.02%)</title><rect x="38.8732%" y="1637" width="0.0234%" height="15" fill="rgb(209,118,27)" fg:x="7832403930" fg:w="4719101"/><text x="39.1232%" y="1647.50"></text></g><g><title>read_pages (28,326,761 samples, 0.14%)</title><rect x="38.7693%" y="1717" width="0.1406%" height="15" fill="rgb(226,102,5)" fg:x="7811459062" fg:w="28326761"/><text x="39.0193%" y="1727.50"></text></g><g><title>ext4_readahead (15,008,986 samples, 0.07%)</title><rect x="38.8354%" y="1701" width="0.0745%" height="15" fill="rgb(223,34,3)" fg:x="7824776837" fg:w="15008986"/><text x="39.0854%" y="1711.50"></text></g><g><title>ext4_mpage_readpages (14,660,381 samples, 0.07%)</title><rect x="38.8371%" y="1685" width="0.0728%" height="15" fill="rgb(221,81,38)" fg:x="7825125442" fg:w="14660381"/><text x="39.0871%" y="1695.50"></text></g><g><title>xa_load (2,662,792 samples, 0.01%)</title><rect x="38.8966%" y="1669" width="0.0132%" height="15" fill="rgb(236,219,28)" fg:x="7837123031" fg:w="2662792"/><text x="39.1466%" y="1679.50"></text></g><g><title>page_cache_async_ra (311,608,760 samples, 1.55%)</title><rect x="37.3822%" y="1781" width="1.5466%" height="15" fill="rgb(213,200,14)" fg:x="7531975483" fg:w="311608760"/><text x="37.6322%" y="1791.50"></text></g><g><title>ondemand_readahead (311,608,760 samples, 1.55%)</title><rect x="37.3822%" y="1765" width="1.5466%" height="15" fill="rgb(240,33,19)" fg:x="7531975483" fg:w="311608760"/><text x="37.6322%" y="1775.50"></text></g><g><title>page_cache_ra_order (311,500,097 samples, 1.55%)</title><rect x="37.3827%" y="1749" width="1.5460%" height="15" fill="rgb(233,113,27)" fg:x="7532084146" fg:w="311500097"/><text x="37.6327%" y="1759.50"></text></g><g><title>page_cache_ra_unbounded (311,500,097 samples, 1.55%)</title><rect x="37.3827%" y="1733" width="1.5460%" height="15" fill="rgb(220,221,18)" fg:x="7532084146" fg:w="311500097"/><text x="37.6327%" y="1743.50"></text></g><g><title>xa_load (3,798,420 samples, 0.02%)</title><rect x="38.9099%" y="1717" width="0.0189%" height="15" fill="rgb(238,92,8)" fg:x="7839785823" fg:w="3798420"/><text x="39.1599%" y="1727.50"></text></g><g><title>xas_load (3,425,530 samples, 0.02%)</title><rect x="38.9117%" y="1701" width="0.0170%" height="15" fill="rgb(222,164,16)" fg:x="7840158713" fg:w="3425530"/><text x="39.1617%" y="1711.50"></text></g><g><title>prepare_scan_count (6,608,434 samples, 0.03%)</title><rect x="39.0098%" y="1573" width="0.0328%" height="15" fill="rgb(241,119,3)" fg:x="7859918926" fg:w="6608434"/><text x="39.2598%" y="1583.50"></text></g><g><title>mem_cgroup_flush_stats (6,608,434 samples, 0.03%)</title><rect x="39.0098%" y="1557" width="0.0328%" height="15" fill="rgb(241,44,8)" fg:x="7859918926" fg:w="6608434"/><text x="39.2598%" y="1567.50"></text></g><g><title>cgroup_rstat_flush (6,608,434 samples, 0.03%)</title><rect x="39.0098%" y="1541" width="0.0328%" height="15" fill="rgb(230,36,40)" fg:x="7859918926" fg:w="6608434"/><text x="39.2598%" y="1551.50"></text></g><g><title>cgroup_rstat_flush_locked (6,608,434 samples, 0.03%)</title><rect x="39.0098%" y="1525" width="0.0328%" height="15" fill="rgb(243,16,36)" fg:x="7859918926" fg:w="6608434"/><text x="39.2598%" y="1535.50"></text></g><g><title>mem_cgroup_css_rstat_flush (3,209,443 samples, 0.02%)</title><rect x="39.0267%" y="1509" width="0.0159%" height="15" fill="rgb(231,4,26)" fg:x="7863317917" fg:w="3209443"/><text x="39.2767%" y="1519.50"></text></g><g><title>folio_lruvec_lock_irq (2,385,453 samples, 0.01%)</title><rect x="39.0658%" y="1493" width="0.0118%" height="15" fill="rgb(240,9,31)" fg:x="7871201226" fg:w="2385453"/><text x="39.3158%" y="1503.50"></text></g><g><title>_raw_spin_lock_irq (2,385,453 samples, 0.01%)</title><rect x="39.0658%" y="1477" width="0.0118%" height="15" fill="rgb(207,173,15)" fg:x="7871201226" fg:w="2385453"/><text x="39.3158%" y="1487.50"></text></g><g><title>page_cache_ext_isolate_folio (8,425,115 samples, 0.04%)</title><rect x="39.0426%" y="1509" width="0.0418%" height="15" fill="rgb(224,192,53)" fg:x="7866527360" fg:w="8425115"/><text x="39.2926%" y="1519.50"></text></g><g><title>lru_add_fn (3,313,185 samples, 0.02%)</title><rect x="39.1126%" y="1445" width="0.0164%" height="15" fill="rgb(223,67,28)" fg:x="7880642707" fg:w="3313185"/><text x="39.3626%" y="1455.50"></text></g><g><title>folio_add_lru (6,691,384 samples, 0.03%)</title><rect x="39.0984%" y="1477" width="0.0332%" height="15" fill="rgb(211,20,47)" fg:x="7877782358" fg:w="6691384"/><text x="39.3484%" y="1487.50"></text></g><g><title>folio_batch_move_lru (5,976,058 samples, 0.03%)</title><rect x="39.1020%" y="1461" width="0.0297%" height="15" fill="rgb(240,228,2)" fg:x="7878497684" fg:w="5976058"/><text x="39.3520%" y="1471.50"></text></g><g><title>__mod_lruvec_page_state (7,500,299 samples, 0.04%)</title><rect x="39.2574%" y="1413" width="0.0372%" height="15" fill="rgb(248,151,12)" fg:x="7909803802" fg:w="7500299"/><text x="39.5074%" y="1423.50"></text></g><g><title>__mod_memcg_lruvec_state (7,018,311 samples, 0.03%)</title><rect x="39.2598%" y="1397" width="0.0348%" height="15" fill="rgb(244,8,39)" fg:x="7910285790" fg:w="7018311"/><text x="39.5098%" y="1407.50"></text></g><g><title>filemap_unaccount_folio (8,947,259 samples, 0.04%)</title><rect x="39.2540%" y="1429" width="0.0444%" height="15" fill="rgb(222,26,8)" fg:x="7909116346" fg:w="8947259"/><text x="39.5040%" y="1439.50"></text></g><g><title>_raw_read_lock (3,593,478 samples, 0.02%)</title><rect x="39.3007%" y="1413" width="0.0178%" height="15" fill="rgb(213,106,44)" fg:x="7918544016" fg:w="3593478"/><text x="39.5507%" y="1423.50"></text></g><g><title>get_page_cache_ext_ops (5,502,330 samples, 0.03%)</title><rect x="39.2984%" y="1429" width="0.0273%" height="15" fill="rgb(214,129,20)" fg:x="7918063605" fg:w="5502330"/><text x="39.5484%" y="1439.50"></text></g><g><title>cache_ext_ds_registry_write_lock (23,185,103 samples, 0.12%)</title><rect x="39.3749%" y="1413" width="0.1151%" height="15" fill="rgb(212,32,13)" fg:x="7933486084" fg:w="23185103"/><text x="39.6249%" y="1423.50"></text></g><g><title>_raw_write_lock (23,185,103 samples, 0.12%)</title><rect x="39.3749%" y="1397" width="0.1151%" height="15" fill="rgb(208,168,33)" fg:x="7933486084" fg:w="23185103"/><text x="39.6249%" y="1407.50"></text></g><g><title>queued_write_lock_slowpath (17,265,172 samples, 0.09%)</title><rect x="39.4043%" y="1381" width="0.0857%" height="15" fill="rgb(231,207,8)" fg:x="7939406015" fg:w="17265172"/><text x="39.6543%" y="1391.50"></text></g><g><title>native_queued_spin_lock_slowpath (4,260,631 samples, 0.02%)</title><rect x="39.4688%" y="1365" width="0.0211%" height="15" fill="rgb(235,219,23)" fg:x="7952410556" fg:w="4260631"/><text x="39.7188%" y="1375.50"></text></g><g><title>__slab_free (9,969,776 samples, 0.05%)</title><rect x="39.5190%" y="1365" width="0.0495%" height="15" fill="rgb(226,216,26)" fg:x="7962520094" fg:w="9969776"/><text x="39.7690%" y="1375.50"></text></g><g><title>put_cpu_partial (2,045,455 samples, 0.01%)</title><rect x="39.5583%" y="1349" width="0.0102%" height="15" fill="rgb(239,137,16)" fg:x="7970444415" fg:w="2045455"/><text x="39.8083%" y="1359.50"></text></g><g><title>__unfreeze_partials (2,045,455 samples, 0.01%)</title><rect x="39.5583%" y="1333" width="0.0102%" height="15" fill="rgb(207,12,36)" fg:x="7970444415" fg:w="2045455"/><text x="39.8083%" y="1343.50"></text></g><g><title>__kmem_cache_free (10,715,537 samples, 0.05%)</title><rect x="39.5190%" y="1381" width="0.0532%" height="15" fill="rgb(210,214,24)" fg:x="7962520094" fg:w="10715537"/><text x="39.7690%" y="1391.50"></text></g><g><title>cache_ext_list_node_free (17,307,646 samples, 0.09%)</title><rect x="39.4900%" y="1413" width="0.0859%" height="15" fill="rgb(206,56,30)" fg:x="7956671187" fg:w="17307646"/><text x="39.7400%" y="1423.50"></text></g><g><title>kfree (17,307,646 samples, 0.09%)</title><rect x="39.4900%" y="1397" width="0.0859%" height="15" fill="rgb(228,143,26)" fg:x="7956671187" fg:w="17307646"/><text x="39.7400%" y="1407.50"></text></g><g><title>valid_folios_del (54,281,072 samples, 0.27%)</title><rect x="39.3257%" y="1429" width="0.2694%" height="15" fill="rgb(216,218,46)" fg:x="7923565935" fg:w="54281072"/><text x="39.5757%" y="1439.50"></text></g><g><title>kfree (3,868,174 samples, 0.02%)</title><rect x="39.5759%" y="1413" width="0.0192%" height="15" fill="rgb(206,6,19)" fg:x="7973978833" fg:w="3868174"/><text x="39.8259%" y="1423.50"></text></g><g><title>__kmem_cache_free (2,365,075 samples, 0.01%)</title><rect x="39.5833%" y="1397" width="0.0117%" height="15" fill="rgb(239,177,51)" fg:x="7975481932" fg:w="2365075"/><text x="39.8333%" y="1407.50"></text></g><g><title>__slab_free (2,365,075 samples, 0.01%)</title><rect x="39.5833%" y="1381" width="0.0117%" height="15" fill="rgb(216,55,25)" fg:x="7975481932" fg:w="2365075"/><text x="39.8333%" y="1391.50"></text></g><g><title>xas_init_marks (4,663,479 samples, 0.02%)</title><rect x="39.5982%" y="1429" width="0.0231%" height="15" fill="rgb(231,163,29)" fg:x="7978477576" fg:w="4663479"/><text x="39.8482%" y="1439.50"></text></g><g><title>xas_clear_mark (4,663,479 samples, 0.02%)</title><rect x="39.5982%" y="1413" width="0.0231%" height="15" fill="rgb(232,149,50)" fg:x="7978477576" fg:w="4663479"/><text x="39.8482%" y="1423.50"></text></g><g><title>__filemap_remove_folio (94,899,300 samples, 0.47%)</title><rect x="39.2175%" y="1445" width="0.4710%" height="15" fill="rgb(223,142,48)" fg:x="7901778282" fg:w="94899300"/><text x="39.4675%" y="1455.50"></text></g><g><title>xas_store (13,536,527 samples, 0.07%)</title><rect x="39.6213%" y="1429" width="0.0672%" height="15" fill="rgb(245,83,23)" fg:x="7983141055" fg:w="13536527"/><text x="39.8713%" y="1439.50"></text></g><g><title>xas_create (12,175,815 samples, 0.06%)</title><rect x="39.6281%" y="1413" width="0.0604%" height="15" fill="rgb(224,63,2)" fg:x="7984501767" fg:w="12175815"/><text x="39.8781%" y="1423.50"></text></g><g><title>_raw_spin_lock (13,565,016 samples, 0.07%)</title><rect x="39.6885%" y="1445" width="0.0673%" height="15" fill="rgb(218,65,53)" fg:x="7996677582" fg:w="13565016"/><text x="39.9385%" y="1455.50"></text></g><g><title>native_queued_spin_lock_slowpath (6,979,556 samples, 0.03%)</title><rect x="39.7212%" y="1429" width="0.0346%" height="15" fill="rgb(221,84,29)" fg:x="8003263042" fg:w="6979556"/><text x="39.9712%" y="1439.50"></text></g><g><title>_raw_spin_lock_irq (5,183,767 samples, 0.03%)</title><rect x="39.7559%" y="1445" width="0.0257%" height="15" fill="rgb(234,0,32)" fg:x="8010242598" fg:w="5183767"/><text x="40.0059%" y="1455.50"></text></g><g><title>_raw_spin_unlock_irq (4,776,432 samples, 0.02%)</title><rect x="39.7816%" y="1445" width="0.0237%" height="15" fill="rgb(206,20,16)" fg:x="8015426365" fg:w="4776432"/><text x="40.0316%" y="1455.50"></text></g><g><title>__remove_mapping (125,367,710 samples, 0.62%)</title><rect x="39.2032%" y="1461" width="0.6222%" height="15" fill="rgb(244,172,18)" fg:x="7898896815" fg:w="125367710"/><text x="39.4532%" y="1471.50"></text></g><g><title>workingset_eviction (3,325,000 samples, 0.02%)</title><rect x="39.8089%" y="1445" width="0.0165%" height="15" fill="rgb(254,133,1)" fg:x="8020939525" fg:w="3325000"/><text x="40.0589%" y="1455.50"></text></g><g><title>jbd2_journal_grab_journal_head (8,380,318 samples, 0.04%)</title><rect x="39.8478%" y="1413" width="0.0416%" height="15" fill="rgb(222,206,41)" fg:x="8028765760" fg:w="8380318"/><text x="40.0978%" y="1423.50"></text></g><g><title>__slab_free (3,459,371 samples, 0.02%)</title><rect x="39.9058%" y="1365" width="0.0172%" height="15" fill="rgb(212,3,42)" fg:x="8040459101" fg:w="3459371"/><text x="40.1558%" y="1375.50"></text></g><g><title>put_cpu_partial (2,112,097 samples, 0.01%)</title><rect x="39.9125%" y="1349" width="0.0105%" height="15" fill="rgb(241,11,4)" fg:x="8041806375" fg:w="2112097"/><text x="40.1625%" y="1359.50"></text></g><g><title>cache_from_obj (4,118,027 samples, 0.02%)</title><rect x="39.9230%" y="1365" width="0.0204%" height="15" fill="rgb(205,19,26)" fg:x="8043918472" fg:w="4118027"/><text x="40.1730%" y="1375.50"></text></g><g><title>filemap_release_folio (31,496,061 samples, 0.16%)</title><rect x="39.8317%" y="1461" width="0.1563%" height="15" fill="rgb(210,179,32)" fg:x="8025517719" fg:w="31496061"/><text x="40.0817%" y="1471.50"></text></g><g><title>ext4_release_folio (31,496,061 samples, 0.16%)</title><rect x="39.8317%" y="1445" width="0.1563%" height="15" fill="rgb(227,116,49)" fg:x="8025517719" fg:w="31496061"/><text x="40.0817%" y="1455.50"></text></g><g><title>jbd2_journal_try_to_free_buffers (28,894,524 samples, 0.14%)</title><rect x="39.8446%" y="1429" width="0.1434%" height="15" fill="rgb(211,146,6)" fg:x="8028119256" fg:w="28894524"/><text x="40.0946%" y="1439.50"></text></g><g><title>try_to_free_buffers (19,867,702 samples, 0.10%)</title><rect x="39.8894%" y="1413" width="0.0986%" height="15" fill="rgb(219,44,39)" fg:x="8037146078" fg:w="19867702"/><text x="40.1394%" y="1423.50"></text></g><g><title>free_buffer_head (17,489,399 samples, 0.09%)</title><rect x="39.9012%" y="1397" width="0.0868%" height="15" fill="rgb(234,128,11)" fg:x="8039524381" fg:w="17489399"/><text x="40.1512%" y="1407.50"></text></g><g><title>kmem_cache_free (17,489,399 samples, 0.09%)</title><rect x="39.9012%" y="1381" width="0.0868%" height="15" fill="rgb(220,183,53)" fg:x="8039524381" fg:w="17489399"/><text x="40.1512%" y="1391.50"></text></g><g><title>memcg_slab_free_hook (8,977,281 samples, 0.04%)</title><rect x="39.9434%" y="1365" width="0.0446%" height="15" fill="rgb(213,219,32)" fg:x="8048036499" fg:w="8977281"/><text x="40.1934%" y="1375.50"></text></g><g><title>free_unref_page_commit (2,732,019 samples, 0.01%)</title><rect x="40.0039%" y="1445" width="0.0136%" height="15" fill="rgb(232,156,16)" fg:x="8060222963" fg:w="2732019"/><text x="40.2539%" y="1455.50"></text></g><g><title>reclaim_pages (192,602,240 samples, 0.96%)</title><rect x="39.0844%" y="1509" width="0.9559%" height="15" fill="rgb(246,135,34)" fg:x="7874952475" fg:w="192602240"/><text x="39.3344%" y="1519.50"></text></g><g><title>reclaim_folio_list (192,131,336 samples, 0.95%)</title><rect x="39.0867%" y="1493" width="0.9536%" height="15" fill="rgb(241,99,0)" fg:x="7875423379" fg:w="192131336"/><text x="39.3367%" y="1503.50"></text></g><g><title>shrink_folio_list (183,080,973 samples, 0.91%)</title><rect x="39.1317%" y="1477" width="0.9087%" height="15" fill="rgb(222,103,45)" fg:x="7884473742" fg:w="183080973"/><text x="39.3817%" y="1487.50"></text></g><g><title>free_unref_page_list (9,456,454 samples, 0.05%)</title><rect x="39.9934%" y="1461" width="0.0469%" height="15" fill="rgb(212,57,4)" fg:x="8058098261" fg:w="9456454"/><text x="40.2434%" y="1471.50"></text></g><g><title>free_unref_page_prepare (4,599,733 samples, 0.02%)</title><rect x="40.0175%" y="1445" width="0.0228%" height="15" fill="rgb(215,68,47)" fg:x="8062954982" fg:w="4599733"/><text x="40.2675%" y="1455.50"></text></g><g><title>page_cache_ext_isolate_and_reclaim (245,021,047 samples, 1.22%)</title><rect x="39.0426%" y="1541" width="1.2161%" height="15" fill="rgb(230,84,2)" fg:x="7866527360" fg:w="245021047"/><text x="39.2926%" y="1551.50"></text></g><g><title>__page_cache_ext_isolate_and_reclaim (245,021,047 samples, 1.22%)</title><rect x="39.0426%" y="1525" width="1.2161%" height="15" fill="rgb(220,102,14)" fg:x="7866527360" fg:w="245021047"/><text x="39.2926%" y="1535.50"></text></g><g><title>valid_folios_exists_unlocked (43,993,692 samples, 0.22%)</title><rect x="40.0403%" y="1509" width="0.2183%" height="15" fill="rgb(240,10,32)" fg:x="8067554715" fg:w="43993692"/><text x="40.2903%" y="1519.50"></text></g><g><title>valid_folios_del (2,272,010 samples, 0.01%)</title><rect x="40.2800%" y="1461" width="0.0113%" height="15" fill="rgb(215,47,27)" fg:x="8115849394" fg:w="2272010"/><text x="40.5300%" y="1471.50"></text></g><g><title>__filemap_remove_folio (4,358,872 samples, 0.02%)</title><rect x="40.2730%" y="1477" width="0.0216%" height="15" fill="rgb(233,188,43)" fg:x="8114447508" fg:w="4358872"/><text x="40.5230%" y="1487.50"></text></g><g><title>__remove_mapping (5,850,260 samples, 0.03%)</title><rect x="40.2730%" y="1493" width="0.0290%" height="15" fill="rgb(253,190,1)" fg:x="8114447508" fg:w="5850260"/><text x="40.5230%" y="1503.50"></text></g><g><title>filemap_release_folio (2,900,349 samples, 0.01%)</title><rect x="40.3021%" y="1493" width="0.0144%" height="15" fill="rgb(206,114,52)" fg:x="8120297768" fg:w="2900349"/><text x="40.5521%" y="1503.50"></text></g><g><title>ext4_release_folio (2,900,349 samples, 0.01%)</title><rect x="40.3021%" y="1477" width="0.0144%" height="15" fill="rgb(233,120,37)" fg:x="8120297768" fg:w="2900349"/><text x="40.5521%" y="1487.50"></text></g><g><title>jbd2_journal_try_to_free_buffers (2,900,349 samples, 0.01%)</title><rect x="40.3021%" y="1461" width="0.0144%" height="15" fill="rgb(214,52,39)" fg:x="8120297768" fg:w="2900349"/><text x="40.5521%" y="1471.50"></text></g><g><title>try_to_free_buffers (2,214,644 samples, 0.01%)</title><rect x="40.3055%" y="1445" width="0.0110%" height="15" fill="rgb(223,80,29)" fg:x="8120983473" fg:w="2214644"/><text x="40.5555%" y="1455.50"></text></g><g><title>shrink_lruvec (258,177,065 samples, 1.28%)</title><rect x="39.0426%" y="1557" width="1.2814%" height="15" fill="rgb(230,101,40)" fg:x="7866527360" fg:w="258177065"/><text x="39.2926%" y="1567.50"></text></g><g><title>shrink_list (13,156,018 samples, 0.07%)</title><rect x="40.2587%" y="1541" width="0.0653%" height="15" fill="rgb(219,211,8)" fg:x="8111548407" fg:w="13156018"/><text x="40.5087%" y="1551.50"></text></g><g><title>shrink_inactive_list (13,156,018 samples, 0.07%)</title><rect x="40.2587%" y="1525" width="0.0653%" height="15" fill="rgb(252,126,28)" fg:x="8111548407" fg:w="13156018"/><text x="40.5087%" y="1535.50"></text></g><g><title>shrink_folio_list (11,010,671 samples, 0.05%)</title><rect x="40.2693%" y="1509" width="0.0546%" height="15" fill="rgb(215,56,38)" fg:x="8113693754" fg:w="11010671"/><text x="40.5193%" y="1519.50"></text></g><g><title>charge_memcg (277,872,589 samples, 1.38%)</title><rect x="38.9759%" y="1669" width="1.3791%" height="15" fill="rgb(249,55,44)" fg:x="7853097327" fg:w="277872589"/><text x="39.2259%" y="1679.50"></text></g><g><title>try_charge_memcg (274,692,858 samples, 1.36%)</title><rect x="38.9917%" y="1653" width="1.3633%" height="15" fill="rgb(220,221,32)" fg:x="7856277058" fg:w="274692858"/><text x="39.2417%" y="1663.50"></text></g><g><title>try_to_free_mem_cgroup_pages (271,050,990 samples, 1.35%)</title><rect x="39.0098%" y="1637" width="1.3453%" height="15" fill="rgb(212,216,41)" fg:x="7859918926" fg:w="271050990"/><text x="39.2598%" y="1647.50"></text></g><g><title>do_try_to_free_pages (271,050,990 samples, 1.35%)</title><rect x="39.0098%" y="1621" width="1.3453%" height="15" fill="rgb(228,213,43)" fg:x="7859918926" fg:w="271050990"/><text x="39.2598%" y="1631.50"></text></g><g><title>shrink_zones (271,050,990 samples, 1.35%)</title><rect x="39.0098%" y="1605" width="1.3453%" height="15" fill="rgb(211,31,26)" fg:x="7859918926" fg:w="271050990"/><text x="39.2598%" y="1615.50"></text></g><g><title>shrink_node (271,050,990 samples, 1.35%)</title><rect x="39.0098%" y="1589" width="1.3453%" height="15" fill="rgb(229,202,19)" fg:x="7859918926" fg:w="271050990"/><text x="39.2598%" y="1599.50"></text></g><g><title>shrink_node_memcgs (264,442,556 samples, 1.31%)</title><rect x="39.0426%" y="1573" width="1.3125%" height="15" fill="rgb(229,105,46)" fg:x="7866527360" fg:w="264442556"/><text x="39.2926%" y="1583.50"></text></g><g><title>shrink_slab (6,265,491 samples, 0.03%)</title><rect x="40.3239%" y="1557" width="0.0311%" height="15" fill="rgb(235,108,1)" fg:x="8124704425" fg:w="6265491"/><text x="40.5739%" y="1567.50"></text></g><g><title>shrink_slab_memcg (6,265,491 samples, 0.03%)</title><rect x="40.3239%" y="1541" width="0.0311%" height="15" fill="rgb(245,111,35)" fg:x="8124704425" fg:w="6265491"/><text x="40.5739%" y="1551.50"></text></g><g><title>do_shrink_slab (6,265,491 samples, 0.03%)</title><rect x="40.3239%" y="1525" width="0.0311%" height="15" fill="rgb(219,185,31)" fg:x="8124704425" fg:w="6265491"/><text x="40.5739%" y="1535.50"></text></g><g><title>count_shadow_nodes (6,265,491 samples, 0.03%)</title><rect x="40.3239%" y="1509" width="0.0311%" height="15" fill="rgb(214,4,43)" fg:x="8124704425" fg:w="6265491"/><text x="40.5739%" y="1519.50"></text></g><g><title>mem_cgroup_flush_stats (6,265,491 samples, 0.03%)</title><rect x="40.3239%" y="1493" width="0.0311%" height="15" fill="rgb(235,227,40)" fg:x="8124704425" fg:w="6265491"/><text x="40.5739%" y="1503.50"></text></g><g><title>cgroup_rstat_flush (6,265,491 samples, 0.03%)</title><rect x="40.3239%" y="1477" width="0.0311%" height="15" fill="rgb(230,88,30)" fg:x="8124704425" fg:w="6265491"/><text x="40.5739%" y="1487.50"></text></g><g><title>cgroup_rstat_flush_locked (6,265,491 samples, 0.03%)</title><rect x="40.3239%" y="1461" width="0.0311%" height="15" fill="rgb(216,217,1)" fg:x="8124704425" fg:w="6265491"/><text x="40.5739%" y="1471.50"></text></g><g><title>mem_cgroup_css_rstat_flush (3,485,524 samples, 0.02%)</title><rect x="40.3377%" y="1445" width="0.0173%" height="15" fill="rgb(248,139,50)" fg:x="8127484392" fg:w="3485524"/><text x="40.5877%" y="1455.50"></text></g><g><title>__mem_cgroup_charge (279,468,447 samples, 1.39%)</title><rect x="38.9706%" y="1685" width="1.3870%" height="15" fill="rgb(233,1,21)" fg:x="7852030308" fg:w="279468447"/><text x="39.2206%" y="1695.50"></text></g><g><title>__mod_memcg_lruvec_state (14,369,019 samples, 0.07%)</title><rect x="40.3645%" y="1669" width="0.0713%" height="15" fill="rgb(215,183,12)" fg:x="8132879288" fg:w="14369019"/><text x="40.6145%" y="1679.50"></text></g><g><title>__mod_lruvec_page_state (16,136,356 samples, 0.08%)</title><rect x="40.3577%" y="1685" width="0.0801%" height="15" fill="rgb(229,104,42)" fg:x="8131498755" fg:w="16136356"/><text x="40.6077%" y="1695.50"></text></g><g><title>_raw_spin_lock_irq (7,037,991 samples, 0.03%)</title><rect x="40.4400%" y="1685" width="0.0349%" height="15" fill="rgb(243,34,48)" fg:x="8148084294" fg:w="7037991"/><text x="40.6900%" y="1695.50"></text></g><g><title>get_page_cache_ext_ops (4,237,814 samples, 0.02%)</title><rect x="40.4803%" y="1685" width="0.0210%" height="15" fill="rgb(239,11,44)" fg:x="8156201812" fg:w="4237814"/><text x="40.7303%" y="1695.50"></text></g><g><title>_raw_read_lock (3,729,972 samples, 0.02%)</title><rect x="40.4828%" y="1669" width="0.0185%" height="15" fill="rgb(231,98,35)" fg:x="8156709654" fg:w="3729972"/><text x="40.7328%" y="1679.50"></text></g><g><title>_raw_spin_lock (3,319,951 samples, 0.02%)</title><rect x="40.5630%" y="1669" width="0.0165%" height="15" fill="rgb(233,28,25)" fg:x="8172870871" fg:w="3319951"/><text x="40.8130%" y="1679.50"></text></g><g><title>___slab_alloc (5,114,844 samples, 0.03%)</title><rect x="40.6540%" y="1621" width="0.0254%" height="15" fill="rgb(234,123,11)" fg:x="8191196570" fg:w="5114844"/><text x="40.9040%" y="1631.50"></text></g><g><title>get_partial_node (2,029,379 samples, 0.01%)</title><rect x="40.6693%" y="1605" width="0.0101%" height="15" fill="rgb(220,69,3)" fg:x="8194282035" fg:w="2029379"/><text x="40.9193%" y="1615.50"></text></g><g><title>__kmem_cache_alloc_node (19,790,296 samples, 0.10%)</title><rect x="40.5833%" y="1637" width="0.0982%" height="15" fill="rgb(214,64,36)" fg:x="8176952151" fg:w="19790296"/><text x="40.8333%" y="1647.50"></text></g><g><title>cache_ext_list_node_alloc (21,002,783 samples, 0.10%)</title><rect x="40.5795%" y="1669" width="0.1042%" height="15" fill="rgb(211,138,32)" fg:x="8176190822" fg:w="21002783"/><text x="40.8295%" y="1679.50"></text></g><g><title>kmalloc_trace (21,002,783 samples, 0.10%)</title><rect x="40.5795%" y="1653" width="0.1042%" height="15" fill="rgb(213,118,47)" fg:x="8176190822" fg:w="21002783"/><text x="40.8295%" y="1663.50"></text></g><g><title>___slab_alloc (6,774,585 samples, 0.03%)</title><rect x="40.7045%" y="1637" width="0.0336%" height="15" fill="rgb(243,124,49)" fg:x="8201388526" fg:w="6774585"/><text x="40.9545%" y="1647.50"></text></g><g><title>get_partial_node (2,395,846 samples, 0.01%)</title><rect x="40.7263%" y="1621" width="0.0119%" height="15" fill="rgb(221,30,28)" fg:x="8205767265" fg:w="2395846"/><text x="40.9763%" y="1631.50"></text></g><g><title>__kmem_cache_alloc_node (12,664,892 samples, 0.06%)</title><rect x="40.6837%" y="1653" width="0.0629%" height="15" fill="rgb(246,37,13)" fg:x="8197193605" fg:w="12664892"/><text x="40.9337%" y="1663.50"></text></g><g><title>valid_folios_add (51,170,137 samples, 0.25%)</title><rect x="40.5013%" y="1685" width="0.2540%" height="15" fill="rgb(249,66,14)" fg:x="8160439626" fg:w="51170137"/><text x="40.7513%" y="1695.50"></text></g><g><title>kmalloc_trace (14,416,158 samples, 0.07%)</title><rect x="40.6837%" y="1669" width="0.0715%" height="15" fill="rgb(213,166,5)" fg:x="8197193605" fg:w="14416158"/><text x="40.9337%" y="1679.50"></text></g><g><title>xas_find_conflict (3,537,802 samples, 0.02%)</title><rect x="40.7624%" y="1685" width="0.0176%" height="15" fill="rgb(221,66,24)" fg:x="8213042338" fg:w="3537802"/><text x="41.0124%" y="1695.50"></text></g><g><title>__filemap_remove_folio (2,515,375 samples, 0.01%)</title><rect x="40.7872%" y="1397" width="0.0125%" height="15" fill="rgb(210,132,17)" fg:x="8218034948" fg:w="2515375"/><text x="41.0372%" y="1407.50"></text></g><g><title>reclaim_pages (4,082,649 samples, 0.02%)</title><rect x="40.7836%" y="1461" width="0.0203%" height="15" fill="rgb(243,202,5)" fg:x="8217318653" fg:w="4082649"/><text x="41.0336%" y="1471.50"></text></g><g><title>reclaim_folio_list (4,082,649 samples, 0.02%)</title><rect x="40.7836%" y="1445" width="0.0203%" height="15" fill="rgb(233,70,48)" fg:x="8217318653" fg:w="4082649"/><text x="41.0336%" y="1455.50"></text></g><g><title>shrink_folio_list (4,082,649 samples, 0.02%)</title><rect x="40.7836%" y="1429" width="0.0203%" height="15" fill="rgb(238,41,26)" fg:x="8217318653" fg:w="4082649"/><text x="41.0336%" y="1439.50"></text></g><g><title>__remove_mapping (3,366,354 samples, 0.02%)</title><rect x="40.7872%" y="1413" width="0.0167%" height="15" fill="rgb(241,19,31)" fg:x="8218034948" fg:w="3366354"/><text x="41.0372%" y="1423.50"></text></g><g><title>xas_nomem (7,230,361 samples, 0.04%)</title><rect x="40.7799%" y="1685" width="0.0359%" height="15" fill="rgb(214,76,10)" fg:x="8216580140" fg:w="7230361"/><text x="41.0299%" y="1695.50"></text></g><g><title>kmem_cache_alloc_lru (7,230,361 samples, 0.04%)</title><rect x="40.7799%" y="1669" width="0.0359%" height="15" fill="rgb(254,202,22)" fg:x="8216580140" fg:w="7230361"/><text x="41.0299%" y="1679.50"></text></g><g><title>memcg_slab_pre_alloc_hook (7,230,361 samples, 0.04%)</title><rect x="40.7799%" y="1653" width="0.0359%" height="15" fill="rgb(214,72,24)" fg:x="8216580140" fg:w="7230361"/><text x="41.0299%" y="1663.50"></text></g><g><title>obj_cgroup_charge (7,230,361 samples, 0.04%)</title><rect x="40.7799%" y="1637" width="0.0359%" height="15" fill="rgb(221,92,46)" fg:x="8216580140" fg:w="7230361"/><text x="41.0299%" y="1647.50"></text></g><g><title>obj_cgroup_charge_pages (7,230,361 samples, 0.04%)</title><rect x="40.7799%" y="1621" width="0.0359%" height="15" fill="rgb(246,13,50)" fg:x="8216580140" fg:w="7230361"/><text x="41.0299%" y="1631.50"></text></g><g><title>try_charge_memcg (7,230,361 samples, 0.04%)</title><rect x="40.7799%" y="1605" width="0.0359%" height="15" fill="rgb(240,165,38)" fg:x="8216580140" fg:w="7230361"/><text x="41.0299%" y="1615.50"></text></g><g><title>try_to_free_mem_cgroup_pages (7,230,361 samples, 0.04%)</title><rect x="40.7799%" y="1589" width="0.0359%" height="15" fill="rgb(241,24,51)" fg:x="8216580140" fg:w="7230361"/><text x="41.0299%" y="1599.50"></text></g><g><title>do_try_to_free_pages (7,230,361 samples, 0.04%)</title><rect x="40.7799%" y="1573" width="0.0359%" height="15" fill="rgb(227,51,44)" fg:x="8216580140" fg:w="7230361"/><text x="41.0299%" y="1583.50"></text></g><g><title>shrink_zones (7,230,361 samples, 0.04%)</title><rect x="40.7799%" y="1557" width="0.0359%" height="15" fill="rgb(231,121,3)" fg:x="8216580140" fg:w="7230361"/><text x="41.0299%" y="1567.50"></text></g><g><title>shrink_node (7,230,361 samples, 0.04%)</title><rect x="40.7799%" y="1541" width="0.0359%" height="15" fill="rgb(245,3,41)" fg:x="8216580140" fg:w="7230361"/><text x="41.0299%" y="1551.50"></text></g><g><title>shrink_node_memcgs (7,230,361 samples, 0.04%)</title><rect x="40.7799%" y="1525" width="0.0359%" height="15" fill="rgb(214,13,26)" fg:x="8216580140" fg:w="7230361"/><text x="41.0299%" y="1535.50"></text></g><g><title>shrink_lruvec (7,230,361 samples, 0.04%)</title><rect x="40.7799%" y="1509" width="0.0359%" height="15" fill="rgb(252,75,11)" fg:x="8216580140" fg:w="7230361"/><text x="41.0299%" y="1519.50"></text></g><g><title>page_cache_ext_isolate_and_reclaim (7,230,361 samples, 0.04%)</title><rect x="40.7799%" y="1493" width="0.0359%" height="15" fill="rgb(218,226,17)" fg:x="8216580140" fg:w="7230361"/><text x="41.0299%" y="1503.50"></text></g><g><title>__page_cache_ext_isolate_and_reclaim (7,230,361 samples, 0.04%)</title><rect x="40.7799%" y="1477" width="0.0359%" height="15" fill="rgb(248,89,38)" fg:x="8216580140" fg:w="7230361"/><text x="41.0299%" y="1487.50"></text></g><g><title>valid_folios_exists_unlocked (2,409,199 samples, 0.01%)</title><rect x="40.8039%" y="1461" width="0.0120%" height="15" fill="rgb(237,73,46)" fg:x="8221401302" fg:w="2409199"/><text x="41.0539%" y="1471.50"></text></g><g><title>__filemap_add_folio (383,683,736 samples, 1.90%)</title><rect x="38.9444%" y="1701" width="1.9043%" height="15" fill="rgb(242,78,33)" fg:x="7846747899" fg:w="383683736"/><text x="39.1944%" y="1711.50">_..</text></g><g><title>xas_store (6,621,134 samples, 0.03%)</title><rect x="40.8158%" y="1685" width="0.0329%" height="15" fill="rgb(235,60,3)" fg:x="8223810501" fg:w="6621134"/><text x="41.0658%" y="1695.50"></text></g><g><title>xas_create (3,838,328 samples, 0.02%)</title><rect x="40.8296%" y="1669" width="0.0191%" height="15" fill="rgb(216,172,19)" fg:x="8226593307" fg:w="3838328"/><text x="41.0796%" y="1679.50"></text></g><g><title>kmem_cache_alloc_lru (2,783,241 samples, 0.01%)</title><rect x="40.8349%" y="1653" width="0.0138%" height="15" fill="rgb(227,6,42)" fg:x="8227648394" fg:w="2783241"/><text x="41.0849%" y="1663.50"></text></g><g><title>__mod_memcg_lruvec_state (2,326,465 samples, 0.01%)</title><rect x="40.8814%" y="1637" width="0.0115%" height="15" fill="rgb(223,207,42)" fg:x="8237020210" fg:w="2326465"/><text x="41.1314%" y="1647.50"></text></g><g><title>__mod_lruvec_state (3,309,247 samples, 0.02%)</title><rect x="40.8814%" y="1653" width="0.0164%" height="15" fill="rgb(246,138,30)" fg:x="8237020210" fg:w="3309247"/><text x="41.1314%" y="1663.50"></text></g><g><title>lru_add_fn (7,016,577 samples, 0.03%)</title><rect x="40.8641%" y="1669" width="0.0348%" height="15" fill="rgb(251,199,47)" fg:x="8233536246" fg:w="7016577"/><text x="41.1141%" y="1679.50"></text></g><g><title>folio_batch_move_lru (10,626,937 samples, 0.05%)</title><rect x="40.8521%" y="1685" width="0.0527%" height="15" fill="rgb(228,218,44)" fg:x="8231123008" fg:w="10626937"/><text x="41.1021%" y="1695.50"></text></g><g><title>folio_add_lru (11,901,648 samples, 0.06%)</title><rect x="40.8521%" y="1701" width="0.0591%" height="15" fill="rgb(220,68,6)" fg:x="8231123008" fg:w="11901648"/><text x="41.1021%" y="1711.50"></text></g><g><title>filemap_add_folio (397,905,150 samples, 1.97%)</title><rect x="38.9444%" y="1717" width="1.9749%" height="15" fill="rgb(240,60,26)" fg:x="7846747899" fg:w="397905150"/><text x="39.1944%" y="1727.50">f..</text></g><g><title>clear_page_rep (46,040,269 samples, 0.23%)</title><rect x="40.9399%" y="1637" width="0.2285%" height="15" fill="rgb(211,200,19)" fg:x="8248808904" fg:w="46040269"/><text x="41.1899%" y="1647.50"></text></g><g><title>__rmqueue_pcplist (3,085,694 samples, 0.02%)</title><rect x="41.1728%" y="1605" width="0.0153%" height="15" fill="rgb(242,145,30)" fg:x="8295741199" fg:w="3085694"/><text x="41.4228%" y="1615.50"></text></g><g><title>rmqueue_bulk (2,413,784 samples, 0.01%)</title><rect x="41.1762%" y="1589" width="0.0120%" height="15" fill="rgb(225,64,13)" fg:x="8296413109" fg:w="2413784"/><text x="41.4262%" y="1599.50"></text></g><g><title>__alloc_pages (54,228,676 samples, 0.27%)</title><rect x="40.9215%" y="1669" width="0.2691%" height="15" fill="rgb(218,103,35)" fg:x="8245100187" fg:w="54228676"/><text x="41.1715%" y="1679.50"></text></g><g><title>get_page_from_freelist (50,963,221 samples, 0.25%)</title><rect x="40.9377%" y="1653" width="0.2529%" height="15" fill="rgb(216,93,46)" fg:x="8248365642" fg:w="50963221"/><text x="41.1877%" y="1663.50"></text></g><g><title>rmqueue (4,479,690 samples, 0.02%)</title><rect x="41.1684%" y="1637" width="0.0222%" height="15" fill="rgb(225,159,27)" fg:x="8294849173" fg:w="4479690"/><text x="41.4184%" y="1647.50"></text></g><g><title>rmqueue_pcplist (3,986,348 samples, 0.02%)</title><rect x="41.1708%" y="1621" width="0.0198%" height="15" fill="rgb(225,204,11)" fg:x="8295342515" fg:w="3986348"/><text x="41.4208%" y="1631.50"></text></g><g><title>filemap_alloc_folio (55,801,730 samples, 0.28%)</title><rect x="40.9193%" y="1717" width="0.2770%" height="15" fill="rgb(205,56,4)" fg:x="8244653049" fg:w="55801730"/><text x="41.1693%" y="1727.50"></text></g><g><title>folio_alloc (55,801,730 samples, 0.28%)</title><rect x="40.9193%" y="1701" width="0.2770%" height="15" fill="rgb(206,6,35)" fg:x="8244653049" fg:w="55801730"/><text x="41.1693%" y="1711.50"></text></g><g><title>alloc_pages (55,801,730 samples, 0.28%)</title><rect x="40.9193%" y="1685" width="0.2770%" height="15" fill="rgb(247,73,52)" fg:x="8244653049" fg:w="55801730"/><text x="41.1693%" y="1695.50"></text></g><g><title>[tls.ko] (2,778,821 samples, 0.01%)</title><rect x="41.2201%" y="1493" width="0.0138%" height="15" fill="rgb(246,97,4)" fg:x="8305270355" fg:w="2778821"/><text x="41.4701%" y="1503.50"></text></g><g><title>amd_iommu_map_pages (4,190,436 samples, 0.02%)</title><rect x="41.2537%" y="1397" width="0.0208%" height="15" fill="rgb(212,37,15)" fg:x="8312038204" fg:w="4190436"/><text x="41.5037%" y="1407.50"></text></g><g><title>iommu_v1_map_pages (2,703,145 samples, 0.01%)</title><rect x="41.2611%" y="1381" width="0.0134%" height="15" fill="rgb(208,130,40)" fg:x="8313525495" fg:w="2703145"/><text x="41.5111%" y="1391.50"></text></g><g><title>__iommu_map_pages (6,320,076 samples, 0.03%)</title><rect x="41.2523%" y="1413" width="0.0314%" height="15" fill="rgb(236,55,29)" fg:x="8311759208" fg:w="6320076"/><text x="41.5023%" y="1423.50"></text></g><g><title>ata_qc_issue (14,571,876 samples, 0.07%)</title><rect x="41.2179%" y="1509" width="0.0723%" height="15" fill="rgb(209,156,45)" fg:x="8304827785" fg:w="14571876"/><text x="41.4679%" y="1519.50"></text></g><g><title>dma_map_sg_attrs (11,350,485 samples, 0.06%)</title><rect x="41.2339%" y="1493" width="0.0563%" height="15" fill="rgb(249,107,4)" fg:x="8308049176" fg:w="11350485"/><text x="41.4839%" y="1503.50"></text></g><g><title>__dma_map_sg_attrs (11,350,485 samples, 0.06%)</title><rect x="41.2339%" y="1477" width="0.0563%" height="15" fill="rgb(227,7,13)" fg:x="8308049176" fg:w="11350485"/><text x="41.4839%" y="1487.50"></text></g><g><title>iommu_dma_map_sg (11,350,485 samples, 0.06%)</title><rect x="41.2339%" y="1461" width="0.0563%" height="15" fill="rgb(250,129,14)" fg:x="8308049176" fg:w="11350485"/><text x="41.4839%" y="1471.50"></text></g><g><title>iommu_map_sg (8,602,808 samples, 0.04%)</title><rect x="41.2475%" y="1445" width="0.0427%" height="15" fill="rgb(229,92,13)" fg:x="8310796853" fg:w="8602808"/><text x="41.4975%" y="1455.50"></text></g><g><title>__iommu_map (8,052,836 samples, 0.04%)</title><rect x="41.2503%" y="1429" width="0.0400%" height="15" fill="rgb(245,98,39)" fg:x="8311346825" fg:w="8052836"/><text x="41.5003%" y="1439.50"></text></g><g><title>__ata_scsi_queuecmd (18,049,355 samples, 0.09%)</title><rect x="41.2081%" y="1525" width="0.0896%" height="15" fill="rgb(234,135,48)" fg:x="8302850825" fg:w="18049355"/><text x="41.4581%" y="1535.50"></text></g><g><title>_raw_spin_lock_irqsave (4,058,903 samples, 0.02%)</title><rect x="41.2977%" y="1525" width="0.0201%" height="15" fill="rgb(230,98,28)" fg:x="8320900180" fg:w="4058903"/><text x="41.5477%" y="1535.50"></text></g><g><title>native_queued_spin_lock_slowpath (2,848,377 samples, 0.01%)</title><rect x="41.3037%" y="1509" width="0.0141%" height="15" fill="rgb(223,121,0)" fg:x="8322110706" fg:w="2848377"/><text x="41.5537%" y="1519.50"></text></g><g><title>scsi_dispatch_cmd (22,442,450 samples, 0.11%)</title><rect x="41.2081%" y="1557" width="0.1114%" height="15" fill="rgb(234,173,33)" fg:x="8302850825" fg:w="22442450"/><text x="41.4581%" y="1567.50"></text></g><g><title>ata_scsi_queuecmd (22,442,450 samples, 0.11%)</title><rect x="41.2081%" y="1541" width="0.1114%" height="15" fill="rgb(245,47,8)" fg:x="8302850825" fg:w="22442450"/><text x="41.4581%" y="1551.50"></text></g><g><title>scsi_queue_rq (26,284,538 samples, 0.13%)</title><rect x="41.2011%" y="1573" width="0.1305%" height="15" fill="rgb(205,17,20)" fg:x="8301440410" fg:w="26284538"/><text x="41.4511%" y="1583.50"></text></g><g><title>sd_init_command (2,431,673 samples, 0.01%)</title><rect x="41.3195%" y="1557" width="0.0121%" height="15" fill="rgb(232,151,16)" fg:x="8325293275" fg:w="2431673"/><text x="41.5695%" y="1567.50"></text></g><g><title>scsi_alloc_sgtables (2,431,673 samples, 0.01%)</title><rect x="41.3195%" y="1541" width="0.0121%" height="15" fill="rgb(208,30,32)" fg:x="8325293275" fg:w="2431673"/><text x="41.5695%" y="1551.50"></text></g><g><title>sg_alloc_table_chained (2,431,673 samples, 0.01%)</title><rect x="41.3195%" y="1525" width="0.0121%" height="15" fill="rgb(254,26,3)" fg:x="8325293275" fg:w="2431673"/><text x="41.5695%" y="1535.50"></text></g><g><title>blk_mq_dispatch_rq_list (27,552,883 samples, 0.14%)</title><rect x="41.1980%" y="1589" width="0.1367%" height="15" fill="rgb(240,177,30)" fg:x="8300816494" fg:w="27552883"/><text x="41.4480%" y="1599.50"></text></g><g><title>blk_finish_plug (29,772,605 samples, 0.15%)</title><rect x="41.1962%" y="1701" width="0.1478%" height="15" fill="rgb(248,76,44)" fg:x="8300454779" fg:w="29772605"/><text x="41.4462%" y="1711.50"></text></g><g><title>__blk_flush_plug (29,772,605 samples, 0.15%)</title><rect x="41.1962%" y="1685" width="0.1478%" height="15" fill="rgb(241,186,54)" fg:x="8300454779" fg:w="29772605"/><text x="41.4462%" y="1695.50"></text></g><g><title>blk_mq_flush_plug_list (29,772,605 samples, 0.15%)</title><rect x="41.1962%" y="1669" width="0.1478%" height="15" fill="rgb(249,171,29)" fg:x="8300454779" fg:w="29772605"/><text x="41.4462%" y="1679.50"></text></g><g><title>blk_mq_dispatch_plug_list (29,772,605 samples, 0.15%)</title><rect x="41.1962%" y="1653" width="0.1478%" height="15" fill="rgb(237,151,44)" fg:x="8300454779" fg:w="29772605"/><text x="41.4462%" y="1663.50"></text></g><g><title>blk_mq_run_hw_queue (29,772,605 samples, 0.15%)</title><rect x="41.1962%" y="1637" width="0.1478%" height="15" fill="rgb(228,174,30)" fg:x="8300454779" fg:w="29772605"/><text x="41.4462%" y="1647.50"></text></g><g><title>blk_mq_sched_dispatch_requests (29,410,890 samples, 0.15%)</title><rect x="41.1980%" y="1621" width="0.1460%" height="15" fill="rgb(252,14,37)" fg:x="8300816494" fg:w="29410890"/><text x="41.4480%" y="1631.50"></text></g><g><title>__blk_mq_sched_dispatch_requests (29,410,890 samples, 0.15%)</title><rect x="41.1980%" y="1605" width="0.1460%" height="15" fill="rgb(207,111,40)" fg:x="8300816494" fg:w="29410890"/><text x="41.4480%" y="1615.50"></text></g><g><title>__blk_mq_alloc_requests (3,256,533 samples, 0.02%)</title><rect x="41.3892%" y="1589" width="0.0162%" height="15" fill="rgb(248,171,54)" fg:x="8339338384" fg:w="3256533"/><text x="41.6392%" y="1599.50"></text></g><g><title>blk_mq_dispatch_rq_list (4,704,463 samples, 0.02%)</title><rect x="41.4133%" y="1493" width="0.0233%" height="15" fill="rgb(211,127,2)" fg:x="8344185915" fg:w="4704463"/><text x="41.6633%" y="1503.50"></text></g><g><title>scsi_queue_rq (4,704,463 samples, 0.02%)</title><rect x="41.4133%" y="1477" width="0.0233%" height="15" fill="rgb(236,87,47)" fg:x="8344185915" fg:w="4704463"/><text x="41.6633%" y="1487.50"></text></g><g><title>sd_init_command (2,864,126 samples, 0.01%)</title><rect x="41.4224%" y="1461" width="0.0142%" height="15" fill="rgb(223,190,45)" fg:x="8346026252" fg:w="2864126"/><text x="41.6724%" y="1471.50"></text></g><g><title>scsi_alloc_sgtables (2,864,126 samples, 0.01%)</title><rect x="41.4224%" y="1445" width="0.0142%" height="15" fill="rgb(215,5,16)" fg:x="8346026252" fg:w="2864126"/><text x="41.6724%" y="1455.50"></text></g><g><title>blk_mq_submit_bio (11,739,124 samples, 0.06%)</title><rect x="41.3819%" y="1605" width="0.0583%" height="15" fill="rgb(252,82,33)" fg:x="8337867997" fg:w="11739124"/><text x="41.6319%" y="1615.50"></text></g><g><title>blk_add_rq_to_plug (6,040,671 samples, 0.03%)</title><rect x="41.4102%" y="1589" width="0.0300%" height="15" fill="rgb(247,213,44)" fg:x="8343566450" fg:w="6040671"/><text x="41.6602%" y="1599.50"></text></g><g><title>blk_mq_flush_plug_list (6,040,671 samples, 0.03%)</title><rect x="41.4102%" y="1573" width="0.0300%" height="15" fill="rgb(205,196,44)" fg:x="8343566450" fg:w="6040671"/><text x="41.6602%" y="1583.50"></text></g><g><title>blk_mq_dispatch_plug_list (6,040,671 samples, 0.03%)</title><rect x="41.4102%" y="1557" width="0.0300%" height="15" fill="rgb(237,96,54)" fg:x="8343566450" fg:w="6040671"/><text x="41.6602%" y="1567.50"></text></g><g><title>blk_mq_run_hw_queue (6,040,671 samples, 0.03%)</title><rect x="41.4102%" y="1541" width="0.0300%" height="15" fill="rgb(230,113,34)" fg:x="8343566450" fg:w="6040671"/><text x="41.6602%" y="1551.50"></text></g><g><title>blk_mq_sched_dispatch_requests (6,040,671 samples, 0.03%)</title><rect x="41.4102%" y="1525" width="0.0300%" height="15" fill="rgb(221,224,12)" fg:x="8343566450" fg:w="6040671"/><text x="41.6602%" y="1535.50"></text></g><g><title>__blk_mq_sched_dispatch_requests (6,040,671 samples, 0.03%)</title><rect x="41.4102%" y="1509" width="0.0300%" height="15" fill="rgb(219,112,44)" fg:x="8343566450" fg:w="6040671"/><text x="41.6602%" y="1519.50"></text></g><g><title>__submit_bio (13,048,513 samples, 0.06%)</title><rect x="41.3786%" y="1621" width="0.0648%" height="15" fill="rgb(210,31,13)" fg:x="8337208771" fg:w="13048513"/><text x="41.6286%" y="1631.50"></text></g><g><title>submit_bio (14,454,882 samples, 0.07%)</title><rect x="41.3755%" y="1669" width="0.0717%" height="15" fill="rgb(230,25,16)" fg:x="8336586113" fg:w="14454882"/><text x="41.6255%" y="1679.50"></text></g><g><title>submit_bio_noacct (14,454,882 samples, 0.07%)</title><rect x="41.3755%" y="1653" width="0.0717%" height="15" fill="rgb(246,108,53)" fg:x="8336586113" fg:w="14454882"/><text x="41.6255%" y="1663.50"></text></g><g><title>submit_bio_noacct_nocheck (13,832,224 samples, 0.07%)</title><rect x="41.3786%" y="1637" width="0.0687%" height="15" fill="rgb(241,172,50)" fg:x="8337208771" fg:w="13832224"/><text x="41.6286%" y="1647.50"></text></g><g><title>ext4_mpage_readpages (23,725,086 samples, 0.12%)</title><rect x="41.3440%" y="1685" width="0.1178%" height="15" fill="rgb(235,141,10)" fg:x="8330227384" fg:w="23725086"/><text x="41.5940%" y="1695.50"></text></g><g><title>xa_load (2,911,475 samples, 0.01%)</title><rect x="41.4473%" y="1669" width="0.0145%" height="15" fill="rgb(220,174,43)" fg:x="8351040995" fg:w="2911475"/><text x="41.6973%" y="1679.50"></text></g><g><title>read_pages (54,074,120 samples, 0.27%)</title><rect x="41.1962%" y="1717" width="0.2684%" height="15" fill="rgb(215,181,40)" fg:x="8300454779" fg:w="54074120"/><text x="41.4462%" y="1727.50"></text></g><g><title>ext4_readahead (24,301,515 samples, 0.12%)</title><rect x="41.3440%" y="1701" width="0.1206%" height="15" fill="rgb(230,97,2)" fg:x="8330227384" fg:w="24301515"/><text x="41.5940%" y="1711.50"></text></g><g><title>xa_load (3,760,775 samples, 0.02%)</title><rect x="41.4646%" y="1717" width="0.0187%" height="15" fill="rgb(211,25,27)" fg:x="8354528899" fg:w="3760775"/><text x="41.7146%" y="1727.50"></text></g><g><title>xas_load (3,078,441 samples, 0.02%)</title><rect x="41.4680%" y="1701" width="0.0153%" height="15" fill="rgb(230,87,26)" fg:x="8355211233" fg:w="3078441"/><text x="41.7180%" y="1711.50"></text></g><g><title>xas_start (2,112,901 samples, 0.01%)</title><rect x="41.4728%" y="1685" width="0.0105%" height="15" fill="rgb(227,160,17)" fg:x="8356176773" fg:w="2112901"/><text x="41.7228%" y="1695.50"></text></g><g><title>do_page_cache_ra (514,645,366 samples, 2.55%)</title><rect x="38.9321%" y="1749" width="2.5543%" height="15" fill="rgb(244,85,34)" fg:x="7844274736" fg:w="514645366"/><text x="39.1821%" y="1759.50">do..</text></g><g><title>page_cache_ra_unbounded (514,645,366 samples, 2.55%)</title><rect x="38.9321%" y="1733" width="2.5543%" height="15" fill="rgb(207,70,0)" fg:x="7844274736" fg:w="514645366"/><text x="39.1821%" y="1743.50">pa..</text></g><g><title>__mod_memcg_lruvec_state (2,068,971 samples, 0.01%)</title><rect x="41.5278%" y="1477" width="0.0103%" height="15" fill="rgb(223,129,7)" fg:x="8367264575" fg:w="2068971"/><text x="41.7778%" y="1487.50"></text></g><g><title>__mod_lruvec_state (3,387,867 samples, 0.02%)</title><rect x="41.5244%" y="1493" width="0.0168%" height="15" fill="rgb(246,105,7)" fg:x="8366581975" fg:w="3387867"/><text x="41.7744%" y="1503.50"></text></g><g><title>page_cache_ext_isolate_folio (7,921,476 samples, 0.04%)</title><rect x="41.5175%" y="1509" width="0.0393%" height="15" fill="rgb(215,154,42)" fg:x="8365189228" fg:w="7921476"/><text x="41.7675%" y="1519.50"></text></g><g><title>cache_ext_ds_registry_write_lock (9,420,564 samples, 0.05%)</title><rect x="41.6266%" y="1413" width="0.0468%" height="15" fill="rgb(220,215,30)" fg:x="8387164187" fg:w="9420564"/><text x="41.8766%" y="1423.50"></text></g><g><title>_raw_write_lock (9,420,564 samples, 0.05%)</title><rect x="41.6266%" y="1397" width="0.0468%" height="15" fill="rgb(228,81,51)" fg:x="8387164187" fg:w="9420564"/><text x="41.8766%" y="1407.50"></text></g><g><title>queued_write_lock_slowpath (7,323,628 samples, 0.04%)</title><rect x="41.6370%" y="1381" width="0.0363%" height="15" fill="rgb(247,71,54)" fg:x="8389261123" fg:w="7323628"/><text x="41.8870%" y="1391.50"></text></g><g><title>cache_ext_list_node_free (6,519,505 samples, 0.03%)</title><rect x="41.6797%" y="1413" width="0.0324%" height="15" fill="rgb(234,176,34)" fg:x="8397864488" fg:w="6519505"/><text x="41.9297%" y="1423.50"></text></g><g><title>kfree (6,519,505 samples, 0.03%)</title><rect x="41.6797%" y="1397" width="0.0324%" height="15" fill="rgb(241,103,54)" fg:x="8397864488" fg:w="6519505"/><text x="41.9297%" y="1407.50"></text></g><g><title>__kmem_cache_free (3,397,115 samples, 0.02%)</title><rect x="41.6952%" y="1381" width="0.0169%" height="15" fill="rgb(228,22,34)" fg:x="8400986878" fg:w="3397115"/><text x="41.9452%" y="1391.50"></text></g><g><title>__slab_free (3,397,115 samples, 0.02%)</title><rect x="41.6952%" y="1365" width="0.0169%" height="15" fill="rgb(241,179,48)" fg:x="8400986878" fg:w="3397115"/><text x="41.9452%" y="1375.50"></text></g><g><title>valid_folios_del (23,800,880 samples, 0.12%)</title><rect x="41.6006%" y="1429" width="0.1181%" height="15" fill="rgb(235,167,37)" fg:x="8381923809" fg:w="23800880"/><text x="41.8506%" y="1439.50"></text></g><g><title>xas_init_marks (2,493,328 samples, 0.01%)</title><rect x="41.7187%" y="1429" width="0.0124%" height="15" fill="rgb(213,109,30)" fg:x="8405724689" fg:w="2493328"/><text x="41.9687%" y="1439.50"></text></g><g><title>xas_clear_mark (2,493,328 samples, 0.01%)</title><rect x="41.7187%" y="1413" width="0.0124%" height="15" fill="rgb(222,172,16)" fg:x="8405724689" fg:w="2493328"/><text x="41.9687%" y="1423.50"></text></g><g><title>__filemap_remove_folio (38,892,382 samples, 0.19%)</title><rect x="41.5863%" y="1445" width="0.1930%" height="15" fill="rgb(233,192,5)" fg:x="8379041057" fg:w="38892382"/><text x="41.8363%" y="1455.50"></text></g><g><title>xas_store (9,715,422 samples, 0.05%)</title><rect x="41.7311%" y="1429" width="0.0482%" height="15" fill="rgb(247,189,41)" fg:x="8408218017" fg:w="9715422"/><text x="41.9811%" y="1439.50"></text></g><g><title>xas_create (8,759,001 samples, 0.04%)</title><rect x="41.7358%" y="1413" width="0.0435%" height="15" fill="rgb(218,134,47)" fg:x="8409174438" fg:w="8759001"/><text x="41.9858%" y="1423.50"></text></g><g><title>_raw_spin_lock (2,805,976 samples, 0.01%)</title><rect x="41.7827%" y="1445" width="0.0139%" height="15" fill="rgb(216,29,3)" fg:x="8418618787" fg:w="2805976"/><text x="42.0327%" y="1455.50"></text></g><g><title>__remove_mapping (46,452,520 samples, 0.23%)</title><rect x="41.5798%" y="1461" width="0.2305%" height="15" fill="rgb(246,140,12)" fg:x="8377743751" fg:w="46452520"/><text x="41.8298%" y="1471.50"></text></g><g><title>workingset_eviction (2,262,043 samples, 0.01%)</title><rect x="41.7991%" y="1445" width="0.0112%" height="15" fill="rgb(230,136,11)" fg:x="8421934228" fg:w="2262043"/><text x="42.0491%" y="1455.50"></text></g><g><title>jbd2_journal_grab_journal_head (2,709,024 samples, 0.01%)</title><rect x="41.8150%" y="1413" width="0.0134%" height="15" fill="rgb(247,22,47)" fg:x="8425121061" fg:w="2709024"/><text x="42.0650%" y="1423.50"></text></g><g><title>__slab_free (4,233,692 samples, 0.02%)</title><rect x="41.8284%" y="1365" width="0.0210%" height="15" fill="rgb(218,84,22)" fg:x="8427830085" fg:w="4233692"/><text x="42.0784%" y="1375.50"></text></g><g><title>put_cpu_partial (2,867,634 samples, 0.01%)</title><rect x="41.8352%" y="1349" width="0.0142%" height="15" fill="rgb(216,87,39)" fg:x="8429196143" fg:w="2867634"/><text x="42.0852%" y="1359.50"></text></g><g><title>__unfreeze_partials (2,867,634 samples, 0.01%)</title><rect x="41.8352%" y="1333" width="0.0142%" height="15" fill="rgb(221,178,8)" fg:x="8429196143" fg:w="2867634"/><text x="42.0852%" y="1343.50"></text></g><g><title>filemap_release_folio (11,162,986 samples, 0.06%)</title><rect x="41.8119%" y="1461" width="0.0554%" height="15" fill="rgb(230,42,11)" fg:x="8424515624" fg:w="11162986"/><text x="42.0619%" y="1471.50"></text></g><g><title>ext4_release_folio (11,162,986 samples, 0.06%)</title><rect x="41.8119%" y="1445" width="0.0554%" height="15" fill="rgb(237,229,4)" fg:x="8424515624" fg:w="11162986"/><text x="42.0619%" y="1455.50"></text></g><g><title>jbd2_journal_try_to_free_buffers (10,557,549 samples, 0.05%)</title><rect x="41.8150%" y="1429" width="0.0524%" height="15" fill="rgb(222,31,33)" fg:x="8425121061" fg:w="10557549"/><text x="42.0650%" y="1439.50"></text></g><g><title>try_to_free_buffers (7,848,525 samples, 0.04%)</title><rect x="41.8284%" y="1413" width="0.0390%" height="15" fill="rgb(210,17,39)" fg:x="8427830085" fg:w="7848525"/><text x="42.0784%" y="1423.50"></text></g><g><title>free_buffer_head (7,848,525 samples, 0.04%)</title><rect x="41.8284%" y="1397" width="0.0390%" height="15" fill="rgb(244,93,20)" fg:x="8427830085" fg:w="7848525"/><text x="42.0784%" y="1407.50"></text></g><g><title>kmem_cache_free (7,848,525 samples, 0.04%)</title><rect x="41.8284%" y="1381" width="0.0390%" height="15" fill="rgb(210,40,47)" fg:x="8427830085" fg:w="7848525"/><text x="42.0784%" y="1391.50"></text></g><g><title>memcg_slab_free_hook (2,148,565 samples, 0.01%)</title><rect x="41.8567%" y="1365" width="0.0107%" height="15" fill="rgb(239,211,47)" fg:x="8433530045" fg:w="2148565"/><text x="42.1067%" y="1375.50"></text></g><g><title>free_unref_page_list (2,557,425 samples, 0.01%)</title><rect x="41.8735%" y="1461" width="0.0127%" height="15" fill="rgb(251,223,49)" fg:x="8436926352" fg:w="2557425"/><text x="42.1235%" y="1471.50"></text></g><g><title>reclaim_pages (67,663,953 samples, 0.34%)</title><rect x="41.5568%" y="1509" width="0.3358%" height="15" fill="rgb(221,149,5)" fg:x="8373110704" fg:w="67663953"/><text x="41.8068%" y="1519.50"></text></g><g><title>reclaim_folio_list (67,093,357 samples, 0.33%)</title><rect x="41.5597%" y="1493" width="0.3330%" height="15" fill="rgb(219,224,51)" fg:x="8373681300" fg:w="67093357"/><text x="41.8097%" y="1503.50"></text></g><g><title>shrink_folio_list (65,689,191 samples, 0.33%)</title><rect x="41.5666%" y="1477" width="0.3260%" height="15" fill="rgb(223,7,8)" fg:x="8375085466" fg:w="65689191"/><text x="41.8166%" y="1487.50"></text></g><g><title>page_cache_ext_isolate_and_reclaim (91,581,422 samples, 0.45%)</title><rect x="41.5175%" y="1541" width="0.4545%" height="15" fill="rgb(241,217,22)" fg:x="8365189228" fg:w="91581422"/><text x="41.7675%" y="1551.50"></text></g><g><title>__page_cache_ext_isolate_and_reclaim (91,581,422 samples, 0.45%)</title><rect x="41.5175%" y="1525" width="0.4545%" height="15" fill="rgb(248,209,0)" fg:x="8365189228" fg:w="91581422"/><text x="41.7675%" y="1535.50"></text></g><g><title>valid_folios_exists_unlocked (15,995,993 samples, 0.08%)</title><rect x="41.8926%" y="1509" width="0.0794%" height="15" fill="rgb(217,205,4)" fg:x="8440774657" fg:w="15995993"/><text x="42.1426%" y="1519.50"></text></g><g><title>__remove_mapping (2,269,284 samples, 0.01%)</title><rect x="41.9720%" y="1493" width="0.0113%" height="15" fill="rgb(228,124,39)" fg:x="8456770650" fg:w="2269284"/><text x="42.2220%" y="1503.50"></text></g><g><title>shrink_lruvec (96,100,104 samples, 0.48%)</title><rect x="41.5175%" y="1557" width="0.4770%" height="15" fill="rgb(250,116,42)" fg:x="8365189228" fg:w="96100104"/><text x="41.7675%" y="1567.50"></text></g><g><title>shrink_list (4,518,682 samples, 0.02%)</title><rect x="41.9720%" y="1541" width="0.0224%" height="15" fill="rgb(223,202,9)" fg:x="8456770650" fg:w="4518682"/><text x="42.2220%" y="1551.50"></text></g><g><title>shrink_inactive_list (4,518,682 samples, 0.02%)</title><rect x="41.9720%" y="1525" width="0.0224%" height="15" fill="rgb(242,222,40)" fg:x="8456770650" fg:w="4518682"/><text x="42.2220%" y="1535.50"></text></g><g><title>shrink_folio_list (4,518,682 samples, 0.02%)</title><rect x="41.9720%" y="1509" width="0.0224%" height="15" fill="rgb(229,99,46)" fg:x="8456770650" fg:w="4518682"/><text x="42.2220%" y="1519.50"></text></g><g><title>charge_memcg (100,561,161 samples, 0.50%)</title><rect x="41.4992%" y="1669" width="0.4991%" height="15" fill="rgb(225,56,46)" fg:x="8361496383" fg:w="100561161"/><text x="41.7492%" y="1679.50"></text></g><g><title>try_charge_memcg (99,457,779 samples, 0.49%)</title><rect x="41.5047%" y="1653" width="0.4936%" height="15" fill="rgb(227,94,5)" fg:x="8362599765" fg:w="99457779"/><text x="41.7547%" y="1663.50"></text></g><g><title>try_to_free_mem_cgroup_pages (98,613,429 samples, 0.49%)</title><rect x="41.5088%" y="1637" width="0.4894%" height="15" fill="rgb(205,112,38)" fg:x="8363444115" fg:w="98613429"/><text x="41.7588%" y="1647.50"></text></g><g><title>do_try_to_free_pages (98,613,429 samples, 0.49%)</title><rect x="41.5088%" y="1621" width="0.4894%" height="15" fill="rgb(231,133,46)" fg:x="8363444115" fg:w="98613429"/><text x="41.7588%" y="1631.50"></text></g><g><title>shrink_zones (98,613,429 samples, 0.49%)</title><rect x="41.5088%" y="1605" width="0.4894%" height="15" fill="rgb(217,16,9)" fg:x="8363444115" fg:w="98613429"/><text x="41.7588%" y="1615.50"></text></g><g><title>shrink_node (98,613,429 samples, 0.49%)</title><rect x="41.5088%" y="1589" width="0.4894%" height="15" fill="rgb(249,173,9)" fg:x="8363444115" fg:w="98613429"/><text x="41.7588%" y="1599.50"></text></g><g><title>shrink_node_memcgs (96,868,316 samples, 0.48%)</title><rect x="41.5175%" y="1573" width="0.4808%" height="15" fill="rgb(205,163,53)" fg:x="8365189228" fg:w="96868316"/><text x="41.7675%" y="1583.50"></text></g><g><title>__mem_cgroup_charge (102,224,568 samples, 0.51%)</title><rect x="41.4963%" y="1685" width="0.5074%" height="15" fill="rgb(217,54,41)" fg:x="8360918186" fg:w="102224568"/><text x="41.7463%" y="1695.50"></text></g><g><title>__mod_lruvec_page_state (5,047,489 samples, 0.03%)</title><rect x="42.0037%" y="1685" width="0.0251%" height="15" fill="rgb(228,216,12)" fg:x="8463142754" fg:w="5047489"/><text x="42.2537%" y="1695.50"></text></g><g><title>__mod_memcg_lruvec_state (5,047,489 samples, 0.03%)</title><rect x="42.0037%" y="1669" width="0.0251%" height="15" fill="rgb(244,228,15)" fg:x="8463142754" fg:w="5047489"/><text x="42.2537%" y="1679.50"></text></g><g><title>get_page_cache_ext_ops (3,559,369 samples, 0.02%)</title><rect x="42.0413%" y="1685" width="0.0177%" height="15" fill="rgb(221,176,53)" fg:x="8470721084" fg:w="3559369"/><text x="42.2913%" y="1695.50"></text></g><g><title>_raw_spin_lock (2,550,625 samples, 0.01%)</title><rect x="42.0740%" y="1669" width="0.0127%" height="15" fill="rgb(205,94,34)" fg:x="8477313245" fg:w="2550625"/><text x="42.3240%" y="1679.50"></text></g><g><title>cache_ext_list_node_alloc (12,321,107 samples, 0.06%)</title><rect x="42.0866%" y="1669" width="0.0612%" height="15" fill="rgb(213,110,48)" fg:x="8479863870" fg:w="12321107"/><text x="42.3366%" y="1679.50"></text></g><g><title>kmalloc_trace (12,321,107 samples, 0.06%)</title><rect x="42.0866%" y="1653" width="0.0612%" height="15" fill="rgb(236,142,28)" fg:x="8479863870" fg:w="12321107"/><text x="42.3366%" y="1663.50"></text></g><g><title>__kmem_cache_alloc_node (12,321,107 samples, 0.06%)</title><rect x="42.0866%" y="1637" width="0.0612%" height="15" fill="rgb(225,135,29)" fg:x="8479863870" fg:w="12321107"/><text x="42.3366%" y="1647.50"></text></g><g><title>___slab_alloc (2,885,610 samples, 0.01%)</title><rect x="42.1335%" y="1621" width="0.0143%" height="15" fill="rgb(252,45,31)" fg:x="8489299367" fg:w="2885610"/><text x="42.3835%" y="1631.50"></text></g><g><title>__kmem_cache_alloc_node (6,351,884 samples, 0.03%)</title><rect x="42.1478%" y="1653" width="0.0315%" height="15" fill="rgb(211,187,50)" fg:x="8492184977" fg:w="6351884"/><text x="42.3978%" y="1663.50"></text></g><g><title>___slab_alloc (2,980,764 samples, 0.01%)</title><rect x="42.1645%" y="1637" width="0.0148%" height="15" fill="rgb(229,109,7)" fg:x="8495556097" fg:w="2980764"/><text x="42.4145%" y="1647.50"></text></g><g><title>valid_folios_add (25,638,198 samples, 0.13%)</title><rect x="42.0589%" y="1685" width="0.1272%" height="15" fill="rgb(251,131,51)" fg:x="8474280453" fg:w="25638198"/><text x="42.3089%" y="1695.50"></text></g><g><title>kmalloc_trace (7,733,674 samples, 0.04%)</title><rect x="42.1478%" y="1669" width="0.0384%" height="15" fill="rgb(251,180,35)" fg:x="8492184977" fg:w="7733674"/><text x="42.3978%" y="1679.50"></text></g><g><title>__filemap_add_folio (144,472,269 samples, 0.72%)</title><rect x="41.4864%" y="1701" width="0.7170%" height="15" fill="rgb(211,46,32)" fg:x="8358920102" fg:w="144472269"/><text x="41.7364%" y="1711.50"></text></g><g><title>__mod_lruvec_state (2,588,799 samples, 0.01%)</title><rect x="42.2096%" y="1653" width="0.0128%" height="15" fill="rgb(248,123,17)" fg:x="8504642027" fg:w="2588799"/><text x="42.4596%" y="1663.50"></text></g><g><title>lru_add_fn (3,512,800 samples, 0.02%)</title><rect x="42.2096%" y="1669" width="0.0174%" height="15" fill="rgb(227,141,18)" fg:x="8504642027" fg:w="3512800"/><text x="42.4596%" y="1679.50"></text></g><g><title>folio_add_lru (6,130,489 samples, 0.03%)</title><rect x="42.2034%" y="1701" width="0.0304%" height="15" fill="rgb(216,102,9)" fg:x="8503392371" fg:w="6130489"/><text x="42.4534%" y="1711.50"></text></g><g><title>folio_batch_move_lru (4,998,522 samples, 0.02%)</title><rect x="42.2090%" y="1685" width="0.0248%" height="15" fill="rgb(253,47,13)" fg:x="8504524338" fg:w="4998522"/><text x="42.4590%" y="1695.50"></text></g><g><title>filemap_add_folio (151,115,312 samples, 0.75%)</title><rect x="41.4864%" y="1717" width="0.7500%" height="15" fill="rgb(226,93,23)" fg:x="8358920102" fg:w="151115312"/><text x="41.7364%" y="1727.50"></text></g><g><title>clear_page_rep (16,653,264 samples, 0.08%)</title><rect x="42.2576%" y="1637" width="0.0827%" height="15" fill="rgb(247,104,17)" fg:x="8514307920" fg:w="16653264"/><text x="42.5076%" y="1647.50"></text></g><g><title>__rmqueue_pcplist (2,861,363 samples, 0.01%)</title><rect x="42.3403%" y="1605" width="0.0142%" height="15" fill="rgb(233,203,26)" fg:x="8530961184" fg:w="2861363"/><text x="42.5903%" y="1615.50"></text></g><g><title>__alloc_pages (22,978,915 samples, 0.11%)</title><rect x="42.2422%" y="1669" width="0.1140%" height="15" fill="rgb(244,98,49)" fg:x="8511202664" fg:w="22978915"/><text x="42.4922%" y="1679.50"></text></g><g><title>get_page_from_freelist (20,923,603 samples, 0.10%)</title><rect x="42.2524%" y="1653" width="0.1038%" height="15" fill="rgb(235,134,22)" fg:x="8513257976" fg:w="20923603"/><text x="42.5024%" y="1663.50"></text></g><g><title>rmqueue (3,220,395 samples, 0.02%)</title><rect x="42.3403%" y="1637" width="0.0160%" height="15" fill="rgb(221,70,32)" fg:x="8530961184" fg:w="3220395"/><text x="42.5903%" y="1647.50"></text></g><g><title>rmqueue_pcplist (3,220,395 samples, 0.02%)</title><rect x="42.3403%" y="1621" width="0.0160%" height="15" fill="rgb(238,15,50)" fg:x="8530961184" fg:w="3220395"/><text x="42.5903%" y="1631.50"></text></g><g><title>filemap_alloc_folio (24,401,926 samples, 0.12%)</title><rect x="42.2364%" y="1717" width="0.1211%" height="15" fill="rgb(215,221,48)" fg:x="8510035414" fg:w="24401926"/><text x="42.4864%" y="1727.50"></text></g><g><title>folio_alloc (24,401,926 samples, 0.12%)</title><rect x="42.2364%" y="1701" width="0.1211%" height="15" fill="rgb(236,73,3)" fg:x="8510035414" fg:w="24401926"/><text x="42.4864%" y="1711.50"></text></g><g><title>alloc_pages (24,401,926 samples, 0.12%)</title><rect x="42.2364%" y="1685" width="0.1211%" height="15" fill="rgb(250,107,11)" fg:x="8510035414" fg:w="24401926"/><text x="42.4864%" y="1695.50"></text></g><g><title>ata_qc_issue (3,571,467 samples, 0.02%)</title><rect x="42.3654%" y="1509" width="0.0177%" height="15" fill="rgb(242,39,14)" fg:x="8536029274" fg:w="3571467"/><text x="42.6154%" y="1519.50"></text></g><g><title>dma_map_sg_attrs (2,864,894 samples, 0.01%)</title><rect x="42.3689%" y="1493" width="0.0142%" height="15" fill="rgb(248,164,37)" fg:x="8536735847" fg:w="2864894"/><text x="42.6189%" y="1503.50"></text></g><g><title>__dma_map_sg_attrs (2,864,894 samples, 0.01%)</title><rect x="42.3689%" y="1477" width="0.0142%" height="15" fill="rgb(217,60,12)" fg:x="8536735847" fg:w="2864894"/><text x="42.6189%" y="1487.50"></text></g><g><title>iommu_dma_map_sg (2,864,894 samples, 0.01%)</title><rect x="42.3689%" y="1461" width="0.0142%" height="15" fill="rgb(240,125,29)" fg:x="8536735847" fg:w="2864894"/><text x="42.6189%" y="1471.50"></text></g><g><title>__ata_scsi_queuecmd (4,259,752 samples, 0.02%)</title><rect x="42.3654%" y="1525" width="0.0211%" height="15" fill="rgb(208,207,28)" fg:x="8536029274" fg:w="4259752"/><text x="42.6154%" y="1535.50"></text></g><g><title>scsi_dispatch_cmd (5,425,621 samples, 0.03%)</title><rect x="42.3654%" y="1557" width="0.0269%" height="15" fill="rgb(209,159,27)" fg:x="8536029274" fg:w="5425621"/><text x="42.6154%" y="1567.50"></text></g><g><title>ata_scsi_queuecmd (5,425,621 samples, 0.03%)</title><rect x="42.3654%" y="1541" width="0.0269%" height="15" fill="rgb(251,176,53)" fg:x="8536029274" fg:w="5425621"/><text x="42.6154%" y="1551.50"></text></g><g><title>blk_mq_dispatch_rq_list (6,382,077 samples, 0.03%)</title><rect x="42.3626%" y="1589" width="0.0317%" height="15" fill="rgb(211,85,7)" fg:x="8535455388" fg:w="6382077"/><text x="42.6126%" y="1599.50"></text></g><g><title>scsi_queue_rq (6,382,077 samples, 0.03%)</title><rect x="42.3626%" y="1573" width="0.0317%" height="15" fill="rgb(216,64,54)" fg:x="8535455388" fg:w="6382077"/><text x="42.6126%" y="1583.50"></text></g><g><title>__blk_mq_sched_dispatch_requests (8,623,274 samples, 0.04%)</title><rect x="42.3595%" y="1605" width="0.0428%" height="15" fill="rgb(217,54,24)" fg:x="8534844248" fg:w="8623274"/><text x="42.6095%" y="1615.50"></text></g><g><title>blk_finish_plug (9,299,251 samples, 0.05%)</title><rect x="42.3575%" y="1701" width="0.0462%" height="15" fill="rgb(208,206,53)" fg:x="8534437340" fg:w="9299251"/><text x="42.6075%" y="1711.50"></text></g><g><title>__blk_flush_plug (9,299,251 samples, 0.05%)</title><rect x="42.3575%" y="1685" width="0.0462%" height="15" fill="rgb(251,74,39)" fg:x="8534437340" fg:w="9299251"/><text x="42.6075%" y="1695.50"></text></g><g><title>blk_mq_flush_plug_list (9,299,251 samples, 0.05%)</title><rect x="42.3575%" y="1669" width="0.0462%" height="15" fill="rgb(226,47,5)" fg:x="8534437340" fg:w="9299251"/><text x="42.6075%" y="1679.50"></text></g><g><title>blk_mq_dispatch_plug_list (9,299,251 samples, 0.05%)</title><rect x="42.3575%" y="1653" width="0.0462%" height="15" fill="rgb(234,111,33)" fg:x="8534437340" fg:w="9299251"/><text x="42.6075%" y="1663.50"></text></g><g><title>blk_mq_run_hw_queue (9,299,251 samples, 0.05%)</title><rect x="42.3575%" y="1637" width="0.0462%" height="15" fill="rgb(251,14,10)" fg:x="8534437340" fg:w="9299251"/><text x="42.6075%" y="1647.50"></text></g><g><title>blk_mq_sched_dispatch_requests (8,892,343 samples, 0.04%)</title><rect x="42.3595%" y="1621" width="0.0441%" height="15" fill="rgb(232,43,0)" fg:x="8534844248" fg:w="8892343"/><text x="42.6095%" y="1631.50"></text></g><g><title>amd_iommu_map_pages (3,376,207 samples, 0.02%)</title><rect x="42.4492%" y="1301" width="0.0168%" height="15" fill="rgb(222,68,43)" fg:x="8552905166" fg:w="3376207"/><text x="42.6992%" y="1311.50"></text></g><g><title>iommu_v1_map_pages (3,376,207 samples, 0.02%)</title><rect x="42.4492%" y="1285" width="0.0168%" height="15" fill="rgb(217,24,23)" fg:x="8552905166" fg:w="3376207"/><text x="42.6992%" y="1295.50"></text></g><g><title>scsi_dispatch_cmd (6,056,119 samples, 0.03%)</title><rect x="42.4397%" y="1461" width="0.0301%" height="15" fill="rgb(229,209,14)" fg:x="8551006710" fg:w="6056119"/><text x="42.6897%" y="1471.50"></text></g><g><title>ata_scsi_queuecmd (6,056,119 samples, 0.03%)</title><rect x="42.4397%" y="1445" width="0.0301%" height="15" fill="rgb(250,149,48)" fg:x="8551006710" fg:w="6056119"/><text x="42.6897%" y="1455.50"></text></g><g><title>__ata_scsi_queuecmd (6,056,119 samples, 0.03%)</title><rect x="42.4397%" y="1429" width="0.0301%" height="15" fill="rgb(210,120,37)" fg:x="8551006710" fg:w="6056119"/><text x="42.6897%" y="1439.50"></text></g><g><title>ata_qc_issue (6,056,119 samples, 0.03%)</title><rect x="42.4397%" y="1413" width="0.0301%" height="15" fill="rgb(210,21,8)" fg:x="8551006710" fg:w="6056119"/><text x="42.6897%" y="1423.50"></text></g><g><title>dma_map_sg_attrs (5,499,666 samples, 0.03%)</title><rect x="42.4425%" y="1397" width="0.0273%" height="15" fill="rgb(243,145,7)" fg:x="8551563163" fg:w="5499666"/><text x="42.6925%" y="1407.50"></text></g><g><title>__dma_map_sg_attrs (5,499,666 samples, 0.03%)</title><rect x="42.4425%" y="1381" width="0.0273%" height="15" fill="rgb(238,178,32)" fg:x="8551563163" fg:w="5499666"/><text x="42.6925%" y="1391.50"></text></g><g><title>iommu_dma_map_sg (5,499,666 samples, 0.03%)</title><rect x="42.4425%" y="1365" width="0.0273%" height="15" fill="rgb(222,4,10)" fg:x="8551563163" fg:w="5499666"/><text x="42.6925%" y="1375.50"></text></g><g><title>iommu_map_sg (5,499,666 samples, 0.03%)</title><rect x="42.4425%" y="1349" width="0.0273%" height="15" fill="rgb(239,7,37)" fg:x="8551563163" fg:w="5499666"/><text x="42.6925%" y="1359.50"></text></g><g><title>__iommu_map (4,846,793 samples, 0.02%)</title><rect x="42.4457%" y="1333" width="0.0241%" height="15" fill="rgb(215,31,37)" fg:x="8552216036" fg:w="4846793"/><text x="42.6957%" y="1343.50"></text></g><g><title>__iommu_map_pages (4,157,663 samples, 0.02%)</title><rect x="42.4492%" y="1317" width="0.0206%" height="15" fill="rgb(224,83,33)" fg:x="8552905166" fg:w="4157663"/><text x="42.6992%" y="1327.50"></text></g><g><title>blk_add_rq_to_plug (6,816,826 samples, 0.03%)</title><rect x="42.4397%" y="1589" width="0.0338%" height="15" fill="rgb(239,55,3)" fg:x="8551006710" fg:w="6816826"/><text x="42.6897%" y="1599.50"></text></g><g><title>blk_mq_flush_plug_list (6,816,826 samples, 0.03%)</title><rect x="42.4397%" y="1573" width="0.0338%" height="15" fill="rgb(247,92,11)" fg:x="8551006710" fg:w="6816826"/><text x="42.6897%" y="1583.50"></text></g><g><title>blk_mq_dispatch_plug_list (6,816,826 samples, 0.03%)</title><rect x="42.4397%" y="1557" width="0.0338%" height="15" fill="rgb(239,200,7)" fg:x="8551006710" fg:w="6816826"/><text x="42.6897%" y="1567.50"></text></g><g><title>blk_mq_run_hw_queue (6,816,826 samples, 0.03%)</title><rect x="42.4397%" y="1541" width="0.0338%" height="15" fill="rgb(227,115,8)" fg:x="8551006710" fg:w="6816826"/><text x="42.6897%" y="1551.50"></text></g><g><title>blk_mq_sched_dispatch_requests (6,816,826 samples, 0.03%)</title><rect x="42.4397%" y="1525" width="0.0338%" height="15" fill="rgb(215,189,27)" fg:x="8551006710" fg:w="6816826"/><text x="42.6897%" y="1535.50"></text></g><g><title>__blk_mq_sched_dispatch_requests (6,816,826 samples, 0.03%)</title><rect x="42.4397%" y="1509" width="0.0338%" height="15" fill="rgb(251,216,39)" fg:x="8551006710" fg:w="6816826"/><text x="42.6897%" y="1519.50"></text></g><g><title>blk_mq_dispatch_rq_list (6,816,826 samples, 0.03%)</title><rect x="42.4397%" y="1493" width="0.0338%" height="15" fill="rgb(207,29,47)" fg:x="8551006710" fg:w="6816826"/><text x="42.6897%" y="1503.50"></text></g><g><title>scsi_queue_rq (6,816,826 samples, 0.03%)</title><rect x="42.4397%" y="1477" width="0.0338%" height="15" fill="rgb(210,71,34)" fg:x="8551006710" fg:w="6816826"/><text x="42.6897%" y="1487.50"></text></g><g><title>submit_bio (10,269,142 samples, 0.05%)</title><rect x="42.4246%" y="1669" width="0.0510%" height="15" fill="rgb(253,217,51)" fg:x="8547948531" fg:w="10269142"/><text x="42.6746%" y="1679.50"></text></g><g><title>submit_bio_noacct (10,269,142 samples, 0.05%)</title><rect x="42.4246%" y="1653" width="0.0510%" height="15" fill="rgb(222,117,46)" fg:x="8547948531" fg:w="10269142"/><text x="42.6746%" y="1663.50"></text></g><g><title>submit_bio_noacct_nocheck (9,910,110 samples, 0.05%)</title><rect x="42.4263%" y="1637" width="0.0492%" height="15" fill="rgb(226,132,6)" fg:x="8548307563" fg:w="9910110"/><text x="42.6763%" y="1647.50"></text></g><g><title>__submit_bio (9,910,110 samples, 0.05%)</title><rect x="42.4263%" y="1621" width="0.0492%" height="15" fill="rgb(254,145,51)" fg:x="8548307563" fg:w="9910110"/><text x="42.6763%" y="1631.50"></text></g><g><title>blk_mq_submit_bio (9,296,668 samples, 0.05%)</title><rect x="42.4294%" y="1605" width="0.0461%" height="15" fill="rgb(231,199,27)" fg:x="8548921005" fg:w="9296668"/><text x="42.6794%" y="1615.50"></text></g><g><title>read_pages (24,389,412 samples, 0.12%)</title><rect x="42.3575%" y="1717" width="0.1210%" height="15" fill="rgb(245,158,14)" fg:x="8534437340" fg:w="24389412"/><text x="42.6075%" y="1727.50"></text></g><g><title>ext4_readahead (15,090,161 samples, 0.07%)</title><rect x="42.4037%" y="1701" width="0.0749%" height="15" fill="rgb(240,113,14)" fg:x="8543736591" fg:w="15090161"/><text x="42.6537%" y="1711.50"></text></g><g><title>ext4_mpage_readpages (15,090,161 samples, 0.07%)</title><rect x="42.4037%" y="1685" width="0.0749%" height="15" fill="rgb(210,20,13)" fg:x="8543736591" fg:w="15090161"/><text x="42.6537%" y="1695.50"></text></g><g><title>page_cache_ra_order (201,266,779 samples, 1.00%)</title><rect x="41.4864%" y="1749" width="0.9989%" height="15" fill="rgb(241,144,13)" fg:x="8358920102" fg:w="201266779"/><text x="41.7364%" y="1759.50"></text></g><g><title>page_cache_ra_unbounded (201,266,779 samples, 1.00%)</title><rect x="41.4864%" y="1733" width="0.9989%" height="15" fill="rgb(235,43,34)" fg:x="8358920102" fg:w="201266779"/><text x="41.7364%" y="1743.50"></text></g><g><title>filemap_get_pages (1,067,411,364 samples, 5.30%)</title><rect x="37.1914%" y="1797" width="5.2977%" height="15" fill="rgb(208,36,20)" fg:x="7493536733" fg:w="1067411364"/><text x="37.4414%" y="1807.50">filema..</text></g><g><title>page_cache_sync_ra (717,363,854 samples, 3.56%)</title><rect x="38.9287%" y="1781" width="3.5604%" height="15" fill="rgb(239,204,10)" fg:x="7843584243" fg:w="717363854"/><text x="39.1787%" y="1791.50">page..</text></g><g><title>ondemand_readahead (716,673,361 samples, 3.56%)</title><rect x="38.9321%" y="1765" width="3.5569%" height="15" fill="rgb(217,84,43)" fg:x="7844274736" fg:w="716673361"/><text x="39.1821%" y="1775.50">onde..</text></g><g><title>__mod_lruvec_state (2,783,787 samples, 0.01%)</title><rect x="42.5234%" y="1733" width="0.0138%" height="15" fill="rgb(241,170,50)" fg:x="8567856531" fg:w="2783787"/><text x="42.7734%" y="1743.50"></text></g><g><title>__mod_memcg_lruvec_state (2,783,787 samples, 0.01%)</title><rect x="42.5234%" y="1717" width="0.0138%" height="15" fill="rgb(226,205,29)" fg:x="8567856531" fg:w="2783787"/><text x="42.7734%" y="1727.50"></text></g><g><title>folio_activate_fn (6,703,330 samples, 0.03%)</title><rect x="42.5093%" y="1749" width="0.0333%" height="15" fill="rgb(233,113,1)" fg:x="8565031187" fg:w="6703330"/><text x="42.7593%" y="1759.50"></text></g><g><title>folio_activate (8,224,539 samples, 0.04%)</title><rect x="42.5073%" y="1781" width="0.0408%" height="15" fill="rgb(253,98,13)" fg:x="8564610368" fg:w="8224539"/><text x="42.7573%" y="1791.50"></text></g><g><title>folio_batch_move_lru (7,803,720 samples, 0.04%)</title><rect x="42.5093%" y="1765" width="0.0387%" height="15" fill="rgb(211,115,12)" fg:x="8565031187" fg:w="7803720"/><text x="42.7593%" y="1775.50"></text></g><g><title>_raw_read_lock (6,264,596 samples, 0.03%)</title><rect x="42.5698%" y="1765" width="0.0311%" height="15" fill="rgb(208,12,16)" fg:x="8577220650" fg:w="6264596"/><text x="42.8198%" y="1775.50"></text></g><g><title>get_page_cache_ext_ops (13,300,030 samples, 0.07%)</title><rect x="42.5481%" y="1781" width="0.0660%" height="15" fill="rgb(237,193,54)" fg:x="8572834907" fg:w="13300030"/><text x="42.7981%" y="1791.50"></text></g><g><title>_raw_read_unlock (2,649,691 samples, 0.01%)</title><rect x="42.6009%" y="1765" width="0.0132%" height="15" fill="rgb(243,22,42)" fg:x="8583485246" fg:w="2649691"/><text x="42.8509%" y="1775.50"></text></g><g><title>folio_mark_accessed (27,734,895 samples, 0.14%)</title><rect x="42.4891%" y="1797" width="0.1377%" height="15" fill="rgb(233,151,36)" fg:x="8560948097" fg:w="27734895"/><text x="42.7391%" y="1807.50"></text></g><g><title>workingset_activation (2,548,055 samples, 0.01%)</title><rect x="42.6141%" y="1781" width="0.0126%" height="15" fill="rgb(237,57,45)" fg:x="8586134937" fg:w="2548055"/><text x="42.8641%" y="1791.50"></text></g><g><title>ext4_file_read_iter (1,255,566,125 samples, 6.23%)</title><rect x="36.3984%" y="1845" width="6.2315%" height="15" fill="rgb(221,88,17)" fg:x="7333759034" fg:w="1255566125"/><text x="36.6484%" y="1855.50">ext4_fil..</text></g><g><title>generic_file_read_iter (1,255,566,125 samples, 6.23%)</title><rect x="36.3984%" y="1829" width="6.2315%" height="15" fill="rgb(230,79,15)" fg:x="7333759034" fg:w="1255566125"/><text x="36.6484%" y="1839.50">generic_..</text></g><g><title>filemap_read (1,255,073,846 samples, 6.23%)</title><rect x="36.4008%" y="1813" width="6.2291%" height="15" fill="rgb(213,57,13)" fg:x="7334251313" fg:w="1255073846"/><text x="36.6508%" y="1823.50">filemap_..</text></g><g><title>__x64_sys_pread64 (1,260,020,288 samples, 6.25%)</title><rect x="36.3780%" y="1877" width="6.2536%" height="15" fill="rgb(222,116,39)" fg:x="7329657672" fg:w="1260020288"/><text x="36.6280%" y="1887.50">__x64_sy..</text></g><g><title>vfs_read (1,256,839,608 samples, 6.24%)</title><rect x="36.3938%" y="1861" width="6.2379%" height="15" fill="rgb(245,107,2)" fg:x="7332838352" fg:w="1256839608"/><text x="36.6438%" y="1871.50">vfs_read</text></g><g><title>entry_SYSCALL_64 (1,263,696,086 samples, 6.27%)</title><rect x="36.3745%" y="1909" width="6.2719%" height="15" fill="rgb(238,1,10)" fg:x="7328940964" fg:w="1263696086"/><text x="36.6245%" y="1919.50">entry_SY..</text></g><g><title>do_syscall_64 (1,262,979,378 samples, 6.27%)</title><rect x="36.3780%" y="1893" width="6.2683%" height="15" fill="rgb(249,4,48)" fg:x="7329657672" fg:w="1262979378"/><text x="36.6280%" y="1903.50">do_sysca..</text></g><g><title>syscall_exit_to_user_mode (2,254,900 samples, 0.01%)</title><rect x="42.6352%" y="1877" width="0.0112%" height="15" fill="rgb(223,151,18)" fg:x="8590382150" fg:w="2254900"/><text x="42.8852%" y="1887.50"></text></g><g><title>__libc_pread (3,624,850,050 samples, 17.99%)</title><rect x="24.6695%" y="1925" width="17.9906%" height="15" fill="rgb(227,65,43)" fg:x="4970558520" fg:w="3624850050"/><text x="24.9195%" y="1935.50">__libc_pread</text></g><g><title>__bpf_prog_exit (3,312,917 samples, 0.02%)</title><rect x="42.6680%" y="1909" width="0.0164%" height="15" fill="rgb(218,40,45)" fg:x="8596990960" fg:w="3312917"/><text x="42.9180%" y="1919.50"></text></g><g><title>_raw_spin_lock (33,382,548 samples, 0.17%)</title><rect x="42.7454%" y="1861" width="0.1657%" height="15" fill="rgb(252,121,31)" fg:x="8612593323" fg:w="33382548"/><text x="42.9954%" y="1871.50"></text></g><g><title>_raw_write_lock (161,863,603 samples, 0.80%)</title><rect x="42.9140%" y="1861" width="0.8033%" height="15" fill="rgb(219,158,43)" fg:x="8646573036" fg:w="161863603"/><text x="43.1640%" y="1871.50"></text></g><g><title>queued_write_lock_slowpath (154,061,148 samples, 0.76%)</title><rect x="42.9528%" y="1845" width="0.7646%" height="15" fill="rgb(231,162,42)" fg:x="8654375491" fg:w="154061148"/><text x="43.2028%" y="1855.50"></text></g><g><title>native_queued_spin_lock_slowpath (71,516,986 samples, 0.35%)</title><rect x="43.3624%" y="1829" width="0.3549%" height="15" fill="rgb(217,179,25)" fg:x="8736919653" fg:w="71516986"/><text x="43.6124%" y="1839.50"></text></g><g><title>cache_ext_list_del (202,890,379 samples, 1.01%)</title><rect x="42.7336%" y="1877" width="1.0070%" height="15" fill="rgb(206,212,31)" fg:x="8610211075" fg:w="202890379"/><text x="42.9836%" y="1887.50"></text></g><g><title>valid_folios_lookup (2,063,829 samples, 0.01%)</title><rect x="43.7303%" y="1861" width="0.0102%" height="15" fill="rgb(235,144,12)" fg:x="8811037625" fg:w="2063829"/><text x="43.9803%" y="1871.50"></text></g><g><title>bpf_cache_ext_list_del (203,592,038 samples, 1.01%)</title><rect x="42.7336%" y="1893" width="1.0105%" height="15" fill="rgb(213,51,10)" fg:x="8610211075" fg:w="203592038"/><text x="42.9836%" y="1903.50"></text></g><g><title>_raw_spin_lock (2,312,766 samples, 0.01%)</title><rect x="43.8179%" y="1877" width="0.0115%" height="15" fill="rgb(231,145,14)" fg:x="8828679419" fg:w="2312766"/><text x="44.0679%" y="1887.50"></text></g><g><title>__pcpu_freelist_push (3,216,902 samples, 0.02%)</title><rect x="43.8459%" y="1861" width="0.0160%" height="15" fill="rgb(235,15,28)" fg:x="8834330789" fg:w="3216902"/><text x="44.0959%" y="1871.50"></text></g><g><title>bpf_prog_da529bdc9d890a05_sampling_folio_evicted (235,934,668 samples, 1.17%)</title><rect x="42.6985%" y="1909" width="1.1710%" height="15" fill="rgb(237,206,10)" fg:x="8603141852" fg:w="235934668"/><text x="42.9485%" y="1919.50"></text></g><g><title>htab_map_delete_elem (24,902,914 samples, 0.12%)</title><rect x="43.7459%" y="1893" width="0.1236%" height="15" fill="rgb(236,227,27)" fg:x="8814173606" fg:w="24902914"/><text x="43.9959%" y="1903.50"></text></g><g><title>free_htab_elem (5,501,422 samples, 0.03%)</title><rect x="43.8422%" y="1877" width="0.0273%" height="15" fill="rgb(246,83,35)" fg:x="8833575098" fg:w="5501422"/><text x="44.0922%" y="1887.50"></text></g><g><title>__htab_map_lookup_elem (4,282,440 samples, 0.02%)</title><rect x="43.9330%" y="1893" width="0.0213%" height="15" fill="rgb(220,136,24)" fg:x="8851874266" fg:w="4282440"/><text x="44.1830%" y="1903.50"></text></g><g><title>_raw_write_lock (2,846,510 samples, 0.01%)</title><rect x="43.9804%" y="1861" width="0.0141%" height="15" fill="rgb(217,3,25)" fg:x="8861433861" fg:w="2846510"/><text x="44.2304%" y="1871.50"></text></g><g><title>__cache_ext_list_add_impl (7,682,094 samples, 0.04%)</title><rect x="43.9590%" y="1877" width="0.0381%" height="15" fill="rgb(239,24,14)" fg:x="8857122861" fg:w="7682094"/><text x="44.2090%" y="1887.50"></text></g><g><title>_raw_read_lock (161,596,843 samples, 0.80%)</title><rect x="43.9972%" y="1877" width="0.8020%" height="15" fill="rgb(244,16,53)" fg:x="8864804955" fg:w="161596843"/><text x="44.2472%" y="1887.50"></text></g><g><title>queued_read_lock_slowpath (142,005,731 samples, 0.70%)</title><rect x="44.0944%" y="1861" width="0.7048%" height="15" fill="rgb(208,175,44)" fg:x="8884396067" fg:w="142005731"/><text x="44.3444%" y="1871.50"></text></g><g><title>native_queued_spin_lock_slowpath (61,420,173 samples, 0.30%)</title><rect x="44.4943%" y="1845" width="0.3048%" height="15" fill="rgb(252,18,48)" fg:x="8964981625" fg:w="61420173"/><text x="44.7443%" y="1855.50"></text></g><g><title>bpf_cache_ext_list_add_tail (170,096,722 samples, 0.84%)</title><rect x="43.9590%" y="1893" width="0.8442%" height="15" fill="rgb(234,199,32)" fg:x="8857122861" fg:w="170096722"/><text x="44.2090%" y="1903.50"></text></g><g><title>ktime_get_mono_fast_ns (7,285,944 samples, 0.04%)</title><rect x="44.8032%" y="1877" width="0.0362%" height="15" fill="rgb(225,77,54)" fg:x="9027219583" fg:w="7285944"/><text x="45.0532%" y="1887.50"></text></g><g><title>read_tsc (5,426,414 samples, 0.03%)</title><rect x="44.8125%" y="1861" width="0.0269%" height="15" fill="rgb(225,42,25)" fg:x="9029079113" fg:w="5426414"/><text x="45.0625%" y="1871.50"></text></g><g><title>bpf_ktime_get_ns (9,165,455 samples, 0.05%)</title><rect x="44.8032%" y="1893" width="0.0455%" height="15" fill="rgb(242,227,46)" fg:x="9027219583" fg:w="9165455"/><text x="45.0532%" y="1903.50"></text></g><g><title>_raw_spin_lock (13,777,221 samples, 0.07%)</title><rect x="44.9993%" y="1877" width="0.0684%" height="15" fill="rgb(246,197,35)" fg:x="9066716720" fg:w="13777221"/><text x="45.2493%" y="1887.50"></text></g><g><title>alloc_htab_elem (7,100,576 samples, 0.04%)</title><rect x="45.0677%" y="1877" width="0.0352%" height="15" fill="rgb(215,159,26)" fg:x="9080493941" fg:w="7100576"/><text x="45.3177%" y="1887.50"></text></g><g><title>__pcpu_freelist_pop (5,926,442 samples, 0.03%)</title><rect x="45.0735%" y="1861" width="0.0294%" height="15" fill="rgb(212,194,50)" fg:x="9081668075" fg:w="5926442"/><text x="45.3235%" y="1871.50"></text></g><g><title>bpf_prog_e5152a252114b42e_sampling_folio_added (249,825,496 samples, 1.24%)</title><rect x="43.8695%" y="1909" width="1.2399%" height="15" fill="rgb(246,132,1)" fg:x="8839076520" fg:w="249825496"/><text x="44.1195%" y="1919.50"></text></g><g><title>htab_map_update_elem (52,516,978 samples, 0.26%)</title><rect x="44.8487%" y="1893" width="0.2606%" height="15" fill="rgb(217,71,7)" fg:x="9036385038" fg:w="52516978"/><text x="45.0987%" y="1903.50"></text></g><g><title>_raw_read_lock (18,279,163 samples, 0.09%)</title><rect x="47.1849%" y="1877" width="0.0907%" height="15" fill="rgb(252,59,32)" fg:x="9507091808" fg:w="18279163"/><text x="47.4349%" y="1887.50"></text></g><g><title>queued_read_lock_slowpath (16,795,766 samples, 0.08%)</title><rect x="47.1923%" y="1861" width="0.0834%" height="15" fill="rgb(253,204,25)" fg:x="9508575205" fg:w="16795766"/><text x="47.4423%" y="1871.50"></text></g><g><title>native_queued_spin_lock_slowpath (10,555,154 samples, 0.05%)</title><rect x="47.2232%" y="1845" width="0.0524%" height="15" fill="rgb(232,21,16)" fg:x="9514815817" fg:w="10555154"/><text x="47.4732%" y="1855.50"></text></g><g><title>_raw_write_lock (103,155,106 samples, 0.51%)</title><rect x="47.2756%" y="1877" width="0.5120%" height="15" fill="rgb(248,90,29)" fg:x="9525370971" fg:w="103155106"/><text x="47.5256%" y="1887.50"></text></g><g><title>queued_write_lock_slowpath (100,426,331 samples, 0.50%)</title><rect x="47.2892%" y="1861" width="0.4984%" height="15" fill="rgb(249,223,7)" fg:x="9528099746" fg:w="100426331"/><text x="47.5392%" y="1871.50"></text></g><g><title>native_queued_spin_lock_slowpath (50,400,359 samples, 0.25%)</title><rect x="47.5375%" y="1845" width="0.2501%" height="15" fill="rgb(231,119,42)" fg:x="9578125718" fg:w="50400359"/><text x="47.7875%" y="1855.50"></text></g><g><title>asm_common_interrupt (2,841,694 samples, 0.01%)</title><rect x="47.7876%" y="1877" width="0.0141%" height="15" fill="rgb(215,41,35)" fg:x="9628526077" fg:w="2841694"/><text x="48.0376%" y="1887.50"></text></g><g><title>common_interrupt (2,841,694 samples, 0.01%)</title><rect x="47.7876%" y="1861" width="0.0141%" height="15" fill="rgb(220,44,45)" fg:x="9628526077" fg:w="2841694"/><text x="48.0376%" y="1871.50"></text></g><g><title>__sysvec_apic_timer_interrupt (2,175,123 samples, 0.01%)</title><rect x="47.8017%" y="1845" width="0.0108%" height="15" fill="rgb(253,197,36)" fg:x="9631367771" fg:w="2175123"/><text x="48.0517%" y="1855.50"></text></g><g><title>hrtimer_interrupt (2,175,123 samples, 0.01%)</title><rect x="47.8017%" y="1829" width="0.0108%" height="15" fill="rgb(245,225,54)" fg:x="9631367771" fg:w="2175123"/><text x="48.0517%" y="1839.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2,902,468 samples, 0.01%)</title><rect x="47.8017%" y="1877" width="0.0144%" height="15" fill="rgb(239,94,37)" fg:x="9631367771" fg:w="2902468"/><text x="48.0517%" y="1887.50"></text></g><g><title>sysvec_apic_timer_interrupt (2,902,468 samples, 0.01%)</title><rect x="47.8017%" y="1861" width="0.0144%" height="15" fill="rgb(242,217,10)" fg:x="9631367771" fg:w="2902468"/><text x="48.0517%" y="1871.50"></text></g><g><title>__common_interrupt (2,744,963 samples, 0.01%)</title><rect x="52.4862%" y="1813" width="0.0136%" height="15" fill="rgb(250,193,7)" fg:x="10575221410" fg:w="2744963"/><text x="52.7362%" y="1823.50"></text></g><g><title>handle_edge_irq (2,744,963 samples, 0.01%)</title><rect x="52.4862%" y="1797" width="0.0136%" height="15" fill="rgb(230,104,19)" fg:x="10575221410" fg:w="2744963"/><text x="52.7362%" y="1807.50"></text></g><g><title>handle_irq_event (2,744,963 samples, 0.01%)</title><rect x="52.4862%" y="1781" width="0.0136%" height="15" fill="rgb(230,181,4)" fg:x="10575221410" fg:w="2744963"/><text x="52.7362%" y="1791.50"></text></g><g><title>__handle_irq_event_percpu (2,744,963 samples, 0.01%)</title><rect x="52.4862%" y="1765" width="0.0136%" height="15" fill="rgb(216,219,49)" fg:x="10575221410" fg:w="2744963"/><text x="52.7362%" y="1775.50"></text></g><g><title>[tls.ko] (2,744,963 samples, 0.01%)</title><rect x="52.4862%" y="1749" width="0.0136%" height="15" fill="rgb(254,144,0)" fg:x="10575221410" fg:w="2744963"/><text x="52.7362%" y="1759.50"></text></g><g><title>[tls.ko] (2,744,963 samples, 0.01%)</title><rect x="52.4862%" y="1733" width="0.0136%" height="15" fill="rgb(205,209,38)" fg:x="10575221410" fg:w="2744963"/><text x="52.7362%" y="1743.50"></text></g><g><title>[tls.ko] (2,744,963 samples, 0.01%)</title><rect x="52.4862%" y="1717" width="0.0136%" height="15" fill="rgb(240,21,42)" fg:x="10575221410" fg:w="2744963"/><text x="52.7362%" y="1727.50"></text></g><g><title>ata_qc_complete_multiple (2,744,963 samples, 0.01%)</title><rect x="52.4862%" y="1701" width="0.0136%" height="15" fill="rgb(241,132,3)" fg:x="10575221410" fg:w="2744963"/><text x="52.7362%" y="1711.50"></text></g><g><title>ata_qc_complete (2,744,963 samples, 0.01%)</title><rect x="52.4862%" y="1685" width="0.0136%" height="15" fill="rgb(225,14,2)" fg:x="10575221410" fg:w="2744963"/><text x="52.7362%" y="1695.50"></text></g><g><title>__ata_qc_complete (2,744,963 samples, 0.01%)</title><rect x="52.4862%" y="1669" width="0.0136%" height="15" fill="rgb(210,141,35)" fg:x="10575221410" fg:w="2744963"/><text x="52.7362%" y="1679.50"></text></g><g><title>asm_common_interrupt (3,412,151 samples, 0.02%)</title><rect x="52.4862%" y="1845" width="0.0169%" height="15" fill="rgb(251,14,44)" fg:x="10575221410" fg:w="3412151"/><text x="52.7362%" y="1855.50"></text></g><g><title>common_interrupt (3,412,151 samples, 0.02%)</title><rect x="52.4862%" y="1829" width="0.0169%" height="15" fill="rgb(247,48,18)" fg:x="10575221410" fg:w="3412151"/><text x="52.7362%" y="1839.50"></text></g><g><title>bcmp (2,343,425 samples, 0.01%)</title><rect x="52.5096%" y="1845" width="0.0116%" height="15" fill="rgb(225,0,40)" fg:x="10579947482" fg:w="2343425"/><text x="52.7596%" y="1855.50"></text></g><g><title>__htab_map_lookup_elem (928,778,492 samples, 4.61%)</title><rect x="47.9822%" y="1861" width="4.6096%" height="15" fill="rgb(221,31,33)" fg:x="9667727953" fg:w="928778492"/><text x="48.2322%" y="1871.50">__hta..</text></g><g><title>htab_map_hash (14,215,538 samples, 0.07%)</title><rect x="52.5213%" y="1845" width="0.0706%" height="15" fill="rgb(237,42,40)" fg:x="10582290907" fg:w="14215538"/><text x="52.7713%" y="1855.50"></text></g><g><title>bpf_cache_ext_list_sample (1,509,008,881 samples, 7.49%)</title><rect x="45.1094%" y="1893" width="7.4894%" height="15" fill="rgb(233,51,29)" fg:x="9088902016" fg:w="1509008881"/><text x="45.3594%" y="1903.50">bpf_cache_..</text></g><g><title>bpf_prog_eade6cb1e4780183_bpf_lfu_score_fn (963,640,658 samples, 4.78%)</title><rect x="47.8161%" y="1877" width="4.7827%" height="15" fill="rgb(226,58,20)" fg:x="9634270239" fg:w="963640658"/><text x="48.0661%" y="1887.50">bpf_pr..</text></g><g><title>bpf_prog_e60b9b119b1b8022_sampling_evict_folios (1,519,674,762 samples, 7.54%)</title><rect x="45.1094%" y="1909" width="7.5423%" height="15" fill="rgb(208,98,7)" fg:x="9088902016" fg:w="1519674762"/><text x="45.3594%" y="1919.50">bpf_prog_e..</text></g><g><title>bpf_prog_eade6cb1e4780183_bpf_lfu_score_fn (10,665,881 samples, 0.05%)</title><rect x="52.5988%" y="1893" width="0.0529%" height="15" fill="rgb(228,143,44)" fg:x="10597910897" fg:w="10665881"/><text x="52.8488%" y="1903.50"></text></g><g><title>__fdget (2,655,977 samples, 0.01%)</title><rect x="52.6576%" y="1861" width="0.0132%" height="15" fill="rgb(246,55,38)" fg:x="10609759739" fg:w="2655977"/><text x="52.9076%" y="1871.50"></text></g><g><title>obj_cgroup_charge_pages (2,550,887 samples, 0.01%)</title><rect x="52.7035%" y="1717" width="0.0127%" height="15" fill="rgb(247,87,16)" fg:x="10619000027" fg:w="2550887"/><text x="52.9535%" y="1727.50"></text></g><g><title>try_charge_memcg (2,550,887 samples, 0.01%)</title><rect x="52.7035%" y="1701" width="0.0127%" height="15" fill="rgb(234,129,42)" fg:x="10619000027" fg:w="2550887"/><text x="52.9535%" y="1711.50"></text></g><g><title>__kmalloc (4,363,996 samples, 0.02%)</title><rect x="52.6999%" y="1765" width="0.0217%" height="15" fill="rgb(220,82,16)" fg:x="10618284420" fg:w="4363996"/><text x="52.9499%" y="1775.50"></text></g><g><title>__kmem_cache_alloc_node (4,363,996 samples, 0.02%)</title><rect x="52.6999%" y="1749" width="0.0217%" height="15" fill="rgb(211,88,4)" fg:x="10618284420" fg:w="4363996"/><text x="52.9499%" y="1759.50"></text></g><g><title>obj_cgroup_charge (4,030,539 samples, 0.02%)</title><rect x="52.7016%" y="1733" width="0.0200%" height="15" fill="rgb(248,151,21)" fg:x="10618617877" fg:w="4030539"/><text x="52.9516%" y="1743.50"></text></g><g><title>__wake_up (4,080,320 samples, 0.02%)</title><rect x="52.7225%" y="1749" width="0.0203%" height="15" fill="rgb(238,163,6)" fg:x="10622842709" fg:w="4080320"/><text x="52.9725%" y="1759.50"></text></g><g><title>__wake_up_common_lock (4,080,320 samples, 0.02%)</title><rect x="52.7225%" y="1733" width="0.0203%" height="15" fill="rgb(209,183,11)" fg:x="10622842709" fg:w="4080320"/><text x="52.9725%" y="1743.50"></text></g><g><title>pollwake (3,490,860 samples, 0.02%)</title><rect x="52.7255%" y="1717" width="0.0173%" height="15" fill="rgb(219,37,20)" fg:x="10623432169" fg:w="3490860"/><text x="52.9755%" y="1727.50"></text></g><g><title>default_wake_function (2,191,135 samples, 0.01%)</title><rect x="52.7319%" y="1701" width="0.0109%" height="15" fill="rgb(210,158,4)" fg:x="10624731894" fg:w="2191135"/><text x="52.9819%" y="1711.50"></text></g><g><title>try_to_wake_up (2,191,135 samples, 0.01%)</title><rect x="52.7319%" y="1685" width="0.0109%" height="15" fill="rgb(221,167,53)" fg:x="10624731894" fg:w="2191135"/><text x="52.9819%" y="1695.50"></text></g><g><title>fsnotify_insert_event (4,757,141 samples, 0.02%)</title><rect x="52.7225%" y="1765" width="0.0236%" height="15" fill="rgb(237,151,45)" fg:x="10622842709" fg:w="4757141"/><text x="52.9725%" y="1775.50"></text></g><g><title>fsnotify (13,947,469 samples, 0.07%)</title><rect x="52.6825%" y="1829" width="0.0692%" height="15" fill="rgb(231,39,3)" fg:x="10614770043" fg:w="13947469"/><text x="52.9325%" y="1839.50"></text></g><g><title>send_to_group (12,746,848 samples, 0.06%)</title><rect x="52.6884%" y="1813" width="0.0633%" height="15" fill="rgb(212,167,28)" fg:x="10615970664" fg:w="12746848"/><text x="52.9384%" y="1823.50"></text></g><g><title>fsnotify_handle_inode_event (10,720,185 samples, 0.05%)</title><rect x="52.6985%" y="1797" width="0.0532%" height="15" fill="rgb(232,178,8)" fg:x="10617997327" fg:w="10720185"/><text x="52.9485%" y="1807.50"></text></g><g><title>inotify_handle_inode_event (10,433,092 samples, 0.05%)</title><rect x="52.6999%" y="1781" width="0.0518%" height="15" fill="rgb(225,151,20)" fg:x="10618284420" fg:w="10433092"/><text x="52.9499%" y="1791.50"></text></g><g><title>__fsnotify_parent (16,220,522 samples, 0.08%)</title><rect x="52.6775%" y="1845" width="0.0805%" height="15" fill="rgb(238,3,37)" fg:x="10613771051" fg:w="16220522"/><text x="52.9275%" y="1855.50"></text></g><g><title>osq_lock (325,436,657 samples, 1.62%)</title><rect x="52.7749%" y="1781" width="1.6152%" height="15" fill="rgb(251,147,42)" fg:x="10633388998" fg:w="325436657"/><text x="53.0249%" y="1791.50"></text></g><g><title>rwsem_spin_on_owner (625,405,335 samples, 3.10%)</title><rect x="54.3913%" y="1781" width="3.1040%" height="15" fill="rgb(208,173,10)" fg:x="10959074126" fg:w="625405335"/><text x="54.6413%" y="1791.50">rws..</text></g><g><title>dequeue_task (2,751,375 samples, 0.01%)</title><rect x="57.5002%" y="1733" width="0.0137%" height="15" fill="rgb(246,225,4)" fg:x="11585467008" fg:w="2751375"/><text x="57.7502%" y="1743.50"></text></g><g><title>dequeue_task_fair (2,751,375 samples, 0.01%)</title><rect x="57.5002%" y="1717" width="0.0137%" height="15" fill="rgb(248,102,6)" fg:x="11585467008" fg:w="2751375"/><text x="57.7502%" y="1727.50"></text></g><g><title>dequeue_entity (2,257,417 samples, 0.01%)</title><rect x="57.5026%" y="1701" width="0.0112%" height="15" fill="rgb(232,6,21)" fg:x="11585960966" fg:w="2257417"/><text x="57.7526%" y="1711.50"></text></g><g><title>pick_next_task_fair (3,020,356 samples, 0.01%)</title><rect x="57.5173%" y="1717" width="0.0150%" height="15" fill="rgb(221,179,22)" fg:x="11588926047" fg:w="3020356"/><text x="57.7673%" y="1727.50"></text></g><g><title>newidle_balance (3,020,356 samples, 0.01%)</title><rect x="57.5173%" y="1701" width="0.0150%" height="15" fill="rgb(252,50,20)" fg:x="11588926047" fg:w="3020356"/><text x="57.7673%" y="1711.50"></text></g><g><title>pick_next_task (3,507,667 samples, 0.02%)</title><rect x="57.5173%" y="1733" width="0.0174%" height="15" fill="rgb(222,56,38)" fg:x="11588926047" fg:w="3507667"/><text x="57.7673%" y="1743.50"></text></g><g><title>down_write (960,599,799 samples, 4.77%)</title><rect x="52.7736%" y="1813" width="4.7676%" height="15" fill="rgb(206,193,29)" fg:x="10633123780" fg:w="960599799"/><text x="53.0236%" y="1823.50">down_w..</text></g><g><title>rwsem_down_write_slowpath (960,334,581 samples, 4.77%)</title><rect x="52.7749%" y="1797" width="4.7663%" height="15" fill="rgb(239,192,45)" fg:x="10633388998" fg:w="960334581"/><text x="53.0249%" y="1807.50">rwsem_..</text></g><g><title>schedule_preempt_disabled (9,244,118 samples, 0.05%)</title><rect x="57.4953%" y="1781" width="0.0459%" height="15" fill="rgb(254,18,36)" fg:x="11584479461" fg:w="9244118"/><text x="57.7453%" y="1791.50"></text></g><g><title>schedule (9,244,118 samples, 0.05%)</title><rect x="57.4953%" y="1765" width="0.0459%" height="15" fill="rgb(221,127,11)" fg:x="11584479461" fg:w="9244118"/><text x="57.7453%" y="1775.50"></text></g><g><title>__sched_text_start (9,244,118 samples, 0.05%)</title><rect x="57.4953%" y="1749" width="0.0459%" height="15" fill="rgb(234,146,35)" fg:x="11584479461" fg:w="9244118"/><text x="57.7453%" y="1759.50"></text></g><g><title>__ext4_mark_inode_dirty (5,256,486 samples, 0.03%)</title><rect x="57.5660%" y="1749" width="0.0261%" height="15" fill="rgb(254,201,37)" fg:x="11598729791" fg:w="5256486"/><text x="57.8160%" y="1759.50"></text></g><g><title>ext4_reserve_inode_write (3,468,955 samples, 0.02%)</title><rect x="57.5748%" y="1733" width="0.0172%" height="15" fill="rgb(211,202,23)" fg:x="11600517322" fg:w="3468955"/><text x="57.8248%" y="1743.50"></text></g><g><title>__mark_inode_dirty (8,849,777 samples, 0.04%)</title><rect x="57.5516%" y="1781" width="0.0439%" height="15" fill="rgb(237,91,2)" fg:x="11595823559" fg:w="8849777"/><text x="57.8016%" y="1791.50"></text></g><g><title>ext4_dirty_inode (8,849,777 samples, 0.04%)</title><rect x="57.5516%" y="1765" width="0.0439%" height="15" fill="rgb(226,228,36)" fg:x="11595823559" fg:w="8849777"/><text x="57.8016%" y="1775.50"></text></g><g><title>file_modified (10,072,397 samples, 0.05%)</title><rect x="57.5516%" y="1813" width="0.0500%" height="15" fill="rgb(213,63,50)" fg:x="11595823559" fg:w="10072397"/><text x="57.8016%" y="1823.50"></text></g><g><title>file_modified_flags (10,072,397 samples, 0.05%)</title><rect x="57.5516%" y="1797" width="0.0500%" height="15" fill="rgb(235,194,19)" fg:x="11595823559" fg:w="10072397"/><text x="57.8016%" y="1807.50"></text></g><g><title>mem_cgroup_wb_stats (8,168,588 samples, 0.04%)</title><rect x="57.6414%" y="1749" width="0.0405%" height="15" fill="rgb(207,204,18)" fg:x="11613930584" fg:w="8168588"/><text x="57.8914%" y="1759.50"></text></g><g><title>cgroup_rstat_flush (7,474,877 samples, 0.04%)</title><rect x="57.6449%" y="1733" width="0.0371%" height="15" fill="rgb(248,8,7)" fg:x="11614624295" fg:w="7474877"/><text x="57.8949%" y="1743.50"></text></g><g><title>cgroup_rstat_flush_locked (7,474,877 samples, 0.04%)</title><rect x="57.6449%" y="1717" width="0.0371%" height="15" fill="rgb(223,145,47)" fg:x="11614624295" fg:w="7474877"/><text x="57.8949%" y="1727.50"></text></g><g><title>mem_cgroup_css_rstat_flush (4,151,539 samples, 0.02%)</title><rect x="57.6614%" y="1701" width="0.0206%" height="15" fill="rgb(228,84,11)" fg:x="11617947633" fg:w="4151539"/><text x="57.9114%" y="1711.50"></text></g><g><title>balance_dirty_pages (10,661,429 samples, 0.05%)</title><rect x="57.6414%" y="1765" width="0.0529%" height="15" fill="rgb(218,76,45)" fg:x="11613930584" fg:w="10661429"/><text x="57.8914%" y="1775.50"></text></g><g><title>wb_dirty_limits (2,492,841 samples, 0.01%)</title><rect x="57.6820%" y="1749" width="0.0124%" height="15" fill="rgb(223,80,15)" fg:x="11622099172" fg:w="2492841"/><text x="57.9320%" y="1759.50"></text></g><g><title>__percpu_counter_sum (2,246,935 samples, 0.01%)</title><rect x="57.6832%" y="1733" width="0.0112%" height="15" fill="rgb(219,218,33)" fg:x="11622345078" fg:w="2246935"/><text x="57.9332%" y="1743.50"></text></g><g><title>balance_dirty_pages_ratelimited_flags (19,864,474 samples, 0.10%)</title><rect x="57.6097%" y="1781" width="0.0986%" height="15" fill="rgb(208,51,11)" fg:x="11607534544" fg:w="19864474"/><text x="57.8597%" y="1791.50"></text></g><g><title>radix_tree_lookup (2,060,411 samples, 0.01%)</title><rect x="57.6980%" y="1765" width="0.0102%" height="15" fill="rgb(229,165,39)" fg:x="11625338607" fg:w="2060411"/><text x="57.9480%" y="1775.50"></text></g><g><title>balance_dirty_pages_ratelimited (20,567,893 samples, 0.10%)</title><rect x="57.6097%" y="1797" width="0.1021%" height="15" fill="rgb(241,100,24)" fg:x="11607534544" fg:w="20567893"/><text x="57.8597%" y="1807.50"></text></g><g><title>copy_page_from_iter_atomic (10,280,006 samples, 0.05%)</title><rect x="57.7118%" y="1797" width="0.0510%" height="15" fill="rgb(228,14,23)" fg:x="11628102437" fg:w="10280006"/><text x="57.9618%" y="1807.50"></text></g><g><title>__count_memcg_events (2,850,578 samples, 0.01%)</title><rect x="57.8565%" y="1717" width="0.0141%" height="15" fill="rgb(247,116,52)" fg:x="11657270077" fg:w="2850578"/><text x="58.1065%" y="1727.50"></text></g><g><title>prepare_scan_count (5,851,155 samples, 0.03%)</title><rect x="57.9048%" y="1637" width="0.0290%" height="15" fill="rgb(216,149,33)" fg:x="11667007372" fg:w="5851155"/><text x="58.1548%" y="1647.50"></text></g><g><title>mem_cgroup_flush_stats (5,361,020 samples, 0.03%)</title><rect x="57.9073%" y="1621" width="0.0266%" height="15" fill="rgb(238,142,29)" fg:x="11667497507" fg:w="5361020"/><text x="58.1573%" y="1631.50"></text></g><g><title>cgroup_rstat_flush (5,361,020 samples, 0.03%)</title><rect x="57.9073%" y="1605" width="0.0266%" height="15" fill="rgb(224,83,40)" fg:x="11667497507" fg:w="5361020"/><text x="58.1573%" y="1615.50"></text></g><g><title>cgroup_rstat_flush_locked (5,045,855 samples, 0.03%)</title><rect x="57.9088%" y="1589" width="0.0250%" height="15" fill="rgb(234,165,11)" fg:x="11667812672" fg:w="5045855"/><text x="58.1588%" y="1599.50"></text></g><g><title>mem_cgroup_css_rstat_flush (2,482,020 samples, 0.01%)</title><rect x="57.9216%" y="1573" width="0.0123%" height="15" fill="rgb(215,96,23)" fg:x="11670376507" fg:w="2482020"/><text x="58.1716%" y="1583.50"></text></g><g><title>__mod_memcg_lruvec_state (4,212,844 samples, 0.02%)</title><rect x="57.9652%" y="1541" width="0.0209%" height="15" fill="rgb(233,179,26)" fg:x="11679169370" fg:w="4212844"/><text x="58.2152%" y="1551.50"></text></g><g><title>__mod_lruvec_state (4,894,227 samples, 0.02%)</title><rect x="57.9652%" y="1557" width="0.0243%" height="15" fill="rgb(225,129,33)" fg:x="11679169370" fg:w="4894227"/><text x="58.2152%" y="1567.50"></text></g><g><title>folio_lruvec_lock_irq (7,240,260 samples, 0.04%)</title><rect x="57.9924%" y="1557" width="0.0359%" height="15" fill="rgb(237,49,13)" fg:x="11684656584" fg:w="7240260"/><text x="58.2424%" y="1567.50"></text></g><g><title>_raw_spin_lock_irq (7,240,260 samples, 0.04%)</title><rect x="57.9924%" y="1541" width="0.0359%" height="15" fill="rgb(211,3,31)" fg:x="11684656584" fg:w="7240260"/><text x="58.2424%" y="1551.50"></text></g><g><title>native_queued_spin_lock_slowpath (3,793,382 samples, 0.02%)</title><rect x="58.0096%" y="1525" width="0.0188%" height="15" fill="rgb(216,152,19)" fg:x="11688103462" fg:w="3793382"/><text x="58.2596%" y="1535.50"></text></g><g><title>page_cache_ext_isolate_folio (19,279,864 samples, 0.10%)</title><rect x="57.9407%" y="1573" width="0.0957%" height="15" fill="rgb(251,121,35)" fg:x="11674237348" fg:w="19279864"/><text x="58.1907%" y="1583.50"></text></g><g><title>__mod_lruvec_state (2,733,761 samples, 0.01%)</title><rect x="58.0806%" y="1493" width="0.0136%" height="15" fill="rgb(210,217,47)" fg:x="11702410307" fg:w="2733761"/><text x="58.3306%" y="1503.50"></text></g><g><title>__mod_memcg_lruvec_state (2,733,761 samples, 0.01%)</title><rect x="58.0806%" y="1477" width="0.0136%" height="15" fill="rgb(244,116,22)" fg:x="11702410307" fg:w="2733761"/><text x="58.3306%" y="1487.50"></text></g><g><title>lru_add_fn (8,511,280 samples, 0.04%)</title><rect x="58.0664%" y="1509" width="0.0422%" height="15" fill="rgb(228,17,21)" fg:x="11699555581" fg:w="8511280"/><text x="58.3164%" y="1519.50"></text></g><g><title>mem_cgroup_update_lru_size (2,250,157 samples, 0.01%)</title><rect x="58.0975%" y="1493" width="0.0112%" height="15" fill="rgb(240,149,34)" fg:x="11705816704" fg:w="2250157"/><text x="58.3475%" y="1503.50"></text></g><g><title>folio_add_lru (11,100,710 samples, 0.06%)</title><rect x="58.0558%" y="1541" width="0.0551%" height="15" fill="rgb(208,125,47)" fg:x="11697430007" fg:w="11100710"/><text x="58.3058%" y="1551.50"></text></g><g><title>folio_batch_move_lru (10,365,985 samples, 0.05%)</title><rect x="58.0595%" y="1525" width="0.0514%" height="15" fill="rgb(249,186,39)" fg:x="11698164732" fg:w="10365985"/><text x="58.3095%" y="1535.50"></text></g><g><title>uncharge_batch (2,486,092 samples, 0.01%)</title><rect x="58.2375%" y="1509" width="0.0123%" height="15" fill="rgb(240,220,33)" fg:x="11734031247" fg:w="2486092"/><text x="58.4875%" y="1519.50"></text></g><g><title>__mem_cgroup_uncharge_list (6,002,857 samples, 0.03%)</title><rect x="58.2375%" y="1525" width="0.0298%" height="15" fill="rgb(243,110,23)" fg:x="11734031247" fg:w="6002857"/><text x="58.4875%" y="1535.50"></text></g><g><title>uncharge_folio (3,516,765 samples, 0.02%)</title><rect x="58.2498%" y="1509" width="0.0175%" height="15" fill="rgb(219,163,46)" fg:x="11736517339" fg:w="3516765"/><text x="58.4998%" y="1519.50"></text></g><g><title>[netfs.ko] (2,785,610 samples, 0.01%)</title><rect x="58.3185%" y="1493" width="0.0138%" height="15" fill="rgb(216,126,30)" fg:x="11750347949" fg:w="2785610"/><text x="58.5685%" y="1503.50"></text></g><g><title>filemap_unaccount_folio (3,323,773 samples, 0.02%)</title><rect x="58.3409%" y="1493" width="0.0165%" height="15" fill="rgb(208,139,11)" fg:x="11754870799" fg:w="3323773"/><text x="58.5909%" y="1503.50"></text></g><g><title>__mod_lruvec_page_state (3,323,773 samples, 0.02%)</title><rect x="58.3409%" y="1477" width="0.0165%" height="15" fill="rgb(213,118,36)" fg:x="11754870799" fg:w="3323773"/><text x="58.5909%" y="1487.50"></text></g><g><title>__mod_memcg_lruvec_state (2,593,698 samples, 0.01%)</title><rect x="58.3445%" y="1461" width="0.0129%" height="15" fill="rgb(226,43,17)" fg:x="11755600874" fg:w="2593698"/><text x="58.5945%" y="1471.50"></text></g><g><title>_raw_read_lock (4,584,295 samples, 0.02%)</title><rect x="58.3607%" y="1477" width="0.0228%" height="15" fill="rgb(254,217,4)" fg:x="11758864239" fg:w="4584295"/><text x="58.6107%" y="1487.50"></text></g><g><title>get_page_cache_ext_ops (8,433,258 samples, 0.04%)</title><rect x="58.3574%" y="1493" width="0.0419%" height="15" fill="rgb(210,134,47)" fg:x="11758194572" fg:w="8433258"/><text x="58.6074%" y="1503.50"></text></g><g><title>_raw_read_unlock (3,179,296 samples, 0.02%)</title><rect x="58.3835%" y="1477" width="0.0158%" height="15" fill="rgb(237,24,49)" fg:x="11763448534" fg:w="3179296"/><text x="58.6335%" y="1487.50"></text></g><g><title>cache_ext_ds_registry_write_lock (44,562,873 samples, 0.22%)</title><rect x="58.4522%" y="1477" width="0.2212%" height="15" fill="rgb(251,39,46)" fg:x="11777295299" fg:w="44562873"/><text x="58.7022%" y="1487.50"></text></g><g><title>_raw_write_lock (44,562,873 samples, 0.22%)</title><rect x="58.4522%" y="1461" width="0.2212%" height="15" fill="rgb(251,220,3)" fg:x="11777295299" fg:w="44562873"/><text x="58.7022%" y="1471.50"></text></g><g><title>queued_write_lock_slowpath (35,740,692 samples, 0.18%)</title><rect x="58.4960%" y="1445" width="0.1774%" height="15" fill="rgb(228,105,12)" fg:x="11786117480" fg:w="35740692"/><text x="58.7460%" y="1455.50"></text></g><g><title>native_queued_spin_lock_slowpath (9,979,329 samples, 0.05%)</title><rect x="58.6239%" y="1429" width="0.0495%" height="15" fill="rgb(215,196,1)" fg:x="11811878843" fg:w="9979329"/><text x="58.8739%" y="1439.50"></text></g><g><title>__unfreeze_partials (4,360,006 samples, 0.02%)</title><rect x="58.8016%" y="1397" width="0.0216%" height="15" fill="rgb(214,33,39)" fg:x="11847690814" fg:w="4360006"/><text x="59.0516%" y="1407.50"></text></g><g><title>_raw_spin_lock_irqsave (2,079,457 samples, 0.01%)</title><rect x="58.8129%" y="1381" width="0.0103%" height="15" fill="rgb(220,19,52)" fg:x="11849971363" fg:w="2079457"/><text x="59.0629%" y="1391.50"></text></g><g><title>__kmem_cache_free (15,873,088 samples, 0.08%)</title><rect x="58.7475%" y="1445" width="0.0788%" height="15" fill="rgb(221,78,38)" fg:x="11836793613" fg:w="15873088"/><text x="58.9975%" y="1455.50"></text></g><g><title>__slab_free (15,274,014 samples, 0.08%)</title><rect x="58.7505%" y="1429" width="0.0758%" height="15" fill="rgb(253,30,16)" fg:x="11837392687" fg:w="15274014"/><text x="59.0005%" y="1439.50"></text></g><g><title>put_cpu_partial (4,975,887 samples, 0.02%)</title><rect x="58.8016%" y="1413" width="0.0247%" height="15" fill="rgb(242,65,0)" fg:x="11847690814" fg:w="4975887"/><text x="59.0516%" y="1423.50"></text></g><g><title>cache_ext_list_node_free (30,759,379 samples, 0.15%)</title><rect x="58.6767%" y="1477" width="0.1527%" height="15" fill="rgb(235,201,12)" fg:x="11822533658" fg:w="30759379"/><text x="58.9267%" y="1487.50"></text></g><g><title>kfree (30,143,842 samples, 0.15%)</title><rect x="58.6798%" y="1461" width="0.1496%" height="15" fill="rgb(233,161,9)" fg:x="11823149195" fg:w="30143842"/><text x="58.9298%" y="1471.50"></text></g><g><title>__slab_free (2,637,335 samples, 0.01%)</title><rect x="58.8490%" y="1445" width="0.0131%" height="15" fill="rgb(241,207,41)" fg:x="11857244471" fg:w="2637335"/><text x="59.0990%" y="1455.50"></text></g><g><title>__kmem_cache_free (6,429,429 samples, 0.03%)</title><rect x="58.8366%" y="1461" width="0.0319%" height="15" fill="rgb(212,69,46)" fg:x="11854735083" fg:w="6429429"/><text x="59.0866%" y="1471.50"></text></g><g><title>valid_folios_del (95,858,256 samples, 0.48%)</title><rect x="58.3993%" y="1493" width="0.4758%" height="15" fill="rgb(239,69,45)" fg:x="11766627830" fg:w="95858256"/><text x="58.6493%" y="1503.50"></text></g><g><title>kfree (9,193,049 samples, 0.05%)</title><rect x="58.8294%" y="1477" width="0.0456%" height="15" fill="rgb(242,117,48)" fg:x="11853293037" fg:w="9193049"/><text x="59.0794%" y="1487.50"></text></g><g><title>xas_init_marks (11,080,211 samples, 0.05%)</title><rect x="58.8750%" y="1493" width="0.0550%" height="15" fill="rgb(228,41,36)" fg:x="11862486086" fg:w="11080211"/><text x="59.1250%" y="1503.50"></text></g><g><title>xas_clear_mark (10,482,433 samples, 0.05%)</title><rect x="58.8780%" y="1477" width="0.0520%" height="15" fill="rgb(212,3,32)" fg:x="11863083864" fg:w="10482433"/><text x="59.1280%" y="1487.50"></text></g><g><title>__filemap_remove_folio (171,654,563 samples, 0.85%)</title><rect x="58.2834%" y="1509" width="0.8519%" height="15" fill="rgb(233,41,49)" fg:x="11743271766" fg:w="171654563"/><text x="58.5334%" y="1519.50"></text></g><g><title>xas_store (41,360,032 samples, 0.21%)</title><rect x="58.9300%" y="1493" width="0.2053%" height="15" fill="rgb(252,170,49)" fg:x="11873566297" fg:w="41360032"/><text x="59.1800%" y="1503.50"></text></g><g><title>xas_create (38,713,545 samples, 0.19%)</title><rect x="58.9432%" y="1477" width="0.1921%" height="15" fill="rgb(229,53,26)" fg:x="11876212784" fg:w="38713545"/><text x="59.1932%" y="1487.50"></text></g><g><title>_raw_spin_lock (17,503,446 samples, 0.09%)</title><rect x="59.1353%" y="1509" width="0.0869%" height="15" fill="rgb(217,157,12)" fg:x="11914926329" fg:w="17503446"/><text x="59.3853%" y="1519.50"></text></g><g><title>native_queued_spin_lock_slowpath (12,420,265 samples, 0.06%)</title><rect x="59.1605%" y="1493" width="0.0616%" height="15" fill="rgb(227,17,9)" fg:x="11920009510" fg:w="12420265"/><text x="59.4105%" y="1503.50"></text></g><g><title>_raw_spin_lock_irq (2,155,250 samples, 0.01%)</title><rect x="59.2222%" y="1509" width="0.0107%" height="15" fill="rgb(218,84,12)" fg:x="11932429775" fg:w="2155250"/><text x="59.4722%" y="1519.50"></text></g><g><title>_raw_spin_unlock_irq (2,558,441 samples, 0.01%)</title><rect x="59.2329%" y="1509" width="0.0127%" height="15" fill="rgb(212,79,24)" fg:x="11934585025" fg:w="2558441"/><text x="59.4829%" y="1519.50"></text></g><g><title>__remove_mapping (205,205,516 samples, 1.02%)</title><rect x="58.2707%" y="1525" width="1.0185%" height="15" fill="rgb(217,222,37)" fg:x="11740717776" fg:w="205205516"/><text x="58.5207%" y="1535.50"></text></g><g><title>workingset_eviction (8,779,826 samples, 0.04%)</title><rect x="59.2456%" y="1509" width="0.0436%" height="15" fill="rgb(246,208,8)" fg:x="11937143466" fg:w="8779826"/><text x="59.4956%" y="1519.50"></text></g><g><title>jbd2_journal_grab_journal_head (14,282,045 samples, 0.07%)</title><rect x="59.3136%" y="1477" width="0.0709%" height="15" fill="rgb(244,133,10)" fg:x="11950854261" fg:w="14282045"/><text x="59.5636%" y="1487.50"></text></g><g><title>drop_buffers (2,183,246 samples, 0.01%)</title><rect x="59.3868%" y="1461" width="0.0108%" height="15" fill="rgb(209,219,41)" fg:x="11965601976" fg:w="2183246"/><text x="59.6368%" y="1471.50"></text></g><g><title>__slab_free (8,575,102 samples, 0.04%)</title><rect x="59.4010%" y="1429" width="0.0426%" height="15" fill="rgb(253,175,45)" fg:x="11968461162" fg:w="8575102"/><text x="59.6510%" y="1439.50"></text></g><g><title>cache_from_obj (7,930,863 samples, 0.04%)</title><rect x="59.4436%" y="1429" width="0.0394%" height="15" fill="rgb(235,100,37)" fg:x="11977036264" fg:w="7930863"/><text x="59.6936%" y="1439.50"></text></g><g><title>filemap_release_folio (54,921,690 samples, 0.27%)</title><rect x="59.2979%" y="1525" width="0.2726%" height="15" fill="rgb(225,87,19)" fg:x="11947681566" fg:w="54921690"/><text x="59.5479%" y="1535.50"></text></g><g><title>ext4_release_folio (54,269,079 samples, 0.27%)</title><rect x="59.3011%" y="1509" width="0.2693%" height="15" fill="rgb(217,152,17)" fg:x="11948334177" fg:w="54269079"/><text x="59.5511%" y="1519.50"></text></g><g><title>jbd2_journal_try_to_free_buffers (52,425,912 samples, 0.26%)</title><rect x="59.3103%" y="1493" width="0.2602%" height="15" fill="rgb(235,72,13)" fg:x="11950177344" fg:w="52425912"/><text x="59.5603%" y="1503.50"></text></g><g><title>try_to_free_buffers (37,466,950 samples, 0.19%)</title><rect x="59.3845%" y="1477" width="0.1860%" height="15" fill="rgb(233,140,18)" fg:x="11965136306" fg:w="37466950"/><text x="59.6345%" y="1487.50"></text></g><g><title>free_buffer_head (34,818,034 samples, 0.17%)</title><rect x="59.3976%" y="1461" width="0.1728%" height="15" fill="rgb(207,212,28)" fg:x="11967785222" fg:w="34818034"/><text x="59.6476%" y="1471.50"></text></g><g><title>kmem_cache_free (34,818,034 samples, 0.17%)</title><rect x="59.3976%" y="1445" width="0.1728%" height="15" fill="rgb(220,130,25)" fg:x="11967785222" fg:w="34818034"/><text x="59.6476%" y="1455.50"></text></g><g><title>memcg_slab_free_hook (17,636,129 samples, 0.09%)</title><rect x="59.4829%" y="1429" width="0.0875%" height="15" fill="rgb(205,55,34)" fg:x="11984967127" fg:w="17636129"/><text x="59.7329%" y="1439.50"></text></g><g><title>free_unref_page_commit (6,114,935 samples, 0.03%)</title><rect x="59.5802%" y="1509" width="0.0303%" height="15" fill="rgb(237,54,35)" fg:x="12004564087" fg:w="6114935"/><text x="59.8302%" y="1519.50"></text></g><g><title>free_pcppages_bulk (5,071,198 samples, 0.03%)</title><rect x="59.5854%" y="1493" width="0.0252%" height="15" fill="rgb(208,67,23)" fg:x="12005607824" fg:w="5071198"/><text x="59.8354%" y="1503.50"></text></g><g><title>__free_one_page (3,071,682 samples, 0.02%)</title><rect x="59.5953%" y="1477" width="0.0152%" height="15" fill="rgb(206,207,50)" fg:x="12007607340" fg:w="3071682"/><text x="59.8453%" y="1487.50"></text></g><g><title>free_unref_page_list (11,029,190 samples, 0.05%)</title><rect x="59.5739%" y="1525" width="0.0547%" height="15" fill="rgb(213,211,42)" fg:x="12003296726" fg:w="11029190"/><text x="59.8239%" y="1535.50"></text></g><g><title>free_unref_page_prepare (3,646,894 samples, 0.02%)</title><rect x="59.6105%" y="1509" width="0.0181%" height="15" fill="rgb(252,197,50)" fg:x="12010679022" fg:w="3646894"/><text x="59.8605%" y="1519.50"></text></g><g><title>reclaim_pages (321,337,867 samples, 1.59%)</title><rect x="58.0364%" y="1573" width="1.5948%" height="15" fill="rgb(251,211,41)" fg:x="11693517212" fg:w="321337867"/><text x="58.2864%" y="1583.50"></text></g><g><title>reclaim_folio_list (318,592,693 samples, 1.58%)</title><rect x="58.0500%" y="1557" width="1.5812%" height="15" fill="rgb(229,211,5)" fg:x="11696262386" fg:w="318592693"/><text x="58.3000%" y="1567.50"></text></g><g><title>shrink_folio_list (305,546,901 samples, 1.52%)</title><rect x="58.1148%" y="1541" width="1.5165%" height="15" fill="rgb(239,36,31)" fg:x="11709308178" fg:w="305546901"/><text x="58.3648%" y="1551.50"></text></g><g><title>__page_cache_ext_isolate_and_reclaim (413,741,116 samples, 2.05%)</title><rect x="57.9349%" y="1589" width="2.0535%" height="15" fill="rgb(248,67,31)" fg:x="11673057267" fg:w="413741116"/><text x="58.1849%" y="1599.50">_..</text></g><g><title>valid_folios_exists_unlocked (71,943,304 samples, 0.36%)</title><rect x="59.6313%" y="1573" width="0.3571%" height="15" fill="rgb(249,55,44)" fg:x="12014855079" fg:w="71943304"/><text x="59.8813%" y="1583.50"></text></g><g><title>page_cache_ext_isolate_and_reclaim (415,483,620 samples, 2.06%)</title><rect x="57.9349%" y="1605" width="2.0621%" height="15" fill="rgb(216,82,12)" fg:x="11673057267" fg:w="415483620"/><text x="58.1849%" y="1615.50">p..</text></g><g><title>isolate_lru_folios (2,143,432 samples, 0.01%)</title><rect x="59.9970%" y="1573" width="0.0106%" height="15" fill="rgb(242,174,1)" fg:x="12088540887" fg:w="2143432"/><text x="60.2470%" y="1583.50"></text></g><g><title>cache_ext_ds_registry_write_lock (2,264,826 samples, 0.01%)</title><rect x="60.0325%" y="1509" width="0.0112%" height="15" fill="rgb(208,120,29)" fg:x="12095696493" fg:w="2264826"/><text x="60.2825%" y="1519.50"></text></g><g><title>_raw_write_lock (2,264,826 samples, 0.01%)</title><rect x="60.0325%" y="1493" width="0.0112%" height="15" fill="rgb(221,105,43)" fg:x="12095696493" fg:w="2264826"/><text x="60.2825%" y="1503.50"></text></g><g><title>valid_folios_del (5,937,663 samples, 0.03%)</title><rect x="60.0219%" y="1525" width="0.0295%" height="15" fill="rgb(234,124,22)" fg:x="12093561595" fg:w="5937663"/><text x="60.2719%" y="1535.50"></text></g><g><title>__filemap_remove_folio (9,550,904 samples, 0.05%)</title><rect x="60.0148%" y="1541" width="0.0474%" height="15" fill="rgb(212,23,30)" fg:x="12092136629" fg:w="9550904"/><text x="60.2648%" y="1551.50"></text></g><g><title>_raw_spin_lock (3,709,582 samples, 0.02%)</title><rect x="60.0622%" y="1541" width="0.0184%" height="15" fill="rgb(219,122,53)" fg:x="12101687533" fg:w="3709582"/><text x="60.3122%" y="1551.50"></text></g><g><title>native_queued_spin_lock_slowpath (2,962,655 samples, 0.01%)</title><rect x="60.0659%" y="1525" width="0.0147%" height="15" fill="rgb(248,84,24)" fg:x="12102434460" fg:w="2962655"/><text x="60.3159%" y="1535.50"></text></g><g><title>__remove_mapping (17,664,005 samples, 0.09%)</title><rect x="60.0111%" y="1557" width="0.0877%" height="15" fill="rgb(245,115,18)" fg:x="12091385332" fg:w="17664005"/><text x="60.2611%" y="1567.50"></text></g><g><title>workingset_eviction (2,221,014 samples, 0.01%)</title><rect x="60.0877%" y="1541" width="0.0110%" height="15" fill="rgb(227,176,51)" fg:x="12106828323" fg:w="2221014"/><text x="60.3377%" y="1551.50"></text></g><g><title>filemap_release_folio (3,573,487 samples, 0.02%)</title><rect x="60.0988%" y="1557" width="0.0177%" height="15" fill="rgb(229,63,42)" fg:x="12109049337" fg:w="3573487"/><text x="60.3488%" y="1567.50"></text></g><g><title>ext4_release_folio (3,573,487 samples, 0.02%)</title><rect x="60.0988%" y="1541" width="0.0177%" height="15" fill="rgb(247,202,24)" fg:x="12109049337" fg:w="3573487"/><text x="60.3488%" y="1551.50"></text></g><g><title>jbd2_journal_try_to_free_buffers (3,573,487 samples, 0.02%)</title><rect x="60.0988%" y="1525" width="0.0177%" height="15" fill="rgb(244,173,20)" fg:x="12109049337" fg:w="3573487"/><text x="60.3488%" y="1535.50"></text></g><g><title>try_to_free_buffers (2,179,188 samples, 0.01%)</title><rect x="60.1057%" y="1509" width="0.0108%" height="15" fill="rgb(242,81,47)" fg:x="12110443636" fg:w="2179188"/><text x="60.3557%" y="1519.50"></text></g><g><title>free_buffer_head (2,179,188 samples, 0.01%)</title><rect x="60.1057%" y="1493" width="0.0108%" height="15" fill="rgb(231,185,54)" fg:x="12110443636" fg:w="2179188"/><text x="60.3557%" y="1503.50"></text></g><g><title>kmem_cache_free (2,179,188 samples, 0.01%)</title><rect x="60.1057%" y="1477" width="0.0108%" height="15" fill="rgb(243,55,32)" fg:x="12110443636" fg:w="2179188"/><text x="60.3557%" y="1487.50"></text></g><g><title>shrink_lruvec (440,468,891 samples, 2.19%)</title><rect x="57.9339%" y="1621" width="2.1861%" height="15" fill="rgb(208,167,19)" fg:x="11672858527" fg:w="440468891"/><text x="58.1839%" y="1631.50">s..</text></g><g><title>shrink_list (24,786,531 samples, 0.12%)</title><rect x="59.9970%" y="1605" width="0.1230%" height="15" fill="rgb(231,72,35)" fg:x="12088540887" fg:w="24786531"/><text x="60.2470%" y="1615.50"></text></g><g><title>shrink_inactive_list (24,786,531 samples, 0.12%)</title><rect x="59.9970%" y="1589" width="0.1230%" height="15" fill="rgb(250,173,51)" fg:x="12088540887" fg:w="24786531"/><text x="60.2470%" y="1599.50"></text></g><g><title>shrink_folio_list (22,643,099 samples, 0.11%)</title><rect x="60.0076%" y="1573" width="0.1124%" height="15" fill="rgb(209,5,22)" fg:x="12090684319" fg:w="22643099"/><text x="60.2576%" y="1583.50"></text></g><g><title>shrink_node_memcgs (447,834,344 samples, 2.22%)</title><rect x="57.9339%" y="1637" width="2.2227%" height="15" fill="rgb(250,174,19)" fg:x="11672858527" fg:w="447834344"/><text x="58.1839%" y="1647.50">s..</text></g><g><title>shrink_slab (7,365,453 samples, 0.04%)</title><rect x="60.1200%" y="1621" width="0.0366%" height="15" fill="rgb(217,3,49)" fg:x="12113327418" fg:w="7365453"/><text x="60.3700%" y="1631.50"></text></g><g><title>shrink_slab_memcg (7,365,453 samples, 0.04%)</title><rect x="60.1200%" y="1605" width="0.0366%" height="15" fill="rgb(218,225,5)" fg:x="12113327418" fg:w="7365453"/><text x="60.3700%" y="1615.50"></text></g><g><title>do_shrink_slab (7,365,453 samples, 0.04%)</title><rect x="60.1200%" y="1589" width="0.0366%" height="15" fill="rgb(236,89,11)" fg:x="12113327418" fg:w="7365453"/><text x="60.3700%" y="1599.50"></text></g><g><title>count_shadow_nodes (7,365,453 samples, 0.04%)</title><rect x="60.1200%" y="1573" width="0.0366%" height="15" fill="rgb(206,33,28)" fg:x="12113327418" fg:w="7365453"/><text x="60.3700%" y="1583.50"></text></g><g><title>mem_cgroup_flush_stats (7,365,453 samples, 0.04%)</title><rect x="60.1200%" y="1557" width="0.0366%" height="15" fill="rgb(241,56,42)" fg:x="12113327418" fg:w="7365453"/><text x="60.3700%" y="1567.50"></text></g><g><title>cgroup_rstat_flush (7,365,453 samples, 0.04%)</title><rect x="60.1200%" y="1541" width="0.0366%" height="15" fill="rgb(222,44,11)" fg:x="12113327418" fg:w="7365453"/><text x="60.3700%" y="1551.50"></text></g><g><title>cgroup_rstat_flush_locked (7,365,453 samples, 0.04%)</title><rect x="60.1200%" y="1525" width="0.0366%" height="15" fill="rgb(234,111,20)" fg:x="12113327418" fg:w="7365453"/><text x="60.3700%" y="1535.50"></text></g><g><title>mem_cgroup_css_rstat_flush (5,828,543 samples, 0.03%)</title><rect x="60.1276%" y="1509" width="0.0289%" height="15" fill="rgb(237,77,6)" fg:x="12114864328" fg:w="5828543"/><text x="60.3776%" y="1519.50"></text></g><g><title>charge_memcg (468,557,297 samples, 2.33%)</title><rect x="57.8385%" y="1733" width="2.3255%" height="15" fill="rgb(235,111,23)" fg:x="11653633174" fg:w="468557297"/><text x="58.0885%" y="1743.50">c..</text></g><g><title>try_charge_memcg (461,101,913 samples, 2.29%)</title><rect x="57.8755%" y="1717" width="2.2885%" height="15" fill="rgb(251,135,29)" fg:x="11661088558" fg:w="461101913"/><text x="58.1255%" y="1727.50">t..</text></g><g><title>try_to_free_mem_cgroup_pages (455,947,037 samples, 2.26%)</title><rect x="57.9011%" y="1701" width="2.2629%" height="15" fill="rgb(217,57,1)" fg:x="11666243434" fg:w="455947037"/><text x="58.1511%" y="1711.50">t..</text></g><g><title>do_try_to_free_pages (455,947,037 samples, 2.26%)</title><rect x="57.9011%" y="1685" width="2.2629%" height="15" fill="rgb(249,119,31)" fg:x="11666243434" fg:w="455947037"/><text x="58.1511%" y="1695.50">d..</text></g><g><title>shrink_zones (455,183,099 samples, 2.26%)</title><rect x="57.9048%" y="1669" width="2.2591%" height="15" fill="rgb(233,164,33)" fg:x="11667007372" fg:w="455183099"/><text x="58.1548%" y="1679.50">s..</text></g><g><title>shrink_node (455,183,099 samples, 2.26%)</title><rect x="57.9048%" y="1653" width="2.2591%" height="15" fill="rgb(250,217,43)" fg:x="11667007372" fg:w="455183099"/><text x="58.1548%" y="1663.50">s..</text></g><g><title>__mem_cgroup_charge (474,179,136 samples, 2.35%)</title><rect x="57.8349%" y="1749" width="2.3534%" height="15" fill="rgb(232,154,50)" fg:x="11652916330" fg:w="474179136"/><text x="58.0849%" y="1759.50">_..</text></g><g><title>get_mem_cgroup_from_mm (4,904,995 samples, 0.02%)</title><rect x="60.1640%" y="1733" width="0.0243%" height="15" fill="rgb(227,190,8)" fg:x="12122190471" fg:w="4904995"/><text x="60.4140%" y="1743.50"></text></g><g><title>__mod_memcg_lruvec_state (12,834,125 samples, 0.06%)</title><rect x="60.2018%" y="1733" width="0.0637%" height="15" fill="rgb(209,217,32)" fg:x="12129815070" fg:w="12834125"/><text x="60.4518%" y="1743.50"></text></g><g><title>__mod_lruvec_page_state (16,933,326 samples, 0.08%)</title><rect x="60.1883%" y="1749" width="0.0840%" height="15" fill="rgb(243,203,50)" fg:x="12127095466" fg:w="16933326"/><text x="60.4383%" y="1759.50"></text></g><g><title>_raw_spin_unlock_irq (2,074,239 samples, 0.01%)</title><rect x="60.2858%" y="1749" width="0.0103%" height="15" fill="rgb(232,152,27)" fg:x="12146727060" fg:w="2074239"/><text x="60.5358%" y="1759.50"></text></g><g><title>_raw_read_lock (5,238,237 samples, 0.03%)</title><rect x="60.2961%" y="1733" width="0.0260%" height="15" fill="rgb(240,34,29)" fg:x="12148801299" fg:w="5238237"/><text x="60.5461%" y="1743.50"></text></g><g><title>get_page_cache_ext_ops (7,039,611 samples, 0.03%)</title><rect x="60.2961%" y="1749" width="0.0349%" height="15" fill="rgb(215,185,52)" fg:x="12148801299" fg:w="7039611"/><text x="60.5461%" y="1759.50"></text></g><g><title>_raw_spin_lock (6,616,346 samples, 0.03%)</title><rect x="60.4671%" y="1733" width="0.0328%" height="15" fill="rgb(240,89,49)" fg:x="12183271373" fg:w="6616346"/><text x="60.7171%" y="1743.50"></text></g><g><title>cache_ext_list_node_alloc (25,467,470 samples, 0.13%)</title><rect x="60.5000%" y="1733" width="0.1264%" height="15" fill="rgb(225,12,52)" fg:x="12189887719" fg:w="25467470"/><text x="60.7500%" y="1743.50"></text></g><g><title>kmalloc_trace (24,826,119 samples, 0.12%)</title><rect x="60.5032%" y="1717" width="0.1232%" height="15" fill="rgb(239,128,45)" fg:x="12190529070" fg:w="24826119"/><text x="60.7532%" y="1727.50"></text></g><g><title>__kmem_cache_alloc_node (24,067,649 samples, 0.12%)</title><rect x="60.5069%" y="1701" width="0.1195%" height="15" fill="rgb(211,78,47)" fg:x="12191287540" fg:w="24067649"/><text x="60.7569%" y="1711.50"></text></g><g><title>___slab_alloc (6,653,238 samples, 0.03%)</title><rect x="60.5933%" y="1685" width="0.0330%" height="15" fill="rgb(232,31,21)" fg:x="12208701951" fg:w="6653238"/><text x="60.8433%" y="1695.50"></text></g><g><title>get_partial_node (3,451,704 samples, 0.02%)</title><rect x="60.6092%" y="1669" width="0.0171%" height="15" fill="rgb(222,168,14)" fg:x="12211903485" fg:w="3451704"/><text x="60.8592%" y="1679.50"></text></g><g><title>___slab_alloc (5,915,946 samples, 0.03%)</title><rect x="60.6738%" y="1701" width="0.0294%" height="15" fill="rgb(209,128,24)" fg:x="12224912171" fg:w="5915946"/><text x="60.9238%" y="1711.50"></text></g><g><title>valid_folios_add (75,495,443 samples, 0.37%)</title><rect x="60.3310%" y="1749" width="0.3747%" height="15" fill="rgb(249,35,13)" fg:x="12155840910" fg:w="75495443"/><text x="60.5810%" y="1759.50"></text></g><g><title>kmalloc_trace (15,981,164 samples, 0.08%)</title><rect x="60.6264%" y="1733" width="0.0793%" height="15" fill="rgb(218,7,2)" fg:x="12215355189" fg:w="15981164"/><text x="60.8764%" y="1743.50"></text></g><g><title>__kmem_cache_alloc_node (15,981,164 samples, 0.08%)</title><rect x="60.6264%" y="1717" width="0.0793%" height="15" fill="rgb(238,107,27)" fg:x="12215355189" fg:w="15981164"/><text x="60.8764%" y="1727.50"></text></g><g><title>workingset_update_node (2,820,797 samples, 0.01%)</title><rect x="60.7057%" y="1749" width="0.0140%" height="15" fill="rgb(217,88,38)" fg:x="12231336353" fg:w="2820797"/><text x="60.9557%" y="1759.50"></text></g><g><title>xa_get_order (3,316,684 samples, 0.02%)</title><rect x="60.7197%" y="1749" width="0.0165%" height="15" fill="rgb(230,207,0)" fg:x="12234157150" fg:w="3316684"/><text x="60.9697%" y="1759.50"></text></g><g><title>xas_load (2,448,162 samples, 0.01%)</title><rect x="60.7240%" y="1733" width="0.0122%" height="15" fill="rgb(249,64,54)" fg:x="12235025672" fg:w="2448162"/><text x="60.9740%" y="1743.50"></text></g><g><title>xas_find_conflict (5,074,364 samples, 0.03%)</title><rect x="60.7361%" y="1749" width="0.0252%" height="15" fill="rgb(231,7,11)" fg:x="12237473834" fg:w="5074364"/><text x="60.9861%" y="1759.50"></text></g><g><title>reclaim_pages (2,583,167 samples, 0.01%)</title><rect x="60.7686%" y="1525" width="0.0128%" height="15" fill="rgb(205,149,21)" fg:x="12244005260" fg:w="2583167"/><text x="61.0186%" y="1535.50"></text></g><g><title>reclaim_folio_list (2,583,167 samples, 0.01%)</title><rect x="60.7686%" y="1509" width="0.0128%" height="15" fill="rgb(215,126,34)" fg:x="12244005260" fg:w="2583167"/><text x="61.0186%" y="1519.50"></text></g><g><title>shrink_folio_list (2,583,167 samples, 0.01%)</title><rect x="60.7686%" y="1493" width="0.0128%" height="15" fill="rgb(241,132,45)" fg:x="12244005260" fg:w="2583167"/><text x="61.0186%" y="1503.50"></text></g><g><title>xas_nomem (5,446,067 samples, 0.03%)</title><rect x="60.7613%" y="1749" width="0.0270%" height="15" fill="rgb(252,69,32)" fg:x="12242548198" fg:w="5446067"/><text x="61.0113%" y="1759.50"></text></g><g><title>kmem_cache_alloc_lru (3,989,005 samples, 0.02%)</title><rect x="60.7686%" y="1733" width="0.0198%" height="15" fill="rgb(232,204,19)" fg:x="12244005260" fg:w="3989005"/><text x="61.0186%" y="1743.50"></text></g><g><title>memcg_slab_pre_alloc_hook (3,989,005 samples, 0.02%)</title><rect x="60.7686%" y="1717" width="0.0198%" height="15" fill="rgb(249,15,47)" fg:x="12244005260" fg:w="3989005"/><text x="61.0186%" y="1727.50"></text></g><g><title>obj_cgroup_charge (3,989,005 samples, 0.02%)</title><rect x="60.7686%" y="1701" width="0.0198%" height="15" fill="rgb(209,227,23)" fg:x="12244005260" fg:w="3989005"/><text x="61.0186%" y="1711.50"></text></g><g><title>obj_cgroup_charge_pages (3,989,005 samples, 0.02%)</title><rect x="60.7686%" y="1685" width="0.0198%" height="15" fill="rgb(248,92,24)" fg:x="12244005260" fg:w="3989005"/><text x="61.0186%" y="1695.50"></text></g><g><title>try_charge_memcg (3,989,005 samples, 0.02%)</title><rect x="60.7686%" y="1669" width="0.0198%" height="15" fill="rgb(247,59,2)" fg:x="12244005260" fg:w="3989005"/><text x="61.0186%" y="1679.50"></text></g><g><title>try_to_free_mem_cgroup_pages (3,989,005 samples, 0.02%)</title><rect x="60.7686%" y="1653" width="0.0198%" height="15" fill="rgb(221,30,5)" fg:x="12244005260" fg:w="3989005"/><text x="61.0186%" y="1663.50"></text></g><g><title>do_try_to_free_pages (3,989,005 samples, 0.02%)</title><rect x="60.7686%" y="1637" width="0.0198%" height="15" fill="rgb(208,108,53)" fg:x="12244005260" fg:w="3989005"/><text x="61.0186%" y="1647.50"></text></g><g><title>shrink_zones (3,989,005 samples, 0.02%)</title><rect x="60.7686%" y="1621" width="0.0198%" height="15" fill="rgb(211,183,26)" fg:x="12244005260" fg:w="3989005"/><text x="61.0186%" y="1631.50"></text></g><g><title>shrink_node (3,989,005 samples, 0.02%)</title><rect x="60.7686%" y="1605" width="0.0198%" height="15" fill="rgb(232,132,4)" fg:x="12244005260" fg:w="3989005"/><text x="61.0186%" y="1615.50"></text></g><g><title>shrink_node_memcgs (3,989,005 samples, 0.02%)</title><rect x="60.7686%" y="1589" width="0.0198%" height="15" fill="rgb(253,128,37)" fg:x="12244005260" fg:w="3989005"/><text x="61.0186%" y="1599.50"></text></g><g><title>shrink_lruvec (3,989,005 samples, 0.02%)</title><rect x="60.7686%" y="1573" width="0.0198%" height="15" fill="rgb(221,58,24)" fg:x="12244005260" fg:w="3989005"/><text x="61.0186%" y="1583.50"></text></g><g><title>page_cache_ext_isolate_and_reclaim (3,989,005 samples, 0.02%)</title><rect x="60.7686%" y="1557" width="0.0198%" height="15" fill="rgb(230,54,45)" fg:x="12244005260" fg:w="3989005"/><text x="61.0186%" y="1567.50"></text></g><g><title>__page_cache_ext_isolate_and_reclaim (3,989,005 samples, 0.02%)</title><rect x="60.7686%" y="1541" width="0.0198%" height="15" fill="rgb(254,21,18)" fg:x="12244005260" fg:w="3989005"/><text x="61.0186%" y="1551.50"></text></g><g><title>__filemap_add_folio (609,149,877 samples, 3.02%)</title><rect x="57.8080%" y="1765" width="3.0233%" height="15" fill="rgb(221,108,0)" fg:x="11647489905" fg:w="609149877"/><text x="58.0580%" y="1775.50">__f..</text></g><g><title>xas_store (8,470,761 samples, 0.04%)</title><rect x="60.7892%" y="1749" width="0.0420%" height="15" fill="rgb(206,95,1)" fg:x="12248169021" fg:w="8470761"/><text x="61.0392%" y="1759.50"></text></g><g><title>xas_create (3,134,173 samples, 0.02%)</title><rect x="60.8157%" y="1733" width="0.0156%" height="15" fill="rgb(237,52,5)" fg:x="12253505609" fg:w="3134173"/><text x="61.0657%" y="1743.50"></text></g><g><title>kmem_cache_alloc_lru (2,688,373 samples, 0.01%)</title><rect x="60.8179%" y="1717" width="0.0133%" height="15" fill="rgb(218,150,34)" fg:x="12253951409" fg:w="2688373"/><text x="61.0679%" y="1727.50"></text></g><g><title>clear_page_rep (90,711,452 samples, 0.45%)</title><rect x="60.8914%" y="1685" width="0.4502%" height="15" fill="rgb(235,194,28)" fg:x="12268754654" fg:w="90711452"/><text x="61.1414%" y="1695.50"></text></g><g><title>node_dirty_ok (5,992,564 samples, 0.03%)</title><rect x="61.3416%" y="1685" width="0.0297%" height="15" fill="rgb(245,92,18)" fg:x="12359466106" fg:w="5992564"/><text x="61.5916%" y="1695.50"></text></g><g><title>__rmqueue_pcplist (9,831,313 samples, 0.05%)</title><rect x="61.3937%" y="1653" width="0.0488%" height="15" fill="rgb(253,203,53)" fg:x="12369959989" fg:w="9831313"/><text x="61.6437%" y="1663.50"></text></g><g><title>rmqueue_bulk (2,571,519 samples, 0.01%)</title><rect x="61.4297%" y="1637" width="0.0128%" height="15" fill="rgb(249,185,47)" fg:x="12377219783" fg:w="2571519"/><text x="61.6797%" y="1647.50"></text></g><g><title>rmqueue (14,481,022 samples, 0.07%)</title><rect x="61.3766%" y="1685" width="0.0719%" height="15" fill="rgb(252,194,52)" fg:x="12366516888" fg:w="14481022"/><text x="61.6266%" y="1695.50"></text></g><g><title>rmqueue_pcplist (13,064,896 samples, 0.06%)</title><rect x="61.3836%" y="1669" width="0.0648%" height="15" fill="rgb(210,53,36)" fg:x="12367933014" fg:w="13064896"/><text x="61.6336%" y="1679.50"></text></g><g><title>get_page_from_freelist (114,571,229 samples, 0.57%)</title><rect x="60.8837%" y="1701" width="0.5686%" height="15" fill="rgb(237,37,25)" fg:x="12267193759" fg:w="114571229"/><text x="61.1337%" y="1711.50"></text></g><g><title>__alloc_pages (118,060,893 samples, 0.59%)</title><rect x="60.8692%" y="1717" width="0.5860%" height="15" fill="rgb(242,116,27)" fg:x="12264290892" fg:w="118060893"/><text x="61.1192%" y="1727.50"></text></g><g><title>filemap_alloc_folio (125,238,575 samples, 0.62%)</title><rect x="60.8438%" y="1765" width="0.6216%" height="15" fill="rgb(213,185,26)" fg:x="12259156639" fg:w="125238575"/><text x="61.0938%" y="1775.50"></text></g><g><title>folio_alloc (124,522,640 samples, 0.62%)</title><rect x="60.8473%" y="1749" width="0.6180%" height="15" fill="rgb(225,204,8)" fg:x="12259872574" fg:w="124522640"/><text x="61.0973%" y="1759.50"></text></g><g><title>alloc_pages (124,522,640 samples, 0.62%)</title><rect x="60.8473%" y="1733" width="0.6180%" height="15" fill="rgb(254,111,37)" fg:x="12259872574" fg:w="124522640"/><text x="61.0973%" y="1743.50"></text></g><g><title>filemap_get_entry (8,057,155 samples, 0.04%)</title><rect x="61.4653%" y="1765" width="0.0400%" height="15" fill="rgb(242,35,9)" fg:x="12384395214" fg:w="8057155"/><text x="61.7153%" y="1775.50"></text></g><g><title>xas_load (6,127,903 samples, 0.03%)</title><rect x="61.4749%" y="1749" width="0.0304%" height="15" fill="rgb(232,138,49)" fg:x="12386324466" fg:w="6127903"/><text x="61.7249%" y="1759.50"></text></g><g><title>__mod_memcg_lruvec_state (3,561,851 samples, 0.02%)</title><rect x="61.5371%" y="1701" width="0.0177%" height="15" fill="rgb(247,56,4)" fg:x="12398846133" fg:w="3561851"/><text x="61.7871%" y="1711.50"></text></g><g><title>__mod_lruvec_state (4,209,715 samples, 0.02%)</title><rect x="61.5371%" y="1717" width="0.0209%" height="15" fill="rgb(226,179,17)" fg:x="12398846133" fg:w="4209715"/><text x="61.7871%" y="1727.50"></text></g><g><title>lru_add_fn (8,920,147 samples, 0.04%)</title><rect x="61.5230%" y="1733" width="0.0443%" height="15" fill="rgb(216,163,45)" fg:x="12396021363" fg:w="8920147"/><text x="61.7730%" y="1743.50"></text></g><g><title>folio_batch_move_lru (14,414,823 samples, 0.07%)</title><rect x="61.5089%" y="1749" width="0.0715%" height="15" fill="rgb(211,157,3)" fg:x="12393168834" fg:w="14414823"/><text x="61.7589%" y="1759.50"></text></g><g><title>release_pages (2,642,147 samples, 0.01%)</title><rect x="61.5673%" y="1733" width="0.0131%" height="15" fill="rgb(234,44,20)" fg:x="12404941510" fg:w="2642147"/><text x="61.8173%" y="1743.50"></text></g><g><title>folio_add_lru (15,935,937 samples, 0.08%)</title><rect x="61.5053%" y="1765" width="0.0791%" height="15" fill="rgb(254,138,23)" fg:x="12392452369" fg:w="15935937"/><text x="61.7553%" y="1775.50"></text></g><g><title>__filemap_get_folio (766,446,416 samples, 3.80%)</title><rect x="57.7974%" y="1781" width="3.8040%" height="15" fill="rgb(206,119,39)" fg:x="11645365850" fg:w="766446416"/><text x="58.0474%" y="1791.50">__fi..</text></g><g><title>dequeue_task (2,052,797 samples, 0.01%)</title><rect x="61.6200%" y="1653" width="0.0102%" height="15" fill="rgb(231,105,52)" fg:x="12415561005" fg:w="2052797"/><text x="61.8700%" y="1663.50"></text></g><g><title>newidle_balance (2,260,551 samples, 0.01%)</title><rect x="61.6361%" y="1621" width="0.0112%" height="15" fill="rgb(250,20,5)" fg:x="12418801525" fg:w="2260551"/><text x="61.8861%" y="1631.50"></text></g><g><title>pick_next_task_fair (3,852,604 samples, 0.02%)</title><rect x="61.6330%" y="1637" width="0.0191%" height="15" fill="rgb(215,198,30)" fg:x="12418181521" fg:w="3852604"/><text x="61.8830%" y="1647.50"></text></g><g><title>pick_next_task (5,021,259 samples, 0.02%)</title><rect x="61.6330%" y="1653" width="0.0249%" height="15" fill="rgb(246,142,8)" fg:x="12418181521" fg:w="5021259"/><text x="61.8830%" y="1663.50"></text></g><g><title>__sched_text_start (8,363,096 samples, 0.04%)</title><rect x="61.6195%" y="1669" width="0.0415%" height="15" fill="rgb(243,26,38)" fg:x="12415464766" fg:w="8363096"/><text x="61.8695%" y="1679.50"></text></g><g><title>__wait_on_buffer (9,659,674 samples, 0.05%)</title><rect x="61.6184%" y="1765" width="0.0479%" height="15" fill="rgb(205,133,28)" fg:x="12415233219" fg:w="9659674"/><text x="61.8684%" y="1775.50"></text></g><g><title>out_of_line_wait_on_bit (9,659,674 samples, 0.05%)</title><rect x="61.6184%" y="1749" width="0.0479%" height="15" fill="rgb(212,34,0)" fg:x="12415233219" fg:w="9659674"/><text x="61.8684%" y="1759.50"></text></g><g><title>__wait_on_bit (9,659,674 samples, 0.05%)</title><rect x="61.6184%" y="1733" width="0.0479%" height="15" fill="rgb(251,226,22)" fg:x="12415233219" fg:w="9659674"/><text x="61.8684%" y="1743.50"></text></g><g><title>bit_wait_io (9,428,127 samples, 0.05%)</title><rect x="61.6195%" y="1717" width="0.0468%" height="15" fill="rgb(252,119,9)" fg:x="12415464766" fg:w="9428127"/><text x="61.8695%" y="1727.50"></text></g><g><title>io_schedule (9,428,127 samples, 0.05%)</title><rect x="61.6195%" y="1701" width="0.0468%" height="15" fill="rgb(213,150,50)" fg:x="12415464766" fg:w="9428127"/><text x="61.8695%" y="1711.50"></text></g><g><title>schedule (9,428,127 samples, 0.05%)</title><rect x="61.6195%" y="1685" width="0.0468%" height="15" fill="rgb(212,24,39)" fg:x="12415464766" fg:w="9428127"/><text x="61.8695%" y="1695.50"></text></g><g><title>___slab_alloc (30,380,737 samples, 0.15%)</title><rect x="61.8456%" y="1701" width="0.1508%" height="15" fill="rgb(213,46,39)" fg:x="12461007287" fg:w="30380737"/><text x="62.0956%" y="1711.50"></text></g><g><title>get_partial_node (14,869,133 samples, 0.07%)</title><rect x="61.9226%" y="1685" width="0.0738%" height="15" fill="rgb(239,106,12)" fg:x="12476518891" fg:w="14869133"/><text x="62.1726%" y="1695.50"></text></g><g><title>__get_obj_cgroup_from_memcg (5,649,792 samples, 0.03%)</title><rect x="62.0047%" y="1685" width="0.0280%" height="15" fill="rgb(249,229,21)" fg:x="12493064538" fg:w="5649792"/><text x="62.2547%" y="1695.50"></text></g><g><title>get_obj_cgroup_from_current (7,999,697 samples, 0.04%)</title><rect x="61.9964%" y="1701" width="0.0397%" height="15" fill="rgb(212,158,3)" fg:x="12491388024" fg:w="7999697"/><text x="62.2464%" y="1711.50"></text></g><g><title>memcg_slab_post_alloc_hook (5,280,081 samples, 0.03%)</title><rect x="62.0361%" y="1701" width="0.0262%" height="15" fill="rgb(253,26,48)" fg:x="12499387721" fg:w="5280081"/><text x="62.2861%" y="1711.50"></text></g><g><title>valid_folios_del (3,263,391 samples, 0.02%)</title><rect x="62.0905%" y="1445" width="0.0162%" height="15" fill="rgb(238,178,20)" fg:x="12510349964" fg:w="3263391"/><text x="62.3405%" y="1455.50"></text></g><g><title>__filemap_remove_folio (6,989,068 samples, 0.03%)</title><rect x="62.0905%" y="1461" width="0.0347%" height="15" fill="rgb(208,86,15)" fg:x="12510349964" fg:w="6989068"/><text x="62.3405%" y="1471.50"></text></g><g><title>xas_store (2,315,020 samples, 0.01%)</title><rect x="62.1137%" y="1445" width="0.0115%" height="15" fill="rgb(239,42,53)" fg:x="12515024012" fg:w="2315020"/><text x="62.3637%" y="1455.50"></text></g><g><title>xas_create (2,315,020 samples, 0.01%)</title><rect x="62.1137%" y="1429" width="0.0115%" height="15" fill="rgb(245,226,8)" fg:x="12515024012" fg:w="2315020"/><text x="62.3637%" y="1439.50"></text></g><g><title>__remove_mapping (7,704,624 samples, 0.04%)</title><rect x="62.0905%" y="1477" width="0.0382%" height="15" fill="rgb(216,176,32)" fg:x="12510349964" fg:w="7704624"/><text x="62.3405%" y="1487.50"></text></g><g><title>reclaim_pages (12,420,978 samples, 0.06%)</title><rect x="62.0803%" y="1525" width="0.0616%" height="15" fill="rgb(231,186,21)" fg:x="12508297408" fg:w="12420978"/><text x="62.3303%" y="1535.50"></text></g><g><title>reclaim_folio_list (12,420,978 samples, 0.06%)</title><rect x="62.0803%" y="1509" width="0.0616%" height="15" fill="rgb(205,95,49)" fg:x="12508297408" fg:w="12420978"/><text x="62.3303%" y="1519.50"></text></g><g><title>shrink_folio_list (10,946,298 samples, 0.05%)</title><rect x="62.0876%" y="1493" width="0.0543%" height="15" fill="rgb(217,145,8)" fg:x="12509772088" fg:w="10946298"/><text x="62.3376%" y="1503.50"></text></g><g><title>filemap_release_folio (2,663,798 samples, 0.01%)</title><rect x="62.1287%" y="1477" width="0.0132%" height="15" fill="rgb(239,144,48)" fg:x="12518054588" fg:w="2663798"/><text x="62.3787%" y="1487.50"></text></g><g><title>ext4_release_folio (2,663,798 samples, 0.01%)</title><rect x="62.1287%" y="1461" width="0.0132%" height="15" fill="rgb(214,189,23)" fg:x="12518054588" fg:w="2663798"/><text x="62.3787%" y="1471.50"></text></g><g><title>jbd2_journal_try_to_free_buffers (2,663,798 samples, 0.01%)</title><rect x="62.1287%" y="1445" width="0.0132%" height="15" fill="rgb(229,157,17)" fg:x="12518054588" fg:w="2663798"/><text x="62.3787%" y="1455.50"></text></g><g><title>page_cache_ext_isolate_and_reclaim (19,227,428 samples, 0.10%)</title><rect x="62.0767%" y="1557" width="0.0954%" height="15" fill="rgb(230,5,48)" fg:x="12507569955" fg:w="19227428"/><text x="62.3267%" y="1567.50"></text></g><g><title>__page_cache_ext_isolate_and_reclaim (19,227,428 samples, 0.10%)</title><rect x="62.0767%" y="1541" width="0.0954%" height="15" fill="rgb(224,156,48)" fg:x="12507569955" fg:w="19227428"/><text x="62.3267%" y="1551.50"></text></g><g><title>valid_folios_exists_unlocked (6,078,997 samples, 0.03%)</title><rect x="62.1419%" y="1525" width="0.0302%" height="15" fill="rgb(223,14,29)" fg:x="12520718386" fg:w="6078997"/><text x="62.3919%" y="1535.50"></text></g><g><title>shrink_lruvec (21,284,780 samples, 0.11%)</title><rect x="62.0767%" y="1573" width="0.1056%" height="15" fill="rgb(229,96,36)" fg:x="12507569955" fg:w="21284780"/><text x="62.3267%" y="1583.50"></text></g><g><title>shrink_list (2,057,352 samples, 0.01%)</title><rect x="62.1721%" y="1557" width="0.0102%" height="15" fill="rgb(231,102,53)" fg:x="12526797383" fg:w="2057352"/><text x="62.4221%" y="1567.50"></text></g><g><title>shrink_inactive_list (2,057,352 samples, 0.01%)</title><rect x="62.1721%" y="1541" width="0.0102%" height="15" fill="rgb(210,77,38)" fg:x="12526797383" fg:w="2057352"/><text x="62.4221%" y="1551.50"></text></g><g><title>obj_cgroup_charge_pages (22,667,409 samples, 0.11%)</title><rect x="62.0737%" y="1685" width="0.1125%" height="15" fill="rgb(235,131,6)" fg:x="12506978360" fg:w="22667409"/><text x="62.3237%" y="1695.50"></text></g><g><title>try_charge_memcg (22,667,409 samples, 0.11%)</title><rect x="62.0737%" y="1669" width="0.1125%" height="15" fill="rgb(252,55,38)" fg:x="12506978360" fg:w="22667409"/><text x="62.3237%" y="1679.50"></text></g><g><title>try_to_free_mem_cgroup_pages (22,245,548 samples, 0.11%)</title><rect x="62.0758%" y="1653" width="0.1104%" height="15" fill="rgb(246,38,14)" fg:x="12507400221" fg:w="22245548"/><text x="62.3258%" y="1663.50"></text></g><g><title>do_try_to_free_pages (22,245,548 samples, 0.11%)</title><rect x="62.0758%" y="1637" width="0.1104%" height="15" fill="rgb(242,27,5)" fg:x="12507400221" fg:w="22245548"/><text x="62.3258%" y="1647.50"></text></g><g><title>shrink_zones (22,245,548 samples, 0.11%)</title><rect x="62.0758%" y="1621" width="0.1104%" height="15" fill="rgb(228,65,35)" fg:x="12507400221" fg:w="22245548"/><text x="62.3258%" y="1631.50"></text></g><g><title>shrink_node (22,245,548 samples, 0.11%)</title><rect x="62.0758%" y="1605" width="0.1104%" height="15" fill="rgb(245,93,11)" fg:x="12507400221" fg:w="22245548"/><text x="62.3258%" y="1615.50"></text></g><g><title>shrink_node_memcgs (22,075,814 samples, 0.11%)</title><rect x="62.0767%" y="1589" width="0.1096%" height="15" fill="rgb(213,1,31)" fg:x="12507569955" fg:w="22075814"/><text x="62.3267%" y="1599.50"></text></g><g><title>kmem_cache_alloc (82,948,590 samples, 0.41%)</title><rect x="61.7761%" y="1717" width="0.4117%" height="15" fill="rgb(237,205,14)" fg:x="12447011602" fg:w="82948590"/><text x="62.0261%" y="1727.50"></text></g><g><title>obj_cgroup_charge (24,725,237 samples, 0.12%)</title><rect x="62.0651%" y="1701" width="0.1227%" height="15" fill="rgb(232,118,45)" fg:x="12505234955" fg:w="24725237"/><text x="62.3151%" y="1711.50"></text></g><g><title>obj_cgroup_charge (2,020,550 samples, 0.01%)</title><rect x="62.1973%" y="1717" width="0.0100%" height="15" fill="rgb(218,5,6)" fg:x="12531880688" fg:w="2020550"/><text x="62.4473%" y="1727.50"></text></g><g><title>folio_alloc_buffers (97,416,495 samples, 0.48%)</title><rect x="61.7495%" y="1733" width="0.4835%" height="15" fill="rgb(251,87,51)" fg:x="12441643889" fg:w="97416495"/><text x="61.9995%" y="1743.50"></text></g><g><title>recalc_bh_state (5,159,146 samples, 0.03%)</title><rect x="62.2074%" y="1717" width="0.0256%" height="15" fill="rgb(207,225,20)" fg:x="12533901238" fg:w="5159146"/><text x="62.4574%" y="1727.50"></text></g><g><title>create_empty_buffers (114,825,402 samples, 0.57%)</title><rect x="61.6663%" y="1765" width="0.5699%" height="15" fill="rgb(222,78,54)" fg:x="12424892893" fg:w="114825402"/><text x="61.9163%" y="1775.50"></text></g><g><title>folio_create_empty_buffers (114,122,774 samples, 0.57%)</title><rect x="61.6698%" y="1749" width="0.5664%" height="15" fill="rgb(232,85,16)" fg:x="12425595521" fg:w="114122774"/><text x="61.9198%" y="1759.50"></text></g><g><title>ext4_da_get_block_prep (12,876,487 samples, 0.06%)</title><rect x="62.2362%" y="1765" width="0.0639%" height="15" fill="rgb(244,25,33)" fg:x="12539718295" fg:w="12876487"/><text x="62.4862%" y="1775.50"></text></g><g><title>ext4_es_lookup_extent (5,517,744 samples, 0.03%)</title><rect x="62.2727%" y="1749" width="0.0274%" height="15" fill="rgb(233,24,36)" fg:x="12547077038" fg:w="5517744"/><text x="62.5227%" y="1759.50"></text></g><g><title>percpu_counter_add_batch (2,299,774 samples, 0.01%)</title><rect x="62.2887%" y="1733" width="0.0114%" height="15" fill="rgb(253,49,54)" fg:x="12550295008" fg:w="2299774"/><text x="62.5387%" y="1743.50"></text></g><g><title>__blk_mq_alloc_requests (2,453,489 samples, 0.01%)</title><rect x="62.3179%" y="1621" width="0.0122%" height="15" fill="rgb(245,12,22)" fg:x="12556175355" fg:w="2453489"/><text x="62.5679%" y="1631.50"></text></g><g><title>kick_pool (5,251,116 samples, 0.03%)</title><rect x="62.3484%" y="1525" width="0.0261%" height="15" fill="rgb(253,141,28)" fg:x="12562315087" fg:w="5251116"/><text x="62.5984%" y="1535.50"></text></g><g><title>wake_up_process (4,653,737 samples, 0.02%)</title><rect x="62.3513%" y="1509" width="0.0231%" height="15" fill="rgb(225,207,27)" fg:x="12562912466" fg:w="4653737"/><text x="62.6013%" y="1519.50"></text></g><g><title>try_to_wake_up (4,653,737 samples, 0.02%)</title><rect x="62.3513%" y="1493" width="0.0231%" height="15" fill="rgb(220,84,2)" fg:x="12562912466" fg:w="4653737"/><text x="62.6013%" y="1503.50"></text></g><g><title>ttwu_queue (3,980,804 samples, 0.02%)</title><rect x="62.3547%" y="1477" width="0.0198%" height="15" fill="rgb(224,37,37)" fg:x="12563585399" fg:w="3980804"/><text x="62.6047%" y="1487.50"></text></g><g><title>ttwu_do_activate (3,980,804 samples, 0.02%)</title><rect x="62.3547%" y="1461" width="0.0198%" height="15" fill="rgb(220,143,18)" fg:x="12563585399" fg:w="3980804"/><text x="62.6047%" y="1471.50"></text></g><g><title>enqueue_task (3,029,125 samples, 0.02%)</title><rect x="62.3594%" y="1445" width="0.0150%" height="15" fill="rgb(210,88,33)" fg:x="12564537078" fg:w="3029125"/><text x="62.6094%" y="1455.50"></text></g><g><title>__queue_delayed_work (6,297,630 samples, 0.03%)</title><rect x="62.3449%" y="1557" width="0.0313%" height="15" fill="rgb(219,87,51)" fg:x="12561615007" fg:w="6297630"/><text x="62.5949%" y="1567.50"></text></g><g><title>__queue_work (6,297,630 samples, 0.03%)</title><rect x="62.3449%" y="1541" width="0.0313%" height="15" fill="rgb(211,7,35)" fg:x="12561615007" fg:w="6297630"/><text x="62.5949%" y="1551.50"></text></g><g><title>blk_mq_delay_run_hw_queue (7,447,935 samples, 0.04%)</title><rect x="62.3414%" y="1605" width="0.0370%" height="15" fill="rgb(232,77,2)" fg:x="12560900992" fg:w="7447935"/><text x="62.5914%" y="1615.50"></text></g><g><title>kblockd_mod_delayed_work_on (7,447,935 samples, 0.04%)</title><rect x="62.3414%" y="1589" width="0.0370%" height="15" fill="rgb(249,94,25)" fg:x="12560900992" fg:w="7447935"/><text x="62.5914%" y="1599.50"></text></g><g><title>mod_delayed_work_on (6,733,920 samples, 0.03%)</title><rect x="62.3449%" y="1573" width="0.0334%" height="15" fill="rgb(215,112,2)" fg:x="12561615007" fg:w="6733920"/><text x="62.5949%" y="1583.50"></text></g><g><title>blk_mq_run_hw_queue (7,831,482 samples, 0.04%)</title><rect x="62.3401%" y="1621" width="0.0389%" height="15" fill="rgb(226,115,48)" fg:x="12560655682" fg:w="7831482"/><text x="62.5901%" y="1631.50"></text></g><g><title>__submit_bio (14,389,245 samples, 0.07%)</title><rect x="62.3141%" y="1653" width="0.0714%" height="15" fill="rgb(249,196,10)" fg:x="12555405628" fg:w="14389245"/><text x="62.5641%" y="1663.50"></text></g><g><title>blk_mq_submit_bio (14,067,816 samples, 0.07%)</title><rect x="62.3157%" y="1637" width="0.0698%" height="15" fill="rgb(237,109,14)" fg:x="12555727057" fg:w="14067816"/><text x="62.5657%" y="1647.50"></text></g><g><title>submit_bio_noacct (15,121,002 samples, 0.08%)</title><rect x="62.3141%" y="1685" width="0.0750%" height="15" fill="rgb(217,103,53)" fg:x="12555405628" fg:w="15121002"/><text x="62.5641%" y="1695.50"></text></g><g><title>submit_bio_noacct_nocheck (15,121,002 samples, 0.08%)</title><rect x="62.3141%" y="1669" width="0.0750%" height="15" fill="rgb(244,137,9)" fg:x="12555405628" fg:w="15121002"/><text x="62.5641%" y="1679.50"></text></g><g><title>ext4_block_write_begin (159,171,922 samples, 0.79%)</title><rect x="61.6014%" y="1781" width="0.7900%" height="15" fill="rgb(227,201,3)" fg:x="12411812266" fg:w="159171922"/><text x="61.8514%" y="1791.50"></text></g><g><title>ext4_read_bh_lock (18,389,406 samples, 0.09%)</title><rect x="62.3001%" y="1765" width="0.0913%" height="15" fill="rgb(243,94,6)" fg:x="12552594782" fg:w="18389406"/><text x="62.5501%" y="1775.50"></text></g><g><title>ext4_read_bh_nowait (18,389,406 samples, 0.09%)</title><rect x="62.3001%" y="1749" width="0.0913%" height="15" fill="rgb(235,118,5)" fg:x="12552594782" fg:w="18389406"/><text x="62.5501%" y="1759.50"></text></g><g><title>submit_bh (18,389,406 samples, 0.09%)</title><rect x="62.3001%" y="1733" width="0.0913%" height="15" fill="rgb(247,10,30)" fg:x="12552594782" fg:w="18389406"/><text x="62.5501%" y="1743.50"></text></g><g><title>submit_bh_wbc (18,389,406 samples, 0.09%)</title><rect x="62.3001%" y="1717" width="0.0913%" height="15" fill="rgb(205,26,28)" fg:x="12552594782" fg:w="18389406"/><text x="62.5501%" y="1727.50"></text></g><g><title>submit_bio (15,578,560 samples, 0.08%)</title><rect x="62.3141%" y="1701" width="0.0773%" height="15" fill="rgb(206,99,35)" fg:x="12555405628" fg:w="15578560"/><text x="62.5641%" y="1711.50"></text></g><g><title>ext4_da_write_begin (932,314,820 samples, 4.63%)</title><rect x="57.7700%" y="1797" width="4.6272%" height="15" fill="rgb(238,130,40)" fg:x="11639843306" fg:w="932314820"/><text x="58.0200%" y="1807.50">ext4_..</text></g><g><title>__xa_set_mark (5,660,268 samples, 0.03%)</title><rect x="62.4659%" y="1701" width="0.0281%" height="15" fill="rgb(224,126,31)" fg:x="12586000809" fg:w="5660268"/><text x="62.7159%" y="1711.50"></text></g><g><title>xas_set_mark (4,021,678 samples, 0.02%)</title><rect x="62.4741%" y="1685" width="0.0200%" height="15" fill="rgb(254,105,17)" fg:x="12587639399" fg:w="4021678"/><text x="62.7241%" y="1695.50"></text></g><g><title>_raw_spin_lock_irqsave (2,114,222 samples, 0.01%)</title><rect x="62.4940%" y="1701" width="0.0105%" height="15" fill="rgb(216,87,36)" fg:x="12591661077" fg:w="2114222"/><text x="62.7440%" y="1711.50"></text></g><g><title>__mod_memcg_lruvec_state (11,258,497 samples, 0.06%)</title><rect x="62.5267%" y="1669" width="0.0559%" height="15" fill="rgb(240,21,12)" fg:x="12598252058" fg:w="11258497"/><text x="62.7767%" y="1679.50"></text></g><g><title>__mod_lruvec_page_state (13,359,140 samples, 0.07%)</title><rect x="62.5217%" y="1685" width="0.0663%" height="15" fill="rgb(245,192,34)" fg:x="12597242125" fg:w="13359140"/><text x="62.7717%" y="1695.50"></text></g><g><title>__mod_zone_page_state (2,098,027 samples, 0.01%)</title><rect x="62.5905%" y="1685" width="0.0104%" height="15" fill="rgb(226,100,49)" fg:x="12611106908" fg:w="2098027"/><text x="62.8405%" y="1695.50"></text></g><g><title>folio_account_dirtied (23,864,632 samples, 0.12%)</title><rect x="62.5071%" y="1701" width="0.1184%" height="15" fill="rgb(245,188,27)" fg:x="12594299583" fg:w="23864632"/><text x="62.7571%" y="1711.50"></text></g><g><title>percpu_counter_add_batch (3,178,412 samples, 0.02%)</title><rect x="62.6098%" y="1685" width="0.0158%" height="15" fill="rgb(212,170,8)" fg:x="12614985803" fg:w="3178412"/><text x="62.8598%" y="1695.50"></text></g><g><title>__folio_mark_dirty (32,372,790 samples, 0.16%)</title><rect x="62.4656%" y="1717" width="0.1607%" height="15" fill="rgb(217,113,29)" fg:x="12585928551" fg:w="32372790"/><text x="62.7156%" y="1727.50"></text></g><g><title>block_write_end (40,818,279 samples, 0.20%)</title><rect x="62.4325%" y="1765" width="0.2026%" height="15" fill="rgb(237,30,3)" fg:x="12579268184" fg:w="40818279"/><text x="62.6825%" y="1775.50"></text></g><g><title>__block_commit_write (39,615,218 samples, 0.20%)</title><rect x="62.4385%" y="1749" width="0.1966%" height="15" fill="rgb(227,19,28)" fg:x="12580471245" fg:w="39615218"/><text x="62.6885%" y="1759.50"></text></g><g><title>mark_buffer_dirty (37,025,232 samples, 0.18%)</title><rect x="62.4513%" y="1733" width="0.1838%" height="15" fill="rgb(239,172,45)" fg:x="12583061231" fg:w="37025232"/><text x="62.7013%" y="1743.50"></text></g><g><title>ext4_da_do_write_end (49,822,577 samples, 0.25%)</title><rect x="62.4043%" y="1781" width="0.2473%" height="15" fill="rgb(254,55,39)" fg:x="12573582383" fg:w="49822577"/><text x="62.6543%" y="1791.50"></text></g><g><title>ext4_da_write_end (51,651,567 samples, 0.26%)</title><rect x="62.3972%" y="1797" width="0.2564%" height="15" fill="rgb(249,208,12)" fg:x="12572158126" fg:w="51651567"/><text x="62.6472%" y="1807.50"></text></g><g><title>fault_in_iov_iter_readable (12,793,877 samples, 0.06%)</title><rect x="62.6536%" y="1797" width="0.0635%" height="15" fill="rgb(240,52,13)" fg:x="12623809693" fg:w="12793877"/><text x="62.9036%" y="1807.50"></text></g><g><title>fault_in_readable (12,203,066 samples, 0.06%)</title><rect x="62.6565%" y="1781" width="0.0606%" height="15" fill="rgb(252,149,13)" fg:x="12624400504" fg:w="12203066"/><text x="62.9065%" y="1791.50"></text></g><g><title>generic_perform_write (1,070,010,579 samples, 5.31%)</title><rect x="57.6015%" y="1813" width="5.3106%" height="15" fill="rgb(232,81,48)" fg:x="11605895956" fg:w="1070010579"/><text x="57.8515%" y="1823.50">generic..</text></g><g><title>rep_movs_alternative (38,506,963 samples, 0.19%)</title><rect x="62.7210%" y="1797" width="0.1911%" height="15" fill="rgb(222,144,2)" fg:x="12637399572" fg:w="38506963"/><text x="62.9710%" y="1807.50"></text></g><g><title>ext4_buffered_write_iter (2,048,467,301 samples, 10.17%)</title><rect x="52.7621%" y="1829" width="10.1668%" height="15" fill="rgb(216,81,32)" fg:x="10630810200" fg:w="2048467301"/><text x="53.0121%" y="1839.50">ext4_buffered_w..</text></g><g><title>up_write (3,161,734 samples, 0.02%)</title><rect x="62.9132%" y="1813" width="0.0157%" height="15" fill="rgb(244,78,51)" fg:x="12676115767" fg:w="3161734"/><text x="63.1632%" y="1823.50"></text></g><g><title>wake_up_q (2,119,731 samples, 0.01%)</title><rect x="62.9184%" y="1797" width="0.0105%" height="15" fill="rgb(217,66,21)" fg:x="12677157770" fg:w="2119731"/><text x="63.1684%" y="1807.50"></text></g><g><title>try_to_wake_up (2,119,731 samples, 0.01%)</title><rect x="62.9184%" y="1781" width="0.0105%" height="15" fill="rgb(247,101,42)" fg:x="12677157770" fg:w="2119731"/><text x="63.1684%" y="1791.50"></text></g><g><title>ext4_file_write_iter (2,048,927,247 samples, 10.17%)</title><rect x="52.7621%" y="1845" width="10.1691%" height="15" fill="rgb(227,81,39)" fg:x="10630810200" fg:w="2048927247"/><text x="53.0121%" y="1855.50">ext4_file_write..</text></g><g><title>__x64_sys_pwrite64 (2,071,622,092 samples, 10.28%)</title><rect x="52.6576%" y="1877" width="10.2817%" height="15" fill="rgb(220,223,44)" fg:x="10609759739" fg:w="2071622092"/><text x="52.9076%" y="1887.50">__x64_sys_pwrit..</text></g><g><title>vfs_write (2,068,261,706 samples, 10.27%)</title><rect x="52.6743%" y="1861" width="10.2650%" height="15" fill="rgb(205,218,2)" fg:x="10613120125" fg:w="2068261706"/><text x="52.9243%" y="1871.50">vfs_write</text></g><g><title>do_syscall_64 (2,076,073,425 samples, 10.30%)</title><rect x="52.6544%" y="1893" width="10.3038%" height="15" fill="rgb(212,207,28)" fg:x="10609118019" fg:w="2076073425"/><text x="52.9044%" y="1903.50">do_syscall_64</text></g><g><title>entry_SYSCALL_64 (2,076,670,497 samples, 10.31%)</title><rect x="52.6517%" y="1909" width="10.3068%" height="15" fill="rgb(224,12,41)" fg:x="10608576778" fg:w="2076670497"/><text x="52.9017%" y="1919.50">entry_SYSCALL_64</text></g><g><title>__libc_pwrite (4,092,274,683 samples, 20.31%)</title><rect x="42.6601%" y="1925" width="20.3105%" height="15" fill="rgb(216,118,12)" fg:x="8595408570" fg:w="4092274683"/><text x="42.9101%" y="1935.50">__libc_pwrite</text></g><g><title>IOTraceClient::do_operation (7,819,780,170 samples, 38.81%)</title><rect x="24.1659%" y="1941" width="38.8106%" height="15" fill="rgb(252,97,46)" fg:x="4869080052" fg:w="7819780170"/><text x="24.4159%" y="1951.50">IOTraceClient::do_operation</text></g><g><title>std::unordered_map&lt;int, std::vector&lt;double, std::allocator&lt;double&gt; &gt; [5], std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; [5]&gt; &gt; &gt;::operator[] (3,990,129 samples, 0.02%)</title><rect x="62.9968%" y="1925" width="0.0198%" height="15" fill="rgb(244,206,19)" fg:x="12692954558" fg:w="3990129"/><text x="63.2468%" y="1935.50"></text></g><g><title>std::__detail::_Map_base&lt;int, std::pair&lt;int const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; [5]&gt;, std::allocator&lt;std::pair&lt;int const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; [5]&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (3,624,675 samples, 0.02%)</title><rect x="62.9986%" y="1909" width="0.0180%" height="15" fill="rgb(231,84,31)" fg:x="12693320012" fg:w="3624675"/><text x="63.2486%" y="1919.50"></text></g><g><title>OpMeasurement::record_op (10,582,343 samples, 0.05%)</title><rect x="62.9764%" y="1941" width="0.0525%" height="15" fill="rgb(244,133,0)" fg:x="12688860222" fg:w="10582343"/><text x="63.2264%" y="1951.50"></text></g><g><title>std::unordered_map&lt;int, std::vector&lt;long, std::allocator&lt;long&gt; &gt; [5], std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::vector&lt;long, std::allocator&lt;long&gt; &gt; [5]&gt; &gt; &gt;::operator[] (2,497,878 samples, 0.01%)</title><rect x="63.0166%" y="1925" width="0.0124%" height="15" fill="rgb(223,15,50)" fg:x="12696944687" fg:w="2497878"/><text x="63.2666%" y="1935.50"></text></g><g><title>std::__detail::_Map_base&lt;int, std::pair&lt;int const, std::vector&lt;long, std::allocator&lt;long&gt; &gt; [5]&gt;, std::allocator&lt;std::pair&lt;int const, std::vector&lt;long, std::allocator&lt;long&gt; &gt; [5]&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (2,226,882 samples, 0.01%)</title><rect x="63.0179%" y="1909" width="0.0111%" height="15" fill="rgb(250,118,49)" fg:x="12697215683" fg:w="2226882"/><text x="63.2679%" y="1919.50"></text></g><g><title>__GI___lll_lock_wait (2,703,234 samples, 0.01%)</title><rect x="63.0498%" y="1877" width="0.0134%" height="15" fill="rgb(248,25,38)" fg:x="12703640767" fg:w="2703234"/><text x="63.2998%" y="1887.50"></text></g><g><title>std::lock_guard&lt;std::mutex&gt;::lock_guard (4,786,687 samples, 0.02%)</title><rect x="63.0498%" y="1909" width="0.0238%" height="15" fill="rgb(215,70,14)" fg:x="12703640767" fg:w="4786687"/><text x="63.2998%" y="1919.50"></text></g><g><title>std::mutex::lock (4,786,687 samples, 0.02%)</title><rect x="63.0498%" y="1893" width="0.0238%" height="15" fill="rgb(215,28,15)" fg:x="12703640767" fg:w="4786687"/><text x="63.2998%" y="1903.50"></text></g><g><title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (2,508,909 samples, 0.01%)</title><rect x="63.0735%" y="1909" width="0.0125%" height="15" fill="rgb(243,6,28)" fg:x="12708427454" fg:w="2508909"/><text x="63.3235%" y="1919.50"></text></g><g><title>std::mutex::unlock (2,508,909 samples, 0.01%)</title><rect x="63.0735%" y="1893" width="0.0125%" height="15" fill="rgb(222,130,1)" fg:x="12708427454" fg:w="2508909"/><text x="63.3235%" y="1903.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_S_relocate (3,327,772 samples, 0.02%)</title><rect x="63.1103%" y="1877" width="0.0165%" height="15" fill="rgb(236,166,44)" fg:x="12715826726" fg:w="3327772"/><text x="63.3603%" y="1887.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_S_do_relocate (2,889,648 samples, 0.01%)</title><rect x="63.1124%" y="1861" width="0.0143%" height="15" fill="rgb(221,108,14)" fg:x="12716264850" fg:w="2889648"/><text x="63.3624%" y="1871.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;* std::__relocate_a&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (2,618,855 samples, 0.01%)</title><rect x="63.1138%" y="1845" width="0.0130%" height="15" fill="rgb(252,3,45)" fg:x="12716535643" fg:w="2618855"/><text x="63.3638%" y="1855.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (8,544,083 samples, 0.04%)</title><rect x="63.0914%" y="1909" width="0.0424%" height="15" fill="rgb(237,68,30)" fg:x="12712023953" fg:w="8544083"/><text x="63.3414%" y="1919.50"></text></g><g><title>void std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (8,124,072 samples, 0.04%)</title><rect x="63.0935%" y="1893" width="0.0403%" height="15" fill="rgb(211,79,22)" fg:x="12712443964" fg:w="8124072"/><text x="63.3435%" y="1903.50"></text></g><g><title>TraceIterator::next_op (20,919,528 samples, 0.10%)</title><rect x="63.0362%" y="1925" width="0.1038%" height="15" fill="rgb(252,185,21)" fg:x="12700896485" fg:w="20919528"/><text x="63.2862%" y="1935.50"></text></g><g><title>TraceWorkload::next_op (29,425,128 samples, 0.15%)</title><rect x="63.0301%" y="1941" width="0.1460%" height="15" fill="rgb(225,189,26)" fg:x="12699665839" fg:w="29425128"/><text x="63.2801%" y="1951.50"></text></g><g><title>[libstdc++.so.6.0.30] (7,868,219,034 samples, 39.05%)</title><rect x="24.1363%" y="2053" width="39.0510%" height="15" fill="rgb(241,30,40)" fg:x="4863127577" fg:w="7868219034"/><text x="24.3863%" y="2063.50">[libstdc++.so.6.0.30]</text></g><g><title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void (*)(Client*, Workload*, OpMeasurement*, long), Client*, Workload*, OpMeasurement*, long&gt; &gt; &gt;::_M_run (7,868,219,034 samples, 39.05%)</title><rect x="24.1363%" y="2037" width="39.0510%" height="15" fill="rgb(235,215,44)" fg:x="4863127577" fg:w="7868219034"/><text x="24.3863%" y="2047.50">std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void (..</text></g><g><title>std::thread::_Invoker&lt;std::tuple&lt;void (*)(Client*, Workload*, OpMeasurement*, long), Client*, Workload*, OpMeasurement*, long&gt; &gt;::operator (7,868,219,034 samples, 39.05%)</title><rect x="24.1363%" y="2021" width="39.0510%" height="15" fill="rgb(205,8,29)" fg:x="4863127577" fg:w="7868219034"/><text x="24.3863%" y="2031.50">std::thread::_Invoker&lt;std::tuple&lt;void (*)(Client*, Workload*, Op..</text></g><g><title>void std::thread::_Invoker&lt;std::tuple&lt;void (*)(Client*, Workload*, OpMeasurement*, long), Client*, Workload*, OpMeasurement*, long&gt; &gt;::_M_invoke&lt;0ul, 1ul, 2ul, 3ul, 4ul&gt; (7,868,219,034 samples, 39.05%)</title><rect x="24.1363%" y="2005" width="39.0510%" height="15" fill="rgb(241,137,42)" fg:x="4863127577" fg:w="7868219034"/><text x="24.3863%" y="2015.50">void std::thread::_Invoker&lt;std::tuple&lt;void (*)(Client*, Workload..</text></g><g><title>std::__invoke_result&lt;void (*)(Client*, Workload*, OpMeasurement*, long), Client*, Workload*, OpMeasurement*, long&gt;::type std::__invoke&lt;void (*)(Client*, Workload*, OpMeasurement*, long), Client*, Workload*, OpMeasurement*, long&gt; (7,868,219,034 samples, 39.05%)</title><rect x="24.1363%" y="1989" width="39.0510%" height="15" fill="rgb(237,155,2)" fg:x="4863127577" fg:w="7868219034"/><text x="24.3863%" y="1999.50">std::__invoke_result&lt;void (*)(Client*, Workload*, OpMeasurement*..</text></g><g><title>void std::__invoke_impl&lt;void, void (*)(Client*, Workload*, OpMeasurement*, long), Client*, Workload*, OpMeasurement*, long&gt; (7,868,219,034 samples, 39.05%)</title><rect x="24.1363%" y="1973" width="39.0510%" height="15" fill="rgb(245,29,42)" fg:x="4863127577" fg:w="7868219034"/><text x="24.3863%" y="1983.50">void std::__invoke_impl&lt;void, void (*)(Client*, Workload*, OpMea..</text></g><g><title>worker_thread_fn (7,862,961,626 samples, 39.02%)</title><rect x="24.1624%" y="1957" width="39.0249%" height="15" fill="rgb(234,101,35)" fg:x="4868384985" fg:w="7862961626"/><text x="24.4124%" y="1967.50">worker_thread_fn</text></g><g><title>[unknown] (2,233,805 samples, 0.01%)</title><rect x="63.1873%" y="2021" width="0.0111%" height="15" fill="rgb(228,64,37)" fg:x="12731346611" fg:w="2233805"/><text x="63.4373%" y="2031.50"></text></g><g><title>[unknown] (10,076,001 samples, 0.05%)</title><rect x="63.1873%" y="2037" width="0.0500%" height="15" fill="rgb(217,214,36)" fg:x="12731346611" fg:w="10076001"/><text x="63.4373%" y="2047.50"></text></g><g><title>bpf_cache_ext_list_del (6,487,972 samples, 0.03%)</title><rect x="63.2373%" y="2005" width="0.0322%" height="15" fill="rgb(243,70,3)" fg:x="12741422612" fg:w="6487972"/><text x="63.4873%" y="2015.50"></text></g><g><title>cache_ext_list_del (6,487,972 samples, 0.03%)</title><rect x="63.2373%" y="1989" width="0.0322%" height="15" fill="rgb(253,158,52)" fg:x="12741422612" fg:w="6487972"/><text x="63.4873%" y="1999.50"></text></g><g><title>_raw_write_lock (5,805,930 samples, 0.03%)</title><rect x="63.2407%" y="1973" width="0.0288%" height="15" fill="rgb(234,111,54)" fg:x="12742104654" fg:w="5805930"/><text x="63.4907%" y="1983.50"></text></g><g><title>queued_write_lock_slowpath (5,805,930 samples, 0.03%)</title><rect x="63.2407%" y="1957" width="0.0288%" height="15" fill="rgb(217,70,32)" fg:x="12742104654" fg:w="5805930"/><text x="63.4907%" y="1967.50"></text></g><g><title>bpf_prog_da529bdc9d890a05_sampling_folio_evicted (7,229,439 samples, 0.04%)</title><rect x="63.2373%" y="2021" width="0.0359%" height="15" fill="rgb(234,18,33)" fg:x="12741422612" fg:w="7229439"/><text x="63.4873%" y="2031.50"></text></g><g><title>_raw_write_lock (2,616,452 samples, 0.01%)</title><rect x="63.3088%" y="1989" width="0.0130%" height="15" fill="rgb(234,12,49)" fg:x="12755832388" fg:w="2616452"/><text x="63.5588%" y="1999.50"></text></g><g><title>queued_write_lock_slowpath (2,616,452 samples, 0.01%)</title><rect x="63.3088%" y="1973" width="0.0130%" height="15" fill="rgb(236,10,21)" fg:x="12755832388" fg:w="2616452"/><text x="63.5588%" y="1983.50"></text></g><g><title>native_queued_spin_lock_slowpath (2,035,090 samples, 0.01%)</title><rect x="63.3117%" y="1957" width="0.0101%" height="15" fill="rgb(248,182,45)" fg:x="12756413750" fg:w="2035090"/><text x="63.5617%" y="1967.50"></text></g><g><title>bpf_prog_e60b9b119b1b8022_sampling_evict_folios (20,932,880 samples, 0.10%)</title><rect x="63.2732%" y="2021" width="0.1039%" height="15" fill="rgb(217,95,36)" fg:x="12748652051" fg:w="20932880"/><text x="63.5232%" y="2031.50"></text></g><g><title>bpf_cache_ext_list_sample (20,932,880 samples, 0.10%)</title><rect x="63.2732%" y="2005" width="0.1039%" height="15" fill="rgb(212,110,31)" fg:x="12748652051" fg:w="20932880"/><text x="63.5232%" y="2015.50"></text></g><g><title>bpf_prog_eade6cb1e4780183_bpf_lfu_score_fn (11,136,091 samples, 0.06%)</title><rect x="63.3218%" y="1989" width="0.0553%" height="15" fill="rgb(206,32,53)" fg:x="12758448840" fg:w="11136091"/><text x="63.5718%" y="1999.50"></text></g><g><title>__htab_map_lookup_elem (10,462,306 samples, 0.05%)</title><rect x="63.3252%" y="1973" width="0.0519%" height="15" fill="rgb(246,141,37)" fg:x="12759122625" fg:w="10462306"/><text x="63.5752%" y="1983.50"></text></g><g><title>__remove_mapping (3,130,153 samples, 0.02%)</title><rect x="63.3934%" y="1669" width="0.0155%" height="15" fill="rgb(219,16,7)" fg:x="12772879197" fg:w="3130153"/><text x="63.6434%" y="1679.50"></text></g><g><title>reclaim_pages (5,799,827 samples, 0.03%)</title><rect x="63.3864%" y="1717" width="0.0288%" height="15" fill="rgb(230,205,45)" fg:x="12771465094" fg:w="5799827"/><text x="63.6364%" y="1727.50"></text></g><g><title>reclaim_folio_list (5,799,827 samples, 0.03%)</title><rect x="63.3864%" y="1701" width="0.0288%" height="15" fill="rgb(231,43,49)" fg:x="12771465094" fg:w="5799827"/><text x="63.6364%" y="1711.50"></text></g><g><title>shrink_folio_list (5,799,827 samples, 0.03%)</title><rect x="63.3864%" y="1685" width="0.0288%" height="15" fill="rgb(212,106,34)" fg:x="12771465094" fg:w="5799827"/><text x="63.6364%" y="1695.50"></text></g><g><title>shrink_node_memcgs (6,360,828 samples, 0.03%)</title><rect x="63.3864%" y="1781" width="0.0316%" height="15" fill="rgb(206,83,17)" fg:x="12771465094" fg:w="6360828"/><text x="63.6364%" y="1791.50"></text></g><g><title>shrink_lruvec (6,360,828 samples, 0.03%)</title><rect x="63.3864%" y="1765" width="0.0316%" height="15" fill="rgb(244,154,49)" fg:x="12771465094" fg:w="6360828"/><text x="63.6364%" y="1775.50"></text></g><g><title>page_cache_ext_isolate_and_reclaim (6,360,828 samples, 0.03%)</title><rect x="63.3864%" y="1749" width="0.0316%" height="15" fill="rgb(244,149,49)" fg:x="12771465094" fg:w="6360828"/><text x="63.6364%" y="1759.50"></text></g><g><title>__page_cache_ext_isolate_and_reclaim (6,360,828 samples, 0.03%)</title><rect x="63.3864%" y="1733" width="0.0316%" height="15" fill="rgb(227,134,18)" fg:x="12771465094" fg:w="6360828"/><text x="63.6364%" y="1743.50"></text></g><g><title>obj_cgroup_charge_pages (7,578,356 samples, 0.04%)</title><rect x="63.3842%" y="1877" width="0.0376%" height="15" fill="rgb(237,116,36)" fg:x="12771014164" fg:w="7578356"/><text x="63.6342%" y="1887.50"></text></g><g><title>try_charge_memcg (7,127,426 samples, 0.04%)</title><rect x="63.3864%" y="1861" width="0.0354%" height="15" fill="rgb(205,129,40)" fg:x="12771465094" fg:w="7127426"/><text x="63.6364%" y="1871.50"></text></g><g><title>try_to_free_mem_cgroup_pages (7,127,426 samples, 0.04%)</title><rect x="63.3864%" y="1845" width="0.0354%" height="15" fill="rgb(236,178,4)" fg:x="12771465094" fg:w="7127426"/><text x="63.6364%" y="1855.50"></text></g><g><title>do_try_to_free_pages (7,127,426 samples, 0.04%)</title><rect x="63.3864%" y="1829" width="0.0354%" height="15" fill="rgb(251,76,53)" fg:x="12771465094" fg:w="7127426"/><text x="63.6364%" y="1839.50"></text></g><g><title>shrink_zones (7,127,426 samples, 0.04%)</title><rect x="63.3864%" y="1813" width="0.0354%" height="15" fill="rgb(242,92,40)" fg:x="12771465094" fg:w="7127426"/><text x="63.6364%" y="1823.50"></text></g><g><title>shrink_node (7,127,426 samples, 0.04%)</title><rect x="63.3864%" y="1797" width="0.0354%" height="15" fill="rgb(209,45,30)" fg:x="12771465094" fg:w="7127426"/><text x="63.6364%" y="1807.50"></text></g><g><title>kmem_cache_alloc (8,105,083 samples, 0.04%)</title><rect x="63.3834%" y="1909" width="0.0402%" height="15" fill="rgb(218,157,36)" fg:x="12770848317" fg:w="8105083"/><text x="63.6334%" y="1919.50"></text></g><g><title>obj_cgroup_charge (7,939,236 samples, 0.04%)</title><rect x="63.3842%" y="1893" width="0.0394%" height="15" fill="rgb(222,186,16)" fg:x="12771014164" fg:w="7939236"/><text x="63.6342%" y="1903.50"></text></g><g><title>alloc_empty_file (9,413,471 samples, 0.05%)</title><rect x="63.3795%" y="1925" width="0.0467%" height="15" fill="rgb(254,72,35)" fg:x="12770072286" fg:w="9413471"/><text x="63.6295%" y="1935.50"></text></g><g><title>path_openat (12,808,368 samples, 0.06%)</title><rect x="63.3791%" y="1941" width="0.0636%" height="15" fill="rgb(224,25,35)" fg:x="12769995775" fg:w="12808368"/><text x="63.6291%" y="1951.50"></text></g><g><title>do_filp_open (14,266,765 samples, 0.07%)</title><rect x="63.3771%" y="1957" width="0.0708%" height="15" fill="rgb(206,135,52)" fg:x="12769584931" fg:w="14266765"/><text x="63.6271%" y="1967.50"></text></g><g><title>__x64_sys_openat (15,990,761 samples, 0.08%)</title><rect x="63.3771%" y="1989" width="0.0794%" height="15" fill="rgb(229,174,47)" fg:x="12769584931" fg:w="15990761"/><text x="63.6271%" y="1999.50"></text></g><g><title>do_sys_openat2 (15,990,761 samples, 0.08%)</title><rect x="63.3771%" y="1973" width="0.0794%" height="15" fill="rgb(242,184,21)" fg:x="12769584931" fg:w="15990761"/><text x="63.6271%" y="1983.50"></text></g><g><title>__GI___libc_open (44,504,719 samples, 0.22%)</title><rect x="63.2373%" y="2037" width="0.2209%" height="15" fill="rgb(213,22,45)" fg:x="12741422612" fg:w="44504719"/><text x="63.4873%" y="2047.50"></text></g><g><title>entry_SYSCALL_64 (16,342,400 samples, 0.08%)</title><rect x="63.3771%" y="2021" width="0.0811%" height="15" fill="rgb(237,81,54)" fg:x="12769584931" fg:w="16342400"/><text x="63.6271%" y="2031.50"></text></g><g><title>do_syscall_64 (16,342,400 samples, 0.08%)</title><rect x="63.3771%" y="2005" width="0.0811%" height="15" fill="rgb(248,177,18)" fg:x="12769584931" fg:w="16342400"/><text x="63.6271%" y="2015.50"></text></g><g><title>[unknown] (58,976,722 samples, 0.29%)</title><rect x="63.1873%" y="2053" width="0.2927%" height="15" fill="rgb(254,31,16)" fg:x="12731346611" fg:w="58976722"/><text x="63.4373%" y="2063.50"></text></g><g><title>malloc (2,403,924 samples, 0.01%)</title><rect x="63.4969%" y="2053" width="0.0119%" height="15" fill="rgb(235,20,31)" fg:x="12793725054" fg:w="2403924"/><text x="63.7469%" y="2063.50"></text></g><g><title>run_io_trace (7,936,614,004 samples, 39.39%)</title><rect x="24.1363%" y="2069" width="39.3904%" height="15" fill="rgb(240,56,43)" fg:x="4863127577" fg:w="7936614004"/><text x="24.3863%" y="2079.50">run_io_trace</text></g><g><title>_dl_map_object (2,387,351 samples, 0.01%)</title><rect x="63.5405%" y="2053" width="0.0118%" height="15" fill="rgb(237,197,51)" fg:x="12802502327" fg:w="2387351"/><text x="63.7905%" y="2063.50"></text></g><g><title>sed (6,908,471 samples, 0.03%)</title><rect x="63.5268%" y="2069" width="0.0343%" height="15" fill="rgb(241,162,44)" fg:x="12799741581" fg:w="6908471"/><text x="63.7768%" y="2079.50"></text></g><g><title>[dash] (2,469,998 samples, 0.01%)</title><rect x="63.5610%" y="2037" width="0.0123%" height="15" fill="rgb(224,23,20)" fg:x="12806650052" fg:w="2469998"/><text x="63.8110%" y="2047.50"></text></g><g><title>__GI___execve (3,058,053 samples, 0.02%)</title><rect x="63.5817%" y="2037" width="0.0152%" height="15" fill="rgb(250,109,34)" fg:x="12810806377" fg:w="3058053"/><text x="63.8317%" y="2047.50"></text></g><g><title>entry_SYSCALL_64 (3,058,053 samples, 0.02%)</title><rect x="63.5817%" y="2021" width="0.0152%" height="15" fill="rgb(214,175,50)" fg:x="12810806377" fg:w="3058053"/><text x="63.8317%" y="2031.50"></text></g><g><title>do_syscall_64 (3,058,053 samples, 0.02%)</title><rect x="63.5817%" y="2005" width="0.0152%" height="15" fill="rgb(213,182,5)" fg:x="12810806377" fg:w="3058053"/><text x="63.8317%" y="2015.50"></text></g><g><title>__x64_sys_execve (3,058,053 samples, 0.02%)</title><rect x="63.5817%" y="1989" width="0.0152%" height="15" fill="rgb(209,199,19)" fg:x="12810806377" fg:w="3058053"/><text x="63.8317%" y="1999.50"></text></g><g><title>do_execveat_common (3,058,053 samples, 0.02%)</title><rect x="63.5817%" y="1973" width="0.0152%" height="15" fill="rgb(236,224,42)" fg:x="12810806377" fg:w="3058053"/><text x="63.8317%" y="1983.50"></text></g><g><title>proc_fill_cache (2,192,893 samples, 0.01%)</title><rect x="63.6043%" y="1909" width="0.0109%" height="15" fill="rgb(246,226,29)" fg:x="12815356926" fg:w="2192893"/><text x="63.8543%" y="1919.50"></text></g><g><title>d_hash_and_lookup (2,192,893 samples, 0.01%)</title><rect x="63.6043%" y="1893" width="0.0109%" height="15" fill="rgb(227,223,11)" fg:x="12815356926" fg:w="2192893"/><text x="63.8543%" y="1903.50"></text></g><g><title>__d_lookup (2,192,893 samples, 0.01%)</title><rect x="63.6043%" y="1877" width="0.0109%" height="15" fill="rgb(219,7,51)" fg:x="12815356926" fg:w="2192893"/><text x="63.8543%" y="1887.50"></text></g><g><title>proc_readfd (3,712,362 samples, 0.02%)</title><rect x="63.6004%" y="1941" width="0.0184%" height="15" fill="rgb(245,167,10)" fg:x="12814589529" fg:w="3712362"/><text x="63.8504%" y="1951.50"></text></g><g><title>proc_readfd_common (3,712,362 samples, 0.02%)</title><rect x="63.6004%" y="1925" width="0.0184%" height="15" fill="rgb(237,224,16)" fg:x="12814589529" fg:w="3712362"/><text x="63.8504%" y="1935.50"></text></g><g><title>next_tgid (2,160,524 samples, 0.01%)</title><rect x="63.6189%" y="1909" width="0.0107%" height="15" fill="rgb(226,132,13)" fg:x="12818301891" fg:w="2160524"/><text x="63.8689%" y="1919.50"></text></g><g><title>__x64_sys_getdents64 (7,831,409 samples, 0.04%)</title><rect x="63.5968%" y="1989" width="0.0389%" height="15" fill="rgb(214,140,3)" fg:x="12813864430" fg:w="7831409"/><text x="63.8468%" y="1999.50"></text></g><g><title>__se_sys_getdents64 (7,831,409 samples, 0.04%)</title><rect x="63.5968%" y="1973" width="0.0389%" height="15" fill="rgb(221,177,4)" fg:x="12813864430" fg:w="7831409"/><text x="63.8468%" y="1983.50"></text></g><g><title>iterate_dir (7,831,409 samples, 0.04%)</title><rect x="63.5968%" y="1957" width="0.0389%" height="15" fill="rgb(238,139,3)" fg:x="12813864430" fg:w="7831409"/><text x="63.8468%" y="1967.50"></text></g><g><title>proc_root_readdir (3,393,948 samples, 0.02%)</title><rect x="63.6189%" y="1941" width="0.0168%" height="15" fill="rgb(216,17,39)" fg:x="12818301891" fg:w="3393948"/><text x="63.8689%" y="1951.50"></text></g><g><title>proc_pid_readdir (3,393,948 samples, 0.02%)</title><rect x="63.6189%" y="1925" width="0.0168%" height="15" fill="rgb(238,120,9)" fg:x="12818301891" fg:w="3393948"/><text x="63.8689%" y="1935.50"></text></g><g><title>__GI___getdents64 (8,581,839 samples, 0.04%)</title><rect x="63.5968%" y="2037" width="0.0426%" height="15" fill="rgb(244,92,53)" fg:x="12813864430" fg:w="8581839"/><text x="63.8468%" y="2047.50"></text></g><g><title>entry_SYSCALL_64 (8,581,839 samples, 0.04%)</title><rect x="63.5968%" y="2021" width="0.0426%" height="15" fill="rgb(224,148,33)" fg:x="12813864430" fg:w="8581839"/><text x="63.8468%" y="2031.50"></text></g><g><title>do_syscall_64 (8,581,839 samples, 0.04%)</title><rect x="63.5968%" y="2005" width="0.0426%" height="15" fill="rgb(243,6,36)" fg:x="12813864430" fg:w="8581839"/><text x="63.8468%" y="2015.50"></text></g><g><title>__GI___wait4 (2,066,871 samples, 0.01%)</title><rect x="63.6394%" y="2037" width="0.0103%" height="15" fill="rgb(230,102,11)" fg:x="12822446269" fg:w="2066871"/><text x="63.8894%" y="2047.50"></text></g><g><title>entry_SYSCALL_64 (2,066,871 samples, 0.01%)</title><rect x="63.6394%" y="2021" width="0.0103%" height="15" fill="rgb(234,148,36)" fg:x="12822446269" fg:w="2066871"/><text x="63.8894%" y="2031.50"></text></g><g><title>do_syscall_64 (2,066,871 samples, 0.01%)</title><rect x="63.6394%" y="2005" width="0.0103%" height="15" fill="rgb(251,153,25)" fg:x="12822446269" fg:w="2066871"/><text x="63.8894%" y="2015.50"></text></g><g><title>__x64_sys_wait4 (2,066,871 samples, 0.01%)</title><rect x="63.6394%" y="1989" width="0.0103%" height="15" fill="rgb(215,129,8)" fg:x="12822446269" fg:w="2066871"/><text x="63.8894%" y="1999.50"></text></g><g><title>kernel_wait4 (2,066,871 samples, 0.01%)</title><rect x="63.6394%" y="1973" width="0.0103%" height="15" fill="rgb(224,128,35)" fg:x="12822446269" fg:w="2066871"/><text x="63.8894%" y="1983.50"></text></g><g><title>do_wait (2,066,871 samples, 0.01%)</title><rect x="63.6394%" y="1957" width="0.0103%" height="15" fill="rgb(237,56,52)" fg:x="12822446269" fg:w="2066871"/><text x="63.8894%" y="1967.50"></text></g><g><title>alloc_empty_file (2,113,329 samples, 0.01%)</title><rect x="63.6624%" y="1925" width="0.0105%" height="15" fill="rgb(234,213,19)" fg:x="12827071572" fg:w="2113329"/><text x="63.9124%" y="1935.50"></text></g><g><title>do_filp_open (7,088,517 samples, 0.04%)</title><rect x="63.6586%" y="1957" width="0.0352%" height="15" fill="rgb(252,82,23)" fg:x="12826313709" fg:w="7088517"/><text x="63.9086%" y="1967.50"></text></g><g><title>path_openat (7,088,517 samples, 0.04%)</title><rect x="63.6586%" y="1941" width="0.0352%" height="15" fill="rgb(254,201,21)" fg:x="12826313709" fg:w="7088517"/><text x="63.9086%" y="1951.50"></text></g><g><title>getname (2,029,073 samples, 0.01%)</title><rect x="63.6995%" y="1957" width="0.0101%" height="15" fill="rgb(250,186,11)" fg:x="12834551318" fg:w="2029073"/><text x="63.9495%" y="1967.50"></text></g><g><title>getname_flags (2,029,073 samples, 0.01%)</title><rect x="63.6995%" y="1941" width="0.0101%" height="15" fill="rgb(211,174,5)" fg:x="12834551318" fg:w="2029073"/><text x="63.9495%" y="1951.50"></text></g><g><title>__x64_sys_openat (11,627,132 samples, 0.06%)</title><rect x="63.6550%" y="1989" width="0.0577%" height="15" fill="rgb(214,121,10)" fg:x="12825590878" fg:w="11627132"/><text x="63.9050%" y="1999.50"></text></g><g><title>do_sys_openat2 (11,627,132 samples, 0.06%)</title><rect x="63.6550%" y="1973" width="0.0577%" height="15" fill="rgb(241,66,2)" fg:x="12825590878" fg:w="11627132"/><text x="63.9050%" y="1983.50"></text></g><g><title>exit_to_user_mode_prepare (2,758,149 samples, 0.01%)</title><rect x="63.7128%" y="1973" width="0.0137%" height="15" fill="rgb(220,167,19)" fg:x="12837218010" fg:w="2758149"/><text x="63.9628%" y="1983.50"></text></g><g><title>exit_to_user_mode_loop (2,091,210 samples, 0.01%)</title><rect x="63.7161%" y="1957" width="0.0104%" height="15" fill="rgb(231,54,50)" fg:x="12837884949" fg:w="2091210"/><text x="63.9661%" y="1967.50"></text></g><g><title>entry_SYSCALL_64 (15,033,302 samples, 0.07%)</title><rect x="63.6550%" y="2021" width="0.0746%" height="15" fill="rgb(239,217,53)" fg:x="12825590878" fg:w="15033302"/><text x="63.9050%" y="2031.50"></text></g><g><title>do_syscall_64 (15,033,302 samples, 0.07%)</title><rect x="63.6550%" y="2005" width="0.0746%" height="15" fill="rgb(248,8,0)" fg:x="12825590878" fg:w="15033302"/><text x="63.9050%" y="2015.50"></text></g><g><title>syscall_exit_to_user_mode (3,406,170 samples, 0.02%)</title><rect x="63.7128%" y="1989" width="0.0169%" height="15" fill="rgb(229,118,37)" fg:x="12837218010" fg:w="3406170"/><text x="63.9628%" y="1999.50"></text></g><g><title>__open64_nocancel (16,892,787 samples, 0.08%)</title><rect x="63.6550%" y="2037" width="0.0838%" height="15" fill="rgb(253,223,43)" fg:x="12825590878" fg:w="16892787"/><text x="63.9050%" y="2047.50"></text></g><g><title>_dl_sysdep_start (5,560,615 samples, 0.03%)</title><rect x="63.7427%" y="2037" width="0.0276%" height="15" fill="rgb(211,77,36)" fg:x="12843248859" fg:w="5560615"/><text x="63.9927%" y="2047.50"></text></g><g><title>dl_main (5,070,147 samples, 0.03%)</title><rect x="63.7451%" y="2021" width="0.0252%" height="15" fill="rgb(219,3,53)" fg:x="12843739327" fg:w="5070147"/><text x="63.9951%" y="2031.50"></text></g><g><title>[unknown] (42,785,058 samples, 0.21%)</title><rect x="63.5610%" y="2053" width="0.2123%" height="15" fill="rgb(244,45,42)" fg:x="12806650052" fg:w="42785058"/><text x="63.8110%" y="2063.50"></text></g><g><title>_dl_map_object (3,203,085 samples, 0.02%)</title><rect x="63.8054%" y="2053" width="0.0159%" height="15" fill="rgb(225,95,27)" fg:x="12855880124" fg:w="3203085"/><text x="64.0554%" y="2063.50"></text></g><g><title>sh (57,179,993 samples, 0.28%)</title><rect x="63.5610%" y="2069" width="0.2838%" height="15" fill="rgb(207,74,8)" fg:x="12806650052" fg:w="57179993"/><text x="63.8110%" y="2079.50"></text></g><g><title>sleep (3,712,045 samples, 0.02%)</title><rect x="63.8448%" y="2069" width="0.0184%" height="15" fill="rgb(243,63,36)" fg:x="12863830045" fg:w="3712045"/><text x="64.0948%" y="2079.50"></text></g><g><title>[unknown] (4,151,024 samples, 0.02%)</title><rect x="63.8636%" y="2053" width="0.0206%" height="15" fill="rgb(211,180,12)" fg:x="12867616883" fg:w="4151024"/><text x="64.1136%" y="2063.50"></text></g><g><title>ppoll (2,303,616 samples, 0.01%)</title><rect x="63.8886%" y="2053" width="0.0114%" height="15" fill="rgb(254,166,49)" fg:x="12872641469" fg:w="2303616"/><text x="64.1386%" y="2063.50"></text></g><g><title>entry_SYSCALL_64 (2,041,092 samples, 0.01%)</title><rect x="63.8899%" y="2037" width="0.0101%" height="15" fill="rgb(205,19,0)" fg:x="12872903993" fg:w="2041092"/><text x="64.1399%" y="2047.50"></text></g><g><title>do_syscall_64 (2,041,092 samples, 0.01%)</title><rect x="63.8899%" y="2021" width="0.0101%" height="15" fill="rgb(224,172,32)" fg:x="12872903993" fg:w="2041092"/><text x="64.1399%" y="2031.50"></text></g><g><title>sshd (8,414,586 samples, 0.04%)</title><rect x="63.8633%" y="2069" width="0.0418%" height="15" fill="rgb(254,136,30)" fg:x="12867542090" fg:w="8414586"/><text x="64.1133%" y="2079.50"></text></g><g><title>[unknown] (3,158,524 samples, 0.02%)</title><rect x="63.9287%" y="2037" width="0.0157%" height="15" fill="rgb(246,19,35)" fg:x="12880720276" fg:w="3158524"/><text x="64.1787%" y="2047.50"></text></g><g><title>[unknown] (23,568,663 samples, 0.12%)</title><rect x="63.9194%" y="2053" width="0.1170%" height="15" fill="rgb(219,24,36)" fg:x="12878846594" fg:w="23568663"/><text x="64.1694%" y="2063.50"></text></g><g><title>copy_mm (3,295,146 samples, 0.02%)</title><rect x="64.0363%" y="1957" width="0.0164%" height="15" fill="rgb(251,55,1)" fg:x="12902415257" fg:w="3295146"/><text x="64.2863%" y="1967.50"></text></g><g><title>dup_mmap (3,295,146 samples, 0.02%)</title><rect x="64.0363%" y="1941" width="0.0164%" height="15" fill="rgb(218,117,39)" fg:x="12902415257" fg:w="3295146"/><text x="64.2863%" y="1951.50"></text></g><g><title>_Fork (4,004,712 samples, 0.02%)</title><rect x="64.0363%" y="2053" width="0.0199%" height="15" fill="rgb(248,169,11)" fg:x="12902415257" fg:w="4004712"/><text x="64.2863%" y="2063.50"></text></g><g><title>entry_SYSCALL_64 (4,004,712 samples, 0.02%)</title><rect x="64.0363%" y="2037" width="0.0199%" height="15" fill="rgb(244,40,44)" fg:x="12902415257" fg:w="4004712"/><text x="64.2863%" y="2047.50"></text></g><g><title>do_syscall_64 (4,004,712 samples, 0.02%)</title><rect x="64.0363%" y="2021" width="0.0199%" height="15" fill="rgb(234,62,37)" fg:x="12902415257" fg:w="4004712"/><text x="64.2863%" y="2031.50"></text></g><g><title>__x64_sys_clone (4,004,712 samples, 0.02%)</title><rect x="64.0363%" y="2005" width="0.0199%" height="15" fill="rgb(207,117,42)" fg:x="12902415257" fg:w="4004712"/><text x="64.2863%" y="2015.50"></text></g><g><title>kernel_clone (4,004,712 samples, 0.02%)</title><rect x="64.0363%" y="1989" width="0.0199%" height="15" fill="rgb(213,43,2)" fg:x="12902415257" fg:w="4004712"/><text x="64.2863%" y="1999.50"></text></g><g><title>copy_process (4,004,712 samples, 0.02%)</title><rect x="64.0363%" y="1973" width="0.0199%" height="15" fill="rgb(244,202,51)" fg:x="12902415257" fg:w="4004712"/><text x="64.2863%" y="1983.50"></text></g><g><title>do_mmap (2,362,706 samples, 0.01%)</title><rect x="64.1302%" y="1941" width="0.0117%" height="15" fill="rgb(253,174,46)" fg:x="12921328976" fg:w="2362706"/><text x="64.3802%" y="1951.50"></text></g><g><title>mmap_region (2,362,706 samples, 0.01%)</title><rect x="64.1302%" y="1925" width="0.0117%" height="15" fill="rgb(251,23,1)" fg:x="12921328976" fg:w="2362706"/><text x="64.3802%" y="1935.50"></text></g><g><title>entry_SYSCALL_64 (3,615,048 samples, 0.02%)</title><rect x="64.1272%" y="2021" width="0.0179%" height="15" fill="rgb(253,26,1)" fg:x="12920731135" fg:w="3615048"/><text x="64.3772%" y="2031.50"></text></g><g><title>do_syscall_64 (3,017,207 samples, 0.01%)</title><rect x="64.1302%" y="2005" width="0.0150%" height="15" fill="rgb(216,89,31)" fg:x="12921328976" fg:w="3017207"/><text x="64.3802%" y="2015.50"></text></g><g><title>__x64_sys_mmap (3,017,207 samples, 0.01%)</title><rect x="64.1302%" y="1989" width="0.0150%" height="15" fill="rgb(209,109,5)" fg:x="12921328976" fg:w="3017207"/><text x="64.3802%" y="1999.50"></text></g><g><title>ksys_mmap_pgoff (3,017,207 samples, 0.01%)</title><rect x="64.1302%" y="1973" width="0.0150%" height="15" fill="rgb(229,63,13)" fg:x="12921328976" fg:w="3017207"/><text x="64.3802%" y="1983.50"></text></g><g><title>vm_mmap_pgoff (3,017,207 samples, 0.01%)</title><rect x="64.1302%" y="1957" width="0.0150%" height="15" fill="rgb(238,137,54)" fg:x="12921328976" fg:w="3017207"/><text x="64.3802%" y="1967.50"></text></g><g><title>mmap64 (4,978,543 samples, 0.02%)</title><rect x="64.1272%" y="2037" width="0.0247%" height="15" fill="rgb(228,1,9)" fg:x="12920731135" fg:w="4978543"/><text x="64.3772%" y="2047.50"></text></g><g><title>_dl_map_object (11,710,095 samples, 0.06%)</title><rect x="64.1001%" y="2053" width="0.0581%" height="15" fill="rgb(249,120,48)" fg:x="12915256630" fg:w="11710095"/><text x="64.3501%" y="2063.50"></text></g><g><title>do_lookup_x (2,993,545 samples, 0.01%)</title><rect x="64.1690%" y="2053" width="0.0149%" height="15" fill="rgb(209,72,36)" fg:x="12929135519" fg:w="2993545"/><text x="64.4190%" y="2063.50"></text></g><g><title>entry_SYSCALL_64 (2,197,988 samples, 0.01%)</title><rect x="64.1838%" y="2053" width="0.0109%" height="15" fill="rgb(247,98,49)" fg:x="12932129064" fg:w="2197988"/><text x="64.4338%" y="2063.50"></text></g><g><title>do_syscall_64 (2,197,988 samples, 0.01%)</title><rect x="64.1838%" y="2037" width="0.0109%" height="15" fill="rgb(233,75,36)" fg:x="12932129064" fg:w="2197988"/><text x="64.4338%" y="2047.50"></text></g><g><title>[vmlinux] (2,197,988 samples, 0.01%)</title><rect x="64.1838%" y="2021" width="0.0109%" height="15" fill="rgb(225,14,24)" fg:x="12932129064" fg:w="2197988"/><text x="64.4338%" y="2031.50"></text></g><g><title>[vmlinux] (2,197,988 samples, 0.01%)</title><rect x="64.1838%" y="2005" width="0.0109%" height="15" fill="rgb(237,193,20)" fg:x="12932129064" fg:w="2197988"/><text x="64.4338%" y="2015.50"></text></g><g><title>do_exit (2,197,988 samples, 0.01%)</title><rect x="64.1838%" y="1989" width="0.0109%" height="15" fill="rgb(239,122,19)" fg:x="12932129064" fg:w="2197988"/><text x="64.4338%" y="1999.50"></text></g><g><title>exit_mm (2,197,988 samples, 0.01%)</title><rect x="64.1838%" y="1973" width="0.0109%" height="15" fill="rgb(231,220,10)" fg:x="12932129064" fg:w="2197988"/><text x="64.4338%" y="1983.50"></text></g><g><title>mmput (2,197,988 samples, 0.01%)</title><rect x="64.1838%" y="1957" width="0.0109%" height="15" fill="rgb(220,66,15)" fg:x="12932129064" fg:w="2197988"/><text x="64.4338%" y="1967.50"></text></g><g><title>__mmput (2,197,988 samples, 0.01%)</title><rect x="64.1838%" y="1941" width="0.0109%" height="15" fill="rgb(215,171,52)" fg:x="12932129064" fg:w="2197988"/><text x="64.4338%" y="1951.50"></text></g><g><title>exit_mmap (2,197,988 samples, 0.01%)</title><rect x="64.1838%" y="1925" width="0.0109%" height="15" fill="rgb(241,169,50)" fg:x="12932129064" fg:w="2197988"/><text x="64.4338%" y="1935.50"></text></g><g><title>sudo (61,334,929 samples, 0.30%)</title><rect x="63.9050%" y="2069" width="0.3044%" height="15" fill="rgb(236,189,0)" fg:x="12875956676" fg:w="61334929"/><text x="64.1550%" y="2079.50"></text></g><g><title>__common_interrupt (30,601,255 samples, 0.15%)</title><rect x="64.2094%" y="2053" width="0.1519%" height="15" fill="rgb(217,147,20)" fg:x="12937291605" fg:w="30601255"/><text x="64.4594%" y="2063.50"></text></g><g><title>__sysvec_apic_timer_interrupt (21,666,599 samples, 0.11%)</title><rect x="64.3749%" y="2053" width="0.1075%" height="15" fill="rgb(206,188,39)" fg:x="12970627435" fg:w="21666599"/><text x="64.6249%" y="2063.50"></text></g><g><title>common_interrupt (7,671,926 samples, 0.04%)</title><rect x="64.4885%" y="2053" width="0.0381%" height="15" fill="rgb(227,118,25)" fg:x="12993526080" fg:w="7671926"/><text x="64.7385%" y="2063.50"></text></g><g><title>irq_enter_rcu (14,300,688 samples, 0.07%)</title><rect x="64.5300%" y="2053" width="0.0710%" height="15" fill="rgb(248,171,40)" fg:x="13001875090" fg:w="14300688"/><text x="64.7800%" y="2063.50"></text></g><g><title>__flush_smp_call_function_queue (2,178,691 samples, 0.01%)</title><rect x="64.7281%" y="1989" width="0.0108%" height="15" fill="rgb(251,90,54)" fg:x="13041800389" fg:w="2178691"/><text x="64.9781%" y="1999.50"></text></g><g><title>asm_common_interrupt (6,091,400 samples, 0.03%)</title><rect x="64.7607%" y="1973" width="0.0302%" height="15" fill="rgb(234,11,46)" fg:x="13048367919" fg:w="6091400"/><text x="65.0107%" y="1983.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (77,258,305 samples, 0.38%)</title><rect x="64.7909%" y="1973" width="0.3834%" height="15" fill="rgb(229,134,13)" fg:x="13054459319" fg:w="77258305"/><text x="65.0409%" y="1983.50"></text></g><g><title>asm_sysvec_call_function_single (610,046,375 samples, 3.03%)</title><rect x="65.1795%" y="1973" width="3.0277%" height="15" fill="rgb(223,129,3)" fg:x="13132743782" fg:w="610046375"/><text x="65.4295%" y="1983.50">asm..</text></g><g><title>asm_sysvec_reschedule_ipi (3,174,934 samples, 0.02%)</title><rect x="68.2072%" y="1973" width="0.0158%" height="15" fill="rgb(221,124,13)" fg:x="13742790157" fg:w="3174934"/><text x="68.4572%" y="1983.50"></text></g><g><title>common_interrupt (12,267,769 samples, 0.06%)</title><rect x="68.2230%" y="1973" width="0.0609%" height="15" fill="rgb(234,3,18)" fg:x="13745965091" fg:w="12267769"/><text x="68.4730%" y="1983.50"></text></g><g><title>acpi_processor_ffh_cstate_enter (28,788,823 samples, 0.14%)</title><rect x="68.5517%" y="1925" width="0.1429%" height="15" fill="rgb(249,199,20)" fg:x="13812188498" fg:w="28788823"/><text x="68.8017%" y="1935.50"></text></g><g><title>acpi_idle_enter (209,328,233 samples, 1.04%)</title><rect x="68.5387%" y="1957" width="1.0389%" height="15" fill="rgb(224,134,6)" fg:x="13809580794" fg:w="209328233"/><text x="68.7887%" y="1967.50"></text></g><g><title>acpi_idle_do_entry (207,197,707 samples, 1.03%)</title><rect x="68.5493%" y="1941" width="1.0283%" height="15" fill="rgb(254,83,26)" fg:x="13811711320" fg:w="207197707"/><text x="68.7993%" y="1951.50"></text></g><g><title>io_idle (177,931,706 samples, 0.88%)</title><rect x="68.6945%" y="1925" width="0.8831%" height="15" fill="rgb(217,88,9)" fg:x="13840977321" fg:w="177931706"/><text x="68.9445%" y="1935.50"></text></g><g><title>_raw_spin_lock (11,417,514 samples, 0.06%)</title><rect x="69.9857%" y="1909" width="0.0567%" height="15" fill="rgb(225,73,2)" fg:x="14101125213" fg:w="11417514"/><text x="70.2357%" y="1919.50"></text></g><g><title>__handle_irq_event_percpu (13,131,400 samples, 0.07%)</title><rect x="70.3577%" y="1893" width="0.0652%" height="15" fill="rgb(226,44,39)" fg:x="14176080077" fg:w="13131400"/><text x="70.6077%" y="1903.50"></text></g><g><title>_raw_spin_lock (8,921,152 samples, 0.04%)</title><rect x="70.4243%" y="1893" width="0.0443%" height="15" fill="rgb(228,53,17)" fg:x="14189493377" fg:w="8921152"/><text x="70.6743%" y="1903.50"></text></g><g><title>_raw_spin_unlock (7,727,349 samples, 0.04%)</title><rect x="70.4685%" y="1893" width="0.0384%" height="15" fill="rgb(212,27,27)" fg:x="14198414529" fg:w="7727349"/><text x="70.7185%" y="1903.50"></text></g><g><title>apic_ack_irq (28,316,695 samples, 0.14%)</title><rect x="70.5069%" y="1893" width="0.1405%" height="15" fill="rgb(241,50,6)" fg:x="14206141878" fg:w="28316695"/><text x="70.7569%" y="1903.50"></text></g><g><title>[tls.ko] (27,512,997 samples, 0.14%)</title><rect x="70.7014%" y="1877" width="0.1366%" height="15" fill="rgb(225,28,51)" fg:x="14245329533" fg:w="27512997"/><text x="70.9514%" y="1887.50"></text></g><g><title>blk_mq_complete_request (5,201,242 samples, 0.03%)</title><rect x="72.5060%" y="1717" width="0.0258%" height="15" fill="rgb(215,33,16)" fg:x="14608927976" fg:w="5201242"/><text x="72.7560%" y="1727.50"></text></g><g><title>blk_mq_complete_request_remote (5,201,242 samples, 0.03%)</title><rect x="72.5060%" y="1701" width="0.0258%" height="15" fill="rgb(243,40,39)" fg:x="14608927976" fg:w="5201242"/><text x="72.7560%" y="1711.50"></text></g><g><title>ata_scsi_qc_complete (6,022,979 samples, 0.03%)</title><rect x="72.5036%" y="1765" width="0.0299%" height="15" fill="rgb(225,11,42)" fg:x="14608450757" fg:w="6022979"/><text x="72.7536%" y="1775.50"></text></g><g><title>scsi_done (6,022,979 samples, 0.03%)</title><rect x="72.5036%" y="1749" width="0.0299%" height="15" fill="rgb(241,220,38)" fg:x="14608450757" fg:w="6022979"/><text x="72.7536%" y="1759.50"></text></g><g><title>scsi_done_internal (6,022,979 samples, 0.03%)</title><rect x="72.5036%" y="1733" width="0.0299%" height="15" fill="rgb(244,52,35)" fg:x="14608450757" fg:w="6022979"/><text x="72.7536%" y="1743.50"></text></g><g><title>iommu_v1_unmap_pages (4,222,749 samples, 0.02%)</title><rect x="72.5337%" y="1669" width="0.0210%" height="15" fill="rgb(246,42,46)" fg:x="14614504723" fg:w="4222749"/><text x="72.7837%" y="1679.50"></text></g><g><title>fetch_pte (2,964,041 samples, 0.01%)</title><rect x="72.5399%" y="1653" width="0.0147%" height="15" fill="rgb(205,184,13)" fg:x="14615763431" fg:w="2964041"/><text x="72.7899%" y="1663.50"></text></g><g><title>[tls.ko] (15,133,501 samples, 0.08%)</title><rect x="72.4803%" y="1829" width="0.0751%" height="15" fill="rgb(209,48,36)" fg:x="14603755956" fg:w="15133501"/><text x="72.7303%" y="1839.50"></text></g><g><title>ata_qc_complete_multiple (10,655,895 samples, 0.05%)</title><rect x="72.5025%" y="1813" width="0.0529%" height="15" fill="rgb(244,34,51)" fg:x="14608233562" fg:w="10655895"/><text x="72.7525%" y="1823.50"></text></g><g><title>ata_qc_complete (10,438,700 samples, 0.05%)</title><rect x="72.5036%" y="1797" width="0.0518%" height="15" fill="rgb(221,107,33)" fg:x="14608450757" fg:w="10438700"/><text x="72.7536%" y="1807.50"></text></g><g><title>__ata_qc_complete (10,438,700 samples, 0.05%)</title><rect x="72.5036%" y="1781" width="0.0518%" height="15" fill="rgb(224,203,12)" fg:x="14608450757" fg:w="10438700"/><text x="72.7536%" y="1791.50"></text></g><g><title>dma_unmap_sg_attrs (4,415,721 samples, 0.02%)</title><rect x="72.5335%" y="1765" width="0.0219%" height="15" fill="rgb(230,215,18)" fg:x="14614473736" fg:w="4415721"/><text x="72.7835%" y="1775.50"></text></g><g><title>iommu_dma_unmap_sg (4,415,721 samples, 0.02%)</title><rect x="72.5335%" y="1749" width="0.0219%" height="15" fill="rgb(206,185,35)" fg:x="14614473736" fg:w="4415721"/><text x="72.7835%" y="1759.50"></text></g><g><title>__iommu_dma_unmap (4,415,721 samples, 0.02%)</title><rect x="72.5335%" y="1733" width="0.0219%" height="15" fill="rgb(228,140,34)" fg:x="14614473736" fg:w="4415721"/><text x="72.7835%" y="1743.50"></text></g><g><title>iommu_unmap_fast (4,415,721 samples, 0.02%)</title><rect x="72.5335%" y="1717" width="0.0219%" height="15" fill="rgb(208,93,13)" fg:x="14614473736" fg:w="4415721"/><text x="72.7835%" y="1727.50"></text></g><g><title>__iommu_unmap (4,415,721 samples, 0.02%)</title><rect x="72.5335%" y="1701" width="0.0219%" height="15" fill="rgb(221,193,39)" fg:x="14614473736" fg:w="4415721"/><text x="72.7835%" y="1711.50"></text></g><g><title>amd_iommu_unmap_pages (4,384,734 samples, 0.02%)</title><rect x="72.5337%" y="1685" width="0.0218%" height="15" fill="rgb(241,132,34)" fg:x="14614504723" fg:w="4384734"/><text x="72.7837%" y="1695.50"></text></g><g><title>[tls.ko] (15,858,154 samples, 0.08%)</title><rect x="72.4803%" y="1845" width="0.0787%" height="15" fill="rgb(221,141,10)" fg:x="14603755956" fg:w="15858154"/><text x="72.7303%" y="1855.50"></text></g><g><title>[tls.ko] (337,447,456 samples, 1.67%)</title><rect x="70.8899%" y="1861" width="1.6748%" height="15" fill="rgb(226,90,31)" fg:x="14283307422" fg:w="337447456"/><text x="71.1399%" y="1871.50"></text></g><g><title>__handle_irq_event_percpu (352,857,761 samples, 1.75%)</title><rect x="70.8379%" y="1877" width="1.7513%" height="15" fill="rgb(243,75,5)" fg:x="14272842530" fg:w="352857761"/><text x="71.0879%" y="1887.50"></text></g><g><title>irq_int_handler (4,945,413 samples, 0.02%)</title><rect x="72.5647%" y="1861" width="0.0245%" height="15" fill="rgb(227,156,21)" fg:x="14620754878" fg:w="4945413"/><text x="72.8147%" y="1871.50"></text></g><g><title>atomic_notifier_call_chain (4,751,989 samples, 0.02%)</title><rect x="72.5656%" y="1845" width="0.0236%" height="15" fill="rgb(250,195,8)" fg:x="14620948302" fg:w="4751989"/><text x="72.8156%" y="1855.50"></text></g><g><title>notifier_call_chain (4,231,710 samples, 0.02%)</title><rect x="72.5682%" y="1829" width="0.0210%" height="15" fill="rgb(220,134,5)" fg:x="14621468581" fg:w="4231710"/><text x="72.8182%" y="1839.50"></text></g><g><title>mlx5_eq_comp_int (4,231,710 samples, 0.02%)</title><rect x="72.5682%" y="1813" width="0.0210%" height="15" fill="rgb(246,106,34)" fg:x="14621468581" fg:w="4231710"/><text x="72.8182%" y="1823.50"></text></g><g><title>_raw_spin_unlock (15,873,355 samples, 0.08%)</title><rect x="72.5975%" y="1877" width="0.0788%" height="15" fill="rgb(205,1,4)" fg:x="14627365282" fg:w="15873355"/><text x="72.8475%" y="1887.50"></text></g><g><title>handle_irq_event (409,613,761 samples, 2.03%)</title><rect x="70.6474%" y="1893" width="2.0330%" height="15" fill="rgb(224,151,29)" fg:x="14234458573" fg:w="409613761"/><text x="70.8974%" y="1903.50">h..</text></g><g><title>apic_ack_irq (11,873,571 samples, 0.06%)</title><rect x="72.8621%" y="1877" width="0.0589%" height="15" fill="rgb(251,196,0)" fg:x="14680687959" fg:w="11873571"/><text x="73.1121%" y="1887.50"></text></g><g><title>native_apic_mem_eoi (2,316,255 samples, 0.01%)</title><rect x="72.9096%" y="1861" width="0.0115%" height="15" fill="rgb(212,127,0)" fg:x="14690245275" fg:w="2316255"/><text x="73.1596%" y="1871.50"></text></g><g><title>handle_edge_irq (592,980,142 samples, 2.94%)</title><rect x="70.0424%" y="1909" width="2.9430%" height="15" fill="rgb(236,71,53)" fg:x="14112542727" fg:w="592980142"/><text x="70.2924%" y="1919.50">ha..</text></g><g><title>irq_chip_ack_parent (61,450,535 samples, 0.30%)</title><rect x="72.6804%" y="1893" width="0.3050%" height="15" fill="rgb(227,99,0)" fg:x="14644072334" fg:w="61450535"/><text x="72.9304%" y="1903.50"></text></g><g><title>native_apic_mem_eoi (12,961,339 samples, 0.06%)</title><rect x="72.9211%" y="1877" width="0.0643%" height="15" fill="rgb(239,89,21)" fg:x="14692561530" fg:w="12961339"/><text x="73.1711%" y="1887.50"></text></g><g><title>handle_irq_event (23,708,282 samples, 0.12%)</title><rect x="72.9854%" y="1909" width="0.1177%" height="15" fill="rgb(243,122,19)" fg:x="14705522869" fg:w="23708282"/><text x="73.2354%" y="1919.50"></text></g><g><title>__common_interrupt (707,237,001 samples, 3.51%)</title><rect x="69.7095%" y="1925" width="3.5101%" height="15" fill="rgb(229,192,45)" fg:x="14045476291" fg:w="707237001"/><text x="69.9595%" y="1935.50">__c..</text></g><g><title>irq_chip_ack_parent (23,482,141 samples, 0.12%)</title><rect x="73.1031%" y="1909" width="0.1165%" height="15" fill="rgb(235,165,35)" fg:x="14729231151" fg:w="23482141"/><text x="73.3531%" y="1919.50"></text></g><g><title>ct_irq_enter (13,546,216 samples, 0.07%)</title><rect x="73.2222%" y="1925" width="0.0672%" height="15" fill="rgb(253,202,0)" fg:x="14753243900" fg:w="13546216"/><text x="73.4722%" y="1935.50"></text></g><g><title>handle_edge_irq (32,140,462 samples, 0.16%)</title><rect x="73.2895%" y="1925" width="0.1595%" height="15" fill="rgb(235,51,20)" fg:x="14766790116" fg:w="32140462"/><text x="73.5395%" y="1935.50"></text></g><g><title>ktime_get (5,646,027 samples, 0.03%)</title><rect x="73.4997%" y="1909" width="0.0280%" height="15" fill="rgb(218,95,46)" fg:x="14809154810" fg:w="5646027"/><text x="73.7497%" y="1919.50"></text></g><g><title>nr_iowait_cpu (6,048,421 samples, 0.03%)</title><rect x="73.5277%" y="1909" width="0.0300%" height="15" fill="rgb(212,81,10)" fg:x="14814800837" fg:w="6048421"/><text x="73.7777%" y="1919.50"></text></g><g><title>tick_check_oneshot_broadcast_this_cpu (14,632,390 samples, 0.07%)</title><rect x="73.5671%" y="1909" width="0.0726%" height="15" fill="rgb(240,59,0)" fg:x="14822732107" fg:w="14632390"/><text x="73.8171%" y="1919.50"></text></g><g><title>ktime_get (100,861,558 samples, 0.50%)</title><rect x="73.9007%" y="1893" width="0.5006%" height="15" fill="rgb(212,191,42)" fg:x="14889943637" fg:w="100861558"/><text x="74.1507%" y="1903.50"></text></g><g><title>read_tsc (72,966,523 samples, 0.36%)</title><rect x="74.0391%" y="1877" width="0.3621%" height="15" fill="rgb(233,140,3)" fg:x="14917838672" fg:w="72966523"/><text x="74.2891%" y="1887.50"></text></g><g><title>nr_iowait_cpu (26,189,538 samples, 0.13%)</title><rect x="74.4013%" y="1893" width="0.1300%" height="15" fill="rgb(215,69,23)" fg:x="14990805195" fg:w="26189538"/><text x="74.6513%" y="1903.50"></text></g><g><title>read_tsc (25,649,835 samples, 0.13%)</title><rect x="74.5313%" y="1893" width="0.1273%" height="15" fill="rgb(240,202,20)" fg:x="15016994733" fg:w="25649835"/><text x="74.7813%" y="1903.50"></text></g><g><title>sched_clock_idle_wakeup_event (2,043,075 samples, 0.01%)</title><rect x="74.6586%" y="1893" width="0.0101%" height="15" fill="rgb(209,146,50)" fg:x="15042644568" fg:w="2043075"/><text x="74.9086%" y="1903.50"></text></g><g><title>tick_check_oneshot_broadcast_this_cpu (207,485,049 samples, 1.03%)</title><rect x="74.6687%" y="1893" width="1.0298%" height="15" fill="rgb(253,102,54)" fg:x="15044687643" fg:w="207485049"/><text x="74.9187%" y="1903.50"></text></g><g><title>tick_do_update_jiffies64 (11,583,754 samples, 0.06%)</title><rect x="75.6985%" y="1893" width="0.0575%" height="15" fill="rgb(250,173,47)" fg:x="15252172692" fg:w="11583754"/><text x="75.9485%" y="1903.50"></text></g><g><title>tick_irq_enter (426,755,036 samples, 2.12%)</title><rect x="73.6439%" y="1909" width="2.1180%" height="15" fill="rgb(232,142,7)" fg:x="14838202135" fg:w="426755036"/><text x="73.8939%" y="1919.50">t..</text></g><g><title>irq_enter_rcu (468,020,624 samples, 2.32%)</title><rect x="73.4490%" y="1925" width="2.3228%" height="15" fill="rgb(230,157,47)" fg:x="14798930578" fg:w="468020624"/><text x="73.6990%" y="1935.50">i..</text></g><g><title>__blk_mq_end_request (3,306,114 samples, 0.02%)</title><rect x="75.7892%" y="1813" width="0.0164%" height="15" fill="rgb(214,177,35)" fg:x="15270460449" fg:w="3306114"/><text x="76.0392%" y="1823.50"></text></g><g><title>_raw_spin_lock_irqsave (2,144,496 samples, 0.01%)</title><rect x="75.8182%" y="1749" width="0.0106%" height="15" fill="rgb(234,119,46)" fg:x="15276303039" fg:w="2144496"/><text x="76.0682%" y="1759.50"></text></g><g><title>__folio_end_writeback (2,886,492 samples, 0.01%)</title><rect x="75.8317%" y="1733" width="0.0143%" height="15" fill="rgb(241,180,50)" fg:x="15279007267" fg:w="2886492"/><text x="76.0817%" y="1743.50"></text></g><g><title>ext4_end_bio (7,701,072 samples, 0.04%)</title><rect x="75.8131%" y="1781" width="0.0382%" height="15" fill="rgb(221,54,25)" fg:x="15275263509" fg:w="7701072"/><text x="76.0631%" y="1791.50"></text></g><g><title>ext4_finish_bio (7,701,072 samples, 0.04%)</title><rect x="75.8131%" y="1765" width="0.0382%" height="15" fill="rgb(209,157,44)" fg:x="15275263509" fg:w="7701072"/><text x="76.0631%" y="1775.50"></text></g><g><title>folio_end_writeback (4,517,046 samples, 0.02%)</title><rect x="75.8289%" y="1749" width="0.0224%" height="15" fill="rgb(246,115,41)" fg:x="15278447535" fg:w="4517046"/><text x="76.0789%" y="1759.50"></text></g><g><title>bio_endio (11,036,550 samples, 0.05%)</title><rect x="75.8089%" y="1797" width="0.0548%" height="15" fill="rgb(229,86,1)" fg:x="15274416197" fg:w="11036550"/><text x="76.0589%" y="1807.50"></text></g><g><title>mpage_end_io (2,488,166 samples, 0.01%)</title><rect x="75.8513%" y="1781" width="0.0123%" height="15" fill="rgb(240,108,53)" fg:x="15282964581" fg:w="2488166"/><text x="76.1013%" y="1791.50"></text></g><g><title>__read_end_io (2,488,166 samples, 0.01%)</title><rect x="75.8513%" y="1765" width="0.0123%" height="15" fill="rgb(227,134,2)" fg:x="15282964581" fg:w="2488166"/><text x="76.1013%" y="1775.50"></text></g><g><title>folio_unlock (2,084,657 samples, 0.01%)</title><rect x="75.8533%" y="1749" width="0.0103%" height="15" fill="rgb(213,129,25)" fg:x="15283368090" fg:w="2084657"/><text x="76.1033%" y="1759.50"></text></g><g><title>folio_wake_bit (2,084,657 samples, 0.01%)</title><rect x="75.8533%" y="1733" width="0.0103%" height="15" fill="rgb(226,35,21)" fg:x="15283368090" fg:w="2084657"/><text x="76.1033%" y="1743.50"></text></g><g><title>__wake_up_locked_key_bookmark (2,084,657 samples, 0.01%)</title><rect x="75.8533%" y="1717" width="0.0103%" height="15" fill="rgb(208,129,26)" fg:x="15283368090" fg:w="2084657"/><text x="76.1033%" y="1727.50"></text></g><g><title>wake_page_function (2,084,657 samples, 0.01%)</title><rect x="75.8533%" y="1701" width="0.0103%" height="15" fill="rgb(224,83,6)" fg:x="15283368090" fg:w="2084657"/><text x="76.1033%" y="1711.50"></text></g><g><title>wake_up_state (2,084,657 samples, 0.01%)</title><rect x="75.8533%" y="1685" width="0.0103%" height="15" fill="rgb(227,52,39)" fg:x="15283368090" fg:w="2084657"/><text x="76.1033%" y="1695.50"></text></g><g><title>try_to_wake_up (2,084,657 samples, 0.01%)</title><rect x="75.8533%" y="1669" width="0.0103%" height="15" fill="rgb(241,30,17)" fg:x="15283368090" fg:w="2084657"/><text x="76.1033%" y="1679.50"></text></g><g><title>blk_update_request (11,090,265 samples, 0.06%)</title><rect x="75.8089%" y="1813" width="0.0550%" height="15" fill="rgb(246,186,42)" fg:x="15274416197" fg:w="11090265"/><text x="76.0589%" y="1823.50"></text></g><g><title>blk_done_softirq (18,349,816 samples, 0.09%)</title><rect x="75.7740%" y="1893" width="0.0911%" height="15" fill="rgb(221,169,15)" fg:x="15267380804" fg:w="18349816"/><text x="76.0240%" y="1903.50"></text></g><g><title>scsi_complete (18,349,816 samples, 0.09%)</title><rect x="75.7740%" y="1877" width="0.0911%" height="15" fill="rgb(235,108,21)" fg:x="15267380804" fg:w="18349816"/><text x="76.0240%" y="1887.50"></text></g><g><title>scsi_finish_command (17,574,335 samples, 0.09%)</title><rect x="75.7778%" y="1861" width="0.0872%" height="15" fill="rgb(219,148,30)" fg:x="15268156285" fg:w="17574335"/><text x="76.0278%" y="1871.50"></text></g><g><title>scsi_io_completion (15,270,171 samples, 0.08%)</title><rect x="75.7892%" y="1845" width="0.0758%" height="15" fill="rgb(220,109,5)" fg:x="15270460449" fg:w="15270171"/><text x="76.0392%" y="1855.50"></text></g><g><title>scsi_end_request (15,270,171 samples, 0.08%)</title><rect x="75.7892%" y="1829" width="0.0758%" height="15" fill="rgb(213,203,48)" fg:x="15270460449" fg:w="15270171"/><text x="76.0392%" y="1839.50"></text></g><g><title>__kprobes_text_end (19,522,061 samples, 0.10%)</title><rect x="75.7718%" y="1909" width="0.0969%" height="15" fill="rgb(244,71,33)" fg:x="15266951202" fg:w="19522061"/><text x="76.0218%" y="1919.50"></text></g><g><title>irq_exit_rcu (20,999,869 samples, 0.10%)</title><rect x="75.7718%" y="1925" width="0.1042%" height="15" fill="rgb(209,23,2)" fg:x="15266951202" fg:w="20999869"/><text x="76.0218%" y="1935.50"></text></g><g><title>ct_irq_enter (9,926,851 samples, 0.05%)</title><rect x="76.0007%" y="1909" width="0.0493%" height="15" fill="rgb(219,97,7)" fg:x="15313073224" fg:w="9926851"/><text x="76.2507%" y="1919.50"></text></g><g><title>ct_nmi_enter (8,934,287 samples, 0.04%)</title><rect x="76.0057%" y="1893" width="0.0443%" height="15" fill="rgb(216,161,23)" fg:x="15314065788" fg:w="8934287"/><text x="76.2557%" y="1903.50"></text></g><g><title>irqentry_enter (39,122,270 samples, 0.19%)</title><rect x="75.8761%" y="1925" width="0.1942%" height="15" fill="rgb(207,45,42)" fg:x="15287951071" fg:w="39122270"/><text x="76.1261%" y="1935.50"></text></g><g><title>ct_nmi_enter (4,073,266 samples, 0.02%)</title><rect x="76.0500%" y="1909" width="0.0202%" height="15" fill="rgb(241,61,4)" fg:x="15323000075" fg:w="4073266"/><text x="76.3000%" y="1919.50"></text></g><g><title>common_interrupt (1,312,155,414 samples, 6.51%)</title><rect x="69.5776%" y="1941" width="6.5124%" height="15" fill="rgb(236,170,1)" fg:x="14018909027" fg:w="1312155414"/><text x="69.8276%" y="1951.50">common_in..</text></g><g><title>tick_irq_enter (3,991,100 samples, 0.02%)</title><rect x="76.0702%" y="1925" width="0.0198%" height="15" fill="rgb(239,72,5)" fg:x="15327073341" fg:w="3991100"/><text x="76.3202%" y="1935.50"></text></g><g><title>irqentry_enter (7,938,926 samples, 0.04%)</title><rect x="76.0900%" y="1941" width="0.0394%" height="15" fill="rgb(214,13,50)" fg:x="15331064441" fg:w="7938926"/><text x="76.3400%" y="1951.50"></text></g><g><title>asm_common_interrupt (1,320,366,357 samples, 6.55%)</title><rect x="69.5776%" y="1957" width="6.5531%" height="15" fill="rgb(224,88,9)" fg:x="14018909027" fg:w="1320366357"/><text x="69.8276%" y="1967.50">asm_commo..</text></g><g><title>irqentry_enter (13,840,848 samples, 0.07%)</title><rect x="76.1308%" y="1941" width="0.0687%" height="15" fill="rgb(238,192,34)" fg:x="15339275384" fg:w="13840848"/><text x="76.3808%" y="1951.50"></text></g><g><title>_raw_spin_lock_irqsave (17,929,809 samples, 0.09%)</title><rect x="76.4666%" y="1909" width="0.0890%" height="15" fill="rgb(217,203,50)" fg:x="15406928031" fg:w="17929809"/><text x="76.7166%" y="1919.50"></text></g><g><title>ktime_get (3,333,113 samples, 0.02%)</title><rect x="76.6650%" y="1845" width="0.0165%" height="15" fill="rgb(241,123,32)" fg:x="15446908949" fg:w="3333113"/><text x="76.9150%" y="1855.50"></text></g><g><title>tick_do_update_jiffies64 (2,924,566 samples, 0.01%)</title><rect x="76.6852%" y="1845" width="0.0145%" height="15" fill="rgb(248,151,39)" fg:x="15450979597" fg:w="2924566"/><text x="76.9352%" y="1855.50"></text></g><g><title>tick_sched_timer (14,744,075 samples, 0.07%)</title><rect x="76.6555%" y="1861" width="0.0732%" height="15" fill="rgb(208,89,6)" fg:x="15445001371" fg:w="14744075"/><text x="76.9055%" y="1871.50"></text></g><g><title>update_process_times (5,841,283 samples, 0.03%)</title><rect x="76.6997%" y="1845" width="0.0290%" height="15" fill="rgb(254,43,26)" fg:x="15453904163" fg:w="5841283"/><text x="76.9497%" y="1855.50"></text></g><g><title>scheduler_tick (3,618,764 samples, 0.02%)</title><rect x="76.7107%" y="1829" width="0.0180%" height="15" fill="rgb(216,158,13)" fg:x="15456126682" fg:w="3618764"/><text x="76.9607%" y="1839.50"></text></g><g><title>rb_erase (2,161,088 samples, 0.01%)</title><rect x="76.7415%" y="1845" width="0.0107%" height="15" fill="rgb(212,47,37)" fg:x="15462319579" fg:w="2161088"/><text x="76.9915%" y="1855.50"></text></g><g><title>timerqueue_del (5,830,527 samples, 0.03%)</title><rect x="76.7287%" y="1861" width="0.0289%" height="15" fill="rgb(254,16,10)" fg:x="15459745446" fg:w="5830527"/><text x="76.9787%" y="1871.50"></text></g><g><title>__run_hrtimer (23,803,119 samples, 0.12%)</title><rect x="76.6427%" y="1877" width="0.1181%" height="15" fill="rgb(223,228,16)" fg:x="15442422175" fg:w="23803119"/><text x="76.8927%" y="1887.50"></text></g><g><title>__hrtimer_run_queues (29,817,176 samples, 0.15%)</title><rect x="76.6250%" y="1893" width="0.1480%" height="15" fill="rgb(249,108,50)" fg:x="15438846494" fg:w="29817176"/><text x="76.8750%" y="1903.50"></text></g><g><title>__run_hrtimer (5,360,553 samples, 0.03%)</title><rect x="76.7730%" y="1893" width="0.0266%" height="15" fill="rgb(208,220,5)" fg:x="15468663670" fg:w="5360553"/><text x="77.0230%" y="1903.50"></text></g><g><title>__x86_indirect_thunk_r11 (10,411,054 samples, 0.05%)</title><rect x="76.7996%" y="1893" width="0.0517%" height="15" fill="rgb(217,89,48)" fg:x="15474024223" fg:w="10411054"/><text x="77.0496%" y="1903.50"></text></g><g><title>_raw_spin_lock_irqsave (26,719,043 samples, 0.13%)</title><rect x="76.8512%" y="1893" width="0.1326%" height="15" fill="rgb(212,113,41)" fg:x="15484435277" fg:w="26719043"/><text x="77.1012%" y="1903.50"></text></g><g><title>ktime_get_update_offsets_now (174,306,722 samples, 0.87%)</title><rect x="76.9838%" y="1893" width="0.8651%" height="15" fill="rgb(231,127,5)" fg:x="15511154320" fg:w="174306722"/><text x="77.2338%" y="1903.50"></text></g><g><title>read_tsc (140,263,625 samples, 0.70%)</title><rect x="77.1528%" y="1877" width="0.6961%" height="15" fill="rgb(217,141,17)" fg:x="15545197417" fg:w="140263625"/><text x="77.4028%" y="1887.50"></text></g><g><title>read_tsc (11,984,798 samples, 0.06%)</title><rect x="77.8489%" y="1893" width="0.0595%" height="15" fill="rgb(245,125,54)" fg:x="15685461042" fg:w="11984798"/><text x="78.0989%" y="1903.50"></text></g><g><title>hrtimer_interrupt (273,130,784 samples, 1.36%)</title><rect x="76.5555%" y="1909" width="1.3556%" height="15" fill="rgb(248,125,3)" fg:x="15424857840" fg:w="273130784"/><text x="76.8055%" y="1919.50"></text></g><g><title>ktime_get_update_offsets_now (19,310,333 samples, 0.10%)</title><rect x="77.9111%" y="1909" width="0.0958%" height="15" fill="rgb(236,119,51)" fg:x="15697988624" fg:w="19310333"/><text x="78.1611%" y="1919.50"></text></g><g><title>__sysvec_apic_timer_interrupt (332,386,912 samples, 1.65%)</title><rect x="76.3611%" y="1925" width="1.6497%" height="15" fill="rgb(239,99,8)" fg:x="15385672031" fg:w="332386912"/><text x="76.6111%" y="1935.50"></text></g><g><title>__x86_indirect_thunk_r11 (5,500,165 samples, 0.03%)</title><rect x="78.0107%" y="1925" width="0.0273%" height="15" fill="rgb(224,228,4)" fg:x="15718058943" fg:w="5500165"/><text x="78.2607%" y="1935.50"></text></g><g><title>ct_irq_enter (12,547,055 samples, 0.06%)</title><rect x="78.0380%" y="1925" width="0.0623%" height="15" fill="rgb(220,131,45)" fg:x="15723559108" fg:w="12547055"/><text x="78.2880%" y="1935.50"></text></g><g><title>hrtimer_interrupt (23,749,176 samples, 0.12%)</title><rect x="78.1008%" y="1925" width="0.1179%" height="15" fill="rgb(215,62,5)" fg:x="15736204063" fg:w="23749176"/><text x="78.3508%" y="1935.50"></text></g><g><title>ktime_get (5,675,180 samples, 0.03%)</title><rect x="78.2876%" y="1909" width="0.0282%" height="15" fill="rgb(253,12,24)" fg:x="15773843106" fg:w="5675180"/><text x="78.5376%" y="1919.50"></text></g><g><title>nr_iowait_cpu (8,589,470 samples, 0.04%)</title><rect x="78.3158%" y="1909" width="0.0426%" height="15" fill="rgb(248,120,50)" fg:x="15779518286" fg:w="8589470"/><text x="78.5658%" y="1919.50"></text></g><g><title>tick_check_oneshot_broadcast_this_cpu (15,791,471 samples, 0.08%)</title><rect x="78.3617%" y="1909" width="0.0784%" height="15" fill="rgb(245,194,10)" fg:x="15788773852" fg:w="15791471"/><text x="78.6117%" y="1919.50"></text></g><g><title>__x86_indirect_thunk_r11 (2,943,874 samples, 0.01%)</title><rect x="78.6978%" y="1893" width="0.0146%" height="15" fill="rgb(241,149,38)" fg:x="15856489805" fg:w="2943874"/><text x="78.9478%" y="1903.50"></text></g><g><title>ktime_get (68,687,833 samples, 0.34%)</title><rect x="78.7124%" y="1893" width="0.3409%" height="15" fill="rgb(219,215,7)" fg:x="15859433679" fg:w="68687833"/><text x="78.9624%" y="1903.50"></text></g><g><title>read_tsc (48,768,309 samples, 0.24%)</title><rect x="78.8113%" y="1877" width="0.2420%" height="15" fill="rgb(208,120,31)" fg:x="15879353203" fg:w="48768309"/><text x="79.0613%" y="1887.50"></text></g><g><title>nr_iowait_cpu (27,012,715 samples, 0.13%)</title><rect x="79.0533%" y="1893" width="0.1341%" height="15" fill="rgb(244,30,8)" fg:x="15928121512" fg:w="27012715"/><text x="79.3033%" y="1903.50"></text></g><g><title>read_tsc (19,079,615 samples, 0.09%)</title><rect x="79.1874%" y="1893" width="0.0947%" height="15" fill="rgb(238,35,44)" fg:x="15955134227" fg:w="19079615"/><text x="79.4374%" y="1903.50"></text></g><g><title>sched_clock_idle_wakeup_event (2,479,911 samples, 0.01%)</title><rect x="79.2821%" y="1893" width="0.0123%" height="15" fill="rgb(243,218,37)" fg:x="15974213842" fg:w="2479911"/><text x="79.5321%" y="1903.50"></text></g><g><title>tick_check_oneshot_broadcast_this_cpu (159,336,194 samples, 0.79%)</title><rect x="79.2944%" y="1893" width="0.7908%" height="15" fill="rgb(218,169,10)" fg:x="15976693753" fg:w="159336194"/><text x="79.5444%" y="1903.50"></text></g><g><title>_raw_spin_lock (3,059,691 samples, 0.02%)</title><rect x="80.1014%" y="1877" width="0.0152%" height="15" fill="rgb(221,144,10)" fg:x="16139298062" fg:w="3059691"/><text x="80.3514%" y="1887.50"></text></g><g><title>irq_enter_rcu (383,442,059 samples, 1.90%)</title><rect x="78.2187%" y="1925" width="1.9031%" height="15" fill="rgb(226,41,38)" fg:x="15759953239" fg:w="383442059"/><text x="78.4687%" y="1935.50">i..</text></g><g><title>tick_irq_enter (338,829,975 samples, 1.68%)</title><rect x="78.4401%" y="1909" width="1.6817%" height="15" fill="rgb(228,3,1)" fg:x="15804565323" fg:w="338829975"/><text x="78.6901%" y="1919.50"></text></g><g><title>tick_do_update_jiffies64 (7,365,351 samples, 0.04%)</title><rect x="80.0852%" y="1893" width="0.0366%" height="15" fill="rgb(209,129,12)" fg:x="16136029947" fg:w="7365351"/><text x="80.3352%" y="1903.50"></text></g><g><title>rcu_core (5,465,032 samples, 0.03%)</title><rect x="80.1249%" y="1877" width="0.0271%" height="15" fill="rgb(213,136,33)" fg:x="16144027590" fg:w="5465032"/><text x="80.3749%" y="1887.50"></text></g><g><title>rcu_core_si (5,613,275 samples, 0.03%)</title><rect x="80.1249%" y="1893" width="0.0279%" height="15" fill="rgb(209,181,29)" fg:x="16144027590" fg:w="5613275"/><text x="80.3749%" y="1903.50"></text></g><g><title>rebalance_domains (3,935,452 samples, 0.02%)</title><rect x="80.1538%" y="1877" width="0.0195%" height="15" fill="rgb(234,173,18)" fg:x="16149852107" fg:w="3935452"/><text x="80.4038%" y="1887.50"></text></g><g><title>load_balance (3,556,337 samples, 0.02%)</title><rect x="80.1557%" y="1861" width="0.0177%" height="15" fill="rgb(227,73,47)" fg:x="16150231222" fg:w="3556337"/><text x="80.4057%" y="1871.50"></text></g><g><title>find_busiest_group (3,245,389 samples, 0.02%)</title><rect x="80.1572%" y="1845" width="0.0161%" height="15" fill="rgb(234,9,34)" fg:x="16150542170" fg:w="3245389"/><text x="80.4072%" y="1855.50"></text></g><g><title>update_sd_lb_stats (2,987,289 samples, 0.01%)</title><rect x="80.1585%" y="1829" width="0.0148%" height="15" fill="rgb(235,172,15)" fg:x="16150800270" fg:w="2987289"/><text x="80.4085%" y="1839.50"></text></g><g><title>update_sg_lb_stats (2,504,019 samples, 0.01%)</title><rect x="80.1609%" y="1813" width="0.0124%" height="15" fill="rgb(245,61,2)" fg:x="16151283540" fg:w="2504019"/><text x="80.4109%" y="1823.50"></text></g><g><title>run_rebalance_domains (5,335,377 samples, 0.03%)</title><rect x="80.1527%" y="1893" width="0.0265%" height="15" fill="rgb(238,39,47)" fg:x="16149640865" fg:w="5335377"/><text x="80.4027%" y="1903.50"></text></g><g><title>__kprobes_text_end (12,392,771 samples, 0.06%)</title><rect x="80.1221%" y="1909" width="0.0615%" height="15" fill="rgb(234,37,24)" fg:x="16143461352" fg:w="12392771"/><text x="80.3721%" y="1919.50"></text></g><g><title>irq_exit_rcu (12,835,807 samples, 0.06%)</title><rect x="80.1217%" y="1925" width="0.0637%" height="15" fill="rgb(248,223,24)" fg:x="16143395298" fg:w="12835807"/><text x="80.3717%" y="1935.50"></text></g><g><title>ct_irq_enter (11,990,453 samples, 0.06%)</title><rect x="80.3614%" y="1909" width="0.0595%" height="15" fill="rgb(223,12,15)" fg:x="16191691889" fg:w="11990453"/><text x="80.6114%" y="1919.50"></text></g><g><title>ct_nmi_enter (11,590,551 samples, 0.06%)</title><rect x="80.3634%" y="1893" width="0.0575%" height="15" fill="rgb(249,6,3)" fg:x="16192091791" fg:w="11590551"/><text x="80.6134%" y="1903.50"></text></g><g><title>irqentry_enter (52,284,744 samples, 0.26%)</title><rect x="80.1854%" y="1925" width="0.2595%" height="15" fill="rgb(237,105,33)" fg:x="16156231105" fg:w="52284744"/><text x="80.4354%" y="1935.50"></text></g><g><title>ct_nmi_enter (4,833,507 samples, 0.02%)</title><rect x="80.4209%" y="1909" width="0.0240%" height="15" fill="rgb(252,208,35)" fg:x="16203682342" fg:w="4833507"/><text x="80.6709%" y="1919.50"></text></g><g><title>native_apic_mem_eoi (9,067,047 samples, 0.05%)</title><rect x="80.4449%" y="1925" width="0.0450%" height="15" fill="rgb(215,181,35)" fg:x="16208515849" fg:w="9067047"/><text x="80.6949%" y="1935.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (883,899,465 samples, 4.39%)</title><rect x="76.1308%" y="1957" width="4.3869%" height="15" fill="rgb(246,212,3)" fg:x="15339275384" fg:w="883899465"/><text x="76.3808%" y="1967.50">asm_s..</text></g><g><title>sysvec_apic_timer_interrupt (870,058,617 samples, 4.32%)</title><rect x="76.1995%" y="1941" width="4.3182%" height="15" fill="rgb(247,156,24)" fg:x="15353116232" fg:w="870058617"/><text x="76.4495%" y="1951.50">sysve..</text></g><g><title>tick_irq_enter (5,591,953 samples, 0.03%)</title><rect x="80.4899%" y="1925" width="0.0278%" height="15" fill="rgb(248,9,31)" fg:x="16217582896" fg:w="5591953"/><text x="80.7399%" y="1935.50"></text></g><g><title>__sysvec_call_function (2,885,052 samples, 0.01%)</title><rect x="80.5177%" y="1925" width="0.0143%" height="15" fill="rgb(234,26,45)" fg:x="16223174849" fg:w="2885052"/><text x="80.7677%" y="1935.50"></text></g><g><title>generic_smp_call_function_single_interrupt (2,885,052 samples, 0.01%)</title><rect x="80.5177%" y="1909" width="0.0143%" height="15" fill="rgb(249,11,32)" fg:x="16223174849" fg:w="2885052"/><text x="80.7677%" y="1919.50"></text></g><g><title>__flush_smp_call_function_queue (2,885,052 samples, 0.01%)</title><rect x="80.5177%" y="1893" width="0.0143%" height="15" fill="rgb(249,162,33)" fg:x="16223174849" fg:w="2885052"/><text x="80.7677%" y="1903.50"></text></g><g><title>tick_check_oneshot_broadcast_this_cpu (2,715,221 samples, 0.01%)</title><rect x="80.5514%" y="1893" width="0.0135%" height="15" fill="rgb(232,4,32)" fg:x="16229970159" fg:w="2715221"/><text x="80.8014%" y="1903.50"></text></g><g><title>tick_irq_enter (5,371,715 samples, 0.03%)</title><rect x="80.5421%" y="1909" width="0.0267%" height="15" fill="rgb(212,5,45)" fg:x="16228093015" fg:w="5371715"/><text x="80.7921%" y="1919.50"></text></g><g><title>irq_enter_rcu (6,006,731 samples, 0.03%)</title><rect x="80.5405%" y="1925" width="0.0298%" height="15" fill="rgb(227,95,13)" fg:x="16227777604" fg:w="6006731"/><text x="80.7905%" y="1935.50"></text></g><g><title>asm_sysvec_call_function (11,819,239 samples, 0.06%)</title><rect x="80.5177%" y="1957" width="0.0587%" height="15" fill="rgb(223,205,10)" fg:x="16223174849" fg:w="11819239"/><text x="80.7677%" y="1967.50"></text></g><g><title>sysvec_call_function (11,819,239 samples, 0.06%)</title><rect x="80.5177%" y="1941" width="0.0587%" height="15" fill="rgb(222,178,8)" fg:x="16223174849" fg:w="11819239"/><text x="80.7677%" y="1951.50"></text></g><g><title>irqentry_enter (55,312,704 samples, 0.27%)</title><rect x="80.5764%" y="1941" width="0.2745%" height="15" fill="rgb(216,13,22)" fg:x="16234994088" fg:w="55312704"/><text x="80.8264%" y="1951.50"></text></g><g><title>llist_reverse_order (3,617,479 samples, 0.02%)</title><rect x="81.0121%" y="1877" width="0.0180%" height="15" fill="rgb(240,167,12)" fg:x="16322785911" fg:w="3617479"/><text x="81.2621%" y="1887.50"></text></g><g><title>rq_lock_irqsave (2,228,222 samples, 0.01%)</title><rect x="81.0353%" y="1861" width="0.0111%" height="15" fill="rgb(235,68,35)" fg:x="16327473484" fg:w="2228222"/><text x="81.2853%" y="1871.50"></text></g><g><title>_raw_spin_lock (2,228,222 samples, 0.01%)</title><rect x="81.0353%" y="1845" width="0.0111%" height="15" fill="rgb(253,40,27)" fg:x="16327473484" fg:w="2228222"/><text x="81.2853%" y="1855.50"></text></g><g><title>enqueue_entity (2,025,060 samples, 0.01%)</title><rect x="81.0536%" y="1813" width="0.0101%" height="15" fill="rgb(214,19,28)" fg:x="16331159686" fg:w="2025060"/><text x="81.3036%" y="1823.50"></text></g><g><title>enqueue_task_fair (4,371,516 samples, 0.02%)</title><rect x="81.0471%" y="1829" width="0.0217%" height="15" fill="rgb(210,167,45)" fg:x="16329835321" fg:w="4371516"/><text x="81.2971%" y="1839.50"></text></g><g><title>enqueue_task (5,953,249 samples, 0.03%)</title><rect x="81.0464%" y="1845" width="0.0295%" height="15" fill="rgb(232,97,40)" fg:x="16329701706" fg:w="5953249"/><text x="81.2964%" y="1855.50"></text></g><g><title>generic_smp_call_function_single_interrupt (22,426,831 samples, 0.11%)</title><rect x="80.9698%" y="1909" width="0.1113%" height="15" fill="rgb(250,35,23)" fg:x="16314268770" fg:w="22426831"/><text x="81.2198%" y="1919.50"></text></g><g><title>__flush_smp_call_function_queue (22,426,831 samples, 0.11%)</title><rect x="80.9698%" y="1893" width="0.1113%" height="15" fill="rgb(248,47,53)" fg:x="16314268770" fg:w="22426831"/><text x="81.2198%" y="1903.50"></text></g><g><title>sched_ttwu_pending (9,881,985 samples, 0.05%)</title><rect x="81.0321%" y="1877" width="0.0490%" height="15" fill="rgb(226,58,50)" fg:x="16326813616" fg:w="9881985"/><text x="81.2821%" y="1887.50"></text></g><g><title>ttwu_do_activate (6,993,895 samples, 0.03%)</title><rect x="81.0464%" y="1861" width="0.0347%" height="15" fill="rgb(217,105,26)" fg:x="16329701706" fg:w="6993895"/><text x="81.2964%" y="1871.50"></text></g><g><title>__sysvec_call_function_single (25,253,773 samples, 0.13%)</title><rect x="80.9597%" y="1925" width="0.1253%" height="15" fill="rgb(208,64,1)" fg:x="16312226909" fg:w="25253773"/><text x="81.2097%" y="1935.50"></text></g><g><title>ct_irq_enter (8,297,454 samples, 0.04%)</title><rect x="81.0850%" y="1925" width="0.0412%" height="15" fill="rgb(214,80,1)" fg:x="16337480682" fg:w="8297454"/><text x="81.3350%" y="1935.50"></text></g><g><title>ktime_get (5,146,533 samples, 0.03%)</title><rect x="81.1668%" y="1909" width="0.0255%" height="15" fill="rgb(206,175,26)" fg:x="16353967466" fg:w="5146533"/><text x="81.4168%" y="1919.50"></text></g><g><title>tick_check_oneshot_broadcast_this_cpu (16,071,452 samples, 0.08%)</title><rect x="81.1943%" y="1909" width="0.0798%" height="15" fill="rgb(235,156,37)" fg:x="16359498207" fg:w="16071452"/><text x="81.4443%" y="1919.50"></text></g><g><title>ktime_get (30,975,098 samples, 0.15%)</title><rect x="81.3714%" y="1893" width="0.1537%" height="15" fill="rgb(213,100,9)" fg:x="16395193263" fg:w="30975098"/><text x="81.6214%" y="1903.50"></text></g><g><title>read_tsc (22,746,085 samples, 0.11%)</title><rect x="81.4123%" y="1877" width="0.1129%" height="15" fill="rgb(241,15,13)" fg:x="16403422276" fg:w="22746085"/><text x="81.6623%" y="1887.50"></text></g><g><title>nr_iowait_cpu (13,980,405 samples, 0.07%)</title><rect x="81.5252%" y="1893" width="0.0694%" height="15" fill="rgb(205,97,43)" fg:x="16426168361" fg:w="13980405"/><text x="81.7752%" y="1903.50"></text></g><g><title>read_tsc (7,885,931 samples, 0.04%)</title><rect x="81.5946%" y="1893" width="0.0391%" height="15" fill="rgb(216,106,32)" fg:x="16440148766" fg:w="7885931"/><text x="81.8446%" y="1903.50"></text></g><g><title>tick_check_oneshot_broadcast_this_cpu (43,905,128 samples, 0.22%)</title><rect x="81.6340%" y="1893" width="0.2179%" height="15" fill="rgb(226,200,8)" fg:x="16448098616" fg:w="43905128"/><text x="81.8840%" y="1903.50"></text></g><g><title>tick_do_update_jiffies64 (4,453,577 samples, 0.02%)</title><rect x="81.8519%" y="1893" width="0.0221%" height="15" fill="rgb(244,54,29)" fg:x="16492003744" fg:w="4453577"/><text x="82.1019%" y="1903.50"></text></g><g><title>tick_irq_enter (120,971,733 samples, 0.60%)</title><rect x="81.2740%" y="1909" width="0.6004%" height="15" fill="rgb(252,169,12)" fg:x="16375569659" fg:w="120971733"/><text x="81.5240%" y="1919.50"></text></g><g><title>irq_enter_rcu (151,253,067 samples, 0.75%)</title><rect x="81.1329%" y="1925" width="0.7507%" height="15" fill="rgb(231,199,11)" fg:x="16347134432" fg:w="151253067"/><text x="81.3829%" y="1935.50"></text></g><g><title>__blk_mq_end_request (3,184,438 samples, 0.02%)</title><rect x="81.8945%" y="1813" width="0.0158%" height="15" fill="rgb(233,191,18)" fg:x="16500577917" fg:w="3184438"/><text x="82.1445%" y="1823.50"></text></g><g><title>end_bio_bh_io_sync (3,098,840 samples, 0.02%)</title><rect x="81.9176%" y="1781" width="0.0154%" height="15" fill="rgb(215,83,47)" fg:x="16505232741" fg:w="3098840"/><text x="82.1676%" y="1791.50"></text></g><g><title>end_buffer_read_sync (3,098,840 samples, 0.02%)</title><rect x="81.9176%" y="1765" width="0.0154%" height="15" fill="rgb(251,67,19)" fg:x="16505232741" fg:w="3098840"/><text x="82.1676%" y="1775.50"></text></g><g><title>wake_up_bit (3,098,840 samples, 0.02%)</title><rect x="81.9176%" y="1749" width="0.0154%" height="15" fill="rgb(240,7,20)" fg:x="16505232741" fg:w="3098840"/><text x="82.1676%" y="1759.50"></text></g><g><title>__wake_up_common_lock (3,098,840 samples, 0.02%)</title><rect x="81.9176%" y="1733" width="0.0154%" height="15" fill="rgb(210,150,26)" fg:x="16505232741" fg:w="3098840"/><text x="82.1676%" y="1743.50"></text></g><g><title>wake_bit_function (2,381,403 samples, 0.01%)</title><rect x="81.9211%" y="1717" width="0.0118%" height="15" fill="rgb(228,75,42)" fg:x="16505950178" fg:w="2381403"/><text x="82.1711%" y="1727.50"></text></g><g><title>default_wake_function (2,381,403 samples, 0.01%)</title><rect x="81.9211%" y="1701" width="0.0118%" height="15" fill="rgb(237,134,48)" fg:x="16505950178" fg:w="2381403"/><text x="82.1711%" y="1711.50"></text></g><g><title>try_to_wake_up (2,381,403 samples, 0.01%)</title><rect x="81.9211%" y="1685" width="0.0118%" height="15" fill="rgb(205,80,50)" fg:x="16505950178" fg:w="2381403"/><text x="82.1711%" y="1695.50"></text></g><g><title>__folio_end_writeback (5,403,938 samples, 0.03%)</title><rect x="81.9488%" y="1733" width="0.0268%" height="15" fill="rgb(217,74,48)" fg:x="16511531550" fg:w="5403938"/><text x="82.1988%" y="1743.50"></text></g><g><title>__mod_lruvec_state (2,015,140 samples, 0.01%)</title><rect x="81.9821%" y="1685" width="0.0100%" height="15" fill="rgb(205,82,50)" fg:x="16518229458" fg:w="2015140"/><text x="82.2321%" y="1695.50"></text></g><g><title>__mod_memcg_lruvec_state (2,015,140 samples, 0.01%)</title><rect x="81.9821%" y="1669" width="0.0100%" height="15" fill="rgb(228,1,33)" fg:x="16518229458" fg:w="2015140"/><text x="82.2321%" y="1679.50"></text></g><g><title>lru_move_tail_fn (2,469,536 samples, 0.01%)</title><rect x="81.9821%" y="1701" width="0.0123%" height="15" fill="rgb(214,50,23)" fg:x="16518229458" fg:w="2469536"/><text x="82.2321%" y="1711.50"></text></g><g><title>folio_rotate_reclaimable (4,487,553 samples, 0.02%)</title><rect x="81.9757%" y="1733" width="0.0223%" height="15" fill="rgb(210,62,9)" fg:x="16516935488" fg:w="4487553"/><text x="82.2257%" y="1743.50"></text></g><g><title>folio_batch_move_lru (3,796,483 samples, 0.02%)</title><rect x="81.9791%" y="1717" width="0.0188%" height="15" fill="rgb(210,104,37)" fg:x="16517626558" fg:w="3796483"/><text x="82.2291%" y="1727.50"></text></g><g><title>ext4_end_bio (13,336,439 samples, 0.07%)</title><rect x="81.9330%" y="1781" width="0.0662%" height="15" fill="rgb(232,104,43)" fg:x="16508331581" fg:w="13336439"/><text x="82.1830%" y="1791.50"></text></g><g><title>ext4_finish_bio (12,861,653 samples, 0.06%)</title><rect x="81.9353%" y="1765" width="0.0638%" height="15" fill="rgb(244,52,6)" fg:x="16508806367" fg:w="12861653"/><text x="82.1853%" y="1775.50"></text></g><g><title>folio_end_writeback (10,362,722 samples, 0.05%)</title><rect x="81.9477%" y="1749" width="0.0514%" height="15" fill="rgb(211,174,52)" fg:x="16511305298" fg:w="10362722"/><text x="82.1977%" y="1759.50"></text></g><g><title>bio_endio (21,913,993 samples, 0.11%)</title><rect x="81.9121%" y="1797" width="0.1088%" height="15" fill="rgb(229,48,4)" fg:x="16504131590" fg:w="21913993"/><text x="82.1621%" y="1807.50"></text></g><g><title>mpage_end_io (4,377,563 samples, 0.02%)</title><rect x="81.9991%" y="1781" width="0.0217%" height="15" fill="rgb(205,155,16)" fg:x="16521668020" fg:w="4377563"/><text x="82.2491%" y="1791.50"></text></g><g><title>__read_end_io (4,377,563 samples, 0.02%)</title><rect x="81.9991%" y="1765" width="0.0217%" height="15" fill="rgb(211,141,53)" fg:x="16521668020" fg:w="4377563"/><text x="82.2491%" y="1775.50"></text></g><g><title>folio_unlock (3,588,640 samples, 0.02%)</title><rect x="82.0031%" y="1749" width="0.0178%" height="15" fill="rgb(240,148,11)" fg:x="16522456943" fg:w="3588640"/><text x="82.2531%" y="1759.50"></text></g><g><title>scsi_end_request (25,805,723 samples, 0.13%)</title><rect x="81.8945%" y="1829" width="0.1281%" height="15" fill="rgb(214,45,23)" fg:x="16500577917" fg:w="25805723"/><text x="82.1445%" y="1839.50"></text></g><g><title>blk_update_request (22,621,285 samples, 0.11%)</title><rect x="81.9103%" y="1813" width="0.1123%" height="15" fill="rgb(248,74,26)" fg:x="16503762355" fg:w="22621285"/><text x="82.1603%" y="1823.50"></text></g><g><title>blk_done_softirq (28,697,916 samples, 0.14%)</title><rect x="81.8836%" y="1893" width="0.1424%" height="15" fill="rgb(218,121,16)" fg:x="16498387499" fg:w="28697916"/><text x="82.1336%" y="1903.50"></text></g><g><title>scsi_complete (26,873,346 samples, 0.13%)</title><rect x="81.8927%" y="1877" width="0.1334%" height="15" fill="rgb(218,10,47)" fg:x="16500212069" fg:w="26873346"/><text x="82.1427%" y="1887.50"></text></g><g><title>scsi_finish_command (26,507,498 samples, 0.13%)</title><rect x="81.8945%" y="1861" width="0.1316%" height="15" fill="rgb(227,99,14)" fg:x="16500577917" fg:w="26507498"/><text x="82.1445%" y="1871.50"></text></g><g><title>scsi_io_completion (26,507,498 samples, 0.13%)</title><rect x="81.8945%" y="1845" width="0.1316%" height="15" fill="rgb(229,83,46)" fg:x="16500577917" fg:w="26507498"/><text x="82.1445%" y="1855.50"></text></g><g><title>__kprobes_text_end (30,236,827 samples, 0.15%)</title><rect x="81.8836%" y="1909" width="0.1501%" height="15" fill="rgb(228,25,1)" fg:x="16498387499" fg:w="30236827"/><text x="82.1336%" y="1919.50"></text></g><g><title>irq_exit_rcu (30,450,237 samples, 0.15%)</title><rect x="81.8836%" y="1925" width="0.1511%" height="15" fill="rgb(252,190,15)" fg:x="16498387499" fg:w="30450237"/><text x="82.1336%" y="1935.50"></text></g><g><title>ct_irq_enter (16,367,731 samples, 0.08%)</title><rect x="86.8158%" y="1909" width="0.0812%" height="15" fill="rgb(213,103,51)" fg:x="17492164898" fg:w="16367731"/><text x="87.0658%" y="1919.50"></text></g><g><title>ct_nmi_enter (11,203,121 samples, 0.06%)</title><rect x="86.8415%" y="1893" width="0.0556%" height="15" fill="rgb(220,38,44)" fg:x="17497329508" fg:w="11203121"/><text x="87.0915%" y="1903.50"></text></g><g><title>irqentry_enter (987,552,760 samples, 4.90%)</title><rect x="82.0347%" y="1925" width="4.9014%" height="15" fill="rgb(210,45,26)" fg:x="16528837736" fg:w="987552760"/><text x="82.2847%" y="1935.50">irqent..</text></g><g><title>ct_nmi_enter (7,857,867 samples, 0.04%)</title><rect x="86.8971%" y="1909" width="0.0390%" height="15" fill="rgb(205,95,48)" fg:x="17508532629" fg:w="7857867"/><text x="87.1471%" y="1919.50"></text></g><g><title>asm_sysvec_call_function_single (1,283,076,870 samples, 6.37%)</title><rect x="80.5764%" y="1957" width="6.3681%" height="15" fill="rgb(225,179,37)" fg:x="16234994088" fg:w="1283076870"/><text x="80.8264%" y="1967.50">asm_sysv..</text></g><g><title>sysvec_call_function_single (1,227,764,166 samples, 6.09%)</title><rect x="80.8509%" y="1941" width="6.0936%" height="15" fill="rgb(230,209,3)" fg:x="16290306792" fg:w="1227764166"/><text x="81.1009%" y="1951.50">sysvec_c..</text></g><g><title>ct_kernel_enter (52,130,057 samples, 0.26%)</title><rect x="86.9524%" y="1941" width="0.2587%" height="15" fill="rgb(248,12,46)" fg:x="17519674561" fg:w="52130057"/><text x="87.2024%" y="1951.50"></text></g><g><title>ct_kernel_enter_state (44,370,096 samples, 0.22%)</title><rect x="86.9909%" y="1925" width="0.2202%" height="15" fill="rgb(234,18,0)" fg:x="17527434522" fg:w="44370096"/><text x="87.2409%" y="1935.50"></text></g><g><title>ct_idle_exit (55,529,801 samples, 0.28%)</title><rect x="86.9524%" y="1957" width="0.2756%" height="15" fill="rgb(238,197,14)" fg:x="17519674561" fg:w="55529801"/><text x="87.2024%" y="1967.50"></text></g><g><title>ct_kernel_enter_state (3,399,744 samples, 0.02%)</title><rect x="87.2111%" y="1941" width="0.0169%" height="15" fill="rgb(251,162,48)" fg:x="17571804618" fg:w="3399744"/><text x="87.4611%" y="1951.50"></text></g><g><title>local_clock_noinstr (25,587,350 samples, 0.13%)</title><rect x="87.2306%" y="1957" width="0.1270%" height="15" fill="rgb(237,73,42)" fg:x="17575721923" fg:w="25587350"/><text x="87.4806%" y="1967.50"></text></g><g><title>sched_clock_noinstr (24,590,165 samples, 0.12%)</title><rect x="87.2355%" y="1941" width="0.1220%" height="15" fill="rgb(211,108,8)" fg:x="17576719108" fg:w="24590165"/><text x="87.4855%" y="1951.50"></text></g><g><title>native_sched_clock (24,590,165 samples, 0.12%)</title><rect x="87.2355%" y="1925" width="0.1220%" height="15" fill="rgb(213,45,22)" fg:x="17576719108" fg:w="24590165"/><text x="87.4855%" y="1935.50"></text></g><g><title>poll_idle (77,402,341 samples, 0.38%)</title><rect x="87.3575%" y="1957" width="0.3842%" height="15" fill="rgb(252,154,5)" fg:x="17601309273" fg:w="77402341"/><text x="87.6075%" y="1967.50"></text></g><g><title>sched_idle_set_state (2,361,094 samples, 0.01%)</title><rect x="87.7456%" y="1957" width="0.0117%" height="15" fill="rgb(221,79,52)" fg:x="17679486358" fg:w="2361094"/><text x="87.9956%" y="1967.50"></text></g><g><title>cpuidle_enter_state (3,923,952,473 samples, 19.48%)</title><rect x="68.2839%" y="1973" width="19.4751%" height="15" fill="rgb(229,220,36)" fg:x="13758232860" fg:w="3923952473"/><text x="68.5339%" y="1983.50">cpuidle_enter_state</text></g><g><title>error_entry (299,054,443 samples, 1.48%)</title><rect x="87.7601%" y="1973" width="1.4842%" height="15" fill="rgb(211,17,16)" fg:x="17682417140" fg:w="299054443"/><text x="88.0101%" y="1983.50"></text></g><g><title>irq_entries_start (23,959,358 samples, 0.12%)</title><rect x="89.2473%" y="1973" width="0.1189%" height="15" fill="rgb(222,55,31)" fg:x="17982066512" fg:w="23959358"/><text x="89.4973%" y="1983.50"></text></g><g><title>local_clock_noinstr (3,293,216 samples, 0.02%)</title><rect x="89.3662%" y="1973" width="0.0163%" height="15" fill="rgb(221,221,31)" fg:x="18006025870" fg:w="3293216"/><text x="89.6162%" y="1983.50"></text></g><g><title>sysvec_apic_timer_interrupt (17,693,538 samples, 0.09%)</title><rect x="89.3875%" y="1973" width="0.0878%" height="15" fill="rgb(227,168,26)" fg:x="18010325081" fg:w="17693538"/><text x="89.6375%" y="1983.50"></text></g><g><title>sysvec_call_function_single (108,666,841 samples, 0.54%)</title><rect x="89.4827%" y="1973" width="0.5393%" height="15" fill="rgb(224,139,9)" fg:x="18029493082" fg:w="108666841"/><text x="89.7327%" y="1983.50"></text></g><g><title>cpuidle_enter (5,094,602,090 samples, 25.29%)</title><rect x="64.7450%" y="1989" width="25.2852%" height="15" fill="rgb(254,172,0)" fg:x="13045202589" fg:w="5094602090"/><text x="64.9950%" y="1999.50">cpuidle_enter</text></g><g><title>menu_reflect (2,741,377 samples, 0.01%)</title><rect x="90.0359%" y="1973" width="0.0136%" height="15" fill="rgb(235,203,1)" fg:x="18140967902" fg:w="2741377"/><text x="90.2859%" y="1983.50"></text></g><g><title>tick_nohz_idle_got_tick (2,032,504 samples, 0.01%)</title><rect x="90.0395%" y="1957" width="0.0101%" height="15" fill="rgb(216,205,24)" fg:x="18141676775" fg:w="2032504"/><text x="90.2895%" y="1967.50"></text></g><g><title>cpuidle_reflect (3,695,542 samples, 0.02%)</title><rect x="90.0335%" y="1989" width="0.0183%" height="15" fill="rgb(233,24,6)" fg:x="18140482873" fg:w="3695542"/><text x="90.2835%" y="1999.50"></text></g><g><title>cpuidle_governor_latency_req (2,257,765 samples, 0.01%)</title><rect x="90.2015%" y="1957" width="0.0112%" height="15" fill="rgb(244,110,9)" fg:x="18174323175" fg:w="2257765"/><text x="90.4515%" y="1967.50"></text></g><g><title>nr_iowait_cpu (3,918,683 samples, 0.02%)</title><rect x="90.2201%" y="1957" width="0.0194%" height="15" fill="rgb(239,222,42)" fg:x="18178071568" fg:w="3918683"/><text x="90.4701%" y="1967.50"></text></g><g><title>hrtimer_next_event_without (2,349,458 samples, 0.01%)</title><rect x="90.2503%" y="1941" width="0.0117%" height="15" fill="rgb(218,145,13)" fg:x="18184153340" fg:w="2349458"/><text x="90.5003%" y="1951.50"></text></g><g><title>__hrtimer_next_event_base (2,089,412 samples, 0.01%)</title><rect x="90.2516%" y="1925" width="0.0104%" height="15" fill="rgb(207,69,11)" fg:x="18184413386" fg:w="2089412"/><text x="90.5016%" y="1935.50"></text></g><g><title>get_next_timer_interrupt (2,243,222 samples, 0.01%)</title><rect x="90.3070%" y="1925" width="0.0111%" height="15" fill="rgb(220,223,22)" fg:x="18195585117" fg:w="2243222"/><text x="90.5570%" y="1935.50"></text></g><g><title>tick_nohz_next_event (10,704,064 samples, 0.05%)</title><rect x="90.2681%" y="1941" width="0.0531%" height="15" fill="rgb(245,102,5)" fg:x="18187746651" fg:w="10704064"/><text x="90.5181%" y="1951.50"></text></g><g><title>tick_nohz_get_sleep_length (16,597,038 samples, 0.08%)</title><rect x="90.2395%" y="1957" width="0.0824%" height="15" fill="rgb(211,148,2)" fg:x="18181990251" fg:w="16597038"/><text x="90.4895%" y="1967.50"></text></g><g><title>menu_select (53,919,516 samples, 0.27%)</title><rect x="90.0561%" y="1973" width="0.2676%" height="15" fill="rgb(241,13,44)" fg:x="18145029610" fg:w="53919516"/><text x="90.3061%" y="1983.50"></text></g><g><title>cpuidle_select (55,114,291 samples, 0.27%)</title><rect x="90.0519%" y="1989" width="0.2735%" height="15" fill="rgb(219,137,21)" fg:x="18144178415" fg:w="55114291"/><text x="90.3019%" y="1999.50"></text></g><g><title>do_softirq (3,663,348 samples, 0.02%)</title><rect x="90.3254%" y="1989" width="0.0182%" height="15" fill="rgb(242,206,5)" fg:x="18199292706" fg:w="3663348"/><text x="90.5754%" y="1999.50"></text></g><g><title>__blk_mq_complete_request_remote (16,314,333 samples, 0.08%)</title><rect x="90.6541%" y="1973" width="0.0810%" height="15" fill="rgb(217,114,22)" fg:x="18265516550" fg:w="16314333"/><text x="90.9041%" y="1983.50"></text></g><g><title>__blk_mq_complete_request_remote (4,052,364 samples, 0.02%)</title><rect x="91.3935%" y="1957" width="0.0201%" height="15" fill="rgb(253,206,42)" fg:x="18414490008" fg:w="4052364"/><text x="91.6435%" y="1967.50"></text></g><g><title>__raise_softirq_irqoff (2,620,887 samples, 0.01%)</title><rect x="91.4006%" y="1941" width="0.0130%" height="15" fill="rgb(236,102,18)" fg:x="18415921485" fg:w="2620887"/><text x="91.6506%" y="1951.50"></text></g><g><title>__raise_softirq_irqoff (11,822,423 samples, 0.06%)</title><rect x="91.4136%" y="1957" width="0.0587%" height="15" fill="rgb(208,59,49)" fg:x="18418542372" fg:w="11822423"/><text x="91.6636%" y="1967.50"></text></g><g><title>llist_reverse_order (273,687,281 samples, 1.36%)</title><rect x="91.4751%" y="1957" width="1.3583%" height="15" fill="rgb(215,194,28)" fg:x="18430932942" fg:w="273687281"/><text x="91.7251%" y="1967.50"></text></g><g><title>rq_lock_irqsave (46,895,570 samples, 0.23%)</title><rect x="92.9016%" y="1941" width="0.2327%" height="15" fill="rgb(243,207,11)" fg:x="18718356409" fg:w="46895570"/><text x="93.1516%" y="1951.50"></text></g><g><title>_raw_spin_lock (43,562,521 samples, 0.22%)</title><rect x="92.9181%" y="1925" width="0.2162%" height="15" fill="rgb(254,179,35)" fg:x="18721689458" fg:w="43562521"/><text x="93.1681%" y="1935.50"></text></g><g><title>enqueue_entity (11,375,795 samples, 0.06%)</title><rect x="93.2180%" y="1893" width="0.0565%" height="15" fill="rgb(235,97,3)" fg:x="18782112109" fg:w="11375795"/><text x="93.4680%" y="1903.50"></text></g><g><title>update_load_avg (5,730,897 samples, 0.03%)</title><rect x="93.2460%" y="1877" width="0.0284%" height="15" fill="rgb(215,155,33)" fg:x="18787757007" fg:w="5730897"/><text x="93.4960%" y="1887.50"></text></g><g><title>update_cfs_rq_load_avg (3,275,287 samples, 0.02%)</title><rect x="93.2582%" y="1861" width="0.0163%" height="15" fill="rgb(223,128,12)" fg:x="18790212617" fg:w="3275287"/><text x="93.5082%" y="1871.50"></text></g><g><title>__update_load_avg_cfs_rq (3,275,287 samples, 0.02%)</title><rect x="93.2582%" y="1845" width="0.0163%" height="15" fill="rgb(208,157,18)" fg:x="18790212617" fg:w="3275287"/><text x="93.5082%" y="1855.50"></text></g><g><title>update_overutilized_status (3,406,198 samples, 0.02%)</title><rect x="93.2797%" y="1893" width="0.0169%" height="15" fill="rgb(249,70,54)" fg:x="18794535625" fg:w="3406198"/><text x="93.5297%" y="1903.50"></text></g><g><title>enqueue_task_fair (18,716,499 samples, 0.09%)</title><rect x="93.2082%" y="1909" width="0.0929%" height="15" fill="rgb(244,118,24)" fg:x="18780126887" fg:w="18716499"/><text x="93.4582%" y="1919.50"></text></g><g><title>psi_group_change (228,921,621 samples, 1.14%)</title><rect x="93.3374%" y="1893" width="1.1362%" height="15" fill="rgb(211,54,0)" fg:x="18806162852" fg:w="228921621"/><text x="93.5874%" y="1903.50"></text></g><g><title>sched_clock (14,982,753 samples, 0.07%)</title><rect x="94.4801%" y="1877" width="0.0744%" height="15" fill="rgb(245,137,45)" fg:x="19036401473" fg:w="14982753"/><text x="94.7301%" y="1887.50"></text></g><g><title>sched_clock_noinstr (12,920,494 samples, 0.06%)</title><rect x="94.4903%" y="1861" width="0.0641%" height="15" fill="rgb(232,154,31)" fg:x="19038463732" fg:w="12920494"/><text x="94.7403%" y="1871.50"></text></g><g><title>native_sched_clock (12,920,494 samples, 0.06%)</title><rect x="94.4903%" y="1845" width="0.0641%" height="15" fill="rgb(253,6,39)" fg:x="19038463732" fg:w="12920494"/><text x="94.7403%" y="1855.50"></text></g><g><title>psi_task_change (253,011,540 samples, 1.26%)</title><rect x="93.3011%" y="1909" width="1.2557%" height="15" fill="rgb(234,183,24)" fg:x="18798843386" fg:w="253011540"/><text x="93.5511%" y="1919.50"></text></g><g><title>sched_clock_cpu (16,770,453 samples, 0.08%)</title><rect x="94.4736%" y="1893" width="0.0832%" height="15" fill="rgb(252,84,40)" fg:x="19035084473" fg:w="16770453"/><text x="94.7236%" y="1903.50"></text></g><g><title>sched_clock_cpu (3,673,178 samples, 0.02%)</title><rect x="94.5568%" y="1909" width="0.0182%" height="15" fill="rgb(224,65,2)" fg:x="19051854926" fg:w="3673178"/><text x="94.8068%" y="1919.50"></text></g><g><title>enqueue_task (281,412,853 samples, 1.40%)</title><rect x="93.1818%" y="1925" width="1.3967%" height="15" fill="rgb(229,38,24)" fg:x="18774819753" fg:w="281412853"/><text x="93.4318%" y="1935.50"></text></g><g><title>ttwu_do_activate (293,062,787 samples, 1.45%)</title><rect x="93.1365%" y="1941" width="1.4545%" height="15" fill="rgb(218,131,50)" fg:x="18765691689" fg:w="293062787"/><text x="93.3865%" y="1951.50"></text></g><g><title>sched_clock (2,541,276 samples, 0.01%)</title><rect x="94.6618%" y="1909" width="0.0126%" height="15" fill="rgb(233,106,18)" fg:x="19073011579" fg:w="2541276"/><text x="94.9118%" y="1919.50"></text></g><g><title>sched_clock_noinstr (2,541,276 samples, 0.01%)</title><rect x="94.6618%" y="1893" width="0.0126%" height="15" fill="rgb(220,216,11)" fg:x="19073011579" fg:w="2541276"/><text x="94.9118%" y="1903.50"></text></g><g><title>native_sched_clock (2,541,276 samples, 0.01%)</title><rect x="94.6618%" y="1877" width="0.0126%" height="15" fill="rgb(251,100,45)" fg:x="19073011579" fg:w="2541276"/><text x="94.9118%" y="1887.50"></text></g><g><title>sched_ttwu_pending (371,147,933 samples, 1.84%)</title><rect x="92.8390%" y="1957" width="1.8421%" height="15" fill="rgb(235,143,32)" fg:x="18705747253" fg:w="371147933"/><text x="93.0890%" y="1967.50">s..</text></g><g><title>update_rq_clock (18,140,710 samples, 0.09%)</title><rect x="94.5910%" y="1941" width="0.0900%" height="15" fill="rgb(248,124,34)" fg:x="19058754476" fg:w="18140710"/><text x="94.8410%" y="1951.50"></text></g><g><title>sched_clock_cpu (3,883,607 samples, 0.02%)</title><rect x="94.6618%" y="1925" width="0.0193%" height="15" fill="rgb(225,221,4)" fg:x="19073011579" fg:w="3883607"/><text x="94.9118%" y="1935.50"></text></g><g><title>__flush_smp_call_function_queue (795,505,410 samples, 3.95%)</title><rect x="90.7351%" y="1973" width="3.9482%" height="15" fill="rgb(242,27,43)" fg:x="18281830883" fg:w="795505410"/><text x="90.9851%" y="1983.50">__fl..</text></g><g><title>__x86_indirect_thunk_r11 (7,706,297 samples, 0.04%)</title><rect x="94.6833%" y="1973" width="0.0382%" height="15" fill="rgb(227,54,8)" fg:x="19077336293" fg:w="7706297"/><text x="94.9333%" y="1983.50"></text></g><g><title>llist_reverse_order (17,960,424 samples, 0.09%)</title><rect x="94.7912%" y="1925" width="0.0891%" height="15" fill="rgb(253,139,49)" fg:x="19099092870" fg:w="17960424"/><text x="95.0412%" y="1935.50"></text></g><g><title>__wb_writeout_add (2,094,697 samples, 0.01%)</title><rect x="94.9288%" y="1765" width="0.0104%" height="15" fill="rgb(231,26,43)" fg:x="19126807881" fg:w="2094697"/><text x="95.1788%" y="1775.50"></text></g><g><title>__folio_end_writeback (5,142,294 samples, 0.03%)</title><rect x="94.9227%" y="1781" width="0.0255%" height="15" fill="rgb(207,121,39)" fg:x="19125584117" fg:w="5142294"/><text x="95.1727%" y="1791.50"></text></g><g><title>ext4_end_bio (9,061,698 samples, 0.04%)</title><rect x="94.9104%" y="1829" width="0.0450%" height="15" fill="rgb(223,101,35)" fg:x="19123109287" fg:w="9061698"/><text x="95.1604%" y="1839.50"></text></g><g><title>ext4_finish_bio (9,061,698 samples, 0.04%)</title><rect x="94.9104%" y="1813" width="0.0450%" height="15" fill="rgb(232,87,23)" fg:x="19123109287" fg:w="9061698"/><text x="95.1604%" y="1823.50"></text></g><g><title>folio_end_writeback (7,513,265 samples, 0.04%)</title><rect x="94.9181%" y="1797" width="0.0373%" height="15" fill="rgb(225,180,29)" fg:x="19124657720" fg:w="7513265"/><text x="95.1681%" y="1807.50"></text></g><g><title>bio_endio (10,570,783 samples, 0.05%)</title><rect x="94.9061%" y="1845" width="0.0525%" height="15" fill="rgb(225,25,17)" fg:x="19122234492" fg:w="10570783"/><text x="95.1561%" y="1855.50"></text></g><g><title>scsi_end_request (14,154,724 samples, 0.07%)</title><rect x="94.8934%" y="1877" width="0.0703%" height="15" fill="rgb(223,8,52)" fg:x="19119681216" fg:w="14154724"/><text x="95.1434%" y="1887.50"></text></g><g><title>blk_update_request (11,601,448 samples, 0.06%)</title><rect x="94.9061%" y="1861" width="0.0576%" height="15" fill="rgb(246,42,21)" fg:x="19122234492" fg:w="11601448"/><text x="95.1561%" y="1871.50"></text></g><g><title>blk_done_softirq (36,234,781 samples, 0.18%)</title><rect x="94.7863%" y="1941" width="0.1798%" height="15" fill="rgb(205,64,43)" fg:x="19098104158" fg:w="36234781"/><text x="95.0363%" y="1951.50"></text></g><g><title>scsi_complete (17,285,645 samples, 0.09%)</title><rect x="94.8804%" y="1925" width="0.0858%" height="15" fill="rgb(221,160,13)" fg:x="19117053294" fg:w="17285645"/><text x="95.1304%" y="1935.50"></text></g><g><title>scsi_finish_command (14,819,648 samples, 0.07%)</title><rect x="94.8926%" y="1909" width="0.0736%" height="15" fill="rgb(239,58,35)" fg:x="19119519291" fg:w="14819648"/><text x="95.1426%" y="1919.50"></text></g><g><title>scsi_io_completion (14,657,723 samples, 0.07%)</title><rect x="94.8934%" y="1893" width="0.0727%" height="15" fill="rgb(251,26,40)" fg:x="19119681216" fg:w="14657723"/><text x="95.1434%" y="1903.50"></text></g><g><title>__kprobes_text_end (44,395,071 samples, 0.22%)</title><rect x="94.7483%" y="1957" width="0.2203%" height="15" fill="rgb(247,0,4)" fg:x="19090441323" fg:w="44395071"/><text x="94.9983%" y="1967.50"></text></g><g><title>do_softirq (50,244,470 samples, 0.25%)</title><rect x="94.7215%" y="1973" width="0.2494%" height="15" fill="rgb(218,130,10)" fg:x="19085042590" fg:w="50244470"/><text x="94.9715%" y="1983.50"></text></g><g><title>flush_smp_call_function_queue (936,608,155 samples, 4.65%)</title><rect x="90.3436%" y="1989" width="4.6485%" height="15" fill="rgb(239,32,7)" fg:x="18202956054" fg:w="936608155"/><text x="90.5936%" y="1999.50">flush..</text></g><g><title>sched_ttwu_pending (3,375,959 samples, 0.02%)</title><rect x="94.9753%" y="1973" width="0.0168%" height="15" fill="rgb(210,192,24)" fg:x="19136188250" fg:w="3375959"/><text x="95.2253%" y="1983.50"></text></g><g><title>nohz_run_idle_balance (3,221,389 samples, 0.02%)</title><rect x="95.0084%" y="1989" width="0.0160%" height="15" fill="rgb(226,212,17)" fg:x="19142843406" fg:w="3221389"/><text x="95.2584%" y="1999.50"></text></g><g><title>__switch_to (2,449,445 samples, 0.01%)</title><rect x="95.0654%" y="1957" width="0.0122%" height="15" fill="rgb(219,201,28)" fg:x="19154342375" fg:w="2449445"/><text x="95.3154%" y="1967.50"></text></g><g><title>__sysvec_call_function_single (2,993,078 samples, 0.01%)</title><rect x="95.0900%" y="1909" width="0.0149%" height="15" fill="rgb(235,207,41)" fg:x="19159292205" fg:w="2993078"/><text x="95.3400%" y="1919.50"></text></g><g><title>generic_smp_call_function_single_interrupt (2,993,078 samples, 0.01%)</title><rect x="95.0900%" y="1893" width="0.0149%" height="15" fill="rgb(241,95,54)" fg:x="19159292205" fg:w="2993078"/><text x="95.3400%" y="1903.50"></text></g><g><title>__flush_smp_call_function_queue (2,993,078 samples, 0.01%)</title><rect x="95.0900%" y="1877" width="0.0149%" height="15" fill="rgb(248,12,23)" fg:x="19159292205" fg:w="2993078"/><text x="95.3400%" y="1887.50"></text></g><g><title>sched_ttwu_pending (2,236,446 samples, 0.01%)</title><rect x="95.0938%" y="1861" width="0.0111%" height="15" fill="rgb(228,173,4)" fg:x="19160048837" fg:w="2236446"/><text x="95.3438%" y="1871.50"></text></g><g><title>finish_task_switch (6,790,022 samples, 0.03%)</title><rect x="95.0780%" y="1957" width="0.0337%" height="15" fill="rgb(254,99,5)" fg:x="19156877935" fg:w="6790022"/><text x="95.3280%" y="1967.50"></text></g><g><title>asm_sysvec_call_function_single (4,375,752 samples, 0.02%)</title><rect x="95.0900%" y="1941" width="0.0217%" height="15" fill="rgb(212,184,17)" fg:x="19159292205" fg:w="4375752"/><text x="95.3400%" y="1951.50"></text></g><g><title>sysvec_call_function_single (4,375,752 samples, 0.02%)</title><rect x="95.0900%" y="1925" width="0.0217%" height="15" fill="rgb(252,174,1)" fg:x="19159292205" fg:w="4375752"/><text x="95.3400%" y="1935.50"></text></g><g><title>pick_next_task (7,422,543 samples, 0.04%)</title><rect x="95.1143%" y="1957" width="0.0368%" height="15" fill="rgb(241,118,51)" fg:x="19164185781" fg:w="7422543"/><text x="95.3643%" y="1967.50"></text></g><g><title>pick_next_task_fair (7,340,586 samples, 0.04%)</title><rect x="95.1147%" y="1941" width="0.0364%" height="15" fill="rgb(227,94,47)" fg:x="19164267738" fg:w="7340586"/><text x="95.3647%" y="1951.50"></text></g><g><title>set_next_entity (3,752,020 samples, 0.02%)</title><rect x="95.1325%" y="1925" width="0.0186%" height="15" fill="rgb(229,104,2)" fg:x="19167856304" fg:w="3752020"/><text x="95.3825%" y="1935.50"></text></g><g><title>psi_group_change (2,131,491 samples, 0.01%)</title><rect x="95.1568%" y="1941" width="0.0106%" height="15" fill="rgb(219,28,31)" fg:x="19172742885" fg:w="2131491"/><text x="95.4068%" y="1951.50"></text></g><g><title>psi_task_switch (3,735,916 samples, 0.02%)</title><rect x="95.1527%" y="1957" width="0.0185%" height="15" fill="rgb(233,109,36)" fg:x="19171930598" fg:w="3735916"/><text x="95.4027%" y="1967.50"></text></g><g><title>__sched_text_start (29,562,035 samples, 0.15%)</title><rect x="95.0382%" y="1973" width="0.1467%" height="15" fill="rgb(246,88,11)" fg:x="19148861039" fg:w="29562035"/><text x="95.2882%" y="1983.50"></text></g><g><title>schedule_idle (29,806,918 samples, 0.15%)</title><rect x="95.0380%" y="1989" width="0.1479%" height="15" fill="rgb(209,212,17)" fg:x="19148816177" fg:w="29806918"/><text x="95.2880%" y="1999.50"></text></g><g><title>tick_check_broadcast_expired (3,686,935 samples, 0.02%)</title><rect x="95.1860%" y="1989" width="0.0183%" height="15" fill="rgb(243,59,29)" fg:x="19178623095" fg:w="3686935"/><text x="95.4360%" y="1999.50"></text></g><g><title>tick_nohz_idle_enter (5,063,440 samples, 0.03%)</title><rect x="95.2043%" y="1989" width="0.0251%" height="15" fill="rgb(244,205,48)" fg:x="19182310030" fg:w="5063440"/><text x="95.4543%" y="1999.50"></text></g><g><title>hrtimer_forward (2,652,459 samples, 0.01%)</title><rect x="95.3291%" y="1973" width="0.0132%" height="15" fill="rgb(227,30,6)" fg:x="19207454834" fg:w="2652459"/><text x="95.5791%" y="1983.50"></text></g><g><title>ktime_get (18,161,438 samples, 0.09%)</title><rect x="95.3422%" y="1973" width="0.0901%" height="15" fill="rgb(220,205,48)" fg:x="19210107293" fg:w="18161438"/><text x="95.5922%" y="1983.50"></text></g><g><title>read_tsc (8,309,886 samples, 0.04%)</title><rect x="95.3911%" y="1957" width="0.0412%" height="15" fill="rgb(250,94,14)" fg:x="19219958845" fg:w="8309886"/><text x="95.6411%" y="1967.50"></text></g><g><title>nr_iowait_cpu (21,796,922 samples, 0.11%)</title><rect x="95.4324%" y="1973" width="0.1082%" height="15" fill="rgb(216,119,42)" fg:x="19228268731" fg:w="21796922"/><text x="95.6824%" y="1983.50"></text></g><g><title>ktime_get (2,355,922 samples, 0.01%)</title><rect x="95.6432%" y="1861" width="0.0117%" height="15" fill="rgb(232,155,0)" fg:x="19270749941" fg:w="2355922"/><text x="95.8932%" y="1871.50"></text></g><g><title>tick_program_event (5,062,634 samples, 0.03%)</title><rect x="95.6399%" y="1893" width="0.0251%" height="15" fill="rgb(212,24,32)" fg:x="19270084973" fg:w="5062634"/><text x="95.8899%" y="1903.50"></text></g><g><title>clockevents_program_event (5,062,634 samples, 0.03%)</title><rect x="95.6399%" y="1877" width="0.0251%" height="15" fill="rgb(216,69,20)" fg:x="19270084973" fg:w="5062634"/><text x="95.8899%" y="1887.50"></text></g><g><title>rb_erase (2,468,464 samples, 0.01%)</title><rect x="95.6650%" y="1877" width="0.0123%" height="15" fill="rgb(229,73,31)" fg:x="19275147607" fg:w="2468464"/><text x="95.9150%" y="1887.50"></text></g><g><title>hrtimer_try_to_cancel (19,324,933 samples, 0.10%)</title><rect x="95.5815%" y="1941" width="0.0959%" height="15" fill="rgb(224,219,20)" fg:x="19258325498" fg:w="19324933"/><text x="95.8315%" y="1951.50"></text></g><g><title>remove_hrtimer (15,899,444 samples, 0.08%)</title><rect x="95.5985%" y="1925" width="0.0789%" height="15" fill="rgb(215,146,41)" fg:x="19261750987" fg:w="15899444"/><text x="95.8485%" y="1935.50"></text></g><g><title>__remove_hrtimer (12,925,198 samples, 0.06%)</title><rect x="95.6133%" y="1909" width="0.0641%" height="15" fill="rgb(244,71,31)" fg:x="19264725233" fg:w="12925198"/><text x="95.8633%" y="1919.50"></text></g><g><title>timerqueue_del (2,502,824 samples, 0.01%)</title><rect x="95.6650%" y="1893" width="0.0124%" height="15" fill="rgb(224,24,11)" fg:x="19275147607" fg:w="2502824"/><text x="95.9150%" y="1903.50"></text></g><g><title>hrtimer_cancel (22,946,430 samples, 0.11%)</title><rect x="95.5657%" y="1957" width="0.1139%" height="15" fill="rgb(229,76,15)" fg:x="19255139353" fg:w="22946430"/><text x="95.8157%" y="1967.50"></text></g><g><title>_raw_spin_lock_irqsave (3,706,213 samples, 0.02%)</title><rect x="95.7054%" y="1941" width="0.0184%" height="15" fill="rgb(209,93,2)" fg:x="19283292672" fg:w="3706213"/><text x="95.9554%" y="1951.50"></text></g><g><title>enqueue_hrtimer (2,119,445 samples, 0.01%)</title><rect x="95.7254%" y="1941" width="0.0105%" height="15" fill="rgb(216,200,50)" fg:x="19287322813" fg:w="2119445"/><text x="95.9754%" y="1951.50"></text></g><g><title>timerqueue_add (2,119,445 samples, 0.01%)</title><rect x="95.7254%" y="1925" width="0.0105%" height="15" fill="rgb(211,67,34)" fg:x="19287322813" fg:w="2119445"/><text x="95.9754%" y="1935.50"></text></g><g><title>ktime_get (2,545,712 samples, 0.01%)</title><rect x="95.7410%" y="1893" width="0.0126%" height="15" fill="rgb(225,87,47)" fg:x="19290458320" fg:w="2545712"/><text x="95.9910%" y="1903.50"></text></g><g><title>clockevents_program_event (3,696,245 samples, 0.02%)</title><rect x="95.7407%" y="1909" width="0.0183%" height="15" fill="rgb(217,185,16)" fg:x="19290388930" fg:w="3696245"/><text x="95.9907%" y="1919.50"></text></g><g><title>hrtimer_reprogram (4,931,058 samples, 0.02%)</title><rect x="95.7360%" y="1941" width="0.0245%" height="15" fill="rgb(205,0,0)" fg:x="19289442258" fg:w="4931058"/><text x="95.9860%" y="1951.50"></text></g><g><title>tick_program_event (4,433,080 samples, 0.02%)</title><rect x="95.7384%" y="1925" width="0.0220%" height="15" fill="rgb(207,116,45)" fg:x="19289940236" fg:w="4433080"/><text x="95.9884%" y="1935.50"></text></g><g><title>switch_hrtimer_base (3,823,057 samples, 0.02%)</title><rect x="95.7678%" y="1941" width="0.0190%" height="15" fill="rgb(221,156,26)" fg:x="19295848419" fg:w="3823057"/><text x="96.0178%" y="1951.50"></text></g><g><title>hrtimer_start_range_ns (19,350,668 samples, 0.10%)</title><rect x="95.6915%" y="1957" width="0.0960%" height="15" fill="rgb(213,140,4)" fg:x="19280481843" fg:w="19350668"/><text x="95.9415%" y="1967.50"></text></g><g><title>tick_do_update_jiffies64 (11,300,318 samples, 0.06%)</title><rect x="95.7944%" y="1957" width="0.0561%" height="15" fill="rgb(231,224,15)" fg:x="19301206345" fg:w="11300318"/><text x="96.0444%" y="1967.50"></text></g><g><title>tick_nohz_restart_sched_tick (60,548,694 samples, 0.30%)</title><rect x="95.5519%" y="1973" width="0.3005%" height="15" fill="rgb(244,76,20)" fg:x="19252360962" fg:w="60548694"/><text x="95.8019%" y="1983.50"></text></g><g><title>tick_nohz_idle_exit (126,411,865 samples, 0.63%)</title><rect x="95.2294%" y="1989" width="0.6274%" height="15" fill="rgb(238,117,7)" fg:x="19187373470" fg:w="126411865"/><text x="95.4794%" y="1999.50"></text></g><g><title>hrtimer_start_range_ns (4,185,927 samples, 0.02%)</title><rect x="95.8648%" y="1957" width="0.0208%" height="15" fill="rgb(235,1,10)" fg:x="19315409951" fg:w="4185927"/><text x="96.1148%" y="1967.50"></text></g><g><title>quiet_vmstat (8,579,175 samples, 0.04%)</title><rect x="95.8856%" y="1957" width="0.0426%" height="15" fill="rgb(216,165,6)" fg:x="19319595878" fg:w="8579175"/><text x="96.1356%" y="1967.50"></text></g><g><title>refresh_cpu_vm_stats (6,486,495 samples, 0.03%)</title><rect x="95.8960%" y="1941" width="0.0322%" height="15" fill="rgb(246,91,35)" fg:x="19321688558" fg:w="6486495"/><text x="96.1460%" y="1951.50"></text></g><g><title>tick_nohz_idle_stop_tick (15,137,969 samples, 0.08%)</title><rect x="95.8568%" y="1989" width="0.0751%" height="15" fill="rgb(228,96,24)" fg:x="19313785335" fg:w="15137969"/><text x="96.1068%" y="1999.50"></text></g><g><title>tick_nohz_stop_tick (14,088,995 samples, 0.07%)</title><rect x="95.8620%" y="1973" width="0.0699%" height="15" fill="rgb(254,217,53)" fg:x="19314834309" fg:w="14088995"/><text x="96.1120%" y="1983.50"></text></g><g><title>do_idle (6,311,320,175 samples, 31.32%)</title><rect x="64.6205%" y="2005" width="31.3239%" height="15" fill="rgb(209,60,0)" fg:x="13020117087" fg:w="6311320175"/><text x="64.8705%" y="2015.50">do_idle</text></g><g><title>flush_smp_call_function_queue (11,900,987 samples, 0.06%)</title><rect x="95.9444%" y="2005" width="0.0591%" height="15" fill="rgb(250,93,26)" fg:x="19331437262" fg:w="11900987"/><text x="96.1944%" y="2015.50"></text></g><g><title>cpu_startup_entry (6,327,752,218 samples, 31.41%)</title><rect x="64.6021%" y="2021" width="31.4054%" height="15" fill="rgb(211,9,40)" fg:x="13016415709" fg:w="6327752218"/><text x="64.8521%" y="2031.50">cpu_startup_entry</text></g><g><title>[vmlinux] (6,327,828,727 samples, 31.41%)</title><rect x="64.6021%" y="2037" width="31.4058%" height="15" fill="rgb(242,57,20)" fg:x="13016415709" fg:w="6327828727"/><text x="64.8521%" y="2047.50">[vmlinux]</text></g><g><title>asm_sysvec_apic_timer_interrupt (2,565,220 samples, 0.01%)</title><rect x="96.0091%" y="1909" width="0.0127%" height="15" fill="rgb(248,85,48)" fg:x="19344478299" fg:w="2565220"/><text x="96.2591%" y="1919.50"></text></g><g><title>asm_sysvec_call_function_single (16,641,999 samples, 0.08%)</title><rect x="96.0218%" y="1909" width="0.0826%" height="15" fill="rgb(212,117,2)" fg:x="19347043519" fg:w="16641999"/><text x="96.2718%" y="1919.50"></text></g><g><title>acpi_processor_ffh_cstate_enter (4,229,549 samples, 0.02%)</title><rect x="96.1058%" y="1861" width="0.0210%" height="15" fill="rgb(243,19,3)" fg:x="19363955285" fg:w="4229549"/><text x="96.3558%" y="1871.50"></text></g><g><title>acpi_idle_enter (6,596,087 samples, 0.03%)</title><rect x="96.1058%" y="1893" width="0.0327%" height="15" fill="rgb(232,217,24)" fg:x="19363955285" fg:w="6596087"/><text x="96.3558%" y="1903.50"></text></g><g><title>acpi_idle_do_entry (6,596,087 samples, 0.03%)</title><rect x="96.1058%" y="1877" width="0.0327%" height="15" fill="rgb(224,175,40)" fg:x="19363955285" fg:w="6596087"/><text x="96.3558%" y="1887.50"></text></g><g><title>io_idle (2,366,538 samples, 0.01%)</title><rect x="96.1268%" y="1861" width="0.0117%" height="15" fill="rgb(212,162,32)" fg:x="19368184834" fg:w="2366538"/><text x="96.3768%" y="1871.50"></text></g><g><title>_raw_spin_lock_irqsave (10,747,049 samples, 0.05%)</title><rect x="96.1687%" y="1845" width="0.0533%" height="15" fill="rgb(215,9,4)" fg:x="19376625447" fg:w="10747049"/><text x="96.4187%" y="1855.50"></text></g><g><title>__hrtimer_run_queues (3,213,819 samples, 0.02%)</title><rect x="96.2362%" y="1829" width="0.0160%" height="15" fill="rgb(242,42,7)" fg:x="19390231837" fg:w="3213819"/><text x="96.4862%" y="1839.50"></text></g><g><title>__run_hrtimer (2,501,097 samples, 0.01%)</title><rect x="96.2397%" y="1813" width="0.0124%" height="15" fill="rgb(242,184,45)" fg:x="19390944559" fg:w="2501097"/><text x="96.4897%" y="1823.50"></text></g><g><title>timerqueue_del (2,501,097 samples, 0.01%)</title><rect x="96.2397%" y="1797" width="0.0124%" height="15" fill="rgb(228,111,51)" fg:x="19390944559" fg:w="2501097"/><text x="96.4897%" y="1807.50"></text></g><g><title>_raw_spin_lock_irqsave (7,423,447 samples, 0.04%)</title><rect x="96.2593%" y="1829" width="0.0368%" height="15" fill="rgb(236,147,17)" fg:x="19394887933" fg:w="7423447"/><text x="96.5093%" y="1839.50"></text></g><g><title>ktime_get_update_offsets_now (33,180,460 samples, 0.16%)</title><rect x="96.2962%" y="1829" width="0.1647%" height="15" fill="rgb(210,75,22)" fg:x="19402311380" fg:w="33180460"/><text x="96.5462%" y="1839.50"></text></g><g><title>read_tsc (21,536,865 samples, 0.11%)</title><rect x="96.3539%" y="1813" width="0.1069%" height="15" fill="rgb(217,159,45)" fg:x="19413954975" fg:w="21536865"/><text x="96.6039%" y="1823.50"></text></g><g><title>hrtimer_interrupt (48,301,761 samples, 0.24%)</title><rect x="96.2220%" y="1845" width="0.2397%" height="15" fill="rgb(245,165,53)" fg:x="19387372496" fg:w="48301761"/><text x="96.4720%" y="1855.50"></text></g><g><title>ktime_get_update_offsets_now (9,029,595 samples, 0.04%)</title><rect x="96.4617%" y="1845" width="0.0448%" height="15" fill="rgb(251,190,50)" fg:x="19435674257" fg:w="9029595"/><text x="96.7117%" y="1855.50"></text></g><g><title>__sysvec_apic_timer_interrupt (72,775,614 samples, 0.36%)</title><rect x="96.1497%" y="1861" width="0.3612%" height="15" fill="rgb(208,203,29)" fg:x="19372802439" fg:w="72775614"/><text x="96.3997%" y="1871.50"></text></g><g><title>hrtimer_interrupt (3,000,775 samples, 0.01%)</title><rect x="96.5190%" y="1861" width="0.0149%" height="15" fill="rgb(207,209,35)" fg:x="19447206558" fg:w="3000775"/><text x="96.7690%" y="1871.50"></text></g><g><title>ktime_get (7,026,481 samples, 0.03%)</title><rect x="96.6122%" y="1829" width="0.0349%" height="15" fill="rgb(230,144,49)" fg:x="19465999275" fg:w="7026481"/><text x="96.8622%" y="1839.50"></text></g><g><title>read_tsc (4,597,698 samples, 0.02%)</title><rect x="96.6243%" y="1813" width="0.0228%" height="15" fill="rgb(229,31,6)" fg:x="19468428058" fg:w="4597698"/><text x="96.8743%" y="1823.50"></text></g><g><title>nr_iowait_cpu (2,400,888 samples, 0.01%)</title><rect x="96.6471%" y="1829" width="0.0119%" height="15" fill="rgb(251,129,24)" fg:x="19473025756" fg:w="2400888"/><text x="96.8971%" y="1839.50"></text></g><g><title>tick_check_oneshot_broadcast_this_cpu (7,756,799 samples, 0.04%)</title><rect x="96.6701%" y="1829" width="0.0385%" height="15" fill="rgb(235,105,15)" fg:x="19477652126" fg:w="7756799"/><text x="96.9201%" y="1839.50"></text></g><g><title>irq_enter_rcu (36,266,809 samples, 0.18%)</title><rect x="96.5339%" y="1861" width="0.1800%" height="15" fill="rgb(216,52,43)" fg:x="19450207333" fg:w="36266809"/><text x="96.7839%" y="1871.50"></text></g><g><title>tick_irq_enter (31,556,659 samples, 0.16%)</title><rect x="96.5572%" y="1845" width="0.1566%" height="15" fill="rgb(238,144,41)" fg:x="19454917483" fg:w="31556659"/><text x="96.8072%" y="1855.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (116,603,904 samples, 0.58%)</title><rect x="96.1385%" y="1893" width="0.5787%" height="15" fill="rgb(243,63,9)" fg:x="19370551372" fg:w="116603904"/><text x="96.3885%" y="1903.50"></text></g><g><title>sysvec_apic_timer_interrupt (116,434,676 samples, 0.58%)</title><rect x="96.1394%" y="1877" width="0.5779%" height="15" fill="rgb(246,208,1)" fg:x="19370720600" fg:w="116434676"/><text x="96.3894%" y="1887.50"></text></g><g><title>irqentry_enter (3,080,251 samples, 0.02%)</title><rect x="96.7172%" y="1877" width="0.0153%" height="15" fill="rgb(233,182,18)" fg:x="19487155276" fg:w="3080251"/><text x="96.9672%" y="1887.50"></text></g><g><title>__flush_smp_call_function_queue (6,857,830 samples, 0.03%)</title><rect x="96.7507%" y="1829" width="0.0340%" height="15" fill="rgb(242,224,8)" fg:x="19493895098" fg:w="6857830"/><text x="97.0007%" y="1839.50"></text></g><g><title>__sysvec_call_function_single (8,019,850 samples, 0.04%)</title><rect x="96.7454%" y="1861" width="0.0398%" height="15" fill="rgb(243,54,37)" fg:x="19492833269" fg:w="8019850"/><text x="96.9954%" y="1871.50"></text></g><g><title>generic_smp_call_function_single_interrupt (6,958,021 samples, 0.03%)</title><rect x="96.7507%" y="1845" width="0.0345%" height="15" fill="rgb(233,192,12)" fg:x="19493895098" fg:w="6958021"/><text x="97.0007%" y="1855.50"></text></g><g><title>ct_irq_enter (2,595,949 samples, 0.01%)</title><rect x="96.7852%" y="1861" width="0.0129%" height="15" fill="rgb(251,192,53)" fg:x="19500853119" fg:w="2595949"/><text x="97.0352%" y="1871.50"></text></g><g><title>ktime_get (15,341,555 samples, 0.08%)</title><rect x="96.8243%" y="1829" width="0.0761%" height="15" fill="rgb(246,141,26)" fg:x="19508726605" fg:w="15341555"/><text x="97.0743%" y="1839.50"></text></g><g><title>read_tsc (8,637,609 samples, 0.04%)</title><rect x="96.8576%" y="1813" width="0.0429%" height="15" fill="rgb(239,195,19)" fg:x="19515430551" fg:w="8637609"/><text x="97.1076%" y="1823.50"></text></g><g><title>nr_iowait_cpu (3,437,469 samples, 0.02%)</title><rect x="96.9004%" y="1829" width="0.0171%" height="15" fill="rgb(241,16,39)" fg:x="19524068160" fg:w="3437469"/><text x="97.1504%" y="1839.50"></text></g><g><title>tick_check_oneshot_broadcast_this_cpu (4,562,679 samples, 0.02%)</title><rect x="96.9250%" y="1829" width="0.0226%" height="15" fill="rgb(223,13,53)" fg:x="19529006617" fg:w="4562679"/><text x="97.1750%" y="1839.50"></text></g><g><title>tick_do_update_jiffies64 (4,095,608 samples, 0.02%)</title><rect x="96.9476%" y="1829" width="0.0203%" height="15" fill="rgb(214,227,0)" fg:x="19533569296" fg:w="4095608"/><text x="97.1976%" y="1839.50"></text></g><g><title>tick_irq_enter (32,465,026 samples, 0.16%)</title><rect x="96.8087%" y="1845" width="0.1611%" height="15" fill="rgb(228,103,26)" fg:x="19505576753" fg:w="32465026"/><text x="97.0587%" y="1855.50"></text></g><g><title>irq_enter_rcu (34,722,012 samples, 0.17%)</title><rect x="96.7981%" y="1861" width="0.1723%" height="15" fill="rgb(254,177,53)" fg:x="19503449068" fg:w="34722012"/><text x="97.0481%" y="1871.50"></text></g><g><title>__folio_end_writeback (2,228,052 samples, 0.01%)</title><rect x="96.9817%" y="1669" width="0.0111%" height="15" fill="rgb(208,201,34)" fg:x="19540441378" fg:w="2228052"/><text x="97.2317%" y="1679.50"></text></g><g><title>folio_rotate_reclaimable (2,036,307 samples, 0.01%)</title><rect x="96.9928%" y="1669" width="0.0101%" height="15" fill="rgb(212,39,5)" fg:x="19542669430" fg:w="2036307"/><text x="97.2428%" y="1679.50"></text></g><g><title>folio_batch_move_lru (2,036,307 samples, 0.01%)</title><rect x="96.9928%" y="1653" width="0.0101%" height="15" fill="rgb(246,117,3)" fg:x="19542669430" fg:w="2036307"/><text x="97.2428%" y="1663.50"></text></g><g><title>blk_done_softirq (5,918,164 samples, 0.03%)</title><rect x="96.9745%" y="1829" width="0.0294%" height="15" fill="rgb(244,118,39)" fg:x="19538980503" fg:w="5918164"/><text x="97.2245%" y="1839.50"></text></g><g><title>scsi_complete (5,918,164 samples, 0.03%)</title><rect x="96.9745%" y="1813" width="0.0294%" height="15" fill="rgb(241,64,10)" fg:x="19538980503" fg:w="5918164"/><text x="97.2245%" y="1823.50"></text></g><g><title>scsi_finish_command (5,918,164 samples, 0.03%)</title><rect x="96.9745%" y="1797" width="0.0294%" height="15" fill="rgb(229,39,44)" fg:x="19538980503" fg:w="5918164"/><text x="97.2245%" y="1807.50"></text></g><g><title>scsi_io_completion (5,918,164 samples, 0.03%)</title><rect x="96.9745%" y="1781" width="0.0294%" height="15" fill="rgb(230,226,3)" fg:x="19538980503" fg:w="5918164"/><text x="97.2245%" y="1791.50"></text></g><g><title>scsi_end_request (5,918,164 samples, 0.03%)</title><rect x="96.9745%" y="1765" width="0.0294%" height="15" fill="rgb(222,13,42)" fg:x="19538980503" fg:w="5918164"/><text x="97.2245%" y="1775.50"></text></g><g><title>blk_update_request (5,524,114 samples, 0.03%)</title><rect x="96.9764%" y="1749" width="0.0274%" height="15" fill="rgb(247,180,54)" fg:x="19539374553" fg:w="5524114"/><text x="97.2264%" y="1759.50"></text></g><g><title>bio_endio (5,524,114 samples, 0.03%)</title><rect x="96.9764%" y="1733" width="0.0274%" height="15" fill="rgb(205,96,16)" fg:x="19539374553" fg:w="5524114"/><text x="97.2264%" y="1743.50"></text></g><g><title>ext4_end_bio (5,524,114 samples, 0.03%)</title><rect x="96.9764%" y="1717" width="0.0274%" height="15" fill="rgb(205,100,21)" fg:x="19539374553" fg:w="5524114"/><text x="97.2264%" y="1727.50"></text></g><g><title>ext4_finish_bio (5,524,114 samples, 0.03%)</title><rect x="96.9764%" y="1701" width="0.0274%" height="15" fill="rgb(248,51,4)" fg:x="19539374553" fg:w="5524114"/><text x="97.2264%" y="1711.50"></text></g><g><title>folio_end_writeback (4,646,859 samples, 0.02%)</title><rect x="96.9808%" y="1685" width="0.0231%" height="15" fill="rgb(217,197,30)" fg:x="19540251808" fg:w="4646859"/><text x="97.2308%" y="1695.50"></text></g><g><title>irq_exit_rcu (7,176,851 samples, 0.04%)</title><rect x="96.9704%" y="1861" width="0.0356%" height="15" fill="rgb(240,179,40)" fg:x="19538171080" fg:w="7176851"/><text x="97.2204%" y="1871.50"></text></g><g><title>__kprobes_text_end (6,367,428 samples, 0.03%)</title><rect x="96.9745%" y="1845" width="0.0316%" height="15" fill="rgb(212,185,35)" fg:x="19538980503" fg:w="6367428"/><text x="97.2245%" y="1855.50"></text></g><g><title>irqentry_enter (310,810,902 samples, 1.54%)</title><rect x="97.0061%" y="1861" width="1.5426%" height="15" fill="rgb(251,222,31)" fg:x="19545347931" fg:w="310810902"/><text x="97.2561%" y="1871.50"></text></g><g><title>asm_sysvec_call_function_single (369,588,105 samples, 1.83%)</title><rect x="96.7172%" y="1893" width="1.8343%" height="15" fill="rgb(208,140,36)" fg:x="19487155276" fg:w="369588105"/><text x="96.9672%" y="1903.50">a..</text></g><g><title>sysvec_call_function_single (366,507,854 samples, 1.82%)</title><rect x="96.7325%" y="1877" width="1.8190%" height="15" fill="rgb(220,148,1)" fg:x="19490235527" fg:w="366507854"/><text x="96.9825%" y="1887.50">s..</text></g><g><title>cpuidle_enter_state (494,929,940 samples, 2.46%)</title><rect x="96.1058%" y="1909" width="2.4564%" height="15" fill="rgb(254,4,28)" fg:x="19363955285" fg:w="494929940"/><text x="96.3558%" y="1919.50">cp..</text></g><g><title>poll_idle (2,141,844 samples, 0.01%)</title><rect x="98.5516%" y="1893" width="0.0106%" height="15" fill="rgb(222,185,44)" fg:x="19856743381" fg:w="2141844"/><text x="98.8016%" y="1903.50"></text></g><g><title>error_entry (5,630,156 samples, 0.03%)</title><rect x="98.5622%" y="1909" width="0.0279%" height="15" fill="rgb(215,74,39)" fg:x="19858885225" fg:w="5630156"/><text x="98.8122%" y="1919.50"></text></g><g><title>sysvec_call_function_single (3,724,698 samples, 0.02%)</title><rect x="98.5938%" y="1909" width="0.0185%" height="15" fill="rgb(247,86,4)" fg:x="19865247715" fg:w="3724698"/><text x="98.8438%" y="1919.50"></text></g><g><title>cpuidle_enter (525,363,352 samples, 2.61%)</title><rect x="96.0091%" y="1925" width="2.6074%" height="15" fill="rgb(231,105,32)" fg:x="19344478299" fg:w="525363352"/><text x="96.2591%" y="1935.50">cp..</text></g><g><title>cpuidle_select (8,152,241 samples, 0.04%)</title><rect x="98.6182%" y="1925" width="0.0405%" height="15" fill="rgb(222,65,35)" fg:x="19870169082" fg:w="8152241"/><text x="98.8682%" y="1935.50"></text></g><g><title>menu_select (8,152,241 samples, 0.04%)</title><rect x="98.6182%" y="1909" width="0.0405%" height="15" fill="rgb(218,145,35)" fg:x="19870169082" fg:w="8152241"/><text x="98.8682%" y="1919.50"></text></g><g><title>tick_nohz_get_sleep_length (4,497,788 samples, 0.02%)</title><rect x="98.6363%" y="1893" width="0.0223%" height="15" fill="rgb(208,7,15)" fg:x="19873823535" fg:w="4497788"/><text x="98.8863%" y="1903.50"></text></g><g><title>tick_nohz_next_event (3,573,703 samples, 0.02%)</title><rect x="98.6409%" y="1877" width="0.0177%" height="15" fill="rgb(209,83,13)" fg:x="19874747620" fg:w="3573703"/><text x="98.8909%" y="1887.50"></text></g><g><title>do_softirq (4,619,756 samples, 0.02%)</title><rect x="98.6586%" y="1925" width="0.0229%" height="15" fill="rgb(218,3,10)" fg:x="19878321323" fg:w="4619756"/><text x="98.9086%" y="1935.50"></text></g><g><title>__blk_mq_complete_request_remote (22,902,979 samples, 0.11%)</title><rect x="98.7236%" y="1909" width="0.1137%" height="15" fill="rgb(211,219,4)" fg:x="19891400869" fg:w="22902979"/><text x="98.9736%" y="1919.50"></text></g><g><title>__blk_mq_complete_request_remote (7,932,646 samples, 0.04%)</title><rect x="98.9514%" y="1893" width="0.0394%" height="15" fill="rgb(228,194,12)" fg:x="19937308213" fg:w="7932646"/><text x="99.2014%" y="1903.50"></text></g><g><title>__raise_softirq_irqoff (3,255,391 samples, 0.02%)</title><rect x="98.9746%" y="1877" width="0.0162%" height="15" fill="rgb(210,175,7)" fg:x="19941985468" fg:w="3255391"/><text x="99.2246%" y="1887.50"></text></g><g><title>__raise_softirq_irqoff (19,903,480 samples, 0.10%)</title><rect x="98.9908%" y="1893" width="0.0988%" height="15" fill="rgb(243,132,6)" fg:x="19945240859" fg:w="19903480"/><text x="99.2408%" y="1903.50"></text></g><g><title>llist_reverse_order (17,386,372 samples, 0.09%)</title><rect x="99.0896%" y="1893" width="0.0863%" height="15" fill="rgb(207,72,18)" fg:x="19965144339" fg:w="17386372"/><text x="99.3396%" y="1903.50"></text></g><g><title>psi_task_change (2,421,636 samples, 0.01%)</title><rect x="99.1839%" y="1845" width="0.0120%" height="15" fill="rgb(236,1,18)" fg:x="19984154077" fg:w="2421636"/><text x="99.4339%" y="1855.50"></text></g><g><title>enqueue_task (3,046,046 samples, 0.02%)</title><rect x="99.1839%" y="1861" width="0.0151%" height="15" fill="rgb(227,0,18)" fg:x="19984154077" fg:w="3046046"/><text x="99.4339%" y="1871.50"></text></g><g><title>ttwu_do_activate (3,653,508 samples, 0.02%)</title><rect x="99.1839%" y="1877" width="0.0181%" height="15" fill="rgb(247,37,5)" fg:x="19984154077" fg:w="3653508"/><text x="99.4339%" y="1887.50"></text></g><g><title>__flush_smp_call_function_queue (74,000,332 samples, 0.37%)</title><rect x="98.8372%" y="1909" width="0.3673%" height="15" fill="rgb(237,179,24)" fg:x="19914303848" fg:w="74000332"/><text x="99.0872%" y="1919.50"></text></g><g><title>sched_ttwu_pending (5,773,469 samples, 0.03%)</title><rect x="99.1759%" y="1893" width="0.0287%" height="15" fill="rgb(226,53,20)" fg:x="19982530711" fg:w="5773469"/><text x="99.4259%" y="1903.50"></text></g><g><title>__x86_indirect_thunk_r11 (6,167,033 samples, 0.03%)</title><rect x="99.2045%" y="1909" width="0.0306%" height="15" fill="rgb(247,75,7)" fg:x="19988304180" fg:w="6167033"/><text x="99.4545%" y="1919.50"></text></g><g><title>llist_reverse_order (18,706,122 samples, 0.09%)</title><rect x="99.3352%" y="1861" width="0.0928%" height="15" fill="rgb(233,96,12)" fg:x="20014631383" fg:w="18706122"/><text x="99.5852%" y="1871.50"></text></g><g><title>scsi_end_request (2,407,109 samples, 0.01%)</title><rect x="99.4444%" y="1813" width="0.0119%" height="15" fill="rgb(224,125,0)" fg:x="20036642507" fg:w="2407109"/><text x="99.6944%" y="1823.50"></text></g><g><title>blk_done_softirq (27,994,160 samples, 0.14%)</title><rect x="99.3185%" y="1877" width="0.1389%" height="15" fill="rgb(224,92,25)" fg:x="20011278739" fg:w="27994160"/><text x="99.5685%" y="1887.50"></text></g><g><title>scsi_complete (5,935,394 samples, 0.03%)</title><rect x="99.4280%" y="1861" width="0.0295%" height="15" fill="rgb(224,42,24)" fg:x="20033337505" fg:w="5935394"/><text x="99.6780%" y="1871.50"></text></g><g><title>scsi_finish_command (2,630,392 samples, 0.01%)</title><rect x="99.4444%" y="1845" width="0.0131%" height="15" fill="rgb(234,132,49)" fg:x="20036642507" fg:w="2630392"/><text x="99.6944%" y="1855.50"></text></g><g><title>scsi_io_completion (2,630,392 samples, 0.01%)</title><rect x="99.4444%" y="1829" width="0.0131%" height="15" fill="rgb(248,100,35)" fg:x="20036642507" fg:w="2630392"/><text x="99.6944%" y="1839.50"></text></g><g><title>__kprobes_text_end (41,053,692 samples, 0.20%)</title><rect x="99.2609%" y="1893" width="0.2038%" height="15" fill="rgb(239,94,40)" fg:x="19999676357" fg:w="41053692"/><text x="99.5109%" y="1903.50"></text></g><g><title>do_softirq (50,795,163 samples, 0.25%)</title><rect x="99.2351%" y="1909" width="0.2521%" height="15" fill="rgb(235,139,28)" fg:x="19994471213" fg:w="50795163"/><text x="99.4851%" y="1919.50"></text></g><g><title>blk_done_softirq (4,034,320 samples, 0.02%)</title><rect x="99.4672%" y="1893" width="0.0200%" height="15" fill="rgb(217,144,7)" fg:x="20041232056" fg:w="4034320"/><text x="99.7172%" y="1903.50"></text></g><g><title>flush_smp_call_function_queue (164,272,315 samples, 0.82%)</title><rect x="98.6816%" y="1925" width="0.8153%" height="15" fill="rgb(227,55,4)" fg:x="19882941079" fg:w="164272315"/><text x="98.9316%" y="1935.50"></text></g><g><title>hrtimer_forward (4,029,250 samples, 0.02%)</title><rect x="99.5223%" y="1909" width="0.0200%" height="15" fill="rgb(252,82,54)" fg:x="20052327606" fg:w="4029250"/><text x="99.7723%" y="1919.50"></text></g><g><title>calc_load_nohz_stop (3,506,892 samples, 0.02%)</title><rect x="99.5726%" y="1893" width="0.0174%" height="15" fill="rgb(245,172,4)" fg:x="20062462196" fg:w="3506892"/><text x="99.8226%" y="1903.50"></text></g><g><title>__remove_hrtimer (3,378,527 samples, 0.02%)</title><rect x="99.6154%" y="1845" width="0.0168%" height="15" fill="rgb(207,26,27)" fg:x="20071100368" fg:w="3378527"/><text x="99.8654%" y="1855.50"></text></g><g><title>hrtimer_cancel (8,635,203 samples, 0.04%)</title><rect x="99.5938%" y="1893" width="0.0429%" height="15" fill="rgb(252,98,18)" fg:x="20066743157" fg:w="8635203"/><text x="99.8438%" y="1903.50"></text></g><g><title>hrtimer_try_to_cancel (6,267,405 samples, 0.03%)</title><rect x="99.6056%" y="1877" width="0.0311%" height="15" fill="rgb(244,8,26)" fg:x="20069110955" fg:w="6267405"/><text x="99.8556%" y="1887.50"></text></g><g><title>remove_hrtimer (4,603,220 samples, 0.02%)</title><rect x="99.6138%" y="1861" width="0.0228%" height="15" fill="rgb(237,173,45)" fg:x="20070775140" fg:w="4603220"/><text x="99.8638%" y="1871.50"></text></g><g><title>_raw_spin_lock_irqsave (4,521,089 samples, 0.02%)</title><rect x="99.6434%" y="1877" width="0.0224%" height="15" fill="rgb(208,213,49)" fg:x="20076735417" fg:w="4521089"/><text x="99.8934%" y="1887.50"></text></g><g><title>enqueue_hrtimer (2,122,489 samples, 0.01%)</title><rect x="99.6658%" y="1877" width="0.0105%" height="15" fill="rgb(212,122,37)" fg:x="20081256506" fg:w="2122489"/><text x="99.9158%" y="1887.50"></text></g><g><title>hrtimer_reprogram (4,538,457 samples, 0.02%)</title><rect x="99.6764%" y="1877" width="0.0225%" height="15" fill="rgb(213,80,17)" fg:x="20083378995" fg:w="4538457"/><text x="99.9264%" y="1887.50"></text></g><g><title>tick_program_event (3,675,789 samples, 0.02%)</title><rect x="99.6807%" y="1861" width="0.0182%" height="15" fill="rgb(206,210,43)" fg:x="20084241663" fg:w="3675789"/><text x="99.9307%" y="1871.50"></text></g><g><title>clockevents_program_event (3,675,789 samples, 0.02%)</title><rect x="99.6807%" y="1845" width="0.0182%" height="15" fill="rgb(229,214,3)" fg:x="20084241663" fg:w="3675789"/><text x="99.9307%" y="1855.50"></text></g><g><title>hrtimer_start_range_ns (14,917,684 samples, 0.07%)</title><rect x="99.6367%" y="1893" width="0.0740%" height="15" fill="rgb(235,213,29)" fg:x="20075378360" fg:w="14917684"/><text x="99.8867%" y="1903.50"></text></g><g><title>tick_nohz_restart_sched_tick (34,285,652 samples, 0.17%)</title><rect x="99.5617%" y="1909" width="0.1702%" height="15" fill="rgb(248,135,26)" fg:x="20060280189" fg:w="34285652"/><text x="99.8117%" y="1919.50"></text></g><g><title>tick_do_update_jiffies64 (3,752,210 samples, 0.02%)</title><rect x="99.7133%" y="1893" width="0.0186%" height="15" fill="rgb(242,188,12)" fg:x="20090813631" fg:w="3752210"/><text x="99.9633%" y="1903.50"></text></g><g><title>tick_nohz_idle_exit (45,457,193 samples, 0.23%)</title><rect x="99.5080%" y="1925" width="0.2256%" height="15" fill="rgb(245,38,12)" fg:x="20049443902" fg:w="45457193"/><text x="99.7580%" y="1935.50"></text></g><g><title>cpu_startup_entry (752,637,856 samples, 3.74%)</title><rect x="96.0080%" y="1957" width="3.7354%" height="15" fill="rgb(218,42,13)" fg:x="19344244436" fg:w="752637856"/><text x="96.2580%" y="1967.50">cpu_..</text></g><g><title>do_idle (752,403,993 samples, 3.73%)</title><rect x="96.0091%" y="1941" width="3.7343%" height="15" fill="rgb(238,132,49)" fg:x="19344478299" fg:w="752403993"/><text x="96.2591%" y="1951.50">do_i..</text></g><g><title>secondary_startup_64_no_verify (7,080,764,399 samples, 35.14%)</title><rect x="64.6021%" y="2053" width="35.1427%" height="15" fill="rgb(209,196,19)" fg:x="13016415709" fg:w="7080764399"/><text x="64.8521%" y="2063.50">secondary_startup_64_no_verify</text></g><g><title>x86_64_start_kernel (752,935,672 samples, 3.74%)</title><rect x="96.0080%" y="2037" width="3.7369%" height="15" fill="rgb(244,131,22)" fg:x="19344244436" fg:w="752935672"/><text x="96.2580%" y="2047.50">x86_..</text></g><g><title>[[kernel.vmlinux].init.text] (752,935,672 samples, 3.74%)</title><rect x="96.0080%" y="2021" width="3.7369%" height="15" fill="rgb(223,18,34)" fg:x="19344244436" fg:w="752935672"/><text x="96.2580%" y="2031.50">[[ke..</text></g><g><title>start_kernel (752,935,672 samples, 3.74%)</title><rect x="96.0080%" y="2005" width="3.7369%" height="15" fill="rgb(252,124,54)" fg:x="19344244436" fg:w="752935672"/><text x="96.2580%" y="2015.50">star..</text></g><g><title>[[kernel.vmlinux].init.text] (752,935,672 samples, 3.74%)</title><rect x="96.0080%" y="1989" width="3.7369%" height="15" fill="rgb(229,106,42)" fg:x="19344244436" fg:w="752935672"/><text x="96.2580%" y="1999.50">[[ke..</text></g><g><title>[vmlinux] (752,935,672 samples, 3.74%)</title><rect x="96.0080%" y="1973" width="3.7369%" height="15" fill="rgb(221,129,1)" fg:x="19344244436" fg:w="752935672"/><text x="96.2580%" y="1983.50">[vml..</text></g><g><title>sysvec_apic_timer_interrupt (6,248,460 samples, 0.03%)</title><rect x="99.7449%" y="2053" width="0.0310%" height="15" fill="rgb(229,74,15)" fg:x="20097180108" fg:w="6248460"/><text x="99.9949%" y="2063.50"></text></g><g><title>swapper (7,166,270,228 samples, 35.57%)</title><rect x="64.2094%" y="2069" width="35.5671%" height="15" fill="rgb(210,206,50)" fg:x="12937291605" fg:w="7166270228"/><text x="64.4594%" y="2079.50">swapper</text></g><g><title>__GI___libc_open (2,463,657 samples, 0.01%)</title><rect x="99.7938%" y="2037" width="0.0122%" height="15" fill="rgb(251,114,31)" fg:x="20107037694" fg:w="2463657"/><text x="100.0438%" y="2047.50"></text></g><g><title>entry_SYSCALL_64 (2,463,657 samples, 0.01%)</title><rect x="99.7938%" y="2021" width="0.0122%" height="15" fill="rgb(215,225,28)" fg:x="20107037694" fg:w="2463657"/><text x="100.0438%" y="2031.50"></text></g><g><title>do_syscall_64 (2,463,657 samples, 0.01%)</title><rect x="99.7938%" y="2005" width="0.0122%" height="15" fill="rgb(237,109,14)" fg:x="20107037694" fg:w="2463657"/><text x="100.0438%" y="2015.50"></text></g><g><title>__x64_sys_openat (2,463,657 samples, 0.01%)</title><rect x="99.7938%" y="1989" width="0.0122%" height="15" fill="rgb(230,13,37)" fg:x="20107037694" fg:w="2463657"/><text x="100.0438%" y="1999.50"></text></g><g><title>do_sys_openat2 (2,463,657 samples, 0.01%)</title><rect x="99.7938%" y="1973" width="0.0122%" height="15" fill="rgb(231,40,28)" fg:x="20107037694" fg:w="2463657"/><text x="100.0438%" y="1983.50"></text></g><g><title>[unknown] (7,453,896 samples, 0.04%)</title><rect x="99.7768%" y="2053" width="0.0370%" height="15" fill="rgb(231,202,18)" fg:x="20103604953" fg:w="7453896"/><text x="100.0268%" y="2063.50"></text></g><g><title>systemd-journal (9,099,741 samples, 0.05%)</title><rect x="99.7765%" y="2069" width="0.0452%" height="15" fill="rgb(225,33,18)" fg:x="20103561833" fg:w="9099741"/><text x="100.0265%" y="2079.50"></text></g><g><title>systemd-logind (3,520,130 samples, 0.02%)</title><rect x="99.8217%" y="2069" width="0.0175%" height="15" fill="rgb(223,64,47)" fg:x="20112661574" fg:w="3520130"/><text x="100.0717%" y="2079.50"></text></g><g><title>[unknown] (2,437,287 samples, 0.01%)</title><rect x="99.8427%" y="2053" width="0.0121%" height="15" fill="rgb(234,114,13)" fg:x="20116886473" fg:w="2437287"/><text x="100.0927%" y="2063.50"></text></g><g><title>[unknown] (2,437,287 samples, 0.01%)</title><rect x="99.8427%" y="2037" width="0.0121%" height="15" fill="rgb(248,56,40)" fg:x="20116886473" fg:w="2437287"/><text x="100.0927%" y="2047.50"></text></g><g><title>systemd-resolve (3,650,033 samples, 0.02%)</title><rect x="99.8392%" y="2069" width="0.0181%" height="15" fill="rgb(221,194,21)" fg:x="20116181704" fg:w="3650033"/><text x="100.0892%" y="2079.50"></text></g><g><title>[tmux] (2,486,635 samples, 0.01%)</title><rect x="99.8675%" y="2037" width="0.0123%" height="15" fill="rgb(242,108,46)" fg:x="20121878548" fg:w="2486635"/><text x="100.1175%" y="2047.50"></text></g><g><title>[unknown] (2,554,368 samples, 0.01%)</title><rect x="99.8798%" y="2037" width="0.0127%" height="15" fill="rgb(220,106,10)" fg:x="20124365183" fg:w="2554368"/><text x="100.1298%" y="2047.50"></text></g><g><title>[unknown] (9,432,325 samples, 0.05%)</title><rect x="99.8630%" y="2053" width="0.0468%" height="15" fill="rgb(211,88,4)" fg:x="20120980188" fg:w="9432325"/><text x="100.1130%" y="2063.50"></text></g><g><title>entry_SYSCALL_64 (2,982,493 samples, 0.01%)</title><rect x="99.9177%" y="2037" width="0.0148%" height="15" fill="rgb(214,95,34)" fg:x="20132002310" fg:w="2982493"/><text x="100.1677%" y="2047.50"></text></g><g><title>do_syscall_64 (2,982,493 samples, 0.01%)</title><rect x="99.9177%" y="2021" width="0.0148%" height="15" fill="rgb(250,160,33)" fg:x="20132002310" fg:w="2982493"/><text x="100.1677%" y="2031.50"></text></g><g><title>__poll (3,327,523 samples, 0.02%)</title><rect x="99.9177%" y="2053" width="0.0165%" height="15" fill="rgb(225,29,10)" fg:x="20132002310" fg:w="3327523"/><text x="100.1677%" y="2063.50"></text></g><g><title>tmux:_server (16,131,880 samples, 0.08%)</title><rect x="99.8601%" y="2069" width="0.0801%" height="15" fill="rgb(224,28,30)" fg:x="20120403470" fg:w="16131880"/><text x="100.1101%" y="2079.50"></text></g><g><title>[cursor-b1e87884330fc271d5eb589e368c35f14e76dec0] (7,136,620 samples, 0.04%)</title><rect x="99.9402%" y="2053" width="0.0354%" height="15" fill="rgb(231,77,4)" fg:x="20136535350" fg:w="7136620"/><text x="100.1902%" y="2063.50"></text></g><g><title>entry_SYSCALL_64 (2,176,842 samples, 0.01%)</title><rect x="99.9648%" y="2037" width="0.0108%" height="15" fill="rgb(209,63,21)" fg:x="20141495128" fg:w="2176842"/><text x="100.2148%" y="2047.50"></text></g><g><title>do_syscall_64 (2,176,842 samples, 0.01%)</title><rect x="99.9648%" y="2021" width="0.0108%" height="15" fill="rgb(226,22,11)" fg:x="20141495128" fg:w="2176842"/><text x="100.2148%" y="2031.50"></text></g><g><title>[cursor-b1e87884330fc271d5eb589e368c35f14e76dec0] (2,616,832 samples, 0.01%)</title><rect x="99.9756%" y="2037" width="0.0130%" height="15" fill="rgb(216,82,30)" fg:x="20143671970" fg:w="2616832"/><text x="100.2256%" y="2047.50"></text></g><g><title>tokio-runtime-w (10,261,883 samples, 0.05%)</title><rect x="99.9402%" y="2069" width="0.0509%" height="15" fill="rgb(246,227,38)" fg:x="20136535350" fg:w="10261883"/><text x="100.1902%" y="2079.50"></text></g><g><title>[unknown] (3,125,263 samples, 0.02%)</title><rect x="99.9756%" y="2053" width="0.0155%" height="15" fill="rgb(251,203,53)" fg:x="20143671970" fg:w="3125263"/><text x="100.2256%" y="2063.50"></text></g><g><title>all (20,148,584,580 samples, 100%)</title><rect x="0.0000%" y="2085" width="100.0000%" height="15" fill="rgb(254,101,1)" fg:x="0" fg:w="20148584580"/><text x="0.2500%" y="2095.50"></text></g></svg></svg>