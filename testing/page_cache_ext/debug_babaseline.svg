<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1654" onload="init(evt)" viewBox="0 0 1200 1654" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1654" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1637.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1637.00"> </text><svg id="frames" x="10" width="1180" total_samples="3065"><g><title>[perf-2359.map] (1 samples, 0.03%)</title><rect x="0.0000%" y="1573" width="0.0326%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1583.50"></text></g><g><title>[libcoreclr.so] (1 samples, 0.03%)</title><rect x="0.0000%" y="1557" width="0.0326%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1567.50"></text></g><g><title>[libcoreclr.so] (1 samples, 0.03%)</title><rect x="0.0000%" y="1541" width="0.0326%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1551.50"></text></g><g><title>__GI___sched_yield (1 samples, 0.03%)</title><rect x="0.0000%" y="1525" width="0.0326%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1535.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="0.0000%" y="1509" width="0.0326%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1519.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="0.0000%" y="1493" width="0.0326%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1503.50"></text></g><g><title>__ia32_sys_sched_yield (1 samples, 0.03%)</title><rect x="0.0000%" y="1477" width="0.0326%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1487.50"></text></g><g><title>do_sched_yield (1 samples, 0.03%)</title><rect x="0.0000%" y="1461" width="0.0326%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1471.50"></text></g><g><title>schedule (1 samples, 0.03%)</title><rect x="0.0000%" y="1445" width="0.0326%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1455.50"></text></g><g><title>__schedule (1 samples, 0.03%)</title><rect x="0.0000%" y="1429" width="0.0326%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1439.50"></text></g><g><title>update_rq_clock (1 samples, 0.03%)</title><rect x="0.0000%" y="1413" width="0.0326%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1423.50"></text></g><g><title>psi_account_irqtime (1 samples, 0.03%)</title><rect x="0.0000%" y="1397" width="0.0326%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1407.50"></text></g><g><title>.NET_ThreadPool (2 samples, 0.07%)</title><rect x="0.0000%" y="1589" width="0.0653%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1599.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="0.0326%" y="1573" width="0.0326%" height="15" fill="rgb(206,188,39)" fg:x="1" fg:w="1"/><text x="0.2826%" y="1583.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="0.0326%" y="1557" width="0.0326%" height="15" fill="rgb(217,207,13)" fg:x="1" fg:w="1"/><text x="0.2826%" y="1567.50"></text></g><g><title>__ia32_sys_sched_yield (1 samples, 0.03%)</title><rect x="0.0326%" y="1541" width="0.0326%" height="15" fill="rgb(231,73,38)" fg:x="1" fg:w="1"/><text x="0.2826%" y="1551.50"></text></g><g><title>do_sched_yield (1 samples, 0.03%)</title><rect x="0.0326%" y="1525" width="0.0326%" height="15" fill="rgb(225,20,46)" fg:x="1" fg:w="1"/><text x="0.2826%" y="1535.50"></text></g><g><title>schedule (1 samples, 0.03%)</title><rect x="0.0326%" y="1509" width="0.0326%" height="15" fill="rgb(210,31,41)" fg:x="1" fg:w="1"/><text x="0.2826%" y="1519.50"></text></g><g><title>__schedule (1 samples, 0.03%)</title><rect x="0.0326%" y="1493" width="0.0326%" height="15" fill="rgb(221,200,47)" fg:x="1" fg:w="1"/><text x="0.2826%" y="1503.50"></text></g><g><title>update_rq_clock (1 samples, 0.03%)</title><rect x="0.0326%" y="1477" width="0.0326%" height="15" fill="rgb(226,26,5)" fg:x="1" fg:w="1"/><text x="0.2826%" y="1487.50"></text></g><g><title>psi_account_irqtime (1 samples, 0.03%)</title><rect x="0.0326%" y="1461" width="0.0326%" height="15" fill="rgb(249,33,26)" fg:x="1" fg:w="1"/><text x="0.2826%" y="1471.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.03%)</title><rect x="0.0326%" y="1445" width="0.0326%" height="15" fill="rgb(235,183,28)" fg:x="1" fg:w="1"/><text x="0.2826%" y="1455.50"></text></g><g><title>sched_clock (1 samples, 0.03%)</title><rect x="0.0326%" y="1429" width="0.0326%" height="15" fill="rgb(221,5,38)" fg:x="1" fg:w="1"/><text x="0.2826%" y="1439.50"></text></g><g><title>_start (1 samples, 0.03%)</title><rect x="0.0653%" y="1573" width="0.0326%" height="15" fill="rgb(247,18,42)" fg:x="2" fg:w="1"/><text x="0.3153%" y="1583.50"></text></g><g><title>_dl_start (1 samples, 0.03%)</title><rect x="0.0653%" y="1557" width="0.0326%" height="15" fill="rgb(241,131,45)" fg:x="2" fg:w="1"/><text x="0.3153%" y="1567.50"></text></g><g><title>_dl_start_final (1 samples, 0.03%)</title><rect x="0.0653%" y="1541" width="0.0326%" height="15" fill="rgb(249,31,29)" fg:x="2" fg:w="1"/><text x="0.3153%" y="1551.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.03%)</title><rect x="0.0653%" y="1525" width="0.0326%" height="15" fill="rgb(225,111,53)" fg:x="2" fg:w="1"/><text x="0.3153%" y="1535.50"></text></g><g><title>dl_main (1 samples, 0.03%)</title><rect x="0.0653%" y="1509" width="0.0326%" height="15" fill="rgb(238,160,17)" fg:x="2" fg:w="1"/><text x="0.3153%" y="1519.50"></text></g><g><title>_dl_unload_cache (1 samples, 0.03%)</title><rect x="0.0653%" y="1493" width="0.0326%" height="15" fill="rgb(214,148,48)" fg:x="2" fg:w="1"/><text x="0.3153%" y="1503.50"></text></g><g><title>munmap (1 samples, 0.03%)</title><rect x="0.0653%" y="1477" width="0.0326%" height="15" fill="rgb(232,36,49)" fg:x="2" fg:w="1"/><text x="0.3153%" y="1487.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="0.0653%" y="1461" width="0.0326%" height="15" fill="rgb(209,103,24)" fg:x="2" fg:w="1"/><text x="0.3153%" y="1471.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="0.0653%" y="1445" width="0.0326%" height="15" fill="rgb(229,88,8)" fg:x="2" fg:w="1"/><text x="0.3153%" y="1455.50"></text></g><g><title>__x64_sys_munmap (1 samples, 0.03%)</title><rect x="0.0653%" y="1429" width="0.0326%" height="15" fill="rgb(213,181,19)" fg:x="2" fg:w="1"/><text x="0.3153%" y="1439.50"></text></g><g><title>__vm_munmap (1 samples, 0.03%)</title><rect x="0.0653%" y="1413" width="0.0326%" height="15" fill="rgb(254,191,54)" fg:x="2" fg:w="1"/><text x="0.3153%" y="1423.50"></text></g><g><title>do_vmi_munmap (1 samples, 0.03%)</title><rect x="0.0653%" y="1397" width="0.0326%" height="15" fill="rgb(241,83,37)" fg:x="2" fg:w="1"/><text x="0.3153%" y="1407.50"></text></g><g><title>do_vmi_align_munmap (1 samples, 0.03%)</title><rect x="0.0653%" y="1381" width="0.0326%" height="15" fill="rgb(233,36,39)" fg:x="2" fg:w="1"/><text x="0.3153%" y="1391.50"></text></g><g><title>unmap_region.constprop.0 (1 samples, 0.03%)</title><rect x="0.0653%" y="1365" width="0.0326%" height="15" fill="rgb(226,3,54)" fg:x="2" fg:w="1"/><text x="0.3153%" y="1375.50"></text></g><g><title>unmap_vmas (1 samples, 0.03%)</title><rect x="0.0653%" y="1349" width="0.0326%" height="15" fill="rgb(245,192,40)" fg:x="2" fg:w="1"/><text x="0.3153%" y="1359.50"></text></g><g><title>unmap_single_vma (1 samples, 0.03%)</title><rect x="0.0653%" y="1333" width="0.0326%" height="15" fill="rgb(238,167,29)" fg:x="2" fg:w="1"/><text x="0.3153%" y="1343.50"></text></g><g><title>unmap_page_range (1 samples, 0.03%)</title><rect x="0.0653%" y="1317" width="0.0326%" height="15" fill="rgb(232,182,51)" fg:x="2" fg:w="1"/><text x="0.3153%" y="1327.50"></text></g><g><title>cat (3 samples, 0.10%)</title><rect x="0.0653%" y="1589" width="0.0979%" height="15" fill="rgb(231,60,39)" fg:x="2" fg:w="3"/><text x="0.3153%" y="1599.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.07%)</title><rect x="0.0979%" y="1573" width="0.0653%" height="15" fill="rgb(208,69,12)" fg:x="3" fg:w="2"/><text x="0.3479%" y="1583.50"></text></g><g><title>do_syscall_64 (2 samples, 0.07%)</title><rect x="0.0979%" y="1557" width="0.0653%" height="15" fill="rgb(235,93,37)" fg:x="3" fg:w="2"/><text x="0.3479%" y="1567.50"></text></g><g><title>[vmlinux] (2 samples, 0.07%)</title><rect x="0.0979%" y="1541" width="0.0653%" height="15" fill="rgb(213,116,39)" fg:x="3" fg:w="2"/><text x="0.3479%" y="1551.50"></text></g><g><title>do_group_exit (2 samples, 0.07%)</title><rect x="0.0979%" y="1525" width="0.0653%" height="15" fill="rgb(222,207,29)" fg:x="3" fg:w="2"/><text x="0.3479%" y="1535.50"></text></g><g><title>do_exit (2 samples, 0.07%)</title><rect x="0.0979%" y="1509" width="0.0653%" height="15" fill="rgb(206,96,30)" fg:x="3" fg:w="2"/><text x="0.3479%" y="1519.50"></text></g><g><title>mmput (2 samples, 0.07%)</title><rect x="0.0979%" y="1493" width="0.0653%" height="15" fill="rgb(218,138,4)" fg:x="3" fg:w="2"/><text x="0.3479%" y="1503.50"></text></g><g><title>__mmput (2 samples, 0.07%)</title><rect x="0.0979%" y="1477" width="0.0653%" height="15" fill="rgb(250,191,14)" fg:x="3" fg:w="2"/><text x="0.3479%" y="1487.50"></text></g><g><title>exit_mmap (2 samples, 0.07%)</title><rect x="0.0979%" y="1461" width="0.0653%" height="15" fill="rgb(239,60,40)" fg:x="3" fg:w="2"/><text x="0.3479%" y="1471.50"></text></g><g><title>unmap_vmas (2 samples, 0.07%)</title><rect x="0.0979%" y="1445" width="0.0653%" height="15" fill="rgb(206,27,48)" fg:x="3" fg:w="2"/><text x="0.3479%" y="1455.50"></text></g><g><title>unmap_single_vma (2 samples, 0.07%)</title><rect x="0.0979%" y="1429" width="0.0653%" height="15" fill="rgb(225,35,8)" fg:x="3" fg:w="2"/><text x="0.3479%" y="1439.50"></text></g><g><title>unmap_page_range (2 samples, 0.07%)</title><rect x="0.0979%" y="1413" width="0.0653%" height="15" fill="rgb(250,213,24)" fg:x="3" fg:w="2"/><text x="0.3479%" y="1423.50"></text></g><g><title>runtime.markroot (1 samples, 0.03%)</title><rect x="0.1631%" y="1525" width="0.0326%" height="15" fill="rgb(247,123,22)" fg:x="5" fg:w="1"/><text x="0.4131%" y="1535.50"></text></g><g><title>runtime.markrootBlock (1 samples, 0.03%)</title><rect x="0.1631%" y="1509" width="0.0326%" height="15" fill="rgb(231,138,38)" fg:x="5" fg:w="1"/><text x="0.4131%" y="1519.50"></text></g><g><title>runtime.scanblock (1 samples, 0.03%)</title><rect x="0.1631%" y="1493" width="0.0326%" height="15" fill="rgb(231,145,46)" fg:x="5" fg:w="1"/><text x="0.4131%" y="1503.50"></text></g><g><title>runtime.greyobject (1 samples, 0.03%)</title><rect x="0.1958%" y="1509" width="0.0326%" height="15" fill="rgb(251,118,11)" fg:x="6" fg:w="1"/><text x="0.4458%" y="1519.50"></text></g><g><title>containerd (4 samples, 0.13%)</title><rect x="0.1631%" y="1589" width="0.1305%" height="15" fill="rgb(217,147,25)" fg:x="5" fg:w="4"/><text x="0.4131%" y="1599.50"></text></g><g><title>runtime.systemstack.abi0 (4 samples, 0.13%)</title><rect x="0.1631%" y="1573" width="0.1305%" height="15" fill="rgb(247,81,37)" fg:x="5" fg:w="4"/><text x="0.4131%" y="1583.50"></text></g><g><title>runtime.gcBgMarkWorker.func2 (4 samples, 0.13%)</title><rect x="0.1631%" y="1557" width="0.1305%" height="15" fill="rgb(209,12,38)" fg:x="5" fg:w="4"/><text x="0.4131%" y="1567.50"></text></g><g><title>runtime.gcDrain (4 samples, 0.13%)</title><rect x="0.1631%" y="1541" width="0.1305%" height="15" fill="rgb(227,1,9)" fg:x="5" fg:w="4"/><text x="0.4131%" y="1551.50"></text></g><g><title>runtime.scanobject (3 samples, 0.10%)</title><rect x="0.1958%" y="1525" width="0.0979%" height="15" fill="rgb(248,47,43)" fg:x="6" fg:w="3"/><text x="0.4458%" y="1535.50"></text></g><g><title>runtime.scanobject (2 samples, 0.07%)</title><rect x="0.2284%" y="1509" width="0.0653%" height="15" fill="rgb(221,10,30)" fg:x="7" fg:w="2"/><text x="0.4784%" y="1519.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.2936%" y="1573" width="0.0326%" height="15" fill="rgb(210,229,1)" fg:x="9" fg:w="1"/><text x="0.5436%" y="1583.50"></text></g><g><title>memchr (1 samples, 0.03%)</title><rect x="0.2936%" y="1557" width="0.0326%" height="15" fill="rgb(222,148,37)" fg:x="9" fg:w="1"/><text x="0.5436%" y="1567.50"></text></g><g><title>__clone (1 samples, 0.03%)</title><rect x="0.3263%" y="1573" width="0.0326%" height="15" fill="rgb(234,67,33)" fg:x="10" fg:w="1"/><text x="0.5763%" y="1583.50"></text></g><g><title>start (1 samples, 0.03%)</title><rect x="0.3263%" y="1557" width="0.0326%" height="15" fill="rgb(247,98,35)" fg:x="10" fg:w="1"/><text x="0.5763%" y="1567.50"></text></g><g><title>msvc::thread_helper_t::thread_entry (1 samples, 0.03%)</title><rect x="0.3263%" y="1541" width="0.0326%" height="15" fill="rgb(247,138,52)" fg:x="10" fg:w="1"/><text x="0.5763%" y="1551.50"></text></g><g><title>thread_manager_t::do_work (1 samples, 0.03%)</title><rect x="0.3263%" y="1525" width="0.0326%" height="15" fill="rgb(213,79,30)" fg:x="10" fg:w="1"/><text x="0.5763%" y="1535.50"></text></g><g><title>thread_manager_t::queue_item&lt;lsp_manager::deploy_task(thread_safe&lt;lsp_manager::state, std::recursive_mutex&gt;::safe_object&lt;lsp_manager::state&gt; const&amp;, int, bool)::{lambda()#1}&gt;::operator (1 samples, 0.03%)</title><rect x="0.3263%" y="1509" width="0.0326%" height="15" fill="rgb(246,177,23)" fg:x="10" fg:w="1"/><text x="0.5763%" y="1519.50"></text></g><g><title>std::_Function_handler&lt;void (lsp_manager::client_message&amp;&amp;), lsp_manager::register_request&lt;TextDocumentPositionParams, std::vector&lt;DocumentHighlight, std::allocator&lt;DocumentHighlight&gt; &gt;, cpptools_context::cpptools_context()::{lambda(lsp_request&lt;TextDocumentPositionParams, std::vector&lt;DocumentHighlight, std::allocator&lt;DocumentHighlight&gt; &gt; &gt;&amp;&amp;)#14}&gt;(std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, cpptools_context::cpptools_context()::{lambda(lsp_request&lt;TextDocumentPositionParams, std::vector&lt;DocumentHighlight, std::allocator&lt;DocumentHighlight&gt; &gt; &gt;&amp;&amp;)#14}&amp;&amp;, int, lsp_handler_options_e)::{lambda(lsp_manager::client_message&amp;&amp;)#1}&gt;::_M_invoke (1 samples, 0.03%)</title><rect x="0.3263%" y="1493" width="0.0326%" height="15" fill="rgb(230,62,27)" fg:x="10" fg:w="1"/><text x="0.5763%" y="1503.50"></text></g><g><title>cpptools_context::textDocument_documentHighlight (1 samples, 0.03%)</title><rect x="0.3263%" y="1477" width="0.0326%" height="15" fill="rgb(216,154,8)" fg:x="10" fg:w="1"/><text x="0.5763%" y="1487.50"></text></g><g><title>document::get_text[abi:cxx11] (1 samples, 0.03%)</title><rect x="0.3263%" y="1461" width="0.0326%" height="15" fill="rgb(244,35,45)" fg:x="10" fg:w="1"/><text x="0.5763%" y="1471.50"></text></g><g><title>__memcpy_fwd (1 samples, 0.03%)</title><rect x="0.3263%" y="1445" width="0.0326%" height="15" fill="rgb(251,115,12)" fg:x="10" fg:w="1"/><text x="0.5763%" y="1455.50"></text></g><g><title>cpptools (3 samples, 0.10%)</title><rect x="0.2936%" y="1589" width="0.0979%" height="15" fill="rgb(240,54,50)" fg:x="9" fg:w="3"/><text x="0.5436%" y="1599.50"></text></g><g><title>_start (1 samples, 0.03%)</title><rect x="0.3589%" y="1573" width="0.0326%" height="15" fill="rgb(233,84,52)" fg:x="11" fg:w="1"/><text x="0.6089%" y="1583.50"></text></g><g><title>libc_start_main_stage2 (1 samples, 0.03%)</title><rect x="0.3589%" y="1557" width="0.0326%" height="15" fill="rgb(207,117,47)" fg:x="11" fg:w="1"/><text x="0.6089%" y="1567.50"></text></g><g><title>main (1 samples, 0.03%)</title><rect x="0.3589%" y="1541" width="0.0326%" height="15" fill="rgb(249,43,39)" fg:x="11" fg:w="1"/><text x="0.6089%" y="1551.50"></text></g><g><title>cpptools_context::run (1 samples, 0.03%)</title><rect x="0.3589%" y="1525" width="0.0326%" height="15" fill="rgb(209,38,44)" fg:x="11" fg:w="1"/><text x="0.6089%" y="1535.50"></text></g><g><title>lsp_manager::process_messages (1 samples, 0.03%)</title><rect x="0.3589%" y="1509" width="0.0326%" height="15" fill="rgb(236,212,23)" fg:x="11" fg:w="1"/><text x="0.6089%" y="1519.50"></text></g><g><title>lsp_manager::read_message (1 samples, 0.03%)</title><rect x="0.3589%" y="1493" width="0.0326%" height="15" fill="rgb(242,79,21)" fg:x="11" fg:w="1"/><text x="0.6089%" y="1503.50"></text></g><g><title>std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.03%)</title><rect x="0.3589%" y="1477" width="0.0326%" height="15" fill="rgb(211,96,35)" fg:x="11" fg:w="1"/><text x="0.6089%" y="1487.50"></text></g><g><title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::sgetc (1 samples, 0.03%)</title><rect x="0.3589%" y="1461" width="0.0326%" height="15" fill="rgb(253,215,40)" fg:x="11" fg:w="1"/><text x="0.6089%" y="1471.50"></text></g><g><title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::sgetc (1 samples, 0.03%)</title><rect x="0.3589%" y="1445" width="0.0326%" height="15" fill="rgb(211,81,21)" fg:x="11" fg:w="1"/><text x="0.6089%" y="1455.50"></text></g><g><title>__gnu_cxx::stdio_sync_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::underflow (1 samples, 0.03%)</title><rect x="0.3589%" y="1429" width="0.0326%" height="15" fill="rgb(208,190,38)" fg:x="11" fg:w="1"/><text x="0.6089%" y="1439.50"></text></g><g><title>__gnu_cxx::stdio_sync_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::syncgetc (1 samples, 0.03%)</title><rect x="0.3589%" y="1413" width="0.0326%" height="15" fill="rgb(235,213,38)" fg:x="11" fg:w="1"/><text x="0.6089%" y="1423.50"></text></g><g><title>locking_getc (1 samples, 0.03%)</title><rect x="0.3589%" y="1397" width="0.0326%" height="15" fill="rgb(237,122,38)" fg:x="11" fg:w="1"/><text x="0.6089%" y="1407.50"></text></g><g><title>__uflow (1 samples, 0.03%)</title><rect x="0.3589%" y="1381" width="0.0326%" height="15" fill="rgb(244,218,35)" fg:x="11" fg:w="1"/><text x="0.6089%" y="1391.50"></text></g><g><title>__stdio_read (1 samples, 0.03%)</title><rect x="0.3589%" y="1365" width="0.0326%" height="15" fill="rgb(240,68,47)" fg:x="11" fg:w="1"/><text x="0.6089%" y="1375.50"></text></g><g><title>__switch_to_asm (1 samples, 0.03%)</title><rect x="0.3589%" y="1349" width="0.0326%" height="15" fill="rgb(210,16,53)" fg:x="11" fg:w="1"/><text x="0.6089%" y="1359.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.3915%" y="1573" width="0.0326%" height="15" fill="rgb(235,124,12)" fg:x="12" fg:w="1"/><text x="0.6415%" y="1583.50"></text></g><g><title>[bash] (1 samples, 0.03%)</title><rect x="0.3915%" y="1557" width="0.0326%" height="15" fill="rgb(224,169,11)" fg:x="12" fg:w="1"/><text x="0.6415%" y="1567.50"></text></g><g><title>__libc_fork (1 samples, 0.03%)</title><rect x="0.4241%" y="1573" width="0.0326%" height="15" fill="rgb(250,166,2)" fg:x="13" fg:w="1"/><text x="0.6741%" y="1583.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="0.4241%" y="1557" width="0.0326%" height="15" fill="rgb(242,216,29)" fg:x="13" fg:w="1"/><text x="0.6741%" y="1567.50"></text></g><g><title>exc_page_fault (1 samples, 0.03%)</title><rect x="0.4241%" y="1541" width="0.0326%" height="15" fill="rgb(230,116,27)" fg:x="13" fg:w="1"/><text x="0.6741%" y="1551.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="0.4241%" y="1525" width="0.0326%" height="15" fill="rgb(228,99,48)" fg:x="13" fg:w="1"/><text x="0.6741%" y="1535.50"></text></g><g><title>handle_mm_fault (1 samples, 0.03%)</title><rect x="0.4241%" y="1509" width="0.0326%" height="15" fill="rgb(253,11,6)" fg:x="13" fg:w="1"/><text x="0.6741%" y="1519.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="0.4241%" y="1493" width="0.0326%" height="15" fill="rgb(247,143,39)" fg:x="13" fg:w="1"/><text x="0.6741%" y="1503.50"></text></g><g><title>do_wp_page (1 samples, 0.03%)</title><rect x="0.4241%" y="1477" width="0.0326%" height="15" fill="rgb(236,97,10)" fg:x="13" fg:w="1"/><text x="0.6741%" y="1487.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.03%)</title><rect x="0.4568%" y="1573" width="0.0326%" height="15" fill="rgb(233,208,19)" fg:x="14" fg:w="1"/><text x="0.7068%" y="1583.50"></text></g><g><title>dl_main (1 samples, 0.03%)</title><rect x="0.4568%" y="1557" width="0.0326%" height="15" fill="rgb(216,164,2)" fg:x="14" fg:w="1"/><text x="0.7068%" y="1567.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.03%)</title><rect x="0.4568%" y="1541" width="0.0326%" height="15" fill="rgb(220,129,5)" fg:x="14" fg:w="1"/><text x="0.7068%" y="1551.50"></text></g><g><title>elf_dynamic_do_Rela (1 samples, 0.03%)</title><rect x="0.4568%" y="1525" width="0.0326%" height="15" fill="rgb(242,17,10)" fg:x="14" fg:w="1"/><text x="0.7068%" y="1535.50"></text></g><g><title>elf_machine_rela_relative (1 samples, 0.03%)</title><rect x="0.4568%" y="1509" width="0.0326%" height="15" fill="rgb(242,107,0)" fg:x="14" fg:w="1"/><text x="0.7068%" y="1519.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="0.4568%" y="1493" width="0.0326%" height="15" fill="rgb(251,28,31)" fg:x="14" fg:w="1"/><text x="0.7068%" y="1503.50"></text></g><g><title>exc_page_fault (1 samples, 0.03%)</title><rect x="0.4568%" y="1477" width="0.0326%" height="15" fill="rgb(233,223,10)" fg:x="14" fg:w="1"/><text x="0.7068%" y="1487.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="0.4568%" y="1461" width="0.0326%" height="15" fill="rgb(215,21,27)" fg:x="14" fg:w="1"/><text x="0.7068%" y="1471.50"></text></g><g><title>down_read_trylock (1 samples, 0.03%)</title><rect x="0.4568%" y="1445" width="0.0326%" height="15" fill="rgb(232,23,21)" fg:x="14" fg:w="1"/><text x="0.7068%" y="1455.50"></text></g><g><title>execute_command (1 samples, 0.03%)</title><rect x="0.4894%" y="1365" width="0.0326%" height="15" fill="rgb(244,5,23)" fg:x="15" fg:w="1"/><text x="0.7394%" y="1375.50"></text></g><g><title>execute_command_internal (1 samples, 0.03%)</title><rect x="0.4894%" y="1349" width="0.0326%" height="15" fill="rgb(226,81,46)" fg:x="15" fg:w="1"/><text x="0.7394%" y="1359.50"></text></g><g><title>execute_command (1 samples, 0.03%)</title><rect x="0.4894%" y="1333" width="0.0326%" height="15" fill="rgb(247,70,30)" fg:x="15" fg:w="1"/><text x="0.7394%" y="1343.50"></text></g><g><title>execute_command_internal (1 samples, 0.03%)</title><rect x="0.4894%" y="1317" width="0.0326%" height="15" fill="rgb(212,68,19)" fg:x="15" fg:w="1"/><text x="0.7394%" y="1327.50"></text></g><g><title>execute_command (1 samples, 0.03%)</title><rect x="0.4894%" y="1301" width="0.0326%" height="15" fill="rgb(240,187,13)" fg:x="15" fg:w="1"/><text x="0.7394%" y="1311.50"></text></g><g><title>execute_command_internal (1 samples, 0.03%)</title><rect x="0.4894%" y="1285" width="0.0326%" height="15" fill="rgb(223,113,26)" fg:x="15" fg:w="1"/><text x="0.7394%" y="1295.50"></text></g><g><title>[bash] (1 samples, 0.03%)</title><rect x="0.4894%" y="1269" width="0.0326%" height="15" fill="rgb(206,192,2)" fg:x="15" fg:w="1"/><text x="0.7394%" y="1279.50"></text></g><g><title>[bash] (1 samples, 0.03%)</title><rect x="0.4894%" y="1253" width="0.0326%" height="15" fill="rgb(241,108,4)" fg:x="15" fg:w="1"/><text x="0.7394%" y="1263.50"></text></g><g><title>[bash] (1 samples, 0.03%)</title><rect x="0.4894%" y="1237" width="0.0326%" height="15" fill="rgb(247,173,49)" fg:x="15" fg:w="1"/><text x="0.7394%" y="1247.50"></text></g><g><title>[bash] (1 samples, 0.03%)</title><rect x="0.4894%" y="1221" width="0.0326%" height="15" fill="rgb(224,114,35)" fg:x="15" fg:w="1"/><text x="0.7394%" y="1231.50"></text></g><g><title>expand_string_assignment (1 samples, 0.03%)</title><rect x="0.4894%" y="1205" width="0.0326%" height="15" fill="rgb(245,159,27)" fg:x="15" fg:w="1"/><text x="0.7394%" y="1215.50"></text></g><g><title>[bash] (1 samples, 0.03%)</title><rect x="0.4894%" y="1189" width="0.0326%" height="15" fill="rgb(245,172,44)" fg:x="15" fg:w="1"/><text x="0.7394%" y="1199.50"></text></g><g><title>command_substitute (1 samples, 0.03%)</title><rect x="0.4894%" y="1173" width="0.0326%" height="15" fill="rgb(236,23,11)" fg:x="15" fg:w="1"/><text x="0.7394%" y="1183.50"></text></g><g><title>make_child (1 samples, 0.03%)</title><rect x="0.4894%" y="1157" width="0.0326%" height="15" fill="rgb(205,117,38)" fg:x="15" fg:w="1"/><text x="0.7394%" y="1167.50"></text></g><g><title>__libc_fork (1 samples, 0.03%)</title><rect x="0.4894%" y="1141" width="0.0326%" height="15" fill="rgb(237,72,25)" fg:x="15" fg:w="1"/><text x="0.7394%" y="1151.50"></text></g><g><title>__GI__Fork (1 samples, 0.03%)</title><rect x="0.4894%" y="1125" width="0.0326%" height="15" fill="rgb(244,70,9)" fg:x="15" fg:w="1"/><text x="0.7394%" y="1135.50"></text></g><g><title>arch_fork (1 samples, 0.03%)</title><rect x="0.4894%" y="1109" width="0.0326%" height="15" fill="rgb(217,125,39)" fg:x="15" fg:w="1"/><text x="0.7394%" y="1119.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="0.4894%" y="1093" width="0.0326%" height="15" fill="rgb(235,36,10)" fg:x="15" fg:w="1"/><text x="0.7394%" y="1103.50"></text></g><g><title>exc_page_fault (1 samples, 0.03%)</title><rect x="0.4894%" y="1077" width="0.0326%" height="15" fill="rgb(251,123,47)" fg:x="15" fg:w="1"/><text x="0.7394%" y="1087.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="0.4894%" y="1061" width="0.0326%" height="15" fill="rgb(221,13,13)" fg:x="15" fg:w="1"/><text x="0.7394%" y="1071.50"></text></g><g><title>handle_mm_fault (1 samples, 0.03%)</title><rect x="0.4894%" y="1045" width="0.0326%" height="15" fill="rgb(238,131,9)" fg:x="15" fg:w="1"/><text x="0.7394%" y="1055.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="0.4894%" y="1029" width="0.0326%" height="15" fill="rgb(211,50,8)" fg:x="15" fg:w="1"/><text x="0.7394%" y="1039.50"></text></g><g><title>do_fault (1 samples, 0.03%)</title><rect x="0.4894%" y="1013" width="0.0326%" height="15" fill="rgb(245,182,24)" fg:x="15" fg:w="1"/><text x="0.7394%" y="1023.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="0.4894%" y="997" width="0.0326%" height="15" fill="rgb(242,14,37)" fg:x="15" fg:w="1"/><text x="0.7394%" y="1007.50"></text></g><g><title>__GI___close (1 samples, 0.03%)</title><rect x="0.5220%" y="1237" width="0.0326%" height="15" fill="rgb(246,228,12)" fg:x="16" fg:w="1"/><text x="0.7720%" y="1247.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="0.5220%" y="1221" width="0.0326%" height="15" fill="rgb(213,55,15)" fg:x="16" fg:w="1"/><text x="0.7720%" y="1231.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="0.5220%" y="1205" width="0.0326%" height="15" fill="rgb(209,9,3)" fg:x="16" fg:w="1"/><text x="0.7720%" y="1215.50"></text></g><g><title>__x64_sys_close (1 samples, 0.03%)</title><rect x="0.5220%" y="1189" width="0.0326%" height="15" fill="rgb(230,59,30)" fg:x="16" fg:w="1"/><text x="0.7720%" y="1199.50"></text></g><g><title>__fput_sync (1 samples, 0.03%)</title><rect x="0.5220%" y="1173" width="0.0326%" height="15" fill="rgb(209,121,21)" fg:x="16" fg:w="1"/><text x="0.7720%" y="1183.50"></text></g><g><title>__fput (1 samples, 0.03%)</title><rect x="0.5220%" y="1157" width="0.0326%" height="15" fill="rgb(220,109,13)" fg:x="16" fg:w="1"/><text x="0.7720%" y="1167.50"></text></g><g><title>security_file_free (1 samples, 0.03%)</title><rect x="0.5220%" y="1141" width="0.0326%" height="15" fill="rgb(232,18,1)" fg:x="16" fg:w="1"/><text x="0.7720%" y="1151.50"></text></g><g><title>_start (3 samples, 0.10%)</title><rect x="0.4894%" y="1573" width="0.0979%" height="15" fill="rgb(215,41,42)" fg:x="15" fg:w="3"/><text x="0.7394%" y="1583.50"></text></g><g><title>__libc_start_main_impl (3 samples, 0.10%)</title><rect x="0.4894%" y="1557" width="0.0979%" height="15" fill="rgb(224,123,36)" fg:x="15" fg:w="3"/><text x="0.7394%" y="1567.50"></text></g><g><title>__libc_start_call_main (3 samples, 0.10%)</title><rect x="0.4894%" y="1541" width="0.0979%" height="15" fill="rgb(240,125,3)" fg:x="15" fg:w="3"/><text x="0.7394%" y="1551.50"></text></g><g><title>main (3 samples, 0.10%)</title><rect x="0.4894%" y="1525" width="0.0979%" height="15" fill="rgb(205,98,50)" fg:x="15" fg:w="3"/><text x="0.7394%" y="1535.50"></text></g><g><title>reader_loop (3 samples, 0.10%)</title><rect x="0.4894%" y="1509" width="0.0979%" height="15" fill="rgb(205,185,37)" fg:x="15" fg:w="3"/><text x="0.7394%" y="1519.50"></text></g><g><title>execute_command (3 samples, 0.10%)</title><rect x="0.4894%" y="1493" width="0.0979%" height="15" fill="rgb(238,207,15)" fg:x="15" fg:w="3"/><text x="0.7394%" y="1503.50"></text></g><g><title>execute_command_internal (3 samples, 0.10%)</title><rect x="0.4894%" y="1477" width="0.0979%" height="15" fill="rgb(213,199,42)" fg:x="15" fg:w="3"/><text x="0.7394%" y="1487.50"></text></g><g><title>execute_command (3 samples, 0.10%)</title><rect x="0.4894%" y="1461" width="0.0979%" height="15" fill="rgb(235,201,11)" fg:x="15" fg:w="3"/><text x="0.7394%" y="1471.50"></text></g><g><title>execute_command_internal (3 samples, 0.10%)</title><rect x="0.4894%" y="1445" width="0.0979%" height="15" fill="rgb(207,46,11)" fg:x="15" fg:w="3"/><text x="0.7394%" y="1455.50"></text></g><g><title>execute_command (3 samples, 0.10%)</title><rect x="0.4894%" y="1429" width="0.0979%" height="15" fill="rgb(241,35,35)" fg:x="15" fg:w="3"/><text x="0.7394%" y="1439.50"></text></g><g><title>execute_command_internal (3 samples, 0.10%)</title><rect x="0.4894%" y="1413" width="0.0979%" height="15" fill="rgb(243,32,47)" fg:x="15" fg:w="3"/><text x="0.7394%" y="1423.50"></text></g><g><title>execute_command (3 samples, 0.10%)</title><rect x="0.4894%" y="1397" width="0.0979%" height="15" fill="rgb(247,202,23)" fg:x="15" fg:w="3"/><text x="0.7394%" y="1407.50"></text></g><g><title>execute_command_internal (3 samples, 0.10%)</title><rect x="0.4894%" y="1381" width="0.0979%" height="15" fill="rgb(219,102,11)" fg:x="15" fg:w="3"/><text x="0.7394%" y="1391.50"></text></g><g><title>execute_command_internal (2 samples, 0.07%)</title><rect x="0.5220%" y="1365" width="0.0653%" height="15" fill="rgb(243,110,44)" fg:x="16" fg:w="2"/><text x="0.7720%" y="1375.50"></text></g><g><title>[bash] (2 samples, 0.07%)</title><rect x="0.5220%" y="1349" width="0.0653%" height="15" fill="rgb(222,74,54)" fg:x="16" fg:w="2"/><text x="0.7720%" y="1359.50"></text></g><g><title>[bash] (2 samples, 0.07%)</title><rect x="0.5220%" y="1333" width="0.0653%" height="15" fill="rgb(216,99,12)" fg:x="16" fg:w="2"/><text x="0.7720%" y="1343.50"></text></g><g><title>[bash] (2 samples, 0.07%)</title><rect x="0.5220%" y="1317" width="0.0653%" height="15" fill="rgb(226,22,26)" fg:x="16" fg:w="2"/><text x="0.7720%" y="1327.50"></text></g><g><title>[bash] (2 samples, 0.07%)</title><rect x="0.5220%" y="1301" width="0.0653%" height="15" fill="rgb(217,163,10)" fg:x="16" fg:w="2"/><text x="0.7720%" y="1311.50"></text></g><g><title>expand_string_assignment (2 samples, 0.07%)</title><rect x="0.5220%" y="1285" width="0.0653%" height="15" fill="rgb(213,25,53)" fg:x="16" fg:w="2"/><text x="0.7720%" y="1295.50"></text></g><g><title>[bash] (2 samples, 0.07%)</title><rect x="0.5220%" y="1269" width="0.0653%" height="15" fill="rgb(252,105,26)" fg:x="16" fg:w="2"/><text x="0.7720%" y="1279.50"></text></g><g><title>command_substitute (2 samples, 0.07%)</title><rect x="0.5220%" y="1253" width="0.0653%" height="15" fill="rgb(220,39,43)" fg:x="16" fg:w="2"/><text x="0.7720%" y="1263.50"></text></g><g><title>make_child (1 samples, 0.03%)</title><rect x="0.5546%" y="1237" width="0.0326%" height="15" fill="rgb(229,68,48)" fg:x="17" fg:w="1"/><text x="0.8046%" y="1247.50"></text></g><g><title>__libc_fork (1 samples, 0.03%)</title><rect x="0.5546%" y="1221" width="0.0326%" height="15" fill="rgb(252,8,32)" fg:x="17" fg:w="1"/><text x="0.8046%" y="1231.50"></text></g><g><title>__GI__Fork (1 samples, 0.03%)</title><rect x="0.5546%" y="1205" width="0.0326%" height="15" fill="rgb(223,20,43)" fg:x="17" fg:w="1"/><text x="0.8046%" y="1215.50"></text></g><g><title>arch_fork (1 samples, 0.03%)</title><rect x="0.5546%" y="1189" width="0.0326%" height="15" fill="rgb(229,81,49)" fg:x="17" fg:w="1"/><text x="0.8046%" y="1199.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="0.5546%" y="1173" width="0.0326%" height="15" fill="rgb(236,28,36)" fg:x="17" fg:w="1"/><text x="0.8046%" y="1183.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="0.5546%" y="1157" width="0.0326%" height="15" fill="rgb(249,185,26)" fg:x="17" fg:w="1"/><text x="0.8046%" y="1167.50"></text></g><g><title>__x64_sys_clone (1 samples, 0.03%)</title><rect x="0.5546%" y="1141" width="0.0326%" height="15" fill="rgb(249,174,33)" fg:x="17" fg:w="1"/><text x="0.8046%" y="1151.50"></text></g><g><title>__do_sys_clone (1 samples, 0.03%)</title><rect x="0.5546%" y="1125" width="0.0326%" height="15" fill="rgb(233,201,37)" fg:x="17" fg:w="1"/><text x="0.8046%" y="1135.50"></text></g><g><title>kernel_clone (1 samples, 0.03%)</title><rect x="0.5546%" y="1109" width="0.0326%" height="15" fill="rgb(221,78,26)" fg:x="17" fg:w="1"/><text x="0.8046%" y="1119.50"></text></g><g><title>copy_process (1 samples, 0.03%)</title><rect x="0.5546%" y="1093" width="0.0326%" height="15" fill="rgb(250,127,30)" fg:x="17" fg:w="1"/><text x="0.8046%" y="1103.50"></text></g><g><title>dup_mmap (1 samples, 0.03%)</title><rect x="0.5546%" y="1077" width="0.0326%" height="15" fill="rgb(230,49,44)" fg:x="17" fg:w="1"/><text x="0.8046%" y="1087.50"></text></g><g><title>[vmlinux] (1 samples, 0.03%)</title><rect x="0.5873%" y="1541" width="0.0326%" height="15" fill="rgb(229,67,23)" fg:x="18" fg:w="1"/><text x="0.8373%" y="1551.50"></text></g><g><title>do_group_exit (1 samples, 0.03%)</title><rect x="0.5873%" y="1525" width="0.0326%" height="15" fill="rgb(249,83,47)" fg:x="18" fg:w="1"/><text x="0.8373%" y="1535.50"></text></g><g><title>do_exit (1 samples, 0.03%)</title><rect x="0.5873%" y="1509" width="0.0326%" height="15" fill="rgb(215,43,3)" fg:x="18" fg:w="1"/><text x="0.8373%" y="1519.50"></text></g><g><title>mmput (1 samples, 0.03%)</title><rect x="0.5873%" y="1493" width="0.0326%" height="15" fill="rgb(238,154,13)" fg:x="18" fg:w="1"/><text x="0.8373%" y="1503.50"></text></g><g><title>__mmput (1 samples, 0.03%)</title><rect x="0.5873%" y="1477" width="0.0326%" height="15" fill="rgb(219,56,2)" fg:x="18" fg:w="1"/><text x="0.8373%" y="1487.50"></text></g><g><title>exit_mmap (1 samples, 0.03%)</title><rect x="0.5873%" y="1461" width="0.0326%" height="15" fill="rgb(233,0,4)" fg:x="18" fg:w="1"/><text x="0.8373%" y="1471.50"></text></g><g><title>unmap_vmas (1 samples, 0.03%)</title><rect x="0.5873%" y="1445" width="0.0326%" height="15" fill="rgb(235,30,7)" fg:x="18" fg:w="1"/><text x="0.8373%" y="1455.50"></text></g><g><title>unmap_single_vma (1 samples, 0.03%)</title><rect x="0.5873%" y="1429" width="0.0326%" height="15" fill="rgb(250,79,13)" fg:x="18" fg:w="1"/><text x="0.8373%" y="1439.50"></text></g><g><title>unmap_page_range (1 samples, 0.03%)</title><rect x="0.5873%" y="1413" width="0.0326%" height="15" fill="rgb(211,146,34)" fg:x="18" fg:w="1"/><text x="0.8373%" y="1423.50"></text></g><g><title>mark_page_accessed (1 samples, 0.03%)</title><rect x="0.5873%" y="1397" width="0.0326%" height="15" fill="rgb(228,22,38)" fg:x="18" fg:w="1"/><text x="0.8373%" y="1407.50"></text></g><g><title>folio_mark_accessed (1 samples, 0.03%)</title><rect x="0.5873%" y="1381" width="0.0326%" height="15" fill="rgb(235,168,5)" fg:x="18" fg:w="1"/><text x="0.8373%" y="1391.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.03%)</title><rect x="0.6199%" y="1541" width="0.0326%" height="15" fill="rgb(221,155,16)" fg:x="19" fg:w="1"/><text x="0.8699%" y="1551.50"></text></g><g><title>do_execveat_common.isra.0 (1 samples, 0.03%)</title><rect x="0.6199%" y="1525" width="0.0326%" height="15" fill="rgb(215,215,53)" fg:x="19" fg:w="1"/><text x="0.8699%" y="1535.50"></text></g><g><title>bprm_execve (1 samples, 0.03%)</title><rect x="0.6199%" y="1509" width="0.0326%" height="15" fill="rgb(223,4,10)" fg:x="19" fg:w="1"/><text x="0.8699%" y="1519.50"></text></g><g><title>load_elf_binary (1 samples, 0.03%)</title><rect x="0.6199%" y="1493" width="0.0326%" height="15" fill="rgb(234,103,6)" fg:x="19" fg:w="1"/><text x="0.8699%" y="1503.50"></text></g><g><title>begin_new_exec (1 samples, 0.03%)</title><rect x="0.6199%" y="1477" width="0.0326%" height="15" fill="rgb(227,97,0)" fg:x="19" fg:w="1"/><text x="0.8699%" y="1487.50"></text></g><g><title>mmput (1 samples, 0.03%)</title><rect x="0.6199%" y="1461" width="0.0326%" height="15" fill="rgb(234,150,53)" fg:x="19" fg:w="1"/><text x="0.8699%" y="1471.50"></text></g><g><title>__mmput (1 samples, 0.03%)</title><rect x="0.6199%" y="1445" width="0.0326%" height="15" fill="rgb(228,201,54)" fg:x="19" fg:w="1"/><text x="0.8699%" y="1455.50"></text></g><g><title>exit_mmap (1 samples, 0.03%)</title><rect x="0.6199%" y="1429" width="0.0326%" height="15" fill="rgb(222,22,37)" fg:x="19" fg:w="1"/><text x="0.8699%" y="1439.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.03%)</title><rect x="0.6199%" y="1413" width="0.0326%" height="15" fill="rgb(237,53,32)" fg:x="19" fg:w="1"/><text x="0.8699%" y="1423.50"></text></g><g><title>tlb_batch_pages_flush (1 samples, 0.03%)</title><rect x="0.6199%" y="1397" width="0.0326%" height="15" fill="rgb(233,25,53)" fg:x="19" fg:w="1"/><text x="0.8699%" y="1407.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.03%)</title><rect x="0.6199%" y="1381" width="0.0326%" height="15" fill="rgb(210,40,34)" fg:x="19" fg:w="1"/><text x="0.8699%" y="1391.50"></text></g><g><title>release_pages (1 samples, 0.03%)</title><rect x="0.6199%" y="1365" width="0.0326%" height="15" fill="rgb(241,220,44)" fg:x="19" fg:w="1"/><text x="0.8699%" y="1375.50"></text></g><g><title>cpuUsage.sh (9 samples, 0.29%)</title><rect x="0.3915%" y="1589" width="0.2936%" height="15" fill="rgb(235,28,35)" fg:x="12" fg:w="9"/><text x="0.6415%" y="1599.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.10%)</title><rect x="0.5873%" y="1573" width="0.0979%" height="15" fill="rgb(210,56,17)" fg:x="18" fg:w="3"/><text x="0.8373%" y="1583.50"></text></g><g><title>do_syscall_64 (3 samples, 0.10%)</title><rect x="0.5873%" y="1557" width="0.0979%" height="15" fill="rgb(224,130,29)" fg:x="18" fg:w="3"/><text x="0.8373%" y="1567.50"></text></g><g><title>__x64_sys_wait4 (1 samples, 0.03%)</title><rect x="0.6525%" y="1541" width="0.0326%" height="15" fill="rgb(235,212,8)" fg:x="20" fg:w="1"/><text x="0.9025%" y="1551.50"></text></g><g><title>__do_sys_wait4 (1 samples, 0.03%)</title><rect x="0.6525%" y="1525" width="0.0326%" height="15" fill="rgb(223,33,50)" fg:x="20" fg:w="1"/><text x="0.9025%" y="1535.50"></text></g><g><title>kernel_wait4 (1 samples, 0.03%)</title><rect x="0.6525%" y="1509" width="0.0326%" height="15" fill="rgb(219,149,13)" fg:x="20" fg:w="1"/><text x="0.9025%" y="1519.50"></text></g><g><title>srso_safe_ret (1 samples, 0.03%)</title><rect x="0.6525%" y="1493" width="0.0326%" height="15" fill="rgb(250,156,29)" fg:x="20" fg:w="1"/><text x="0.9025%" y="1503.50"></text></g><g><title>[[heap]] (3 samples, 0.10%)</title><rect x="0.6852%" y="1573" width="0.0979%" height="15" fill="rgb(216,193,19)" fg:x="21" fg:w="3"/><text x="0.9352%" y="1583.50"></text></g><g><title>[git] (3 samples, 0.10%)</title><rect x="0.6852%" y="1557" width="0.0979%" height="15" fill="rgb(216,135,14)" fg:x="21" fg:w="3"/><text x="0.9352%" y="1567.50"></text></g><g><title>[[stack]] (1 samples, 0.03%)</title><rect x="0.7830%" y="1573" width="0.0326%" height="15" fill="rgb(241,47,5)" fg:x="24" fg:w="1"/><text x="1.0330%" y="1583.50"></text></g><g><title>[git] (1 samples, 0.03%)</title><rect x="0.7830%" y="1557" width="0.0326%" height="15" fill="rgb(233,42,35)" fg:x="24" fg:w="1"/><text x="1.0330%" y="1567.50"></text></g><g><title>[anon] (1 samples, 0.03%)</title><rect x="0.8157%" y="1573" width="0.0326%" height="15" fill="rgb(231,13,6)" fg:x="25" fg:w="1"/><text x="1.0657%" y="1583.50"></text></g><g><title>[git] (1 samples, 0.03%)</title><rect x="0.8157%" y="1557" width="0.0326%" height="15" fill="rgb(207,181,40)" fg:x="25" fg:w="1"/><text x="1.0657%" y="1567.50"></text></g><g><title>[git] (1 samples, 0.03%)</title><rect x="0.9135%" y="1301" width="0.0326%" height="15" fill="rgb(254,173,49)" fg:x="28" fg:w="1"/><text x="1.1635%" y="1311.50"></text></g><g><title>[git] (1 samples, 0.03%)</title><rect x="0.9135%" y="1285" width="0.0326%" height="15" fill="rgb(221,1,38)" fg:x="28" fg:w="1"/><text x="1.1635%" y="1295.50"></text></g><g><title>[git] (1 samples, 0.03%)</title><rect x="0.9135%" y="1269" width="0.0326%" height="15" fill="rgb(206,124,46)" fg:x="28" fg:w="1"/><text x="1.1635%" y="1279.50"></text></g><g><title>[git] (1 samples, 0.03%)</title><rect x="0.9135%" y="1253" width="0.0326%" height="15" fill="rgb(249,21,11)" fg:x="28" fg:w="1"/><text x="1.1635%" y="1263.50"></text></g><g><title>[git] (1 samples, 0.03%)</title><rect x="0.9135%" y="1237" width="0.0326%" height="15" fill="rgb(222,201,40)" fg:x="28" fg:w="1"/><text x="1.1635%" y="1247.50"></text></g><g><title>[git] (1 samples, 0.03%)</title><rect x="0.9135%" y="1221" width="0.0326%" height="15" fill="rgb(235,61,29)" fg:x="28" fg:w="1"/><text x="1.1635%" y="1231.50"></text></g><g><title>__libc_open64 (1 samples, 0.03%)</title><rect x="0.9135%" y="1205" width="0.0326%" height="15" fill="rgb(219,207,3)" fg:x="28" fg:w="1"/><text x="1.1635%" y="1215.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="0.9135%" y="1189" width="0.0326%" height="15" fill="rgb(222,56,46)" fg:x="28" fg:w="1"/><text x="1.1635%" y="1199.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="0.9135%" y="1173" width="0.0326%" height="15" fill="rgb(239,76,54)" fg:x="28" fg:w="1"/><text x="1.1635%" y="1183.50"></text></g><g><title>__x64_sys_openat (1 samples, 0.03%)</title><rect x="0.9135%" y="1157" width="0.0326%" height="15" fill="rgb(231,124,27)" fg:x="28" fg:w="1"/><text x="1.1635%" y="1167.50"></text></g><g><title>do_sys_openat2 (1 samples, 0.03%)</title><rect x="0.9135%" y="1141" width="0.0326%" height="15" fill="rgb(249,195,6)" fg:x="28" fg:w="1"/><text x="1.1635%" y="1151.50"></text></g><g><title>do_filp_open (1 samples, 0.03%)</title><rect x="0.9135%" y="1125" width="0.0326%" height="15" fill="rgb(237,174,47)" fg:x="28" fg:w="1"/><text x="1.1635%" y="1135.50"></text></g><g><title>path_openat (1 samples, 0.03%)</title><rect x="0.9135%" y="1109" width="0.0326%" height="15" fill="rgb(206,201,31)" fg:x="28" fg:w="1"/><text x="1.1635%" y="1119.50"></text></g><g><title>init_file (1 samples, 0.03%)</title><rect x="0.9135%" y="1093" width="0.0326%" height="15" fill="rgb(231,57,52)" fg:x="28" fg:w="1"/><text x="1.1635%" y="1103.50"></text></g><g><title>__ext4_read_dirblock (1 samples, 0.03%)</title><rect x="0.9462%" y="1157" width="0.0326%" height="15" fill="rgb(248,177,22)" fg:x="29" fg:w="1"/><text x="1.1962%" y="1167.50"></text></g><g><title>ext4_bread (1 samples, 0.03%)</title><rect x="0.9462%" y="1141" width="0.0326%" height="15" fill="rgb(215,211,37)" fg:x="29" fg:w="1"/><text x="1.1962%" y="1151.50"></text></g><g><title>ext4_getblk (1 samples, 0.03%)</title><rect x="0.9462%" y="1125" width="0.0326%" height="15" fill="rgb(241,128,51)" fg:x="29" fg:w="1"/><text x="1.1962%" y="1135.50"></text></g><g><title>__getblk_gfp (1 samples, 0.03%)</title><rect x="0.9462%" y="1109" width="0.0326%" height="15" fill="rgb(227,165,31)" fg:x="29" fg:w="1"/><text x="1.1962%" y="1119.50"></text></g><g><title>__find_get_block (1 samples, 0.03%)</title><rect x="0.9462%" y="1093" width="0.0326%" height="15" fill="rgb(228,167,24)" fg:x="29" fg:w="1"/><text x="1.1962%" y="1103.50"></text></g><g><title>__filemap_get_folio (1 samples, 0.03%)</title><rect x="0.9462%" y="1077" width="0.0326%" height="15" fill="rgb(228,143,12)" fg:x="29" fg:w="1"/><text x="1.1962%" y="1087.50"></text></g><g><title>filemap_get_entry (1 samples, 0.03%)</title><rect x="0.9462%" y="1061" width="0.0326%" height="15" fill="rgb(249,149,8)" fg:x="29" fg:w="1"/><text x="1.1962%" y="1071.50"></text></g><g><title>__GI___readdir64 (2 samples, 0.07%)</title><rect x="0.9462%" y="1301" width="0.0653%" height="15" fill="rgb(243,35,44)" fg:x="29" fg:w="2"/><text x="1.1962%" y="1311.50"></text></g><g><title>__GI___getdents64 (2 samples, 0.07%)</title><rect x="0.9462%" y="1285" width="0.0653%" height="15" fill="rgb(246,89,9)" fg:x="29" fg:w="2"/><text x="1.1962%" y="1295.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.07%)</title><rect x="0.9462%" y="1269" width="0.0653%" height="15" fill="rgb(233,213,13)" fg:x="29" fg:w="2"/><text x="1.1962%" y="1279.50"></text></g><g><title>do_syscall_64 (2 samples, 0.07%)</title><rect x="0.9462%" y="1253" width="0.0653%" height="15" fill="rgb(233,141,41)" fg:x="29" fg:w="2"/><text x="1.1962%" y="1263.50"></text></g><g><title>__x64_sys_getdents64 (2 samples, 0.07%)</title><rect x="0.9462%" y="1237" width="0.0653%" height="15" fill="rgb(239,167,4)" fg:x="29" fg:w="2"/><text x="1.1962%" y="1247.50"></text></g><g><title>iterate_dir (2 samples, 0.07%)</title><rect x="0.9462%" y="1221" width="0.0653%" height="15" fill="rgb(209,217,16)" fg:x="29" fg:w="2"/><text x="1.1962%" y="1231.50"></text></g><g><title>ext4_readdir (2 samples, 0.07%)</title><rect x="0.9462%" y="1205" width="0.0653%" height="15" fill="rgb(219,88,35)" fg:x="29" fg:w="2"/><text x="1.1962%" y="1215.50"></text></g><g><title>ext4_htree_fill_tree (2 samples, 0.07%)</title><rect x="0.9462%" y="1189" width="0.0653%" height="15" fill="rgb(220,193,23)" fg:x="29" fg:w="2"/><text x="1.1962%" y="1199.50"></text></g><g><title>htree_dirblock_to_tree (2 samples, 0.07%)</title><rect x="0.9462%" y="1173" width="0.0653%" height="15" fill="rgb(230,90,52)" fg:x="29" fg:w="2"/><text x="1.1962%" y="1183.50"></text></g><g><title>ext4fs_dirhash (1 samples, 0.03%)</title><rect x="0.9788%" y="1157" width="0.0326%" height="15" fill="rgb(252,106,19)" fg:x="30" fg:w="1"/><text x="1.2288%" y="1167.50"></text></g><g><title>__ext4fs_dirhash (1 samples, 0.03%)</title><rect x="0.9788%" y="1141" width="0.0326%" height="15" fill="rgb(206,74,20)" fg:x="30" fg:w="1"/><text x="1.2288%" y="1151.50"></text></g><g><title>[git] (5 samples, 0.16%)</title><rect x="0.8809%" y="1317" width="0.1631%" height="15" fill="rgb(230,138,44)" fg:x="27" fg:w="5"/><text x="1.1309%" y="1327.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="1.0114%" y="1301" width="0.0326%" height="15" fill="rgb(235,182,43)" fg:x="31" fg:w="1"/><text x="1.2614%" y="1311.50"></text></g><g><title>exc_page_fault (1 samples, 0.03%)</title><rect x="1.0114%" y="1285" width="0.0326%" height="15" fill="rgb(242,16,51)" fg:x="31" fg:w="1"/><text x="1.2614%" y="1295.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="1.0114%" y="1269" width="0.0326%" height="15" fill="rgb(248,9,4)" fg:x="31" fg:w="1"/><text x="1.2614%" y="1279.50"></text></g><g><title>handle_mm_fault (1 samples, 0.03%)</title><rect x="1.0114%" y="1253" width="0.0326%" height="15" fill="rgb(210,31,22)" fg:x="31" fg:w="1"/><text x="1.2614%" y="1263.50"></text></g><g><title>ext4_readdir (1 samples, 0.03%)</title><rect x="1.0440%" y="1221" width="0.0326%" height="15" fill="rgb(239,54,39)" fg:x="32" fg:w="1"/><text x="1.2940%" y="1231.50"></text></g><g><title>kmalloc_trace (1 samples, 0.03%)</title><rect x="1.0440%" y="1205" width="0.0326%" height="15" fill="rgb(230,99,41)" fg:x="32" fg:w="1"/><text x="1.2940%" y="1215.50"></text></g><g><title>__kmem_cache_alloc_node (1 samples, 0.03%)</title><rect x="1.0440%" y="1189" width="0.0326%" height="15" fill="rgb(253,106,12)" fg:x="32" fg:w="1"/><text x="1.2940%" y="1199.50"></text></g><g><title>[git] (7 samples, 0.23%)</title><rect x="0.8809%" y="1333" width="0.2284%" height="15" fill="rgb(213,46,41)" fg:x="27" fg:w="7"/><text x="1.1309%" y="1343.50"></text></g><g><title>__GI___readdir64 (2 samples, 0.07%)</title><rect x="1.0440%" y="1317" width="0.0653%" height="15" fill="rgb(215,133,35)" fg:x="32" fg:w="2"/><text x="1.2940%" y="1327.50"></text></g><g><title>__GI___getdents64 (2 samples, 0.07%)</title><rect x="1.0440%" y="1301" width="0.0653%" height="15" fill="rgb(213,28,5)" fg:x="32" fg:w="2"/><text x="1.2940%" y="1311.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.07%)</title><rect x="1.0440%" y="1285" width="0.0653%" height="15" fill="rgb(215,77,49)" fg:x="32" fg:w="2"/><text x="1.2940%" y="1295.50"></text></g><g><title>do_syscall_64 (2 samples, 0.07%)</title><rect x="1.0440%" y="1269" width="0.0653%" height="15" fill="rgb(248,100,22)" fg:x="32" fg:w="2"/><text x="1.2940%" y="1279.50"></text></g><g><title>__x64_sys_getdents64 (2 samples, 0.07%)</title><rect x="1.0440%" y="1253" width="0.0653%" height="15" fill="rgb(208,67,9)" fg:x="32" fg:w="2"/><text x="1.2940%" y="1263.50"></text></g><g><title>iterate_dir (2 samples, 0.07%)</title><rect x="1.0440%" y="1237" width="0.0653%" height="15" fill="rgb(219,133,21)" fg:x="32" fg:w="2"/><text x="1.2940%" y="1247.50"></text></g><g><title>rb_next (1 samples, 0.03%)</title><rect x="1.0767%" y="1221" width="0.0326%" height="15" fill="rgb(246,46,29)" fg:x="33" fg:w="1"/><text x="1.3267%" y="1231.50"></text></g><g><title>__GI___readdir64 (2 samples, 0.07%)</title><rect x="1.1093%" y="1333" width="0.0653%" height="15" fill="rgb(246,185,52)" fg:x="34" fg:w="2"/><text x="1.3593%" y="1343.50"></text></g><g><title>__GI___getdents64 (2 samples, 0.07%)</title><rect x="1.1093%" y="1317" width="0.0653%" height="15" fill="rgb(252,136,11)" fg:x="34" fg:w="2"/><text x="1.3593%" y="1327.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.07%)</title><rect x="1.1093%" y="1301" width="0.0653%" height="15" fill="rgb(219,138,53)" fg:x="34" fg:w="2"/><text x="1.3593%" y="1311.50"></text></g><g><title>do_syscall_64 (2 samples, 0.07%)</title><rect x="1.1093%" y="1285" width="0.0653%" height="15" fill="rgb(211,51,23)" fg:x="34" fg:w="2"/><text x="1.3593%" y="1295.50"></text></g><g><title>__x64_sys_getdents64 (2 samples, 0.07%)</title><rect x="1.1093%" y="1269" width="0.0653%" height="15" fill="rgb(247,221,28)" fg:x="34" fg:w="2"/><text x="1.3593%" y="1279.50"></text></g><g><title>iterate_dir (2 samples, 0.07%)</title><rect x="1.1093%" y="1253" width="0.0653%" height="15" fill="rgb(251,222,45)" fg:x="34" fg:w="2"/><text x="1.3593%" y="1263.50"></text></g><g><title>ext4_readdir (2 samples, 0.07%)</title><rect x="1.1093%" y="1237" width="0.0653%" height="15" fill="rgb(217,162,53)" fg:x="34" fg:w="2"/><text x="1.3593%" y="1247.50"></text></g><g><title>ext4_htree_fill_tree (2 samples, 0.07%)</title><rect x="1.1093%" y="1221" width="0.0653%" height="15" fill="rgb(229,93,14)" fg:x="34" fg:w="2"/><text x="1.3593%" y="1231.50"></text></g><g><title>htree_dirblock_to_tree (2 samples, 0.07%)</title><rect x="1.1093%" y="1205" width="0.0653%" height="15" fill="rgb(209,67,49)" fg:x="34" fg:w="2"/><text x="1.3593%" y="1215.50"></text></g><g><title>ext4_htree_store_dirent (2 samples, 0.07%)</title><rect x="1.1093%" y="1189" width="0.0653%" height="15" fill="rgb(213,87,29)" fg:x="34" fg:w="2"/><text x="1.3593%" y="1199.50"></text></g><g><title>__kmalloc (1 samples, 0.03%)</title><rect x="1.1419%" y="1173" width="0.0326%" height="15" fill="rgb(205,151,52)" fg:x="35" fg:w="1"/><text x="1.3919%" y="1183.50"></text></g><g><title>__kmem_cache_alloc_node (1 samples, 0.03%)</title><rect x="1.1419%" y="1157" width="0.0326%" height="15" fill="rgb(253,215,39)" fg:x="35" fg:w="1"/><text x="1.3919%" y="1167.50"></text></g><g><title>__GI___open64_nocancel (1 samples, 0.03%)</title><rect x="1.1746%" y="1317" width="0.0326%" height="15" fill="rgb(221,220,41)" fg:x="36" fg:w="1"/><text x="1.4246%" y="1327.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="1.1746%" y="1301" width="0.0326%" height="15" fill="rgb(218,133,21)" fg:x="36" fg:w="1"/><text x="1.4246%" y="1311.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1.1746%" y="1285" width="0.0326%" height="15" fill="rgb(221,193,43)" fg:x="36" fg:w="1"/><text x="1.4246%" y="1295.50"></text></g><g><title>__x64_sys_openat (1 samples, 0.03%)</title><rect x="1.1746%" y="1269" width="0.0326%" height="15" fill="rgb(240,128,52)" fg:x="36" fg:w="1"/><text x="1.4246%" y="1279.50"></text></g><g><title>do_sys_openat2 (1 samples, 0.03%)</title><rect x="1.1746%" y="1253" width="0.0326%" height="15" fill="rgb(253,114,12)" fg:x="36" fg:w="1"/><text x="1.4246%" y="1263.50"></text></g><g><title>do_filp_open (1 samples, 0.03%)</title><rect x="1.1746%" y="1237" width="0.0326%" height="15" fill="rgb(215,223,47)" fg:x="36" fg:w="1"/><text x="1.4246%" y="1247.50"></text></g><g><title>path_openat (1 samples, 0.03%)</title><rect x="1.1746%" y="1221" width="0.0326%" height="15" fill="rgb(248,225,23)" fg:x="36" fg:w="1"/><text x="1.4246%" y="1231.50"></text></g><g><title>lookup_fast (1 samples, 0.03%)</title><rect x="1.1746%" y="1205" width="0.0326%" height="15" fill="rgb(250,108,0)" fg:x="36" fg:w="1"/><text x="1.4246%" y="1215.50"></text></g><g><title>__d_lookup_rcu (1 samples, 0.03%)</title><rect x="1.1746%" y="1189" width="0.0326%" height="15" fill="rgb(228,208,7)" fg:x="36" fg:w="1"/><text x="1.4246%" y="1199.50"></text></g><g><title>[git] (11 samples, 0.36%)</title><rect x="0.8809%" y="1349" width="0.3589%" height="15" fill="rgb(244,45,10)" fg:x="27" fg:w="11"/><text x="1.1309%" y="1359.50"></text></g><g><title>__opendir (2 samples, 0.07%)</title><rect x="1.1746%" y="1333" width="0.0653%" height="15" fill="rgb(207,125,25)" fg:x="36" fg:w="2"/><text x="1.4246%" y="1343.50"></text></g><g><title>opendir_tail (1 samples, 0.03%)</title><rect x="1.2072%" y="1317" width="0.0326%" height="15" fill="rgb(210,195,18)" fg:x="37" fg:w="1"/><text x="1.4572%" y="1327.50"></text></g><g><title>__GI___fstatat64 (1 samples, 0.03%)</title><rect x="1.2072%" y="1301" width="0.0326%" height="15" fill="rgb(249,80,12)" fg:x="37" fg:w="1"/><text x="1.4572%" y="1311.50"></text></g><g><title>srso_safe_ret (1 samples, 0.03%)</title><rect x="1.2072%" y="1285" width="0.0326%" height="15" fill="rgb(221,65,9)" fg:x="37" fg:w="1"/><text x="1.4572%" y="1295.50"></text></g><g><title>[git] (12 samples, 0.39%)</title><rect x="0.8809%" y="1397" width="0.3915%" height="15" fill="rgb(235,49,36)" fg:x="27" fg:w="12"/><text x="1.1309%" y="1407.50"></text></g><g><title>[git] (12 samples, 0.39%)</title><rect x="0.8809%" y="1381" width="0.3915%" height="15" fill="rgb(225,32,20)" fg:x="27" fg:w="12"/><text x="1.1309%" y="1391.50"></text></g><g><title>[git] (12 samples, 0.39%)</title><rect x="0.8809%" y="1365" width="0.3915%" height="15" fill="rgb(215,141,46)" fg:x="27" fg:w="12"/><text x="1.1309%" y="1375.50"></text></g><g><title>__GI___readdir64 (1 samples, 0.03%)</title><rect x="1.2398%" y="1349" width="0.0326%" height="15" fill="rgb(250,160,47)" fg:x="38" fg:w="1"/><text x="1.4898%" y="1359.50"></text></g><g><title>__GI___getdents64 (1 samples, 0.03%)</title><rect x="1.2398%" y="1333" width="0.0326%" height="15" fill="rgb(216,222,40)" fg:x="38" fg:w="1"/><text x="1.4898%" y="1343.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="1.2398%" y="1317" width="0.0326%" height="15" fill="rgb(234,217,39)" fg:x="38" fg:w="1"/><text x="1.4898%" y="1327.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1.2398%" y="1301" width="0.0326%" height="15" fill="rgb(207,178,40)" fg:x="38" fg:w="1"/><text x="1.4898%" y="1311.50"></text></g><g><title>__x64_sys_getdents64 (1 samples, 0.03%)</title><rect x="1.2398%" y="1285" width="0.0326%" height="15" fill="rgb(221,136,13)" fg:x="38" fg:w="1"/><text x="1.4898%" y="1295.50"></text></g><g><title>iterate_dir (1 samples, 0.03%)</title><rect x="1.2398%" y="1269" width="0.0326%" height="15" fill="rgb(249,199,10)" fg:x="38" fg:w="1"/><text x="1.4898%" y="1279.50"></text></g><g><title>ext4_readdir (1 samples, 0.03%)</title><rect x="1.2398%" y="1253" width="0.0326%" height="15" fill="rgb(249,222,13)" fg:x="38" fg:w="1"/><text x="1.4898%" y="1263.50"></text></g><g><title>ext4_htree_fill_tree (1 samples, 0.03%)</title><rect x="1.2398%" y="1237" width="0.0326%" height="15" fill="rgb(244,185,38)" fg:x="38" fg:w="1"/><text x="1.4898%" y="1247.50"></text></g><g><title>htree_dirblock_to_tree (1 samples, 0.03%)</title><rect x="1.2398%" y="1221" width="0.0326%" height="15" fill="rgb(236,202,9)" fg:x="38" fg:w="1"/><text x="1.4898%" y="1231.50"></text></g><g><title>ext4_htree_store_dirent (1 samples, 0.03%)</title><rect x="1.2398%" y="1205" width="0.0326%" height="15" fill="rgb(250,229,37)" fg:x="38" fg:w="1"/><text x="1.4898%" y="1215.50"></text></g><g><title>__kmalloc (1 samples, 0.03%)</title><rect x="1.2398%" y="1189" width="0.0326%" height="15" fill="rgb(206,174,23)" fg:x="38" fg:w="1"/><text x="1.4898%" y="1199.50"></text></g><g><title>__kmem_cache_alloc_node (1 samples, 0.03%)</title><rect x="1.2398%" y="1173" width="0.0326%" height="15" fill="rgb(211,33,43)" fg:x="38" fg:w="1"/><text x="1.4898%" y="1183.50"></text></g><g><title>[git] (13 samples, 0.42%)</title><rect x="0.8809%" y="1413" width="0.4241%" height="15" fill="rgb(245,58,50)" fg:x="27" fg:w="13"/><text x="1.1309%" y="1423.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="1.2724%" y="1397" width="0.0326%" height="15" fill="rgb(244,68,36)" fg:x="39" fg:w="1"/><text x="1.5224%" y="1407.50"></text></g><g><title>exc_page_fault (1 samples, 0.03%)</title><rect x="1.2724%" y="1381" width="0.0326%" height="15" fill="rgb(232,229,15)" fg:x="39" fg:w="1"/><text x="1.5224%" y="1391.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="1.2724%" y="1365" width="0.0326%" height="15" fill="rgb(254,30,23)" fg:x="39" fg:w="1"/><text x="1.5224%" y="1375.50"></text></g><g><title>handle_mm_fault (1 samples, 0.03%)</title><rect x="1.2724%" y="1349" width="0.0326%" height="15" fill="rgb(235,160,14)" fg:x="39" fg:w="1"/><text x="1.5224%" y="1359.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="1.2724%" y="1333" width="0.0326%" height="15" fill="rgb(212,155,44)" fg:x="39" fg:w="1"/><text x="1.5224%" y="1343.50"></text></g><g><title>do_anonymous_page (1 samples, 0.03%)</title><rect x="1.2724%" y="1317" width="0.0326%" height="15" fill="rgb(226,2,50)" fg:x="39" fg:w="1"/><text x="1.5224%" y="1327.50"></text></g><g><title>__folio_throttle_swaprate (1 samples, 0.03%)</title><rect x="1.2724%" y="1301" width="0.0326%" height="15" fill="rgb(234,177,6)" fg:x="39" fg:w="1"/><text x="1.5224%" y="1311.50"></text></g><g><title>blk_cgroup_congested (1 samples, 0.03%)</title><rect x="1.2724%" y="1285" width="0.0326%" height="15" fill="rgb(217,24,9)" fg:x="39" fg:w="1"/><text x="1.5224%" y="1295.50"></text></g><g><title>[git] (15 samples, 0.49%)</title><rect x="0.8483%" y="1477" width="0.4894%" height="15" fill="rgb(220,13,46)" fg:x="26" fg:w="15"/><text x="1.0983%" y="1487.50"></text></g><g><title>[git] (15 samples, 0.49%)</title><rect x="0.8483%" y="1461" width="0.4894%" height="15" fill="rgb(239,221,27)" fg:x="26" fg:w="15"/><text x="1.0983%" y="1471.50"></text></g><g><title>[git] (15 samples, 0.49%)</title><rect x="0.8483%" y="1445" width="0.4894%" height="15" fill="rgb(222,198,25)" fg:x="26" fg:w="15"/><text x="1.0983%" y="1455.50"></text></g><g><title>[git] (15 samples, 0.49%)</title><rect x="0.8483%" y="1429" width="0.4894%" height="15" fill="rgb(211,99,13)" fg:x="26" fg:w="15"/><text x="1.0983%" y="1439.50"></text></g><g><title>__GI___munmap (1 samples, 0.03%)</title><rect x="1.3051%" y="1413" width="0.0326%" height="15" fill="rgb(232,111,31)" fg:x="40" fg:w="1"/><text x="1.5551%" y="1423.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="1.3051%" y="1397" width="0.0326%" height="15" fill="rgb(245,82,37)" fg:x="40" fg:w="1"/><text x="1.5551%" y="1407.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1.3051%" y="1381" width="0.0326%" height="15" fill="rgb(227,149,46)" fg:x="40" fg:w="1"/><text x="1.5551%" y="1391.50"></text></g><g><title>__x64_sys_munmap (1 samples, 0.03%)</title><rect x="1.3051%" y="1365" width="0.0326%" height="15" fill="rgb(218,36,50)" fg:x="40" fg:w="1"/><text x="1.5551%" y="1375.50"></text></g><g><title>__vm_munmap (1 samples, 0.03%)</title><rect x="1.3051%" y="1349" width="0.0326%" height="15" fill="rgb(226,80,48)" fg:x="40" fg:w="1"/><text x="1.5551%" y="1359.50"></text></g><g><title>do_vmi_munmap (1 samples, 0.03%)</title><rect x="1.3051%" y="1333" width="0.0326%" height="15" fill="rgb(238,224,15)" fg:x="40" fg:w="1"/><text x="1.5551%" y="1343.50"></text></g><g><title>do_vmi_align_munmap (1 samples, 0.03%)</title><rect x="1.3051%" y="1317" width="0.0326%" height="15" fill="rgb(241,136,10)" fg:x="40" fg:w="1"/><text x="1.5551%" y="1327.50"></text></g><g><title>unmap_region.constprop.0 (1 samples, 0.03%)</title><rect x="1.3051%" y="1301" width="0.0326%" height="15" fill="rgb(208,32,45)" fg:x="40" fg:w="1"/><text x="1.5551%" y="1311.50"></text></g><g><title>unmap_vmas (1 samples, 0.03%)</title><rect x="1.3051%" y="1285" width="0.0326%" height="15" fill="rgb(207,135,9)" fg:x="40" fg:w="1"/><text x="1.5551%" y="1295.50"></text></g><g><title>unmap_single_vma (1 samples, 0.03%)</title><rect x="1.3051%" y="1269" width="0.0326%" height="15" fill="rgb(206,86,44)" fg:x="40" fg:w="1"/><text x="1.5551%" y="1279.50"></text></g><g><title>unmap_page_range (1 samples, 0.03%)</title><rect x="1.3051%" y="1253" width="0.0326%" height="15" fill="rgb(245,177,15)" fg:x="40" fg:w="1"/><text x="1.5551%" y="1263.50"></text></g><g><title>page_remove_rmap (1 samples, 0.03%)</title><rect x="1.3051%" y="1237" width="0.0326%" height="15" fill="rgb(206,64,50)" fg:x="40" fg:w="1"/><text x="1.5551%" y="1247.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.03%)</title><rect x="1.3051%" y="1221" width="0.0326%" height="15" fill="rgb(234,36,40)" fg:x="40" fg:w="1"/><text x="1.5551%" y="1231.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.03%)</title><rect x="1.3051%" y="1205" width="0.0326%" height="15" fill="rgb(213,64,8)" fg:x="40" fg:w="1"/><text x="1.5551%" y="1215.50"></text></g><g><title>[git] (16 samples, 0.52%)</title><rect x="0.8483%" y="1573" width="0.5220%" height="15" fill="rgb(210,75,36)" fg:x="26" fg:w="16"/><text x="1.0983%" y="1583.50"></text></g><g><title>__libc_start_main_impl (16 samples, 0.52%)</title><rect x="0.8483%" y="1557" width="0.5220%" height="15" fill="rgb(229,88,21)" fg:x="26" fg:w="16"/><text x="1.0983%" y="1567.50"></text></g><g><title>__libc_start_call_main (16 samples, 0.52%)</title><rect x="0.8483%" y="1541" width="0.5220%" height="15" fill="rgb(252,204,47)" fg:x="26" fg:w="16"/><text x="1.0983%" y="1551.50"></text></g><g><title>[git] (16 samples, 0.52%)</title><rect x="0.8483%" y="1525" width="0.5220%" height="15" fill="rgb(208,77,27)" fg:x="26" fg:w="16"/><text x="1.0983%" y="1535.50"></text></g><g><title>[git] (16 samples, 0.52%)</title><rect x="0.8483%" y="1509" width="0.5220%" height="15" fill="rgb(221,76,26)" fg:x="26" fg:w="16"/><text x="1.0983%" y="1519.50"></text></g><g><title>[git] (16 samples, 0.52%)</title><rect x="0.8483%" y="1493" width="0.5220%" height="15" fill="rgb(225,139,18)" fg:x="26" fg:w="16"/><text x="1.0983%" y="1503.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="1.3377%" y="1477" width="0.0326%" height="15" fill="rgb(230,137,11)" fg:x="41" fg:w="1"/><text x="1.5877%" y="1487.50"></text></g><g><title>exc_page_fault (1 samples, 0.03%)</title><rect x="1.3377%" y="1461" width="0.0326%" height="15" fill="rgb(212,28,1)" fg:x="41" fg:w="1"/><text x="1.5877%" y="1471.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="1.3377%" y="1445" width="0.0326%" height="15" fill="rgb(248,164,17)" fg:x="41" fg:w="1"/><text x="1.5877%" y="1455.50"></text></g><g><title>handle_mm_fault (1 samples, 0.03%)</title><rect x="1.3377%" y="1429" width="0.0326%" height="15" fill="rgb(222,171,42)" fg:x="41" fg:w="1"/><text x="1.5877%" y="1439.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="1.3377%" y="1413" width="0.0326%" height="15" fill="rgb(243,84,45)" fg:x="41" fg:w="1"/><text x="1.5877%" y="1423.50"></text></g><g><title>do_fault (1 samples, 0.03%)</title><rect x="1.3377%" y="1397" width="0.0326%" height="15" fill="rgb(252,49,23)" fg:x="41" fg:w="1"/><text x="1.5877%" y="1407.50"></text></g><g><title>filemap_map_pages (1 samples, 0.03%)</title><rect x="1.3377%" y="1381" width="0.0326%" height="15" fill="rgb(215,19,7)" fg:x="41" fg:w="1"/><text x="1.5877%" y="1391.50"></text></g><g><title>set_pte_range (1 samples, 0.03%)</title><rect x="1.3377%" y="1365" width="0.0326%" height="15" fill="rgb(238,81,41)" fg:x="41" fg:w="1"/><text x="1.5877%" y="1375.50"></text></g><g><title>folio_add_file_rmap_range (1 samples, 0.03%)</title><rect x="1.3377%" y="1349" width="0.0326%" height="15" fill="rgb(210,199,37)" fg:x="41" fg:w="1"/><text x="1.5877%" y="1359.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.03%)</title><rect x="1.3377%" y="1333" width="0.0326%" height="15" fill="rgb(244,192,49)" fg:x="41" fg:w="1"/><text x="1.5877%" y="1343.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="1.3703%" y="1573" width="0.0653%" height="15" fill="rgb(226,211,11)" fg:x="42" fg:w="2"/><text x="1.6203%" y="1583.50"></text></g><g><title>[git] (2 samples, 0.07%)</title><rect x="1.3703%" y="1557" width="0.0653%" height="15" fill="rgb(236,162,54)" fg:x="42" fg:w="2"/><text x="1.6203%" y="1567.50"></text></g><g><title>__fput_sync (1 samples, 0.03%)</title><rect x="1.4356%" y="1509" width="0.0326%" height="15" fill="rgb(220,229,9)" fg:x="44" fg:w="1"/><text x="1.6856%" y="1519.50"></text></g><g><title>__fput (1 samples, 0.03%)</title><rect x="1.4356%" y="1493" width="0.0326%" height="15" fill="rgb(250,87,22)" fg:x="44" fg:w="1"/><text x="1.6856%" y="1503.50"></text></g><g><title>ext4_release_dir (1 samples, 0.03%)</title><rect x="1.4356%" y="1477" width="0.0326%" height="15" fill="rgb(239,43,17)" fg:x="44" fg:w="1"/><text x="1.6856%" y="1487.50"></text></g><g><title>free_rb_tree_fname (1 samples, 0.03%)</title><rect x="1.4356%" y="1461" width="0.0326%" height="15" fill="rgb(231,177,25)" fg:x="44" fg:w="1"/><text x="1.6856%" y="1471.50"></text></g><g><title>kfree (1 samples, 0.03%)</title><rect x="1.4356%" y="1445" width="0.0326%" height="15" fill="rgb(219,179,1)" fg:x="44" fg:w="1"/><text x="1.6856%" y="1455.50"></text></g><g><title>__GI___close_nocancel (2 samples, 0.07%)</title><rect x="1.4356%" y="1573" width="0.0653%" height="15" fill="rgb(238,219,53)" fg:x="44" fg:w="2"/><text x="1.6856%" y="1583.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.07%)</title><rect x="1.4356%" y="1557" width="0.0653%" height="15" fill="rgb(232,167,36)" fg:x="44" fg:w="2"/><text x="1.6856%" y="1567.50"></text></g><g><title>do_syscall_64 (2 samples, 0.07%)</title><rect x="1.4356%" y="1541" width="0.0653%" height="15" fill="rgb(244,19,51)" fg:x="44" fg:w="2"/><text x="1.6856%" y="1551.50"></text></g><g><title>__x64_sys_close (2 samples, 0.07%)</title><rect x="1.4356%" y="1525" width="0.0653%" height="15" fill="rgb(224,6,22)" fg:x="44" fg:w="2"/><text x="1.6856%" y="1535.50"></text></g><g><title>filp_flush (1 samples, 0.03%)</title><rect x="1.4682%" y="1509" width="0.0326%" height="15" fill="rgb(224,145,5)" fg:x="45" fg:w="1"/><text x="1.7182%" y="1519.50"></text></g><g><title>dnotify_flush (1 samples, 0.03%)</title><rect x="1.4682%" y="1493" width="0.0326%" height="15" fill="rgb(234,130,49)" fg:x="45" fg:w="1"/><text x="1.7182%" y="1503.50"></text></g><g><title>fsnotify_find_mark (1 samples, 0.03%)</title><rect x="1.4682%" y="1477" width="0.0326%" height="15" fill="rgb(254,6,2)" fg:x="45" fg:w="1"/><text x="1.7182%" y="1487.50"></text></g><g><title>__x64_sys_newfstatat (2 samples, 0.07%)</title><rect x="1.5987%" y="1541" width="0.0653%" height="15" fill="rgb(208,96,46)" fg:x="49" fg:w="2"/><text x="1.8487%" y="1551.50"></text></g><g><title>from_kgid_munged (1 samples, 0.03%)</title><rect x="1.7292%" y="1493" width="0.0326%" height="15" fill="rgb(239,3,39)" fg:x="53" fg:w="1"/><text x="1.9792%" y="1503.50"></text></g><g><title>__fdget_raw (1 samples, 0.03%)</title><rect x="1.7618%" y="1477" width="0.0326%" height="15" fill="rgb(233,210,1)" fg:x="54" fg:w="1"/><text x="2.0118%" y="1487.50"></text></g><g><title>kmem_cache_alloc (3 samples, 0.10%)</title><rect x="1.7945%" y="1445" width="0.0979%" height="15" fill="rgb(244,137,37)" fg:x="55" fg:w="3"/><text x="2.0445%" y="1455.50"></text></g><g><title>memset_orig (4 samples, 0.13%)</title><rect x="1.8923%" y="1445" width="0.1305%" height="15" fill="rgb(240,136,2)" fg:x="58" fg:w="4"/><text x="2.1423%" y="1455.50"></text></g><g><title>srso_safe_ret (1 samples, 0.03%)</title><rect x="2.0228%" y="1445" width="0.0326%" height="15" fill="rgb(239,18,37)" fg:x="62" fg:w="1"/><text x="2.2728%" y="1455.50"></text></g><g><title>getname_flags (11 samples, 0.36%)</title><rect x="1.7945%" y="1477" width="0.3589%" height="15" fill="rgb(218,185,22)" fg:x="55" fg:w="11"/><text x="2.0445%" y="1487.50"></text></g><g><title>getname_flags.part.0 (11 samples, 0.36%)</title><rect x="1.7945%" y="1461" width="0.3589%" height="15" fill="rgb(225,218,4)" fg:x="55" fg:w="11"/><text x="2.0445%" y="1471.50"></text></g><g><title>strncpy_from_user (3 samples, 0.10%)</title><rect x="2.0555%" y="1445" width="0.0979%" height="15" fill="rgb(230,182,32)" fg:x="63" fg:w="3"/><text x="2.3055%" y="1455.50"></text></g><g><title>__check_object_size (2 samples, 0.07%)</title><rect x="2.0881%" y="1429" width="0.0653%" height="15" fill="rgb(242,56,43)" fg:x="64" fg:w="2"/><text x="2.3381%" y="1439.50"></text></g><g><title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="2.1207%" y="1413" width="0.0326%" height="15" fill="rgb(233,99,24)" fg:x="65" fg:w="1"/><text x="2.3707%" y="1423.50"></text></g><g><title>putname (2 samples, 0.07%)</title><rect x="2.1533%" y="1477" width="0.0653%" height="15" fill="rgb(234,209,42)" fg:x="66" fg:w="2"/><text x="2.4033%" y="1487.50"></text></g><g><title>kmem_cache_free (2 samples, 0.07%)</title><rect x="2.1533%" y="1461" width="0.0653%" height="15" fill="rgb(227,7,12)" fg:x="66" fg:w="2"/><text x="2.4033%" y="1471.50"></text></g><g><title>security_inode_getattr (1 samples, 0.03%)</title><rect x="2.2186%" y="1477" width="0.0326%" height="15" fill="rgb(245,203,43)" fg:x="68" fg:w="1"/><text x="2.4686%" y="1487.50"></text></g><g><title>vfs_getattr_nosec (1 samples, 0.03%)</title><rect x="2.2512%" y="1477" width="0.0326%" height="15" fill="rgb(238,205,33)" fg:x="69" fg:w="1"/><text x="2.5012%" y="1487.50"></text></g><g><title>complete_walk (1 samples, 0.03%)</title><rect x="2.2838%" y="1429" width="0.0326%" height="15" fill="rgb(231,56,7)" fg:x="70" fg:w="1"/><text x="2.5338%" y="1439.50"></text></g><g><title>try_to_unlazy (1 samples, 0.03%)</title><rect x="2.2838%" y="1413" width="0.0326%" height="15" fill="rgb(244,186,29)" fg:x="70" fg:w="1"/><text x="2.5338%" y="1423.50"></text></g><g><title>lookup_fast (1 samples, 0.03%)</title><rect x="2.3817%" y="1397" width="0.0326%" height="15" fill="rgb(234,111,31)" fg:x="73" fg:w="1"/><text x="2.6317%" y="1407.50"></text></g><g><title>link_path_walk.part.0.constprop.0 (4 samples, 0.13%)</title><rect x="2.3165%" y="1429" width="0.1305%" height="15" fill="rgb(241,149,10)" fg:x="71" fg:w="4"/><text x="2.5665%" y="1439.50"></text></g><g><title>walk_component (3 samples, 0.10%)</title><rect x="2.3491%" y="1413" width="0.0979%" height="15" fill="rgb(249,206,44)" fg:x="72" fg:w="3"/><text x="2.5991%" y="1423.50"></text></g><g><title>step_into (1 samples, 0.03%)</title><rect x="2.4144%" y="1397" width="0.0326%" height="15" fill="rgb(251,153,30)" fg:x="74" fg:w="1"/><text x="2.6644%" y="1407.50"></text></g><g><title>srso_safe_ret (1 samples, 0.03%)</title><rect x="2.4470%" y="1429" width="0.0326%" height="15" fill="rgb(239,152,38)" fg:x="75" fg:w="1"/><text x="2.6970%" y="1439.50"></text></g><g><title>filename_lookup (11 samples, 0.36%)</title><rect x="2.2838%" y="1461" width="0.3589%" height="15" fill="rgb(249,139,47)" fg:x="70" fg:w="11"/><text x="2.5338%" y="1471.50"></text></g><g><title>path_lookupat (11 samples, 0.36%)</title><rect x="2.2838%" y="1445" width="0.3589%" height="15" fill="rgb(244,64,35)" fg:x="70" fg:w="11"/><text x="2.5338%" y="1455.50"></text></g><g><title>walk_component (5 samples, 0.16%)</title><rect x="2.4796%" y="1429" width="0.1631%" height="15" fill="rgb(216,46,15)" fg:x="76" fg:w="5"/><text x="2.7296%" y="1439.50"></text></g><g><title>lookup_fast (5 samples, 0.16%)</title><rect x="2.4796%" y="1413" width="0.1631%" height="15" fill="rgb(250,74,19)" fg:x="76" fg:w="5"/><text x="2.7296%" y="1423.50"></text></g><g><title>__d_lookup_rcu (5 samples, 0.16%)</title><rect x="2.4796%" y="1397" width="0.1631%" height="15" fill="rgb(249,42,33)" fg:x="76" fg:w="5"/><text x="2.7296%" y="1407.50"></text></g><g><title>__x64_sys_newfstatat (34 samples, 1.11%)</title><rect x="1.6966%" y="1525" width="1.1093%" height="15" fill="rgb(242,149,17)" fg:x="52" fg:w="34"/><text x="1.9466%" y="1535.50"></text></g><g><title>__do_sys_newfstatat (34 samples, 1.11%)</title><rect x="1.6966%" y="1509" width="1.1093%" height="15" fill="rgb(244,29,21)" fg:x="52" fg:w="34"/><text x="1.9466%" y="1519.50"></text></g><g><title>vfs_fstatat (32 samples, 1.04%)</title><rect x="1.7618%" y="1493" width="1.0440%" height="15" fill="rgb(220,130,37)" fg:x="54" fg:w="32"/><text x="2.0118%" y="1503.50"></text></g><g><title>vfs_statx (16 samples, 0.52%)</title><rect x="2.2838%" y="1477" width="0.5220%" height="15" fill="rgb(211,67,2)" fg:x="70" fg:w="16"/><text x="2.5338%" y="1487.50"></text></g><g><title>vfs_getattr_nosec (5 samples, 0.16%)</title><rect x="2.6427%" y="1461" width="0.1631%" height="15" fill="rgb(235,68,52)" fg:x="81" fg:w="5"/><text x="2.8927%" y="1471.50"></text></g><g><title>ext4_file_getattr (5 samples, 0.16%)</title><rect x="2.6427%" y="1445" width="0.1631%" height="15" fill="rgb(246,142,3)" fg:x="81" fg:w="5"/><text x="2.8927%" y="1455.50"></text></g><g><title>ext4_getattr (3 samples, 0.10%)</title><rect x="2.7080%" y="1429" width="0.0979%" height="15" fill="rgb(241,25,7)" fg:x="83" fg:w="3"/><text x="2.9580%" y="1439.50"></text></g><g><title>generic_fillattr (2 samples, 0.07%)</title><rect x="2.7406%" y="1413" width="0.0653%" height="15" fill="rgb(242,119,39)" fg:x="84" fg:w="2"/><text x="2.9906%" y="1423.50"></text></g><g><title>make_vfsuid (1 samples, 0.03%)</title><rect x="2.7732%" y="1397" width="0.0326%" height="15" fill="rgb(241,98,45)" fg:x="85" fg:w="1"/><text x="3.0232%" y="1407.50"></text></g><g><title>__GI___fstatat64 (42 samples, 1.37%)</title><rect x="1.5008%" y="1573" width="1.3703%" height="15" fill="rgb(254,28,30)" fg:x="46" fg:w="42"/><text x="1.7508%" y="1583.50"></text></g><g><title>entry_SYSCALL_64 (42 samples, 1.37%)</title><rect x="1.5008%" y="1557" width="1.3703%" height="15" fill="rgb(241,142,54)" fg:x="46" fg:w="42"/><text x="1.7508%" y="1567.50"></text></g><g><title>do_syscall_64 (37 samples, 1.21%)</title><rect x="1.6639%" y="1541" width="1.2072%" height="15" fill="rgb(222,85,15)" fg:x="51" fg:w="37"/><text x="1.9139%" y="1551.50"></text></g><g><title>syscall_exit_to_user_mode (2 samples, 0.07%)</title><rect x="2.8059%" y="1525" width="0.0653%" height="15" fill="rgb(210,85,47)" fg:x="86" fg:w="2"/><text x="3.0559%" y="1535.50"></text></g><g><title>exit_to_user_mode_prepare (2 samples, 0.07%)</title><rect x="2.8059%" y="1509" width="0.0653%" height="15" fill="rgb(224,206,25)" fg:x="86" fg:w="2"/><text x="3.0559%" y="1519.50"></text></g><g><title>call_filldir (1 samples, 0.03%)</title><rect x="2.9038%" y="1477" width="0.0326%" height="15" fill="rgb(243,201,19)" fg:x="89" fg:w="1"/><text x="3.1538%" y="1487.50"></text></g><g><title>filldir64 (1 samples, 0.03%)</title><rect x="2.9038%" y="1461" width="0.0326%" height="15" fill="rgb(236,59,4)" fg:x="89" fg:w="1"/><text x="3.1538%" y="1471.50"></text></g><g><title>memchr (1 samples, 0.03%)</title><rect x="2.9038%" y="1445" width="0.0326%" height="15" fill="rgb(254,179,45)" fg:x="89" fg:w="1"/><text x="3.1538%" y="1455.50"></text></g><g><title>ext4_htree_store_dirent (2 samples, 0.07%)</title><rect x="2.9364%" y="1445" width="0.0653%" height="15" fill="rgb(226,14,10)" fg:x="90" fg:w="2"/><text x="3.1864%" y="1455.50"></text></g><g><title>__kmalloc (1 samples, 0.03%)</title><rect x="2.9690%" y="1429" width="0.0326%" height="15" fill="rgb(244,27,41)" fg:x="91" fg:w="1"/><text x="3.2190%" y="1439.50"></text></g><g><title>should_failslab (1 samples, 0.03%)</title><rect x="2.9690%" y="1413" width="0.0326%" height="15" fill="rgb(235,35,32)" fg:x="91" fg:w="1"/><text x="3.2190%" y="1423.50"></text></g><g><title>__GI___getdents64 (5 samples, 0.16%)</title><rect x="2.8711%" y="1573" width="0.1631%" height="15" fill="rgb(218,68,31)" fg:x="88" fg:w="5"/><text x="3.1211%" y="1583.50"></text></g><g><title>entry_SYSCALL_64 (5 samples, 0.16%)</title><rect x="2.8711%" y="1557" width="0.1631%" height="15" fill="rgb(207,120,37)" fg:x="88" fg:w="5"/><text x="3.1211%" y="1567.50"></text></g><g><title>do_syscall_64 (5 samples, 0.16%)</title><rect x="2.8711%" y="1541" width="0.1631%" height="15" fill="rgb(227,98,0)" fg:x="88" fg:w="5"/><text x="3.1211%" y="1551.50"></text></g><g><title>__x64_sys_getdents64 (5 samples, 0.16%)</title><rect x="2.8711%" y="1525" width="0.1631%" height="15" fill="rgb(207,7,3)" fg:x="88" fg:w="5"/><text x="3.1211%" y="1535.50"></text></g><g><title>iterate_dir (5 samples, 0.16%)</title><rect x="2.8711%" y="1509" width="0.1631%" height="15" fill="rgb(206,98,19)" fg:x="88" fg:w="5"/><text x="3.1211%" y="1519.50"></text></g><g><title>ext4_readdir (5 samples, 0.16%)</title><rect x="2.8711%" y="1493" width="0.1631%" height="15" fill="rgb(217,5,26)" fg:x="88" fg:w="5"/><text x="3.1211%" y="1503.50"></text></g><g><title>ext4_htree_fill_tree (3 samples, 0.10%)</title><rect x="2.9364%" y="1477" width="0.0979%" height="15" fill="rgb(235,190,38)" fg:x="90" fg:w="3"/><text x="3.1864%" y="1487.50"></text></g><g><title>htree_dirblock_to_tree (3 samples, 0.10%)</title><rect x="2.9364%" y="1461" width="0.0979%" height="15" fill="rgb(247,86,24)" fg:x="90" fg:w="3"/><text x="3.1864%" y="1471.50"></text></g><g><title>rb_insert_color (1 samples, 0.03%)</title><rect x="3.0016%" y="1445" width="0.0326%" height="15" fill="rgb(205,101,16)" fg:x="92" fg:w="1"/><text x="3.2516%" y="1455.50"></text></g><g><title>__GI___mmap64 (2 samples, 0.07%)</title><rect x="3.0343%" y="1573" width="0.0653%" height="15" fill="rgb(246,168,33)" fg:x="93" fg:w="2"/><text x="3.2843%" y="1583.50"></text></g><g><title>__GI___mmap64 (2 samples, 0.07%)</title><rect x="3.0343%" y="1557" width="0.0653%" height="15" fill="rgb(231,114,1)" fg:x="93" fg:w="2"/><text x="3.2843%" y="1567.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.07%)</title><rect x="3.0343%" y="1541" width="0.0653%" height="15" fill="rgb(207,184,53)" fg:x="93" fg:w="2"/><text x="3.2843%" y="1551.50"></text></g><g><title>do_syscall_64 (2 samples, 0.07%)</title><rect x="3.0343%" y="1525" width="0.0653%" height="15" fill="rgb(224,95,51)" fg:x="93" fg:w="2"/><text x="3.2843%" y="1535.50"></text></g><g><title>__x64_sys_mmap (2 samples, 0.07%)</title><rect x="3.0343%" y="1509" width="0.0653%" height="15" fill="rgb(212,188,45)" fg:x="93" fg:w="2"/><text x="3.2843%" y="1519.50"></text></g><g><title>ksys_mmap_pgoff (2 samples, 0.07%)</title><rect x="3.0343%" y="1493" width="0.0653%" height="15" fill="rgb(223,154,38)" fg:x="93" fg:w="2"/><text x="3.2843%" y="1503.50"></text></g><g><title>vm_mmap_pgoff (2 samples, 0.07%)</title><rect x="3.0343%" y="1477" width="0.0653%" height="15" fill="rgb(251,22,52)" fg:x="93" fg:w="2"/><text x="3.2843%" y="1487.50"></text></g><g><title>down_write_killable (2 samples, 0.07%)</title><rect x="3.0343%" y="1461" width="0.0653%" height="15" fill="rgb(229,209,22)" fg:x="93" fg:w="2"/><text x="3.2843%" y="1471.50"></text></g><g><title>rwsem_down_write_slowpath (2 samples, 0.07%)</title><rect x="3.0343%" y="1445" width="0.0653%" height="15" fill="rgb(234,138,34)" fg:x="93" fg:w="2"/><text x="3.2843%" y="1455.50"></text></g><g><title>osq_lock (2 samples, 0.07%)</title><rect x="3.0343%" y="1429" width="0.0653%" height="15" fill="rgb(212,95,11)" fg:x="93" fg:w="2"/><text x="3.2843%" y="1439.50"></text></g><g><title>do_vmi_munmap (1 samples, 0.03%)</title><rect x="3.0995%" y="1493" width="0.0326%" height="15" fill="rgb(240,179,47)" fg:x="95" fg:w="1"/><text x="3.3495%" y="1503.50"></text></g><g><title>do_vmi_align_munmap (1 samples, 0.03%)</title><rect x="3.0995%" y="1477" width="0.0326%" height="15" fill="rgb(240,163,11)" fg:x="95" fg:w="1"/><text x="3.3495%" y="1487.50"></text></g><g><title>__split_vma (1 samples, 0.03%)</title><rect x="3.0995%" y="1461" width="0.0326%" height="15" fill="rgb(236,37,12)" fg:x="95" fg:w="1"/><text x="3.3495%" y="1471.50"></text></g><g><title>mas_preallocate (1 samples, 0.03%)</title><rect x="3.0995%" y="1445" width="0.0326%" height="15" fill="rgb(232,164,16)" fg:x="95" fg:w="1"/><text x="3.3495%" y="1455.50"></text></g><g><title>mas_node_count_gfp (1 samples, 0.03%)</title><rect x="3.0995%" y="1429" width="0.0326%" height="15" fill="rgb(244,205,15)" fg:x="95" fg:w="1"/><text x="3.3495%" y="1439.50"></text></g><g><title>mas_alloc_nodes (1 samples, 0.03%)</title><rect x="3.0995%" y="1413" width="0.0326%" height="15" fill="rgb(223,117,47)" fg:x="95" fg:w="1"/><text x="3.3495%" y="1423.50"></text></g><g><title>kmem_cache_alloc_bulk (1 samples, 0.03%)</title><rect x="3.0995%" y="1397" width="0.0326%" height="15" fill="rgb(244,107,35)" fg:x="95" fg:w="1"/><text x="3.3495%" y="1407.50"></text></g><g><title>__GI___munmap (2 samples, 0.07%)</title><rect x="3.0995%" y="1573" width="0.0653%" height="15" fill="rgb(205,140,8)" fg:x="95" fg:w="2"/><text x="3.3495%" y="1583.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.07%)</title><rect x="3.0995%" y="1557" width="0.0653%" height="15" fill="rgb(228,84,46)" fg:x="95" fg:w="2"/><text x="3.3495%" y="1567.50"></text></g><g><title>do_syscall_64 (2 samples, 0.07%)</title><rect x="3.0995%" y="1541" width="0.0653%" height="15" fill="rgb(254,188,9)" fg:x="95" fg:w="2"/><text x="3.3495%" y="1551.50"></text></g><g><title>__x64_sys_munmap (2 samples, 0.07%)</title><rect x="3.0995%" y="1525" width="0.0653%" height="15" fill="rgb(206,112,54)" fg:x="95" fg:w="2"/><text x="3.3495%" y="1535.50"></text></g><g><title>__vm_munmap (2 samples, 0.07%)</title><rect x="3.0995%" y="1509" width="0.0653%" height="15" fill="rgb(216,84,49)" fg:x="95" fg:w="2"/><text x="3.3495%" y="1519.50"></text></g><g><title>down_write_killable (1 samples, 0.03%)</title><rect x="3.1321%" y="1493" width="0.0326%" height="15" fill="rgb(214,194,35)" fg:x="96" fg:w="1"/><text x="3.3821%" y="1503.50"></text></g><g><title>rwsem_down_write_slowpath (1 samples, 0.03%)</title><rect x="3.1321%" y="1477" width="0.0326%" height="15" fill="rgb(249,28,3)" fg:x="96" fg:w="1"/><text x="3.3821%" y="1487.50"></text></g><g><title>osq_lock (1 samples, 0.03%)</title><rect x="3.1321%" y="1461" width="0.0326%" height="15" fill="rgb(222,56,52)" fg:x="96" fg:w="1"/><text x="3.3821%" y="1471.50"></text></g><g><title>init_file (1 samples, 0.03%)</title><rect x="3.1974%" y="1445" width="0.0326%" height="15" fill="rgb(245,217,50)" fg:x="98" fg:w="1"/><text x="3.4474%" y="1455.50"></text></g><g><title>security_file_alloc (1 samples, 0.03%)</title><rect x="3.1974%" y="1429" width="0.0326%" height="15" fill="rgb(213,201,24)" fg:x="98" fg:w="1"/><text x="3.4474%" y="1439.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.03%)</title><rect x="3.1974%" y="1413" width="0.0326%" height="15" fill="rgb(248,116,28)" fg:x="98" fg:w="1"/><text x="3.4474%" y="1423.50"></text></g><g><title>__GI___open64_nocancel (3 samples, 0.10%)</title><rect x="3.1648%" y="1573" width="0.0979%" height="15" fill="rgb(219,72,43)" fg:x="97" fg:w="3"/><text x="3.4148%" y="1583.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.10%)</title><rect x="3.1648%" y="1557" width="0.0979%" height="15" fill="rgb(209,138,14)" fg:x="97" fg:w="3"/><text x="3.4148%" y="1567.50"></text></g><g><title>do_syscall_64 (3 samples, 0.10%)</title><rect x="3.1648%" y="1541" width="0.0979%" height="15" fill="rgb(222,18,33)" fg:x="97" fg:w="3"/><text x="3.4148%" y="1551.50"></text></g><g><title>__x64_sys_openat (3 samples, 0.10%)</title><rect x="3.1648%" y="1525" width="0.0979%" height="15" fill="rgb(213,199,7)" fg:x="97" fg:w="3"/><text x="3.4148%" y="1535.50"></text></g><g><title>do_sys_openat2 (3 samples, 0.10%)</title><rect x="3.1648%" y="1509" width="0.0979%" height="15" fill="rgb(250,110,10)" fg:x="97" fg:w="3"/><text x="3.4148%" y="1519.50"></text></g><g><title>do_filp_open (3 samples, 0.10%)</title><rect x="3.1648%" y="1493" width="0.0979%" height="15" fill="rgb(248,123,6)" fg:x="97" fg:w="3"/><text x="3.4148%" y="1503.50"></text></g><g><title>path_openat (3 samples, 0.10%)</title><rect x="3.1648%" y="1477" width="0.0979%" height="15" fill="rgb(206,91,31)" fg:x="97" fg:w="3"/><text x="3.4148%" y="1487.50"></text></g><g><title>alloc_empty_file (2 samples, 0.07%)</title><rect x="3.1974%" y="1461" width="0.0653%" height="15" fill="rgb(211,154,13)" fg:x="98" fg:w="2"/><text x="3.4474%" y="1471.50"></text></g><g><title>should_failslab (1 samples, 0.03%)</title><rect x="3.2300%" y="1445" width="0.0326%" height="15" fill="rgb(225,148,7)" fg:x="99" fg:w="1"/><text x="3.4800%" y="1455.50"></text></g><g><title>[git] (2 samples, 0.07%)</title><rect x="3.3279%" y="1509" width="0.0653%" height="15" fill="rgb(220,160,43)" fg:x="102" fg:w="2"/><text x="3.5779%" y="1519.50"></text></g><g><title>[git] (5 samples, 0.16%)</title><rect x="3.2626%" y="1525" width="0.1631%" height="15" fill="rgb(213,52,39)" fg:x="100" fg:w="5"/><text x="3.5126%" y="1535.50"></text></g><g><title>__GI___fstatat64 (1 samples, 0.03%)</title><rect x="3.3931%" y="1509" width="0.0326%" height="15" fill="rgb(243,137,7)" fg:x="104" fg:w="1"/><text x="3.6431%" y="1519.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="3.3931%" y="1493" width="0.0326%" height="15" fill="rgb(230,79,13)" fg:x="104" fg:w="1"/><text x="3.6431%" y="1503.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="3.3931%" y="1477" width="0.0326%" height="15" fill="rgb(247,105,23)" fg:x="104" fg:w="1"/><text x="3.6431%" y="1487.50"></text></g><g><title>__x64_sys_newfstatat (1 samples, 0.03%)</title><rect x="3.3931%" y="1461" width="0.0326%" height="15" fill="rgb(223,179,41)" fg:x="104" fg:w="1"/><text x="3.6431%" y="1471.50"></text></g><g><title>__do_sys_newfstatat (1 samples, 0.03%)</title><rect x="3.3931%" y="1445" width="0.0326%" height="15" fill="rgb(218,9,34)" fg:x="104" fg:w="1"/><text x="3.6431%" y="1455.50"></text></g><g><title>vfs_fstatat (1 samples, 0.03%)</title><rect x="3.3931%" y="1429" width="0.0326%" height="15" fill="rgb(222,106,8)" fg:x="104" fg:w="1"/><text x="3.6431%" y="1439.50"></text></g><g><title>getname_flags (1 samples, 0.03%)</title><rect x="3.3931%" y="1413" width="0.0326%" height="15" fill="rgb(211,220,0)" fg:x="104" fg:w="1"/><text x="3.6431%" y="1423.50"></text></g><g><title>getname_flags.part.0 (1 samples, 0.03%)</title><rect x="3.3931%" y="1397" width="0.0326%" height="15" fill="rgb(229,52,16)" fg:x="104" fg:w="1"/><text x="3.6431%" y="1407.50"></text></g><g><title>cp_new_stat (3 samples, 0.10%)</title><rect x="3.5237%" y="1445" width="0.0979%" height="15" fill="rgb(212,155,18)" fg:x="108" fg:w="3"/><text x="3.7737%" y="1455.50"></text></g><g><title>rep_movs_alternative (1 samples, 0.03%)</title><rect x="3.5889%" y="1429" width="0.0326%" height="15" fill="rgb(242,21,14)" fg:x="110" fg:w="1"/><text x="3.8389%" y="1439.50"></text></g><g><title>kmem_cache_alloc (2 samples, 0.07%)</title><rect x="3.6542%" y="1397" width="0.0653%" height="15" fill="rgb(222,19,48)" fg:x="112" fg:w="2"/><text x="3.9042%" y="1407.50"></text></g><g><title>getname_flags (10 samples, 0.33%)</title><rect x="3.6542%" y="1429" width="0.3263%" height="15" fill="rgb(232,45,27)" fg:x="112" fg:w="10"/><text x="3.9042%" y="1439.50"></text></g><g><title>getname_flags.part.0 (10 samples, 0.33%)</title><rect x="3.6542%" y="1413" width="0.3263%" height="15" fill="rgb(249,103,42)" fg:x="112" fg:w="10"/><text x="3.9042%" y="1423.50"></text></g><g><title>memset_orig (8 samples, 0.26%)</title><rect x="3.7194%" y="1397" width="0.2610%" height="15" fill="rgb(246,81,33)" fg:x="114" fg:w="8"/><text x="3.9694%" y="1407.50"></text></g><g><title>putname (2 samples, 0.07%)</title><rect x="3.9804%" y="1429" width="0.0653%" height="15" fill="rgb(252,33,42)" fg:x="122" fg:w="2"/><text x="4.2304%" y="1439.50"></text></g><g><title>kmem_cache_free (1 samples, 0.03%)</title><rect x="4.0131%" y="1413" width="0.0326%" height="15" fill="rgb(209,212,41)" fg:x="123" fg:w="1"/><text x="4.2631%" y="1423.50"></text></g><g><title>security_inode_getattr (3 samples, 0.10%)</title><rect x="4.0457%" y="1429" width="0.0979%" height="15" fill="rgb(207,154,6)" fg:x="124" fg:w="3"/><text x="4.2957%" y="1439.50"></text></g><g><title>ext4_file_getattr (1 samples, 0.03%)</title><rect x="4.1762%" y="1413" width="0.0326%" height="15" fill="rgb(223,64,47)" fg:x="128" fg:w="1"/><text x="4.4262%" y="1423.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="4.2414%" y="1365" width="0.0326%" height="15" fill="rgb(211,161,38)" fg:x="130" fg:w="1"/><text x="4.4914%" y="1375.50"></text></g><g><title>complete_walk (2 samples, 0.07%)</title><rect x="4.2414%" y="1381" width="0.0653%" height="15" fill="rgb(219,138,40)" fg:x="130" fg:w="2"/><text x="4.4914%" y="1391.50"></text></g><g><title>try_to_unlazy (1 samples, 0.03%)</title><rect x="4.2741%" y="1365" width="0.0326%" height="15" fill="rgb(241,228,46)" fg:x="131" fg:w="1"/><text x="4.5241%" y="1375.50"></text></g><g><title>inode_permission (5 samples, 0.16%)</title><rect x="4.4046%" y="1365" width="0.1631%" height="15" fill="rgb(223,209,38)" fg:x="135" fg:w="5"/><text x="4.6546%" y="1375.50"></text></g><g><title>generic_permission (2 samples, 0.07%)</title><rect x="4.5024%" y="1349" width="0.0653%" height="15" fill="rgb(236,164,45)" fg:x="138" fg:w="2"/><text x="4.7524%" y="1359.50"></text></g><g><title>lookup_fast (2 samples, 0.07%)</title><rect x="4.5677%" y="1349" width="0.0653%" height="15" fill="rgb(231,15,5)" fg:x="140" fg:w="2"/><text x="4.8177%" y="1359.50"></text></g><g><title>__d_lookup_rcu (1 samples, 0.03%)</title><rect x="4.6003%" y="1333" width="0.0326%" height="15" fill="rgb(252,35,15)" fg:x="141" fg:w="1"/><text x="4.8503%" y="1343.50"></text></g><g><title>link_path_walk.part.0.constprop.0 (11 samples, 0.36%)</title><rect x="4.3067%" y="1381" width="0.3589%" height="15" fill="rgb(248,181,18)" fg:x="132" fg:w="11"/><text x="4.5567%" y="1391.50"></text></g><g><title>walk_component (3 samples, 0.10%)</title><rect x="4.5677%" y="1365" width="0.0979%" height="15" fill="rgb(233,39,42)" fg:x="140" fg:w="3"/><text x="4.8177%" y="1375.50"></text></g><g><title>step_into (1 samples, 0.03%)</title><rect x="4.6330%" y="1349" width="0.0326%" height="15" fill="rgb(238,110,33)" fg:x="142" fg:w="1"/><text x="4.8830%" y="1359.50"></text></g><g><title>path_lookupat (21 samples, 0.69%)</title><rect x="4.2088%" y="1397" width="0.6852%" height="15" fill="rgb(233,195,10)" fg:x="129" fg:w="21"/><text x="4.4588%" y="1407.50"></text></g><g><title>walk_component (7 samples, 0.23%)</title><rect x="4.6656%" y="1381" width="0.2284%" height="15" fill="rgb(254,105,3)" fg:x="143" fg:w="7"/><text x="4.9156%" y="1391.50"></text></g><g><title>lookup_fast (6 samples, 0.20%)</title><rect x="4.6982%" y="1365" width="0.1958%" height="15" fill="rgb(221,225,9)" fg:x="144" fg:w="6"/><text x="4.9482%" y="1375.50"></text></g><g><title>__d_lookup_rcu (6 samples, 0.20%)</title><rect x="4.6982%" y="1349" width="0.1958%" height="15" fill="rgb(224,227,45)" fg:x="144" fg:w="6"/><text x="4.9482%" y="1359.50"></text></g><g><title>filename_lookup (22 samples, 0.72%)</title><rect x="4.2088%" y="1413" width="0.7178%" height="15" fill="rgb(229,198,43)" fg:x="129" fg:w="22"/><text x="4.4588%" y="1423.50"></text></g><g><title>srso_return_thunk (1 samples, 0.03%)</title><rect x="4.8940%" y="1397" width="0.0326%" height="15" fill="rgb(206,209,35)" fg:x="150" fg:w="1"/><text x="5.1440%" y="1407.50"></text></g><g><title>path_put (1 samples, 0.03%)</title><rect x="4.9266%" y="1413" width="0.0326%" height="15" fill="rgb(245,195,53)" fg:x="151" fg:w="1"/><text x="5.1766%" y="1423.50"></text></g><g><title>dput (1 samples, 0.03%)</title><rect x="4.9266%" y="1397" width="0.0326%" height="15" fill="rgb(240,92,26)" fg:x="151" fg:w="1"/><text x="5.1766%" y="1407.50"></text></g><g><title>security_inode_getattr (1 samples, 0.03%)</title><rect x="4.9592%" y="1413" width="0.0326%" height="15" fill="rgb(207,40,23)" fg:x="152" fg:w="1"/><text x="5.2092%" y="1423.50"></text></g><g><title>apparmor_inode_getattr (1 samples, 0.03%)</title><rect x="4.9592%" y="1397" width="0.0326%" height="15" fill="rgb(223,111,35)" fg:x="152" fg:w="1"/><text x="5.2092%" y="1407.50"></text></g><g><title>common_perm_cond (1 samples, 0.03%)</title><rect x="4.9592%" y="1381" width="0.0326%" height="15" fill="rgb(229,147,28)" fg:x="152" fg:w="1"/><text x="5.2092%" y="1391.50"></text></g><g><title>__do_sys_newfstatat (51 samples, 1.66%)</title><rect x="3.5237%" y="1461" width="1.6639%" height="15" fill="rgb(211,29,28)" fg:x="108" fg:w="51"/><text x="3.7737%" y="1471.50"></text></g><g><title>vfs_fstatat (48 samples, 1.57%)</title><rect x="3.6215%" y="1445" width="1.5661%" height="15" fill="rgb(228,72,33)" fg:x="111" fg:w="48"/><text x="3.8715%" y="1455.50"></text></g><g><title>vfs_statx (32 samples, 1.04%)</title><rect x="4.1436%" y="1429" width="1.0440%" height="15" fill="rgb(205,214,31)" fg:x="127" fg:w="32"/><text x="4.3936%" y="1439.50"></text></g><g><title>vfs_getattr_nosec (6 samples, 0.20%)</title><rect x="4.9918%" y="1413" width="0.1958%" height="15" fill="rgb(224,111,15)" fg:x="153" fg:w="6"/><text x="5.2418%" y="1423.50"></text></g><g><title>ext4_file_getattr (5 samples, 0.16%)</title><rect x="5.0245%" y="1397" width="0.1631%" height="15" fill="rgb(253,21,26)" fg:x="154" fg:w="5"/><text x="5.2745%" y="1407.50"></text></g><g><title>ext4_getattr (2 samples, 0.07%)</title><rect x="5.1223%" y="1381" width="0.0653%" height="15" fill="rgb(245,139,43)" fg:x="157" fg:w="2"/><text x="5.3723%" y="1391.50"></text></g><g><title>generic_fillattr (1 samples, 0.03%)</title><rect x="5.1550%" y="1365" width="0.0326%" height="15" fill="rgb(252,170,7)" fg:x="158" fg:w="1"/><text x="5.4050%" y="1375.50"></text></g><g><title>do_syscall_64 (52 samples, 1.70%)</title><rect x="3.5237%" y="1493" width="1.6966%" height="15" fill="rgb(231,118,14)" fg:x="108" fg:w="52"/><text x="3.7737%" y="1503.50"></text></g><g><title>__x64_sys_newfstatat (52 samples, 1.70%)</title><rect x="3.5237%" y="1477" width="1.6966%" height="15" fill="rgb(238,83,0)" fg:x="108" fg:w="52"/><text x="3.7737%" y="1487.50"></text></g><g><title>srso_safe_ret (1 samples, 0.03%)</title><rect x="5.1876%" y="1461" width="0.0326%" height="15" fill="rgb(221,39,39)" fg:x="159" fg:w="1"/><text x="5.4376%" y="1471.50"></text></g><g><title>__clone3 (61 samples, 1.99%)</title><rect x="3.2626%" y="1573" width="1.9902%" height="15" fill="rgb(222,119,46)" fg:x="100" fg:w="61"/><text x="3.5126%" y="1583.50">_..</text></g><g><title>start_thread (61 samples, 1.99%)</title><rect x="3.2626%" y="1557" width="1.9902%" height="15" fill="rgb(222,165,49)" fg:x="100" fg:w="61"/><text x="3.5126%" y="1567.50">s..</text></g><g><title>[git] (61 samples, 1.99%)</title><rect x="3.2626%" y="1541" width="1.9902%" height="15" fill="rgb(219,113,52)" fg:x="100" fg:w="61"/><text x="3.5126%" y="1551.50">[..</text></g><g><title>__GI___fstatat64 (56 samples, 1.83%)</title><rect x="3.4258%" y="1525" width="1.8271%" height="15" fill="rgb(214,7,15)" fg:x="105" fg:w="56"/><text x="3.6758%" y="1535.50">_..</text></g><g><title>entry_SYSCALL_64 (56 samples, 1.83%)</title><rect x="3.4258%" y="1509" width="1.8271%" height="15" fill="rgb(235,32,4)" fg:x="105" fg:w="56"/><text x="3.6758%" y="1519.50">e..</text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.03%)</title><rect x="5.2202%" y="1493" width="0.0326%" height="15" fill="rgb(238,90,54)" fg:x="160" fg:w="1"/><text x="5.4702%" y="1503.50"></text></g><g><title>[git] (1 samples, 0.03%)</title><rect x="5.3181%" y="1333" width="0.0326%" height="15" fill="rgb(213,208,19)" fg:x="163" fg:w="1"/><text x="5.5681%" y="1343.50"></text></g><g><title>[git] (1 samples, 0.03%)</title><rect x="5.3181%" y="1317" width="0.0326%" height="15" fill="rgb(233,156,4)" fg:x="163" fg:w="1"/><text x="5.5681%" y="1327.50"></text></g><g><title>__libc_start_call_main (4 samples, 0.13%)</title><rect x="5.2529%" y="1573" width="0.1305%" height="15" fill="rgb(207,194,5)" fg:x="161" fg:w="4"/><text x="5.5029%" y="1583.50"></text></g><g><title>[git] (4 samples, 0.13%)</title><rect x="5.2529%" y="1557" width="0.1305%" height="15" fill="rgb(206,111,30)" fg:x="161" fg:w="4"/><text x="5.5029%" y="1567.50"></text></g><g><title>[git] (4 samples, 0.13%)</title><rect x="5.2529%" y="1541" width="0.1305%" height="15" fill="rgb(243,70,54)" fg:x="161" fg:w="4"/><text x="5.5029%" y="1551.50"></text></g><g><title>[git] (4 samples, 0.13%)</title><rect x="5.2529%" y="1525" width="0.1305%" height="15" fill="rgb(242,28,8)" fg:x="161" fg:w="4"/><text x="5.5029%" y="1535.50"></text></g><g><title>[git] (4 samples, 0.13%)</title><rect x="5.2529%" y="1509" width="0.1305%" height="15" fill="rgb(219,106,18)" fg:x="161" fg:w="4"/><text x="5.5029%" y="1519.50"></text></g><g><title>[git] (4 samples, 0.13%)</title><rect x="5.2529%" y="1493" width="0.1305%" height="15" fill="rgb(244,222,10)" fg:x="161" fg:w="4"/><text x="5.5029%" y="1503.50"></text></g><g><title>[git] (4 samples, 0.13%)</title><rect x="5.2529%" y="1477" width="0.1305%" height="15" fill="rgb(236,179,52)" fg:x="161" fg:w="4"/><text x="5.5029%" y="1487.50"></text></g><g><title>[git] (4 samples, 0.13%)</title><rect x="5.2529%" y="1461" width="0.1305%" height="15" fill="rgb(213,23,39)" fg:x="161" fg:w="4"/><text x="5.5029%" y="1471.50"></text></g><g><title>[git] (4 samples, 0.13%)</title><rect x="5.2529%" y="1445" width="0.1305%" height="15" fill="rgb(238,48,10)" fg:x="161" fg:w="4"/><text x="5.5029%" y="1455.50"></text></g><g><title>[git] (4 samples, 0.13%)</title><rect x="5.2529%" y="1429" width="0.1305%" height="15" fill="rgb(251,196,23)" fg:x="161" fg:w="4"/><text x="5.5029%" y="1439.50"></text></g><g><title>[git] (3 samples, 0.10%)</title><rect x="5.2855%" y="1413" width="0.0979%" height="15" fill="rgb(250,152,24)" fg:x="162" fg:w="3"/><text x="5.5355%" y="1423.50"></text></g><g><title>[git] (3 samples, 0.10%)</title><rect x="5.2855%" y="1397" width="0.0979%" height="15" fill="rgb(209,150,17)" fg:x="162" fg:w="3"/><text x="5.5355%" y="1407.50"></text></g><g><title>[git] (3 samples, 0.10%)</title><rect x="5.2855%" y="1381" width="0.0979%" height="15" fill="rgb(234,202,34)" fg:x="162" fg:w="3"/><text x="5.5355%" y="1391.50"></text></g><g><title>[git] (3 samples, 0.10%)</title><rect x="5.2855%" y="1365" width="0.0979%" height="15" fill="rgb(253,148,53)" fg:x="162" fg:w="3"/><text x="5.5355%" y="1375.50"></text></g><g><title>[git] (3 samples, 0.10%)</title><rect x="5.2855%" y="1349" width="0.0979%" height="15" fill="rgb(218,129,16)" fg:x="162" fg:w="3"/><text x="5.5355%" y="1359.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="5.3507%" y="1333" width="0.0326%" height="15" fill="rgb(216,85,19)" fg:x="164" fg:w="1"/><text x="5.6007%" y="1343.50"></text></g><g><title>exc_page_fault (1 samples, 0.03%)</title><rect x="5.3507%" y="1317" width="0.0326%" height="15" fill="rgb(235,228,7)" fg:x="164" fg:w="1"/><text x="5.6007%" y="1327.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="5.3507%" y="1301" width="0.0326%" height="15" fill="rgb(245,175,0)" fg:x="164" fg:w="1"/><text x="5.6007%" y="1311.50"></text></g><g><title>handle_mm_fault (1 samples, 0.03%)</title><rect x="5.3507%" y="1285" width="0.0326%" height="15" fill="rgb(208,168,36)" fg:x="164" fg:w="1"/><text x="5.6007%" y="1295.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="5.3834%" y="1573" width="0.0326%" height="15" fill="rgb(246,171,24)" fg:x="165" fg:w="1"/><text x="5.6334%" y="1583.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="5.3834%" y="1557" width="0.0326%" height="15" fill="rgb(215,142,24)" fg:x="165" fg:w="1"/><text x="5.6334%" y="1567.50"></text></g><g><title>exc_page_fault (1 samples, 0.03%)</title><rect x="5.3834%" y="1541" width="0.0326%" height="15" fill="rgb(250,187,7)" fg:x="165" fg:w="1"/><text x="5.6334%" y="1551.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="5.3834%" y="1525" width="0.0326%" height="15" fill="rgb(228,66,33)" fg:x="165" fg:w="1"/><text x="5.6334%" y="1535.50"></text></g><g><title>handle_mm_fault (1 samples, 0.03%)</title><rect x="5.3834%" y="1509" width="0.0326%" height="15" fill="rgb(234,215,21)" fg:x="165" fg:w="1"/><text x="5.6334%" y="1519.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="5.3834%" y="1493" width="0.0326%" height="15" fill="rgb(222,191,20)" fg:x="165" fg:w="1"/><text x="5.6334%" y="1503.50"></text></g><g><title>do_fault (1 samples, 0.03%)</title><rect x="5.3834%" y="1477" width="0.0326%" height="15" fill="rgb(245,79,54)" fg:x="165" fg:w="1"/><text x="5.6334%" y="1487.50"></text></g><g><title>filemap_map_pages (1 samples, 0.03%)</title><rect x="5.3834%" y="1461" width="0.0326%" height="15" fill="rgb(240,10,37)" fg:x="165" fg:w="1"/><text x="5.6334%" y="1471.50"></text></g><g><title>next_uptodate_folio (1 samples, 0.03%)</title><rect x="5.3834%" y="1445" width="0.0326%" height="15" fill="rgb(214,192,32)" fg:x="165" fg:w="1"/><text x="5.6334%" y="1455.50"></text></g><g><title>__strncmp_avx2 (2 samples, 0.07%)</title><rect x="5.4160%" y="1573" width="0.0653%" height="15" fill="rgb(209,36,54)" fg:x="166" fg:w="2"/><text x="5.6660%" y="1583.50"></text></g><g><title>_int_malloc (1 samples, 0.03%)</title><rect x="5.4812%" y="1573" width="0.0326%" height="15" fill="rgb(220,10,11)" fg:x="168" fg:w="1"/><text x="5.7312%" y="1583.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="5.4812%" y="1557" width="0.0326%" height="15" fill="rgb(221,106,17)" fg:x="168" fg:w="1"/><text x="5.7312%" y="1567.50"></text></g><g><title>exc_page_fault (1 samples, 0.03%)</title><rect x="5.4812%" y="1541" width="0.0326%" height="15" fill="rgb(251,142,44)" fg:x="168" fg:w="1"/><text x="5.7312%" y="1551.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="5.4812%" y="1525" width="0.0326%" height="15" fill="rgb(238,13,15)" fg:x="168" fg:w="1"/><text x="5.7312%" y="1535.50"></text></g><g><title>handle_mm_fault (1 samples, 0.03%)</title><rect x="5.4812%" y="1509" width="0.0326%" height="15" fill="rgb(208,107,27)" fg:x="168" fg:w="1"/><text x="5.7312%" y="1519.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="5.4812%" y="1493" width="0.0326%" height="15" fill="rgb(205,136,37)" fg:x="168" fg:w="1"/><text x="5.7312%" y="1503.50"></text></g><g><title>do_anonymous_page (1 samples, 0.03%)</title><rect x="5.4812%" y="1477" width="0.0326%" height="15" fill="rgb(250,205,27)" fg:x="168" fg:w="1"/><text x="5.7312%" y="1487.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.03%)</title><rect x="5.4812%" y="1461" width="0.0326%" height="15" fill="rgb(210,80,43)" fg:x="168" fg:w="1"/><text x="5.7312%" y="1471.50"></text></g><g><title>__folio_alloc (1 samples, 0.03%)</title><rect x="5.4812%" y="1445" width="0.0326%" height="15" fill="rgb(247,160,36)" fg:x="168" fg:w="1"/><text x="5.7312%" y="1455.50"></text></g><g><title>__alloc_pages (1 samples, 0.03%)</title><rect x="5.4812%" y="1429" width="0.0326%" height="15" fill="rgb(234,13,49)" fg:x="168" fg:w="1"/><text x="5.7312%" y="1439.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.03%)</title><rect x="5.4812%" y="1413" width="0.0326%" height="15" fill="rgb(234,122,0)" fg:x="168" fg:w="1"/><text x="5.7312%" y="1423.50"></text></g><g><title>__rmqueue_pcplist (1 samples, 0.03%)</title><rect x="5.4812%" y="1397" width="0.0326%" height="15" fill="rgb(207,146,38)" fg:x="168" fg:w="1"/><text x="5.7312%" y="1407.50"></text></g><g><title>_compound_head (1 samples, 0.03%)</title><rect x="5.5465%" y="1413" width="0.0326%" height="15" fill="rgb(207,177,25)" fg:x="170" fg:w="1"/><text x="5.7965%" y="1423.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.03%)</title><rect x="5.6117%" y="1381" width="0.0326%" height="15" fill="rgb(211,178,42)" fg:x="172" fg:w="1"/><text x="5.8617%" y="1391.50"></text></g><g><title>[vmlinux] (4 samples, 0.13%)</title><rect x="5.5465%" y="1541" width="0.1305%" height="15" fill="rgb(230,69,54)" fg:x="170" fg:w="4"/><text x="5.7965%" y="1551.50"></text></g><g><title>do_group_exit (4 samples, 0.13%)</title><rect x="5.5465%" y="1525" width="0.1305%" height="15" fill="rgb(214,135,41)" fg:x="170" fg:w="4"/><text x="5.7965%" y="1535.50"></text></g><g><title>do_exit (4 samples, 0.13%)</title><rect x="5.5465%" y="1509" width="0.1305%" height="15" fill="rgb(237,67,25)" fg:x="170" fg:w="4"/><text x="5.7965%" y="1519.50"></text></g><g><title>mmput (4 samples, 0.13%)</title><rect x="5.5465%" y="1493" width="0.1305%" height="15" fill="rgb(222,189,50)" fg:x="170" fg:w="4"/><text x="5.7965%" y="1503.50"></text></g><g><title>__mmput (4 samples, 0.13%)</title><rect x="5.5465%" y="1477" width="0.1305%" height="15" fill="rgb(245,148,34)" fg:x="170" fg:w="4"/><text x="5.7965%" y="1487.50"></text></g><g><title>exit_mmap (4 samples, 0.13%)</title><rect x="5.5465%" y="1461" width="0.1305%" height="15" fill="rgb(222,29,6)" fg:x="170" fg:w="4"/><text x="5.7965%" y="1471.50"></text></g><g><title>unmap_vmas (4 samples, 0.13%)</title><rect x="5.5465%" y="1445" width="0.1305%" height="15" fill="rgb(221,189,43)" fg:x="170" fg:w="4"/><text x="5.7965%" y="1455.50"></text></g><g><title>unmap_single_vma (4 samples, 0.13%)</title><rect x="5.5465%" y="1429" width="0.1305%" height="15" fill="rgb(207,36,27)" fg:x="170" fg:w="4"/><text x="5.7965%" y="1439.50"></text></g><g><title>unmap_page_range (3 samples, 0.10%)</title><rect x="5.5791%" y="1413" width="0.0979%" height="15" fill="rgb(217,90,24)" fg:x="171" fg:w="3"/><text x="5.8291%" y="1423.50"></text></g><g><title>page_remove_rmap (2 samples, 0.07%)</title><rect x="5.6117%" y="1397" width="0.0653%" height="15" fill="rgb(224,66,35)" fg:x="172" fg:w="2"/><text x="5.8617%" y="1407.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="5.6444%" y="1381" width="0.0326%" height="15" fill="rgb(221,13,50)" fg:x="173" fg:w="1"/><text x="5.8944%" y="1391.50"></text></g><g><title>__x64_sys_getdents64 (1 samples, 0.03%)</title><rect x="5.6770%" y="1541" width="0.0326%" height="15" fill="rgb(236,68,49)" fg:x="174" fg:w="1"/><text x="5.9270%" y="1551.50"></text></g><g><title>iterate_dir (1 samples, 0.03%)</title><rect x="5.6770%" y="1525" width="0.0326%" height="15" fill="rgb(229,146,28)" fg:x="174" fg:w="1"/><text x="5.9270%" y="1535.50"></text></g><g><title>__fsnotify_parent (1 samples, 0.03%)</title><rect x="5.6770%" y="1509" width="0.0326%" height="15" fill="rgb(225,31,38)" fg:x="174" fg:w="1"/><text x="5.9270%" y="1519.50"></text></g><g><title>dget_parent (1 samples, 0.03%)</title><rect x="5.6770%" y="1493" width="0.0326%" height="15" fill="rgb(250,208,3)" fg:x="174" fg:w="1"/><text x="5.9270%" y="1503.50"></text></g><g><title>getname_flags (2 samples, 0.07%)</title><rect x="5.7096%" y="1493" width="0.0653%" height="15" fill="rgb(246,54,23)" fg:x="175" fg:w="2"/><text x="5.9596%" y="1503.50"></text></g><g><title>getname_flags.part.0 (1 samples, 0.03%)</title><rect x="5.7423%" y="1477" width="0.0326%" height="15" fill="rgb(243,76,11)" fg:x="176" fg:w="1"/><text x="5.9923%" y="1487.50"></text></g><g><title>strncpy_from_user (1 samples, 0.03%)</title><rect x="5.7423%" y="1461" width="0.0326%" height="15" fill="rgb(245,21,50)" fg:x="176" fg:w="1"/><text x="5.9923%" y="1471.50"></text></g><g><title>__check_object_size (1 samples, 0.03%)</title><rect x="5.7423%" y="1445" width="0.0326%" height="15" fill="rgb(228,9,43)" fg:x="176" fg:w="1"/><text x="5.9923%" y="1455.50"></text></g><g><title>__check_heap_object (1 samples, 0.03%)</title><rect x="5.7423%" y="1429" width="0.0326%" height="15" fill="rgb(208,100,47)" fg:x="176" fg:w="1"/><text x="5.9923%" y="1439.50"></text></g><g><title>path_init (1 samples, 0.03%)</title><rect x="5.7749%" y="1461" width="0.0326%" height="15" fill="rgb(232,26,8)" fg:x="177" fg:w="1"/><text x="6.0249%" y="1471.50"></text></g><g><title>inode_permission (4 samples, 0.13%)</title><rect x="5.9054%" y="1429" width="0.1305%" height="15" fill="rgb(216,166,38)" fg:x="181" fg:w="4"/><text x="6.1554%" y="1439.50"></text></g><g><title>generic_permission (3 samples, 0.10%)</title><rect x="5.9380%" y="1413" width="0.0979%" height="15" fill="rgb(251,202,51)" fg:x="182" fg:w="3"/><text x="6.1880%" y="1423.50"></text></g><g><title>link_path_walk.part.0.constprop.0 (7 samples, 0.23%)</title><rect x="5.8401%" y="1445" width="0.2284%" height="15" fill="rgb(254,216,34)" fg:x="179" fg:w="7"/><text x="6.0901%" y="1455.50"></text></g><g><title>walk_component (1 samples, 0.03%)</title><rect x="6.0359%" y="1429" width="0.0326%" height="15" fill="rgb(251,32,27)" fg:x="185" fg:w="1"/><text x="6.2859%" y="1439.50"></text></g><g><title>step_into (1 samples, 0.03%)</title><rect x="6.0359%" y="1413" width="0.0326%" height="15" fill="rgb(208,127,28)" fg:x="185" fg:w="1"/><text x="6.2859%" y="1423.50"></text></g><g><title>entry_SYSCALL_64 (18 samples, 0.59%)</title><rect x="5.5139%" y="1573" width="0.5873%" height="15" fill="rgb(224,137,22)" fg:x="169" fg:w="18"/><text x="5.7639%" y="1583.50"></text></g><g><title>do_syscall_64 (17 samples, 0.55%)</title><rect x="5.5465%" y="1557" width="0.5546%" height="15" fill="rgb(254,70,32)" fg:x="170" fg:w="17"/><text x="5.7965%" y="1567.50"></text></g><g><title>__x64_sys_newfstatat (12 samples, 0.39%)</title><rect x="5.7096%" y="1541" width="0.3915%" height="15" fill="rgb(229,75,37)" fg:x="175" fg:w="12"/><text x="5.9596%" y="1551.50"></text></g><g><title>__do_sys_newfstatat (12 samples, 0.39%)</title><rect x="5.7096%" y="1525" width="0.3915%" height="15" fill="rgb(252,64,23)" fg:x="175" fg:w="12"/><text x="5.9596%" y="1535.50"></text></g><g><title>vfs_fstatat (12 samples, 0.39%)</title><rect x="5.7096%" y="1509" width="0.3915%" height="15" fill="rgb(232,162,48)" fg:x="175" fg:w="12"/><text x="5.9596%" y="1519.50"></text></g><g><title>vfs_statx (10 samples, 0.33%)</title><rect x="5.7749%" y="1493" width="0.3263%" height="15" fill="rgb(246,160,12)" fg:x="177" fg:w="10"/><text x="6.0249%" y="1503.50"></text></g><g><title>filename_lookup (10 samples, 0.33%)</title><rect x="5.7749%" y="1477" width="0.3263%" height="15" fill="rgb(247,166,0)" fg:x="177" fg:w="10"/><text x="6.0249%" y="1487.50"></text></g><g><title>path_lookupat (9 samples, 0.29%)</title><rect x="5.8075%" y="1461" width="0.2936%" height="15" fill="rgb(249,219,21)" fg:x="178" fg:w="9"/><text x="6.0575%" y="1471.50"></text></g><g><title>path_init (1 samples, 0.03%)</title><rect x="6.0685%" y="1445" width="0.0326%" height="15" fill="rgb(205,209,3)" fg:x="186" fg:w="1"/><text x="6.3185%" y="1455.50"></text></g><g><title>git (181 samples, 5.91%)</title><rect x="0.6852%" y="1589" width="5.9054%" height="15" fill="rgb(243,44,1)" fg:x="21" fg:w="181"/><text x="0.9352%" y="1599.50">git</text></g><g><title>start_thread (15 samples, 0.49%)</title><rect x="6.1011%" y="1573" width="0.4894%" height="15" fill="rgb(206,159,16)" fg:x="187" fg:w="15"/><text x="6.3511%" y="1583.50"></text></g><g><title>[git] (15 samples, 0.49%)</title><rect x="6.1011%" y="1557" width="0.4894%" height="15" fill="rgb(244,77,30)" fg:x="187" fg:w="15"/><text x="6.3511%" y="1567.50"></text></g><g><title>[git] (2 samples, 0.07%)</title><rect x="6.5253%" y="1541" width="0.0653%" height="15" fill="rgb(218,69,12)" fg:x="200" fg:w="2"/><text x="6.7753%" y="1551.50"></text></g><g><title>[git] (2 samples, 0.07%)</title><rect x="6.5253%" y="1525" width="0.0653%" height="15" fill="rgb(212,87,7)" fg:x="200" fg:w="2"/><text x="6.7753%" y="1535.50"></text></g><g><title>ksoftirqd/0 (1 samples, 0.03%)</title><rect x="6.5905%" y="1589" width="0.0326%" height="15" fill="rgb(245,114,25)" fg:x="202" fg:w="1"/><text x="6.8405%" y="1599.50"></text></g><g><title>ret_from_fork_asm (1 samples, 0.03%)</title><rect x="6.5905%" y="1573" width="0.0326%" height="15" fill="rgb(210,61,42)" fg:x="202" fg:w="1"/><text x="6.8405%" y="1583.50"></text></g><g><title>ret_from_fork (1 samples, 0.03%)</title><rect x="6.5905%" y="1557" width="0.0326%" height="15" fill="rgb(211,52,33)" fg:x="202" fg:w="1"/><text x="6.8405%" y="1567.50"></text></g><g><title>kthread (1 samples, 0.03%)</title><rect x="6.5905%" y="1541" width="0.0326%" height="15" fill="rgb(234,58,33)" fg:x="202" fg:w="1"/><text x="6.8405%" y="1551.50"></text></g><g><title>smpboot_thread_fn (1 samples, 0.03%)</title><rect x="6.5905%" y="1525" width="0.0326%" height="15" fill="rgb(220,115,36)" fg:x="202" fg:w="1"/><text x="6.8405%" y="1535.50"></text></g><g><title>schedule (1 samples, 0.03%)</title><rect x="6.5905%" y="1509" width="0.0326%" height="15" fill="rgb(243,153,54)" fg:x="202" fg:w="1"/><text x="6.8405%" y="1519.50"></text></g><g><title>__schedule (1 samples, 0.03%)</title><rect x="6.5905%" y="1493" width="0.0326%" height="15" fill="rgb(251,47,18)" fg:x="202" fg:w="1"/><text x="6.8405%" y="1503.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.03%)</title><rect x="6.5905%" y="1477" width="0.0326%" height="15" fill="rgb(242,102,42)" fg:x="202" fg:w="1"/><text x="6.8405%" y="1487.50"></text></g><g><title>newidle_balance (1 samples, 0.03%)</title><rect x="6.5905%" y="1461" width="0.0326%" height="15" fill="rgb(234,31,38)" fg:x="202" fg:w="1"/><text x="6.8405%" y="1471.50"></text></g><g><title>load_balance (1 samples, 0.03%)</title><rect x="6.5905%" y="1445" width="0.0326%" height="15" fill="rgb(221,117,51)" fg:x="202" fg:w="1"/><text x="6.8405%" y="1455.50"></text></g><g><title>find_busiest_group (1 samples, 0.03%)</title><rect x="6.5905%" y="1429" width="0.0326%" height="15" fill="rgb(212,20,18)" fg:x="202" fg:w="1"/><text x="6.8405%" y="1439.50"></text></g><g><title>update_sd_lb_stats.constprop.0 (1 samples, 0.03%)</title><rect x="6.5905%" y="1413" width="0.0326%" height="15" fill="rgb(245,133,36)" fg:x="202" fg:w="1"/><text x="6.8405%" y="1423.50"></text></g><g><title>ksoftirqd/18 (1 samples, 0.03%)</title><rect x="6.6232%" y="1589" width="0.0326%" height="15" fill="rgb(212,6,19)" fg:x="203" fg:w="1"/><text x="6.8732%" y="1599.50"></text></g><g><title>ret_from_fork_asm (1 samples, 0.03%)</title><rect x="6.6232%" y="1573" width="0.0326%" height="15" fill="rgb(218,1,36)" fg:x="203" fg:w="1"/><text x="6.8732%" y="1583.50"></text></g><g><title>ret_from_fork (1 samples, 0.03%)</title><rect x="6.6232%" y="1557" width="0.0326%" height="15" fill="rgb(246,84,54)" fg:x="203" fg:w="1"/><text x="6.8732%" y="1567.50"></text></g><g><title>kthread (1 samples, 0.03%)</title><rect x="6.6232%" y="1541" width="0.0326%" height="15" fill="rgb(242,110,6)" fg:x="203" fg:w="1"/><text x="6.8732%" y="1551.50"></text></g><g><title>smpboot_thread_fn (1 samples, 0.03%)</title><rect x="6.6232%" y="1525" width="0.0326%" height="15" fill="rgb(214,47,5)" fg:x="203" fg:w="1"/><text x="6.8732%" y="1535.50"></text></g><g><title>run_ksoftirqd (1 samples, 0.03%)</title><rect x="6.6232%" y="1509" width="0.0326%" height="15" fill="rgb(218,159,25)" fg:x="203" fg:w="1"/><text x="6.8732%" y="1519.50"></text></g><g><title>__do_softirq (1 samples, 0.03%)</title><rect x="6.6232%" y="1493" width="0.0326%" height="15" fill="rgb(215,211,28)" fg:x="203" fg:w="1"/><text x="6.8732%" y="1503.50"></text></g><g><title>blk_done_softirq (1 samples, 0.03%)</title><rect x="6.6232%" y="1477" width="0.0326%" height="15" fill="rgb(238,59,32)" fg:x="203" fg:w="1"/><text x="6.8732%" y="1487.50"></text></g><g><title>blk_complete_reqs (1 samples, 0.03%)</title><rect x="6.6232%" y="1461" width="0.0326%" height="15" fill="rgb(226,82,3)" fg:x="203" fg:w="1"/><text x="6.8732%" y="1471.50"></text></g><g><title>scsi_complete (1 samples, 0.03%)</title><rect x="6.6232%" y="1445" width="0.0326%" height="15" fill="rgb(240,164,32)" fg:x="203" fg:w="1"/><text x="6.8732%" y="1455.50"></text></g><g><title>scsi_finish_command (1 samples, 0.03%)</title><rect x="6.6232%" y="1429" width="0.0326%" height="15" fill="rgb(232,46,7)" fg:x="203" fg:w="1"/><text x="6.8732%" y="1439.50"></text></g><g><title>scsi_io_completion (1 samples, 0.03%)</title><rect x="6.6232%" y="1413" width="0.0326%" height="15" fill="rgb(229,129,53)" fg:x="203" fg:w="1"/><text x="6.8732%" y="1423.50"></text></g><g><title>scsi_end_request (1 samples, 0.03%)</title><rect x="6.6232%" y="1397" width="0.0326%" height="15" fill="rgb(234,188,29)" fg:x="203" fg:w="1"/><text x="6.8732%" y="1407.50"></text></g><g><title>blk_update_request (1 samples, 0.03%)</title><rect x="6.6232%" y="1381" width="0.0326%" height="15" fill="rgb(246,141,4)" fg:x="203" fg:w="1"/><text x="6.8732%" y="1391.50"></text></g><g><title>process_one_work (1 samples, 0.03%)</title><rect x="6.6558%" y="1525" width="0.0326%" height="15" fill="rgb(229,23,39)" fg:x="204" fg:w="1"/><text x="6.9058%" y="1535.50"></text></g><g><title>kworker/18:1-ev (2 samples, 0.07%)</title><rect x="6.6558%" y="1589" width="0.0653%" height="15" fill="rgb(206,12,3)" fg:x="204" fg:w="2"/><text x="6.9058%" y="1599.50"></text></g><g><title>ret_from_fork_asm (2 samples, 0.07%)</title><rect x="6.6558%" y="1573" width="0.0653%" height="15" fill="rgb(252,226,20)" fg:x="204" fg:w="2"/><text x="6.9058%" y="1583.50"></text></g><g><title>ret_from_fork (2 samples, 0.07%)</title><rect x="6.6558%" y="1557" width="0.0653%" height="15" fill="rgb(216,123,35)" fg:x="204" fg:w="2"/><text x="6.9058%" y="1567.50"></text></g><g><title>kthread (2 samples, 0.07%)</title><rect x="6.6558%" y="1541" width="0.0653%" height="15" fill="rgb(212,68,40)" fg:x="204" fg:w="2"/><text x="6.9058%" y="1551.50"></text></g><g><title>worker_thread (1 samples, 0.03%)</title><rect x="6.6884%" y="1525" width="0.0326%" height="15" fill="rgb(254,125,32)" fg:x="205" fg:w="1"/><text x="6.9384%" y="1535.50"></text></g><g><title>schedule (1 samples, 0.03%)</title><rect x="6.6884%" y="1509" width="0.0326%" height="15" fill="rgb(253,97,22)" fg:x="205" fg:w="1"/><text x="6.9384%" y="1519.50"></text></g><g><title>__schedule (1 samples, 0.03%)</title><rect x="6.6884%" y="1493" width="0.0326%" height="15" fill="rgb(241,101,14)" fg:x="205" fg:w="1"/><text x="6.9384%" y="1503.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.03%)</title><rect x="6.6884%" y="1477" width="0.0326%" height="15" fill="rgb(238,103,29)" fg:x="205" fg:w="1"/><text x="6.9384%" y="1487.50"></text></g><g><title>newidle_balance (1 samples, 0.03%)</title><rect x="6.6884%" y="1461" width="0.0326%" height="15" fill="rgb(233,195,47)" fg:x="205" fg:w="1"/><text x="6.9384%" y="1471.50"></text></g><g><title>load_balance (1 samples, 0.03%)</title><rect x="6.6884%" y="1445" width="0.0326%" height="15" fill="rgb(246,218,30)" fg:x="205" fg:w="1"/><text x="6.9384%" y="1455.50"></text></g><g><title>find_busiest_group (1 samples, 0.03%)</title><rect x="6.6884%" y="1429" width="0.0326%" height="15" fill="rgb(219,145,47)" fg:x="205" fg:w="1"/><text x="6.9384%" y="1439.50"></text></g><g><title>update_sd_lb_stats.constprop.0 (1 samples, 0.03%)</title><rect x="6.6884%" y="1413" width="0.0326%" height="15" fill="rgb(243,12,26)" fg:x="205" fg:w="1"/><text x="6.9384%" y="1423.50"></text></g><g><title>kworker/2:2-mm_ (1 samples, 0.03%)</title><rect x="6.7210%" y="1589" width="0.0326%" height="15" fill="rgb(214,87,16)" fg:x="206" fg:w="1"/><text x="6.9710%" y="1599.50"></text></g><g><title>ret_from_fork_asm (1 samples, 0.03%)</title><rect x="6.7210%" y="1573" width="0.0326%" height="15" fill="rgb(208,99,42)" fg:x="206" fg:w="1"/><text x="6.9710%" y="1583.50"></text></g><g><title>ret_from_fork (1 samples, 0.03%)</title><rect x="6.7210%" y="1557" width="0.0326%" height="15" fill="rgb(253,99,2)" fg:x="206" fg:w="1"/><text x="6.9710%" y="1567.50"></text></g><g><title>kthread (1 samples, 0.03%)</title><rect x="6.7210%" y="1541" width="0.0326%" height="15" fill="rgb(220,168,23)" fg:x="206" fg:w="1"/><text x="6.9710%" y="1551.50"></text></g><g><title>worker_thread (1 samples, 0.03%)</title><rect x="6.7210%" y="1525" width="0.0326%" height="15" fill="rgb(242,38,24)" fg:x="206" fg:w="1"/><text x="6.9710%" y="1535.50"></text></g><g><title>schedule (1 samples, 0.03%)</title><rect x="6.7210%" y="1509" width="0.0326%" height="15" fill="rgb(225,182,9)" fg:x="206" fg:w="1"/><text x="6.9710%" y="1519.50"></text></g><g><title>__schedule (1 samples, 0.03%)</title><rect x="6.7210%" y="1493" width="0.0326%" height="15" fill="rgb(243,178,37)" fg:x="206" fg:w="1"/><text x="6.9710%" y="1503.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.03%)</title><rect x="6.7210%" y="1477" width="0.0326%" height="15" fill="rgb(232,139,19)" fg:x="206" fg:w="1"/><text x="6.9710%" y="1487.50"></text></g><g><title>newidle_balance (1 samples, 0.03%)</title><rect x="6.7210%" y="1461" width="0.0326%" height="15" fill="rgb(225,201,24)" fg:x="206" fg:w="1"/><text x="6.9710%" y="1471.50"></text></g><g><title>load_balance (1 samples, 0.03%)</title><rect x="6.7210%" y="1445" width="0.0326%" height="15" fill="rgb(221,47,46)" fg:x="206" fg:w="1"/><text x="6.9710%" y="1455.50"></text></g><g><title>find_busiest_group (1 samples, 0.03%)</title><rect x="6.7210%" y="1429" width="0.0326%" height="15" fill="rgb(249,23,13)" fg:x="206" fg:w="1"/><text x="6.9710%" y="1439.50"></text></g><g><title>update_sd_lb_stats.constprop.0 (1 samples, 0.03%)</title><rect x="6.7210%" y="1413" width="0.0326%" height="15" fill="rgb(219,9,5)" fg:x="206" fg:w="1"/><text x="6.9710%" y="1423.50"></text></g><g><title>kworker/3:0-mm_ (1 samples, 0.03%)</title><rect x="6.7537%" y="1589" width="0.0326%" height="15" fill="rgb(254,171,16)" fg:x="207" fg:w="1"/><text x="7.0037%" y="1599.50"></text></g><g><title>ret_from_fork_asm (1 samples, 0.03%)</title><rect x="6.7537%" y="1573" width="0.0326%" height="15" fill="rgb(230,171,20)" fg:x="207" fg:w="1"/><text x="7.0037%" y="1583.50"></text></g><g><title>ret_from_fork (1 samples, 0.03%)</title><rect x="6.7537%" y="1557" width="0.0326%" height="15" fill="rgb(210,71,41)" fg:x="207" fg:w="1"/><text x="7.0037%" y="1567.50"></text></g><g><title>kthread (1 samples, 0.03%)</title><rect x="6.7537%" y="1541" width="0.0326%" height="15" fill="rgb(206,173,20)" fg:x="207" fg:w="1"/><text x="7.0037%" y="1551.50"></text></g><g><title>worker_thread (1 samples, 0.03%)</title><rect x="6.7537%" y="1525" width="0.0326%" height="15" fill="rgb(233,88,34)" fg:x="207" fg:w="1"/><text x="7.0037%" y="1535.50"></text></g><g><title>schedule (1 samples, 0.03%)</title><rect x="6.7537%" y="1509" width="0.0326%" height="15" fill="rgb(223,209,46)" fg:x="207" fg:w="1"/><text x="7.0037%" y="1519.50"></text></g><g><title>wq_worker_running (1 samples, 0.03%)</title><rect x="6.7537%" y="1493" width="0.0326%" height="15" fill="rgb(250,43,18)" fg:x="207" fg:w="1"/><text x="7.0037%" y="1503.50"></text></g><g><title>process_one_work (1 samples, 0.03%)</title><rect x="6.7863%" y="1509" width="0.0326%" height="15" fill="rgb(208,13,10)" fg:x="208" fg:w="1"/><text x="7.0363%" y="1519.50"></text></g><g><title>drm_fb_helper_damage_work (1 samples, 0.03%)</title><rect x="6.7863%" y="1493" width="0.0326%" height="15" fill="rgb(212,200,36)" fg:x="208" fg:w="1"/><text x="7.0363%" y="1503.50"></text></g><g><title>drm_fbdev_generic_helper_fb_dirty (1 samples, 0.03%)</title><rect x="6.7863%" y="1477" width="0.0326%" height="15" fill="rgb(225,90,30)" fg:x="208" fg:w="1"/><text x="7.0363%" y="1487.50"></text></g><g><title>drm_atomic_helper_dirtyfb (1 samples, 0.03%)</title><rect x="6.7863%" y="1461" width="0.0326%" height="15" fill="rgb(236,182,39)" fg:x="208" fg:w="1"/><text x="7.0363%" y="1471.50"></text></g><g><title>drm_atomic_commit (1 samples, 0.03%)</title><rect x="6.7863%" y="1445" width="0.0326%" height="15" fill="rgb(212,144,35)" fg:x="208" fg:w="1"/><text x="7.0363%" y="1455.50"></text></g><g><title>drm_atomic_helper_commit (1 samples, 0.03%)</title><rect x="6.7863%" y="1429" width="0.0326%" height="15" fill="rgb(228,63,44)" fg:x="208" fg:w="1"/><text x="7.0363%" y="1439.50"></text></g><g><title>commit_tail (1 samples, 0.03%)</title><rect x="6.7863%" y="1413" width="0.0326%" height="15" fill="rgb(228,109,6)" fg:x="208" fg:w="1"/><text x="7.0363%" y="1423.50"></text></g><g><title>mgag200_mode_config_helper_atomic_commit_tail (1 samples, 0.03%)</title><rect x="6.7863%" y="1397" width="0.0326%" height="15" fill="rgb(238,117,24)" fg:x="208" fg:w="1"/><text x="7.0363%" y="1407.50"></text></g><g><title>drm_atomic_helper_commit_tail (1 samples, 0.03%)</title><rect x="6.7863%" y="1381" width="0.0326%" height="15" fill="rgb(242,26,26)" fg:x="208" fg:w="1"/><text x="7.0363%" y="1391.50"></text></g><g><title>drm_atomic_helper_commit_planes (1 samples, 0.03%)</title><rect x="6.7863%" y="1365" width="0.0326%" height="15" fill="rgb(221,92,48)" fg:x="208" fg:w="1"/><text x="7.0363%" y="1375.50"></text></g><g><title>ioread8 (1 samples, 0.03%)</title><rect x="6.7863%" y="1349" width="0.0326%" height="15" fill="rgb(209,209,32)" fg:x="208" fg:w="1"/><text x="7.0363%" y="1359.50"></text></g><g><title>kworker/9:1-eve (2 samples, 0.07%)</title><rect x="6.7863%" y="1589" width="0.0653%" height="15" fill="rgb(221,70,22)" fg:x="208" fg:w="2"/><text x="7.0363%" y="1599.50"></text></g><g><title>ret_from_fork_asm (2 samples, 0.07%)</title><rect x="6.7863%" y="1573" width="0.0653%" height="15" fill="rgb(248,145,5)" fg:x="208" fg:w="2"/><text x="7.0363%" y="1583.50"></text></g><g><title>ret_from_fork (2 samples, 0.07%)</title><rect x="6.7863%" y="1557" width="0.0653%" height="15" fill="rgb(226,116,26)" fg:x="208" fg:w="2"/><text x="7.0363%" y="1567.50"></text></g><g><title>kthread (2 samples, 0.07%)</title><rect x="6.7863%" y="1541" width="0.0653%" height="15" fill="rgb(244,5,17)" fg:x="208" fg:w="2"/><text x="7.0363%" y="1551.50"></text></g><g><title>worker_thread (2 samples, 0.07%)</title><rect x="6.7863%" y="1525" width="0.0653%" height="15" fill="rgb(252,159,33)" fg:x="208" fg:w="2"/><text x="7.0363%" y="1535.50"></text></g><g><title>schedule (1 samples, 0.03%)</title><rect x="6.8189%" y="1509" width="0.0326%" height="15" fill="rgb(206,71,0)" fg:x="209" fg:w="1"/><text x="7.0689%" y="1519.50"></text></g><g><title>__schedule (1 samples, 0.03%)</title><rect x="6.8189%" y="1493" width="0.0326%" height="15" fill="rgb(233,118,54)" fg:x="209" fg:w="1"/><text x="7.0689%" y="1503.50"></text></g><g><title>dequeue_task (1 samples, 0.03%)</title><rect x="6.8189%" y="1477" width="0.0326%" height="15" fill="rgb(234,83,48)" fg:x="209" fg:w="1"/><text x="7.0689%" y="1487.50"></text></g><g><title>dequeue_task_fair (1 samples, 0.03%)</title><rect x="6.8189%" y="1461" width="0.0326%" height="15" fill="rgb(228,3,54)" fg:x="209" fg:w="1"/><text x="7.0689%" y="1471.50"></text></g><g><title>kworker/u65:2-e (1 samples, 0.03%)</title><rect x="6.8515%" y="1589" width="0.0326%" height="15" fill="rgb(226,155,13)" fg:x="210" fg:w="1"/><text x="7.1015%" y="1599.50"></text></g><g><title>ret_from_fork_asm (1 samples, 0.03%)</title><rect x="6.8515%" y="1573" width="0.0326%" height="15" fill="rgb(241,28,37)" fg:x="210" fg:w="1"/><text x="7.1015%" y="1583.50"></text></g><g><title>ret_from_fork (1 samples, 0.03%)</title><rect x="6.8515%" y="1557" width="0.0326%" height="15" fill="rgb(233,93,10)" fg:x="210" fg:w="1"/><text x="7.1015%" y="1567.50"></text></g><g><title>kthread (1 samples, 0.03%)</title><rect x="6.8515%" y="1541" width="0.0326%" height="15" fill="rgb(225,113,19)" fg:x="210" fg:w="1"/><text x="7.1015%" y="1551.50"></text></g><g><title>worker_thread (1 samples, 0.03%)</title><rect x="6.8515%" y="1525" width="0.0326%" height="15" fill="rgb(241,2,18)" fg:x="210" fg:w="1"/><text x="7.1015%" y="1535.50"></text></g><g><title>process_one_work (1 samples, 0.03%)</title><rect x="6.8515%" y="1509" width="0.0326%" height="15" fill="rgb(228,207,21)" fg:x="210" fg:w="1"/><text x="7.1015%" y="1519.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="6.8515%" y="1493" width="0.0326%" height="15" fill="rgb(213,211,35)" fg:x="210" fg:w="1"/><text x="7.1015%" y="1503.50"></text></g><g><title>kworker/u66:1-e (1 samples, 0.03%)</title><rect x="6.8842%" y="1589" width="0.0326%" height="15" fill="rgb(209,83,10)" fg:x="211" fg:w="1"/><text x="7.1342%" y="1599.50"></text></g><g><title>ret_from_fork_asm (1 samples, 0.03%)</title><rect x="6.8842%" y="1573" width="0.0326%" height="15" fill="rgb(209,164,1)" fg:x="211" fg:w="1"/><text x="7.1342%" y="1583.50"></text></g><g><title>ret_from_fork (1 samples, 0.03%)</title><rect x="6.8842%" y="1557" width="0.0326%" height="15" fill="rgb(213,184,43)" fg:x="211" fg:w="1"/><text x="7.1342%" y="1567.50"></text></g><g><title>kthread (1 samples, 0.03%)</title><rect x="6.8842%" y="1541" width="0.0326%" height="15" fill="rgb(231,61,34)" fg:x="211" fg:w="1"/><text x="7.1342%" y="1551.50"></text></g><g><title>worker_thread (1 samples, 0.03%)</title><rect x="6.8842%" y="1525" width="0.0326%" height="15" fill="rgb(235,75,3)" fg:x="211" fg:w="1"/><text x="7.1342%" y="1535.50"></text></g><g><title>schedule (1 samples, 0.03%)</title><rect x="6.8842%" y="1509" width="0.0326%" height="15" fill="rgb(220,106,47)" fg:x="211" fg:w="1"/><text x="7.1342%" y="1519.50"></text></g><g><title>probe_sched_switch (1 samples, 0.03%)</title><rect x="6.8842%" y="1493" width="0.0326%" height="15" fill="rgb(210,196,33)" fg:x="211" fg:w="1"/><text x="7.1342%" y="1503.50"></text></g><g><title>___pthread_rwlock_unlock (1 samples, 0.03%)</title><rect x="6.9168%" y="1557" width="0.0326%" height="15" fill="rgb(229,154,42)" fg:x="212" fg:w="1"/><text x="7.1668%" y="1567.50"></text></g><g><title>__pthread_rwlock_rdunlock (1 samples, 0.03%)</title><rect x="6.9168%" y="1541" width="0.0326%" height="15" fill="rgb(228,114,26)" fg:x="212" fg:w="1"/><text x="7.1668%" y="1551.50"></text></g><g><title>_int_free (1 samples, 0.03%)</title><rect x="6.9494%" y="1557" width="0.0326%" height="15" fill="rgb(208,144,1)" fg:x="213" fg:w="1"/><text x="7.1994%" y="1567.50"></text></g><g><title>v8::internal::ConcurrentMarkingVisitor::ShouldVisit (4 samples, 0.13%)</title><rect x="6.9821%" y="1557" width="0.1305%" height="15" fill="rgb(239,112,37)" fg:x="214" fg:w="4"/><text x="7.2321%" y="1567.50"></text></g><g><title>v8::internal::HeapObject::SizeFromMap (1 samples, 0.03%)</title><rect x="7.1126%" y="1557" width="0.0326%" height="15" fill="rgb(210,96,50)" fg:x="218" fg:w="1"/><text x="7.3626%" y="1567.50"></text></g><g><title>v8::internal::JSObject::OptimizeAsPrototype (1 samples, 0.03%)</title><rect x="7.1452%" y="1557" width="0.0326%" height="15" fill="rgb(222,178,2)" fg:x="219" fg:w="1"/><text x="7.3952%" y="1567.50"></text></g><g><title>v8::internal::MainMarkingVisitor&lt;v8::internal::MarkingState&gt;::ShouldVisit (1 samples, 0.03%)</title><rect x="7.1778%" y="1557" width="0.0326%" height="15" fill="rgb(226,74,18)" fg:x="220" fg:w="1"/><text x="7.4278%" y="1567.50"></text></g><g><title>void v8::internal::BodyDescriptorBase::IteratePointers&lt;v8::internal::MainMarkingVisitor&lt;v8::internal::MarkingState&gt; &gt; (1 samples, 0.03%)</title><rect x="7.2104%" y="1557" width="0.0326%" height="15" fill="rgb(225,67,54)" fg:x="221" fg:w="1"/><text x="7.4604%" y="1567.50"></text></g><g><title>[[heap]] (11 samples, 0.36%)</title><rect x="6.9168%" y="1573" width="0.3589%" height="15" fill="rgb(251,92,32)" fg:x="212" fg:w="11"/><text x="7.1668%" y="1583.50"></text></g><g><title>void v8::internal::MarkingVisitorBase&lt;v8::internal::ConcurrentMarkingVisitor, v8::internal::ConcurrentMarkingState&gt;::ProcessStrongHeapObject&lt;v8::internal::FullHeapObjectSlot&gt; (1 samples, 0.03%)</title><rect x="7.2431%" y="1557" width="0.0326%" height="15" fill="rgb(228,149,22)" fg:x="222" fg:w="1"/><text x="7.4931%" y="1567.50"></text></g><g><title>memmove@plt (1 samples, 0.03%)</title><rect x="7.2757%" y="1557" width="0.0326%" height="15" fill="rgb(243,54,13)" fg:x="223" fg:w="1"/><text x="7.5257%" y="1567.50"></text></g><g><title>v8::internal::MarkingBarrier::Write (1 samples, 0.03%)</title><rect x="7.3083%" y="1557" width="0.0326%" height="15" fill="rgb(243,180,28)" fg:x="224" fg:w="1"/><text x="7.5583%" y="1567.50"></text></g><g><title>[[stack]] (3 samples, 0.10%)</title><rect x="7.2757%" y="1573" width="0.0979%" height="15" fill="rgb(208,167,24)" fg:x="223" fg:w="3"/><text x="7.5257%" y="1583.50"></text></g><g><title>v8::internal::interpreter::BytecodeArrayIterator::BytecodeArrayIterator (1 samples, 0.03%)</title><rect x="7.3409%" y="1557" width="0.0326%" height="15" fill="rgb(245,73,45)" fg:x="225" fg:w="1"/><text x="7.5909%" y="1567.50"></text></g><g><title>heap::base::SlotCallbackResult v8::internal::Scavenger::ScavengeObject&lt;v8::internal::FullHeapObjectSlot&gt; (1 samples, 0.03%)</title><rect x="7.3736%" y="1557" width="0.0326%" height="15" fill="rgb(237,203,48)" fg:x="226" fg:w="1"/><text x="7.6236%" y="1567.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="7.4062%" y="1557" width="0.0326%" height="15" fill="rgb(211,197,16)" fg:x="227" fg:w="1"/><text x="7.6562%" y="1567.50"></text></g><g><title>_int_malloc (1 samples, 0.03%)</title><rect x="7.4062%" y="1541" width="0.0326%" height="15" fill="rgb(243,99,51)" fg:x="227" fg:w="1"/><text x="7.6562%" y="1551.50"></text></g><g><title>std::__detail::_Map_base&lt;v8::internal::MemoryChunk*, std::pair&lt;v8::internal::MemoryChunk* const, v8::internal::MemoryChunkData&gt;, std::allocator&lt;std::pair&lt;v8::internal::MemoryChunk* const, v8::internal::MemoryChunkData&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;v8::internal::MemoryChunk*&gt;, v8::internal::BasicMemoryChunk::Hasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (1 samples, 0.03%)</title><rect x="7.4388%" y="1557" width="0.0326%" height="15" fill="rgb(215,123,29)" fg:x="228" fg:w="1"/><text x="7.6888%" y="1567.50"></text></g><g><title>v8::internal::(anonymous namespace)::SetInternalizedReference (1 samples, 0.03%)</title><rect x="7.4715%" y="1557" width="0.0326%" height="15" fill="rgb(239,186,37)" fg:x="229" fg:w="1"/><text x="7.7215%" y="1567.50"></text></g><g><title>v8::internal::Utf8DecoderBase&lt;v8::internal::Utf8Decoder&gt;::Utf8DecoderBase (1 samples, 0.03%)</title><rect x="7.5041%" y="1557" width="0.0326%" height="15" fill="rgb(252,136,39)" fg:x="230" fg:w="1"/><text x="7.7541%" y="1567.50"></text></g><g><title>[anon] (6 samples, 0.20%)</title><rect x="7.3736%" y="1573" width="0.1958%" height="15" fill="rgb(223,213,32)" fg:x="226" fg:w="6"/><text x="7.6236%" y="1583.50"></text></g><g><title>void v8::internal::MarkingVisitorBase&lt;v8::internal::ConcurrentMarkingVisitor, v8::internal::ConcurrentMarkingState&gt;::ProcessWeakHeapObject&lt;v8::internal::FullHeapObjectSlot&gt; (1 samples, 0.03%)</title><rect x="7.5367%" y="1557" width="0.0326%" height="15" fill="rgb(233,115,5)" fg:x="231" fg:w="1"/><text x="7.7867%" y="1567.50"></text></g><g><title>v8::internal::JsonParser&lt;unsigned char&gt;::ParseJson (1 samples, 0.03%)</title><rect x="7.5693%" y="1525" width="0.0326%" height="15" fill="rgb(207,226,44)" fg:x="232" fg:w="1"/><text x="7.8193%" y="1535.50"></text></g><g><title>v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::JsonParser&lt;unsigned char&gt;::ParseJsonValue&lt;false&gt; (1 samples, 0.03%)</title><rect x="7.5693%" y="1509" width="0.0326%" height="15" fill="rgb(208,126,0)" fg:x="232" fg:w="1"/><text x="7.8193%" y="1519.50"></text></g><g><title>v8::internal::JsonParser&lt;unsigned char&gt;::ScanJsonString (1 samples, 0.03%)</title><rect x="7.5693%" y="1493" width="0.0326%" height="15" fill="rgb(244,66,21)" fg:x="232" fg:w="1"/><text x="7.8193%" y="1503.50"></text></g><g><title>v8::internal::Builtin_JsonParse (2 samples, 0.07%)</title><rect x="7.5693%" y="1541" width="0.0653%" height="15" fill="rgb(222,97,12)" fg:x="232" fg:w="2"/><text x="7.8193%" y="1551.50"></text></g><g><title>v8::internal::JsonParser&lt;unsigned short&gt;::ParseJson (1 samples, 0.03%)</title><rect x="7.6020%" y="1525" width="0.0326%" height="15" fill="rgb(219,213,19)" fg:x="233" fg:w="1"/><text x="7.8520%" y="1535.50"></text></g><g><title>v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::JsonParser&lt;unsigned short&gt;::ParseJsonValue&lt;false&gt; (1 samples, 0.03%)</title><rect x="7.6020%" y="1509" width="0.0326%" height="15" fill="rgb(252,169,30)" fg:x="233" fg:w="1"/><text x="7.8520%" y="1519.50"></text></g><g><title>v8::internal::JsonParser&lt;unsigned short&gt;::ScanJsonString (1 samples, 0.03%)</title><rect x="7.6020%" y="1493" width="0.0326%" height="15" fill="rgb(206,32,51)" fg:x="233" fg:w="1"/><text x="7.8520%" y="1503.50"></text></g><g><title>v8::internal::Builtin_JsonStringify (1 samples, 0.03%)</title><rect x="7.6346%" y="1541" width="0.0326%" height="15" fill="rgb(250,172,42)" fg:x="234" fg:w="1"/><text x="7.8846%" y="1551.50"></text></g><g><title>v8::internal::JsonStringify (1 samples, 0.03%)</title><rect x="7.6346%" y="1525" width="0.0326%" height="15" fill="rgb(209,34,43)" fg:x="234" fg:w="1"/><text x="7.8846%" y="1535.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="7.6346%" y="1509" width="0.0326%" height="15" fill="rgb(223,11,35)" fg:x="234" fg:w="1"/><text x="7.8846%" y="1519.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="7.6346%" y="1493" width="0.0326%" height="15" fill="rgb(251,219,26)" fg:x="234" fg:w="1"/><text x="7.8846%" y="1503.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeString (1 samples, 0.03%)</title><rect x="7.6346%" y="1477" width="0.0326%" height="15" fill="rgb(231,119,3)" fg:x="234" fg:w="1"/><text x="7.8846%" y="1487.50"></text></g><g><title>v8::internal::IncrementalStringBuilder::Extend (1 samples, 0.03%)</title><rect x="7.6346%" y="1461" width="0.0326%" height="15" fill="rgb(216,97,11)" fg:x="234" fg:w="1"/><text x="7.8846%" y="1471.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewRawTwoByteString (1 samples, 0.03%)</title><rect x="7.6346%" y="1445" width="0.0326%" height="15" fill="rgb(223,59,9)" fg:x="234" fg:w="1"/><text x="7.8846%" y="1455.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="7.6346%" y="1429" width="0.0326%" height="15" fill="rgb(233,93,31)" fg:x="234" fg:w="1"/><text x="7.8846%" y="1439.50"></text></g><g><title>exc_page_fault (1 samples, 0.03%)</title><rect x="7.6346%" y="1413" width="0.0326%" height="15" fill="rgb(239,81,33)" fg:x="234" fg:w="1"/><text x="7.8846%" y="1423.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="7.6346%" y="1397" width="0.0326%" height="15" fill="rgb(213,120,34)" fg:x="234" fg:w="1"/><text x="7.8846%" y="1407.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="7.6346%" y="1381" width="0.0326%" height="15" fill="rgb(243,49,53)" fg:x="234" fg:w="1"/><text x="7.8846%" y="1391.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_BuiltinExit (4 samples, 0.13%)</title><rect x="7.5693%" y="1557" width="0.1305%" height="15" fill="rgb(247,216,33)" fg:x="232" fg:w="4"/><text x="7.8193%" y="1567.50"></text></g><g><title>v8::internal::Builtin_ObjectDefineProperties (1 samples, 0.03%)</title><rect x="7.6672%" y="1541" width="0.0326%" height="15" fill="rgb(226,26,14)" fg:x="235" fg:w="1"/><text x="7.9172%" y="1551.50"></text></g><g><title>v8::internal::JSReceiver::DefineProperties (1 samples, 0.03%)</title><rect x="7.6672%" y="1525" width="0.0326%" height="15" fill="rgb(215,49,53)" fg:x="235" fg:w="1"/><text x="7.9172%" y="1535.50"></text></g><g><title>v8::internal::JSReceiver::DefineOwnProperty (1 samples, 0.03%)</title><rect x="7.6672%" y="1509" width="0.0326%" height="15" fill="rgb(245,162,40)" fg:x="235" fg:w="1"/><text x="7.9172%" y="1519.50"></text></g><g><title>v8::internal::JSObject::FastPropertyAt (1 samples, 0.03%)</title><rect x="7.6672%" y="1493" width="0.0326%" height="15" fill="rgb(229,68,17)" fg:x="235" fg:w="1"/><text x="7.9172%" y="1503.50"></text></g><g><title>v8::internal::Runtime_AllocateInYoungGeneration (1 samples, 0.03%)</title><rect x="7.6998%" y="1541" width="0.0326%" height="15" fill="rgb(213,182,10)" fg:x="236" fg:w="1"/><text x="7.9498%" y="1551.50"></text></g><g><title>v8::internal::Factory::NewFillerObject (1 samples, 0.03%)</title><rect x="7.6998%" y="1525" width="0.0326%" height="15" fill="rgb(245,125,30)" fg:x="236" fg:w="1"/><text x="7.9498%" y="1535.50"></text></g><g><title>v8::internal::HeapAllocator::AllocateRawWithRetryOrFailSlowPath (1 samples, 0.03%)</title><rect x="7.6998%" y="1509" width="0.0326%" height="15" fill="rgb(232,202,2)" fg:x="236" fg:w="1"/><text x="7.9498%" y="1519.50"></text></g><g><title>v8::internal::HeapAllocator::AllocateRawWithLightRetrySlowPath (1 samples, 0.03%)</title><rect x="7.6998%" y="1493" width="0.0326%" height="15" fill="rgb(237,140,51)" fg:x="236" fg:w="1"/><text x="7.9498%" y="1503.50"></text></g><g><title>v8::internal::Heap::CollectGarbage (1 samples, 0.03%)</title><rect x="7.6998%" y="1477" width="0.0326%" height="15" fill="rgb(236,157,25)" fg:x="236" fg:w="1"/><text x="7.9498%" y="1487.50"></text></g><g><title>v8::internal::Heap::PerformGarbageCollection (1 samples, 0.03%)</title><rect x="7.6998%" y="1461" width="0.0326%" height="15" fill="rgb(219,209,0)" fg:x="236" fg:w="1"/><text x="7.9498%" y="1471.50"></text></g><g><title>v8::internal::Heap::Scavenge (1 samples, 0.03%)</title><rect x="7.6998%" y="1445" width="0.0326%" height="15" fill="rgb(240,116,54)" fg:x="236" fg:w="1"/><text x="7.9498%" y="1455.50"></text></g><g><title>v8::internal::ScavengerCollector::CollectGarbage (1 samples, 0.03%)</title><rect x="7.6998%" y="1429" width="0.0326%" height="15" fill="rgb(216,10,36)" fg:x="236" fg:w="1"/><text x="7.9498%" y="1439.50"></text></g><g><title>v8::internal::Heap::IterateRoots (1 samples, 0.03%)</title><rect x="7.6998%" y="1413" width="0.0326%" height="15" fill="rgb(222,72,44)" fg:x="236" fg:w="1"/><text x="7.9498%" y="1423.50"></text></g><g><title>v8::internal::(anonymous namespace)::IterateObjectCache (1 samples, 0.03%)</title><rect x="7.6998%" y="1397" width="0.0326%" height="15" fill="rgb(232,159,9)" fg:x="236" fg:w="1"/><text x="7.9498%" y="1407.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_NoBuiltinExit (2 samples, 0.07%)</title><rect x="7.6998%" y="1557" width="0.0653%" height="15" fill="rgb(210,39,32)" fg:x="236" fg:w="2"/><text x="7.9498%" y="1567.50"></text></g><g><title>v8::internal::Runtime_DefineClass (1 samples, 0.03%)</title><rect x="7.7325%" y="1541" width="0.0326%" height="15" fill="rgb(216,194,45)" fg:x="237" fg:w="1"/><text x="7.9825%" y="1551.50"></text></g><g><title>v8::internal::(anonymous namespace)::AddDescriptorsByTemplate (1 samples, 0.03%)</title><rect x="7.7325%" y="1525" width="0.0326%" height="15" fill="rgb(218,18,35)" fg:x="237" fg:w="1"/><text x="7.9825%" y="1535.50"></text></g><g><title>v8::internal::Map::GetVisitorId (1 samples, 0.03%)</title><rect x="7.7325%" y="1509" width="0.0326%" height="15" fill="rgb(207,83,51)" fg:x="237" fg:w="1"/><text x="7.9825%" y="1519.50"></text></g><g><title>Builtins_CallVarargs (1 samples, 0.03%)</title><rect x="7.7651%" y="1557" width="0.0326%" height="15" fill="rgb(225,63,43)" fg:x="238" fg:w="1"/><text x="8.0151%" y="1567.50"></text></g><g><title>Builtins_KeyedLoadIC_Megamorphic (1 samples, 0.03%)</title><rect x="7.7977%" y="1557" width="0.0326%" height="15" fill="rgb(207,57,36)" fg:x="239" fg:w="1"/><text x="8.0477%" y="1567.50"></text></g><g><title>Builtins_ObjectValues (1 samples, 0.03%)</title><rect x="7.8303%" y="1557" width="0.0326%" height="15" fill="rgb(216,99,33)" fg:x="240" fg:w="1"/><text x="8.0803%" y="1567.50"></text></g><g><title>v8::internal::Accessors::FunctionPrototypeGetter (1 samples, 0.03%)</title><rect x="7.8303%" y="1541" width="0.0326%" height="15" fill="rgb(225,42,16)" fg:x="240" fg:w="1"/><text x="8.0803%" y="1551.50"></text></g><g><title>[perf-1946.map] (10 samples, 0.33%)</title><rect x="7.5693%" y="1573" width="0.3263%" height="15" fill="rgb(220,201,45)" fg:x="232" fg:w="10"/><text x="7.8193%" y="1583.50"></text></g><g><title>v8::internal::AllowJavascriptExecution::IsAllowed (1 samples, 0.03%)</title><rect x="7.8630%" y="1557" width="0.0326%" height="15" fill="rgb(225,33,4)" fg:x="241" fg:w="1"/><text x="8.1130%" y="1567.50"></text></g><g><title>[perf-1987.map] (1 samples, 0.03%)</title><rect x="7.8956%" y="1573" width="0.0326%" height="15" fill="rgb(224,33,50)" fg:x="242" fg:w="1"/><text x="8.1456%" y="1583.50"></text></g><g><title>Builtins_CallApiCallback (1 samples, 0.03%)</title><rect x="7.8956%" y="1557" width="0.0326%" height="15" fill="rgb(246,198,51)" fg:x="242" fg:w="1"/><text x="8.1456%" y="1567.50"></text></g><g><title>node::fs::Open (1 samples, 0.03%)</title><rect x="7.8956%" y="1541" width="0.0326%" height="15" fill="rgb(205,22,4)" fg:x="242" fg:w="1"/><text x="8.1456%" y="1551.50"></text></g><g><title>uv_fs_open (1 samples, 0.03%)</title><rect x="7.8956%" y="1525" width="0.0326%" height="15" fill="rgb(206,3,8)" fg:x="242" fg:w="1"/><text x="8.1456%" y="1535.50"></text></g><g><title>uv__work_submit (1 samples, 0.03%)</title><rect x="7.8956%" y="1509" width="0.0326%" height="15" fill="rgb(251,23,15)" fg:x="242" fg:w="1"/><text x="8.1456%" y="1519.50"></text></g><g><title>post (1 samples, 0.03%)</title><rect x="7.8956%" y="1493" width="0.0326%" height="15" fill="rgb(252,88,28)" fg:x="242" fg:w="1"/><text x="8.1456%" y="1503.50"></text></g><g><title>uv_cond_signal (1 samples, 0.03%)</title><rect x="7.8956%" y="1477" width="0.0326%" height="15" fill="rgb(212,127,14)" fg:x="242" fg:w="1"/><text x="8.1456%" y="1487.50"></text></g><g><title>___pthread_cond_signal (1 samples, 0.03%)</title><rect x="7.8956%" y="1461" width="0.0326%" height="15" fill="rgb(247,145,37)" fg:x="242" fg:w="1"/><text x="8.1456%" y="1471.50"></text></g><g><title>futex_wake (1 samples, 0.03%)</title><rect x="7.8956%" y="1445" width="0.0326%" height="15" fill="rgb(209,117,53)" fg:x="242" fg:w="1"/><text x="8.1456%" y="1455.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="7.8956%" y="1429" width="0.0326%" height="15" fill="rgb(212,90,42)" fg:x="242" fg:w="1"/><text x="8.1456%" y="1439.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="7.8956%" y="1413" width="0.0326%" height="15" fill="rgb(218,164,37)" fg:x="242" fg:w="1"/><text x="8.1456%" y="1423.50"></text></g><g><title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="7.8956%" y="1397" width="0.0326%" height="15" fill="rgb(246,65,34)" fg:x="242" fg:w="1"/><text x="8.1456%" y="1407.50"></text></g><g><title>do_futex (1 samples, 0.03%)</title><rect x="7.8956%" y="1381" width="0.0326%" height="15" fill="rgb(231,100,33)" fg:x="242" fg:w="1"/><text x="8.1456%" y="1391.50"></text></g><g><title>futex_wake (1 samples, 0.03%)</title><rect x="7.8956%" y="1365" width="0.0326%" height="15" fill="rgb(228,126,14)" fg:x="242" fg:w="1"/><text x="8.1456%" y="1375.50"></text></g><g><title>[perf-2000.map] (1 samples, 0.03%)</title><rect x="7.9282%" y="1573" width="0.0326%" height="15" fill="rgb(215,173,21)" fg:x="243" fg:w="1"/><text x="8.1782%" y="1583.50"></text></g><g><title>Builtins_TypedArrayPrototypeLength (1 samples, 0.03%)</title><rect x="7.9282%" y="1557" width="0.0326%" height="15" fill="rgb(210,6,40)" fg:x="243" fg:w="1"/><text x="8.1782%" y="1567.50"></text></g><g><title>uv__process_init_stdio (1 samples, 0.03%)</title><rect x="8.0914%" y="1461" width="0.0326%" height="15" fill="rgb(212,48,18)" fg:x="248" fg:w="1"/><text x="8.3414%" y="1471.50"></text></g><g><title>uv_socketpair (1 samples, 0.03%)</title><rect x="8.0914%" y="1445" width="0.0326%" height="15" fill="rgb(230,214,11)" fg:x="248" fg:w="1"/><text x="8.3414%" y="1455.50"></text></g><g><title>__GI_socketpair (1 samples, 0.03%)</title><rect x="8.0914%" y="1429" width="0.0326%" height="15" fill="rgb(254,105,39)" fg:x="248" fg:w="1"/><text x="8.3414%" y="1439.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="8.0914%" y="1413" width="0.0326%" height="15" fill="rgb(245,158,5)" fg:x="248" fg:w="1"/><text x="8.3414%" y="1423.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="8.0914%" y="1397" width="0.0326%" height="15" fill="rgb(249,208,11)" fg:x="248" fg:w="1"/><text x="8.3414%" y="1407.50"></text></g><g><title>__x64_sys_socketpair (1 samples, 0.03%)</title><rect x="8.0914%" y="1381" width="0.0326%" height="15" fill="rgb(210,39,28)" fg:x="248" fg:w="1"/><text x="8.3414%" y="1391.50"></text></g><g><title>__sys_socketpair (1 samples, 0.03%)</title><rect x="8.0914%" y="1365" width="0.0326%" height="15" fill="rgb(211,56,53)" fg:x="248" fg:w="1"/><text x="8.3414%" y="1375.50"></text></g><g><title>sock_alloc_file (1 samples, 0.03%)</title><rect x="8.0914%" y="1349" width="0.0326%" height="15" fill="rgb(226,201,30)" fg:x="248" fg:w="1"/><text x="8.3414%" y="1359.50"></text></g><g><title>alloc_file_pseudo (1 samples, 0.03%)</title><rect x="8.0914%" y="1333" width="0.0326%" height="15" fill="rgb(239,101,34)" fg:x="248" fg:w="1"/><text x="8.3414%" y="1343.50"></text></g><g><title>alloc_file (1 samples, 0.03%)</title><rect x="8.0914%" y="1317" width="0.0326%" height="15" fill="rgb(226,209,5)" fg:x="248" fg:w="1"/><text x="8.3414%" y="1327.50"></text></g><g><title>alloc_empty_file (1 samples, 0.03%)</title><rect x="8.0914%" y="1301" width="0.0326%" height="15" fill="rgb(250,105,47)" fg:x="248" fg:w="1"/><text x="8.3414%" y="1311.50"></text></g><g><title>__mutex_init (1 samples, 0.03%)</title><rect x="8.0914%" y="1285" width="0.0326%" height="15" fill="rgb(230,72,3)" fg:x="248" fg:w="1"/><text x="8.3414%" y="1295.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_BuiltinExit (3 samples, 0.10%)</title><rect x="8.0914%" y="1557" width="0.0979%" height="15" fill="rgb(232,218,39)" fg:x="248" fg:w="3"/><text x="8.3414%" y="1567.50"></text></g><g><title>v8::internal::Builtin_HandleApiCall (3 samples, 0.10%)</title><rect x="8.0914%" y="1541" width="0.0979%" height="15" fill="rgb(248,166,6)" fg:x="248" fg:w="3"/><text x="8.3414%" y="1551.50"></text></g><g><title>v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt; (3 samples, 0.10%)</title><rect x="8.0914%" y="1525" width="0.0979%" height="15" fill="rgb(247,89,20)" fg:x="248" fg:w="3"/><text x="8.3414%" y="1535.50"></text></g><g><title>v8::internal::FunctionCallbackArguments::Call (3 samples, 0.10%)</title><rect x="8.0914%" y="1509" width="0.0979%" height="15" fill="rgb(248,130,54)" fg:x="248" fg:w="3"/><text x="8.3414%" y="1519.50"></text></g><g><title>node::(anonymous namespace)::ProcessWrap::Spawn (3 samples, 0.10%)</title><rect x="8.0914%" y="1493" width="0.0979%" height="15" fill="rgb(234,196,4)" fg:x="248" fg:w="3"/><text x="8.3414%" y="1503.50"></text></g><g><title>uv_spawn (3 samples, 0.10%)</title><rect x="8.0914%" y="1477" width="0.0979%" height="15" fill="rgb(250,143,31)" fg:x="248" fg:w="3"/><text x="8.3414%" y="1487.50"></text></g><g><title>uv__spawn_and_init_child (2 samples, 0.07%)</title><rect x="8.1240%" y="1461" width="0.0653%" height="15" fill="rgb(211,110,34)" fg:x="249" fg:w="2"/><text x="8.3740%" y="1471.50"></text></g><g><title>uv__spawn_and_init_child_fork (2 samples, 0.07%)</title><rect x="8.1240%" y="1445" width="0.0653%" height="15" fill="rgb(215,124,48)" fg:x="249" fg:w="2"/><text x="8.3740%" y="1455.50"></text></g><g><title>__libc_fork (2 samples, 0.07%)</title><rect x="8.1240%" y="1429" width="0.0653%" height="15" fill="rgb(216,46,13)" fg:x="249" fg:w="2"/><text x="8.3740%" y="1439.50"></text></g><g><title>__GI__Fork (2 samples, 0.07%)</title><rect x="8.1240%" y="1413" width="0.0653%" height="15" fill="rgb(205,184,25)" fg:x="249" fg:w="2"/><text x="8.3740%" y="1423.50"></text></g><g><title>arch_fork (2 samples, 0.07%)</title><rect x="8.1240%" y="1397" width="0.0653%" height="15" fill="rgb(228,1,10)" fg:x="249" fg:w="2"/><text x="8.3740%" y="1407.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.07%)</title><rect x="8.1240%" y="1381" width="0.0653%" height="15" fill="rgb(213,116,27)" fg:x="249" fg:w="2"/><text x="8.3740%" y="1391.50"></text></g><g><title>do_syscall_64 (2 samples, 0.07%)</title><rect x="8.1240%" y="1365" width="0.0653%" height="15" fill="rgb(241,95,50)" fg:x="249" fg:w="2"/><text x="8.3740%" y="1375.50"></text></g><g><title>__x64_sys_clone (2 samples, 0.07%)</title><rect x="8.1240%" y="1349" width="0.0653%" height="15" fill="rgb(238,48,32)" fg:x="249" fg:w="2"/><text x="8.3740%" y="1359.50"></text></g><g><title>__do_sys_clone (2 samples, 0.07%)</title><rect x="8.1240%" y="1333" width="0.0653%" height="15" fill="rgb(235,113,49)" fg:x="249" fg:w="2"/><text x="8.3740%" y="1343.50"></text></g><g><title>kernel_clone (2 samples, 0.07%)</title><rect x="8.1240%" y="1317" width="0.0653%" height="15" fill="rgb(205,127,43)" fg:x="249" fg:w="2"/><text x="8.3740%" y="1327.50"></text></g><g><title>copy_process (2 samples, 0.07%)</title><rect x="8.1240%" y="1301" width="0.0653%" height="15" fill="rgb(250,162,2)" fg:x="249" fg:w="2"/><text x="8.3740%" y="1311.50"></text></g><g><title>dup_mmap (2 samples, 0.07%)</title><rect x="8.1240%" y="1285" width="0.0653%" height="15" fill="rgb(220,13,41)" fg:x="249" fg:w="2"/><text x="8.3740%" y="1295.50"></text></g><g><title>_compound_head (2 samples, 0.07%)</title><rect x="8.1240%" y="1269" width="0.0653%" height="15" fill="rgb(249,221,25)" fg:x="249" fg:w="2"/><text x="8.3740%" y="1279.50"></text></g><g><title>v8::internal::Runtime_LoadPropertyWithInterceptor (1 samples, 0.03%)</title><rect x="8.1892%" y="1541" width="0.0326%" height="15" fill="rgb(215,208,19)" fg:x="251" fg:w="1"/><text x="8.4392%" y="1551.50"></text></g><g><title>void v8::internal::Heap::CopyRange&lt;v8::internal::FullObjectSlot&gt; (1 samples, 0.03%)</title><rect x="8.1892%" y="1525" width="0.0326%" height="15" fill="rgb(236,175,2)" fg:x="251" fg:w="1"/><text x="8.4392%" y="1535.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_NoBuiltinExit (2 samples, 0.07%)</title><rect x="8.1892%" y="1557" width="0.0653%" height="15" fill="rgb(241,52,2)" fg:x="251" fg:w="2"/><text x="8.4392%" y="1567.50"></text></g><g><title>v8::internal::Runtime_PushBlockContext (1 samples, 0.03%)</title><rect x="8.2219%" y="1541" width="0.0326%" height="15" fill="rgb(248,140,14)" fg:x="252" fg:w="1"/><text x="8.4719%" y="1551.50"></text></g><g><title>Builtins_KeyedLoadIC (1 samples, 0.03%)</title><rect x="8.2219%" y="1525" width="0.0326%" height="15" fill="rgb(253,22,42)" fg:x="252" fg:w="1"/><text x="8.4719%" y="1535.50"></text></g><g><title>_IO_new_fclose (1 samples, 0.03%)</title><rect x="8.2545%" y="1493" width="0.0326%" height="15" fill="rgb(234,61,47)" fg:x="253" fg:w="1"/><text x="8.5045%" y="1503.50"></text></g><g><title>_IO_new_file_close_it (1 samples, 0.03%)</title><rect x="8.2545%" y="1477" width="0.0326%" height="15" fill="rgb(208,226,15)" fg:x="253" fg:w="1"/><text x="8.5045%" y="1487.50"></text></g><g><title>__GI___close_nocancel (1 samples, 0.03%)</title><rect x="8.2545%" y="1461" width="0.0326%" height="15" fill="rgb(217,221,4)" fg:x="253" fg:w="1"/><text x="8.5045%" y="1471.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="8.2545%" y="1445" width="0.0326%" height="15" fill="rgb(212,174,34)" fg:x="253" fg:w="1"/><text x="8.5045%" y="1455.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="8.2545%" y="1429" width="0.0326%" height="15" fill="rgb(253,83,4)" fg:x="253" fg:w="1"/><text x="8.5045%" y="1439.50"></text></g><g><title>__x64_sys_close (1 samples, 0.03%)</title><rect x="8.2545%" y="1413" width="0.0326%" height="15" fill="rgb(250,195,49)" fg:x="253" fg:w="1"/><text x="8.5045%" y="1423.50"></text></g><g><title>srso_safe_ret (1 samples, 0.03%)</title><rect x="8.2545%" y="1397" width="0.0326%" height="15" fill="rgb(241,192,25)" fg:x="253" fg:w="1"/><text x="8.5045%" y="1407.50"></text></g><g><title>Builtins_CallApiCallback (2 samples, 0.07%)</title><rect x="8.2545%" y="1557" width="0.0653%" height="15" fill="rgb(208,124,10)" fg:x="253" fg:w="2"/><text x="8.5045%" y="1567.50"></text></g><g><title>v8impl::(anonymous namespace)::FunctionCallbackWrapper::Invoke (2 samples, 0.07%)</title><rect x="8.2545%" y="1541" width="0.0653%" height="15" fill="rgb(222,33,0)" fg:x="253" fg:w="2"/><text x="8.5045%" y="1551.50"></text></g><g><title>Napi::details::CallbackData&lt;Napi::Value (*)(Napi::CallbackInfo const&amp;), Napi::Value&gt;::Wrapper (2 samples, 0.07%)</title><rect x="8.2545%" y="1525" width="0.0653%" height="15" fill="rgb(234,209,28)" fg:x="253" fg:w="2"/><text x="8.5045%" y="1535.50"></text></g><g><title>PtyGetProc (2 samples, 0.07%)</title><rect x="8.2545%" y="1509" width="0.0653%" height="15" fill="rgb(224,11,23)" fg:x="253" fg:w="2"/><text x="8.5045%" y="1519.50"></text></g><g><title>_IO_new_fopen (1 samples, 0.03%)</title><rect x="8.2871%" y="1493" width="0.0326%" height="15" fill="rgb(232,99,1)" fg:x="254" fg:w="1"/><text x="8.5371%" y="1503.50"></text></g><g><title>__fopen_internal (1 samples, 0.03%)</title><rect x="8.2871%" y="1477" width="0.0326%" height="15" fill="rgb(237,95,45)" fg:x="254" fg:w="1"/><text x="8.5371%" y="1487.50"></text></g><g><title>_IO_new_file_fopen (1 samples, 0.03%)</title><rect x="8.2871%" y="1461" width="0.0326%" height="15" fill="rgb(208,109,11)" fg:x="254" fg:w="1"/><text x="8.5371%" y="1471.50"></text></g><g><title>__GI__IO_file_open (1 samples, 0.03%)</title><rect x="8.2871%" y="1445" width="0.0326%" height="15" fill="rgb(216,190,48)" fg:x="254" fg:w="1"/><text x="8.5371%" y="1455.50"></text></g><g><title>__libc_open64 (1 samples, 0.03%)</title><rect x="8.2871%" y="1429" width="0.0326%" height="15" fill="rgb(251,171,36)" fg:x="254" fg:w="1"/><text x="8.5371%" y="1439.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="8.2871%" y="1413" width="0.0326%" height="15" fill="rgb(230,62,22)" fg:x="254" fg:w="1"/><text x="8.5371%" y="1423.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="8.2871%" y="1397" width="0.0326%" height="15" fill="rgb(225,114,35)" fg:x="254" fg:w="1"/><text x="8.5371%" y="1407.50"></text></g><g><title>__x64_sys_openat (1 samples, 0.03%)</title><rect x="8.2871%" y="1381" width="0.0326%" height="15" fill="rgb(215,118,42)" fg:x="254" fg:w="1"/><text x="8.5371%" y="1391.50"></text></g><g><title>do_sys_openat2 (1 samples, 0.03%)</title><rect x="8.2871%" y="1365" width="0.0326%" height="15" fill="rgb(243,119,21)" fg:x="254" fg:w="1"/><text x="8.5371%" y="1375.50"></text></g><g><title>do_filp_open (1 samples, 0.03%)</title><rect x="8.2871%" y="1349" width="0.0326%" height="15" fill="rgb(252,177,53)" fg:x="254" fg:w="1"/><text x="8.5371%" y="1359.50"></text></g><g><title>path_openat (1 samples, 0.03%)</title><rect x="8.2871%" y="1333" width="0.0326%" height="15" fill="rgb(237,209,29)" fg:x="254" fg:w="1"/><text x="8.5371%" y="1343.50"></text></g><g><title>link_path_walk.part.0.constprop.0 (1 samples, 0.03%)</title><rect x="8.2871%" y="1317" width="0.0326%" height="15" fill="rgb(212,65,23)" fg:x="254" fg:w="1"/><text x="8.5371%" y="1327.50"></text></g><g><title>inode_permission (1 samples, 0.03%)</title><rect x="8.2871%" y="1301" width="0.0326%" height="15" fill="rgb(230,222,46)" fg:x="254" fg:w="1"/><text x="8.5371%" y="1311.50"></text></g><g><title>Builtins_ForInFilter (1 samples, 0.03%)</title><rect x="8.3197%" y="1557" width="0.0326%" height="15" fill="rgb(215,135,32)" fg:x="255" fg:w="1"/><text x="8.5697%" y="1567.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_NoBuiltinExit (1 samples, 0.03%)</title><rect x="8.3197%" y="1541" width="0.0326%" height="15" fill="rgb(246,101,22)" fg:x="255" fg:w="1"/><text x="8.5697%" y="1551.50"></text></g><g><title>v8::internal::Runtime_ForInHasProperty (1 samples, 0.03%)</title><rect x="8.3197%" y="1525" width="0.0326%" height="15" fill="rgb(206,107,13)" fg:x="255" fg:w="1"/><text x="8.5697%" y="1535.50"></text></g><g><title>v8::internal::(anonymous namespace)::HasEnumerableProperty (1 samples, 0.03%)</title><rect x="8.3197%" y="1509" width="0.0326%" height="15" fill="rgb(250,100,44)" fg:x="255" fg:w="1"/><text x="8.5697%" y="1519.50"></text></g><g><title>v8::internal::StringTable::LookupString (1 samples, 0.03%)</title><rect x="8.3197%" y="1493" width="0.0326%" height="15" fill="rgb(231,147,38)" fg:x="255" fg:w="1"/><text x="8.5697%" y="1503.50"></text></g><g><title>v8::internal::(anonymous namespace)::SetInternalizedReference (1 samples, 0.03%)</title><rect x="8.3197%" y="1477" width="0.0326%" height="15" fill="rgb(229,8,40)" fg:x="255" fg:w="1"/><text x="8.5697%" y="1487.50"></text></g><g><title>v8::internal::Handle&lt;v8::internal::String&gt; v8::internal::StringTable::LookupKey&lt;v8::internal::InternalizedStringKey, v8::internal::Isolate&gt; (1 samples, 0.03%)</title><rect x="8.3197%" y="1461" width="0.0326%" height="15" fill="rgb(221,135,30)" fg:x="255" fg:w="1"/><text x="8.5697%" y="1471.50"></text></g><g><title>Builtins_KeyedLoadIC_Megamorphic (1 samples, 0.03%)</title><rect x="8.3524%" y="1557" width="0.0326%" height="15" fill="rgb(249,193,18)" fg:x="256" fg:w="1"/><text x="8.6024%" y="1567.50"></text></g><g><title>free@plt (1 samples, 0.03%)</title><rect x="8.3524%" y="1541" width="0.0326%" height="15" fill="rgb(209,133,39)" fg:x="256" fg:w="1"/><text x="8.6024%" y="1551.50"></text></g><g><title>[perf-2034.map] (14 samples, 0.46%)</title><rect x="7.9608%" y="1573" width="0.4568%" height="15" fill="rgb(232,100,14)" fg:x="244" fg:w="14"/><text x="8.2108%" y="1583.50"></text></g><g><title>v8::internal::Factory::AllocateRaw (1 samples, 0.03%)</title><rect x="8.3850%" y="1557" width="0.0326%" height="15" fill="rgb(224,185,1)" fg:x="257" fg:w="1"/><text x="8.6350%" y="1567.50"></text></g><g><title>Builtins_ArrayForEach (1 samples, 0.03%)</title><rect x="8.5481%" y="1557" width="0.0326%" height="15" fill="rgb(223,139,8)" fg:x="262" fg:w="1"/><text x="8.7981%" y="1567.50"></text></g><g><title>void v8::internal::String::MakeThin&lt;v8::internal::Isolate&gt; (1 samples, 0.03%)</title><rect x="8.5481%" y="1541" width="0.0326%" height="15" fill="rgb(232,213,38)" fg:x="262" fg:w="1"/><text x="8.7981%" y="1551.50"></text></g><g><title>_compound_head (3 samples, 0.10%)</title><rect x="8.5808%" y="1269" width="0.0979%" height="15" fill="rgb(207,94,22)" fg:x="263" fg:w="3"/><text x="8.8308%" y="1279.50"></text></g><g><title>copy_page_range (11 samples, 0.36%)</title><rect x="8.6786%" y="1269" width="0.3589%" height="15" fill="rgb(219,183,54)" fg:x="266" fg:w="11"/><text x="8.9286%" y="1279.50"></text></g><g><title>set_ptes.constprop.0 (1 samples, 0.03%)</title><rect x="9.0049%" y="1253" width="0.0326%" height="15" fill="rgb(216,185,54)" fg:x="276" fg:w="1"/><text x="9.2549%" y="1263.50"></text></g><g><title>mas_find (1 samples, 0.03%)</title><rect x="9.0375%" y="1269" width="0.0326%" height="15" fill="rgb(254,217,39)" fg:x="277" fg:w="1"/><text x="9.2875%" y="1279.50"></text></g><g><title>mas_next_slot (1 samples, 0.03%)</title><rect x="9.0375%" y="1253" width="0.0326%" height="15" fill="rgb(240,178,23)" fg:x="277" fg:w="1"/><text x="9.2875%" y="1263.50"></text></g><g><title>srso_safe_ret (1 samples, 0.03%)</title><rect x="9.0701%" y="1269" width="0.0326%" height="15" fill="rgb(218,11,47)" fg:x="278" fg:w="1"/><text x="9.3201%" y="1279.50"></text></g><g><title>__GI__Fork (17 samples, 0.55%)</title><rect x="8.5808%" y="1413" width="0.5546%" height="15" fill="rgb(218,51,51)" fg:x="263" fg:w="17"/><text x="8.8308%" y="1423.50"></text></g><g><title>arch_fork (17 samples, 0.55%)</title><rect x="8.5808%" y="1397" width="0.5546%" height="15" fill="rgb(238,126,27)" fg:x="263" fg:w="17"/><text x="8.8308%" y="1407.50"></text></g><g><title>entry_SYSCALL_64 (17 samples, 0.55%)</title><rect x="8.5808%" y="1381" width="0.5546%" height="15" fill="rgb(249,202,22)" fg:x="263" fg:w="17"/><text x="8.8308%" y="1391.50"></text></g><g><title>do_syscall_64 (17 samples, 0.55%)</title><rect x="8.5808%" y="1365" width="0.5546%" height="15" fill="rgb(254,195,49)" fg:x="263" fg:w="17"/><text x="8.8308%" y="1375.50"></text></g><g><title>__x64_sys_clone (17 samples, 0.55%)</title><rect x="8.5808%" y="1349" width="0.5546%" height="15" fill="rgb(208,123,14)" fg:x="263" fg:w="17"/><text x="8.8308%" y="1359.50"></text></g><g><title>__do_sys_clone (17 samples, 0.55%)</title><rect x="8.5808%" y="1333" width="0.5546%" height="15" fill="rgb(224,200,8)" fg:x="263" fg:w="17"/><text x="8.8308%" y="1343.50"></text></g><g><title>kernel_clone (17 samples, 0.55%)</title><rect x="8.5808%" y="1317" width="0.5546%" height="15" fill="rgb(217,61,36)" fg:x="263" fg:w="17"/><text x="8.8308%" y="1327.50"></text></g><g><title>copy_process (17 samples, 0.55%)</title><rect x="8.5808%" y="1301" width="0.5546%" height="15" fill="rgb(206,35,45)" fg:x="263" fg:w="17"/><text x="8.8308%" y="1311.50"></text></g><g><title>dup_mmap (17 samples, 0.55%)</title><rect x="8.5808%" y="1285" width="0.5546%" height="15" fill="rgb(217,65,33)" fg:x="263" fg:w="17"/><text x="8.8308%" y="1295.50"></text></g><g><title>up_write (1 samples, 0.03%)</title><rect x="9.1028%" y="1269" width="0.0326%" height="15" fill="rgb(222,158,48)" fg:x="279" fg:w="1"/><text x="9.3528%" y="1279.50"></text></g><g><title>__libc_unwind_link_after_fork (1 samples, 0.03%)</title><rect x="9.1354%" y="1413" width="0.0326%" height="15" fill="rgb(254,2,54)" fg:x="280" fg:w="1"/><text x="9.3854%" y="1423.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="9.1354%" y="1397" width="0.0326%" height="15" fill="rgb(250,143,38)" fg:x="280" fg:w="1"/><text x="9.3854%" y="1407.50"></text></g><g><title>exc_page_fault (1 samples, 0.03%)</title><rect x="9.1354%" y="1381" width="0.0326%" height="15" fill="rgb(248,25,0)" fg:x="280" fg:w="1"/><text x="9.3854%" y="1391.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="9.1354%" y="1365" width="0.0326%" height="15" fill="rgb(206,152,27)" fg:x="280" fg:w="1"/><text x="9.3854%" y="1375.50"></text></g><g><title>handle_mm_fault (1 samples, 0.03%)</title><rect x="9.1354%" y="1349" width="0.0326%" height="15" fill="rgb(240,77,30)" fg:x="280" fg:w="1"/><text x="9.3854%" y="1359.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="9.1354%" y="1333" width="0.0326%" height="15" fill="rgb(231,5,3)" fg:x="280" fg:w="1"/><text x="9.3854%" y="1343.50"></text></g><g><title>do_wp_page (1 samples, 0.03%)</title><rect x="9.1354%" y="1317" width="0.0326%" height="15" fill="rgb(207,226,32)" fg:x="280" fg:w="1"/><text x="9.3854%" y="1327.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.03%)</title><rect x="9.1354%" y="1301" width="0.0326%" height="15" fill="rgb(222,207,47)" fg:x="280" fg:w="1"/><text x="9.3854%" y="1311.50"></text></g><g><title>__folio_alloc (1 samples, 0.03%)</title><rect x="9.1354%" y="1285" width="0.0326%" height="15" fill="rgb(229,115,45)" fg:x="280" fg:w="1"/><text x="9.3854%" y="1295.50"></text></g><g><title>__alloc_pages (1 samples, 0.03%)</title><rect x="9.1354%" y="1269" width="0.0326%" height="15" fill="rgb(224,191,6)" fg:x="280" fg:w="1"/><text x="9.3854%" y="1279.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.03%)</title><rect x="9.1354%" y="1253" width="0.0326%" height="15" fill="rgb(230,227,24)" fg:x="280" fg:w="1"/><text x="9.3854%" y="1263.50"></text></g><g><title>clear_page_rep (1 samples, 0.03%)</title><rect x="9.1354%" y="1237" width="0.0326%" height="15" fill="rgb(228,80,19)" fg:x="280" fg:w="1"/><text x="9.3854%" y="1247.50"></text></g><g><title>__malloc_fork_unlock_parent (1 samples, 0.03%)</title><rect x="9.1680%" y="1413" width="0.0326%" height="15" fill="rgb(247,229,0)" fg:x="281" fg:w="1"/><text x="9.4180%" y="1423.50"></text></g><g><title>__nss_database_fork_subprocess (1 samples, 0.03%)</title><rect x="9.2007%" y="1413" width="0.0326%" height="15" fill="rgb(237,194,15)" fg:x="282" fg:w="1"/><text x="9.4507%" y="1423.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="9.2007%" y="1397" width="0.0326%" height="15" fill="rgb(219,203,20)" fg:x="282" fg:w="1"/><text x="9.4507%" y="1407.50"></text></g><g><title>exc_page_fault (1 samples, 0.03%)</title><rect x="9.2007%" y="1381" width="0.0326%" height="15" fill="rgb(234,128,8)" fg:x="282" fg:w="1"/><text x="9.4507%" y="1391.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="9.2007%" y="1365" width="0.0326%" height="15" fill="rgb(248,202,8)" fg:x="282" fg:w="1"/><text x="9.4507%" y="1375.50"></text></g><g><title>handle_mm_fault (1 samples, 0.03%)</title><rect x="9.2007%" y="1349" width="0.0326%" height="15" fill="rgb(206,104,37)" fg:x="282" fg:w="1"/><text x="9.4507%" y="1359.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="9.2007%" y="1333" width="0.0326%" height="15" fill="rgb(223,8,27)" fg:x="282" fg:w="1"/><text x="9.4507%" y="1343.50"></text></g><g><title>do_wp_page (1 samples, 0.03%)</title><rect x="9.2007%" y="1317" width="0.0326%" height="15" fill="rgb(216,217,28)" fg:x="282" fg:w="1"/><text x="9.4507%" y="1327.50"></text></g><g><title>memcpy_orig (1 samples, 0.03%)</title><rect x="9.2007%" y="1301" width="0.0326%" height="15" fill="rgb(249,199,1)" fg:x="282" fg:w="1"/><text x="9.4507%" y="1311.50"></text></g><g><title>__run_fork_handlers (1 samples, 0.03%)</title><rect x="9.2333%" y="1413" width="0.0326%" height="15" fill="rgb(240,85,17)" fg:x="283" fg:w="1"/><text x="9.4833%" y="1423.50"></text></g><g><title>uv__signal_global_reinit (1 samples, 0.03%)</title><rect x="9.2333%" y="1397" width="0.0326%" height="15" fill="rgb(206,108,45)" fg:x="283" fg:w="1"/><text x="9.4833%" y="1407.50"></text></g><g><title>uv__make_pipe (1 samples, 0.03%)</title><rect x="9.2333%" y="1381" width="0.0326%" height="15" fill="rgb(245,210,41)" fg:x="283" fg:w="1"/><text x="9.4833%" y="1391.50"></text></g><g><title>uv_pipe (1 samples, 0.03%)</title><rect x="9.2333%" y="1365" width="0.0326%" height="15" fill="rgb(206,13,37)" fg:x="283" fg:w="1"/><text x="9.4833%" y="1375.50"></text></g><g><title>__GI_pipe2 (1 samples, 0.03%)</title><rect x="9.2333%" y="1349" width="0.0326%" height="15" fill="rgb(250,61,18)" fg:x="283" fg:w="1"/><text x="9.4833%" y="1359.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="9.2333%" y="1333" width="0.0326%" height="15" fill="rgb(235,172,48)" fg:x="283" fg:w="1"/><text x="9.4833%" y="1343.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="9.2333%" y="1317" width="0.0326%" height="15" fill="rgb(249,201,17)" fg:x="283" fg:w="1"/><text x="9.4833%" y="1327.50"></text></g><g><title>__x64_sys_pipe2 (1 samples, 0.03%)</title><rect x="9.2333%" y="1301" width="0.0326%" height="15" fill="rgb(219,208,6)" fg:x="283" fg:w="1"/><text x="9.4833%" y="1311.50"></text></g><g><title>do_pipe2 (1 samples, 0.03%)</title><rect x="9.2333%" y="1285" width="0.0326%" height="15" fill="rgb(248,31,23)" fg:x="283" fg:w="1"/><text x="9.4833%" y="1295.50"></text></g><g><title>create_pipe_files (1 samples, 0.03%)</title><rect x="9.2333%" y="1269" width="0.0326%" height="15" fill="rgb(245,15,42)" fg:x="283" fg:w="1"/><text x="9.4833%" y="1279.50"></text></g><g><title>new_inode_pseudo (1 samples, 0.03%)</title><rect x="9.2333%" y="1253" width="0.0326%" height="15" fill="rgb(222,217,39)" fg:x="283" fg:w="1"/><text x="9.4833%" y="1263.50"></text></g><g><title>alloc_inode (1 samples, 0.03%)</title><rect x="9.2333%" y="1237" width="0.0326%" height="15" fill="rgb(210,219,27)" fg:x="283" fg:w="1"/><text x="9.4833%" y="1247.50"></text></g><g><title>inode_init_always (1 samples, 0.03%)</title><rect x="9.2333%" y="1221" width="0.0326%" height="15" fill="rgb(252,166,36)" fg:x="283" fg:w="1"/><text x="9.4833%" y="1231.50"></text></g><g><title>security_inode_alloc (1 samples, 0.03%)</title><rect x="9.2333%" y="1205" width="0.0326%" height="15" fill="rgb(245,132,34)" fg:x="283" fg:w="1"/><text x="9.4833%" y="1215.50"></text></g><g><title>memcg_slab_post_alloc_hook (1 samples, 0.03%)</title><rect x="9.2333%" y="1189" width="0.0326%" height="15" fill="rgb(236,54,3)" fg:x="283" fg:w="1"/><text x="9.4833%" y="1199.50"></text></g><g><title>fresetlockfiles (1 samples, 0.03%)</title><rect x="9.2659%" y="1413" width="0.0326%" height="15" fill="rgb(241,173,43)" fg:x="284" fg:w="1"/><text x="9.5159%" y="1423.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="9.2659%" y="1397" width="0.0326%" height="15" fill="rgb(215,190,9)" fg:x="284" fg:w="1"/><text x="9.5159%" y="1407.50"></text></g><g><title>exc_page_fault (1 samples, 0.03%)</title><rect x="9.2659%" y="1381" width="0.0326%" height="15" fill="rgb(242,101,16)" fg:x="284" fg:w="1"/><text x="9.5159%" y="1391.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="9.2659%" y="1365" width="0.0326%" height="15" fill="rgb(223,190,21)" fg:x="284" fg:w="1"/><text x="9.5159%" y="1375.50"></text></g><g><title>handle_mm_fault (1 samples, 0.03%)</title><rect x="9.2659%" y="1349" width="0.0326%" height="15" fill="rgb(215,228,25)" fg:x="284" fg:w="1"/><text x="9.5159%" y="1359.50"></text></g><g><title>__libc_fork (23 samples, 0.75%)</title><rect x="8.5808%" y="1429" width="0.7504%" height="15" fill="rgb(225,36,22)" fg:x="263" fg:w="23"/><text x="8.8308%" y="1439.50"></text></g><g><title>reclaim_stacks (1 samples, 0.03%)</title><rect x="9.2985%" y="1413" width="0.0326%" height="15" fill="rgb(251,106,46)" fg:x="285" fg:w="1"/><text x="9.5485%" y="1423.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="9.2985%" y="1397" width="0.0326%" height="15" fill="rgb(208,90,1)" fg:x="285" fg:w="1"/><text x="9.5485%" y="1407.50"></text></g><g><title>exc_page_fault (1 samples, 0.03%)</title><rect x="9.2985%" y="1381" width="0.0326%" height="15" fill="rgb(243,10,4)" fg:x="285" fg:w="1"/><text x="9.5485%" y="1391.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="9.2985%" y="1365" width="0.0326%" height="15" fill="rgb(212,137,27)" fg:x="285" fg:w="1"/><text x="9.5485%" y="1375.50"></text></g><g><title>handle_mm_fault (1 samples, 0.03%)</title><rect x="9.2985%" y="1349" width="0.0326%" height="15" fill="rgb(231,220,49)" fg:x="285" fg:w="1"/><text x="9.5485%" y="1359.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="9.2985%" y="1333" width="0.0326%" height="15" fill="rgb(237,96,20)" fg:x="285" fg:w="1"/><text x="9.5485%" y="1343.50"></text></g><g><title>pte_offset_map_nolock (1 samples, 0.03%)</title><rect x="9.2985%" y="1317" width="0.0326%" height="15" fill="rgb(239,229,30)" fg:x="285" fg:w="1"/><text x="9.5485%" y="1327.50"></text></g><g><title>__pte_offset_map (1 samples, 0.03%)</title><rect x="9.2985%" y="1301" width="0.0326%" height="15" fill="rgb(219,65,33)" fg:x="285" fg:w="1"/><text x="9.5485%" y="1311.50"></text></g><g><title>v8::internal::Builtin_HandleApiCall (24 samples, 0.78%)</title><rect x="8.5808%" y="1541" width="0.7830%" height="15" fill="rgb(243,134,7)" fg:x="263" fg:w="24"/><text x="8.8308%" y="1551.50"></text></g><g><title>v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt; (24 samples, 0.78%)</title><rect x="8.5808%" y="1525" width="0.7830%" height="15" fill="rgb(216,177,54)" fg:x="263" fg:w="24"/><text x="8.8308%" y="1535.50"></text></g><g><title>v8::internal::FunctionCallbackArguments::Call (24 samples, 0.78%)</title><rect x="8.5808%" y="1509" width="0.7830%" height="15" fill="rgb(211,160,20)" fg:x="263" fg:w="24"/><text x="8.8308%" y="1519.50"></text></g><g><title>node::(anonymous namespace)::ProcessWrap::Spawn (24 samples, 0.78%)</title><rect x="8.5808%" y="1493" width="0.7830%" height="15" fill="rgb(239,85,39)" fg:x="263" fg:w="24"/><text x="8.8308%" y="1503.50"></text></g><g><title>uv_spawn (24 samples, 0.78%)</title><rect x="8.5808%" y="1477" width="0.7830%" height="15" fill="rgb(232,125,22)" fg:x="263" fg:w="24"/><text x="8.8308%" y="1487.50"></text></g><g><title>uv__spawn_and_init_child (24 samples, 0.78%)</title><rect x="8.5808%" y="1461" width="0.7830%" height="15" fill="rgb(244,57,34)" fg:x="263" fg:w="24"/><text x="8.8308%" y="1471.50"></text></g><g><title>uv__spawn_and_init_child_fork (24 samples, 0.78%)</title><rect x="8.5808%" y="1445" width="0.7830%" height="15" fill="rgb(214,203,32)" fg:x="263" fg:w="24"/><text x="8.8308%" y="1455.50"></text></g><g><title>uv__process_child_init (1 samples, 0.03%)</title><rect x="9.3312%" y="1429" width="0.0326%" height="15" fill="rgb(207,58,43)" fg:x="286" fg:w="1"/><text x="9.5812%" y="1439.50"></text></g><g><title>__execvpe (1 samples, 0.03%)</title><rect x="9.3312%" y="1413" width="0.0326%" height="15" fill="rgb(215,193,15)" fg:x="286" fg:w="1"/><text x="9.5812%" y="1423.50"></text></g><g><title>__execvpe_common (1 samples, 0.03%)</title><rect x="9.3312%" y="1397" width="0.0326%" height="15" fill="rgb(232,15,44)" fg:x="286" fg:w="1"/><text x="9.5812%" y="1407.50"></text></g><g><title>__GI_execve (1 samples, 0.03%)</title><rect x="9.3312%" y="1381" width="0.0326%" height="15" fill="rgb(212,3,48)" fg:x="286" fg:w="1"/><text x="9.5812%" y="1391.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="9.3312%" y="1365" width="0.0326%" height="15" fill="rgb(218,128,7)" fg:x="286" fg:w="1"/><text x="9.5812%" y="1375.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="9.3312%" y="1349" width="0.0326%" height="15" fill="rgb(226,216,39)" fg:x="286" fg:w="1"/><text x="9.5812%" y="1359.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.03%)</title><rect x="9.3312%" y="1333" width="0.0326%" height="15" fill="rgb(243,47,51)" fg:x="286" fg:w="1"/><text x="9.5812%" y="1343.50"></text></g><g><title>do_execveat_common.isra.0 (1 samples, 0.03%)</title><rect x="9.3312%" y="1317" width="0.0326%" height="15" fill="rgb(241,183,40)" fg:x="286" fg:w="1"/><text x="9.5812%" y="1327.50"></text></g><g><title>alloc_bprm (1 samples, 0.03%)</title><rect x="9.3312%" y="1301" width="0.0326%" height="15" fill="rgb(231,217,32)" fg:x="286" fg:w="1"/><text x="9.5812%" y="1311.50"></text></g><g><title>mm_alloc (1 samples, 0.03%)</title><rect x="9.3312%" y="1285" width="0.0326%" height="15" fill="rgb(229,61,38)" fg:x="286" fg:w="1"/><text x="9.5812%" y="1295.50"></text></g><g><title>mm_init (1 samples, 0.03%)</title><rect x="9.3312%" y="1269" width="0.0326%" height="15" fill="rgb(225,210,5)" fg:x="286" fg:w="1"/><text x="9.5812%" y="1279.50"></text></g><g><title>v8::internal::JsonParser&lt;unsigned char&gt;::ParseJson (1 samples, 0.03%)</title><rect x="9.3638%" y="1525" width="0.0326%" height="15" fill="rgb(231,79,45)" fg:x="287" fg:w="1"/><text x="9.6138%" y="1535.50"></text></g><g><title>v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::JsonParser&lt;unsigned char&gt;::ParseJsonValue&lt;false&gt; (1 samples, 0.03%)</title><rect x="9.3638%" y="1509" width="0.0326%" height="15" fill="rgb(224,100,7)" fg:x="287" fg:w="1"/><text x="9.6138%" y="1519.50"></text></g><g><title>v8::internal::LookupIterator::State v8::internal::LookupIterator::LookupInRegularHolder&lt;false&gt; (1 samples, 0.03%)</title><rect x="9.3638%" y="1493" width="0.0326%" height="15" fill="rgb(241,198,18)" fg:x="287" fg:w="1"/><text x="9.6138%" y="1503.50"></text></g><g><title>v8::internal::Factory::NewJSArray (1 samples, 0.03%)</title><rect x="9.3964%" y="1477" width="0.0326%" height="15" fill="rgb(252,97,53)" fg:x="288" fg:w="1"/><text x="9.6464%" y="1487.50"></text></g><g><title>v8::internal::Factory::NewJSArrayStorage (1 samples, 0.03%)</title><rect x="9.3964%" y="1461" width="0.0326%" height="15" fill="rgb(220,88,7)" fg:x="288" fg:w="1"/><text x="9.6464%" y="1471.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewFixedArrayWithFiller (1 samples, 0.03%)</title><rect x="9.3964%" y="1445" width="0.0326%" height="15" fill="rgb(213,176,14)" fg:x="288" fg:w="1"/><text x="9.6464%" y="1455.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::AllocateRawArray (1 samples, 0.03%)</title><rect x="9.3964%" y="1429" width="0.0326%" height="15" fill="rgb(246,73,7)" fg:x="288" fg:w="1"/><text x="9.6464%" y="1439.50"></text></g><g><title>v8::internal::Factory::AllocateRaw (1 samples, 0.03%)</title><rect x="9.3964%" y="1413" width="0.0326%" height="15" fill="rgb(245,64,36)" fg:x="288" fg:w="1"/><text x="9.6464%" y="1423.50"></text></g><g><title>v8::internal::HeapAllocator::AllocateRawWithRetryOrFailSlowPath (1 samples, 0.03%)</title><rect x="9.3964%" y="1397" width="0.0326%" height="15" fill="rgb(245,80,10)" fg:x="288" fg:w="1"/><text x="9.6464%" y="1407.50"></text></g><g><title>v8::internal::HeapAllocator::AllocateRawWithLightRetrySlowPath (1 samples, 0.03%)</title><rect x="9.3964%" y="1381" width="0.0326%" height="15" fill="rgb(232,107,50)" fg:x="288" fg:w="1"/><text x="9.6464%" y="1391.50"></text></g><g><title>v8::internal::Heap::CollectGarbage (1 samples, 0.03%)</title><rect x="9.3964%" y="1365" width="0.0326%" height="15" fill="rgb(253,3,0)" fg:x="288" fg:w="1"/><text x="9.6464%" y="1375.50"></text></g><g><title>v8::internal::Heap::PerformGarbageCollection (1 samples, 0.03%)</title><rect x="9.3964%" y="1349" width="0.0326%" height="15" fill="rgb(212,99,53)" fg:x="288" fg:w="1"/><text x="9.6464%" y="1359.50"></text></g><g><title>v8::internal::Heap::Scavenge (1 samples, 0.03%)</title><rect x="9.3964%" y="1333" width="0.0326%" height="15" fill="rgb(249,111,54)" fg:x="288" fg:w="1"/><text x="9.6464%" y="1343.50"></text></g><g><title>v8::internal::ScavengerCollector::CollectGarbage (1 samples, 0.03%)</title><rect x="9.3964%" y="1317" width="0.0326%" height="15" fill="rgb(249,55,30)" fg:x="288" fg:w="1"/><text x="9.6464%" y="1327.50"></text></g><g><title>v8::internal::JsonParser&lt;unsigned short&gt;::BuildJsonArray (3 samples, 0.10%)</title><rect x="9.3964%" y="1493" width="0.0979%" height="15" fill="rgb(237,47,42)" fg:x="288" fg:w="3"/><text x="9.6464%" y="1503.50"></text></g><g><title>v8::internal::MarkingBarrier::Write (2 samples, 0.07%)</title><rect x="9.4290%" y="1477" width="0.0653%" height="15" fill="rgb(211,20,18)" fg:x="289" fg:w="2"/><text x="9.6790%" y="1487.50"></text></g><g><title>heap::base::Worklist&lt;v8::internal::HeapObject, (unsigned short)64&gt;::Local::PublishPushSegment (1 samples, 0.03%)</title><rect x="9.4617%" y="1461" width="0.0326%" height="15" fill="rgb(231,203,46)" fg:x="290" fg:w="1"/><text x="9.7117%" y="1471.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.03%)</title><rect x="9.4617%" y="1445" width="0.0326%" height="15" fill="rgb(237,142,3)" fg:x="290" fg:w="1"/><text x="9.7117%" y="1455.50"></text></g><g><title>__GI___lll_lock_wait_private (1 samples, 0.03%)</title><rect x="9.4617%" y="1429" width="0.0326%" height="15" fill="rgb(241,107,1)" fg:x="290" fg:w="1"/><text x="9.7117%" y="1439.50"></text></g><g><title>futex_wait (1 samples, 0.03%)</title><rect x="9.4617%" y="1413" width="0.0326%" height="15" fill="rgb(229,83,13)" fg:x="290" fg:w="1"/><text x="9.7117%" y="1423.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="9.4617%" y="1397" width="0.0326%" height="15" fill="rgb(241,91,40)" fg:x="290" fg:w="1"/><text x="9.7117%" y="1407.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="9.4617%" y="1381" width="0.0326%" height="15" fill="rgb(225,3,45)" fg:x="290" fg:w="1"/><text x="9.7117%" y="1391.50"></text></g><g><title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="9.4617%" y="1365" width="0.0326%" height="15" fill="rgb(244,223,14)" fg:x="290" fg:w="1"/><text x="9.7117%" y="1375.50"></text></g><g><title>do_futex (1 samples, 0.03%)</title><rect x="9.4617%" y="1349" width="0.0326%" height="15" fill="rgb(224,124,37)" fg:x="290" fg:w="1"/><text x="9.7117%" y="1359.50"></text></g><g><title>futex_wait (1 samples, 0.03%)</title><rect x="9.4617%" y="1333" width="0.0326%" height="15" fill="rgb(251,171,30)" fg:x="290" fg:w="1"/><text x="9.7117%" y="1343.50"></text></g><g><title>futex_wait_setup (1 samples, 0.03%)</title><rect x="9.4617%" y="1317" width="0.0326%" height="15" fill="rgb(236,46,54)" fg:x="290" fg:w="1"/><text x="9.7117%" y="1327.50"></text></g><g><title>futex_q_unlock (1 samples, 0.03%)</title><rect x="9.4617%" y="1301" width="0.0326%" height="15" fill="rgb(245,213,5)" fg:x="290" fg:w="1"/><text x="9.7117%" y="1311.50"></text></g><g><title>v8::internal::Factory::AllocateRaw (2 samples, 0.07%)</title><rect x="9.4943%" y="1445" width="0.0653%" height="15" fill="rgb(230,144,27)" fg:x="291" fg:w="2"/><text x="9.7443%" y="1455.50"></text></g><g><title>v8::internal::AllocationCounter::InvokeAllocationObservers (2 samples, 0.07%)</title><rect x="9.4943%" y="1429" width="0.0653%" height="15" fill="rgb(220,86,6)" fg:x="291" fg:w="2"/><text x="9.7443%" y="1439.50"></text></g><g><title>v8::internal::IncrementalMarking::Observer::Step (2 samples, 0.07%)</title><rect x="9.4943%" y="1413" width="0.0653%" height="15" fill="rgb(240,20,13)" fg:x="291" fg:w="2"/><text x="9.7443%" y="1423.50"></text></g><g><title>v8::internal::IncrementalMarking::Step (2 samples, 0.07%)</title><rect x="9.4943%" y="1397" width="0.0653%" height="15" fill="rgb(217,89,34)" fg:x="291" fg:w="2"/><text x="9.7443%" y="1407.50"></text></g><g><title>v8::internal::MarkCompactCollector::ProcessMarkingWorklist (2 samples, 0.07%)</title><rect x="9.4943%" y="1381" width="0.0653%" height="15" fill="rgb(229,13,5)" fg:x="291" fg:w="2"/><text x="9.7443%" y="1391.50"></text></g><g><title>void v8::internal::BodyDescriptorBase::IteratePointers&lt;v8::internal::MainMarkingVisitor&lt;v8::internal::MarkingState&gt; &gt; (1 samples, 0.03%)</title><rect x="9.5269%" y="1365" width="0.0326%" height="15" fill="rgb(244,67,35)" fg:x="292" fg:w="1"/><text x="9.7769%" y="1375.50"></text></g><g><title>void v8::internal::MarkingVisitorBase&lt;v8::internal::MainMarkingVisitor&lt;v8::internal::MarkingState&gt;, v8::internal::MarkingState&gt;::ProcessStrongHeapObject&lt;v8::internal::FullHeapObjectSlot&gt; (1 samples, 0.03%)</title><rect x="9.5269%" y="1349" width="0.0326%" height="15" fill="rgb(221,40,2)" fg:x="292" fg:w="1"/><text x="9.7769%" y="1359.50"></text></g><g><title>v8::internal::JsonParser&lt;unsigned short&gt;::MakeString (3 samples, 0.10%)</title><rect x="9.4943%" y="1493" width="0.0979%" height="15" fill="rgb(237,157,21)" fg:x="291" fg:w="3"/><text x="9.7443%" y="1503.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewRawOneByteString (3 samples, 0.10%)</title><rect x="9.4943%" y="1477" width="0.0979%" height="15" fill="rgb(222,94,11)" fg:x="291" fg:w="3"/><text x="9.7443%" y="1487.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::AllocateRawWithImmortalMap (3 samples, 0.10%)</title><rect x="9.4943%" y="1461" width="0.0979%" height="15" fill="rgb(249,113,6)" fg:x="291" fg:w="3"/><text x="9.7443%" y="1471.50"></text></g><g><title>v8::internal::JsonParser&lt;unsigned short&gt;::ScanJsonString (1 samples, 0.03%)</title><rect x="9.5595%" y="1445" width="0.0326%" height="15" fill="rgb(238,137,36)" fg:x="293" fg:w="1"/><text x="9.8095%" y="1455.50"></text></g><g><title>v8::internal::JsonParser&lt;unsigned short&gt;::ParseJson (8 samples, 0.26%)</title><rect x="9.3964%" y="1525" width="0.2610%" height="15" fill="rgb(210,102,26)" fg:x="288" fg:w="8"/><text x="9.6464%" y="1535.50"></text></g><g><title>v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::JsonParser&lt;unsigned short&gt;::ParseJsonValue&lt;false&gt; (8 samples, 0.26%)</title><rect x="9.3964%" y="1509" width="0.2610%" height="15" fill="rgb(218,30,30)" fg:x="288" fg:w="8"/><text x="9.6464%" y="1519.50"></text></g><g><title>v8::internal::JsonParser&lt;unsigned short&gt;::ScanJsonString (2 samples, 0.07%)</title><rect x="9.5922%" y="1493" width="0.0653%" height="15" fill="rgb(214,67,26)" fg:x="294" fg:w="2"/><text x="9.8422%" y="1503.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewRawTwoByteString (1 samples, 0.03%)</title><rect x="9.6574%" y="1509" width="0.0326%" height="15" fill="rgb(251,9,53)" fg:x="296" fg:w="1"/><text x="9.9074%" y="1519.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::AllocateRawWithImmortalMap (1 samples, 0.03%)</title><rect x="9.6574%" y="1493" width="0.0326%" height="15" fill="rgb(228,204,25)" fg:x="296" fg:w="1"/><text x="9.9074%" y="1503.50"></text></g><g><title>v8::internal::Factory::AllocateRaw (1 samples, 0.03%)</title><rect x="9.6574%" y="1477" width="0.0326%" height="15" fill="rgb(207,153,8)" fg:x="296" fg:w="1"/><text x="9.9074%" y="1487.50"></text></g><g><title>v8::internal::HeapAllocator::AllocateRawWithRetryOrFailSlowPath (1 samples, 0.03%)</title><rect x="9.6574%" y="1461" width="0.0326%" height="15" fill="rgb(242,9,16)" fg:x="296" fg:w="1"/><text x="9.9074%" y="1471.50"></text></g><g><title>v8::internal::HeapAllocator::AllocateRawWithLightRetrySlowPath (1 samples, 0.03%)</title><rect x="9.6574%" y="1445" width="0.0326%" height="15" fill="rgb(217,211,10)" fg:x="296" fg:w="1"/><text x="9.9074%" y="1455.50"></text></g><g><title>v8::internal::Heap::CollectGarbage (1 samples, 0.03%)</title><rect x="9.6574%" y="1429" width="0.0326%" height="15" fill="rgb(219,228,52)" fg:x="296" fg:w="1"/><text x="9.9074%" y="1439.50"></text></g><g><title>v8::internal::GCTracer::UpdateStatistics (1 samples, 0.03%)</title><rect x="9.6574%" y="1413" width="0.0326%" height="15" fill="rgb(231,92,29)" fg:x="296" fg:w="1"/><text x="9.9074%" y="1423.50"></text></g><g><title>v8::internal::GCTracer::Print (1 samples, 0.03%)</title><rect x="9.6574%" y="1397" width="0.0326%" height="15" fill="rgb(232,8,23)" fg:x="296" fg:w="1"/><text x="9.9074%" y="1407.50"></text></g><g><title>v8::internal::GCTracer::Output (1 samples, 0.03%)</title><rect x="9.6574%" y="1381" width="0.0326%" height="15" fill="rgb(216,211,34)" fg:x="296" fg:w="1"/><text x="9.9074%" y="1391.50"></text></g><g><title>v8::base::OS::VSNPrintF (1 samples, 0.03%)</title><rect x="9.6574%" y="1365" width="0.0326%" height="15" fill="rgb(236,151,0)" fg:x="296" fg:w="1"/><text x="9.9074%" y="1375.50"></text></g><g><title>__vsnprintf_internal (1 samples, 0.03%)</title><rect x="9.6574%" y="1349" width="0.0326%" height="15" fill="rgb(209,168,3)" fg:x="296" fg:w="1"/><text x="9.9074%" y="1359.50"></text></g><g><title>__vfprintf_internal (1 samples, 0.03%)</title><rect x="9.6574%" y="1333" width="0.0326%" height="15" fill="rgb(208,129,28)" fg:x="296" fg:w="1"/><text x="9.9074%" y="1343.50"></text></g><g><title>__find_specmb (1 samples, 0.03%)</title><rect x="9.6574%" y="1317" width="0.0326%" height="15" fill="rgb(229,78,22)" fg:x="296" fg:w="1"/><text x="9.9074%" y="1327.50"></text></g><g><title>v8::internal::Isolate::GetCurrentLongTaskStats (1 samples, 0.03%)</title><rect x="9.6574%" y="1301" width="0.0326%" height="15" fill="rgb(228,187,13)" fg:x="296" fg:w="1"/><text x="9.9074%" y="1311.50"></text></g><g><title>v8::internal::Builtin_JsonParse (11 samples, 0.36%)</title><rect x="9.3638%" y="1541" width="0.3589%" height="15" fill="rgb(240,119,24)" fg:x="287" fg:w="11"/><text x="9.6138%" y="1551.50"></text></g><g><title>v8::internal::String::SlowFlatten (2 samples, 0.07%)</title><rect x="9.6574%" y="1525" width="0.0653%" height="15" fill="rgb(209,194,42)" fg:x="296" fg:w="2"/><text x="9.9074%" y="1535.50"></text></g><g><title>void v8::internal::String::WriteToFlat&lt;unsigned short&gt; (1 samples, 0.03%)</title><rect x="9.6900%" y="1509" width="0.0326%" height="15" fill="rgb(247,200,46)" fg:x="297" fg:w="1"/><text x="9.9400%" y="1519.50"></text></g><g><title>void v8::internal::String::WriteToFlat&lt;unsigned short&gt; (1 samples, 0.03%)</title><rect x="9.6900%" y="1493" width="0.0326%" height="15" fill="rgb(218,76,16)" fg:x="297" fg:w="1"/><text x="9.9400%" y="1503.50"></text></g><g><title>void v8::internal::CopyChars&lt;unsigned char, unsigned short&gt; (1 samples, 0.03%)</title><rect x="9.6900%" y="1477" width="0.0326%" height="15" fill="rgb(225,21,48)" fg:x="297" fg:w="1"/><text x="9.9400%" y="1487.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="9.6900%" y="1461" width="0.0326%" height="15" fill="rgb(239,223,50)" fg:x="297" fg:w="1"/><text x="9.9400%" y="1471.50"></text></g><g><title>exc_page_fault (1 samples, 0.03%)</title><rect x="9.6900%" y="1445" width="0.0326%" height="15" fill="rgb(244,45,21)" fg:x="297" fg:w="1"/><text x="9.9400%" y="1455.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="9.6900%" y="1429" width="0.0326%" height="15" fill="rgb(232,33,43)" fg:x="297" fg:w="1"/><text x="9.9400%" y="1439.50"></text></g><g><title>handle_mm_fault (1 samples, 0.03%)</title><rect x="9.6900%" y="1413" width="0.0326%" height="15" fill="rgb(209,8,3)" fg:x="297" fg:w="1"/><text x="9.9400%" y="1423.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="9.6900%" y="1397" width="0.0326%" height="15" fill="rgb(214,25,53)" fg:x="297" fg:w="1"/><text x="9.9400%" y="1407.50"></text></g><g><title>pte_offset_map_nolock (1 samples, 0.03%)</title><rect x="9.6900%" y="1381" width="0.0326%" height="15" fill="rgb(254,186,54)" fg:x="297" fg:w="1"/><text x="9.9400%" y="1391.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="9.6900%" y="1365" width="0.0326%" height="15" fill="rgb(208,174,49)" fg:x="297" fg:w="1"/><text x="9.9400%" y="1375.50"></text></g><g><title>v8::internal::Builtin_JsonStringify (1 samples, 0.03%)</title><rect x="9.7227%" y="1541" width="0.0326%" height="15" fill="rgb(233,191,51)" fg:x="298" fg:w="1"/><text x="9.9727%" y="1551.50"></text></g><g><title>v8::internal::JsonStringify (1 samples, 0.03%)</title><rect x="9.7227%" y="1525" width="0.0326%" height="15" fill="rgb(222,134,10)" fg:x="298" fg:w="1"/><text x="9.9727%" y="1535.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="9.7227%" y="1509" width="0.0326%" height="15" fill="rgb(230,226,20)" fg:x="298" fg:w="1"/><text x="9.9727%" y="1519.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeArrayLikeSlow (1 samples, 0.03%)</title><rect x="9.7227%" y="1493" width="0.0326%" height="15" fill="rgb(251,111,25)" fg:x="298" fg:w="1"/><text x="9.9727%" y="1503.50"></text></g><g><title>Builtins_Call_ReceiverIsNullOrUndefined_Baseline_Compact (1 samples, 0.03%)</title><rect x="9.7227%" y="1477" width="0.0326%" height="15" fill="rgb(224,40,46)" fg:x="298" fg:w="1"/><text x="9.9727%" y="1487.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_BuiltinExit (37 samples, 1.21%)</title><rect x="8.5808%" y="1557" width="1.2072%" height="15" fill="rgb(236,108,47)" fg:x="263" fg:w="37"/><text x="8.8308%" y="1567.50"></text></g><g><title>v8::internal::Builtin_ObjectDefineProperty (1 samples, 0.03%)</title><rect x="9.7553%" y="1541" width="0.0326%" height="15" fill="rgb(234,93,0)" fg:x="299" fg:w="1"/><text x="10.0053%" y="1551.50"></text></g><g><title>v8::internal::JSReceiver::DefineProperty (1 samples, 0.03%)</title><rect x="9.7553%" y="1525" width="0.0326%" height="15" fill="rgb(224,213,32)" fg:x="299" fg:w="1"/><text x="10.0053%" y="1535.50"></text></g><g><title>v8::internal::PropertyDescriptor::ToPropertyDescriptor (1 samples, 0.03%)</title><rect x="9.7553%" y="1509" width="0.0326%" height="15" fill="rgb(251,11,48)" fg:x="299" fg:w="1"/><text x="10.0053%" y="1519.50"></text></g><g><title>v8::internal::(anonymous namespace)::GetPropertyIfPresent (1 samples, 0.03%)</title><rect x="9.7553%" y="1493" width="0.0326%" height="15" fill="rgb(236,173,5)" fg:x="299" fg:w="1"/><text x="10.0053%" y="1503.50"></text></g><g><title>void v8::internal::LookupIterator::Start&lt;false&gt; (1 samples, 0.03%)</title><rect x="9.7553%" y="1477" width="0.0326%" height="15" fill="rgb(230,95,12)" fg:x="299" fg:w="1"/><text x="10.0053%" y="1487.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_NoBuiltinExit (1 samples, 0.03%)</title><rect x="9.7879%" y="1557" width="0.0326%" height="15" fill="rgb(232,209,1)" fg:x="300" fg:w="1"/><text x="10.0379%" y="1567.50"></text></g><g><title>v8::internal::Runtime_AddDictionaryProperty (1 samples, 0.03%)</title><rect x="9.7879%" y="1541" width="0.0326%" height="15" fill="rgb(232,6,1)" fg:x="300" fg:w="1"/><text x="10.0379%" y="1551.50"></text></g><g><title>v8::internal::BaseNameDictionary&lt;v8::internal::NameDictionary, v8::internal::NameDictionaryShape&gt;::Add (1 samples, 0.03%)</title><rect x="9.7879%" y="1525" width="0.0326%" height="15" fill="rgb(210,224,50)" fg:x="300" fg:w="1"/><text x="10.0379%" y="1535.50"></text></g><g><title>v8::internal::Handle&lt;v8::internal::NameDictionary&gt; v8::internal::Dictionary&lt;v8::internal::NameDictionary, v8::internal::NameDictionaryShape&gt;::Add&lt;v8::internal::Isolate&gt; (1 samples, 0.03%)</title><rect x="9.7879%" y="1509" width="0.0326%" height="15" fill="rgb(228,127,35)" fg:x="300" fg:w="1"/><text x="10.0379%" y="1519.50"></text></g><g><title>v8::internal::Handle&lt;v8::internal::NameDictionary&gt; v8::internal::HashTable&lt;v8::internal::NameDictionary, v8::internal::NameDictionaryShape&gt;::EnsureCapacity&lt;v8::internal::Isolate&gt; (1 samples, 0.03%)</title><rect x="9.7879%" y="1493" width="0.0326%" height="15" fill="rgb(245,102,45)" fg:x="300" fg:w="1"/><text x="10.0379%" y="1503.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewFixedArrayWithFiller (1 samples, 0.03%)</title><rect x="9.7879%" y="1477" width="0.0326%" height="15" fill="rgb(214,1,49)" fg:x="300" fg:w="1"/><text x="10.0379%" y="1487.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewRawOneByteString (1 samples, 0.03%)</title><rect x="9.8206%" y="1461" width="0.0326%" height="15" fill="rgb(226,163,40)" fg:x="301" fg:w="1"/><text x="10.0706%" y="1471.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::AllocateRawWithImmortalMap (1 samples, 0.03%)</title><rect x="9.8206%" y="1445" width="0.0326%" height="15" fill="rgb(239,212,28)" fg:x="301" fg:w="1"/><text x="10.0706%" y="1455.50"></text></g><g><title>v8::internal::Factory::AllocateRaw (1 samples, 0.03%)</title><rect x="9.8206%" y="1429" width="0.0326%" height="15" fill="rgb(220,20,13)" fg:x="301" fg:w="1"/><text x="10.0706%" y="1439.50"></text></g><g><title>v8::internal::HeapAllocator::AllocateRawWithRetryOrFailSlowPath (1 samples, 0.03%)</title><rect x="9.8206%" y="1413" width="0.0326%" height="15" fill="rgb(210,164,35)" fg:x="301" fg:w="1"/><text x="10.0706%" y="1423.50"></text></g><g><title>v8::internal::HeapAllocator::AllocateRawWithLightRetrySlowPath (1 samples, 0.03%)</title><rect x="9.8206%" y="1397" width="0.0326%" height="15" fill="rgb(248,109,41)" fg:x="301" fg:w="1"/><text x="10.0706%" y="1407.50"></text></g><g><title>v8::internal::Heap::CollectGarbage (1 samples, 0.03%)</title><rect x="9.8206%" y="1381" width="0.0326%" height="15" fill="rgb(238,23,50)" fg:x="301" fg:w="1"/><text x="10.0706%" y="1391.50"></text></g><g><title>v8::internal::Heap::PerformGarbageCollection (1 samples, 0.03%)</title><rect x="9.8206%" y="1365" width="0.0326%" height="15" fill="rgb(211,48,49)" fg:x="301" fg:w="1"/><text x="10.0706%" y="1375.50"></text></g><g><title>v8::internal::Heap::Scavenge (1 samples, 0.03%)</title><rect x="9.8206%" y="1349" width="0.0326%" height="15" fill="rgb(223,36,21)" fg:x="301" fg:w="1"/><text x="10.0706%" y="1359.50"></text></g><g><title>v8::internal::ScavengerCollector::CollectGarbage (1 samples, 0.03%)</title><rect x="9.8206%" y="1333" width="0.0326%" height="15" fill="rgb(207,123,46)" fg:x="301" fg:w="1"/><text x="10.0706%" y="1343.50"></text></g><g><title>v8::platform::DefaultJobHandle::Join (1 samples, 0.03%)</title><rect x="9.8206%" y="1317" width="0.0326%" height="15" fill="rgb(240,218,32)" fg:x="301" fg:w="1"/><text x="10.0706%" y="1327.50"></text></g><g><title>v8::platform::DefaultJobState::Join (1 samples, 0.03%)</title><rect x="9.8206%" y="1301" width="0.0326%" height="15" fill="rgb(252,5,43)" fg:x="301" fg:w="1"/><text x="10.0706%" y="1311.50"></text></g><g><title>v8::internal::ScavengerCollector::JobTask::ProcessItems (1 samples, 0.03%)</title><rect x="9.8206%" y="1285" width="0.0326%" height="15" fill="rgb(252,84,19)" fg:x="301" fg:w="1"/><text x="10.0706%" y="1295.50"></text></g><g><title>v8::internal::Scavenger::Process (1 samples, 0.03%)</title><rect x="9.8206%" y="1269" width="0.0326%" height="15" fill="rgb(243,152,39)" fg:x="301" fg:w="1"/><text x="10.0706%" y="1279.50"></text></g><g><title>v8::internal::Scavenger::IterateAndScavengePromotedObject (1 samples, 0.03%)</title><rect x="9.8206%" y="1253" width="0.0326%" height="15" fill="rgb(234,160,15)" fg:x="301" fg:w="1"/><text x="10.0706%" y="1263.50"></text></g><g><title>void v8::internal::BodyDescriptorBase::IteratePointers&lt;v8::internal::IterateAndScavengePromotedObjectsVisitor&gt; (1 samples, 0.03%)</title><rect x="9.8206%" y="1237" width="0.0326%" height="15" fill="rgb(237,34,20)" fg:x="301" fg:w="1"/><text x="10.0706%" y="1247.50"></text></g><g><title>heap::base::SlotCallbackResult v8::internal::Scavenger::ScavengeObject&lt;v8::internal::FullHeapObjectSlot&gt; (1 samples, 0.03%)</title><rect x="9.8206%" y="1221" width="0.0326%" height="15" fill="rgb(229,97,13)" fg:x="301" fg:w="1"/><text x="10.0706%" y="1231.50"></text></g><g><title>heap::base::SlotCallbackResult v8::internal::Scavenger::EvacuateInPlaceInternalizableString&lt;v8::internal::FullHeapObjectSlot&gt; (1 samples, 0.03%)</title><rect x="9.8206%" y="1205" width="0.0326%" height="15" fill="rgb(234,71,50)" fg:x="301" fg:w="1"/><text x="10.0706%" y="1215.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="9.8206%" y="1189" width="0.0326%" height="15" fill="rgb(253,155,4)" fg:x="301" fg:w="1"/><text x="10.0706%" y="1199.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="9.8206%" y="1173" width="0.0326%" height="15" fill="rgb(222,185,37)" fg:x="301" fg:w="1"/><text x="10.0706%" y="1183.50"></text></g><g><title>exc_page_fault (1 samples, 0.03%)</title><rect x="9.8206%" y="1157" width="0.0326%" height="15" fill="rgb(251,177,13)" fg:x="301" fg:w="1"/><text x="10.0706%" y="1167.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="9.8206%" y="1141" width="0.0326%" height="15" fill="rgb(250,179,40)" fg:x="301" fg:w="1"/><text x="10.0706%" y="1151.50"></text></g><g><title>handle_mm_fault (1 samples, 0.03%)</title><rect x="9.8206%" y="1125" width="0.0326%" height="15" fill="rgb(242,44,2)" fg:x="301" fg:w="1"/><text x="10.0706%" y="1135.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="9.8206%" y="1109" width="0.0326%" height="15" fill="rgb(216,177,13)" fg:x="301" fg:w="1"/><text x="10.0706%" y="1119.50"></text></g><g><title>do_anonymous_page (1 samples, 0.03%)</title><rect x="9.8206%" y="1093" width="0.0326%" height="15" fill="rgb(216,106,43)" fg:x="301" fg:w="1"/><text x="10.0706%" y="1103.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="9.8206%" y="1077" width="0.0326%" height="15" fill="rgb(216,183,2)" fg:x="301" fg:w="1"/><text x="10.0706%" y="1087.50"></text></g><g><title>v8::internal::HeapAllocator::AllocateRawWithRetryOrFailSlowPath (2 samples, 0.07%)</title><rect x="9.8532%" y="1413" width="0.0653%" height="15" fill="rgb(249,75,3)" fg:x="302" fg:w="2"/><text x="10.1032%" y="1423.50"></text></g><g><title>v8::internal::HeapAllocator::AllocateRawWithLightRetrySlowPath (2 samples, 0.07%)</title><rect x="9.8532%" y="1397" width="0.0653%" height="15" fill="rgb(219,67,39)" fg:x="302" fg:w="2"/><text x="10.1032%" y="1407.50"></text></g><g><title>v8::internal::Heap::CollectGarbage (2 samples, 0.07%)</title><rect x="9.8532%" y="1381" width="0.0653%" height="15" fill="rgb(253,228,2)" fg:x="302" fg:w="2"/><text x="10.1032%" y="1391.50"></text></g><g><title>v8::internal::Heap::PerformGarbageCollection (2 samples, 0.07%)</title><rect x="9.8532%" y="1365" width="0.0653%" height="15" fill="rgb(235,138,27)" fg:x="302" fg:w="2"/><text x="10.1032%" y="1375.50"></text></g><g><title>v8::internal::Heap::Scavenge (2 samples, 0.07%)</title><rect x="9.8532%" y="1349" width="0.0653%" height="15" fill="rgb(236,97,51)" fg:x="302" fg:w="2"/><text x="10.1032%" y="1359.50"></text></g><g><title>v8::internal::ScavengerCollector::CollectGarbage (2 samples, 0.07%)</title><rect x="9.8532%" y="1333" width="0.0653%" height="15" fill="rgb(240,80,30)" fg:x="302" fg:w="2"/><text x="10.1032%" y="1343.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewRawTwoByteString (3 samples, 0.10%)</title><rect x="9.8532%" y="1461" width="0.0979%" height="15" fill="rgb(230,178,19)" fg:x="302" fg:w="3"/><text x="10.1032%" y="1471.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::AllocateRawWithImmortalMap (3 samples, 0.10%)</title><rect x="9.8532%" y="1445" width="0.0979%" height="15" fill="rgb(210,190,27)" fg:x="302" fg:w="3"/><text x="10.1032%" y="1455.50"></text></g><g><title>v8::internal::Factory::AllocateRaw (3 samples, 0.10%)</title><rect x="9.8532%" y="1429" width="0.0979%" height="15" fill="rgb(222,107,31)" fg:x="302" fg:w="3"/><text x="10.1032%" y="1439.50"></text></g><g><title>v8::internal::NewLargeObjectSpace::AllocateRaw (1 samples, 0.03%)</title><rect x="9.9184%" y="1413" width="0.0326%" height="15" fill="rgb(216,127,34)" fg:x="304" fg:w="1"/><text x="10.1684%" y="1423.50"></text></g><g><title>v8::internal::MemoryAllocator::AllocateLargePage (1 samples, 0.03%)</title><rect x="9.9184%" y="1397" width="0.0326%" height="15" fill="rgb(234,116,52)" fg:x="304" fg:w="1"/><text x="10.1684%" y="1407.50"></text></g><g><title>v8::internal::MemoryAllocator::AllocateUninitializedChunkAt (1 samples, 0.03%)</title><rect x="9.9184%" y="1381" width="0.0326%" height="15" fill="rgb(222,124,15)" fg:x="304" fg:w="1"/><text x="10.1684%" y="1391.50"></text></g><g><title>v8::internal::MemoryAllocator::AllocateAlignedMemory (1 samples, 0.03%)</title><rect x="9.9184%" y="1365" width="0.0326%" height="15" fill="rgb(231,179,28)" fg:x="304" fg:w="1"/><text x="10.1684%" y="1375.50"></text></g><g><title>v8::base::OS::SetPermissions (1 samples, 0.03%)</title><rect x="9.9184%" y="1349" width="0.0326%" height="15" fill="rgb(226,93,45)" fg:x="304" fg:w="1"/><text x="10.1684%" y="1359.50"></text></g><g><title>__GI___mprotect (1 samples, 0.03%)</title><rect x="9.9184%" y="1333" width="0.0326%" height="15" fill="rgb(215,8,51)" fg:x="304" fg:w="1"/><text x="10.1684%" y="1343.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="9.9184%" y="1317" width="0.0326%" height="15" fill="rgb(223,106,5)" fg:x="304" fg:w="1"/><text x="10.1684%" y="1327.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="9.9184%" y="1301" width="0.0326%" height="15" fill="rgb(250,191,5)" fg:x="304" fg:w="1"/><text x="10.1684%" y="1311.50"></text></g><g><title>__x64_sys_mprotect (1 samples, 0.03%)</title><rect x="9.9184%" y="1285" width="0.0326%" height="15" fill="rgb(242,132,44)" fg:x="304" fg:w="1"/><text x="10.1684%" y="1295.50"></text></g><g><title>do_mprotect_pkey (1 samples, 0.03%)</title><rect x="9.9184%" y="1269" width="0.0326%" height="15" fill="rgb(251,152,29)" fg:x="304" fg:w="1"/><text x="10.1684%" y="1279.50"></text></g><g><title>mprotect_fixup (1 samples, 0.03%)</title><rect x="9.9184%" y="1253" width="0.0326%" height="15" fill="rgb(218,179,5)" fg:x="304" fg:w="1"/><text x="10.1684%" y="1263.50"></text></g><g><title>perf_event_mmap (1 samples, 0.03%)</title><rect x="9.9184%" y="1237" width="0.0326%" height="15" fill="rgb(227,67,19)" fg:x="304" fg:w="1"/><text x="10.1684%" y="1247.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.03%)</title><rect x="9.9184%" y="1221" width="0.0326%" height="15" fill="rgb(233,119,31)" fg:x="304" fg:w="1"/><text x="10.1684%" y="1231.50"></text></g><g><title>void v8::internal::Utf8DecoderBase&lt;v8::internal::Utf8Decoder&gt;::Decode&lt;unsigned char&gt; (1 samples, 0.03%)</title><rect x="9.9511%" y="1461" width="0.0326%" height="15" fill="rgb(241,120,22)" fg:x="305" fg:w="1"/><text x="10.2011%" y="1471.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="9.9511%" y="1445" width="0.0326%" height="15" fill="rgb(224,102,30)" fg:x="305" fg:w="1"/><text x="10.2011%" y="1455.50"></text></g><g><title>Builtins_CallApiCallback (6 samples, 0.20%)</title><rect x="9.8206%" y="1557" width="0.1958%" height="15" fill="rgb(210,164,37)" fg:x="301" fg:w="6"/><text x="10.0706%" y="1567.50"></text></g><g><title>node::(anonymous namespace)::DecodeData (6 samples, 0.20%)</title><rect x="9.8206%" y="1541" width="0.1958%" height="15" fill="rgb(226,191,16)" fg:x="301" fg:w="6"/><text x="10.0706%" y="1551.50"></text></g><g><title>node::StringDecoder::DecodeData (6 samples, 0.20%)</title><rect x="9.8206%" y="1525" width="0.1958%" height="15" fill="rgb(214,40,45)" fg:x="301" fg:w="6"/><text x="10.0706%" y="1535.50"></text></g><g><title>node::(anonymous namespace)::MakeString (6 samples, 0.20%)</title><rect x="9.8206%" y="1509" width="0.1958%" height="15" fill="rgb(244,29,26)" fg:x="301" fg:w="6"/><text x="10.0706%" y="1519.50"></text></g><g><title>v8::String::NewFromUtf8 (6 samples, 0.20%)</title><rect x="9.8206%" y="1493" width="0.1958%" height="15" fill="rgb(216,16,5)" fg:x="301" fg:w="6"/><text x="10.0706%" y="1503.50"></text></g><g><title>v8::internal::Factory::NewStringFromUtf8 (6 samples, 0.20%)</title><rect x="9.8206%" y="1477" width="0.1958%" height="15" fill="rgb(249,76,35)" fg:x="301" fg:w="6"/><text x="10.0706%" y="1487.50"></text></g><g><title>void v8::internal::Utf8DecoderBase&lt;v8::internal::Utf8Decoder&gt;::Decode&lt;unsigned short&gt; (1 samples, 0.03%)</title><rect x="9.9837%" y="1461" width="0.0326%" height="15" fill="rgb(207,11,44)" fg:x="306" fg:w="1"/><text x="10.2337%" y="1471.50"></text></g><g><title>Builtins_CreateTypedArray (1 samples, 0.03%)</title><rect x="10.0163%" y="1557" width="0.0326%" height="15" fill="rgb(228,190,49)" fg:x="307" fg:w="1"/><text x="10.2663%" y="1567.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_NoBuiltinExit (1 samples, 0.03%)</title><rect x="10.0163%" y="1541" width="0.0326%" height="15" fill="rgb(214,173,12)" fg:x="307" fg:w="1"/><text x="10.2663%" y="1551.50"></text></g><g><title>v8::internal::Runtime_AllocateInYoungGeneration (1 samples, 0.03%)</title><rect x="10.0163%" y="1525" width="0.0326%" height="15" fill="rgb(218,26,35)" fg:x="307" fg:w="1"/><text x="10.2663%" y="1535.50"></text></g><g><title>v8::internal::Factory::NewFillerObject (1 samples, 0.03%)</title><rect x="10.0163%" y="1509" width="0.0326%" height="15" fill="rgb(220,200,19)" fg:x="307" fg:w="1"/><text x="10.2663%" y="1519.50"></text></g><g><title>v8::internal::HeapAllocator::AllocateRawWithRetryOrFailSlowPath (1 samples, 0.03%)</title><rect x="10.0163%" y="1493" width="0.0326%" height="15" fill="rgb(239,95,49)" fg:x="307" fg:w="1"/><text x="10.2663%" y="1503.50"></text></g><g><title>v8::internal::HeapAllocator::AllocateRawWithLightRetrySlowPath (1 samples, 0.03%)</title><rect x="10.0163%" y="1477" width="0.0326%" height="15" fill="rgb(235,85,53)" fg:x="307" fg:w="1"/><text x="10.2663%" y="1487.50"></text></g><g><title>v8::internal::Heap::CollectGarbage (1 samples, 0.03%)</title><rect x="10.0163%" y="1461" width="0.0326%" height="15" fill="rgb(233,133,31)" fg:x="307" fg:w="1"/><text x="10.2663%" y="1471.50"></text></g><g><title>v8::internal::Heap::PerformGarbageCollection (1 samples, 0.03%)</title><rect x="10.0163%" y="1445" width="0.0326%" height="15" fill="rgb(218,25,20)" fg:x="307" fg:w="1"/><text x="10.2663%" y="1455.50"></text></g><g><title>v8::internal::Heap::Scavenge (1 samples, 0.03%)</title><rect x="10.0163%" y="1429" width="0.0326%" height="15" fill="rgb(252,210,38)" fg:x="307" fg:w="1"/><text x="10.2663%" y="1439.50"></text></g><g><title>v8::internal::ScavengerCollector::CollectGarbage (1 samples, 0.03%)</title><rect x="10.0163%" y="1413" width="0.0326%" height="15" fill="rgb(242,134,21)" fg:x="307" fg:w="1"/><text x="10.2663%" y="1423.50"></text></g><g><title>v8::platform::DefaultJobHandle::Join (1 samples, 0.03%)</title><rect x="10.0163%" y="1397" width="0.0326%" height="15" fill="rgb(213,28,48)" fg:x="307" fg:w="1"/><text x="10.2663%" y="1407.50"></text></g><g><title>v8::platform::DefaultJobState::Join (1 samples, 0.03%)</title><rect x="10.0163%" y="1381" width="0.0326%" height="15" fill="rgb(250,196,2)" fg:x="307" fg:w="1"/><text x="10.2663%" y="1391.50"></text></g><g><title>v8::internal::ScavengerCollector::JobTask::ProcessItems (1 samples, 0.03%)</title><rect x="10.0163%" y="1365" width="0.0326%" height="15" fill="rgb(227,5,17)" fg:x="307" fg:w="1"/><text x="10.2663%" y="1375.50"></text></g><g><title>void v8::internal::BodyDescriptorBase::IteratePointers&lt;v8::internal::ScavengeVisitor&gt; (1 samples, 0.03%)</title><rect x="10.0163%" y="1349" width="0.0326%" height="15" fill="rgb(221,226,24)" fg:x="307" fg:w="1"/><text x="10.2663%" y="1359.50"></text></g><g><title>Builtins_GeneratorPrototypeNext (1 samples, 0.03%)</title><rect x="10.0489%" y="1557" width="0.0326%" height="15" fill="rgb(211,5,48)" fg:x="308" fg:w="1"/><text x="10.2989%" y="1567.50"></text></g><g><title>v8::internal::FindStringIndicesDispatch (1 samples, 0.03%)</title><rect x="10.0489%" y="1541" width="0.0326%" height="15" fill="rgb(219,150,6)" fg:x="308" fg:w="1"/><text x="10.2989%" y="1551.50"></text></g><g><title>Builtins_ObjectGetOwnPropertyNames (1 samples, 0.03%)</title><rect x="10.0816%" y="1557" width="0.0326%" height="15" fill="rgb(251,46,16)" fg:x="309" fg:w="1"/><text x="10.3316%" y="1567.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_NoBuiltinExit (1 samples, 0.03%)</title><rect x="10.0816%" y="1541" width="0.0326%" height="15" fill="rgb(220,204,40)" fg:x="309" fg:w="1"/><text x="10.3316%" y="1551.50"></text></g><g><title>v8::internal::Runtime_ObjectGetOwnPropertyNamesTryFast (1 samples, 0.03%)</title><rect x="10.0816%" y="1525" width="0.0326%" height="15" fill="rgb(211,85,2)" fg:x="309" fg:w="1"/><text x="10.3316%" y="1535.50"></text></g><g><title>v8::internal::KeyAccumulator::GetKeys (1 samples, 0.03%)</title><rect x="10.0816%" y="1509" width="0.0326%" height="15" fill="rgb(229,17,7)" fg:x="309" fg:w="1"/><text x="10.3316%" y="1519.50"></text></g><g><title>v8::internal::KeyAccumulator::CollectKeys (1 samples, 0.03%)</title><rect x="10.0816%" y="1493" width="0.0326%" height="15" fill="rgb(239,72,28)" fg:x="309" fg:w="1"/><text x="10.3316%" y="1503.50"></text></g><g><title>v8::internal::KeyAccumulator::CollectOwnKeys (1 samples, 0.03%)</title><rect x="10.0816%" y="1477" width="0.0326%" height="15" fill="rgb(230,47,54)" fg:x="309" fg:w="1"/><text x="10.3316%" y="1487.50"></text></g><g><title>v8::internal::KeyAccumulator::CollectOwnPropertyNames (1 samples, 0.03%)</title><rect x="10.0816%" y="1461" width="0.0326%" height="15" fill="rgb(214,50,8)" fg:x="309" fg:w="1"/><text x="10.3316%" y="1471.50"></text></g><g><title>v8::internal::KeyAccumulator::AddKey (1 samples, 0.03%)</title><rect x="10.0816%" y="1445" width="0.0326%" height="15" fill="rgb(216,198,43)" fg:x="309" fg:w="1"/><text x="10.3316%" y="1455.50"></text></g><g><title>Builtins_LoadGlobalICInsideTypeof (1 samples, 0.03%)</title><rect x="10.0816%" y="1429" width="0.0326%" height="15" fill="rgb(234,20,35)" fg:x="309" fg:w="1"/><text x="10.3316%" y="1439.50"></text></g><g><title>[perf-2654.map] (53 samples, 1.73%)</title><rect x="8.4176%" y="1573" width="1.7292%" height="15" fill="rgb(254,45,19)" fg:x="258" fg:w="53"/><text x="8.6676%" y="1583.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="10.1142%" y="1557" width="0.0326%" height="15" fill="rgb(219,14,44)" fg:x="310" fg:w="1"/><text x="10.3642%" y="1567.50"></text></g><g><title>exc_page_fault (1 samples, 0.03%)</title><rect x="10.1142%" y="1541" width="0.0326%" height="15" fill="rgb(217,220,26)" fg:x="310" fg:w="1"/><text x="10.3642%" y="1551.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="10.1142%" y="1525" width="0.0326%" height="15" fill="rgb(213,158,28)" fg:x="310" fg:w="1"/><text x="10.3642%" y="1535.50"></text></g><g><title>handle_mm_fault (1 samples, 0.03%)</title><rect x="10.1142%" y="1509" width="0.0326%" height="15" fill="rgb(252,51,52)" fg:x="310" fg:w="1"/><text x="10.3642%" y="1519.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="10.1142%" y="1493" width="0.0326%" height="15" fill="rgb(246,89,16)" fg:x="310" fg:w="1"/><text x="10.3642%" y="1503.50"></text></g><g><title>do_anonymous_page (1 samples, 0.03%)</title><rect x="10.1142%" y="1477" width="0.0326%" height="15" fill="rgb(216,158,49)" fg:x="310" fg:w="1"/><text x="10.3642%" y="1487.50"></text></g><g><title>__folio_throttle_swaprate (1 samples, 0.03%)</title><rect x="10.1142%" y="1461" width="0.0326%" height="15" fill="rgb(236,107,19)" fg:x="310" fg:w="1"/><text x="10.3642%" y="1471.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="10.1142%" y="1445" width="0.0326%" height="15" fill="rgb(228,185,30)" fg:x="310" fg:w="1"/><text x="10.3642%" y="1455.50"></text></g><g><title>[perf-2686.map] (1 samples, 0.03%)</title><rect x="10.1468%" y="1573" width="0.0326%" height="15" fill="rgb(246,134,8)" fg:x="311" fg:w="1"/><text x="10.3968%" y="1583.50"></text></g><g><title>[perf-3296.map] (1 samples, 0.03%)</title><rect x="10.1794%" y="1573" width="0.0326%" height="15" fill="rgb(214,143,50)" fg:x="312" fg:w="1"/><text x="10.4294%" y="1583.50"></text></g><g><title>Builtins_LoadIC (1 samples, 0.03%)</title><rect x="10.1794%" y="1557" width="0.0326%" height="15" fill="rgb(228,75,8)" fg:x="312" fg:w="1"/><text x="10.4294%" y="1567.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_BuiltinExit (1 samples, 0.03%)</title><rect x="10.3100%" y="1557" width="0.0326%" height="15" fill="rgb(207,175,4)" fg:x="316" fg:w="1"/><text x="10.5600%" y="1567.50"></text></g><g><title>v8::internal::Builtin_RegExpPrototypeToString (1 samples, 0.03%)</title><rect x="10.3100%" y="1541" width="0.0326%" height="15" fill="rgb(205,108,24)" fg:x="316" fg:w="1"/><text x="10.5600%" y="1551.50"></text></g><g><title>v8::internal::IncrementalStringBuilder::AppendString (1 samples, 0.03%)</title><rect x="10.3100%" y="1525" width="0.0326%" height="15" fill="rgb(244,120,49)" fg:x="316" fg:w="1"/><text x="10.5600%" y="1535.50"></text></g><g><title>v8::internal::IncrementalStringBuilder::Extend (1 samples, 0.03%)</title><rect x="10.3100%" y="1509" width="0.0326%" height="15" fill="rgb(223,47,38)" fg:x="316" fg:w="1"/><text x="10.5600%" y="1519.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewRawOneByteString (1 samples, 0.03%)</title><rect x="10.3100%" y="1493" width="0.0326%" height="15" fill="rgb(229,179,11)" fg:x="316" fg:w="1"/><text x="10.5600%" y="1503.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="10.3100%" y="1477" width="0.0326%" height="15" fill="rgb(231,122,1)" fg:x="316" fg:w="1"/><text x="10.5600%" y="1487.50"></text></g><g><title>exc_page_fault (1 samples, 0.03%)</title><rect x="10.3100%" y="1461" width="0.0326%" height="15" fill="rgb(245,119,9)" fg:x="316" fg:w="1"/><text x="10.5600%" y="1471.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="10.3100%" y="1445" width="0.0326%" height="15" fill="rgb(241,163,25)" fg:x="316" fg:w="1"/><text x="10.5600%" y="1455.50"></text></g><g><title>handle_mm_fault (1 samples, 0.03%)</title><rect x="10.3100%" y="1429" width="0.0326%" height="15" fill="rgb(217,214,3)" fg:x="316" fg:w="1"/><text x="10.5600%" y="1439.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="10.3100%" y="1413" width="0.0326%" height="15" fill="rgb(240,86,28)" fg:x="316" fg:w="1"/><text x="10.5600%" y="1423.50"></text></g><g><title>do_anonymous_page (1 samples, 0.03%)</title><rect x="10.3100%" y="1397" width="0.0326%" height="15" fill="rgb(215,47,9)" fg:x="316" fg:w="1"/><text x="10.5600%" y="1407.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.03%)</title><rect x="10.3100%" y="1381" width="0.0326%" height="15" fill="rgb(252,25,45)" fg:x="316" fg:w="1"/><text x="10.5600%" y="1391.50"></text></g><g><title>charge_memcg (1 samples, 0.03%)</title><rect x="10.3100%" y="1365" width="0.0326%" height="15" fill="rgb(251,164,9)" fg:x="316" fg:w="1"/><text x="10.5600%" y="1375.50"></text></g><g><title>[perf-3323.map] (5 samples, 0.16%)</title><rect x="10.2121%" y="1573" width="0.1631%" height="15" fill="rgb(233,194,0)" fg:x="313" fg:w="5"/><text x="10.4621%" y="1583.50"></text></g><g><title>Builtins_StringPrototypeMatch (1 samples, 0.03%)</title><rect x="10.3426%" y="1557" width="0.0326%" height="15" fill="rgb(249,111,24)" fg:x="317" fg:w="1"/><text x="10.5926%" y="1567.50"></text></g><g><title>Builtins_RegExpMatchFast (1 samples, 0.03%)</title><rect x="10.3426%" y="1541" width="0.0326%" height="15" fill="rgb(250,223,3)" fg:x="317" fg:w="1"/><text x="10.5926%" y="1551.50"></text></g><g><title>Builtins_Call_ReceiverIsNotNullOrUndefined_Baseline_Compact (1 samples, 0.03%)</title><rect x="10.3426%" y="1525" width="0.0326%" height="15" fill="rgb(236,178,37)" fg:x="317" fg:w="1"/><text x="10.5926%" y="1535.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_BuiltinExit (1 samples, 0.03%)</title><rect x="10.3752%" y="1557" width="0.0326%" height="15" fill="rgb(241,158,50)" fg:x="318" fg:w="1"/><text x="10.6252%" y="1567.50"></text></g><g><title>v8::internal::Builtin_JsonStringify (1 samples, 0.03%)</title><rect x="10.3752%" y="1541" width="0.0326%" height="15" fill="rgb(213,121,41)" fg:x="318" fg:w="1"/><text x="10.6252%" y="1551.50"></text></g><g><title>v8::internal::JsonStringify (1 samples, 0.03%)</title><rect x="10.3752%" y="1525" width="0.0326%" height="15" fill="rgb(240,92,3)" fg:x="318" fg:w="1"/><text x="10.6252%" y="1535.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="10.3752%" y="1509" width="0.0326%" height="15" fill="rgb(205,123,3)" fg:x="318" fg:w="1"/><text x="10.6252%" y="1519.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="10.3752%" y="1493" width="0.0326%" height="15" fill="rgb(205,97,47)" fg:x="318" fg:w="1"/><text x="10.6252%" y="1503.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="10.3752%" y="1477" width="0.0326%" height="15" fill="rgb(247,152,14)" fg:x="318" fg:w="1"/><text x="10.6252%" y="1487.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="10.3752%" y="1461" width="0.0326%" height="15" fill="rgb(248,195,53)" fg:x="318" fg:w="1"/><text x="10.6252%" y="1471.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="10.3752%" y="1445" width="0.0326%" height="15" fill="rgb(226,201,16)" fg:x="318" fg:w="1"/><text x="10.6252%" y="1455.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="10.3752%" y="1429" width="0.0326%" height="15" fill="rgb(205,98,0)" fg:x="318" fg:w="1"/><text x="10.6252%" y="1439.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeJSReceiverSlow (1 samples, 0.03%)</title><rect x="10.3752%" y="1413" width="0.0326%" height="15" fill="rgb(214,191,48)" fg:x="318" fg:w="1"/><text x="10.6252%" y="1423.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="10.3752%" y="1397" width="0.0326%" height="15" fill="rgb(237,112,39)" fg:x="318" fg:w="1"/><text x="10.6252%" y="1407.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="10.3752%" y="1381" width="0.0326%" height="15" fill="rgb(247,203,27)" fg:x="318" fg:w="1"/><text x="10.6252%" y="1391.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="10.3752%" y="1365" width="0.0326%" height="15" fill="rgb(235,124,28)" fg:x="318" fg:w="1"/><text x="10.6252%" y="1375.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeJSReceiverSlow (1 samples, 0.03%)</title><rect x="10.3752%" y="1349" width="0.0326%" height="15" fill="rgb(208,207,46)" fg:x="318" fg:w="1"/><text x="10.6252%" y="1359.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="10.3752%" y="1333" width="0.0326%" height="15" fill="rgb(234,176,4)" fg:x="318" fg:w="1"/><text x="10.6252%" y="1343.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="10.3752%" y="1317" width="0.0326%" height="15" fill="rgb(230,133,28)" fg:x="318" fg:w="1"/><text x="10.6252%" y="1327.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="10.3752%" y="1301" width="0.0326%" height="15" fill="rgb(211,137,40)" fg:x="318" fg:w="1"/><text x="10.6252%" y="1311.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeJSReceiverSlow (1 samples, 0.03%)</title><rect x="10.3752%" y="1285" width="0.0326%" height="15" fill="rgb(254,35,13)" fg:x="318" fg:w="1"/><text x="10.6252%" y="1295.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="10.3752%" y="1269" width="0.0326%" height="15" fill="rgb(225,49,51)" fg:x="318" fg:w="1"/><text x="10.6252%" y="1279.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="10.3752%" y="1253" width="0.0326%" height="15" fill="rgb(251,10,15)" fg:x="318" fg:w="1"/><text x="10.6252%" y="1263.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="10.3752%" y="1237" width="0.0326%" height="15" fill="rgb(228,207,15)" fg:x="318" fg:w="1"/><text x="10.6252%" y="1247.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="10.3752%" y="1221" width="0.0326%" height="15" fill="rgb(241,99,19)" fg:x="318" fg:w="1"/><text x="10.6252%" y="1231.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="10.3752%" y="1205" width="0.0326%" height="15" fill="rgb(207,104,49)" fg:x="318" fg:w="1"/><text x="10.6252%" y="1215.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="10.3752%" y="1189" width="0.0326%" height="15" fill="rgb(234,99,18)" fg:x="318" fg:w="1"/><text x="10.6252%" y="1199.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="10.3752%" y="1173" width="0.0326%" height="15" fill="rgb(213,191,49)" fg:x="318" fg:w="1"/><text x="10.6252%" y="1183.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="10.3752%" y="1157" width="0.0326%" height="15" fill="rgb(210,226,19)" fg:x="318" fg:w="1"/><text x="10.6252%" y="1167.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="10.3752%" y="1141" width="0.0326%" height="15" fill="rgb(229,97,18)" fg:x="318" fg:w="1"/><text x="10.6252%" y="1151.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeJSReceiverSlow (1 samples, 0.03%)</title><rect x="10.3752%" y="1125" width="0.0326%" height="15" fill="rgb(211,167,15)" fg:x="318" fg:w="1"/><text x="10.6252%" y="1135.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="10.3752%" y="1109" width="0.0326%" height="15" fill="rgb(210,169,34)" fg:x="318" fg:w="1"/><text x="10.6252%" y="1119.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="10.3752%" y="1093" width="0.0326%" height="15" fill="rgb(241,121,31)" fg:x="318" fg:w="1"/><text x="10.6252%" y="1103.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="10.3752%" y="1077" width="0.0326%" height="15" fill="rgb(232,40,11)" fg:x="318" fg:w="1"/><text x="10.6252%" y="1087.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeJSReceiverSlow (1 samples, 0.03%)</title><rect x="10.3752%" y="1061" width="0.0326%" height="15" fill="rgb(205,86,26)" fg:x="318" fg:w="1"/><text x="10.6252%" y="1071.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="10.3752%" y="1045" width="0.0326%" height="15" fill="rgb(231,126,28)" fg:x="318" fg:w="1"/><text x="10.6252%" y="1055.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="10.3752%" y="1029" width="0.0326%" height="15" fill="rgb(219,221,18)" fg:x="318" fg:w="1"/><text x="10.6252%" y="1039.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="10.3752%" y="1013" width="0.0326%" height="15" fill="rgb(211,40,0)" fg:x="318" fg:w="1"/><text x="10.6252%" y="1023.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="10.3752%" y="997" width="0.0326%" height="15" fill="rgb(239,85,43)" fg:x="318" fg:w="1"/><text x="10.6252%" y="1007.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeString (1 samples, 0.03%)</title><rect x="10.3752%" y="981" width="0.0326%" height="15" fill="rgb(231,55,21)" fg:x="318" fg:w="1"/><text x="10.6252%" y="991.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="10.3752%" y="965" width="0.0326%" height="15" fill="rgb(225,184,43)" fg:x="318" fg:w="1"/><text x="10.6252%" y="975.50"></text></g><g><title>exc_page_fault (1 samples, 0.03%)</title><rect x="10.3752%" y="949" width="0.0326%" height="15" fill="rgb(251,158,41)" fg:x="318" fg:w="1"/><text x="10.6252%" y="959.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="10.3752%" y="933" width="0.0326%" height="15" fill="rgb(234,159,37)" fg:x="318" fg:w="1"/><text x="10.6252%" y="943.50"></text></g><g><title>handle_mm_fault (1 samples, 0.03%)</title><rect x="10.3752%" y="917" width="0.0326%" height="15" fill="rgb(216,204,22)" fg:x="318" fg:w="1"/><text x="10.6252%" y="927.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="10.3752%" y="901" width="0.0326%" height="15" fill="rgb(214,17,3)" fg:x="318" fg:w="1"/><text x="10.6252%" y="911.50"></text></g><g><title>do_anonymous_page (1 samples, 0.03%)</title><rect x="10.3752%" y="885" width="0.0326%" height="15" fill="rgb(212,111,17)" fg:x="318" fg:w="1"/><text x="10.6252%" y="895.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.03%)</title><rect x="10.3752%" y="869" width="0.0326%" height="15" fill="rgb(221,157,24)" fg:x="318" fg:w="1"/><text x="10.6252%" y="879.50"></text></g><g><title>__folio_alloc (1 samples, 0.03%)</title><rect x="10.3752%" y="853" width="0.0326%" height="15" fill="rgb(252,16,13)" fg:x="318" fg:w="1"/><text x="10.6252%" y="863.50"></text></g><g><title>__alloc_pages (1 samples, 0.03%)</title><rect x="10.3752%" y="837" width="0.0326%" height="15" fill="rgb(221,62,2)" fg:x="318" fg:w="1"/><text x="10.6252%" y="847.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.03%)</title><rect x="10.3752%" y="821" width="0.0326%" height="15" fill="rgb(247,87,22)" fg:x="318" fg:w="1"/><text x="10.6252%" y="831.50"></text></g><g><title>__GI___libc_free (1 samples, 0.03%)</title><rect x="10.4078%" y="1557" width="0.0326%" height="15" fill="rgb(215,73,9)" fg:x="319" fg:w="1"/><text x="10.6578%" y="1567.50"></text></g><g><title>arena_for_chunk (1 samples, 0.03%)</title><rect x="10.4078%" y="1541" width="0.0326%" height="15" fill="rgb(207,175,33)" fg:x="319" fg:w="1"/><text x="10.6578%" y="1551.50"></text></g><g><title>arena_for_chunk (1 samples, 0.03%)</title><rect x="10.4078%" y="1525" width="0.0326%" height="15" fill="rgb(243,129,54)" fg:x="319" fg:w="1"/><text x="10.6578%" y="1535.50"></text></g><g><title>heap_for_ptr (1 samples, 0.03%)</title><rect x="10.4078%" y="1509" width="0.0326%" height="15" fill="rgb(227,119,45)" fg:x="319" fg:w="1"/><text x="10.6578%" y="1519.50"></text></g><g><title>__GI___pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="10.4405%" y="1557" width="0.0326%" height="15" fill="rgb(205,109,36)" fg:x="320" fg:w="1"/><text x="10.6905%" y="1567.50"></text></g><g><title>node::StringBytes::Size (1 samples, 0.03%)</title><rect x="10.4731%" y="1541" width="0.0326%" height="15" fill="rgb(205,6,39)" fg:x="321" fg:w="1"/><text x="10.7231%" y="1551.50"></text></g><g><title>v8::String::Utf8Length (1 samples, 0.03%)</title><rect x="10.4731%" y="1525" width="0.0326%" height="15" fill="rgb(221,32,16)" fg:x="321" fg:w="1"/><text x="10.7231%" y="1535.50"></text></g><g><title>v8::internal::String::SlowFlatten (1 samples, 0.03%)</title><rect x="10.4731%" y="1509" width="0.0326%" height="15" fill="rgb(228,144,50)" fg:x="321" fg:w="1"/><text x="10.7231%" y="1519.50"></text></g><g><title>void v8::internal::String::WriteToFlat&lt;unsigned short&gt; (1 samples, 0.03%)</title><rect x="10.4731%" y="1493" width="0.0326%" height="15" fill="rgb(229,201,53)" fg:x="321" fg:w="1"/><text x="10.7231%" y="1503.50"></text></g><g><title>void v8::internal::String::WriteToFlat&lt;unsigned short&gt; (1 samples, 0.03%)</title><rect x="10.4731%" y="1477" width="0.0326%" height="15" fill="rgb(249,153,27)" fg:x="321" fg:w="1"/><text x="10.7231%" y="1487.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="10.4731%" y="1461" width="0.0326%" height="15" fill="rgb(227,106,25)" fg:x="321" fg:w="1"/><text x="10.7231%" y="1471.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="10.4731%" y="1445" width="0.0326%" height="15" fill="rgb(230,65,29)" fg:x="321" fg:w="1"/><text x="10.7231%" y="1455.50"></text></g><g><title>exc_page_fault (1 samples, 0.03%)</title><rect x="10.4731%" y="1429" width="0.0326%" height="15" fill="rgb(221,57,46)" fg:x="321" fg:w="1"/><text x="10.7231%" y="1439.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="10.4731%" y="1413" width="0.0326%" height="15" fill="rgb(229,161,17)" fg:x="321" fg:w="1"/><text x="10.7231%" y="1423.50"></text></g><g><title>handle_mm_fault (1 samples, 0.03%)</title><rect x="10.4731%" y="1397" width="0.0326%" height="15" fill="rgb(222,213,11)" fg:x="321" fg:w="1"/><text x="10.7231%" y="1407.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="10.4731%" y="1381" width="0.0326%" height="15" fill="rgb(235,35,13)" fg:x="321" fg:w="1"/><text x="10.7231%" y="1391.50"></text></g><g><title>do_anonymous_page (1 samples, 0.03%)</title><rect x="10.4731%" y="1365" width="0.0326%" height="15" fill="rgb(233,158,34)" fg:x="321" fg:w="1"/><text x="10.7231%" y="1375.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.03%)</title><rect x="10.4731%" y="1349" width="0.0326%" height="15" fill="rgb(215,151,48)" fg:x="321" fg:w="1"/><text x="10.7231%" y="1359.50"></text></g><g><title>__folio_alloc (1 samples, 0.03%)</title><rect x="10.4731%" y="1333" width="0.0326%" height="15" fill="rgb(229,84,14)" fg:x="321" fg:w="1"/><text x="10.7231%" y="1343.50"></text></g><g><title>__alloc_pages (1 samples, 0.03%)</title><rect x="10.4731%" y="1317" width="0.0326%" height="15" fill="rgb(229,68,14)" fg:x="321" fg:w="1"/><text x="10.7231%" y="1327.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.03%)</title><rect x="10.4731%" y="1301" width="0.0326%" height="15" fill="rgb(243,106,26)" fg:x="321" fg:w="1"/><text x="10.7231%" y="1311.50"></text></g><g><title>__rmqueue_pcplist (1 samples, 0.03%)</title><rect x="10.4731%" y="1285" width="0.0326%" height="15" fill="rgb(206,45,38)" fg:x="321" fg:w="1"/><text x="10.7231%" y="1295.50"></text></g><g><title>node::StringBytes::Write (1 samples, 0.03%)</title><rect x="10.5057%" y="1541" width="0.0326%" height="15" fill="rgb(226,6,15)" fg:x="322" fg:w="1"/><text x="10.7557%" y="1551.50"></text></g><g><title>v8::String::WriteUtf8 (1 samples, 0.03%)</title><rect x="10.5057%" y="1525" width="0.0326%" height="15" fill="rgb(232,22,54)" fg:x="322" fg:w="1"/><text x="10.7557%" y="1535.50"></text></g><g><title>security_socket_sendmsg (1 samples, 0.03%)</title><rect x="10.5383%" y="1365" width="0.0326%" height="15" fill="rgb(229,222,32)" fg:x="323" fg:w="1"/><text x="10.7883%" y="1375.50"></text></g><g><title>sock_write_iter (3 samples, 0.10%)</title><rect x="10.5383%" y="1381" width="0.0979%" height="15" fill="rgb(228,62,29)" fg:x="323" fg:w="3"/><text x="10.7883%" y="1391.50"></text></g><g><title>unix_stream_sendmsg (2 samples, 0.07%)</title><rect x="10.5710%" y="1365" width="0.0653%" height="15" fill="rgb(251,103,34)" fg:x="324" fg:w="2"/><text x="10.8210%" y="1375.50"></text></g><g><title>sock_alloc_send_pskb (2 samples, 0.07%)</title><rect x="10.5710%" y="1349" width="0.0653%" height="15" fill="rgb(233,12,30)" fg:x="324" fg:w="2"/><text x="10.8210%" y="1359.50"></text></g><g><title>skb_set_owner_w (2 samples, 0.07%)</title><rect x="10.5710%" y="1333" width="0.0653%" height="15" fill="rgb(238,52,0)" fg:x="324" fg:w="2"/><text x="10.8210%" y="1343.50"></text></g><g><title>int node::StreamBase::WriteString&lt;(node::encoding)1&gt; (6 samples, 0.20%)</title><rect x="10.4731%" y="1557" width="0.1958%" height="15" fill="rgb(223,98,5)" fg:x="321" fg:w="6"/><text x="10.7231%" y="1567.50"></text></g><g><title>non-virtual thunk to node::LibuvStreamWrap::DoTryWrite (4 samples, 0.13%)</title><rect x="10.5383%" y="1541" width="0.1305%" height="15" fill="rgb(228,75,37)" fg:x="323" fg:w="4"/><text x="10.7883%" y="1551.50"></text></g><g><title>uv__try_write (4 samples, 0.13%)</title><rect x="10.5383%" y="1525" width="0.1305%" height="15" fill="rgb(205,115,49)" fg:x="323" fg:w="4"/><text x="10.7883%" y="1535.50"></text></g><g><title>uv__writev (4 samples, 0.13%)</title><rect x="10.5383%" y="1509" width="0.1305%" height="15" fill="rgb(250,154,43)" fg:x="323" fg:w="4"/><text x="10.7883%" y="1519.50"></text></g><g><title>__GI___libc_write (4 samples, 0.13%)</title><rect x="10.5383%" y="1493" width="0.1305%" height="15" fill="rgb(226,43,29)" fg:x="323" fg:w="4"/><text x="10.7883%" y="1503.50"></text></g><g><title>__GI___libc_write (4 samples, 0.13%)</title><rect x="10.5383%" y="1477" width="0.1305%" height="15" fill="rgb(249,228,39)" fg:x="323" fg:w="4"/><text x="10.7883%" y="1487.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.13%)</title><rect x="10.5383%" y="1461" width="0.1305%" height="15" fill="rgb(216,79,43)" fg:x="323" fg:w="4"/><text x="10.7883%" y="1471.50"></text></g><g><title>do_syscall_64 (4 samples, 0.13%)</title><rect x="10.5383%" y="1445" width="0.1305%" height="15" fill="rgb(228,95,12)" fg:x="323" fg:w="4"/><text x="10.7883%" y="1455.50"></text></g><g><title>__x64_sys_write (4 samples, 0.13%)</title><rect x="10.5383%" y="1429" width="0.1305%" height="15" fill="rgb(249,221,15)" fg:x="323" fg:w="4"/><text x="10.7883%" y="1439.50"></text></g><g><title>ksys_write (4 samples, 0.13%)</title><rect x="10.5383%" y="1413" width="0.1305%" height="15" fill="rgb(233,34,13)" fg:x="323" fg:w="4"/><text x="10.7883%" y="1423.50"></text></g><g><title>vfs_write (4 samples, 0.13%)</title><rect x="10.5383%" y="1397" width="0.1305%" height="15" fill="rgb(214,103,39)" fg:x="323" fg:w="4"/><text x="10.7883%" y="1407.50"></text></g><g><title>tty_write (1 samples, 0.03%)</title><rect x="10.6362%" y="1381" width="0.0326%" height="15" fill="rgb(251,126,39)" fg:x="326" fg:w="1"/><text x="10.8862%" y="1391.50"></text></g><g><title>file_tty_write.constprop.0 (1 samples, 0.03%)</title><rect x="10.6362%" y="1365" width="0.0326%" height="15" fill="rgb(214,216,36)" fg:x="326" fg:w="1"/><text x="10.8862%" y="1375.50"></text></g><g><title>tty_ldisc_ref_wait (1 samples, 0.03%)</title><rect x="10.6362%" y="1349" width="0.0326%" height="15" fill="rgb(220,221,8)" fg:x="326" fg:w="1"/><text x="10.8862%" y="1359.50"></text></g><g><title>ldsem_down_read (1 samples, 0.03%)</title><rect x="10.6362%" y="1333" width="0.0326%" height="15" fill="rgb(240,216,3)" fg:x="326" fg:w="1"/><text x="10.8862%" y="1343.50"></text></g><g><title>operator new (1 samples, 0.03%)</title><rect x="10.6688%" y="1557" width="0.0326%" height="15" fill="rgb(232,218,17)" fg:x="327" fg:w="1"/><text x="10.9188%" y="1567.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7015%" y="1557" width="0.0326%" height="15" fill="rgb(229,163,45)" fg:x="328" fg:w="1"/><text x="10.9515%" y="1567.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (1 samples, 0.03%)</title><rect x="10.7341%" y="1557" width="0.0326%" height="15" fill="rgb(231,110,42)" fg:x="329" fg:w="1"/><text x="10.9841%" y="1567.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1 samples, 0.03%)</title><rect x="10.7667%" y="1557" width="0.0326%" height="15" fill="rgb(208,170,48)" fg:x="330" fg:w="1"/><text x="11.0167%" y="1567.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="1541" width="0.0326%" height="15" fill="rgb(239,116,25)" fg:x="330" fg:w="1"/><text x="11.0167%" y="1551.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="1525" width="0.0326%" height="15" fill="rgb(219,200,50)" fg:x="330" fg:w="1"/><text x="11.0167%" y="1535.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="1509" width="0.0326%" height="15" fill="rgb(245,200,0)" fg:x="330" fg:w="1"/><text x="11.0167%" y="1519.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1 samples, 0.03%)</title><rect x="10.7667%" y="1493" width="0.0326%" height="15" fill="rgb(245,119,33)" fg:x="330" fg:w="1"/><text x="11.0167%" y="1503.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="1477" width="0.0326%" height="15" fill="rgb(231,125,12)" fg:x="330" fg:w="1"/><text x="11.0167%" y="1487.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="1461" width="0.0326%" height="15" fill="rgb(216,96,41)" fg:x="330" fg:w="1"/><text x="11.0167%" y="1471.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="1445" width="0.0326%" height="15" fill="rgb(248,43,45)" fg:x="330" fg:w="1"/><text x="11.0167%" y="1455.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1 samples, 0.03%)</title><rect x="10.7667%" y="1429" width="0.0326%" height="15" fill="rgb(217,222,7)" fg:x="330" fg:w="1"/><text x="11.0167%" y="1439.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="1413" width="0.0326%" height="15" fill="rgb(233,28,6)" fg:x="330" fg:w="1"/><text x="11.0167%" y="1423.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="1397" width="0.0326%" height="15" fill="rgb(231,218,15)" fg:x="330" fg:w="1"/><text x="11.0167%" y="1407.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="1381" width="0.0326%" height="15" fill="rgb(226,171,48)" fg:x="330" fg:w="1"/><text x="11.0167%" y="1391.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1 samples, 0.03%)</title><rect x="10.7667%" y="1365" width="0.0326%" height="15" fill="rgb(235,201,9)" fg:x="330" fg:w="1"/><text x="11.0167%" y="1375.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="1349" width="0.0326%" height="15" fill="rgb(217,80,15)" fg:x="330" fg:w="1"/><text x="11.0167%" y="1359.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="1333" width="0.0326%" height="15" fill="rgb(219,152,8)" fg:x="330" fg:w="1"/><text x="11.0167%" y="1343.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="1317" width="0.0326%" height="15" fill="rgb(243,107,38)" fg:x="330" fg:w="1"/><text x="11.0167%" y="1327.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1 samples, 0.03%)</title><rect x="10.7667%" y="1301" width="0.0326%" height="15" fill="rgb(231,17,5)" fg:x="330" fg:w="1"/><text x="11.0167%" y="1311.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="1285" width="0.0326%" height="15" fill="rgb(209,25,54)" fg:x="330" fg:w="1"/><text x="11.0167%" y="1295.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="1269" width="0.0326%" height="15" fill="rgb(219,0,2)" fg:x="330" fg:w="1"/><text x="11.0167%" y="1279.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="1253" width="0.0326%" height="15" fill="rgb(246,9,5)" fg:x="330" fg:w="1"/><text x="11.0167%" y="1263.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1 samples, 0.03%)</title><rect x="10.7667%" y="1237" width="0.0326%" height="15" fill="rgb(226,159,4)" fg:x="330" fg:w="1"/><text x="11.0167%" y="1247.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="1221" width="0.0326%" height="15" fill="rgb(219,175,34)" fg:x="330" fg:w="1"/><text x="11.0167%" y="1231.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="1205" width="0.0326%" height="15" fill="rgb(236,10,46)" fg:x="330" fg:w="1"/><text x="11.0167%" y="1215.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="1189" width="0.0326%" height="15" fill="rgb(240,211,16)" fg:x="330" fg:w="1"/><text x="11.0167%" y="1199.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1 samples, 0.03%)</title><rect x="10.7667%" y="1173" width="0.0326%" height="15" fill="rgb(205,3,43)" fg:x="330" fg:w="1"/><text x="11.0167%" y="1183.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="1157" width="0.0326%" height="15" fill="rgb(245,7,22)" fg:x="330" fg:w="1"/><text x="11.0167%" y="1167.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="1141" width="0.0326%" height="15" fill="rgb(239,132,32)" fg:x="330" fg:w="1"/><text x="11.0167%" y="1151.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="1125" width="0.0326%" height="15" fill="rgb(228,202,34)" fg:x="330" fg:w="1"/><text x="11.0167%" y="1135.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1 samples, 0.03%)</title><rect x="10.7667%" y="1109" width="0.0326%" height="15" fill="rgb(254,200,22)" fg:x="330" fg:w="1"/><text x="11.0167%" y="1119.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="1093" width="0.0326%" height="15" fill="rgb(219,10,39)" fg:x="330" fg:w="1"/><text x="11.0167%" y="1103.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="1077" width="0.0326%" height="15" fill="rgb(226,210,39)" fg:x="330" fg:w="1"/><text x="11.0167%" y="1087.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="1061" width="0.0326%" height="15" fill="rgb(208,219,16)" fg:x="330" fg:w="1"/><text x="11.0167%" y="1071.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1 samples, 0.03%)</title><rect x="10.7667%" y="1045" width="0.0326%" height="15" fill="rgb(216,158,51)" fg:x="330" fg:w="1"/><text x="11.0167%" y="1055.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="1029" width="0.0326%" height="15" fill="rgb(233,14,44)" fg:x="330" fg:w="1"/><text x="11.0167%" y="1039.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="1013" width="0.0326%" height="15" fill="rgb(237,97,39)" fg:x="330" fg:w="1"/><text x="11.0167%" y="1023.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="997" width="0.0326%" height="15" fill="rgb(218,198,43)" fg:x="330" fg:w="1"/><text x="11.0167%" y="1007.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1 samples, 0.03%)</title><rect x="10.7667%" y="981" width="0.0326%" height="15" fill="rgb(231,104,20)" fg:x="330" fg:w="1"/><text x="11.0167%" y="991.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="965" width="0.0326%" height="15" fill="rgb(254,36,13)" fg:x="330" fg:w="1"/><text x="11.0167%" y="975.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="949" width="0.0326%" height="15" fill="rgb(248,14,50)" fg:x="330" fg:w="1"/><text x="11.0167%" y="959.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="933" width="0.0326%" height="15" fill="rgb(217,107,29)" fg:x="330" fg:w="1"/><text x="11.0167%" y="943.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1 samples, 0.03%)</title><rect x="10.7667%" y="917" width="0.0326%" height="15" fill="rgb(251,169,33)" fg:x="330" fg:w="1"/><text x="11.0167%" y="927.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="901" width="0.0326%" height="15" fill="rgb(217,108,32)" fg:x="330" fg:w="1"/><text x="11.0167%" y="911.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="885" width="0.0326%" height="15" fill="rgb(219,66,42)" fg:x="330" fg:w="1"/><text x="11.0167%" y="895.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="869" width="0.0326%" height="15" fill="rgb(206,180,7)" fg:x="330" fg:w="1"/><text x="11.0167%" y="879.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1 samples, 0.03%)</title><rect x="10.7667%" y="853" width="0.0326%" height="15" fill="rgb(208,226,31)" fg:x="330" fg:w="1"/><text x="11.0167%" y="863.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="837" width="0.0326%" height="15" fill="rgb(218,26,49)" fg:x="330" fg:w="1"/><text x="11.0167%" y="847.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="821" width="0.0326%" height="15" fill="rgb(233,197,48)" fg:x="330" fg:w="1"/><text x="11.0167%" y="831.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="805" width="0.0326%" height="15" fill="rgb(252,181,51)" fg:x="330" fg:w="1"/><text x="11.0167%" y="815.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1 samples, 0.03%)</title><rect x="10.7667%" y="789" width="0.0326%" height="15" fill="rgb(253,90,19)" fg:x="330" fg:w="1"/><text x="11.0167%" y="799.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="773" width="0.0326%" height="15" fill="rgb(215,171,30)" fg:x="330" fg:w="1"/><text x="11.0167%" y="783.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="757" width="0.0326%" height="15" fill="rgb(214,222,9)" fg:x="330" fg:w="1"/><text x="11.0167%" y="767.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="741" width="0.0326%" height="15" fill="rgb(223,3,22)" fg:x="330" fg:w="1"/><text x="11.0167%" y="751.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1 samples, 0.03%)</title><rect x="10.7667%" y="725" width="0.0326%" height="15" fill="rgb(225,196,46)" fg:x="330" fg:w="1"/><text x="11.0167%" y="735.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="709" width="0.0326%" height="15" fill="rgb(209,110,37)" fg:x="330" fg:w="1"/><text x="11.0167%" y="719.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="693" width="0.0326%" height="15" fill="rgb(249,89,12)" fg:x="330" fg:w="1"/><text x="11.0167%" y="703.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="677" width="0.0326%" height="15" fill="rgb(226,27,33)" fg:x="330" fg:w="1"/><text x="11.0167%" y="687.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1 samples, 0.03%)</title><rect x="10.7667%" y="661" width="0.0326%" height="15" fill="rgb(213,82,22)" fg:x="330" fg:w="1"/><text x="11.0167%" y="671.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="645" width="0.0326%" height="15" fill="rgb(248,140,0)" fg:x="330" fg:w="1"/><text x="11.0167%" y="655.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="629" width="0.0326%" height="15" fill="rgb(228,106,3)" fg:x="330" fg:w="1"/><text x="11.0167%" y="639.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="613" width="0.0326%" height="15" fill="rgb(209,23,37)" fg:x="330" fg:w="1"/><text x="11.0167%" y="623.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1 samples, 0.03%)</title><rect x="10.7667%" y="597" width="0.0326%" height="15" fill="rgb(241,93,50)" fg:x="330" fg:w="1"/><text x="11.0167%" y="607.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="581" width="0.0326%" height="15" fill="rgb(253,46,43)" fg:x="330" fg:w="1"/><text x="11.0167%" y="591.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="565" width="0.0326%" height="15" fill="rgb(226,206,43)" fg:x="330" fg:w="1"/><text x="11.0167%" y="575.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="549" width="0.0326%" height="15" fill="rgb(217,54,7)" fg:x="330" fg:w="1"/><text x="11.0167%" y="559.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1 samples, 0.03%)</title><rect x="10.7667%" y="533" width="0.0326%" height="15" fill="rgb(223,5,52)" fg:x="330" fg:w="1"/><text x="11.0167%" y="543.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="517" width="0.0326%" height="15" fill="rgb(206,52,46)" fg:x="330" fg:w="1"/><text x="11.0167%" y="527.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="501" width="0.0326%" height="15" fill="rgb(253,136,11)" fg:x="330" fg:w="1"/><text x="11.0167%" y="511.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="485" width="0.0326%" height="15" fill="rgb(208,106,33)" fg:x="330" fg:w="1"/><text x="11.0167%" y="495.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1 samples, 0.03%)</title><rect x="10.7667%" y="469" width="0.0326%" height="15" fill="rgb(206,54,4)" fg:x="330" fg:w="1"/><text x="11.0167%" y="479.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="453" width="0.0326%" height="15" fill="rgb(213,3,15)" fg:x="330" fg:w="1"/><text x="11.0167%" y="463.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="437" width="0.0326%" height="15" fill="rgb(252,211,39)" fg:x="330" fg:w="1"/><text x="11.0167%" y="447.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="421" width="0.0326%" height="15" fill="rgb(223,6,36)" fg:x="330" fg:w="1"/><text x="11.0167%" y="431.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1 samples, 0.03%)</title><rect x="10.7667%" y="405" width="0.0326%" height="15" fill="rgb(252,169,45)" fg:x="330" fg:w="1"/><text x="11.0167%" y="415.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="389" width="0.0326%" height="15" fill="rgb(212,48,26)" fg:x="330" fg:w="1"/><text x="11.0167%" y="399.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="373" width="0.0326%" height="15" fill="rgb(251,102,48)" fg:x="330" fg:w="1"/><text x="11.0167%" y="383.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="357" width="0.0326%" height="15" fill="rgb(243,208,16)" fg:x="330" fg:w="1"/><text x="11.0167%" y="367.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1 samples, 0.03%)</title><rect x="10.7667%" y="341" width="0.0326%" height="15" fill="rgb(219,96,24)" fg:x="330" fg:w="1"/><text x="11.0167%" y="351.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="325" width="0.0326%" height="15" fill="rgb(219,33,29)" fg:x="330" fg:w="1"/><text x="11.0167%" y="335.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="309" width="0.0326%" height="15" fill="rgb(223,176,5)" fg:x="330" fg:w="1"/><text x="11.0167%" y="319.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="293" width="0.0326%" height="15" fill="rgb(228,140,14)" fg:x="330" fg:w="1"/><text x="11.0167%" y="303.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1 samples, 0.03%)</title><rect x="10.7667%" y="277" width="0.0326%" height="15" fill="rgb(217,179,31)" fg:x="330" fg:w="1"/><text x="11.0167%" y="287.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="261" width="0.0326%" height="15" fill="rgb(230,9,30)" fg:x="330" fg:w="1"/><text x="11.0167%" y="271.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="245" width="0.0326%" height="15" fill="rgb(230,136,20)" fg:x="330" fg:w="1"/><text x="11.0167%" y="255.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="229" width="0.0326%" height="15" fill="rgb(215,210,22)" fg:x="330" fg:w="1"/><text x="11.0167%" y="239.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1 samples, 0.03%)</title><rect x="10.7667%" y="213" width="0.0326%" height="15" fill="rgb(218,43,5)" fg:x="330" fg:w="1"/><text x="11.0167%" y="223.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="197" width="0.0326%" height="15" fill="rgb(216,11,5)" fg:x="330" fg:w="1"/><text x="11.0167%" y="207.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="181" width="0.0326%" height="15" fill="rgb(209,82,29)" fg:x="330" fg:w="1"/><text x="11.0167%" y="191.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="165" width="0.0326%" height="15" fill="rgb(244,115,12)" fg:x="330" fg:w="1"/><text x="11.0167%" y="175.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1 samples, 0.03%)</title><rect x="10.7667%" y="149" width="0.0326%" height="15" fill="rgb(222,82,18)" fg:x="330" fg:w="1"/><text x="11.0167%" y="159.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="133" width="0.0326%" height="15" fill="rgb(249,227,8)" fg:x="330" fg:w="1"/><text x="11.0167%" y="143.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="117" width="0.0326%" height="15" fill="rgb(253,141,45)" fg:x="330" fg:w="1"/><text x="11.0167%" y="127.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="101" width="0.0326%" height="15" fill="rgb(234,184,4)" fg:x="330" fg:w="1"/><text x="11.0167%" y="111.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1 samples, 0.03%)</title><rect x="10.7667%" y="85" width="0.0326%" height="15" fill="rgb(218,194,23)" fg:x="330" fg:w="1"/><text x="11.0167%" y="95.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.03%)</title><rect x="10.7667%" y="69" width="0.0326%" height="15" fill="rgb(235,66,41)" fg:x="330" fg:w="1"/><text x="11.0167%" y="79.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (1 samples, 0.03%)</title><rect x="10.7667%" y="53" width="0.0326%" height="15" fill="rgb(245,217,1)" fg:x="330" fg:w="1"/><text x="11.0167%" y="63.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (1 samples, 0.03%)</title><rect x="10.7667%" y="37" width="0.0326%" height="15" fill="rgb(229,91,1)" fg:x="330" fg:w="1"/><text x="11.0167%" y="47.50"></text></g><g><title>do_compat_epoll_pwait.part.0 (3 samples, 0.10%)</title><rect x="10.7993%" y="1477" width="0.0979%" height="15" fill="rgb(207,101,30)" fg:x="331" fg:w="3"/><text x="11.0493%" y="1487.50"></text></g><g><title>do_epoll_wait (3 samples, 0.10%)</title><rect x="10.7993%" y="1461" width="0.0979%" height="15" fill="rgb(223,82,49)" fg:x="331" fg:w="3"/><text x="11.0493%" y="1471.50"></text></g><g><title>schedule_hrtimeout_range (2 samples, 0.07%)</title><rect x="10.8320%" y="1445" width="0.0653%" height="15" fill="rgb(218,167,17)" fg:x="332" fg:w="2"/><text x="11.0820%" y="1455.50"></text></g><g><title>schedule_hrtimeout_range_clock (2 samples, 0.07%)</title><rect x="10.8320%" y="1429" width="0.0653%" height="15" fill="rgb(208,103,14)" fg:x="332" fg:w="2"/><text x="11.0820%" y="1439.50"></text></g><g><title>schedule (2 samples, 0.07%)</title><rect x="10.8320%" y="1413" width="0.0653%" height="15" fill="rgb(238,20,8)" fg:x="332" fg:w="2"/><text x="11.0820%" y="1423.50"></text></g><g><title>__schedule (2 samples, 0.07%)</title><rect x="10.8320%" y="1397" width="0.0653%" height="15" fill="rgb(218,80,54)" fg:x="332" fg:w="2"/><text x="11.0820%" y="1407.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.03%)</title><rect x="10.8646%" y="1381" width="0.0326%" height="15" fill="rgb(240,144,17)" fg:x="333" fg:w="1"/><text x="11.1146%" y="1391.50"></text></g><g><title>newidle_balance (1 samples, 0.03%)</title><rect x="10.8646%" y="1365" width="0.0326%" height="15" fill="rgb(245,27,50)" fg:x="333" fg:w="1"/><text x="11.1146%" y="1375.50"></text></g><g><title>load_balance (1 samples, 0.03%)</title><rect x="10.8646%" y="1349" width="0.0326%" height="15" fill="rgb(251,51,7)" fg:x="333" fg:w="1"/><text x="11.1146%" y="1359.50"></text></g><g><title>find_busiest_group (1 samples, 0.03%)</title><rect x="10.8646%" y="1333" width="0.0326%" height="15" fill="rgb(245,217,29)" fg:x="333" fg:w="1"/><text x="11.1146%" y="1343.50"></text></g><g><title>update_sd_lb_stats.constprop.0 (1 samples, 0.03%)</title><rect x="10.8646%" y="1317" width="0.0326%" height="15" fill="rgb(221,176,29)" fg:x="333" fg:w="1"/><text x="11.1146%" y="1327.50"></text></g><g><title>idle_cpu (1 samples, 0.03%)</title><rect x="10.8646%" y="1301" width="0.0326%" height="15" fill="rgb(212,180,24)" fg:x="333" fg:w="1"/><text x="11.1146%" y="1311.50"></text></g><g><title>__GI_epoll_pwait (4 samples, 0.13%)</title><rect x="10.7993%" y="1541" width="0.1305%" height="15" fill="rgb(254,24,2)" fg:x="331" fg:w="4"/><text x="11.0493%" y="1551.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.13%)</title><rect x="10.7993%" y="1525" width="0.1305%" height="15" fill="rgb(230,100,2)" fg:x="331" fg:w="4"/><text x="11.0493%" y="1535.50"></text></g><g><title>do_syscall_64 (4 samples, 0.13%)</title><rect x="10.7993%" y="1509" width="0.1305%" height="15" fill="rgb(219,142,25)" fg:x="331" fg:w="4"/><text x="11.0493%" y="1519.50"></text></g><g><title>__x64_sys_epoll_pwait (4 samples, 0.13%)</title><rect x="10.7993%" y="1493" width="0.1305%" height="15" fill="rgb(240,73,43)" fg:x="331" fg:w="4"/><text x="11.0493%" y="1503.50"></text></g><g><title>read_tsc (1 samples, 0.03%)</title><rect x="10.8972%" y="1477" width="0.0326%" height="15" fill="rgb(214,114,15)" fg:x="334" fg:w="1"/><text x="11.1472%" y="1487.50"></text></g><g><title>Watcher::fireCallbacks (1 samples, 0.03%)</title><rect x="10.9299%" y="1525" width="0.0326%" height="15" fill="rgb(207,130,4)" fg:x="335" fg:w="1"/><text x="11.1799%" y="1535.50"></text></g><g><title>Watcher::callbackEventsToJS (1 samples, 0.03%)</title><rect x="10.9299%" y="1509" width="0.0326%" height="15" fill="rgb(221,25,40)" fg:x="335" fg:w="1"/><text x="11.1799%" y="1519.50"></text></g><g><title>napi_set_property (1 samples, 0.03%)</title><rect x="10.9299%" y="1493" width="0.0326%" height="15" fill="rgb(241,184,7)" fg:x="335" fg:w="1"/><text x="11.1799%" y="1503.50"></text></g><g><title>v8::Object::Set (1 samples, 0.03%)</title><rect x="10.9299%" y="1477" width="0.0326%" height="15" fill="rgb(235,159,4)" fg:x="335" fg:w="1"/><text x="11.1799%" y="1487.50"></text></g><g><title>v8::internal::Runtime::SetObjectProperty (1 samples, 0.03%)</title><rect x="10.9299%" y="1461" width="0.0326%" height="15" fill="rgb(214,87,48)" fg:x="335" fg:w="1"/><text x="11.1799%" y="1471.50"></text></g><g><title>v8::internal::Object::TransitionAndWriteDataProperty (1 samples, 0.03%)</title><rect x="10.9299%" y="1445" width="0.0326%" height="15" fill="rgb(246,198,24)" fg:x="335" fg:w="1"/><text x="11.1799%" y="1455.50"></text></g><g><title>node_napi_env__::can_call_into_js (1 samples, 0.03%)</title><rect x="10.9299%" y="1429" width="0.0326%" height="15" fill="rgb(209,66,40)" fg:x="335" fg:w="1"/><text x="11.1799%" y="1439.50"></text></g><g><title>cppgc::internal::Sweeper::SweeperImpl::IncrementalSweepTask::Run (1 samples, 0.03%)</title><rect x="10.9625%" y="1493" width="0.0326%" height="15" fill="rgb(233,147,39)" fg:x="336" fg:w="1"/><text x="11.2125%" y="1503.50"></text></g><g><title>cppgc::internal::Sweeper::SweeperImpl::PerformSweepOnMutatorThread (1 samples, 0.03%)</title><rect x="10.9625%" y="1477" width="0.0326%" height="15" fill="rgb(231,145,52)" fg:x="336" fg:w="1"/><text x="11.2125%" y="1487.50"></text></g><g><title>v8::base::TimeTicks::Now (1 samples, 0.03%)</title><rect x="10.9625%" y="1461" width="0.0326%" height="15" fill="rgb(206,20,26)" fg:x="336" fg:w="1"/><text x="11.2125%" y="1471.50"></text></g><g><title>__GI___clock_gettime (1 samples, 0.03%)</title><rect x="10.9625%" y="1445" width="0.0326%" height="15" fill="rgb(238,220,4)" fg:x="336" fg:w="1"/><text x="11.2125%" y="1455.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.03%)</title><rect x="10.9625%" y="1429" width="0.0326%" height="15" fill="rgb(252,195,42)" fg:x="336" fg:w="1"/><text x="11.2125%" y="1439.50"></text></g><g><title>v8::internal::MarkCompactCollector::Evacuate (1 samples, 0.03%)</title><rect x="10.9951%" y="1397" width="0.0326%" height="15" fill="rgb(209,10,6)" fg:x="337" fg:w="1"/><text x="11.2451%" y="1407.50"></text></g><g><title>v8::internal::MarkCompactCollector::EvacuatePagesInParallel (1 samples, 0.03%)</title><rect x="10.9951%" y="1381" width="0.0326%" height="15" fill="rgb(229,3,52)" fg:x="337" fg:w="1"/><text x="11.2451%" y="1391.50"></text></g><g><title>v8::platform::DefaultJobHandle::Join (1 samples, 0.03%)</title><rect x="10.9951%" y="1365" width="0.0326%" height="15" fill="rgb(253,49,37)" fg:x="337" fg:w="1"/><text x="11.2451%" y="1375.50"></text></g><g><title>v8::platform::DefaultJobState::Join (1 samples, 0.03%)</title><rect x="10.9951%" y="1349" width="0.0326%" height="15" fill="rgb(240,103,49)" fg:x="337" fg:w="1"/><text x="11.2451%" y="1359.50"></text></g><g><title>v8::internal::PageEvacuationJob::Run (1 samples, 0.03%)</title><rect x="10.9951%" y="1333" width="0.0326%" height="15" fill="rgb(250,182,30)" fg:x="337" fg:w="1"/><text x="11.2451%" y="1343.50"></text></g><g><title>v8::internal::Evacuator::EvacuatePage (1 samples, 0.03%)</title><rect x="10.9951%" y="1317" width="0.0326%" height="15" fill="rgb(248,8,30)" fg:x="337" fg:w="1"/><text x="11.2451%" y="1327.50"></text></g><g><title>v8::internal::Evacuator::RawEvacuatePage (1 samples, 0.03%)</title><rect x="10.9951%" y="1301" width="0.0326%" height="15" fill="rgb(237,120,30)" fg:x="337" fg:w="1"/><text x="11.2451%" y="1311.50"></text></g><g><title>void v8::internal::BodyDescriptorBase::IteratePointers&lt;v8::internal::RecordMigratedSlotVisitor&gt; (1 samples, 0.03%)</title><rect x="10.9951%" y="1285" width="0.0326%" height="15" fill="rgb(221,146,34)" fg:x="337" fg:w="1"/><text x="11.2451%" y="1295.50"></text></g><g><title>v8::internal::MarkCompactCollector::ProcessMarkingWorklist (2 samples, 0.07%)</title><rect x="11.0277%" y="1333" width="0.0653%" height="15" fill="rgb(242,55,13)" fg:x="338" fg:w="2"/><text x="11.2777%" y="1343.50"></text></g><g><title>void v8::internal::BodyDescriptorBase::IteratePointers&lt;v8::internal::MainMarkingVisitor&lt;v8::internal::MarkingState&gt; &gt; (2 samples, 0.07%)</title><rect x="11.0277%" y="1317" width="0.0653%" height="15" fill="rgb(242,112,31)" fg:x="338" fg:w="2"/><text x="11.2777%" y="1327.50"></text></g><g><title>void v8::internal::MarkingVisitorBase&lt;v8::internal::MainMarkingVisitor&lt;v8::internal::MarkingState&gt;, v8::internal::MarkingState&gt;::ProcessStrongHeapObject&lt;v8::internal::FullHeapObjectSlot&gt; (1 samples, 0.03%)</title><rect x="11.0604%" y="1301" width="0.0326%" height="15" fill="rgb(249,192,27)" fg:x="339" fg:w="1"/><text x="11.3104%" y="1311.50"></text></g><g><title>void v8::internal::BodyDescriptorBase::IteratePointers&lt;v8::internal::MainMarkingVisitor&lt;v8::internal::MarkingState&gt; &gt; (2 samples, 0.07%)</title><rect x="11.0930%" y="1333" width="0.0653%" height="15" fill="rgb(208,204,44)" fg:x="340" fg:w="2"/><text x="11.3430%" y="1343.50"></text></g><g><title>v8::internal::Heap::FinalizeIncrementalMarkingIfComplete (6 samples, 0.20%)</title><rect x="10.9951%" y="1477" width="0.1958%" height="15" fill="rgb(208,93,54)" fg:x="337" fg:w="6"/><text x="11.2451%" y="1487.50"></text></g><g><title>v8::internal::Heap::CollectGarbage (6 samples, 0.20%)</title><rect x="10.9951%" y="1461" width="0.1958%" height="15" fill="rgb(242,1,31)" fg:x="337" fg:w="6"/><text x="11.2451%" y="1471.50"></text></g><g><title>v8::internal::Heap::PerformGarbageCollection (6 samples, 0.20%)</title><rect x="10.9951%" y="1445" width="0.1958%" height="15" fill="rgb(241,83,25)" fg:x="337" fg:w="6"/><text x="11.2451%" y="1455.50"></text></g><g><title>v8::internal::Heap::MarkCompact (6 samples, 0.20%)</title><rect x="10.9951%" y="1429" width="0.1958%" height="15" fill="rgb(205,169,50)" fg:x="337" fg:w="6"/><text x="11.2451%" y="1439.50"></text></g><g><title>v8::internal::MarkCompactCollector::CollectGarbage (6 samples, 0.20%)</title><rect x="10.9951%" y="1413" width="0.1958%" height="15" fill="rgb(239,186,37)" fg:x="337" fg:w="6"/><text x="11.2451%" y="1423.50"></text></g><g><title>v8::internal::MarkCompactCollector::MarkLiveObjects (5 samples, 0.16%)</title><rect x="11.0277%" y="1397" width="0.1631%" height="15" fill="rgb(205,221,10)" fg:x="338" fg:w="5"/><text x="11.2777%" y="1407.50"></text></g><g><title>v8::internal::MarkCompactCollector::MarkTransitiveClosure (5 samples, 0.16%)</title><rect x="11.0277%" y="1381" width="0.1631%" height="15" fill="rgb(218,196,15)" fg:x="338" fg:w="5"/><text x="11.2777%" y="1391.50"></text></g><g><title>v8::internal::MarkCompactCollector::MarkTransitiveClosureUntilFixpoint (5 samples, 0.16%)</title><rect x="11.0277%" y="1365" width="0.1631%" height="15" fill="rgb(218,196,35)" fg:x="338" fg:w="5"/><text x="11.2777%" y="1375.50"></text></g><g><title>v8::internal::MarkCompactCollector::ProcessEphemerons (5 samples, 0.16%)</title><rect x="11.0277%" y="1349" width="0.1631%" height="15" fill="rgb(233,63,24)" fg:x="338" fg:w="5"/><text x="11.2777%" y="1359.50"></text></g><g><title>void v8::internal::MarkingVisitorBase&lt;v8::internal::MainMarkingVisitor&lt;v8::internal::MarkingState&gt;, v8::internal::MarkingState&gt;::ProcessStrongHeapObject&lt;v8::internal::FullHeapObjectSlot&gt; (1 samples, 0.03%)</title><rect x="11.1582%" y="1333" width="0.0326%" height="15" fill="rgb(225,8,4)" fg:x="342" fg:w="1"/><text x="11.4082%" y="1343.50"></text></g><g><title>v8::internal::MarkCompactCollector::ProcessMarkingWorklist (3 samples, 0.10%)</title><rect x="11.1909%" y="1445" width="0.0979%" height="15" fill="rgb(234,105,35)" fg:x="343" fg:w="3"/><text x="11.4409%" y="1455.50"></text></g><g><title>void v8::internal::BodyDescriptorBase::IteratePointers&lt;v8::internal::MainMarkingVisitor&lt;v8::internal::MarkingState&gt; &gt; (3 samples, 0.10%)</title><rect x="11.1909%" y="1429" width="0.0979%" height="15" fill="rgb(236,21,32)" fg:x="343" fg:w="3"/><text x="11.4409%" y="1439.50"></text></g><g><title>void v8::internal::MarkingVisitorBase&lt;v8::internal::MainMarkingVisitor&lt;v8::internal::MarkingState&gt;, v8::internal::MarkingState&gt;::ProcessStrongHeapObject&lt;v8::internal::FullHeapObjectSlot&gt; (3 samples, 0.10%)</title><rect x="11.1909%" y="1413" width="0.0979%" height="15" fill="rgb(228,109,6)" fg:x="343" fg:w="3"/><text x="11.4409%" y="1423.50"></text></g><g><title>v8::internal::IncrementalMarkingJob::Task::RunInternal (12 samples, 0.39%)</title><rect x="10.9951%" y="1493" width="0.3915%" height="15" fill="rgb(229,215,31)" fg:x="337" fg:w="12"/><text x="11.2451%" y="1503.50"></text></g><g><title>v8::internal::IncrementalMarking::AdvanceAndFinalizeIfComplete (6 samples, 0.20%)</title><rect x="11.1909%" y="1477" width="0.1958%" height="15" fill="rgb(221,52,54)" fg:x="343" fg:w="6"/><text x="11.4409%" y="1487.50"></text></g><g><title>v8::internal::IncrementalMarking::Step (6 samples, 0.20%)</title><rect x="11.1909%" y="1461" width="0.1958%" height="15" fill="rgb(252,129,43)" fg:x="343" fg:w="6"/><text x="11.4409%" y="1471.50"></text></g><g><title>void v8::internal::BodyDescriptorBase::IteratePointers&lt;v8::internal::MainMarkingVisitor&lt;v8::internal::MarkingState&gt; &gt; (3 samples, 0.10%)</title><rect x="11.2887%" y="1445" width="0.0979%" height="15" fill="rgb(248,183,27)" fg:x="346" fg:w="3"/><text x="11.5387%" y="1455.50"></text></g><g><title>uv__async_io (15 samples, 0.49%)</title><rect x="10.9299%" y="1541" width="0.4894%" height="15" fill="rgb(250,0,22)" fg:x="335" fg:w="15"/><text x="11.1799%" y="1551.50"></text></g><g><title>node::PerIsolatePlatformData::FlushForegroundTasksInternal (14 samples, 0.46%)</title><rect x="10.9625%" y="1525" width="0.4568%" height="15" fill="rgb(213,166,10)" fg:x="336" fg:w="14"/><text x="11.2125%" y="1535.50"></text></g><g><title>node::PerIsolatePlatformData::RunForegroundTask (14 samples, 0.46%)</title><rect x="10.9625%" y="1509" width="0.4568%" height="15" fill="rgb(207,163,36)" fg:x="336" fg:w="14"/><text x="11.2125%" y="1519.50"></text></g><g><title>v8::internal::MinorGCJob::Task::RunInternal (1 samples, 0.03%)</title><rect x="11.3866%" y="1493" width="0.0326%" height="15" fill="rgb(208,122,22)" fg:x="349" fg:w="1"/><text x="11.6366%" y="1503.50"></text></g><g><title>v8::internal::Heap::CollectGarbage (1 samples, 0.03%)</title><rect x="11.3866%" y="1477" width="0.0326%" height="15" fill="rgb(207,104,49)" fg:x="349" fg:w="1"/><text x="11.6366%" y="1487.50"></text></g><g><title>v8::internal::Heap::PerformGarbageCollection (1 samples, 0.03%)</title><rect x="11.3866%" y="1461" width="0.0326%" height="15" fill="rgb(248,211,50)" fg:x="349" fg:w="1"/><text x="11.6366%" y="1471.50"></text></g><g><title>v8::internal::Heap::Scavenge (1 samples, 0.03%)</title><rect x="11.3866%" y="1445" width="0.0326%" height="15" fill="rgb(217,13,45)" fg:x="349" fg:w="1"/><text x="11.6366%" y="1455.50"></text></g><g><title>v8::internal::ScavengerCollector::CollectGarbage (1 samples, 0.03%)</title><rect x="11.3866%" y="1429" width="0.0326%" height="15" fill="rgb(211,216,49)" fg:x="349" fg:w="1"/><text x="11.6366%" y="1439.50"></text></g><g><title>uv__drain (1 samples, 0.03%)</title><rect x="11.4192%" y="1541" width="0.0326%" height="15" fill="rgb(221,58,53)" fg:x="350" fg:w="1"/><text x="11.6692%" y="1551.50"></text></g><g><title>__GI_shutdown (1 samples, 0.03%)</title><rect x="11.4192%" y="1525" width="0.0326%" height="15" fill="rgb(220,112,41)" fg:x="350" fg:w="1"/><text x="11.6692%" y="1535.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="11.4192%" y="1509" width="0.0326%" height="15" fill="rgb(236,38,28)" fg:x="350" fg:w="1"/><text x="11.6692%" y="1519.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="11.4192%" y="1493" width="0.0326%" height="15" fill="rgb(227,195,22)" fg:x="350" fg:w="1"/><text x="11.6692%" y="1503.50"></text></g><g><title>__x64_sys_shutdown (1 samples, 0.03%)</title><rect x="11.4192%" y="1477" width="0.0326%" height="15" fill="rgb(214,55,33)" fg:x="350" fg:w="1"/><text x="11.6692%" y="1487.50"></text></g><g><title>__sys_shutdown (1 samples, 0.03%)</title><rect x="11.4192%" y="1461" width="0.0326%" height="15" fill="rgb(248,80,13)" fg:x="350" fg:w="1"/><text x="11.6692%" y="1471.50"></text></g><g><title>unix_shutdown (1 samples, 0.03%)</title><rect x="11.4192%" y="1445" width="0.0326%" height="15" fill="rgb(238,52,6)" fg:x="350" fg:w="1"/><text x="11.6692%" y="1455.50"></text></g><g><title>sock_def_wakeup (1 samples, 0.03%)</title><rect x="11.4192%" y="1429" width="0.0326%" height="15" fill="rgb(224,198,47)" fg:x="350" fg:w="1"/><text x="11.6692%" y="1439.50"></text></g><g><title>uv__io_poll (21 samples, 0.69%)</title><rect x="10.7993%" y="1557" width="0.6852%" height="15" fill="rgb(233,171,20)" fg:x="331" fg:w="21"/><text x="11.0493%" y="1567.50"></text></g><g><title>uv__stream_io (1 samples, 0.03%)</title><rect x="11.4519%" y="1541" width="0.0326%" height="15" fill="rgb(241,30,25)" fg:x="351" fg:w="1"/><text x="11.7019%" y="1551.50"></text></g><g><title>uv__read (1 samples, 0.03%)</title><rect x="11.4519%" y="1525" width="0.0326%" height="15" fill="rgb(207,171,38)" fg:x="351" fg:w="1"/><text x="11.7019%" y="1535.50"></text></g><g><title>node::LibuvStreamWrap::ReadStart (1 samples, 0.03%)</title><rect x="11.4519%" y="1509" width="0.0326%" height="15" fill="rgb(234,70,1)" fg:x="351" fg:w="1"/><text x="11.7019%" y="1519.50"></text></g><g><title>node::Environment::allocate_managed_buffer (1 samples, 0.03%)</title><rect x="11.4519%" y="1493" width="0.0326%" height="15" fill="rgb(232,178,18)" fg:x="351" fg:w="1"/><text x="11.7019%" y="1503.50"></text></g><g><title>v8::ArrayBuffer::NewBackingStore (1 samples, 0.03%)</title><rect x="11.4519%" y="1477" width="0.0326%" height="15" fill="rgb(241,78,40)" fg:x="351" fg:w="1"/><text x="11.7019%" y="1487.50"></text></g><g><title>v8::internal::BackingStore::Allocate (1 samples, 0.03%)</title><rect x="11.4519%" y="1461" width="0.0326%" height="15" fill="rgb(222,35,25)" fg:x="351" fg:w="1"/><text x="11.7019%" y="1471.50"></text></g><g><title>v8::internal::Heap::AllocateExternalBackingStore (1 samples, 0.03%)</title><rect x="11.4519%" y="1445" width="0.0326%" height="15" fill="rgb(207,92,16)" fg:x="351" fg:w="1"/><text x="11.7019%" y="1455.50"></text></g><g><title>node::NodeArrayBufferAllocator::Allocate (1 samples, 0.03%)</title><rect x="11.4519%" y="1429" width="0.0326%" height="15" fill="rgb(216,59,51)" fg:x="351" fg:w="1"/><text x="11.7019%" y="1439.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.03%)</title><rect x="11.4519%" y="1413" width="0.0326%" height="15" fill="rgb(213,80,28)" fg:x="351" fg:w="1"/><text x="11.7019%" y="1423.50"></text></g><g><title>_int_malloc (1 samples, 0.03%)</title><rect x="11.4519%" y="1397" width="0.0326%" height="15" fill="rgb(220,93,7)" fg:x="351" fg:w="1"/><text x="11.7019%" y="1407.50"></text></g><g><title>v8::internal::ComputeSeededIntegerHash (1 samples, 0.03%)</title><rect x="11.4845%" y="1557" width="0.0326%" height="15" fill="rgb(225,24,44)" fg:x="352" fg:w="1"/><text x="11.7345%" y="1567.50"></text></g><g><title>v8::internal::ConcurrentMarkingVisitor::ShouldVisit (2 samples, 0.07%)</title><rect x="11.5171%" y="1557" width="0.0653%" height="15" fill="rgb(243,74,40)" fg:x="353" fg:w="2"/><text x="11.7671%" y="1567.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="11.5824%" y="1557" width="0.0326%" height="15" fill="rgb(228,39,7)" fg:x="355" fg:w="1"/><text x="11.8324%" y="1567.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeJSReceiverSlow (1 samples, 0.03%)</title><rect x="11.5824%" y="1541" width="0.0326%" height="15" fill="rgb(227,79,8)" fg:x="355" fg:w="1"/><text x="11.8324%" y="1551.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.5824%" y="1525" width="0.0326%" height="15" fill="rgb(236,58,11)" fg:x="355" fg:w="1"/><text x="11.8324%" y="1535.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.5824%" y="1509" width="0.0326%" height="15" fill="rgb(249,63,35)" fg:x="355" fg:w="1"/><text x="11.8324%" y="1519.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="11.5824%" y="1493" width="0.0326%" height="15" fill="rgb(252,114,16)" fg:x="355" fg:w="1"/><text x="11.8324%" y="1503.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeJSReceiverSlow (1 samples, 0.03%)</title><rect x="11.5824%" y="1477" width="0.0326%" height="15" fill="rgb(254,151,24)" fg:x="355" fg:w="1"/><text x="11.8324%" y="1487.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.5824%" y="1461" width="0.0326%" height="15" fill="rgb(253,54,39)" fg:x="355" fg:w="1"/><text x="11.8324%" y="1471.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.5824%" y="1445" width="0.0326%" height="15" fill="rgb(243,25,45)" fg:x="355" fg:w="1"/><text x="11.8324%" y="1455.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="11.5824%" y="1429" width="0.0326%" height="15" fill="rgb(234,134,9)" fg:x="355" fg:w="1"/><text x="11.8324%" y="1439.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeJSReceiverSlow (1 samples, 0.03%)</title><rect x="11.5824%" y="1413" width="0.0326%" height="15" fill="rgb(227,166,31)" fg:x="355" fg:w="1"/><text x="11.8324%" y="1423.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.5824%" y="1397" width="0.0326%" height="15" fill="rgb(245,143,41)" fg:x="355" fg:w="1"/><text x="11.8324%" y="1407.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.5824%" y="1381" width="0.0326%" height="15" fill="rgb(238,181,32)" fg:x="355" fg:w="1"/><text x="11.8324%" y="1391.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="11.5824%" y="1365" width="0.0326%" height="15" fill="rgb(224,113,18)" fg:x="355" fg:w="1"/><text x="11.8324%" y="1375.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeJSReceiverSlow (1 samples, 0.03%)</title><rect x="11.5824%" y="1349" width="0.0326%" height="15" fill="rgb(240,229,28)" fg:x="355" fg:w="1"/><text x="11.8324%" y="1359.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.5824%" y="1333" width="0.0326%" height="15" fill="rgb(250,185,3)" fg:x="355" fg:w="1"/><text x="11.8324%" y="1343.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.5824%" y="1317" width="0.0326%" height="15" fill="rgb(212,59,25)" fg:x="355" fg:w="1"/><text x="11.8324%" y="1327.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="11.5824%" y="1301" width="0.0326%" height="15" fill="rgb(221,87,20)" fg:x="355" fg:w="1"/><text x="11.8324%" y="1311.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeJSReceiverSlow (1 samples, 0.03%)</title><rect x="11.5824%" y="1285" width="0.0326%" height="15" fill="rgb(213,74,28)" fg:x="355" fg:w="1"/><text x="11.8324%" y="1295.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.5824%" y="1269" width="0.0326%" height="15" fill="rgb(224,132,34)" fg:x="355" fg:w="1"/><text x="11.8324%" y="1279.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.5824%" y="1253" width="0.0326%" height="15" fill="rgb(222,101,24)" fg:x="355" fg:w="1"/><text x="11.8324%" y="1263.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="11.5824%" y="1237" width="0.0326%" height="15" fill="rgb(254,142,4)" fg:x="355" fg:w="1"/><text x="11.8324%" y="1247.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeJSReceiverSlow (1 samples, 0.03%)</title><rect x="11.5824%" y="1221" width="0.0326%" height="15" fill="rgb(230,229,49)" fg:x="355" fg:w="1"/><text x="11.8324%" y="1231.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.5824%" y="1205" width="0.0326%" height="15" fill="rgb(238,70,47)" fg:x="355" fg:w="1"/><text x="11.8324%" y="1215.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="11.5824%" y="1189" width="0.0326%" height="15" fill="rgb(231,160,17)" fg:x="355" fg:w="1"/><text x="11.8324%" y="1199.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.5824%" y="1173" width="0.0326%" height="15" fill="rgb(218,68,53)" fg:x="355" fg:w="1"/><text x="11.8324%" y="1183.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="11.5824%" y="1157" width="0.0326%" height="15" fill="rgb(236,111,10)" fg:x="355" fg:w="1"/><text x="11.8324%" y="1167.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeString (1 samples, 0.03%)</title><rect x="11.5824%" y="1141" width="0.0326%" height="15" fill="rgb(224,34,41)" fg:x="355" fg:w="1"/><text x="11.8324%" y="1151.50"></text></g><g><title>v8::internal::IncrementalStringBuilder::Extend (1 samples, 0.03%)</title><rect x="11.5824%" y="1125" width="0.0326%" height="15" fill="rgb(241,118,19)" fg:x="355" fg:w="1"/><text x="11.8324%" y="1135.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewRawTwoByteString (1 samples, 0.03%)</title><rect x="11.5824%" y="1109" width="0.0326%" height="15" fill="rgb(238,129,25)" fg:x="355" fg:w="1"/><text x="11.8324%" y="1119.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::AllocateRawWithImmortalMap (1 samples, 0.03%)</title><rect x="11.5824%" y="1093" width="0.0326%" height="15" fill="rgb(238,22,31)" fg:x="355" fg:w="1"/><text x="11.8324%" y="1103.50"></text></g><g><title>v8::internal::Factory::AllocateRaw (1 samples, 0.03%)</title><rect x="11.5824%" y="1077" width="0.0326%" height="15" fill="rgb(222,174,48)" fg:x="355" fg:w="1"/><text x="11.8324%" y="1087.50"></text></g><g><title>v8::internal::HeapAllocator::AllocateRawWithRetryOrFailSlowPath (1 samples, 0.03%)</title><rect x="11.5824%" y="1061" width="0.0326%" height="15" fill="rgb(206,152,40)" fg:x="355" fg:w="1"/><text x="11.8324%" y="1071.50"></text></g><g><title>v8::internal::HeapAllocator::AllocateRawWithLightRetrySlowPath (1 samples, 0.03%)</title><rect x="11.5824%" y="1045" width="0.0326%" height="15" fill="rgb(218,99,54)" fg:x="355" fg:w="1"/><text x="11.8324%" y="1055.50"></text></g><g><title>v8::internal::Heap::CollectGarbage (1 samples, 0.03%)</title><rect x="11.5824%" y="1029" width="0.0326%" height="15" fill="rgb(220,174,26)" fg:x="355" fg:w="1"/><text x="11.8324%" y="1039.50"></text></g><g><title>v8::internal::Heap::PerformGarbageCollection (1 samples, 0.03%)</title><rect x="11.5824%" y="1013" width="0.0326%" height="15" fill="rgb(245,116,9)" fg:x="355" fg:w="1"/><text x="11.8324%" y="1023.50"></text></g><g><title>v8::internal::Heap::Scavenge (1 samples, 0.03%)</title><rect x="11.5824%" y="997" width="0.0326%" height="15" fill="rgb(209,72,35)" fg:x="355" fg:w="1"/><text x="11.8324%" y="1007.50"></text></g><g><title>v8::internal::ScavengerCollector::CollectGarbage (1 samples, 0.03%)</title><rect x="11.5824%" y="981" width="0.0326%" height="15" fill="rgb(226,126,21)" fg:x="355" fg:w="1"/><text x="11.8324%" y="991.50"></text></g><g><title>v8::internal::Heap::IterateRoots (1 samples, 0.03%)</title><rect x="11.5824%" y="965" width="0.0326%" height="15" fill="rgb(227,192,1)" fg:x="355" fg:w="1"/><text x="11.8324%" y="975.50"></text></g><g><title>v8::internal::(anonymous namespace)::IterateObjectCache (1 samples, 0.03%)</title><rect x="11.5824%" y="949" width="0.0326%" height="15" fill="rgb(237,180,29)" fg:x="355" fg:w="1"/><text x="11.8324%" y="959.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="11.6150%" y="1237" width="0.0326%" height="15" fill="rgb(230,197,35)" fg:x="356" fg:w="1"/><text x="11.8650%" y="1247.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.6150%" y="1221" width="0.0326%" height="15" fill="rgb(246,193,31)" fg:x="356" fg:w="1"/><text x="11.8650%" y="1231.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="11.6150%" y="1205" width="0.0326%" height="15" fill="rgb(241,36,4)" fg:x="356" fg:w="1"/><text x="11.8650%" y="1215.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeString (1 samples, 0.03%)</title><rect x="11.6150%" y="1189" width="0.0326%" height="15" fill="rgb(241,130,17)" fg:x="356" fg:w="1"/><text x="11.8650%" y="1199.50"></text></g><g><title>v8::internal::IncrementalStringBuilder::Extend (1 samples, 0.03%)</title><rect x="11.6150%" y="1173" width="0.0326%" height="15" fill="rgb(206,137,32)" fg:x="356" fg:w="1"/><text x="11.8650%" y="1183.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewRawTwoByteString (1 samples, 0.03%)</title><rect x="11.6150%" y="1157" width="0.0326%" height="15" fill="rgb(237,228,51)" fg:x="356" fg:w="1"/><text x="11.8650%" y="1167.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::AllocateRawWithImmortalMap (1 samples, 0.03%)</title><rect x="11.6150%" y="1141" width="0.0326%" height="15" fill="rgb(243,6,42)" fg:x="356" fg:w="1"/><text x="11.8650%" y="1151.50"></text></g><g><title>v8::internal::Factory::AllocateRaw (1 samples, 0.03%)</title><rect x="11.6150%" y="1125" width="0.0326%" height="15" fill="rgb(251,74,28)" fg:x="356" fg:w="1"/><text x="11.8650%" y="1135.50"></text></g><g><title>v8::internal::HeapAllocator::AllocateRawWithRetryOrFailSlowPath (1 samples, 0.03%)</title><rect x="11.6150%" y="1109" width="0.0326%" height="15" fill="rgb(218,20,49)" fg:x="356" fg:w="1"/><text x="11.8650%" y="1119.50"></text></g><g><title>v8::internal::HeapAllocator::AllocateRawWithLightRetrySlowPath (1 samples, 0.03%)</title><rect x="11.6150%" y="1093" width="0.0326%" height="15" fill="rgb(238,28,14)" fg:x="356" fg:w="1"/><text x="11.8650%" y="1103.50"></text></g><g><title>v8::internal::Heap::CollectGarbage (1 samples, 0.03%)</title><rect x="11.6150%" y="1077" width="0.0326%" height="15" fill="rgb(229,40,46)" fg:x="356" fg:w="1"/><text x="11.8650%" y="1087.50"></text></g><g><title>v8::internal::Heap::PerformGarbageCollection (1 samples, 0.03%)</title><rect x="11.6150%" y="1061" width="0.0326%" height="15" fill="rgb(244,195,20)" fg:x="356" fg:w="1"/><text x="11.8650%" y="1071.50"></text></g><g><title>v8::internal::Heap::Scavenge (1 samples, 0.03%)</title><rect x="11.6150%" y="1045" width="0.0326%" height="15" fill="rgb(253,56,35)" fg:x="356" fg:w="1"/><text x="11.8650%" y="1055.50"></text></g><g><title>v8::internal::ScavengerCollector::CollectGarbage (1 samples, 0.03%)</title><rect x="11.6150%" y="1029" width="0.0326%" height="15" fill="rgb(210,149,44)" fg:x="356" fg:w="1"/><text x="11.8650%" y="1039.50"></text></g><g><title>v8::platform::DefaultJobHandle::Join (1 samples, 0.03%)</title><rect x="11.6150%" y="1013" width="0.0326%" height="15" fill="rgb(240,135,12)" fg:x="356" fg:w="1"/><text x="11.8650%" y="1023.50"></text></g><g><title>v8::platform::DefaultJobState::Join (1 samples, 0.03%)</title><rect x="11.6150%" y="997" width="0.0326%" height="15" fill="rgb(251,24,50)" fg:x="356" fg:w="1"/><text x="11.8650%" y="1007.50"></text></g><g><title>v8::internal::ScavengerCollector::JobTask::ProcessItems (1 samples, 0.03%)</title><rect x="11.6150%" y="981" width="0.0326%" height="15" fill="rgb(243,200,47)" fg:x="356" fg:w="1"/><text x="11.8650%" y="991.50"></text></g><g><title>v8::internal::Scavenger::Process (1 samples, 0.03%)</title><rect x="11.6150%" y="965" width="0.0326%" height="15" fill="rgb(224,166,26)" fg:x="356" fg:w="1"/><text x="11.8650%" y="975.50"></text></g><g><title>v8::internal::Scavenger::IterateAndScavengePromotedObject (1 samples, 0.03%)</title><rect x="11.6150%" y="949" width="0.0326%" height="15" fill="rgb(233,0,47)" fg:x="356" fg:w="1"/><text x="11.8650%" y="959.50"></text></g><g><title>void v8::internal::BodyDescriptorBase::IteratePointers&lt;v8::internal::IterateAndScavengePromotedObjectsVisitor&gt; (1 samples, 0.03%)</title><rect x="11.6150%" y="933" width="0.0326%" height="15" fill="rgb(253,80,5)" fg:x="356" fg:w="1"/><text x="11.8650%" y="943.50"></text></g><g><title>heap::base::SlotCallbackResult v8::internal::Scavenger::ScavengeObject&lt;v8::internal::FullHeapObjectSlot&gt; (1 samples, 0.03%)</title><rect x="11.6150%" y="917" width="0.0326%" height="15" fill="rgb(214,133,25)" fg:x="356" fg:w="1"/><text x="11.8650%" y="927.50"></text></g><g><title>heap::base::SlotCallbackResult v8::internal::Scavenger::EvacuateInPlaceInternalizableString&lt;v8::internal::FullHeapObjectSlot&gt; (1 samples, 0.03%)</title><rect x="11.6150%" y="901" width="0.0326%" height="15" fill="rgb(209,27,14)" fg:x="356" fg:w="1"/><text x="11.8650%" y="911.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="11.6150%" y="885" width="0.0326%" height="15" fill="rgb(219,102,51)" fg:x="356" fg:w="1"/><text x="11.8650%" y="895.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="11.6150%" y="869" width="0.0326%" height="15" fill="rgb(237,18,16)" fg:x="356" fg:w="1"/><text x="11.8650%" y="879.50"></text></g><g><title>exc_page_fault (1 samples, 0.03%)</title><rect x="11.6150%" y="853" width="0.0326%" height="15" fill="rgb(241,85,17)" fg:x="356" fg:w="1"/><text x="11.8650%" y="863.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="11.6150%" y="837" width="0.0326%" height="15" fill="rgb(236,90,42)" fg:x="356" fg:w="1"/><text x="11.8650%" y="847.50"></text></g><g><title>handle_mm_fault (1 samples, 0.03%)</title><rect x="11.6150%" y="821" width="0.0326%" height="15" fill="rgb(249,57,21)" fg:x="356" fg:w="1"/><text x="11.8650%" y="831.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="11.6150%" y="805" width="0.0326%" height="15" fill="rgb(243,12,36)" fg:x="356" fg:w="1"/><text x="11.8650%" y="815.50"></text></g><g><title>do_anonymous_page (1 samples, 0.03%)</title><rect x="11.6150%" y="789" width="0.0326%" height="15" fill="rgb(253,128,47)" fg:x="356" fg:w="1"/><text x="11.8650%" y="799.50"></text></g><g><title>folio_add_new_anon_rmap (1 samples, 0.03%)</title><rect x="11.6150%" y="773" width="0.0326%" height="15" fill="rgb(207,33,20)" fg:x="356" fg:w="1"/><text x="11.8650%" y="783.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.03%)</title><rect x="11.6150%" y="757" width="0.0326%" height="15" fill="rgb(233,215,35)" fg:x="356" fg:w="1"/><text x="11.8650%" y="767.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (2 samples, 0.07%)</title><rect x="11.6150%" y="1541" width="0.0653%" height="15" fill="rgb(249,188,52)" fg:x="356" fg:w="2"/><text x="11.8650%" y="1551.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeJSReceiverSlow (2 samples, 0.07%)</title><rect x="11.6150%" y="1525" width="0.0653%" height="15" fill="rgb(225,12,32)" fg:x="356" fg:w="2"/><text x="11.8650%" y="1535.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (2 samples, 0.07%)</title><rect x="11.6150%" y="1509" width="0.0653%" height="15" fill="rgb(247,98,14)" fg:x="356" fg:w="2"/><text x="11.8650%" y="1519.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (2 samples, 0.07%)</title><rect x="11.6150%" y="1493" width="0.0653%" height="15" fill="rgb(247,219,48)" fg:x="356" fg:w="2"/><text x="11.8650%" y="1503.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (2 samples, 0.07%)</title><rect x="11.6150%" y="1477" width="0.0653%" height="15" fill="rgb(253,60,48)" fg:x="356" fg:w="2"/><text x="11.8650%" y="1487.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeJSReceiverSlow (2 samples, 0.07%)</title><rect x="11.6150%" y="1461" width="0.0653%" height="15" fill="rgb(245,15,52)" fg:x="356" fg:w="2"/><text x="11.8650%" y="1471.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (2 samples, 0.07%)</title><rect x="11.6150%" y="1445" width="0.0653%" height="15" fill="rgb(220,133,28)" fg:x="356" fg:w="2"/><text x="11.8650%" y="1455.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (2 samples, 0.07%)</title><rect x="11.6150%" y="1429" width="0.0653%" height="15" fill="rgb(217,180,4)" fg:x="356" fg:w="2"/><text x="11.8650%" y="1439.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (2 samples, 0.07%)</title><rect x="11.6150%" y="1413" width="0.0653%" height="15" fill="rgb(251,24,1)" fg:x="356" fg:w="2"/><text x="11.8650%" y="1423.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeJSReceiverSlow (2 samples, 0.07%)</title><rect x="11.6150%" y="1397" width="0.0653%" height="15" fill="rgb(212,185,49)" fg:x="356" fg:w="2"/><text x="11.8650%" y="1407.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (2 samples, 0.07%)</title><rect x="11.6150%" y="1381" width="0.0653%" height="15" fill="rgb(215,175,22)" fg:x="356" fg:w="2"/><text x="11.8650%" y="1391.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (2 samples, 0.07%)</title><rect x="11.6150%" y="1365" width="0.0653%" height="15" fill="rgb(250,205,14)" fg:x="356" fg:w="2"/><text x="11.8650%" y="1375.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (2 samples, 0.07%)</title><rect x="11.6150%" y="1349" width="0.0653%" height="15" fill="rgb(225,211,22)" fg:x="356" fg:w="2"/><text x="11.8650%" y="1359.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeJSReceiverSlow (2 samples, 0.07%)</title><rect x="11.6150%" y="1333" width="0.0653%" height="15" fill="rgb(251,179,42)" fg:x="356" fg:w="2"/><text x="11.8650%" y="1343.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (2 samples, 0.07%)</title><rect x="11.6150%" y="1317" width="0.0653%" height="15" fill="rgb(208,216,51)" fg:x="356" fg:w="2"/><text x="11.8650%" y="1327.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (2 samples, 0.07%)</title><rect x="11.6150%" y="1301" width="0.0653%" height="15" fill="rgb(235,36,11)" fg:x="356" fg:w="2"/><text x="11.8650%" y="1311.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (2 samples, 0.07%)</title><rect x="11.6150%" y="1285" width="0.0653%" height="15" fill="rgb(213,189,28)" fg:x="356" fg:w="2"/><text x="11.8650%" y="1295.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeJSReceiverSlow (2 samples, 0.07%)</title><rect x="11.6150%" y="1269" width="0.0653%" height="15" fill="rgb(227,203,42)" fg:x="356" fg:w="2"/><text x="11.8650%" y="1279.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (2 samples, 0.07%)</title><rect x="11.6150%" y="1253" width="0.0653%" height="15" fill="rgb(244,72,36)" fg:x="356" fg:w="2"/><text x="11.8650%" y="1263.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.6476%" y="1237" width="0.0326%" height="15" fill="rgb(213,53,17)" fg:x="357" fg:w="1"/><text x="11.8976%" y="1247.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="11.6476%" y="1221" width="0.0326%" height="15" fill="rgb(207,167,3)" fg:x="357" fg:w="1"/><text x="11.8976%" y="1231.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeJSReceiverSlow (1 samples, 0.03%)</title><rect x="11.6476%" y="1205" width="0.0326%" height="15" fill="rgb(216,98,30)" fg:x="357" fg:w="1"/><text x="11.8976%" y="1215.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.6476%" y="1189" width="0.0326%" height="15" fill="rgb(236,123,15)" fg:x="357" fg:w="1"/><text x="11.8976%" y="1199.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.6476%" y="1173" width="0.0326%" height="15" fill="rgb(248,81,50)" fg:x="357" fg:w="1"/><text x="11.8976%" y="1183.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="11.6476%" y="1157" width="0.0326%" height="15" fill="rgb(214,120,4)" fg:x="357" fg:w="1"/><text x="11.8976%" y="1167.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeJSReceiverSlow (1 samples, 0.03%)</title><rect x="11.6476%" y="1141" width="0.0326%" height="15" fill="rgb(208,179,34)" fg:x="357" fg:w="1"/><text x="11.8976%" y="1151.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.6476%" y="1125" width="0.0326%" height="15" fill="rgb(227,140,7)" fg:x="357" fg:w="1"/><text x="11.8976%" y="1135.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.6476%" y="1109" width="0.0326%" height="15" fill="rgb(214,22,6)" fg:x="357" fg:w="1"/><text x="11.8976%" y="1119.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="11.6476%" y="1093" width="0.0326%" height="15" fill="rgb(207,137,27)" fg:x="357" fg:w="1"/><text x="11.8976%" y="1103.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeJSReceiverSlow (1 samples, 0.03%)</title><rect x="11.6476%" y="1077" width="0.0326%" height="15" fill="rgb(210,8,46)" fg:x="357" fg:w="1"/><text x="11.8976%" y="1087.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.6476%" y="1061" width="0.0326%" height="15" fill="rgb(240,16,54)" fg:x="357" fg:w="1"/><text x="11.8976%" y="1071.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="11.6476%" y="1045" width="0.0326%" height="15" fill="rgb(211,209,29)" fg:x="357" fg:w="1"/><text x="11.8976%" y="1055.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.6476%" y="1029" width="0.0326%" height="15" fill="rgb(226,228,24)" fg:x="357" fg:w="1"/><text x="11.8976%" y="1039.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="11.6476%" y="1013" width="0.0326%" height="15" fill="rgb(222,84,9)" fg:x="357" fg:w="1"/><text x="11.8976%" y="1023.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="11.6476%" y="997" width="0.0326%" height="15" fill="rgb(234,203,30)" fg:x="357" fg:w="1"/><text x="11.8976%" y="1007.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="11.6803%" y="1525" width="0.0326%" height="15" fill="rgb(238,109,14)" fg:x="358" fg:w="1"/><text x="11.9303%" y="1535.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeJSReceiverSlow (1 samples, 0.03%)</title><rect x="11.6803%" y="1509" width="0.0326%" height="15" fill="rgb(233,206,34)" fg:x="358" fg:w="1"/><text x="11.9303%" y="1519.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.6803%" y="1493" width="0.0326%" height="15" fill="rgb(220,167,47)" fg:x="358" fg:w="1"/><text x="11.9303%" y="1503.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.6803%" y="1477" width="0.0326%" height="15" fill="rgb(238,105,10)" fg:x="358" fg:w="1"/><text x="11.9303%" y="1487.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="11.6803%" y="1461" width="0.0326%" height="15" fill="rgb(213,227,17)" fg:x="358" fg:w="1"/><text x="11.9303%" y="1471.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeJSReceiverSlow (1 samples, 0.03%)</title><rect x="11.6803%" y="1445" width="0.0326%" height="15" fill="rgb(217,132,38)" fg:x="358" fg:w="1"/><text x="11.9303%" y="1455.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.6803%" y="1429" width="0.0326%" height="15" fill="rgb(242,146,4)" fg:x="358" fg:w="1"/><text x="11.9303%" y="1439.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.6803%" y="1413" width="0.0326%" height="15" fill="rgb(212,61,9)" fg:x="358" fg:w="1"/><text x="11.9303%" y="1423.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="11.6803%" y="1397" width="0.0326%" height="15" fill="rgb(247,126,22)" fg:x="358" fg:w="1"/><text x="11.9303%" y="1407.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeJSReceiverSlow (1 samples, 0.03%)</title><rect x="11.6803%" y="1381" width="0.0326%" height="15" fill="rgb(220,196,2)" fg:x="358" fg:w="1"/><text x="11.9303%" y="1391.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.6803%" y="1365" width="0.0326%" height="15" fill="rgb(208,46,4)" fg:x="358" fg:w="1"/><text x="11.9303%" y="1375.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.6803%" y="1349" width="0.0326%" height="15" fill="rgb(252,104,46)" fg:x="358" fg:w="1"/><text x="11.9303%" y="1359.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="11.6803%" y="1333" width="0.0326%" height="15" fill="rgb(237,152,48)" fg:x="358" fg:w="1"/><text x="11.9303%" y="1343.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeJSReceiverSlow (1 samples, 0.03%)</title><rect x="11.6803%" y="1317" width="0.0326%" height="15" fill="rgb(221,59,37)" fg:x="358" fg:w="1"/><text x="11.9303%" y="1327.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.6803%" y="1301" width="0.0326%" height="15" fill="rgb(209,202,51)" fg:x="358" fg:w="1"/><text x="11.9303%" y="1311.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.6803%" y="1285" width="0.0326%" height="15" fill="rgb(228,81,30)" fg:x="358" fg:w="1"/><text x="11.9303%" y="1295.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="11.6803%" y="1269" width="0.0326%" height="15" fill="rgb(227,42,39)" fg:x="358" fg:w="1"/><text x="11.9303%" y="1279.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeJSReceiverSlow (1 samples, 0.03%)</title><rect x="11.6803%" y="1253" width="0.0326%" height="15" fill="rgb(221,26,2)" fg:x="358" fg:w="1"/><text x="11.9303%" y="1263.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.6803%" y="1237" width="0.0326%" height="15" fill="rgb(254,61,31)" fg:x="358" fg:w="1"/><text x="11.9303%" y="1247.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="11.6803%" y="1221" width="0.0326%" height="15" fill="rgb(222,173,38)" fg:x="358" fg:w="1"/><text x="11.9303%" y="1231.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.6803%" y="1205" width="0.0326%" height="15" fill="rgb(218,50,12)" fg:x="358" fg:w="1"/><text x="11.9303%" y="1215.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="11.6803%" y="1189" width="0.0326%" height="15" fill="rgb(223,88,40)" fg:x="358" fg:w="1"/><text x="11.9303%" y="1199.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeString (1 samples, 0.03%)</title><rect x="11.6803%" y="1173" width="0.0326%" height="15" fill="rgb(237,54,19)" fg:x="358" fg:w="1"/><text x="11.9303%" y="1183.50"></text></g><g><title>v8::internal::IncrementalStringBuilder::Extend (1 samples, 0.03%)</title><rect x="11.6803%" y="1157" width="0.0326%" height="15" fill="rgb(251,129,25)" fg:x="358" fg:w="1"/><text x="11.9303%" y="1167.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewRawTwoByteString (1 samples, 0.03%)</title><rect x="11.6803%" y="1141" width="0.0326%" height="15" fill="rgb(238,97,19)" fg:x="358" fg:w="1"/><text x="11.9303%" y="1151.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::AllocateRawWithImmortalMap (1 samples, 0.03%)</title><rect x="11.6803%" y="1125" width="0.0326%" height="15" fill="rgb(240,169,18)" fg:x="358" fg:w="1"/><text x="11.9303%" y="1135.50"></text></g><g><title>v8::internal::Factory::AllocateRaw (1 samples, 0.03%)</title><rect x="11.6803%" y="1109" width="0.0326%" height="15" fill="rgb(230,187,49)" fg:x="358" fg:w="1"/><text x="11.9303%" y="1119.50"></text></g><g><title>v8::internal::HeapAllocator::AllocateRawWithRetryOrFailSlowPath (1 samples, 0.03%)</title><rect x="11.6803%" y="1093" width="0.0326%" height="15" fill="rgb(209,44,26)" fg:x="358" fg:w="1"/><text x="11.9303%" y="1103.50"></text></g><g><title>v8::internal::HeapAllocator::AllocateRawWithLightRetrySlowPath (1 samples, 0.03%)</title><rect x="11.6803%" y="1077" width="0.0326%" height="15" fill="rgb(244,0,6)" fg:x="358" fg:w="1"/><text x="11.9303%" y="1087.50"></text></g><g><title>v8::internal::Heap::CollectGarbage (1 samples, 0.03%)</title><rect x="11.6803%" y="1061" width="0.0326%" height="15" fill="rgb(248,18,21)" fg:x="358" fg:w="1"/><text x="11.9303%" y="1071.50"></text></g><g><title>v8::internal::Heap::PerformGarbageCollection (1 samples, 0.03%)</title><rect x="11.6803%" y="1045" width="0.0326%" height="15" fill="rgb(245,180,19)" fg:x="358" fg:w="1"/><text x="11.9303%" y="1055.50"></text></g><g><title>v8::internal::Heap::Scavenge (1 samples, 0.03%)</title><rect x="11.6803%" y="1029" width="0.0326%" height="15" fill="rgb(252,118,36)" fg:x="358" fg:w="1"/><text x="11.9303%" y="1039.50"></text></g><g><title>v8::internal::ScavengerCollector::CollectGarbage (1 samples, 0.03%)</title><rect x="11.6803%" y="1013" width="0.0326%" height="15" fill="rgb(210,224,19)" fg:x="358" fg:w="1"/><text x="11.9303%" y="1023.50"></text></g><g><title>v8::platform::DefaultJobHandle::Join (1 samples, 0.03%)</title><rect x="11.6803%" y="997" width="0.0326%" height="15" fill="rgb(218,30,24)" fg:x="358" fg:w="1"/><text x="11.9303%" y="1007.50"></text></g><g><title>v8::platform::DefaultJobState::Join (1 samples, 0.03%)</title><rect x="11.6803%" y="981" width="0.0326%" height="15" fill="rgb(219,75,50)" fg:x="358" fg:w="1"/><text x="11.9303%" y="991.50"></text></g><g><title>v8::internal::ScavengerCollector::JobTask::ProcessItems (1 samples, 0.03%)</title><rect x="11.6803%" y="965" width="0.0326%" height="15" fill="rgb(234,72,50)" fg:x="358" fg:w="1"/><text x="11.9303%" y="975.50"></text></g><g><title>v8::internal::Scavenger::Process (1 samples, 0.03%)</title><rect x="11.6803%" y="949" width="0.0326%" height="15" fill="rgb(219,100,48)" fg:x="358" fg:w="1"/><text x="11.9303%" y="959.50"></text></g><g><title>void v8::internal::BodyDescriptorBase::IteratePointers&lt;v8::internal::ScavengeVisitor&gt; (1 samples, 0.03%)</title><rect x="11.6803%" y="933" width="0.0326%" height="15" fill="rgb(253,5,41)" fg:x="358" fg:w="1"/><text x="11.9303%" y="943.50"></text></g><g><title>heap::base::SlotCallbackResult v8::internal::Scavenger::ScavengeObject&lt;v8::internal::FullHeapObjectSlot&gt; (1 samples, 0.03%)</title><rect x="11.6803%" y="917" width="0.0326%" height="15" fill="rgb(247,181,11)" fg:x="358" fg:w="1"/><text x="11.9303%" y="927.50"></text></g><g><title>heap::base::SlotCallbackResult v8::internal::Scavenger::EvacuateInPlaceInternalizableString&lt;v8::internal::FullHeapObjectSlot&gt; (1 samples, 0.03%)</title><rect x="11.6803%" y="901" width="0.0326%" height="15" fill="rgb(222,223,25)" fg:x="358" fg:w="1"/><text x="11.9303%" y="911.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="11.6803%" y="885" width="0.0326%" height="15" fill="rgb(214,198,28)" fg:x="358" fg:w="1"/><text x="11.9303%" y="895.50"></text></g><g><title>error_entry (1 samples, 0.03%)</title><rect x="11.6803%" y="869" width="0.0326%" height="15" fill="rgb(230,46,43)" fg:x="358" fg:w="1"/><text x="11.9303%" y="879.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (4 samples, 0.13%)</title><rect x="11.6150%" y="1557" width="0.1305%" height="15" fill="rgb(233,65,53)" fg:x="356" fg:w="4"/><text x="11.8650%" y="1567.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (2 samples, 0.07%)</title><rect x="11.6803%" y="1541" width="0.0653%" height="15" fill="rgb(221,121,27)" fg:x="358" fg:w="2"/><text x="11.9303%" y="1551.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.7129%" y="1525" width="0.0326%" height="15" fill="rgb(247,70,47)" fg:x="359" fg:w="1"/><text x="11.9629%" y="1535.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="11.7129%" y="1509" width="0.0326%" height="15" fill="rgb(228,85,35)" fg:x="359" fg:w="1"/><text x="11.9629%" y="1519.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeJSReceiverSlow (1 samples, 0.03%)</title><rect x="11.7129%" y="1493" width="0.0326%" height="15" fill="rgb(209,50,18)" fg:x="359" fg:w="1"/><text x="11.9629%" y="1503.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.7129%" y="1477" width="0.0326%" height="15" fill="rgb(250,19,35)" fg:x="359" fg:w="1"/><text x="11.9629%" y="1487.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.7129%" y="1461" width="0.0326%" height="15" fill="rgb(253,107,29)" fg:x="359" fg:w="1"/><text x="11.9629%" y="1471.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="11.7129%" y="1445" width="0.0326%" height="15" fill="rgb(252,179,29)" fg:x="359" fg:w="1"/><text x="11.9629%" y="1455.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeJSReceiverSlow (1 samples, 0.03%)</title><rect x="11.7129%" y="1429" width="0.0326%" height="15" fill="rgb(238,194,6)" fg:x="359" fg:w="1"/><text x="11.9629%" y="1439.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.7129%" y="1413" width="0.0326%" height="15" fill="rgb(238,164,29)" fg:x="359" fg:w="1"/><text x="11.9629%" y="1423.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.7129%" y="1397" width="0.0326%" height="15" fill="rgb(224,25,9)" fg:x="359" fg:w="1"/><text x="11.9629%" y="1407.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="11.7129%" y="1381" width="0.0326%" height="15" fill="rgb(244,153,23)" fg:x="359" fg:w="1"/><text x="11.9629%" y="1391.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeJSReceiverSlow (1 samples, 0.03%)</title><rect x="11.7129%" y="1365" width="0.0326%" height="15" fill="rgb(212,203,14)" fg:x="359" fg:w="1"/><text x="11.9629%" y="1375.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.7129%" y="1349" width="0.0326%" height="15" fill="rgb(220,164,20)" fg:x="359" fg:w="1"/><text x="11.9629%" y="1359.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.7129%" y="1333" width="0.0326%" height="15" fill="rgb(222,203,48)" fg:x="359" fg:w="1"/><text x="11.9629%" y="1343.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="11.7129%" y="1317" width="0.0326%" height="15" fill="rgb(215,159,22)" fg:x="359" fg:w="1"/><text x="11.9629%" y="1327.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.7129%" y="1301" width="0.0326%" height="15" fill="rgb(216,183,47)" fg:x="359" fg:w="1"/><text x="11.9629%" y="1311.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.7129%" y="1285" width="0.0326%" height="15" fill="rgb(229,195,25)" fg:x="359" fg:w="1"/><text x="11.9629%" y="1295.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="11.7129%" y="1269" width="0.0326%" height="15" fill="rgb(224,132,51)" fg:x="359" fg:w="1"/><text x="11.9629%" y="1279.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.7129%" y="1253" width="0.0326%" height="15" fill="rgb(240,63,7)" fg:x="359" fg:w="1"/><text x="11.9629%" y="1263.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.7129%" y="1237" width="0.0326%" height="15" fill="rgb(249,182,41)" fg:x="359" fg:w="1"/><text x="11.9629%" y="1247.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="11.7129%" y="1221" width="0.0326%" height="15" fill="rgb(243,47,26)" fg:x="359" fg:w="1"/><text x="11.9629%" y="1231.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeJSReceiverSlow (1 samples, 0.03%)</title><rect x="11.7129%" y="1205" width="0.0326%" height="15" fill="rgb(233,48,2)" fg:x="359" fg:w="1"/><text x="11.9629%" y="1215.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.7129%" y="1189" width="0.0326%" height="15" fill="rgb(244,165,34)" fg:x="359" fg:w="1"/><text x="11.9629%" y="1199.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.7129%" y="1173" width="0.0326%" height="15" fill="rgb(207,89,7)" fg:x="359" fg:w="1"/><text x="11.9629%" y="1183.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="11.7129%" y="1157" width="0.0326%" height="15" fill="rgb(244,117,36)" fg:x="359" fg:w="1"/><text x="11.9629%" y="1167.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeJSReceiverSlow (1 samples, 0.03%)</title><rect x="11.7129%" y="1141" width="0.0326%" height="15" fill="rgb(226,144,34)" fg:x="359" fg:w="1"/><text x="11.9629%" y="1151.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.7129%" y="1125" width="0.0326%" height="15" fill="rgb(213,23,19)" fg:x="359" fg:w="1"/><text x="11.9629%" y="1135.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.7129%" y="1109" width="0.0326%" height="15" fill="rgb(217,75,12)" fg:x="359" fg:w="1"/><text x="11.9629%" y="1119.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="11.7129%" y="1093" width="0.0326%" height="15" fill="rgb(224,159,17)" fg:x="359" fg:w="1"/><text x="11.9629%" y="1103.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeJSReceiverSlow (1 samples, 0.03%)</title><rect x="11.7129%" y="1077" width="0.0326%" height="15" fill="rgb(217,118,1)" fg:x="359" fg:w="1"/><text x="11.9629%" y="1087.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.7129%" y="1061" width="0.0326%" height="15" fill="rgb(232,180,48)" fg:x="359" fg:w="1"/><text x="11.9629%" y="1071.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="11.7129%" y="1045" width="0.0326%" height="15" fill="rgb(230,27,33)" fg:x="359" fg:w="1"/><text x="11.9629%" y="1055.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.7129%" y="1029" width="0.0326%" height="15" fill="rgb(205,31,21)" fg:x="359" fg:w="1"/><text x="11.9629%" y="1039.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="11.7129%" y="1013" width="0.0326%" height="15" fill="rgb(253,59,4)" fg:x="359" fg:w="1"/><text x="11.9629%" y="1023.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeString (1 samples, 0.03%)</title><rect x="11.7129%" y="997" width="0.0326%" height="15" fill="rgb(224,201,9)" fg:x="359" fg:w="1"/><text x="11.9629%" y="1007.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="11.7455%" y="1205" width="0.0326%" height="15" fill="rgb(229,206,30)" fg:x="360" fg:w="1"/><text x="11.9955%" y="1215.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.7455%" y="1189" width="0.0326%" height="15" fill="rgb(212,67,47)" fg:x="360" fg:w="1"/><text x="11.9955%" y="1199.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="11.7455%" y="1173" width="0.0326%" height="15" fill="rgb(211,96,50)" fg:x="360" fg:w="1"/><text x="11.9955%" y="1183.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.7455%" y="1157" width="0.0326%" height="15" fill="rgb(252,114,18)" fg:x="360" fg:w="1"/><text x="11.9955%" y="1167.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeString (1 samples, 0.03%)</title><rect x="11.7455%" y="1141" width="0.0326%" height="15" fill="rgb(223,58,37)" fg:x="360" fg:w="1"/><text x="11.9955%" y="1151.50"></text></g><g><title>v8::internal::IncrementalStringBuilder::Extend (1 samples, 0.03%)</title><rect x="11.7455%" y="1125" width="0.0326%" height="15" fill="rgb(237,70,4)" fg:x="360" fg:w="1"/><text x="11.9955%" y="1135.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewRawTwoByteString (1 samples, 0.03%)</title><rect x="11.7455%" y="1109" width="0.0326%" height="15" fill="rgb(244,85,46)" fg:x="360" fg:w="1"/><text x="11.9955%" y="1119.50"></text></g><g><title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::AllocateRawWithImmortalMap (1 samples, 0.03%)</title><rect x="11.7455%" y="1093" width="0.0326%" height="15" fill="rgb(223,39,52)" fg:x="360" fg:w="1"/><text x="11.9955%" y="1103.50"></text></g><g><title>v8::internal::Factory::AllocateRaw (1 samples, 0.03%)</title><rect x="11.7455%" y="1077" width="0.0326%" height="15" fill="rgb(218,200,14)" fg:x="360" fg:w="1"/><text x="11.9955%" y="1087.50"></text></g><g><title>v8::internal::HeapAllocator::AllocateRawWithRetryOrFailSlowPath (1 samples, 0.03%)</title><rect x="11.7455%" y="1061" width="0.0326%" height="15" fill="rgb(208,171,16)" fg:x="360" fg:w="1"/><text x="11.9955%" y="1071.50"></text></g><g><title>v8::internal::HeapAllocator::AllocateRawWithLightRetrySlowPath (1 samples, 0.03%)</title><rect x="11.7455%" y="1045" width="0.0326%" height="15" fill="rgb(234,200,18)" fg:x="360" fg:w="1"/><text x="11.9955%" y="1055.50"></text></g><g><title>v8::internal::Heap::CollectGarbage (1 samples, 0.03%)</title><rect x="11.7455%" y="1029" width="0.0326%" height="15" fill="rgb(228,45,11)" fg:x="360" fg:w="1"/><text x="11.9955%" y="1039.50"></text></g><g><title>v8::internal::Heap::PerformGarbageCollection (1 samples, 0.03%)</title><rect x="11.7455%" y="1013" width="0.0326%" height="15" fill="rgb(237,182,11)" fg:x="360" fg:w="1"/><text x="11.9955%" y="1023.50"></text></g><g><title>v8::internal::Heap::GarbageCollectionPrologueInSafepoint (1 samples, 0.03%)</title><rect x="11.7455%" y="997" width="0.0326%" height="15" fill="rgb(241,175,49)" fg:x="360" fg:w="1"/><text x="11.9955%" y="1007.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::Grow (1 samples, 0.03%)</title><rect x="11.7455%" y="981" width="0.0326%" height="15" fill="rgb(247,38,35)" fg:x="360" fg:w="1"/><text x="11.9955%" y="991.50"></text></g><g><title>v8::internal::SemiSpace::GrowTo (1 samples, 0.03%)</title><rect x="11.7455%" y="965" width="0.0326%" height="15" fill="rgb(228,39,49)" fg:x="360" fg:w="1"/><text x="11.9955%" y="975.50"></text></g><g><title>v8::internal::MemoryAllocator::AllocatePage (1 samples, 0.03%)</title><rect x="11.7455%" y="949" width="0.0326%" height="15" fill="rgb(226,101,26)" fg:x="360" fg:w="1"/><text x="11.9955%" y="959.50"></text></g><g><title>v8::internal::MemoryAllocator::AllocateUninitializedChunkAt (1 samples, 0.03%)</title><rect x="11.7455%" y="933" width="0.0326%" height="15" fill="rgb(206,141,19)" fg:x="360" fg:w="1"/><text x="11.9955%" y="943.50"></text></g><g><title>v8::internal::MemoryAllocator::AllocateAlignedMemory (1 samples, 0.03%)</title><rect x="11.7455%" y="917" width="0.0326%" height="15" fill="rgb(211,200,13)" fg:x="360" fg:w="1"/><text x="11.9955%" y="927.50"></text></g><g><title>v8::internal::VirtualMemory::VirtualMemory (1 samples, 0.03%)</title><rect x="11.7455%" y="901" width="0.0326%" height="15" fill="rgb(241,121,6)" fg:x="360" fg:w="1"/><text x="11.9955%" y="911.50"></text></g><g><title>v8::base::OS::Allocate (1 samples, 0.03%)</title><rect x="11.7455%" y="885" width="0.0326%" height="15" fill="rgb(234,221,29)" fg:x="360" fg:w="1"/><text x="11.9955%" y="895.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.03%)</title><rect x="11.7455%" y="869" width="0.0326%" height="15" fill="rgb(229,136,5)" fg:x="360" fg:w="1"/><text x="11.9955%" y="879.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.03%)</title><rect x="11.7455%" y="853" width="0.0326%" height="15" fill="rgb(238,36,11)" fg:x="360" fg:w="1"/><text x="11.9955%" y="863.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="11.7455%" y="837" width="0.0326%" height="15" fill="rgb(251,55,41)" fg:x="360" fg:w="1"/><text x="11.9955%" y="847.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="11.7455%" y="821" width="0.0326%" height="15" fill="rgb(242,34,40)" fg:x="360" fg:w="1"/><text x="11.9955%" y="831.50"></text></g><g><title>__x64_sys_mmap (1 samples, 0.03%)</title><rect x="11.7455%" y="805" width="0.0326%" height="15" fill="rgb(215,42,17)" fg:x="360" fg:w="1"/><text x="11.9955%" y="815.50"></text></g><g><title>ksys_mmap_pgoff (1 samples, 0.03%)</title><rect x="11.7455%" y="789" width="0.0326%" height="15" fill="rgb(207,44,46)" fg:x="360" fg:w="1"/><text x="11.9955%" y="799.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.03%)</title><rect x="11.7455%" y="773" width="0.0326%" height="15" fill="rgb(211,206,28)" fg:x="360" fg:w="1"/><text x="11.9955%" y="783.50"></text></g><g><title>do_mmap (1 samples, 0.03%)</title><rect x="11.7455%" y="757" width="0.0326%" height="15" fill="rgb(237,167,16)" fg:x="360" fg:w="1"/><text x="11.9955%" y="767.50"></text></g><g><title>mmap_region (1 samples, 0.03%)</title><rect x="11.7455%" y="741" width="0.0326%" height="15" fill="rgb(233,66,6)" fg:x="360" fg:w="1"/><text x="11.9955%" y="751.50"></text></g><g><title>perf_event_mmap (1 samples, 0.03%)</title><rect x="11.7455%" y="725" width="0.0326%" height="15" fill="rgb(246,123,29)" fg:x="360" fg:w="1"/><text x="11.9955%" y="735.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.03%)</title><rect x="11.7455%" y="709" width="0.0326%" height="15" fill="rgb(209,62,40)" fg:x="360" fg:w="1"/><text x="11.9955%" y="719.50"></text></g><g><title>perf_event_mmap_output (1 samples, 0.03%)</title><rect x="11.7455%" y="693" width="0.0326%" height="15" fill="rgb(218,4,25)" fg:x="360" fg:w="1"/><text x="11.9955%" y="703.50"></text></g><g><title>perf_output_begin (1 samples, 0.03%)</title><rect x="11.7455%" y="677" width="0.0326%" height="15" fill="rgb(253,91,49)" fg:x="360" fg:w="1"/><text x="11.9955%" y="687.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeJSReceiverSlow (2 samples, 0.07%)</title><rect x="11.7455%" y="1557" width="0.0653%" height="15" fill="rgb(228,155,29)" fg:x="360" fg:w="2"/><text x="11.9955%" y="1567.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (2 samples, 0.07%)</title><rect x="11.7455%" y="1541" width="0.0653%" height="15" fill="rgb(243,57,37)" fg:x="360" fg:w="2"/><text x="11.9955%" y="1551.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (2 samples, 0.07%)</title><rect x="11.7455%" y="1525" width="0.0653%" height="15" fill="rgb(244,167,17)" fg:x="360" fg:w="2"/><text x="11.9955%" y="1535.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (2 samples, 0.07%)</title><rect x="11.7455%" y="1509" width="0.0653%" height="15" fill="rgb(207,181,38)" fg:x="360" fg:w="2"/><text x="11.9955%" y="1519.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeJSReceiverSlow (2 samples, 0.07%)</title><rect x="11.7455%" y="1493" width="0.0653%" height="15" fill="rgb(211,8,23)" fg:x="360" fg:w="2"/><text x="11.9955%" y="1503.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (2 samples, 0.07%)</title><rect x="11.7455%" y="1477" width="0.0653%" height="15" fill="rgb(235,11,44)" fg:x="360" fg:w="2"/><text x="11.9955%" y="1487.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (2 samples, 0.07%)</title><rect x="11.7455%" y="1461" width="0.0653%" height="15" fill="rgb(248,18,52)" fg:x="360" fg:w="2"/><text x="11.9955%" y="1471.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (2 samples, 0.07%)</title><rect x="11.7455%" y="1445" width="0.0653%" height="15" fill="rgb(208,4,7)" fg:x="360" fg:w="2"/><text x="11.9955%" y="1455.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeJSReceiverSlow (2 samples, 0.07%)</title><rect x="11.7455%" y="1429" width="0.0653%" height="15" fill="rgb(240,17,39)" fg:x="360" fg:w="2"/><text x="11.9955%" y="1439.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (2 samples, 0.07%)</title><rect x="11.7455%" y="1413" width="0.0653%" height="15" fill="rgb(207,170,3)" fg:x="360" fg:w="2"/><text x="11.9955%" y="1423.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (2 samples, 0.07%)</title><rect x="11.7455%" y="1397" width="0.0653%" height="15" fill="rgb(236,100,52)" fg:x="360" fg:w="2"/><text x="11.9955%" y="1407.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (2 samples, 0.07%)</title><rect x="11.7455%" y="1381" width="0.0653%" height="15" fill="rgb(246,78,51)" fg:x="360" fg:w="2"/><text x="11.9955%" y="1391.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeJSReceiverSlow (2 samples, 0.07%)</title><rect x="11.7455%" y="1365" width="0.0653%" height="15" fill="rgb(211,17,15)" fg:x="360" fg:w="2"/><text x="11.9955%" y="1375.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (2 samples, 0.07%)</title><rect x="11.7455%" y="1349" width="0.0653%" height="15" fill="rgb(209,59,46)" fg:x="360" fg:w="2"/><text x="11.9955%" y="1359.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (2 samples, 0.07%)</title><rect x="11.7455%" y="1333" width="0.0653%" height="15" fill="rgb(210,92,25)" fg:x="360" fg:w="2"/><text x="11.9955%" y="1343.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (2 samples, 0.07%)</title><rect x="11.7455%" y="1317" width="0.0653%" height="15" fill="rgb(238,174,52)" fg:x="360" fg:w="2"/><text x="11.9955%" y="1327.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeJSReceiverSlow (2 samples, 0.07%)</title><rect x="11.7455%" y="1301" width="0.0653%" height="15" fill="rgb(230,73,7)" fg:x="360" fg:w="2"/><text x="11.9955%" y="1311.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (2 samples, 0.07%)</title><rect x="11.7455%" y="1285" width="0.0653%" height="15" fill="rgb(243,124,40)" fg:x="360" fg:w="2"/><text x="11.9955%" y="1295.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (2 samples, 0.07%)</title><rect x="11.7455%" y="1269" width="0.0653%" height="15" fill="rgb(244,170,11)" fg:x="360" fg:w="2"/><text x="11.9955%" y="1279.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (2 samples, 0.07%)</title><rect x="11.7455%" y="1253" width="0.0653%" height="15" fill="rgb(207,114,54)" fg:x="360" fg:w="2"/><text x="11.9955%" y="1263.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeJSReceiverSlow (2 samples, 0.07%)</title><rect x="11.7455%" y="1237" width="0.0653%" height="15" fill="rgb(205,42,20)" fg:x="360" fg:w="2"/><text x="11.9955%" y="1247.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (2 samples, 0.07%)</title><rect x="11.7455%" y="1221" width="0.0653%" height="15" fill="rgb(230,30,28)" fg:x="360" fg:w="2"/><text x="11.9955%" y="1231.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.7781%" y="1205" width="0.0326%" height="15" fill="rgb(205,73,54)" fg:x="361" fg:w="1"/><text x="12.0281%" y="1215.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="11.7781%" y="1189" width="0.0326%" height="15" fill="rgb(254,227,23)" fg:x="361" fg:w="1"/><text x="12.0281%" y="1199.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeJSReceiverSlow (1 samples, 0.03%)</title><rect x="11.7781%" y="1173" width="0.0326%" height="15" fill="rgb(228,202,34)" fg:x="361" fg:w="1"/><text x="12.0281%" y="1183.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.7781%" y="1157" width="0.0326%" height="15" fill="rgb(222,225,37)" fg:x="361" fg:w="1"/><text x="12.0281%" y="1167.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.7781%" y="1141" width="0.0326%" height="15" fill="rgb(221,14,54)" fg:x="361" fg:w="1"/><text x="12.0281%" y="1151.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="11.7781%" y="1125" width="0.0326%" height="15" fill="rgb(254,102,2)" fg:x="361" fg:w="1"/><text x="12.0281%" y="1135.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeJSReceiverSlow (1 samples, 0.03%)</title><rect x="11.7781%" y="1109" width="0.0326%" height="15" fill="rgb(232,104,17)" fg:x="361" fg:w="1"/><text x="12.0281%" y="1119.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.7781%" y="1093" width="0.0326%" height="15" fill="rgb(250,220,14)" fg:x="361" fg:w="1"/><text x="12.0281%" y="1103.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.7781%" y="1077" width="0.0326%" height="15" fill="rgb(241,158,9)" fg:x="361" fg:w="1"/><text x="12.0281%" y="1087.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="11.7781%" y="1061" width="0.0326%" height="15" fill="rgb(246,9,43)" fg:x="361" fg:w="1"/><text x="12.0281%" y="1071.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeJSReceiverSlow (1 samples, 0.03%)</title><rect x="11.7781%" y="1045" width="0.0326%" height="15" fill="rgb(206,73,33)" fg:x="361" fg:w="1"/><text x="12.0281%" y="1055.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.7781%" y="1029" width="0.0326%" height="15" fill="rgb(222,79,8)" fg:x="361" fg:w="1"/><text x="12.0281%" y="1039.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1 samples, 0.03%)</title><rect x="11.7781%" y="1013" width="0.0326%" height="15" fill="rgb(234,8,54)" fg:x="361" fg:w="1"/><text x="12.0281%" y="1023.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (1 samples, 0.03%)</title><rect x="11.7781%" y="997" width="0.0326%" height="15" fill="rgb(209,134,38)" fg:x="361" fg:w="1"/><text x="12.0281%" y="1007.50"></text></g><g><title>v8::internal::libc_memchr (1 samples, 0.03%)</title><rect x="11.8108%" y="1557" width="0.0326%" height="15" fill="rgb(230,127,29)" fg:x="362" fg:w="1"/><text x="12.0608%" y="1567.50"></text></g><g><title>[unknown] (47 samples, 1.53%)</title><rect x="10.3752%" y="1573" width="1.5334%" height="15" fill="rgb(242,44,41)" fg:x="318" fg:w="47"/><text x="10.6252%" y="1583.50"></text></g><g><title>void v8::internal::MarkingVisitorBase&lt;v8::internal::ConcurrentMarkingVisitor, v8::internal::ConcurrentMarkingState&gt;::ProcessStrongHeapObject&lt;v8::internal::FullHeapObjectSlot&gt; (2 samples, 0.07%)</title><rect x="11.8434%" y="1557" width="0.0653%" height="15" fill="rgb(222,56,43)" fg:x="363" fg:w="2"/><text x="12.0934%" y="1567.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="11.9086%" y="1493" width="0.0326%" height="15" fill="rgb(238,39,47)" fg:x="365" fg:w="1"/><text x="12.1586%" y="1503.50"></text></g><g><title>exc_page_fault (1 samples, 0.03%)</title><rect x="11.9086%" y="1477" width="0.0326%" height="15" fill="rgb(226,79,43)" fg:x="365" fg:w="1"/><text x="12.1586%" y="1487.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="11.9086%" y="1461" width="0.0326%" height="15" fill="rgb(242,105,53)" fg:x="365" fg:w="1"/><text x="12.1586%" y="1471.50"></text></g><g><title>handle_mm_fault (1 samples, 0.03%)</title><rect x="11.9086%" y="1445" width="0.0326%" height="15" fill="rgb(251,132,46)" fg:x="365" fg:w="1"/><text x="12.1586%" y="1455.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="11.9086%" y="1429" width="0.0326%" height="15" fill="rgb(231,77,14)" fg:x="365" fg:w="1"/><text x="12.1586%" y="1439.50"></text></g><g><title>do_wp_page (1 samples, 0.03%)</title><rect x="11.9086%" y="1413" width="0.0326%" height="15" fill="rgb(240,135,9)" fg:x="365" fg:w="1"/><text x="12.1586%" y="1423.50"></text></g><g><title>folio_add_lru_vma (1 samples, 0.03%)</title><rect x="11.9086%" y="1397" width="0.0326%" height="15" fill="rgb(248,109,14)" fg:x="365" fg:w="1"/><text x="12.1586%" y="1407.50"></text></g><g><title>folio_add_lru (1 samples, 0.03%)</title><rect x="11.9086%" y="1381" width="0.0326%" height="15" fill="rgb(227,146,52)" fg:x="365" fg:w="1"/><text x="12.1586%" y="1391.50"></text></g><g><title>lru_add_fn (1 samples, 0.03%)</title><rect x="11.9086%" y="1365" width="0.0326%" height="15" fill="rgb(232,54,3)" fg:x="365" fg:w="1"/><text x="12.1586%" y="1375.50"></text></g><g><title>handle_mm_fault (1 samples, 0.03%)</title><rect x="11.9413%" y="1413" width="0.0326%" height="15" fill="rgb(229,201,43)" fg:x="366" fg:w="1"/><text x="12.1913%" y="1423.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="11.9413%" y="1397" width="0.0326%" height="15" fill="rgb(252,161,33)" fg:x="366" fg:w="1"/><text x="12.1913%" y="1407.50"></text></g><g><title>srso_safe_ret (1 samples, 0.03%)</title><rect x="11.9413%" y="1381" width="0.0326%" height="15" fill="rgb(226,146,40)" fg:x="366" fg:w="1"/><text x="12.1913%" y="1391.50"></text></g><g><title>std::_Function_handler&lt;void (), v8::internal::ArrayBufferSweeper::RequestSweep(v8::internal::ArrayBufferSweeper::SweepingType, v8::internal::ArrayBufferSweeper::TreatAllYoungAsPromoted)::{lambda()#1}&gt;::_M_invoke (3 samples, 0.10%)</title><rect x="11.9086%" y="1525" width="0.0979%" height="15" fill="rgb(219,47,25)" fg:x="365" fg:w="3"/><text x="12.1586%" y="1535.50"></text></g><g><title>v8::internal::ArrayBufferSweeper::SweepingJob::SweepYoung (3 samples, 0.10%)</title><rect x="11.9086%" y="1509" width="0.0979%" height="15" fill="rgb(250,135,13)" fg:x="365" fg:w="3"/><text x="12.1586%" y="1519.50"></text></g><g><title>std::_Sp_counted_deleter&lt;v8::internal::BackingStore*, std::default_delete&lt;v8::internal::BackingStore&gt;, std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (2 samples, 0.07%)</title><rect x="11.9413%" y="1493" width="0.0653%" height="15" fill="rgb(219,229,18)" fg:x="366" fg:w="2"/><text x="12.1913%" y="1503.50"></text></g><g><title>v8::internal::BackingStore::Clear (2 samples, 0.07%)</title><rect x="11.9413%" y="1477" width="0.0653%" height="15" fill="rgb(217,152,27)" fg:x="366" fg:w="2"/><text x="12.1913%" y="1487.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.07%)</title><rect x="11.9413%" y="1461" width="0.0653%" height="15" fill="rgb(225,71,47)" fg:x="366" fg:w="2"/><text x="12.1913%" y="1471.50"></text></g><g><title>exc_page_fault (2 samples, 0.07%)</title><rect x="11.9413%" y="1445" width="0.0653%" height="15" fill="rgb(220,139,14)" fg:x="366" fg:w="2"/><text x="12.1913%" y="1455.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.07%)</title><rect x="11.9413%" y="1429" width="0.0653%" height="15" fill="rgb(247,54,32)" fg:x="366" fg:w="2"/><text x="12.1913%" y="1439.50"></text></g><g><title>lock_vma_under_rcu (1 samples, 0.03%)</title><rect x="11.9739%" y="1413" width="0.0326%" height="15" fill="rgb(252,131,39)" fg:x="367" fg:w="1"/><text x="12.2239%" y="1423.50"></text></g><g><title>v8::internal::compiler::(anonymous namespace)::SourcePositionWrapper::Reduce (1 samples, 0.03%)</title><rect x="12.0065%" y="1381" width="0.0326%" height="15" fill="rgb(210,108,39)" fg:x="368" fg:w="1"/><text x="12.2565%" y="1391.50"></text></g><g><title>v8::internal::compiler::Node::ClearInputs (1 samples, 0.03%)</title><rect x="12.0065%" y="1365" width="0.0326%" height="15" fill="rgb(205,23,29)" fg:x="368" fg:w="1"/><text x="12.2565%" y="1375.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::CreateGraph (2 samples, 0.07%)</title><rect x="12.0065%" y="1461" width="0.0653%" height="15" fill="rgb(246,139,46)" fg:x="368" fg:w="2"/><text x="12.2565%" y="1471.50"></text></g><g><title>v8::internal::compiler::InliningPhase::Run (2 samples, 0.07%)</title><rect x="12.0065%" y="1445" width="0.0653%" height="15" fill="rgb(250,81,26)" fg:x="368" fg:w="2"/><text x="12.2565%" y="1455.50"></text></g><g><title>v8::internal::compiler::GraphReducer::ReduceNode (2 samples, 0.07%)</title><rect x="12.0065%" y="1429" width="0.0653%" height="15" fill="rgb(214,104,7)" fg:x="368" fg:w="2"/><text x="12.2565%" y="1439.50"></text></g><g><title>v8::internal::compiler::GraphReducer::ReduceTop (2 samples, 0.07%)</title><rect x="12.0065%" y="1413" width="0.0653%" height="15" fill="rgb(233,189,8)" fg:x="368" fg:w="2"/><text x="12.2565%" y="1423.50"></text></g><g><title>v8::internal::compiler::GraphReducer::Reduce (2 samples, 0.07%)</title><rect x="12.0065%" y="1397" width="0.0653%" height="15" fill="rgb(228,141,17)" fg:x="368" fg:w="2"/><text x="12.2565%" y="1407.50"></text></g><g><title>v8::internal::compiler::GraphReducer::ReduceTop (1 samples, 0.03%)</title><rect x="12.0392%" y="1381" width="0.0326%" height="15" fill="rgb(247,157,1)" fg:x="369" fg:w="1"/><text x="12.2892%" y="1391.50"></text></g><g><title>v8::internal::compiler::GraphReducer::ReduceNode (1 samples, 0.03%)</title><rect x="12.0718%" y="1445" width="0.0326%" height="15" fill="rgb(249,225,5)" fg:x="370" fg:w="1"/><text x="12.3218%" y="1455.50"></text></g><g><title>v8::internal::compiler::GraphReducer::ReduceTop (1 samples, 0.03%)</title><rect x="12.0718%" y="1429" width="0.0326%" height="15" fill="rgb(242,55,13)" fg:x="370" fg:w="1"/><text x="12.3218%" y="1439.50"></text></g><g><title>v8::internal::compiler::GraphReducer::Reduce (1 samples, 0.03%)</title><rect x="12.0718%" y="1413" width="0.0326%" height="15" fill="rgb(230,49,50)" fg:x="370" fg:w="1"/><text x="12.3218%" y="1423.50"></text></g><g><title>v8::internal::compiler::GraphReducer::ReduceTop (1 samples, 0.03%)</title><rect x="12.0718%" y="1397" width="0.0326%" height="15" fill="rgb(241,111,38)" fg:x="370" fg:w="1"/><text x="12.3218%" y="1407.50"></text></g><g><title>v8::internal::compiler::InstructionSelector::SelectInstructions (1 samples, 0.03%)</title><rect x="12.1044%" y="1429" width="0.0326%" height="15" fill="rgb(252,155,4)" fg:x="371" fg:w="1"/><text x="12.3544%" y="1439.50"></text></g><g><title>v8::internal::compiler::InstructionSelector::IsOnlyUserOfNodeInSameBlock (1 samples, 0.03%)</title><rect x="12.1044%" y="1413" width="0.0326%" height="15" fill="rgb(212,69,32)" fg:x="371" fg:w="1"/><text x="12.3544%" y="1423.50"></text></g><g><title>v8::internal::OptimizingCompileDispatcher::CompileTask::RunInternal (5 samples, 0.16%)</title><rect x="12.0065%" y="1525" width="0.1631%" height="15" fill="rgb(243,107,47)" fg:x="368" fg:w="5"/><text x="12.2565%" y="1535.50"></text></g><g><title>v8::internal::OptimizingCompileDispatcher::CompileNext (5 samples, 0.16%)</title><rect x="12.0065%" y="1509" width="0.1631%" height="15" fill="rgb(247,130,12)" fg:x="368" fg:w="5"/><text x="12.2565%" y="1519.50"></text></g><g><title>v8::internal::OptimizedCompilationJob::ExecuteJob (5 samples, 0.16%)</title><rect x="12.0065%" y="1493" width="0.1631%" height="15" fill="rgb(233,74,16)" fg:x="368" fg:w="5"/><text x="12.2565%" y="1503.50"></text></g><g><title>v8::internal::compiler::PipelineCompilationJob::ExecuteJobImpl (5 samples, 0.16%)</title><rect x="12.0065%" y="1477" width="0.1631%" height="15" fill="rgb(208,58,18)" fg:x="368" fg:w="5"/><text x="12.2565%" y="1487.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::OptimizeGraph (3 samples, 0.10%)</title><rect x="12.0718%" y="1461" width="0.0979%" height="15" fill="rgb(242,225,1)" fg:x="370" fg:w="3"/><text x="12.3218%" y="1471.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::SelectInstructions (2 samples, 0.07%)</title><rect x="12.1044%" y="1445" width="0.0653%" height="15" fill="rgb(249,39,40)" fg:x="371" fg:w="2"/><text x="12.3544%" y="1455.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::AllocateRegistersForTopTier (1 samples, 0.03%)</title><rect x="12.1370%" y="1429" width="0.0326%" height="15" fill="rgb(207,72,44)" fg:x="372" fg:w="1"/><text x="12.3870%" y="1439.50"></text></g><g><title>v8::internal::compiler::LiveRangeConnector::ResolveControlFlow (1 samples, 0.03%)</title><rect x="12.1370%" y="1413" width="0.0326%" height="15" fill="rgb(215,193,12)" fg:x="372" fg:w="1"/><text x="12.3870%" y="1423.50"></text></g><g><title>std::__detail::_Map_base&lt;v8::internal::MemoryChunk*, std::pair&lt;v8::internal::MemoryChunk* const, v8::internal::MemoryChunkData&gt;, std::allocator&lt;std::pair&lt;v8::internal::MemoryChunk* const, v8::internal::MemoryChunkData&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;v8::internal::MemoryChunk*&gt;, v8::internal::BasicMemoryChunk::Hasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (10 samples, 0.33%)</title><rect x="12.1697%" y="1493" width="0.3263%" height="15" fill="rgb(248,41,39)" fg:x="373" fg:w="10"/><text x="12.4197%" y="1503.50"></text></g><g><title>__GI___libc_free (1 samples, 0.03%)</title><rect x="13.0506%" y="1477" width="0.0326%" height="15" fill="rgb(253,85,4)" fg:x="400" fg:w="1"/><text x="13.3006%" y="1487.50"></text></g><g><title>_int_free (1 samples, 0.03%)</title><rect x="13.0506%" y="1461" width="0.0326%" height="15" fill="rgb(243,70,31)" fg:x="400" fg:w="1"/><text x="13.3006%" y="1471.50"></text></g><g><title>__GI___lll_lock_wait_private (1 samples, 0.03%)</title><rect x="13.0506%" y="1445" width="0.0326%" height="15" fill="rgb(253,195,26)" fg:x="400" fg:w="1"/><text x="13.3006%" y="1455.50"></text></g><g><title>futex_wait (1 samples, 0.03%)</title><rect x="13.0506%" y="1429" width="0.0326%" height="15" fill="rgb(243,42,11)" fg:x="400" fg:w="1"/><text x="13.3006%" y="1439.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="13.0506%" y="1413" width="0.0326%" height="15" fill="rgb(239,66,17)" fg:x="400" fg:w="1"/><text x="13.3006%" y="1423.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="13.0506%" y="1397" width="0.0326%" height="15" fill="rgb(217,132,21)" fg:x="400" fg:w="1"/><text x="13.3006%" y="1407.50"></text></g><g><title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="13.0506%" y="1381" width="0.0326%" height="15" fill="rgb(252,202,21)" fg:x="400" fg:w="1"/><text x="13.3006%" y="1391.50"></text></g><g><title>do_futex (1 samples, 0.03%)</title><rect x="13.0506%" y="1365" width="0.0326%" height="15" fill="rgb(233,98,36)" fg:x="400" fg:w="1"/><text x="13.3006%" y="1375.50"></text></g><g><title>futex_wait (1 samples, 0.03%)</title><rect x="13.0506%" y="1349" width="0.0326%" height="15" fill="rgb(216,153,54)" fg:x="400" fg:w="1"/><text x="13.3006%" y="1359.50"></text></g><g><title>futex_wait_queue (1 samples, 0.03%)</title><rect x="13.0506%" y="1333" width="0.0326%" height="15" fill="rgb(250,99,7)" fg:x="400" fg:w="1"/><text x="13.3006%" y="1343.50"></text></g><g><title>schedule (1 samples, 0.03%)</title><rect x="13.0506%" y="1317" width="0.0326%" height="15" fill="rgb(207,56,50)" fg:x="400" fg:w="1"/><text x="13.3006%" y="1327.50"></text></g><g><title>__schedule (1 samples, 0.03%)</title><rect x="13.0506%" y="1301" width="0.0326%" height="15" fill="rgb(244,61,34)" fg:x="400" fg:w="1"/><text x="13.3006%" y="1311.50"></text></g><g><title>___pthread_rwlock_rdlock (1 samples, 0.03%)</title><rect x="13.0832%" y="1477" width="0.0326%" height="15" fill="rgb(241,50,38)" fg:x="401" fg:w="1"/><text x="13.3332%" y="1487.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="13.0832%" y="1461" width="0.0326%" height="15" fill="rgb(212,166,30)" fg:x="401" fg:w="1"/><text x="13.3332%" y="1471.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="13.0832%" y="1445" width="0.0326%" height="15" fill="rgb(249,127,32)" fg:x="401" fg:w="1"/><text x="13.3332%" y="1455.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="13.0832%" y="1429" width="0.0326%" height="15" fill="rgb(209,103,0)" fg:x="401" fg:w="1"/><text x="13.3332%" y="1439.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.03%)</title><rect x="13.0832%" y="1413" width="0.0326%" height="15" fill="rgb(238,209,51)" fg:x="401" fg:w="1"/><text x="13.3332%" y="1423.50"></text></g><g><title>___pthread_rwlock_unlock (1 samples, 0.03%)</title><rect x="13.1158%" y="1477" width="0.0326%" height="15" fill="rgb(237,56,23)" fg:x="402" fg:w="1"/><text x="13.3658%" y="1487.50"></text></g><g><title>__pthread_rwlock_rdunlock (1 samples, 0.03%)</title><rect x="13.1158%" y="1461" width="0.0326%" height="15" fill="rgb(215,153,46)" fg:x="402" fg:w="1"/><text x="13.3658%" y="1471.50"></text></g><g><title>__pthread_rwlock_get_private (1 samples, 0.03%)</title><rect x="13.1158%" y="1445" width="0.0326%" height="15" fill="rgb(224,49,31)" fg:x="402" fg:w="1"/><text x="13.3658%" y="1455.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="13.1485%" y="1477" width="0.0326%" height="15" fill="rgb(250,18,42)" fg:x="403" fg:w="1"/><text x="13.3985%" y="1487.50"></text></g><g><title>exc_page_fault (1 samples, 0.03%)</title><rect x="13.1485%" y="1461" width="0.0326%" height="15" fill="rgb(215,176,39)" fg:x="403" fg:w="1"/><text x="13.3985%" y="1471.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="13.1485%" y="1445" width="0.0326%" height="15" fill="rgb(223,77,29)" fg:x="403" fg:w="1"/><text x="13.3985%" y="1455.50"></text></g><g><title>handle_mm_fault (1 samples, 0.03%)</title><rect x="13.1485%" y="1429" width="0.0326%" height="15" fill="rgb(234,94,52)" fg:x="403" fg:w="1"/><text x="13.3985%" y="1439.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="13.1485%" y="1413" width="0.0326%" height="15" fill="rgb(220,154,50)" fg:x="403" fg:w="1"/><text x="13.3985%" y="1423.50"></text></g><g><title>do_wp_page (1 samples, 0.03%)</title><rect x="13.1485%" y="1397" width="0.0326%" height="15" fill="rgb(212,11,10)" fg:x="403" fg:w="1"/><text x="13.3985%" y="1407.50"></text></g><g><title>memcpy_orig (1 samples, 0.03%)</title><rect x="13.1485%" y="1381" width="0.0326%" height="15" fill="rgb(205,166,19)" fg:x="403" fg:w="1"/><text x="13.3985%" y="1391.50"></text></g><g><title>int v8::internal::MarkingVisitorBase&lt;v8::internal::ConcurrentMarkingVisitor, v8::internal::ConcurrentMarkingState&gt;::VisitEmbedderTracingSubclass&lt;v8::internal::JSTypedArray&gt; (2 samples, 0.07%)</title><rect x="13.1811%" y="1477" width="0.0653%" height="15" fill="rgb(244,198,16)" fg:x="404" fg:w="2"/><text x="13.4311%" y="1487.50"></text></g><g><title>int v8::internal::MarkingVisitorBase&lt;v8::internal::ConcurrentMarkingVisitor, v8::internal::ConcurrentMarkingState&gt;::VisitEmbedderTracingSubclass&lt;v8::internal::JSTypedArray&gt; (1 samples, 0.03%)</title><rect x="13.2137%" y="1461" width="0.0326%" height="15" fill="rgb(219,69,12)" fg:x="405" fg:w="1"/><text x="13.4637%" y="1471.50"></text></g><g><title>std::__detail::_Map_base&lt;v8::internal::MemoryChunk*, std::pair&lt;v8::internal::MemoryChunk* const, v8::internal::MemoryChunkData&gt;, std::allocator&lt;std::pair&lt;v8::internal::MemoryChunk* const, v8::internal::MemoryChunkData&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;v8::internal::MemoryChunk*&gt;, v8::internal::BasicMemoryChunk::Hasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (4 samples, 0.13%)</title><rect x="13.2463%" y="1477" width="0.1305%" height="15" fill="rgb(245,30,7)" fg:x="406" fg:w="4"/><text x="13.4963%" y="1487.50"></text></g><g><title>v8::internal::ConcurrentMarking::RunMajor (4 samples, 0.13%)</title><rect x="13.3768%" y="1477" width="0.1305%" height="15" fill="rgb(218,221,48)" fg:x="410" fg:w="4"/><text x="13.6268%" y="1487.50"></text></g><g><title>v8::internal::ConcurrentMarkingVisitor::ShouldVisit (2 samples, 0.07%)</title><rect x="13.5073%" y="1477" width="0.0653%" height="15" fill="rgb(216,66,15)" fg:x="414" fg:w="2"/><text x="13.7573%" y="1487.50"></text></g><g><title>v8::internal::ConcurrentMarking::RunMajor (5 samples, 0.16%)</title><rect x="13.5726%" y="1461" width="0.1631%" height="15" fill="rgb(226,122,50)" fg:x="416" fg:w="5"/><text x="13.8226%" y="1471.50"></text></g><g><title>v8::internal::MarkingVisitorBase&lt;v8::internal::ConcurrentMarkingVisitor, v8::internal::ConcurrentMarkingState&gt;::VisitMapPointer (1 samples, 0.03%)</title><rect x="13.7357%" y="1461" width="0.0326%" height="15" fill="rgb(239,156,16)" fg:x="421" fg:w="1"/><text x="13.9857%" y="1471.50"></text></g><g><title>void v8::internal::BodyDescriptorBase::IteratePointers&lt;v8::internal::ConcurrentMarkingVisitor&gt; (1 samples, 0.03%)</title><rect x="13.7684%" y="1461" width="0.0326%" height="15" fill="rgb(224,27,38)" fg:x="422" fg:w="1"/><text x="14.0184%" y="1471.50"></text></g><g><title>void v8::internal::BodyDescriptorBase::IteratePointers&lt;v8::internal::ConcurrentMarkingVisitor&gt; (16 samples, 0.52%)</title><rect x="13.5726%" y="1477" width="0.5220%" height="15" fill="rgb(224,39,27)" fg:x="416" fg:w="16"/><text x="13.8226%" y="1487.50"></text></g><g><title>void v8::internal::MarkingVisitorBase&lt;v8::internal::ConcurrentMarkingVisitor, v8::internal::ConcurrentMarkingState&gt;::ProcessStrongHeapObject&lt;v8::internal::FullHeapObjectSlot&gt; (9 samples, 0.29%)</title><rect x="13.8010%" y="1461" width="0.2936%" height="15" fill="rgb(215,92,29)" fg:x="423" fg:w="9"/><text x="14.0510%" y="1471.50"></text></g><g><title>heap::base::Worklist&lt;v8::internal::HeapObject, (unsigned short)64&gt;::Local::PublishPushSegment (1 samples, 0.03%)</title><rect x="14.0620%" y="1445" width="0.0326%" height="15" fill="rgb(207,159,16)" fg:x="431" fg:w="1"/><text x="14.3120%" y="1455.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.03%)</title><rect x="14.0620%" y="1429" width="0.0326%" height="15" fill="rgb(238,163,47)" fg:x="431" fg:w="1"/><text x="14.3120%" y="1439.50"></text></g><g><title>__GI___lll_lock_wait_private (1 samples, 0.03%)</title><rect x="14.0620%" y="1413" width="0.0326%" height="15" fill="rgb(219,91,49)" fg:x="431" fg:w="1"/><text x="14.3120%" y="1423.50"></text></g><g><title>futex_wait (1 samples, 0.03%)</title><rect x="14.0620%" y="1397" width="0.0326%" height="15" fill="rgb(227,167,31)" fg:x="431" fg:w="1"/><text x="14.3120%" y="1407.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="14.0620%" y="1381" width="0.0326%" height="15" fill="rgb(234,80,54)" fg:x="431" fg:w="1"/><text x="14.3120%" y="1391.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="14.0620%" y="1365" width="0.0326%" height="15" fill="rgb(212,114,2)" fg:x="431" fg:w="1"/><text x="14.3120%" y="1375.50"></text></g><g><title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="14.0620%" y="1349" width="0.0326%" height="15" fill="rgb(234,50,24)" fg:x="431" fg:w="1"/><text x="14.3120%" y="1359.50"></text></g><g><title>do_futex (1 samples, 0.03%)</title><rect x="14.0620%" y="1333" width="0.0326%" height="15" fill="rgb(221,68,8)" fg:x="431" fg:w="1"/><text x="14.3120%" y="1343.50"></text></g><g><title>futex_wait (1 samples, 0.03%)</title><rect x="14.0620%" y="1317" width="0.0326%" height="15" fill="rgb(254,180,31)" fg:x="431" fg:w="1"/><text x="14.3120%" y="1327.50"></text></g><g><title>futex_wait_setup (1 samples, 0.03%)</title><rect x="14.0620%" y="1301" width="0.0326%" height="15" fill="rgb(247,130,50)" fg:x="431" fg:w="1"/><text x="14.3120%" y="1311.50"></text></g><g><title>futex_q_lock (1 samples, 0.03%)</title><rect x="14.0620%" y="1285" width="0.0326%" height="15" fill="rgb(211,109,4)" fg:x="431" fg:w="1"/><text x="14.3120%" y="1295.50"></text></g><g><title>v8::internal::ConcurrentMarking::RunMajor (56 samples, 1.83%)</title><rect x="12.4959%" y="1493" width="1.8271%" height="15" fill="rgb(238,50,21)" fg:x="383" fg:w="56"/><text x="12.7459%" y="1503.50">v..</text></g><g><title>void v8::internal::MarkingVisitorBase&lt;v8::internal::ConcurrentMarkingVisitor, v8::internal::ConcurrentMarkingState&gt;::ProcessStrongHeapObject&lt;v8::internal::FullHeapObjectSlot&gt; (7 samples, 0.23%)</title><rect x="14.0946%" y="1477" width="0.2284%" height="15" fill="rgb(225,57,45)" fg:x="432" fg:w="7"/><text x="14.3446%" y="1487.50"></text></g><g><title>v8::internal::MarkingVisitorBase&lt;v8::internal::ConcurrentMarkingVisitor, v8::internal::ConcurrentMarkingState&gt;::VisitMapPointer (4 samples, 0.13%)</title><rect x="14.3230%" y="1493" width="0.1305%" height="15" fill="rgb(209,196,50)" fg:x="439" fg:w="4"/><text x="14.5730%" y="1503.50"></text></g><g><title>void v8::internal::BodyDescriptorBase::IteratePointers&lt;v8::internal::ConcurrentMarkingVisitor&gt; (3 samples, 0.10%)</title><rect x="14.4535%" y="1493" width="0.0979%" height="15" fill="rgb(242,140,13)" fg:x="443" fg:w="3"/><text x="14.7035%" y="1503.50"></text></g><g><title>v8::internal::ConcurrentMarking::JobTaskMajor::Run (80 samples, 2.61%)</title><rect x="12.1697%" y="1509" width="2.6101%" height="15" fill="rgb(217,111,7)" fg:x="373" fg:w="80"/><text x="12.4197%" y="1519.50">v8..</text></g><g><title>void v8::internal::MarkingVisitorBase&lt;v8::internal::ConcurrentMarkingVisitor, v8::internal::ConcurrentMarkingState&gt;::ProcessStrongHeapObject&lt;v8::internal::FullHeapObjectSlot&gt; (7 samples, 0.23%)</title><rect x="14.5514%" y="1493" width="0.2284%" height="15" fill="rgb(253,193,51)" fg:x="446" fg:w="7"/><text x="14.8014%" y="1503.50"></text></g><g><title>__GI___mprotect (1 samples, 0.03%)</title><rect x="14.7798%" y="1461" width="0.0326%" height="15" fill="rgb(252,70,29)" fg:x="453" fg:w="1"/><text x="15.0298%" y="1471.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="14.7798%" y="1445" width="0.0326%" height="15" fill="rgb(232,127,12)" fg:x="453" fg:w="1"/><text x="15.0298%" y="1455.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="14.7798%" y="1429" width="0.0326%" height="15" fill="rgb(211,180,21)" fg:x="453" fg:w="1"/><text x="15.0298%" y="1439.50"></text></g><g><title>__x64_sys_mprotect (1 samples, 0.03%)</title><rect x="14.7798%" y="1413" width="0.0326%" height="15" fill="rgb(229,72,13)" fg:x="453" fg:w="1"/><text x="15.0298%" y="1423.50"></text></g><g><title>do_mprotect_pkey (1 samples, 0.03%)</title><rect x="14.7798%" y="1397" width="0.0326%" height="15" fill="rgb(240,211,49)" fg:x="453" fg:w="1"/><text x="15.0298%" y="1407.50"></text></g><g><title>mprotect_fixup (1 samples, 0.03%)</title><rect x="14.7798%" y="1381" width="0.0326%" height="15" fill="rgb(219,149,40)" fg:x="453" fg:w="1"/><text x="15.0298%" y="1391.50"></text></g><g><title>change_protection (1 samples, 0.03%)</title><rect x="14.7798%" y="1365" width="0.0326%" height="15" fill="rgb(210,127,46)" fg:x="453" fg:w="1"/><text x="15.0298%" y="1375.50"></text></g><g><title>__ptep_modify_prot_commit (1 samples, 0.03%)</title><rect x="14.7798%" y="1349" width="0.0326%" height="15" fill="rgb(220,106,7)" fg:x="453" fg:w="1"/><text x="15.0298%" y="1359.50"></text></g><g><title>flush_tlb_mm_range (1 samples, 0.03%)</title><rect x="14.8124%" y="1349" width="0.0326%" height="15" fill="rgb(249,31,22)" fg:x="454" fg:w="1"/><text x="15.0624%" y="1359.50"></text></g><g><title>native_flush_tlb_multi (1 samples, 0.03%)</title><rect x="14.8124%" y="1333" width="0.0326%" height="15" fill="rgb(253,1,49)" fg:x="454" fg:w="1"/><text x="15.0624%" y="1343.50"></text></g><g><title>on_each_cpu_cond_mask (1 samples, 0.03%)</title><rect x="14.8124%" y="1317" width="0.0326%" height="15" fill="rgb(227,144,33)" fg:x="454" fg:w="1"/><text x="15.0624%" y="1327.50"></text></g><g><title>smp_call_function_many_cond (1 samples, 0.03%)</title><rect x="14.8124%" y="1301" width="0.0326%" height="15" fill="rgb(249,163,44)" fg:x="454" fg:w="1"/><text x="15.0624%" y="1311.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.03%)</title><rect x="14.8450%" y="1301" width="0.0326%" height="15" fill="rgb(234,15,39)" fg:x="455" fg:w="1"/><text x="15.0950%" y="1311.50"></text></g><g><title>tlb_finish_mmu (3 samples, 0.10%)</title><rect x="14.8124%" y="1365" width="0.0979%" height="15" fill="rgb(207,66,16)" fg:x="454" fg:w="3"/><text x="15.0624%" y="1375.50"></text></g><g><title>tlb_batch_pages_flush (2 samples, 0.07%)</title><rect x="14.8450%" y="1349" width="0.0653%" height="15" fill="rgb(233,112,24)" fg:x="455" fg:w="2"/><text x="15.0950%" y="1359.50"></text></g><g><title>free_pages_and_swap_cache (2 samples, 0.07%)</title><rect x="14.8450%" y="1333" width="0.0653%" height="15" fill="rgb(230,90,22)" fg:x="455" fg:w="2"/><text x="15.0950%" y="1343.50"></text></g><g><title>release_pages (2 samples, 0.07%)</title><rect x="14.8450%" y="1317" width="0.0653%" height="15" fill="rgb(229,61,13)" fg:x="455" fg:w="2"/><text x="15.0950%" y="1327.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.03%)</title><rect x="14.8777%" y="1301" width="0.0326%" height="15" fill="rgb(225,57,24)" fg:x="456" fg:w="1"/><text x="15.1277%" y="1311.50"></text></g><g><title>v8::base::OS::SetPermissions (5 samples, 0.16%)</title><rect x="14.7798%" y="1477" width="0.1631%" height="15" fill="rgb(208,169,48)" fg:x="453" fg:w="5"/><text x="15.0298%" y="1487.50"></text></g><g><title>__GI_madvise (4 samples, 0.13%)</title><rect x="14.8124%" y="1461" width="0.1305%" height="15" fill="rgb(244,218,51)" fg:x="454" fg:w="4"/><text x="15.0624%" y="1471.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.13%)</title><rect x="14.8124%" y="1445" width="0.1305%" height="15" fill="rgb(214,148,10)" fg:x="454" fg:w="4"/><text x="15.0624%" y="1455.50"></text></g><g><title>do_syscall_64 (4 samples, 0.13%)</title><rect x="14.8124%" y="1429" width="0.1305%" height="15" fill="rgb(225,174,27)" fg:x="454" fg:w="4"/><text x="15.0624%" y="1439.50"></text></g><g><title>__x64_sys_madvise (4 samples, 0.13%)</title><rect x="14.8124%" y="1413" width="0.1305%" height="15" fill="rgb(230,96,26)" fg:x="454" fg:w="4"/><text x="15.0624%" y="1423.50"></text></g><g><title>do_madvise.part.0 (4 samples, 0.13%)</title><rect x="14.8124%" y="1397" width="0.1305%" height="15" fill="rgb(232,10,30)" fg:x="454" fg:w="4"/><text x="15.0624%" y="1407.50"></text></g><g><title>zap_page_range_single (4 samples, 0.13%)</title><rect x="14.8124%" y="1381" width="0.1305%" height="15" fill="rgb(222,8,50)" fg:x="454" fg:w="4"/><text x="15.0624%" y="1391.50"></text></g><g><title>unmap_single_vma (1 samples, 0.03%)</title><rect x="14.9103%" y="1365" width="0.0326%" height="15" fill="rgb(213,81,27)" fg:x="457" fg:w="1"/><text x="15.1603%" y="1375.50"></text></g><g><title>_compound_head (1 samples, 0.03%)</title><rect x="14.9103%" y="1349" width="0.0326%" height="15" fill="rgb(245,50,10)" fg:x="457" fg:w="1"/><text x="15.1603%" y="1359.50"></text></g><g><title>v8::internal::MemoryAllocator::Unmapper::UnmapFreeMemoryJob::Run (6 samples, 0.20%)</title><rect x="14.7798%" y="1509" width="0.1958%" height="15" fill="rgb(216,100,18)" fg:x="453" fg:w="6"/><text x="15.0298%" y="1519.50"></text></g><g><title>v8::internal::MemoryAllocator::Unmapper::PerformFreeMemoryOnQueuedChunks (6 samples, 0.20%)</title><rect x="14.7798%" y="1493" width="0.1958%" height="15" fill="rgb(236,147,54)" fg:x="453" fg:w="6"/><text x="15.0298%" y="1503.50"></text></g><g><title>v8::internal::VirtualMemory::Free (1 samples, 0.03%)</title><rect x="14.9429%" y="1477" width="0.0326%" height="15" fill="rgb(205,143,26)" fg:x="458" fg:w="1"/><text x="15.1929%" y="1487.50"></text></g><g><title>v8::base::PageAllocator::FreePages (1 samples, 0.03%)</title><rect x="14.9429%" y="1461" width="0.0326%" height="15" fill="rgb(236,26,9)" fg:x="458" fg:w="1"/><text x="15.1929%" y="1471.50"></text></g><g><title>v8::base::OS::Free (1 samples, 0.03%)</title><rect x="14.9429%" y="1445" width="0.0326%" height="15" fill="rgb(221,165,53)" fg:x="458" fg:w="1"/><text x="15.1929%" y="1455.50"></text></g><g><title>__GI___munmap (1 samples, 0.03%)</title><rect x="14.9429%" y="1429" width="0.0326%" height="15" fill="rgb(214,110,17)" fg:x="458" fg:w="1"/><text x="15.1929%" y="1439.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="14.9429%" y="1413" width="0.0326%" height="15" fill="rgb(237,197,12)" fg:x="458" fg:w="1"/><text x="15.1929%" y="1423.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="14.9429%" y="1397" width="0.0326%" height="15" fill="rgb(205,84,17)" fg:x="458" fg:w="1"/><text x="15.1929%" y="1407.50"></text></g><g><title>__x64_sys_munmap (1 samples, 0.03%)</title><rect x="14.9429%" y="1381" width="0.0326%" height="15" fill="rgb(237,18,45)" fg:x="458" fg:w="1"/><text x="15.1929%" y="1391.50"></text></g><g><title>__vm_munmap (1 samples, 0.03%)</title><rect x="14.9429%" y="1365" width="0.0326%" height="15" fill="rgb(221,87,14)" fg:x="458" fg:w="1"/><text x="15.1929%" y="1375.50"></text></g><g><title>do_vmi_munmap (1 samples, 0.03%)</title><rect x="14.9429%" y="1349" width="0.0326%" height="15" fill="rgb(238,186,15)" fg:x="458" fg:w="1"/><text x="15.1929%" y="1359.50"></text></g><g><title>do_vmi_align_munmap (1 samples, 0.03%)</title><rect x="14.9429%" y="1333" width="0.0326%" height="15" fill="rgb(208,115,11)" fg:x="458" fg:w="1"/><text x="15.1929%" y="1343.50"></text></g><g><title>unmap_region.constprop.0 (1 samples, 0.03%)</title><rect x="14.9429%" y="1317" width="0.0326%" height="15" fill="rgb(254,175,0)" fg:x="458" fg:w="1"/><text x="15.1929%" y="1327.50"></text></g><g><title>unmap_vmas (1 samples, 0.03%)</title><rect x="14.9429%" y="1301" width="0.0326%" height="15" fill="rgb(227,24,42)" fg:x="458" fg:w="1"/><text x="15.1929%" y="1311.50"></text></g><g><title>unmap_single_vma (1 samples, 0.03%)</title><rect x="14.9429%" y="1285" width="0.0326%" height="15" fill="rgb(223,211,37)" fg:x="458" fg:w="1"/><text x="15.1929%" y="1295.50"></text></g><g><title>unmap_page_range (1 samples, 0.03%)</title><rect x="14.9429%" y="1269" width="0.0326%" height="15" fill="rgb(235,49,27)" fg:x="458" fg:w="1"/><text x="15.1929%" y="1279.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="15.0734%" y="1349" width="0.0326%" height="15" fill="rgb(254,97,51)" fg:x="462" fg:w="1"/><text x="15.3234%" y="1359.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.07%)</title><rect x="15.0734%" y="1397" width="0.0653%" height="15" fill="rgb(249,51,40)" fg:x="462" fg:w="2"/><text x="15.3234%" y="1407.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.07%)</title><rect x="15.0734%" y="1381" width="0.0653%" height="15" fill="rgb(210,128,45)" fg:x="462" fg:w="2"/><text x="15.3234%" y="1391.50"></text></g><g><title>exc_page_fault (2 samples, 0.07%)</title><rect x="15.0734%" y="1365" width="0.0653%" height="15" fill="rgb(224,137,50)" fg:x="462" fg:w="2"/><text x="15.3234%" y="1375.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="15.1060%" y="1349" width="0.0326%" height="15" fill="rgb(242,15,9)" fg:x="463" fg:w="1"/><text x="15.3560%" y="1359.50"></text></g><g><title>handle_mm_fault (1 samples, 0.03%)</title><rect x="15.1060%" y="1333" width="0.0326%" height="15" fill="rgb(233,187,41)" fg:x="463" fg:w="1"/><text x="15.3560%" y="1343.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="15.1060%" y="1317" width="0.0326%" height="15" fill="rgb(227,2,29)" fg:x="463" fg:w="1"/><text x="15.3560%" y="1327.50"></text></g><g><title>do_anonymous_page (1 samples, 0.03%)</title><rect x="15.1060%" y="1301" width="0.0326%" height="15" fill="rgb(222,70,3)" fg:x="463" fg:w="1"/><text x="15.3560%" y="1311.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.03%)</title><rect x="15.1060%" y="1285" width="0.0326%" height="15" fill="rgb(213,11,42)" fg:x="463" fg:w="1"/><text x="15.3560%" y="1295.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="15.1387%" y="1333" width="0.0326%" height="15" fill="rgb(225,150,9)" fg:x="464" fg:w="1"/><text x="15.3887%" y="1343.50"></text></g><g><title>do_anonymous_page (1 samples, 0.03%)</title><rect x="15.1387%" y="1317" width="0.0326%" height="15" fill="rgb(230,162,45)" fg:x="464" fg:w="1"/><text x="15.3887%" y="1327.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.03%)</title><rect x="15.1387%" y="1301" width="0.0326%" height="15" fill="rgb(222,14,52)" fg:x="464" fg:w="1"/><text x="15.3887%" y="1311.50"></text></g><g><title>__folio_alloc (1 samples, 0.03%)</title><rect x="15.1387%" y="1285" width="0.0326%" height="15" fill="rgb(254,198,14)" fg:x="464" fg:w="1"/><text x="15.3887%" y="1295.50"></text></g><g><title>__alloc_pages (1 samples, 0.03%)</title><rect x="15.1387%" y="1269" width="0.0326%" height="15" fill="rgb(220,217,30)" fg:x="464" fg:w="1"/><text x="15.3887%" y="1279.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.03%)</title><rect x="15.1387%" y="1253" width="0.0326%" height="15" fill="rgb(215,146,41)" fg:x="464" fg:w="1"/><text x="15.3887%" y="1263.50"></text></g><g><title>__rmqueue_pcplist (1 samples, 0.03%)</title><rect x="15.1387%" y="1237" width="0.0326%" height="15" fill="rgb(217,27,36)" fg:x="464" fg:w="1"/><text x="15.3887%" y="1247.50"></text></g><g><title>handle_mm_fault (2 samples, 0.07%)</title><rect x="15.1387%" y="1349" width="0.0653%" height="15" fill="rgb(219,218,39)" fg:x="464" fg:w="2"/><text x="15.3887%" y="1359.50"></text></g><g><title>count_memcg_events.constprop.0 (1 samples, 0.03%)</title><rect x="15.1713%" y="1333" width="0.0326%" height="15" fill="rgb(219,4,42)" fg:x="465" fg:w="1"/><text x="15.4213%" y="1343.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.03%)</title><rect x="15.1713%" y="1317" width="0.0326%" height="15" fill="rgb(249,119,36)" fg:x="465" fg:w="1"/><text x="15.4213%" y="1327.50"></text></g><g><title>heap::base::SlotCallbackResult v8::internal::Scavenger::EvacuateInPlaceInternalizableString&lt;v8::internal::FullHeapObjectSlot&gt; (6 samples, 0.20%)</title><rect x="15.0408%" y="1413" width="0.1958%" height="15" fill="rgb(209,23,33)" fg:x="461" fg:w="6"/><text x="15.2908%" y="1423.50"></text></g><g><title>asm_exc_page_fault (3 samples, 0.10%)</title><rect x="15.1387%" y="1397" width="0.0979%" height="15" fill="rgb(211,10,0)" fg:x="464" fg:w="3"/><text x="15.3887%" y="1407.50"></text></g><g><title>exc_page_fault (3 samples, 0.10%)</title><rect x="15.1387%" y="1381" width="0.0979%" height="15" fill="rgb(208,99,37)" fg:x="464" fg:w="3"/><text x="15.3887%" y="1391.50"></text></g><g><title>do_user_addr_fault (3 samples, 0.10%)</title><rect x="15.1387%" y="1365" width="0.0979%" height="15" fill="rgb(213,132,31)" fg:x="464" fg:w="3"/><text x="15.3887%" y="1375.50"></text></g><g><title>up_read (1 samples, 0.03%)</title><rect x="15.2039%" y="1349" width="0.0326%" height="15" fill="rgb(243,129,40)" fg:x="466" fg:w="1"/><text x="15.4539%" y="1359.50"></text></g><g><title>v8::internal::Scavenger::IterateAndScavengePromotedObject (9 samples, 0.29%)</title><rect x="15.0082%" y="1461" width="0.2936%" height="15" fill="rgb(210,66,33)" fg:x="460" fg:w="9"/><text x="15.2582%" y="1471.50"></text></g><g><title>void v8::internal::BodyDescriptorBase::IteratePointers&lt;v8::internal::IterateAndScavengePromotedObjectsVisitor&gt; (9 samples, 0.29%)</title><rect x="15.0082%" y="1445" width="0.2936%" height="15" fill="rgb(209,189,4)" fg:x="460" fg:w="9"/><text x="15.2582%" y="1455.50"></text></g><g><title>heap::base::SlotCallbackResult v8::internal::Scavenger::ScavengeObject&lt;v8::internal::FullHeapObjectSlot&gt; (8 samples, 0.26%)</title><rect x="15.0408%" y="1429" width="0.2610%" height="15" fill="rgb(214,107,37)" fg:x="461" fg:w="8"/><text x="15.2908%" y="1439.50"></text></g><g><title>heap::base::SlotCallbackResult v8::internal::Scavenger::ScavengeObject&lt;v8::internal::FullHeapObjectSlot&gt; (2 samples, 0.07%)</title><rect x="15.2365%" y="1413" width="0.0653%" height="15" fill="rgb(245,88,54)" fg:x="467" fg:w="2"/><text x="15.4865%" y="1423.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="15.3018%" y="1429" width="0.0326%" height="15" fill="rgb(205,146,20)" fg:x="469" fg:w="1"/><text x="15.5518%" y="1439.50"></text></g><g><title>exc_page_fault (1 samples, 0.03%)</title><rect x="15.3018%" y="1413" width="0.0326%" height="15" fill="rgb(220,161,25)" fg:x="469" fg:w="1"/><text x="15.5518%" y="1423.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="15.3018%" y="1397" width="0.0326%" height="15" fill="rgb(215,152,15)" fg:x="469" fg:w="1"/><text x="15.5518%" y="1407.50"></text></g><g><title>handle_mm_fault (1 samples, 0.03%)</title><rect x="15.3018%" y="1381" width="0.0326%" height="15" fill="rgb(233,192,44)" fg:x="469" fg:w="1"/><text x="15.5518%" y="1391.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="15.3018%" y="1365" width="0.0326%" height="15" fill="rgb(240,170,46)" fg:x="469" fg:w="1"/><text x="15.5518%" y="1375.50"></text></g><g><title>do_anonymous_page (1 samples, 0.03%)</title><rect x="15.3018%" y="1349" width="0.0326%" height="15" fill="rgb(207,104,33)" fg:x="469" fg:w="1"/><text x="15.5518%" y="1359.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="15.4323%" y="1413" width="0.0326%" height="15" fill="rgb(219,21,39)" fg:x="473" fg:w="1"/><text x="15.6823%" y="1423.50"></text></g><g><title>exc_page_fault (1 samples, 0.03%)</title><rect x="15.4323%" y="1397" width="0.0326%" height="15" fill="rgb(214,133,29)" fg:x="473" fg:w="1"/><text x="15.6823%" y="1407.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="15.4323%" y="1381" width="0.0326%" height="15" fill="rgb(226,93,6)" fg:x="473" fg:w="1"/><text x="15.6823%" y="1391.50"></text></g><g><title>handle_mm_fault (1 samples, 0.03%)</title><rect x="15.4323%" y="1365" width="0.0326%" height="15" fill="rgb(252,222,34)" fg:x="473" fg:w="1"/><text x="15.6823%" y="1375.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="15.4323%" y="1349" width="0.0326%" height="15" fill="rgb(252,92,48)" fg:x="473" fg:w="1"/><text x="15.6823%" y="1359.50"></text></g><g><title>do_anonymous_page (1 samples, 0.03%)</title><rect x="15.4323%" y="1333" width="0.0326%" height="15" fill="rgb(245,223,24)" fg:x="473" fg:w="1"/><text x="15.6823%" y="1343.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.03%)</title><rect x="15.4323%" y="1317" width="0.0326%" height="15" fill="rgb(205,176,3)" fg:x="473" fg:w="1"/><text x="15.6823%" y="1327.50"></text></g><g><title>v8::internal::Scavenger::Process (16 samples, 0.52%)</title><rect x="14.9755%" y="1477" width="0.5220%" height="15" fill="rgb(235,151,15)" fg:x="459" fg:w="16"/><text x="15.2255%" y="1487.50"></text></g><g><title>void v8::internal::BodyDescriptorBase::IteratePointers&lt;v8::internal::ScavengeVisitor&gt; (6 samples, 0.20%)</title><rect x="15.3018%" y="1461" width="0.1958%" height="15" fill="rgb(237,209,11)" fg:x="469" fg:w="6"/><text x="15.5518%" y="1471.50"></text></g><g><title>heap::base::SlotCallbackResult v8::internal::Scavenger::ScavengeObject&lt;v8::internal::FullHeapObjectSlot&gt; (6 samples, 0.20%)</title><rect x="15.3018%" y="1445" width="0.1958%" height="15" fill="rgb(243,227,24)" fg:x="469" fg:w="6"/><text x="15.5518%" y="1455.50"></text></g><g><title>heap::base::SlotCallbackResult v8::internal::Scavenger::EvacuateInPlaceInternalizableString&lt;v8::internal::FullHeapObjectSlot&gt; (5 samples, 0.16%)</title><rect x="15.3344%" y="1429" width="0.1631%" height="15" fill="rgb(239,193,16)" fg:x="470" fg:w="5"/><text x="15.5844%" y="1439.50"></text></g><g><title>v8::internal::EvacuationAllocator::AllocateInNewSpace (1 samples, 0.03%)</title><rect x="15.4649%" y="1413" width="0.0326%" height="15" fill="rgb(231,27,9)" fg:x="474" fg:w="1"/><text x="15.7149%" y="1423.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::EnsureAllocation (1 samples, 0.03%)</title><rect x="15.4649%" y="1397" width="0.0326%" height="15" fill="rgb(219,169,10)" fg:x="474" fg:w="1"/><text x="15.7149%" y="1407.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::AddFreshPage (1 samples, 0.03%)</title><rect x="15.4649%" y="1381" width="0.0326%" height="15" fill="rgb(244,229,43)" fg:x="474" fg:w="1"/><text x="15.7149%" y="1391.50"></text></g><g><title>v8::internal::SemiSpaceNewSpace::UpdateLinearAllocationArea (1 samples, 0.03%)</title><rect x="15.4649%" y="1365" width="0.0326%" height="15" fill="rgb(254,38,20)" fg:x="474" fg:w="1"/><text x="15.7149%" y="1375.50"></text></g><g><title>v8::internal::ScavengerCollector::JobTask::Run (17 samples, 0.55%)</title><rect x="14.9755%" y="1509" width="0.5546%" height="15" fill="rgb(250,47,30)" fg:x="459" fg:w="17"/><text x="15.2255%" y="1519.50"></text></g><g><title>v8::internal::ScavengerCollector::JobTask::ProcessItems (17 samples, 0.55%)</title><rect x="14.9755%" y="1493" width="0.5546%" height="15" fill="rgb(224,124,36)" fg:x="459" fg:w="17"/><text x="15.2255%" y="1503.50"></text></g><g><title>v8::internal::ScavengerCollector::JobTask::ConcurrentScavengePages (1 samples, 0.03%)</title><rect x="15.4976%" y="1477" width="0.0326%" height="15" fill="rgb(246,68,51)" fg:x="475" fg:w="1"/><text x="15.7476%" y="1487.50"></text></g><g><title>v8::internal::Scavenger::ScavengePage (1 samples, 0.03%)</title><rect x="15.4976%" y="1461" width="0.0326%" height="15" fill="rgb(253,43,49)" fg:x="475" fg:w="1"/><text x="15.7476%" y="1471.50"></text></g><g><title>heap::base::SlotCallbackResult v8::internal::Scavenger::ScavengeObject&lt;v8::internal::FullHeapObjectSlot&gt; (1 samples, 0.03%)</title><rect x="15.4976%" y="1445" width="0.0326%" height="15" fill="rgb(219,54,36)" fg:x="475" fg:w="1"/><text x="15.7476%" y="1455.50"></text></g><g><title>v8::internal::PagedSpaceBase::RawRefillLabMain (1 samples, 0.03%)</title><rect x="15.4976%" y="1429" width="0.0326%" height="15" fill="rgb(227,133,34)" fg:x="475" fg:w="1"/><text x="15.7476%" y="1439.50"></text></g><g><title>v8::internal::CompactionSpace::TryExpandImpl (1 samples, 0.03%)</title><rect x="15.4976%" y="1413" width="0.0326%" height="15" fill="rgb(247,227,15)" fg:x="475" fg:w="1"/><text x="15.7476%" y="1423.50"></text></g><g><title>v8::internal::MemoryAllocator::AllocatePage (1 samples, 0.03%)</title><rect x="15.4976%" y="1397" width="0.0326%" height="15" fill="rgb(229,96,14)" fg:x="475" fg:w="1"/><text x="15.7476%" y="1407.50"></text></g><g><title>v8::internal::MemoryAllocator::AllocateUninitializedChunkAt (1 samples, 0.03%)</title><rect x="15.4976%" y="1381" width="0.0326%" height="15" fill="rgb(220,79,17)" fg:x="475" fg:w="1"/><text x="15.7476%" y="1391.50"></text></g><g><title>v8::internal::MemoryAllocator::AllocateAlignedMemory (1 samples, 0.03%)</title><rect x="15.4976%" y="1365" width="0.0326%" height="15" fill="rgb(205,131,53)" fg:x="475" fg:w="1"/><text x="15.7476%" y="1375.50"></text></g><g><title>v8::internal::VirtualMemory::VirtualMemory (1 samples, 0.03%)</title><rect x="15.4976%" y="1349" width="0.0326%" height="15" fill="rgb(209,50,29)" fg:x="475" fg:w="1"/><text x="15.7476%" y="1359.50"></text></g><g><title>v8::base::OS::Allocate (1 samples, 0.03%)</title><rect x="15.4976%" y="1333" width="0.0326%" height="15" fill="rgb(245,86,46)" fg:x="475" fg:w="1"/><text x="15.7476%" y="1343.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.03%)</title><rect x="15.4976%" y="1317" width="0.0326%" height="15" fill="rgb(235,66,46)" fg:x="475" fg:w="1"/><text x="15.7476%" y="1327.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.03%)</title><rect x="15.4976%" y="1301" width="0.0326%" height="15" fill="rgb(232,148,31)" fg:x="475" fg:w="1"/><text x="15.7476%" y="1311.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="15.4976%" y="1285" width="0.0326%" height="15" fill="rgb(217,149,8)" fg:x="475" fg:w="1"/><text x="15.7476%" y="1295.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="15.4976%" y="1269" width="0.0326%" height="15" fill="rgb(209,183,11)" fg:x="475" fg:w="1"/><text x="15.7476%" y="1279.50"></text></g><g><title>__x64_sys_mmap (1 samples, 0.03%)</title><rect x="15.4976%" y="1253" width="0.0326%" height="15" fill="rgb(208,55,20)" fg:x="475" fg:w="1"/><text x="15.7476%" y="1263.50"></text></g><g><title>ksys_mmap_pgoff (1 samples, 0.03%)</title><rect x="15.4976%" y="1237" width="0.0326%" height="15" fill="rgb(218,39,14)" fg:x="475" fg:w="1"/><text x="15.7476%" y="1247.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.03%)</title><rect x="15.4976%" y="1221" width="0.0326%" height="15" fill="rgb(216,169,33)" fg:x="475" fg:w="1"/><text x="15.7476%" y="1231.50"></text></g><g><title>do_mmap (1 samples, 0.03%)</title><rect x="15.4976%" y="1205" width="0.0326%" height="15" fill="rgb(233,80,24)" fg:x="475" fg:w="1"/><text x="15.7476%" y="1215.50"></text></g><g><title>mmap_region (1 samples, 0.03%)</title><rect x="15.4976%" y="1189" width="0.0326%" height="15" fill="rgb(213,179,31)" fg:x="475" fg:w="1"/><text x="15.7476%" y="1199.50"></text></g><g><title>perf_event_mmap (1 samples, 0.03%)</title><rect x="15.4976%" y="1173" width="0.0326%" height="15" fill="rgb(209,19,5)" fg:x="475" fg:w="1"/><text x="15.7476%" y="1183.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.03%)</title><rect x="15.4976%" y="1157" width="0.0326%" height="15" fill="rgb(219,18,35)" fg:x="475" fg:w="1"/><text x="15.7476%" y="1167.50"></text></g><g><title>perf_event_mmap_output (1 samples, 0.03%)</title><rect x="15.4976%" y="1141" width="0.0326%" height="15" fill="rgb(209,169,16)" fg:x="475" fg:w="1"/><text x="15.7476%" y="1151.50"></text></g><g><title>v8::internal::HeapObject::SizeFromMap (1 samples, 0.03%)</title><rect x="15.9217%" y="1461" width="0.0326%" height="15" fill="rgb(245,90,51)" fg:x="488" fg:w="1"/><text x="16.1717%" y="1471.50"></text></g><g><title>__clone3 (125 samples, 4.08%)</title><rect x="11.9086%" y="1573" width="4.0783%" height="15" fill="rgb(220,99,45)" fg:x="365" fg:w="125"/><text x="12.1586%" y="1583.50">__cl..</text></g><g><title>start_thread (125 samples, 4.08%)</title><rect x="11.9086%" y="1557" width="4.0783%" height="15" fill="rgb(249,89,25)" fg:x="365" fg:w="125"/><text x="12.1586%" y="1567.50">star..</text></g><g><title>node::(anonymous namespace)::PlatformWorkerThread (125 samples, 4.08%)</title><rect x="11.9086%" y="1541" width="4.0783%" height="15" fill="rgb(239,193,0)" fg:x="365" fg:w="125"/><text x="12.1586%" y="1551.50">node..</text></g><g><title>v8::platform::DefaultJobWorker::Run (117 samples, 3.82%)</title><rect x="12.1697%" y="1525" width="3.8173%" height="15" fill="rgb(231,126,1)" fg:x="373" fg:w="117"/><text x="12.4197%" y="1535.50">v8::..</text></g><g><title>v8::internal::Sweeper::SweeperJob::RunImpl (14 samples, 0.46%)</title><rect x="15.5302%" y="1509" width="0.4568%" height="15" fill="rgb(243,166,3)" fg:x="476" fg:w="14"/><text x="15.7802%" y="1519.50"></text></g><g><title>v8::internal::Sweeper::LocalSweeper::ParallelSweepPage (14 samples, 0.46%)</title><rect x="15.5302%" y="1493" width="0.4568%" height="15" fill="rgb(223,22,34)" fg:x="476" fg:w="14"/><text x="15.7802%" y="1503.50"></text></g><g><title>v8::internal::Sweeper::RawSweep (14 samples, 0.46%)</title><rect x="15.5302%" y="1477" width="0.4568%" height="15" fill="rgb(251,52,51)" fg:x="476" fg:w="14"/><text x="15.7802%" y="1487.50"></text></g><g><title>v8::internal::Sweeper::RawSweep (1 samples, 0.03%)</title><rect x="15.9543%" y="1461" width="0.0326%" height="15" fill="rgb(221,165,28)" fg:x="489" fg:w="1"/><text x="16.2043%" y="1471.50"></text></g><g><title>uv__run_check (1 samples, 0.03%)</title><rect x="15.9869%" y="1445" width="0.0326%" height="15" fill="rgb(218,121,47)" fg:x="490" fg:w="1"/><text x="16.2369%" y="1455.50"></text></g><g><title>node::Environment::CheckImmediate (1 samples, 0.03%)</title><rect x="15.9869%" y="1429" width="0.0326%" height="15" fill="rgb(209,120,9)" fg:x="490" fg:w="1"/><text x="16.2369%" y="1439.50"></text></g><g><title>node::Environment::RunAndClearNativeImmediates (1 samples, 0.03%)</title><rect x="15.9869%" y="1413" width="0.0326%" height="15" fill="rgb(236,68,12)" fg:x="490" fg:w="1"/><text x="16.2369%" y="1423.50"></text></g><g><title>v8::TryCatch::TryCatch (1 samples, 0.03%)</title><rect x="15.9869%" y="1397" width="0.0326%" height="15" fill="rgb(225,194,26)" fg:x="490" fg:w="1"/><text x="16.2369%" y="1407.50"></text></g><g><title>v8::CallDepthScope&lt;true&gt;::CallDepthScope (1 samples, 0.03%)</title><rect x="16.0196%" y="1317" width="0.0326%" height="15" fill="rgb(231,84,39)" fg:x="491" fg:w="1"/><text x="16.2696%" y="1327.50"></text></g><g><title>v8::internal::Accessors::ArrayLengthSetter (1 samples, 0.03%)</title><rect x="16.0522%" y="1301" width="0.0326%" height="15" fill="rgb(210,11,45)" fg:x="492" fg:w="1"/><text x="16.3022%" y="1311.50"></text></g><g><title>v8::internal::Object::SetProperty (1 samples, 0.03%)</title><rect x="16.0522%" y="1285" width="0.0326%" height="15" fill="rgb(224,54,52)" fg:x="492" fg:w="1"/><text x="16.3022%" y="1295.50"></text></g><g><title>node::Environment::RunTimers (3 samples, 0.10%)</title><rect x="16.0196%" y="1429" width="0.0979%" height="15" fill="rgb(238,102,14)" fg:x="491" fg:w="3"/><text x="16.2696%" y="1439.50"></text></g><g><title>node::InternalCallbackScope::~InternalCallbackScope (3 samples, 0.10%)</title><rect x="16.0196%" y="1413" width="0.0979%" height="15" fill="rgb(243,160,52)" fg:x="491" fg:w="3"/><text x="16.2696%" y="1423.50"></text></g><g><title>node::InternalCallbackScope::Close (3 samples, 0.10%)</title><rect x="16.0196%" y="1397" width="0.0979%" height="15" fill="rgb(216,114,19)" fg:x="491" fg:w="3"/><text x="16.2696%" y="1407.50"></text></g><g><title>node::AsyncHooks::pop_async_context (3 samples, 0.10%)</title><rect x="16.0196%" y="1381" width="0.0979%" height="15" fill="rgb(244,166,37)" fg:x="491" fg:w="3"/><text x="16.2696%" y="1391.50"></text></g><g><title>v8::Object::Set (3 samples, 0.10%)</title><rect x="16.0196%" y="1365" width="0.0979%" height="15" fill="rgb(246,29,44)" fg:x="491" fg:w="3"/><text x="16.2696%" y="1375.50"></text></g><g><title>v8::internal::Runtime::SetObjectProperty (3 samples, 0.10%)</title><rect x="16.0196%" y="1349" width="0.0979%" height="15" fill="rgb(215,56,53)" fg:x="491" fg:w="3"/><text x="16.2696%" y="1359.50"></text></g><g><title>v8::internal::Object::SetProperty (3 samples, 0.10%)</title><rect x="16.0196%" y="1333" width="0.0979%" height="15" fill="rgb(217,60,2)" fg:x="491" fg:w="3"/><text x="16.2696%" y="1343.50"></text></g><g><title>v8::internal::Object::SetPropertyWithAccessor (2 samples, 0.07%)</title><rect x="16.0522%" y="1317" width="0.0653%" height="15" fill="rgb(207,26,24)" fg:x="492" fg:w="2"/><text x="16.3022%" y="1327.50"></text></g><g><title>v8::internal::Runtime::SetObjectProperty (1 samples, 0.03%)</title><rect x="16.0848%" y="1301" width="0.0326%" height="15" fill="rgb(252,210,15)" fg:x="493" fg:w="1"/><text x="16.3348%" y="1311.50"></text></g><g><title>_start (5 samples, 0.16%)</title><rect x="15.9869%" y="1573" width="0.1631%" height="15" fill="rgb(253,209,26)" fg:x="490" fg:w="5"/><text x="16.2369%" y="1583.50"></text></g><g><title>__libc_start_main_impl (5 samples, 0.16%)</title><rect x="15.9869%" y="1557" width="0.1631%" height="15" fill="rgb(238,170,14)" fg:x="490" fg:w="5"/><text x="16.2369%" y="1567.50"></text></g><g><title>__libc_start_call_main (5 samples, 0.16%)</title><rect x="15.9869%" y="1541" width="0.1631%" height="15" fill="rgb(216,178,15)" fg:x="490" fg:w="5"/><text x="16.2369%" y="1551.50"></text></g><g><title>node::Start (5 samples, 0.16%)</title><rect x="15.9869%" y="1525" width="0.1631%" height="15" fill="rgb(250,197,2)" fg:x="490" fg:w="5"/><text x="16.2369%" y="1535.50"></text></g><g><title>node::NodeMainInstance::Run (5 samples, 0.16%)</title><rect x="15.9869%" y="1509" width="0.1631%" height="15" fill="rgb(212,70,42)" fg:x="490" fg:w="5"/><text x="16.2369%" y="1519.50"></text></g><g><title>node::NodeMainInstance::Run (5 samples, 0.16%)</title><rect x="15.9869%" y="1493" width="0.1631%" height="15" fill="rgb(227,213,9)" fg:x="490" fg:w="5"/><text x="16.2369%" y="1503.50"></text></g><g><title>node::SpinEventLoopInternal (5 samples, 0.16%)</title><rect x="15.9869%" y="1477" width="0.1631%" height="15" fill="rgb(245,99,25)" fg:x="490" fg:w="5"/><text x="16.2369%" y="1487.50"></text></g><g><title>uv_run (5 samples, 0.16%)</title><rect x="15.9869%" y="1461" width="0.1631%" height="15" fill="rgb(250,82,29)" fg:x="490" fg:w="5"/><text x="16.2369%" y="1471.50"></text></g><g><title>uv__run_timers (4 samples, 0.13%)</title><rect x="16.0196%" y="1445" width="0.1305%" height="15" fill="rgb(241,226,54)" fg:x="491" fg:w="4"/><text x="16.2696%" y="1455.50"></text></g><g><title>uv__run_check (1 samples, 0.03%)</title><rect x="16.1175%" y="1429" width="0.0326%" height="15" fill="rgb(221,99,41)" fg:x="494" fg:w="1"/><text x="16.3675%" y="1439.50"></text></g><g><title>uv__queue_empty (1 samples, 0.03%)</title><rect x="16.1175%" y="1413" width="0.0326%" height="15" fill="rgb(213,90,21)" fg:x="494" fg:w="1"/><text x="16.3675%" y="1423.50"></text></g><g><title>down_read_trylock (1 samples, 0.03%)</title><rect x="16.2480%" y="1525" width="0.0326%" height="15" fill="rgb(205,208,24)" fg:x="498" fg:w="1"/><text x="16.4980%" y="1535.50"></text></g><g><title>__pte_offset_map (1 samples, 0.03%)</title><rect x="16.3132%" y="1493" width="0.0326%" height="15" fill="rgb(246,31,12)" fg:x="500" fg:w="1"/><text x="16.5632%" y="1503.50"></text></g><g><title>do_anonymous_page (1 samples, 0.03%)</title><rect x="16.3458%" y="1493" width="0.0326%" height="15" fill="rgb(213,154,6)" fg:x="501" fg:w="1"/><text x="16.5958%" y="1503.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.03%)</title><rect x="16.3458%" y="1477" width="0.0326%" height="15" fill="rgb(222,163,29)" fg:x="501" fg:w="1"/><text x="16.5958%" y="1487.50"></text></g><g><title>__folio_alloc (1 samples, 0.03%)</title><rect x="16.3458%" y="1461" width="0.0326%" height="15" fill="rgb(227,201,8)" fg:x="501" fg:w="1"/><text x="16.5958%" y="1471.50"></text></g><g><title>__alloc_pages (1 samples, 0.03%)</title><rect x="16.3458%" y="1445" width="0.0326%" height="15" fill="rgb(233,9,32)" fg:x="501" fg:w="1"/><text x="16.5958%" y="1455.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.03%)</title><rect x="16.3458%" y="1429" width="0.0326%" height="15" fill="rgb(217,54,24)" fg:x="501" fg:w="1"/><text x="16.5958%" y="1439.50"></text></g><g><title>clear_page_rep (1 samples, 0.03%)</title><rect x="16.3458%" y="1413" width="0.0326%" height="15" fill="rgb(235,192,0)" fg:x="501" fg:w="1"/><text x="16.5958%" y="1423.50"></text></g><g><title>asm_exc_page_fault (8 samples, 0.26%)</title><rect x="16.1501%" y="1573" width="0.2610%" height="15" fill="rgb(235,45,9)" fg:x="495" fg:w="8"/><text x="16.4001%" y="1583.50"></text></g><g><title>exc_page_fault (7 samples, 0.23%)</title><rect x="16.1827%" y="1557" width="0.2284%" height="15" fill="rgb(246,42,40)" fg:x="496" fg:w="7"/><text x="16.4327%" y="1567.50"></text></g><g><title>do_user_addr_fault (7 samples, 0.23%)</title><rect x="16.1827%" y="1541" width="0.2284%" height="15" fill="rgb(248,111,24)" fg:x="496" fg:w="7"/><text x="16.4327%" y="1551.50"></text></g><g><title>handle_mm_fault (4 samples, 0.13%)</title><rect x="16.2806%" y="1525" width="0.1305%" height="15" fill="rgb(249,65,22)" fg:x="499" fg:w="4"/><text x="16.5306%" y="1535.50"></text></g><g><title>__handle_mm_fault (4 samples, 0.13%)</title><rect x="16.2806%" y="1509" width="0.1305%" height="15" fill="rgb(238,111,51)" fg:x="499" fg:w="4"/><text x="16.5306%" y="1519.50"></text></g><g><title>do_wp_page (1 samples, 0.03%)</title><rect x="16.3785%" y="1493" width="0.0326%" height="15" fill="rgb(250,118,22)" fg:x="502" fg:w="1"/><text x="16.6285%" y="1503.50"></text></g><g><title>vm_normal_page (1 samples, 0.03%)</title><rect x="16.3785%" y="1477" width="0.0326%" height="15" fill="rgb(234,84,26)" fg:x="502" fg:w="1"/><text x="16.6285%" y="1487.50"></text></g><g><title>__x64_sys_write (1 samples, 0.03%)</title><rect x="16.4111%" y="1557" width="0.0326%" height="15" fill="rgb(243,172,12)" fg:x="503" fg:w="1"/><text x="16.6611%" y="1567.50"></text></g><g><title>__x64_sys_epoll_pwait (1 samples, 0.03%)</title><rect x="16.4437%" y="1541" width="0.0326%" height="15" fill="rgb(236,150,49)" fg:x="504" fg:w="1"/><text x="16.6937%" y="1551.50"></text></g><g><title>do_compat_epoll_pwait.part.0 (1 samples, 0.03%)</title><rect x="16.4437%" y="1525" width="0.0326%" height="15" fill="rgb(225,197,26)" fg:x="504" fg:w="1"/><text x="16.6937%" y="1535.50"></text></g><g><title>__put_user_nocheck_4 (1 samples, 0.03%)</title><rect x="16.4437%" y="1509" width="0.0326%" height="15" fill="rgb(214,17,42)" fg:x="504" fg:w="1"/><text x="16.6937%" y="1519.50"></text></g><g><title>free_pgd_range (1 samples, 0.03%)</title><rect x="16.4763%" y="1397" width="0.0326%" height="15" fill="rgb(224,165,40)" fg:x="505" fg:w="1"/><text x="16.7263%" y="1407.50"></text></g><g><title>free_pgtables (2 samples, 0.07%)</title><rect x="16.4763%" y="1413" width="0.0653%" height="15" fill="rgb(246,100,4)" fg:x="505" fg:w="2"/><text x="16.7263%" y="1423.50"></text></g><g><title>unlink_anon_vmas (1 samples, 0.03%)</title><rect x="16.5090%" y="1397" width="0.0326%" height="15" fill="rgb(222,103,0)" fg:x="506" fg:w="1"/><text x="16.7590%" y="1407.50"></text></g><g><title>free_pages_and_swap_cache (2 samples, 0.07%)</title><rect x="16.5416%" y="1381" width="0.0653%" height="15" fill="rgb(227,189,26)" fg:x="507" fg:w="2"/><text x="16.7916%" y="1391.50"></text></g><g><title>tlb_finish_mmu (3 samples, 0.10%)</title><rect x="16.5416%" y="1413" width="0.0979%" height="15" fill="rgb(214,202,17)" fg:x="507" fg:w="3"/><text x="16.7916%" y="1423.50"></text></g><g><title>tlb_batch_pages_flush (3 samples, 0.10%)</title><rect x="16.5416%" y="1397" width="0.0979%" height="15" fill="rgb(229,111,3)" fg:x="507" fg:w="3"/><text x="16.7916%" y="1407.50"></text></g><g><title>free_swap_cache (1 samples, 0.03%)</title><rect x="16.6069%" y="1381" width="0.0326%" height="15" fill="rgb(229,172,15)" fg:x="509" fg:w="1"/><text x="16.8569%" y="1391.50"></text></g><g><title>_compound_head (9 samples, 0.29%)</title><rect x="16.6395%" y="1381" width="0.2936%" height="15" fill="rgb(230,224,35)" fg:x="510" fg:w="9"/><text x="16.8895%" y="1391.50"></text></g><g><title>page_remove_rmap (1 samples, 0.03%)</title><rect x="16.9331%" y="1381" width="0.0326%" height="15" fill="rgb(251,141,6)" fg:x="519" fg:w="1"/><text x="17.1831%" y="1391.50"></text></g><g><title>srso_safe_ret (1 samples, 0.03%)</title><rect x="16.9657%" y="1381" width="0.0326%" height="15" fill="rgb(225,208,6)" fg:x="520" fg:w="1"/><text x="17.2157%" y="1391.50"></text></g><g><title>__tlb_remove_page_size (1 samples, 0.03%)</title><rect x="17.1615%" y="1365" width="0.0326%" height="15" fill="rgb(246,181,16)" fg:x="526" fg:w="1"/><text x="17.4115%" y="1375.50"></text></g><g><title>__get_free_pages (1 samples, 0.03%)</title><rect x="17.1615%" y="1349" width="0.0326%" height="15" fill="rgb(227,129,36)" fg:x="526" fg:w="1"/><text x="17.4115%" y="1359.50"></text></g><g><title>alloc_pages (1 samples, 0.03%)</title><rect x="17.1615%" y="1333" width="0.0326%" height="15" fill="rgb(248,117,24)" fg:x="526" fg:w="1"/><text x="17.4115%" y="1343.50"></text></g><g><title>page_remove_rmap (3 samples, 0.10%)</title><rect x="17.1941%" y="1365" width="0.0979%" height="15" fill="rgb(214,185,35)" fg:x="527" fg:w="3"/><text x="17.4441%" y="1375.50"></text></g><g><title>__x64_sys_execve (26 samples, 0.85%)</title><rect x="16.4763%" y="1541" width="0.8483%" height="15" fill="rgb(236,150,34)" fg:x="505" fg:w="26"/><text x="16.7263%" y="1551.50"></text></g><g><title>do_execveat_common.isra.0 (26 samples, 0.85%)</title><rect x="16.4763%" y="1525" width="0.8483%" height="15" fill="rgb(243,228,27)" fg:x="505" fg:w="26"/><text x="16.7263%" y="1535.50"></text></g><g><title>bprm_execve (26 samples, 0.85%)</title><rect x="16.4763%" y="1509" width="0.8483%" height="15" fill="rgb(245,77,44)" fg:x="505" fg:w="26"/><text x="16.7263%" y="1519.50"></text></g><g><title>load_elf_binary (26 samples, 0.85%)</title><rect x="16.4763%" y="1493" width="0.8483%" height="15" fill="rgb(235,214,42)" fg:x="505" fg:w="26"/><text x="16.7263%" y="1503.50"></text></g><g><title>begin_new_exec (26 samples, 0.85%)</title><rect x="16.4763%" y="1477" width="0.8483%" height="15" fill="rgb(221,74,3)" fg:x="505" fg:w="26"/><text x="16.7263%" y="1487.50"></text></g><g><title>mmput (26 samples, 0.85%)</title><rect x="16.4763%" y="1461" width="0.8483%" height="15" fill="rgb(206,121,29)" fg:x="505" fg:w="26"/><text x="16.7263%" y="1471.50"></text></g><g><title>__mmput (26 samples, 0.85%)</title><rect x="16.4763%" y="1445" width="0.8483%" height="15" fill="rgb(249,131,53)" fg:x="505" fg:w="26"/><text x="16.7263%" y="1455.50"></text></g><g><title>exit_mmap (26 samples, 0.85%)</title><rect x="16.4763%" y="1429" width="0.8483%" height="15" fill="rgb(236,170,29)" fg:x="505" fg:w="26"/><text x="16.7263%" y="1439.50"></text></g><g><title>unmap_vmas (21 samples, 0.69%)</title><rect x="16.6395%" y="1413" width="0.6852%" height="15" fill="rgb(247,96,15)" fg:x="510" fg:w="21"/><text x="16.8895%" y="1423.50"></text></g><g><title>unmap_single_vma (21 samples, 0.69%)</title><rect x="16.6395%" y="1397" width="0.6852%" height="15" fill="rgb(211,210,7)" fg:x="510" fg:w="21"/><text x="16.8895%" y="1407.50"></text></g><g><title>unmap_page_range (10 samples, 0.33%)</title><rect x="16.9984%" y="1381" width="0.3263%" height="15" fill="rgb(240,88,50)" fg:x="521" fg:w="10"/><text x="17.2484%" y="1391.50"></text></g><g><title>percpu_counter_add_batch (1 samples, 0.03%)</title><rect x="17.2920%" y="1365" width="0.0326%" height="15" fill="rgb(209,229,26)" fg:x="530" fg:w="1"/><text x="17.5420%" y="1375.50"></text></g><g><title>futex_wait (1 samples, 0.03%)</title><rect x="17.3246%" y="1509" width="0.0326%" height="15" fill="rgb(210,68,23)" fg:x="531" fg:w="1"/><text x="17.5746%" y="1519.50"></text></g><g><title>futex_wait_setup (1 samples, 0.03%)</title><rect x="17.3246%" y="1493" width="0.0326%" height="15" fill="rgb(229,180,13)" fg:x="531" fg:w="1"/><text x="17.5746%" y="1503.50"></text></g><g><title>futex_q_lock (1 samples, 0.03%)</title><rect x="17.3246%" y="1477" width="0.0326%" height="15" fill="rgb(236,53,44)" fg:x="531" fg:w="1"/><text x="17.5746%" y="1487.50"></text></g><g><title>__x64_sys_futex (2 samples, 0.07%)</title><rect x="17.3246%" y="1541" width="0.0653%" height="15" fill="rgb(244,214,29)" fg:x="531" fg:w="2"/><text x="17.5746%" y="1551.50"></text></g><g><title>do_futex (2 samples, 0.07%)</title><rect x="17.3246%" y="1525" width="0.0653%" height="15" fill="rgb(220,75,29)" fg:x="531" fg:w="2"/><text x="17.5746%" y="1535.50"></text></g><g><title>futex_wake (1 samples, 0.03%)</title><rect x="17.3573%" y="1509" width="0.0326%" height="15" fill="rgb(214,183,37)" fg:x="532" fg:w="1"/><text x="17.6073%" y="1519.50"></text></g><g><title>__put_user_4 (1 samples, 0.03%)</title><rect x="17.3899%" y="1509" width="0.0326%" height="15" fill="rgb(239,117,29)" fg:x="533" fg:w="1"/><text x="17.6399%" y="1519.50"></text></g><g><title>entry_SYSCALL_64 (32 samples, 1.04%)</title><rect x="16.4111%" y="1573" width="1.0440%" height="15" fill="rgb(237,171,35)" fg:x="503" fg:w="32"/><text x="16.6611%" y="1583.50"></text></g><g><title>do_syscall_64 (31 samples, 1.01%)</title><rect x="16.4437%" y="1557" width="1.0114%" height="15" fill="rgb(229,178,53)" fg:x="504" fg:w="31"/><text x="16.6937%" y="1567.50"></text></g><g><title>__x64_sys_ioctl (2 samples, 0.07%)</title><rect x="17.3899%" y="1541" width="0.0653%" height="15" fill="rgb(210,102,19)" fg:x="533" fg:w="2"/><text x="17.6399%" y="1551.50"></text></g><g><title>tty_ioctl (2 samples, 0.07%)</title><rect x="17.3899%" y="1525" width="0.0653%" height="15" fill="rgb(235,127,22)" fg:x="533" fg:w="2"/><text x="17.6399%" y="1535.50"></text></g><g><title>tty_jobctrl_ioctl (1 samples, 0.03%)</title><rect x="17.4225%" y="1509" width="0.0326%" height="15" fill="rgb(244,31,31)" fg:x="534" fg:w="1"/><text x="17.6725%" y="1519.50"></text></g><g><title>tty_get_pgrp (1 samples, 0.03%)</title><rect x="17.4225%" y="1493" width="0.0326%" height="15" fill="rgb(231,43,21)" fg:x="534" fg:w="1"/><text x="17.6725%" y="1503.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (1 samples, 0.03%)</title><rect x="17.4551%" y="1573" width="0.0326%" height="15" fill="rgb(217,131,35)" fg:x="535" fg:w="1"/><text x="17.7051%" y="1583.50"></text></g><g><title>std::__detail::_Map_base&lt;v8::internal::MemoryChunk*, std::pair&lt;v8::internal::MemoryChunk* const, v8::internal::MemoryChunkData&gt;, std::allocator&lt;std::pair&lt;v8::internal::MemoryChunk* const, v8::internal::MemoryChunkData&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;v8::internal::MemoryChunk*&gt;, v8::internal::BasicMemoryChunk::Hasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (1 samples, 0.03%)</title><rect x="17.4878%" y="1573" width="0.0326%" height="15" fill="rgb(221,149,4)" fg:x="536" fg:w="1"/><text x="17.7378%" y="1583.50"></text></g><g><title>v8::internal::ConcurrentMarking::RunMajor (1 samples, 0.03%)</title><rect x="17.5204%" y="1573" width="0.0326%" height="15" fill="rgb(232,170,28)" fg:x="537" fg:w="1"/><text x="17.7704%" y="1583.50"></text></g><g><title>v8::internal::TranslatedState::TranslatedState (1 samples, 0.03%)</title><rect x="17.5530%" y="1573" width="0.0326%" height="15" fill="rgb(238,56,10)" fg:x="538" fg:w="1"/><text x="17.8030%" y="1583.50"></text></g><g><title>node (329 samples, 10.73%)</title><rect x="6.9168%" y="1589" width="10.7341%" height="15" fill="rgb(235,196,14)" fg:x="212" fg:w="329"/><text x="7.1668%" y="1599.50">node</text></g><g><title>void v8::internal::MarkingVisitorBase&lt;v8::internal::ConcurrentMarkingVisitor, v8::internal::ConcurrentMarkingState&gt;::ProcessStrongHeapObject&lt;v8::internal::FullHeapObjectSlot&gt; (2 samples, 0.07%)</title><rect x="17.5856%" y="1573" width="0.0653%" height="15" fill="rgb(216,45,48)" fg:x="539" fg:w="2"/><text x="17.8356%" y="1583.50"></text></g><g><title>perf_event_groups_next (1 samples, 0.03%)</title><rect x="17.7814%" y="1205" width="0.0326%" height="15" fill="rgb(238,213,17)" fg:x="545" fg:w="1"/><text x="18.0314%" y="1215.50"></text></g><g><title>srso_safe_ret (1 samples, 0.03%)</title><rect x="17.8140%" y="1205" width="0.0326%" height="15" fill="rgb(212,13,2)" fg:x="546" fg:w="1"/><text x="18.0640%" y="1215.50"></text></g><g><title>__x86_indirect_thunk_array (3 samples, 0.10%)</title><rect x="18.2055%" y="1189" width="0.0979%" height="15" fill="rgb(240,114,20)" fg:x="558" fg:w="3"/><text x="18.4555%" y="1199.50"></text></g><g><title>perf_event_update_time (1 samples, 0.03%)</title><rect x="18.9886%" y="1157" width="0.0326%" height="15" fill="rgb(228,41,40)" fg:x="582" fg:w="1"/><text x="19.2386%" y="1167.50"></text></g><g><title>perf_event_update_userpage (1 samples, 0.03%)</title><rect x="19.0212%" y="1157" width="0.0326%" height="15" fill="rgb(244,132,35)" fg:x="583" fg:w="1"/><text x="19.2712%" y="1167.50"></text></g><g><title>__rcu_read_unlock (3 samples, 0.10%)</title><rect x="19.1517%" y="1125" width="0.0979%" height="15" fill="rgb(253,189,4)" fg:x="587" fg:w="3"/><text x="19.4017%" y="1135.50"></text></g><g><title>arch_perf_update_userpage (6 samples, 0.20%)</title><rect x="19.7716%" y="1109" width="0.1958%" height="15" fill="rgb(224,37,19)" fg:x="606" fg:w="6"/><text x="20.0216%" y="1119.50"></text></g><g><title>cyc2ns_read_begin (2 samples, 0.07%)</title><rect x="19.9674%" y="1109" width="0.0653%" height="15" fill="rgb(235,223,18)" fg:x="612" fg:w="2"/><text x="20.2174%" y="1119.50"></text></g><g><title>perf_ibs_start (33 samples, 1.08%)</title><rect x="19.0538%" y="1141" width="1.0767%" height="15" fill="rgb(235,163,25)" fg:x="584" fg:w="33"/><text x="19.3038%" y="1151.50"></text></g><g><title>perf_event_update_userpage (27 samples, 0.88%)</title><rect x="19.2496%" y="1125" width="0.8809%" height="15" fill="rgb(217,145,28)" fg:x="590" fg:w="27"/><text x="19.4996%" y="1135.50"></text></g><g><title>srso_safe_ret (3 samples, 0.10%)</title><rect x="20.0326%" y="1109" width="0.0979%" height="15" fill="rgb(223,223,32)" fg:x="614" fg:w="3"/><text x="20.2826%" y="1119.50"></text></g><g><title>perf_ibs_add (36 samples, 1.17%)</title><rect x="19.0538%" y="1157" width="1.1746%" height="15" fill="rgb(227,189,39)" fg:x="584" fg:w="36"/><text x="19.3038%" y="1167.50"></text></g><g><title>srso_safe_ret (3 samples, 0.10%)</title><rect x="20.1305%" y="1141" width="0.0979%" height="15" fill="rgb(248,10,22)" fg:x="617" fg:w="3"/><text x="20.3805%" y="1151.50"></text></g><g><title>perf_log_itrace_start (1 samples, 0.03%)</title><rect x="20.2284%" y="1157" width="0.0326%" height="15" fill="rgb(248,46,39)" fg:x="620" fg:w="1"/><text x="20.4784%" y="1167.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="20.2610%" y="1141" width="0.0326%" height="15" fill="rgb(248,113,48)" fg:x="621" fg:w="1"/><text x="20.5110%" y="1151.50"></text></g><g><title>perf_event_idx_default (1 samples, 0.03%)</title><rect x="20.2936%" y="1141" width="0.0326%" height="15" fill="rgb(245,16,25)" fg:x="622" fg:w="1"/><text x="20.5436%" y="1151.50"></text></g><g><title>calc_timer_values (2 samples, 0.07%)</title><rect x="20.8809%" y="1125" width="0.0653%" height="15" fill="rgb(249,152,16)" fg:x="640" fg:w="2"/><text x="21.1309%" y="1135.50"></text></g><g><title>local_clock (2 samples, 0.07%)</title><rect x="20.8809%" y="1109" width="0.0653%" height="15" fill="rgb(250,16,1)" fg:x="640" fg:w="2"/><text x="21.1309%" y="1119.50"></text></g><g><title>local_clock_noinstr (1 samples, 0.03%)</title><rect x="20.9135%" y="1093" width="0.0326%" height="15" fill="rgb(249,138,3)" fg:x="641" fg:w="1"/><text x="21.1635%" y="1103.50"></text></g><g><title>sched_clock_noinstr (1 samples, 0.03%)</title><rect x="20.9135%" y="1077" width="0.0326%" height="15" fill="rgb(227,71,41)" fg:x="641" fg:w="1"/><text x="21.1635%" y="1087.50"></text></g><g><title>native_sched_clock (1 samples, 0.03%)</title><rect x="20.9135%" y="1061" width="0.0326%" height="15" fill="rgb(209,184,23)" fg:x="641" fg:w="1"/><text x="21.1635%" y="1071.50"></text></g><g><title>perf_swevent_add (22 samples, 0.72%)</title><rect x="20.2610%" y="1157" width="0.7178%" height="15" fill="rgb(223,215,31)" fg:x="621" fg:w="22"/><text x="20.5110%" y="1167.50"></text></g><g><title>perf_event_update_userpage (20 samples, 0.65%)</title><rect x="20.3263%" y="1141" width="0.6525%" height="15" fill="rgb(210,146,28)" fg:x="623" fg:w="20"/><text x="20.5763%" y="1151.50"></text></g><g><title>sched_clock_stable (1 samples, 0.03%)</title><rect x="20.9462%" y="1125" width="0.0326%" height="15" fill="rgb(209,183,41)" fg:x="642" fg:w="1"/><text x="21.1962%" y="1135.50"></text></g><g><title>event_sched_in (73 samples, 2.38%)</title><rect x="18.6949%" y="1173" width="2.3817%" height="15" fill="rgb(209,224,45)" fg:x="573" fg:w="73"/><text x="18.9449%" y="1183.50">ev..</text></g><g><title>srso_safe_ret (3 samples, 0.10%)</title><rect x="20.9788%" y="1157" width="0.0979%" height="15" fill="rgb(224,209,51)" fg:x="643" fg:w="3"/><text x="21.2288%" y="1167.50"></text></g><g><title>perf_swevent_add (3 samples, 0.10%)</title><rect x="21.0767%" y="1173" width="0.0979%" height="15" fill="rgb(223,17,39)" fg:x="646" fg:w="3"/><text x="21.3267%" y="1183.50"></text></g><g><title>merge_sched_in (89 samples, 2.90%)</title><rect x="18.3034%" y="1189" width="2.9038%" height="15" fill="rgb(234,204,37)" fg:x="561" fg:w="89"/><text x="18.5534%" y="1199.50">me..</text></g><g><title>srso_safe_ret (1 samples, 0.03%)</title><rect x="21.1746%" y="1173" width="0.0326%" height="15" fill="rgb(236,120,5)" fg:x="649" fg:w="1"/><text x="21.4246%" y="1183.50"></text></g><g><title>perf_event_groups_first (3 samples, 0.10%)</title><rect x="21.2072%" y="1189" width="0.0979%" height="15" fill="rgb(248,97,27)" fg:x="650" fg:w="3"/><text x="21.4572%" y="1199.50"></text></g><g><title>perf_event_groups_next (6 samples, 0.20%)</title><rect x="21.3051%" y="1189" width="0.1958%" height="15" fill="rgb(240,66,17)" fg:x="653" fg:w="6"/><text x="21.5551%" y="1199.50"></text></g><g><title>perf_pmu_nop_int (4 samples, 0.13%)</title><rect x="21.5008%" y="1189" width="0.1305%" height="15" fill="rgb(210,79,3)" fg:x="659" fg:w="4"/><text x="21.7508%" y="1199.50"></text></g><g><title>perf_pmu_nop_txn (1 samples, 0.03%)</title><rect x="21.6313%" y="1189" width="0.0326%" height="15" fill="rgb(214,176,27)" fg:x="663" fg:w="1"/><text x="21.8813%" y="1199.50"></text></g><g><title>rb_next (1 samples, 0.03%)</title><rect x="21.6639%" y="1189" width="0.0326%" height="15" fill="rgb(235,185,3)" fg:x="664" fg:w="1"/><text x="21.9139%" y="1199.50"></text></g><g><title>__evlist__enable.constprop.0 (128 samples, 4.18%)</title><rect x="17.6509%" y="1541" width="4.1762%" height="15" fill="rgb(227,24,12)" fg:x="541" fg:w="128"/><text x="17.9009%" y="1551.50">__evl..</text></g><g><title>perf_evsel__enable_cpu (128 samples, 4.18%)</title><rect x="17.6509%" y="1525" width="4.1762%" height="15" fill="rgb(252,169,48)" fg:x="541" fg:w="128"/><text x="17.9009%" y="1535.50">perf_..</text></g><g><title>perf_evsel__run_ioctl (128 samples, 4.18%)</title><rect x="17.6509%" y="1509" width="4.1762%" height="15" fill="rgb(212,65,1)" fg:x="541" fg:w="128"/><text x="17.9009%" y="1519.50">perf_..</text></g><g><title>perf_evsel__ioctl (128 samples, 4.18%)</title><rect x="17.6509%" y="1493" width="4.1762%" height="15" fill="rgb(242,39,24)" fg:x="541" fg:w="128"/><text x="17.9009%" y="1503.50">perf_..</text></g><g><title>__GI___ioctl (128 samples, 4.18%)</title><rect x="17.6509%" y="1477" width="4.1762%" height="15" fill="rgb(249,32,23)" fg:x="541" fg:w="128"/><text x="17.9009%" y="1487.50">__GI_..</text></g><g><title>entry_SYSCALL_64 (128 samples, 4.18%)</title><rect x="17.6509%" y="1461" width="4.1762%" height="15" fill="rgb(251,195,23)" fg:x="541" fg:w="128"/><text x="17.9009%" y="1471.50">entry..</text></g><g><title>do_syscall_64 (128 samples, 4.18%)</title><rect x="17.6509%" y="1445" width="4.1762%" height="15" fill="rgb(236,174,8)" fg:x="541" fg:w="128"/><text x="17.9009%" y="1455.50">do_sy..</text></g><g><title>__x64_sys_ioctl (128 samples, 4.18%)</title><rect x="17.6509%" y="1429" width="4.1762%" height="15" fill="rgb(220,197,8)" fg:x="541" fg:w="128"/><text x="17.9009%" y="1439.50">__x64..</text></g><g><title>perf_ioctl (128 samples, 4.18%)</title><rect x="17.6509%" y="1413" width="4.1762%" height="15" fill="rgb(240,108,37)" fg:x="541" fg:w="128"/><text x="17.9009%" y="1423.50">perf_..</text></g><g><title>_perf_ioctl (128 samples, 4.18%)</title><rect x="17.6509%" y="1397" width="4.1762%" height="15" fill="rgb(232,176,24)" fg:x="541" fg:w="128"/><text x="17.9009%" y="1407.50">_perf..</text></g><g><title>perf_event_for_each_child (128 samples, 4.18%)</title><rect x="17.6509%" y="1381" width="4.1762%" height="15" fill="rgb(243,35,29)" fg:x="541" fg:w="128"/><text x="17.9009%" y="1391.50">perf_..</text></g><g><title>_perf_event_enable (128 samples, 4.18%)</title><rect x="17.6509%" y="1365" width="4.1762%" height="15" fill="rgb(210,37,18)" fg:x="541" fg:w="128"/><text x="17.9009%" y="1375.50">_perf..</text></g><g><title>event_function_call (128 samples, 4.18%)</title><rect x="17.6509%" y="1349" width="4.1762%" height="15" fill="rgb(224,184,40)" fg:x="541" fg:w="128"/><text x="17.9009%" y="1359.50">event..</text></g><g><title>smp_call_function_single (128 samples, 4.18%)</title><rect x="17.6509%" y="1333" width="4.1762%" height="15" fill="rgb(236,39,29)" fg:x="541" fg:w="128"/><text x="17.9009%" y="1343.50">smp_c..</text></g><g><title>generic_exec_single (128 samples, 4.18%)</title><rect x="17.6509%" y="1317" width="4.1762%" height="15" fill="rgb(232,48,39)" fg:x="541" fg:w="128"/><text x="17.9009%" y="1327.50">gener..</text></g><g><title>remote_function (128 samples, 4.18%)</title><rect x="17.6509%" y="1301" width="4.1762%" height="15" fill="rgb(236,34,42)" fg:x="541" fg:w="128"/><text x="17.9009%" y="1311.50">remot..</text></g><g><title>event_function (128 samples, 4.18%)</title><rect x="17.6509%" y="1285" width="4.1762%" height="15" fill="rgb(243,106,37)" fg:x="541" fg:w="128"/><text x="17.9009%" y="1295.50">event..</text></g><g><title>__perf_event_enable (127 samples, 4.14%)</title><rect x="17.6835%" y="1269" width="4.1436%" height="15" fill="rgb(218,96,6)" fg:x="542" fg:w="127"/><text x="17.9335%" y="1279.50">__per..</text></g><g><title>ctx_resched (127 samples, 4.14%)</title><rect x="17.6835%" y="1253" width="4.1436%" height="15" fill="rgb(235,130,12)" fg:x="542" fg:w="127"/><text x="17.9335%" y="1263.50">ctx_r..</text></g><g><title>ctx_sched_in (127 samples, 4.14%)</title><rect x="17.6835%" y="1237" width="4.1436%" height="15" fill="rgb(231,95,0)" fg:x="542" fg:w="127"/><text x="17.9335%" y="1247.50">ctx_s..</text></g><g><title>ctx_groups_sched_in (127 samples, 4.14%)</title><rect x="17.6835%" y="1221" width="4.1436%" height="15" fill="rgb(228,12,23)" fg:x="542" fg:w="127"/><text x="17.9335%" y="1231.50">ctx_g..</text></g><g><title>visit_groups_merge.constprop.0.isra.0 (122 samples, 3.98%)</title><rect x="17.8467%" y="1205" width="3.9804%" height="15" fill="rgb(216,12,1)" fg:x="547" fg:w="122"/><text x="18.0967%" y="1215.50">visi..</text></g><g><title>srso_safe_ret (4 samples, 0.13%)</title><rect x="21.6966%" y="1189" width="0.1305%" height="15" fill="rgb(219,59,3)" fg:x="665" fg:w="4"/><text x="21.9466%" y="1199.50"></text></g><g><title>perf (129 samples, 4.21%)</title><rect x="17.6509%" y="1589" width="4.2088%" height="15" fill="rgb(215,208,46)" fg:x="541" fg:w="129"/><text x="17.9009%" y="1599.50">perf</text></g><g><title>[unknown] (129 samples, 4.21%)</title><rect x="17.6509%" y="1573" width="4.2088%" height="15" fill="rgb(254,224,29)" fg:x="541" fg:w="129"/><text x="17.9009%" y="1583.50">[unkn..</text></g><g><title>__cmd_record.constprop.0 (129 samples, 4.21%)</title><rect x="17.6509%" y="1557" width="4.2088%" height="15" fill="rgb(232,14,29)" fg:x="541" fg:w="129"/><text x="17.9009%" y="1567.50">__cmd..</text></g><g><title>perf_event__synthesize_comm (1 samples, 0.03%)</title><rect x="21.8271%" y="1541" width="0.0326%" height="15" fill="rgb(208,45,52)" fg:x="669" fg:w="1"/><text x="22.0771%" y="1551.50"></text></g><g><title>perf_tool__process_synth_event (1 samples, 0.03%)</title><rect x="21.8271%" y="1525" width="0.0326%" height="15" fill="rgb(234,191,28)" fg:x="669" fg:w="1"/><text x="22.0771%" y="1535.50"></text></g><g><title>process_synthesized_event (1 samples, 0.03%)</title><rect x="21.8271%" y="1509" width="0.0326%" height="15" fill="rgb(244,67,43)" fg:x="669" fg:w="1"/><text x="22.0771%" y="1519.50"></text></g><g><title>writen (1 samples, 0.03%)</title><rect x="21.8271%" y="1493" width="0.0326%" height="15" fill="rgb(236,189,24)" fg:x="669" fg:w="1"/><text x="22.0771%" y="1503.50"></text></g><g><title>ion (1 samples, 0.03%)</title><rect x="21.8271%" y="1477" width="0.0326%" height="15" fill="rgb(239,214,33)" fg:x="669" fg:w="1"/><text x="22.0771%" y="1487.50"></text></g><g><title>__GI___libc_write (1 samples, 0.03%)</title><rect x="21.8271%" y="1461" width="0.0326%" height="15" fill="rgb(226,176,41)" fg:x="669" fg:w="1"/><text x="22.0771%" y="1471.50"></text></g><g><title>__GI___libc_write (1 samples, 0.03%)</title><rect x="21.8271%" y="1445" width="0.0326%" height="15" fill="rgb(248,47,8)" fg:x="669" fg:w="1"/><text x="22.0771%" y="1455.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="21.8271%" y="1429" width="0.0326%" height="15" fill="rgb(218,81,44)" fg:x="669" fg:w="1"/><text x="22.0771%" y="1439.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="21.8271%" y="1413" width="0.0326%" height="15" fill="rgb(213,98,6)" fg:x="669" fg:w="1"/><text x="22.0771%" y="1423.50"></text></g><g><title>__x64_sys_write (1 samples, 0.03%)</title><rect x="21.8271%" y="1397" width="0.0326%" height="15" fill="rgb(222,85,22)" fg:x="669" fg:w="1"/><text x="22.0771%" y="1407.50"></text></g><g><title>ksys_write (1 samples, 0.03%)</title><rect x="21.8271%" y="1381" width="0.0326%" height="15" fill="rgb(239,46,39)" fg:x="669" fg:w="1"/><text x="22.0771%" y="1391.50"></text></g><g><title>vfs_write (1 samples, 0.03%)</title><rect x="21.8271%" y="1365" width="0.0326%" height="15" fill="rgb(237,12,29)" fg:x="669" fg:w="1"/><text x="22.0771%" y="1375.50"></text></g><g><title>ext4_file_write_iter (1 samples, 0.03%)</title><rect x="21.8271%" y="1349" width="0.0326%" height="15" fill="rgb(214,77,8)" fg:x="669" fg:w="1"/><text x="22.0771%" y="1359.50"></text></g><g><title>ext4_buffered_write_iter (1 samples, 0.03%)</title><rect x="21.8271%" y="1333" width="0.0326%" height="15" fill="rgb(217,168,37)" fg:x="669" fg:w="1"/><text x="22.0771%" y="1343.50"></text></g><g><title>generic_perform_write (1 samples, 0.03%)</title><rect x="21.8271%" y="1317" width="0.0326%" height="15" fill="rgb(221,217,23)" fg:x="669" fg:w="1"/><text x="22.0771%" y="1327.50"></text></g><g><title>balance_dirty_pages_ratelimited (1 samples, 0.03%)</title><rect x="21.8271%" y="1301" width="0.0326%" height="15" fill="rgb(243,229,36)" fg:x="669" fg:w="1"/><text x="22.0771%" y="1311.50"></text></g><g><title>balance_dirty_pages_ratelimited_flags (1 samples, 0.03%)</title><rect x="21.8271%" y="1285" width="0.0326%" height="15" fill="rgb(251,163,40)" fg:x="669" fg:w="1"/><text x="22.0771%" y="1295.50"></text></g><g><title>balance_dirty_pages (1 samples, 0.03%)</title><rect x="21.8271%" y="1269" width="0.0326%" height="15" fill="rgb(237,222,12)" fg:x="669" fg:w="1"/><text x="22.0771%" y="1279.50"></text></g><g><title>mem_cgroup_wb_stats (1 samples, 0.03%)</title><rect x="21.8271%" y="1253" width="0.0326%" height="15" fill="rgb(248,132,6)" fg:x="669" fg:w="1"/><text x="22.0771%" y="1263.50"></text></g><g><title>do_flush_stats (1 samples, 0.03%)</title><rect x="21.8271%" y="1237" width="0.0326%" height="15" fill="rgb(227,167,50)" fg:x="669" fg:w="1"/><text x="22.0771%" y="1247.50"></text></g><g><title>cgroup_rstat_flush (1 samples, 0.03%)</title><rect x="21.8271%" y="1221" width="0.0326%" height="15" fill="rgb(242,84,37)" fg:x="669" fg:w="1"/><text x="22.0771%" y="1231.50"></text></g><g><title>cgroup_rstat_flush_locked (1 samples, 0.03%)</title><rect x="21.8271%" y="1205" width="0.0326%" height="15" fill="rgb(212,4,50)" fg:x="669" fg:w="1"/><text x="22.0771%" y="1215.50"></text></g><g><title>mem_cgroup_css_rstat_flush (1 samples, 0.03%)</title><rect x="21.8271%" y="1189" width="0.0326%" height="15" fill="rgb(230,228,32)" fg:x="669" fg:w="1"/><text x="22.0771%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="21.8597%" y="1573" width="0.0326%" height="15" fill="rgb(248,217,23)" fg:x="670" fg:w="1"/><text x="22.1097%" y="1583.50"></text></g><g><title>__libc_open64 (1 samples, 0.03%)</title><rect x="21.8597%" y="1557" width="0.0326%" height="15" fill="rgb(238,197,32)" fg:x="670" fg:w="1"/><text x="22.1097%" y="1567.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="21.8597%" y="1541" width="0.0326%" height="15" fill="rgb(236,106,1)" fg:x="670" fg:w="1"/><text x="22.1097%" y="1551.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="21.8597%" y="1525" width="0.0326%" height="15" fill="rgb(219,228,13)" fg:x="670" fg:w="1"/><text x="22.1097%" y="1535.50"></text></g><g><title>__x64_sys_openat (1 samples, 0.03%)</title><rect x="21.8597%" y="1509" width="0.0326%" height="15" fill="rgb(238,30,35)" fg:x="670" fg:w="1"/><text x="22.1097%" y="1519.50"></text></g><g><title>do_sys_openat2 (1 samples, 0.03%)</title><rect x="21.8597%" y="1493" width="0.0326%" height="15" fill="rgb(236,70,23)" fg:x="670" fg:w="1"/><text x="22.1097%" y="1503.50"></text></g><g><title>do_filp_open (1 samples, 0.03%)</title><rect x="21.8597%" y="1477" width="0.0326%" height="15" fill="rgb(249,104,48)" fg:x="670" fg:w="1"/><text x="22.1097%" y="1487.50"></text></g><g><title>path_openat (1 samples, 0.03%)</title><rect x="21.8597%" y="1461" width="0.0326%" height="15" fill="rgb(254,117,50)" fg:x="670" fg:w="1"/><text x="22.1097%" y="1471.50"></text></g><g><title>lookup_fast (1 samples, 0.03%)</title><rect x="21.8597%" y="1445" width="0.0326%" height="15" fill="rgb(223,152,4)" fg:x="670" fg:w="1"/><text x="22.1097%" y="1455.50"></text></g><g><title>__d_lookup_rcu (1 samples, 0.03%)</title><rect x="21.8597%" y="1429" width="0.0326%" height="15" fill="rgb(245,6,2)" fg:x="670" fg:w="1"/><text x="22.1097%" y="1439.50"></text></g><g><title>ps (2 samples, 0.07%)</title><rect x="21.8597%" y="1589" width="0.0653%" height="15" fill="rgb(249,150,24)" fg:x="670" fg:w="2"/><text x="22.1097%" y="1599.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="21.8923%" y="1573" width="0.0326%" height="15" fill="rgb(228,185,42)" fg:x="671" fg:w="1"/><text x="22.1423%" y="1583.50"></text></g><g><title>PyNumber_Multiply (1 samples, 0.03%)</title><rect x="22.0555%" y="1301" width="0.0326%" height="15" fill="rgb(226,39,33)" fg:x="676" fg:w="1"/><text x="22.3055%" y="1311.50"></text></g><g><title>[python3.10] (1 samples, 0.03%)</title><rect x="22.0555%" y="1285" width="0.0326%" height="15" fill="rgb(221,166,19)" fg:x="676" fg:w="1"/><text x="22.3055%" y="1295.50"></text></g><g><title>_PyLong_New (1 samples, 0.03%)</title><rect x="22.0555%" y="1269" width="0.0326%" height="15" fill="rgb(209,109,2)" fg:x="676" fg:w="1"/><text x="22.3055%" y="1279.50"></text></g><g><title>PyBytes_FromStringAndSize (6 samples, 0.20%)</title><rect x="22.1533%" y="1269" width="0.1958%" height="15" fill="rgb(252,216,26)" fg:x="679" fg:w="6"/><text x="22.4033%" y="1279.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.20%)</title><rect x="22.1533%" y="1253" width="0.1958%" height="15" fill="rgb(227,173,36)" fg:x="679" fg:w="6"/><text x="22.4033%" y="1263.50"></text></g><g><title>_int_malloc (6 samples, 0.20%)</title><rect x="22.1533%" y="1237" width="0.1958%" height="15" fill="rgb(209,90,7)" fg:x="679" fg:w="6"/><text x="22.4033%" y="1247.50"></text></g><g><title>[python3.10] (4 samples, 0.13%)</title><rect x="22.3817%" y="1253" width="0.1305%" height="15" fill="rgb(250,194,11)" fg:x="686" fg:w="4"/><text x="22.6317%" y="1263.50"></text></g><g><title>___pthread_mutex_lock (2 samples, 0.07%)</title><rect x="22.4470%" y="1237" width="0.0653%" height="15" fill="rgb(220,72,50)" fg:x="688" fg:w="2"/><text x="22.6970%" y="1247.50"></text></g><g><title>__wrgsbase_inactive (1 samples, 0.03%)</title><rect x="22.5122%" y="1237" width="0.0326%" height="15" fill="rgb(222,106,48)" fg:x="690" fg:w="1"/><text x="22.7622%" y="1247.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="22.5449%" y="1237" width="0.0326%" height="15" fill="rgb(216,220,45)" fg:x="691" fg:w="1"/><text x="22.7949%" y="1247.50"></text></g><g><title>__fdget_pos (1 samples, 0.03%)</title><rect x="22.6754%" y="1173" width="0.0326%" height="15" fill="rgb(234,112,18)" fg:x="695" fg:w="1"/><text x="22.9254%" y="1183.50"></text></g><g><title>__fget_light (1 samples, 0.03%)</title><rect x="22.6754%" y="1157" width="0.0326%" height="15" fill="rgb(206,179,9)" fg:x="695" fg:w="1"/><text x="22.9254%" y="1167.50"></text></g><g><title>__fget_light (1 samples, 0.03%)</title><rect x="22.7080%" y="1173" width="0.0326%" height="15" fill="rgb(215,115,40)" fg:x="696" fg:w="1"/><text x="22.9580%" y="1183.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="22.7406%" y="1141" width="0.0326%" height="15" fill="rgb(222,69,34)" fg:x="697" fg:w="1"/><text x="22.9906%" y="1151.50"></text></g><g><title>__fsnotify_parent (2 samples, 0.07%)</title><rect x="22.7406%" y="1157" width="0.0653%" height="15" fill="rgb(209,161,10)" fg:x="697" fg:w="2"/><text x="22.9906%" y="1167.50"></text></g><g><title>dput (1 samples, 0.03%)</title><rect x="22.7732%" y="1141" width="0.0326%" height="15" fill="rgb(217,6,38)" fg:x="698" fg:w="1"/><text x="23.0232%" y="1151.50"></text></g><g><title>copyout (1 samples, 0.03%)</title><rect x="22.8385%" y="1077" width="0.0326%" height="15" fill="rgb(229,229,48)" fg:x="700" fg:w="1"/><text x="23.0885%" y="1087.50"></text></g><g><title>copy_page_to_iter (9 samples, 0.29%)</title><rect x="22.8385%" y="1109" width="0.2936%" height="15" fill="rgb(225,21,28)" fg:x="700" fg:w="9"/><text x="23.0885%" y="1119.50"></text></g><g><title>_copy_to_iter (9 samples, 0.29%)</title><rect x="22.8385%" y="1093" width="0.2936%" height="15" fill="rgb(206,33,13)" fg:x="700" fg:w="9"/><text x="23.0885%" y="1103.50"></text></g><g><title>rep_movs_alternative (8 samples, 0.26%)</title><rect x="22.8711%" y="1077" width="0.2610%" height="15" fill="rgb(242,178,17)" fg:x="701" fg:w="8"/><text x="23.1211%" y="1087.50"></text></g><g><title>filemap_get_read_batch (6 samples, 0.20%)</title><rect x="23.2300%" y="1093" width="0.1958%" height="15" fill="rgb(220,162,5)" fg:x="712" fg:w="6"/><text x="23.4800%" y="1103.50"></text></g><g><title>xas_load (2 samples, 0.07%)</title><rect x="23.3605%" y="1077" width="0.0653%" height="15" fill="rgb(210,33,43)" fg:x="716" fg:w="2"/><text x="23.6105%" y="1087.50"></text></g><g><title>__switch_to (1 samples, 0.03%)</title><rect x="23.6542%" y="1029" width="0.0326%" height="15" fill="rgb(216,116,54)" fg:x="725" fg:w="1"/><text x="23.9042%" y="1039.50"></text></g><g><title>avg_vruntime (1 samples, 0.03%)</title><rect x="23.7194%" y="997" width="0.0326%" height="15" fill="rgb(249,92,24)" fg:x="727" fg:w="1"/><text x="23.9694%" y="1007.50"></text></g><g><title>__cgroup_account_cputime (1 samples, 0.03%)</title><rect x="24.1762%" y="981" width="0.0326%" height="15" fill="rgb(231,189,14)" fg:x="741" fg:w="1"/><text x="24.4262%" y="991.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.03%)</title><rect x="24.2088%" y="981" width="0.0326%" height="15" fill="rgb(230,8,41)" fg:x="742" fg:w="1"/><text x="24.4588%" y="991.50"></text></g><g><title>avg_vruntime (1 samples, 0.03%)</title><rect x="24.2414%" y="981" width="0.0326%" height="15" fill="rgb(249,7,27)" fg:x="743" fg:w="1"/><text x="24.4914%" y="991.50"></text></g><g><title>update_curr (2 samples, 0.07%)</title><rect x="24.2741%" y="981" width="0.0653%" height="15" fill="rgb(232,86,5)" fg:x="744" fg:w="2"/><text x="24.5241%" y="991.50"></text></g><g><title>__cgroup_account_cputime (1 samples, 0.03%)</title><rect x="24.3067%" y="965" width="0.0326%" height="15" fill="rgb(224,175,18)" fg:x="745" fg:w="1"/><text x="24.5567%" y="975.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.03%)</title><rect x="24.3067%" y="949" width="0.0326%" height="15" fill="rgb(220,129,12)" fg:x="745" fg:w="1"/><text x="24.5567%" y="959.50"></text></g><g><title>dequeue_entity (21 samples, 0.69%)</title><rect x="23.7520%" y="997" width="0.6852%" height="15" fill="rgb(210,19,36)" fg:x="728" fg:w="21"/><text x="24.0020%" y="1007.50"></text></g><g><title>update_load_avg (3 samples, 0.10%)</title><rect x="24.3393%" y="981" width="0.0979%" height="15" fill="rgb(219,96,14)" fg:x="746" fg:w="3"/><text x="24.5893%" y="991.50"></text></g><g><title>dequeue_task (24 samples, 0.78%)</title><rect x="23.6868%" y="1029" width="0.7830%" height="15" fill="rgb(249,106,1)" fg:x="726" fg:w="24"/><text x="23.9368%" y="1039.50"></text></g><g><title>dequeue_task_fair (24 samples, 0.78%)</title><rect x="23.6868%" y="1013" width="0.7830%" height="15" fill="rgb(249,155,20)" fg:x="726" fg:w="24"/><text x="23.9368%" y="1023.50"></text></g><g><title>update_cfs_group (1 samples, 0.03%)</title><rect x="24.4372%" y="997" width="0.0326%" height="15" fill="rgb(244,168,9)" fg:x="749" fg:w="1"/><text x="24.6872%" y="1007.50"></text></g><g><title>pick_next_task_fair (4 samples, 0.13%)</title><rect x="24.4698%" y="1029" width="0.1305%" height="15" fill="rgb(216,23,50)" fg:x="750" fg:w="4"/><text x="24.7198%" y="1039.50"></text></g><g><title>newidle_balance (3 samples, 0.10%)</title><rect x="24.5024%" y="1013" width="0.0979%" height="15" fill="rgb(224,219,20)" fg:x="751" fg:w="3"/><text x="24.7524%" y="1023.50"></text></g><g><title>load_balance (1 samples, 0.03%)</title><rect x="24.5677%" y="997" width="0.0326%" height="15" fill="rgb(222,156,15)" fg:x="753" fg:w="1"/><text x="24.8177%" y="1007.50"></text></g><g><title>find_busiest_group (1 samples, 0.03%)</title><rect x="24.5677%" y="981" width="0.0326%" height="15" fill="rgb(231,97,17)" fg:x="753" fg:w="1"/><text x="24.8177%" y="991.50"></text></g><g><title>update_sd_lb_stats.constprop.0 (1 samples, 0.03%)</title><rect x="24.5677%" y="965" width="0.0326%" height="15" fill="rgb(218,70,48)" fg:x="753" fg:w="1"/><text x="24.8177%" y="975.50"></text></g><g><title>pick_next_task_idle (2 samples, 0.07%)</title><rect x="24.6003%" y="1029" width="0.0653%" height="15" fill="rgb(212,196,52)" fg:x="754" fg:w="2"/><text x="24.8503%" y="1039.50"></text></g><g><title>__update_idle_core (2 samples, 0.07%)</title><rect x="24.6003%" y="1013" width="0.0653%" height="15" fill="rgb(243,203,18)" fg:x="754" fg:w="2"/><text x="24.8503%" y="1023.50"></text></g><g><title>psi_group_change (2 samples, 0.07%)</title><rect x="24.7308%" y="1013" width="0.0653%" height="15" fill="rgb(252,125,41)" fg:x="758" fg:w="2"/><text x="24.9808%" y="1023.50"></text></g><g><title>psi_task_switch (6 samples, 0.20%)</title><rect x="24.6656%" y="1029" width="0.1958%" height="15" fill="rgb(223,180,33)" fg:x="756" fg:w="6"/><text x="24.9156%" y="1039.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.07%)</title><rect x="24.7961%" y="1013" width="0.0653%" height="15" fill="rgb(254,159,46)" fg:x="760" fg:w="2"/><text x="25.0461%" y="1023.50"></text></g><g><title>sched_clock (2 samples, 0.07%)</title><rect x="24.7961%" y="997" width="0.0653%" height="15" fill="rgb(254,38,10)" fg:x="760" fg:w="2"/><text x="25.0461%" y="1007.50"></text></g><g><title>sched_clock_noinstr (2 samples, 0.07%)</title><rect x="24.7961%" y="981" width="0.0653%" height="15" fill="rgb(208,217,32)" fg:x="760" fg:w="2"/><text x="25.0461%" y="991.50"></text></g><g><title>native_sched_clock (2 samples, 0.07%)</title><rect x="24.7961%" y="965" width="0.0653%" height="15" fill="rgb(221,120,13)" fg:x="760" fg:w="2"/><text x="25.0461%" y="975.50"></text></g><g><title>put_prev_task_fair (2 samples, 0.07%)</title><rect x="24.8613%" y="1029" width="0.0653%" height="15" fill="rgb(246,54,52)" fg:x="762" fg:w="2"/><text x="25.1113%" y="1039.50"></text></g><g><title>put_prev_entity (1 samples, 0.03%)</title><rect x="24.8940%" y="1013" width="0.0326%" height="15" fill="rgb(242,34,25)" fg:x="763" fg:w="1"/><text x="25.1440%" y="1023.50"></text></g><g><title>rcu_note_context_switch (1 samples, 0.03%)</title><rect x="24.9266%" y="1029" width="0.0326%" height="15" fill="rgb(247,209,9)" fg:x="764" fg:w="1"/><text x="25.1766%" y="1039.50"></text></g><g><title>psi_account_irqtime (1 samples, 0.03%)</title><rect x="24.9592%" y="1013" width="0.0326%" height="15" fill="rgb(228,71,26)" fg:x="765" fg:w="1"/><text x="25.2092%" y="1023.50"></text></g><g><title>srso_safe_ret (1 samples, 0.03%)</title><rect x="24.9592%" y="997" width="0.0326%" height="15" fill="rgb(222,145,49)" fg:x="765" fg:w="1"/><text x="25.2092%" y="1007.50"></text></g><g><title>__schedule (49 samples, 1.60%)</title><rect x="23.4910%" y="1045" width="1.5987%" height="15" fill="rgb(218,121,17)" fg:x="720" fg:w="49"/><text x="23.7410%" y="1055.50"></text></g><g><title>update_rq_clock (4 samples, 0.13%)</title><rect x="24.9592%" y="1029" width="0.1305%" height="15" fill="rgb(244,50,7)" fg:x="765" fg:w="4"/><text x="25.2092%" y="1039.50"></text></g><g><title>sched_clock_cpu (3 samples, 0.10%)</title><rect x="24.9918%" y="1013" width="0.0979%" height="15" fill="rgb(246,229,37)" fg:x="766" fg:w="3"/><text x="25.2418%" y="1023.50"></text></g><g><title>sched_clock (1 samples, 0.03%)</title><rect x="25.0571%" y="997" width="0.0326%" height="15" fill="rgb(225,18,5)" fg:x="768" fg:w="1"/><text x="25.3071%" y="1007.50"></text></g><g><title>sched_clock_noinstr (1 samples, 0.03%)</title><rect x="25.0571%" y="981" width="0.0326%" height="15" fill="rgb(213,204,8)" fg:x="768" fg:w="1"/><text x="25.3071%" y="991.50"></text></g><g><title>native_sched_clock (1 samples, 0.03%)</title><rect x="25.0571%" y="965" width="0.0326%" height="15" fill="rgb(238,103,6)" fg:x="768" fg:w="1"/><text x="25.3071%" y="975.50"></text></g><g><title>pick_next_task_idle (1 samples, 0.03%)</title><rect x="25.0897%" y="1045" width="0.0326%" height="15" fill="rgb(222,25,35)" fg:x="769" fg:w="1"/><text x="25.3397%" y="1055.50"></text></g><g><title>folio_wait_bit_common (53 samples, 1.73%)</title><rect x="23.4258%" y="1093" width="1.7292%" height="15" fill="rgb(213,203,35)" fg:x="718" fg:w="53"/><text x="23.6758%" y="1103.50"></text></g><g><title>io_schedule (51 samples, 1.66%)</title><rect x="23.4910%" y="1077" width="1.6639%" height="15" fill="rgb(221,79,53)" fg:x="720" fg:w="51"/><text x="23.7410%" y="1087.50"></text></g><g><title>schedule (51 samples, 1.66%)</title><rect x="23.4910%" y="1061" width="1.6639%" height="15" fill="rgb(243,200,35)" fg:x="720" fg:w="51"/><text x="23.7410%" y="1071.50"></text></g><g><title>raw_spin_rq_lock_nested (1 samples, 0.03%)</title><rect x="25.1223%" y="1045" width="0.0326%" height="15" fill="rgb(248,60,25)" fg:x="770" fg:w="1"/><text x="25.3723%" y="1055.50"></text></g><g><title>filemap_add_folio (1 samples, 0.03%)</title><rect x="25.1550%" y="1061" width="0.0326%" height="15" fill="rgb(227,53,46)" fg:x="771" fg:w="1"/><text x="25.4050%" y="1071.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="25.5139%" y="1045" width="0.0326%" height="15" fill="rgb(216,120,32)" fg:x="782" fg:w="1"/><text x="25.7639%" y="1055.50"></text></g><g><title>ext4_readahead (1 samples, 0.03%)</title><rect x="25.5465%" y="1045" width="0.0326%" height="15" fill="rgb(220,134,1)" fg:x="783" fg:w="1"/><text x="25.7965%" y="1055.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="25.7749%" y="997" width="0.0326%" height="15" fill="rgb(237,168,5)" fg:x="790" fg:w="1"/><text x="26.0249%" y="1007.50"></text></g><g><title>page_counter_try_charge (1 samples, 0.03%)</title><rect x="25.8728%" y="965" width="0.0326%" height="15" fill="rgb(231,100,33)" fg:x="793" fg:w="1"/><text x="26.1228%" y="975.50"></text></g><g><title>mem_cgroup_flush_stats (1 samples, 0.03%)</title><rect x="25.9054%" y="917" width="0.0326%" height="15" fill="rgb(236,177,47)" fg:x="794" fg:w="1"/><text x="26.1554%" y="927.50"></text></g><g><title>do_flush_stats (1 samples, 0.03%)</title><rect x="25.9054%" y="901" width="0.0326%" height="15" fill="rgb(235,7,49)" fg:x="794" fg:w="1"/><text x="26.1554%" y="911.50"></text></g><g><title>cgroup_rstat_flush (1 samples, 0.03%)</title><rect x="25.9054%" y="885" width="0.0326%" height="15" fill="rgb(232,119,22)" fg:x="794" fg:w="1"/><text x="26.1554%" y="895.50"></text></g><g><title>bpf_rstat_flush (1 samples, 0.03%)</title><rect x="25.9054%" y="869" width="0.0326%" height="15" fill="rgb(254,73,53)" fg:x="794" fg:w="1"/><text x="26.1554%" y="879.50"></text></g><g><title>folio_unlock (1 samples, 0.03%)</title><rect x="25.9706%" y="901" width="0.0326%" height="15" fill="rgb(251,35,20)" fg:x="796" fg:w="1"/><text x="26.2206%" y="911.50"></text></g><g><title>isolate_lru_folios (2 samples, 0.07%)</title><rect x="26.0033%" y="901" width="0.0653%" height="15" fill="rgb(241,119,20)" fg:x="797" fg:w="2"/><text x="26.2533%" y="911.50"></text></g><g><title>__mem_cgroup_uncharge_list (1 samples, 0.03%)</title><rect x="26.1990%" y="885" width="0.0326%" height="15" fill="rgb(207,102,14)" fg:x="803" fg:w="1"/><text x="26.4490%" y="895.50"></text></g><g><title>uncharge_folio (1 samples, 0.03%)</title><rect x="26.1990%" y="869" width="0.0326%" height="15" fill="rgb(248,201,50)" fg:x="803" fg:w="1"/><text x="26.4490%" y="879.50"></text></g><g><title>filemap_unaccount_folio (1 samples, 0.03%)</title><rect x="26.2969%" y="853" width="0.0326%" height="15" fill="rgb(222,185,44)" fg:x="806" fg:w="1"/><text x="26.5469%" y="863.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.03%)</title><rect x="26.2969%" y="837" width="0.0326%" height="15" fill="rgb(218,107,18)" fg:x="806" fg:w="1"/><text x="26.5469%" y="847.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.03%)</title><rect x="26.2969%" y="821" width="0.0326%" height="15" fill="rgb(237,177,39)" fg:x="806" fg:w="1"/><text x="26.5469%" y="831.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.03%)</title><rect x="26.2969%" y="805" width="0.0326%" height="15" fill="rgb(246,69,6)" fg:x="806" fg:w="1"/><text x="26.5469%" y="815.50"></text></g><g><title>xas_init_marks (1 samples, 0.03%)</title><rect x="26.3295%" y="853" width="0.0326%" height="15" fill="rgb(234,208,37)" fg:x="807" fg:w="1"/><text x="26.5795%" y="863.50"></text></g><g><title>__filemap_remove_folio (3 samples, 0.10%)</title><rect x="26.2969%" y="869" width="0.0979%" height="15" fill="rgb(225,4,6)" fg:x="806" fg:w="3"/><text x="26.5469%" y="879.50"></text></g><g><title>xas_store (1 samples, 0.03%)</title><rect x="26.3622%" y="853" width="0.0326%" height="15" fill="rgb(233,45,0)" fg:x="808" fg:w="1"/><text x="26.6122%" y="863.50"></text></g><g><title>xas_create (1 samples, 0.03%)</title><rect x="26.3622%" y="837" width="0.0326%" height="15" fill="rgb(226,136,5)" fg:x="808" fg:w="1"/><text x="26.6122%" y="847.50"></text></g><g><title>xas_descend (1 samples, 0.03%)</title><rect x="26.3622%" y="821" width="0.0326%" height="15" fill="rgb(211,91,47)" fg:x="808" fg:w="1"/><text x="26.6122%" y="831.50"></text></g><g><title>_raw_spin_lock_irq (2 samples, 0.07%)</title><rect x="26.3948%" y="869" width="0.0653%" height="15" fill="rgb(242,88,51)" fg:x="809" fg:w="2"/><text x="26.6448%" y="879.50"></text></g><g><title>__remove_mapping (8 samples, 0.26%)</title><rect x="26.2316%" y="885" width="0.2610%" height="15" fill="rgb(230,91,28)" fg:x="804" fg:w="8"/><text x="26.4816%" y="895.50"></text></g><g><title>_raw_spin_unlock_irq (1 samples, 0.03%)</title><rect x="26.4600%" y="869" width="0.0326%" height="15" fill="rgb(254,186,29)" fg:x="811" fg:w="1"/><text x="26.7100%" y="879.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.03%)</title><rect x="26.4927%" y="885" width="0.0326%" height="15" fill="rgb(238,6,4)" fg:x="812" fg:w="1"/><text x="26.7427%" y="895.50"></text></g><g><title>demote_folio_list (1 samples, 0.03%)</title><rect x="26.5253%" y="885" width="0.0326%" height="15" fill="rgb(221,151,16)" fg:x="813" fg:w="1"/><text x="26.7753%" y="895.50"></text></g><g><title>shrink_lruvec (20 samples, 0.65%)</title><rect x="25.9380%" y="917" width="0.6525%" height="15" fill="rgb(251,143,52)" fg:x="795" fg:w="20"/><text x="26.1880%" y="927.50"></text></g><g><title>shrink_folio_list (16 samples, 0.52%)</title><rect x="26.0685%" y="901" width="0.5220%" height="15" fill="rgb(206,90,15)" fg:x="799" fg:w="16"/><text x="26.3185%" y="911.50"></text></g><g><title>free_unref_page_list (1 samples, 0.03%)</title><rect x="26.5579%" y="885" width="0.0326%" height="15" fill="rgb(218,35,8)" fg:x="814" fg:w="1"/><text x="26.8079%" y="895.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="26.5905%" y="805" width="0.0326%" height="15" fill="rgb(239,215,6)" fg:x="815" fg:w="1"/><text x="26.8405%" y="815.50"></text></g><g><title>charge_memcg (26 samples, 0.85%)</title><rect x="25.8075%" y="997" width="0.8483%" height="15" fill="rgb(245,116,39)" fg:x="791" fg:w="26"/><text x="26.0575%" y="1007.50"></text></g><g><title>try_charge_memcg (25 samples, 0.82%)</title><rect x="25.8401%" y="981" width="0.8157%" height="15" fill="rgb(242,65,28)" fg:x="792" fg:w="25"/><text x="26.0901%" y="991.50"></text></g><g><title>try_to_free_mem_cgroup_pages (23 samples, 0.75%)</title><rect x="25.9054%" y="965" width="0.7504%" height="15" fill="rgb(252,132,53)" fg:x="794" fg:w="23"/><text x="26.1554%" y="975.50"></text></g><g><title>do_try_to_free_pages (23 samples, 0.75%)</title><rect x="25.9054%" y="949" width="0.7504%" height="15" fill="rgb(224,159,50)" fg:x="794" fg:w="23"/><text x="26.1554%" y="959.50"></text></g><g><title>shrink_node (23 samples, 0.75%)</title><rect x="25.9054%" y="933" width="0.7504%" height="15" fill="rgb(224,93,4)" fg:x="794" fg:w="23"/><text x="26.1554%" y="943.50"></text></g><g><title>shrink_slab (2 samples, 0.07%)</title><rect x="26.5905%" y="917" width="0.0653%" height="15" fill="rgb(208,81,34)" fg:x="815" fg:w="2"/><text x="26.8405%" y="927.50"></text></g><g><title>do_shrink_slab (2 samples, 0.07%)</title><rect x="26.5905%" y="901" width="0.0653%" height="15" fill="rgb(233,92,54)" fg:x="815" fg:w="2"/><text x="26.8405%" y="911.50"></text></g><g><title>count_shadow_nodes (2 samples, 0.07%)</title><rect x="26.5905%" y="885" width="0.0653%" height="15" fill="rgb(237,21,14)" fg:x="815" fg:w="2"/><text x="26.8405%" y="895.50"></text></g><g><title>mem_cgroup_flush_stats (2 samples, 0.07%)</title><rect x="26.5905%" y="869" width="0.0653%" height="15" fill="rgb(249,128,51)" fg:x="815" fg:w="2"/><text x="26.8405%" y="879.50"></text></g><g><title>do_flush_stats (2 samples, 0.07%)</title><rect x="26.5905%" y="853" width="0.0653%" height="15" fill="rgb(223,129,24)" fg:x="815" fg:w="2"/><text x="26.8405%" y="863.50"></text></g><g><title>cgroup_rstat_flush (2 samples, 0.07%)</title><rect x="26.5905%" y="837" width="0.0653%" height="15" fill="rgb(231,168,25)" fg:x="815" fg:w="2"/><text x="26.8405%" y="847.50"></text></g><g><title>cgroup_rstat_flush_locked (2 samples, 0.07%)</title><rect x="26.5905%" y="821" width="0.0653%" height="15" fill="rgb(224,39,20)" fg:x="815" fg:w="2"/><text x="26.8405%" y="831.50"></text></g><g><title>mem_cgroup_css_rstat_flush (1 samples, 0.03%)</title><rect x="26.6232%" y="805" width="0.0326%" height="15" fill="rgb(225,152,53)" fg:x="816" fg:w="1"/><text x="26.8732%" y="815.50"></text></g><g><title>__mem_cgroup_charge (29 samples, 0.95%)</title><rect x="25.7749%" y="1013" width="0.9462%" height="15" fill="rgb(252,17,24)" fg:x="790" fg:w="29"/><text x="26.0249%" y="1023.50"></text></g><g><title>get_mem_cgroup_from_mm (2 samples, 0.07%)</title><rect x="26.6558%" y="997" width="0.0653%" height="15" fill="rgb(250,114,30)" fg:x="817" fg:w="2"/><text x="26.9058%" y="1007.50"></text></g><g><title>__mod_lruvec_page_state (8 samples, 0.26%)</title><rect x="26.7210%" y="1013" width="0.2610%" height="15" fill="rgb(229,5,4)" fg:x="819" fg:w="8"/><text x="26.9710%" y="1023.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.03%)</title><rect x="26.9494%" y="997" width="0.0326%" height="15" fill="rgb(225,176,49)" fg:x="826" fg:w="1"/><text x="27.1994%" y="1007.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.03%)</title><rect x="26.9494%" y="981" width="0.0326%" height="15" fill="rgb(224,221,49)" fg:x="826" fg:w="1"/><text x="27.1994%" y="991.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="26.9821%" y="1013" width="0.0326%" height="15" fill="rgb(253,169,27)" fg:x="827" fg:w="1"/><text x="27.2321%" y="1023.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="27.0147%" y="1013" width="0.0326%" height="15" fill="rgb(211,206,16)" fg:x="828" fg:w="1"/><text x="27.2647%" y="1023.50"></text></g><g><title>_raw_spin_lock_irq (2 samples, 0.07%)</title><rect x="27.0473%" y="1013" width="0.0653%" height="15" fill="rgb(244,87,35)" fg:x="829" fg:w="2"/><text x="27.2973%" y="1023.50"></text></g><g><title>workingset_update_node (1 samples, 0.03%)</title><rect x="27.1126%" y="1013" width="0.0326%" height="15" fill="rgb(246,28,10)" fg:x="831" fg:w="1"/><text x="27.3626%" y="1023.50"></text></g><g><title>xas_descend (1 samples, 0.03%)</title><rect x="27.2757%" y="981" width="0.0326%" height="15" fill="rgb(229,12,44)" fg:x="836" fg:w="1"/><text x="27.5257%" y="991.50"></text></g><g><title>xa_get_order (6 samples, 0.20%)</title><rect x="27.1452%" y="1013" width="0.1958%" height="15" fill="rgb(210,145,37)" fg:x="832" fg:w="6"/><text x="27.3952%" y="1023.50"></text></g><g><title>xas_load (6 samples, 0.20%)</title><rect x="27.1452%" y="997" width="0.1958%" height="15" fill="rgb(227,112,52)" fg:x="832" fg:w="6"/><text x="27.3952%" y="1007.50"></text></g><g><title>xas_start (1 samples, 0.03%)</title><rect x="27.3083%" y="981" width="0.0326%" height="15" fill="rgb(238,155,34)" fg:x="837" fg:w="1"/><text x="27.5583%" y="991.50"></text></g><g><title>__filemap_add_folio (54 samples, 1.76%)</title><rect x="25.6117%" y="1029" width="1.7618%" height="15" fill="rgb(239,226,36)" fg:x="785" fg:w="54"/><text x="25.8617%" y="1039.50"></text></g><g><title>xas_store (1 samples, 0.03%)</title><rect x="27.3409%" y="1013" width="0.0326%" height="15" fill="rgb(230,16,23)" fg:x="838" fg:w="1"/><text x="27.5909%" y="1023.50"></text></g><g><title>_raw_spin_lock_irq (1 samples, 0.03%)</title><rect x="27.3736%" y="1029" width="0.0326%" height="15" fill="rgb(236,171,36)" fg:x="839" fg:w="1"/><text x="27.6236%" y="1039.50"></text></g><g><title>_raw_spin_unlock_irq (1 samples, 0.03%)</title><rect x="27.4062%" y="1029" width="0.0326%" height="15" fill="rgb(221,22,14)" fg:x="840" fg:w="1"/><text x="27.6562%" y="1039.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.03%)</title><rect x="27.4715%" y="997" width="0.0326%" height="15" fill="rgb(242,43,11)" fg:x="842" fg:w="1"/><text x="27.7215%" y="1007.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.03%)</title><rect x="27.5367%" y="965" width="0.0326%" height="15" fill="rgb(232,69,23)" fg:x="844" fg:w="1"/><text x="27.7867%" y="975.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.03%)</title><rect x="27.5693%" y="965" width="0.0326%" height="15" fill="rgb(216,180,54)" fg:x="845" fg:w="1"/><text x="27.8193%" y="975.50"></text></g><g><title>__mod_lruvec_state (4 samples, 0.13%)</title><rect x="27.5041%" y="981" width="0.1305%" height="15" fill="rgb(216,5,24)" fg:x="843" fg:w="4"/><text x="27.7541%" y="991.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.03%)</title><rect x="27.6020%" y="965" width="0.0326%" height="15" fill="rgb(225,89,9)" fg:x="846" fg:w="1"/><text x="27.8520%" y="975.50"></text></g><g><title>folio_add_lru (7 samples, 0.23%)</title><rect x="27.4388%" y="1029" width="0.2284%" height="15" fill="rgb(243,75,33)" fg:x="841" fg:w="7"/><text x="27.6888%" y="1039.50"></text></g><g><title>folio_batch_move_lru (7 samples, 0.23%)</title><rect x="27.4388%" y="1013" width="0.2284%" height="15" fill="rgb(247,141,45)" fg:x="841" fg:w="7"/><text x="27.6888%" y="1023.50"></text></g><g><title>lru_add_fn (5 samples, 0.16%)</title><rect x="27.5041%" y="997" width="0.1631%" height="15" fill="rgb(232,177,36)" fg:x="843" fg:w="5"/><text x="27.7541%" y="1007.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.03%)</title><rect x="27.6346%" y="981" width="0.0326%" height="15" fill="rgb(219,125,36)" fg:x="847" fg:w="1"/><text x="27.8846%" y="991.50"></text></g><g><title>mem_cgroup_flush_stats_ratelimited (1 samples, 0.03%)</title><rect x="27.6672%" y="1029" width="0.0326%" height="15" fill="rgb(227,94,9)" fg:x="848" fg:w="1"/><text x="27.9172%" y="1039.50"></text></g><g><title>filemap_add_folio (66 samples, 2.15%)</title><rect x="25.5791%" y="1045" width="2.1533%" height="15" fill="rgb(240,34,52)" fg:x="784" fg:w="66"/><text x="25.8291%" y="1055.50">f..</text></g><g><title>workingset_refault (1 samples, 0.03%)</title><rect x="27.6998%" y="1029" width="0.0326%" height="15" fill="rgb(216,45,12)" fg:x="849" fg:w="1"/><text x="27.9498%" y="1039.50"></text></g><g><title>mod_lruvec_state (1 samples, 0.03%)</title><rect x="27.6998%" y="1013" width="0.0326%" height="15" fill="rgb(246,21,19)" fg:x="849" fg:w="1"/><text x="27.9498%" y="1023.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.03%)</title><rect x="27.6998%" y="997" width="0.0326%" height="15" fill="rgb(213,98,42)" fg:x="849" fg:w="1"/><text x="27.9498%" y="1007.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.03%)</title><rect x="27.6998%" y="981" width="0.0326%" height="15" fill="rgb(250,136,47)" fg:x="849" fg:w="1"/><text x="27.9498%" y="991.50"></text></g><g><title>__rmqueue_pcplist (1 samples, 0.03%)</title><rect x="27.8956%" y="965" width="0.0326%" height="15" fill="rgb(251,124,27)" fg:x="855" fg:w="1"/><text x="28.1456%" y="975.50"></text></g><g><title>clear_page_rep (7 samples, 0.23%)</title><rect x="27.9282%" y="965" width="0.2284%" height="15" fill="rgb(229,180,14)" fg:x="856" fg:w="7"/><text x="28.1782%" y="975.50"></text></g><g><title>__alloc_pages (11 samples, 0.36%)</title><rect x="27.8303%" y="997" width="0.3589%" height="15" fill="rgb(245,216,25)" fg:x="853" fg:w="11"/><text x="28.0803%" y="1007.50"></text></g><g><title>get_page_from_freelist (10 samples, 0.33%)</title><rect x="27.8630%" y="981" width="0.3263%" height="15" fill="rgb(251,43,5)" fg:x="854" fg:w="10"/><text x="28.1130%" y="991.50"></text></g><g><title>post_alloc_hook (1 samples, 0.03%)</title><rect x="28.1566%" y="965" width="0.0326%" height="15" fill="rgb(250,128,24)" fg:x="863" fg:w="1"/><text x="28.4066%" y="975.50"></text></g><g><title>_find_first_bit (1 samples, 0.03%)</title><rect x="28.1892%" y="997" width="0.0326%" height="15" fill="rgb(217,117,27)" fg:x="864" fg:w="1"/><text x="28.4392%" y="1007.50"></text></g><g><title>filemap_alloc_folio (16 samples, 0.52%)</title><rect x="27.7325%" y="1045" width="0.5220%" height="15" fill="rgb(245,147,4)" fg:x="850" fg:w="16"/><text x="27.9825%" y="1055.50"></text></g><g><title>folio_alloc (16 samples, 0.52%)</title><rect x="27.7325%" y="1029" width="0.5220%" height="15" fill="rgb(242,201,35)" fg:x="850" fg:w="16"/><text x="27.9825%" y="1039.50"></text></g><g><title>alloc_pages (16 samples, 0.52%)</title><rect x="27.7325%" y="1013" width="0.5220%" height="15" fill="rgb(218,181,1)" fg:x="850" fg:w="16"/><text x="27.9825%" y="1023.50"></text></g><g><title>policy_node (1 samples, 0.03%)</title><rect x="28.2219%" y="997" width="0.0326%" height="15" fill="rgb(222,6,29)" fg:x="865" fg:w="1"/><text x="28.4719%" y="1007.50"></text></g><g><title>folio_add_lru (1 samples, 0.03%)</title><rect x="28.2545%" y="1045" width="0.0326%" height="15" fill="rgb(208,186,3)" fg:x="866" fg:w="1"/><text x="28.5045%" y="1055.50"></text></g><g><title>blk_mq_flush_plug_list.part.0 (2 samples, 0.07%)</title><rect x="28.3850%" y="997" width="0.0653%" height="15" fill="rgb(216,36,26)" fg:x="870" fg:w="2"/><text x="28.6350%" y="1007.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="28.4502%" y="981" width="0.0326%" height="15" fill="rgb(248,201,23)" fg:x="872" fg:w="1"/><text x="28.7002%" y="991.50"></text></g><g><title>blk_mq_hctx_has_pending (1 samples, 0.03%)</title><rect x="28.5808%" y="965" width="0.0326%" height="15" fill="rgb(251,170,31)" fg:x="876" fg:w="1"/><text x="28.8308%" y="975.50"></text></g><g><title>ahci_pmp_qc_defer (2 samples, 0.07%)</title><rect x="29.1354%" y="853" width="0.0653%" height="15" fill="rgb(207,110,25)" fg:x="893" fg:w="2"/><text x="29.3854%" y="863.50"></text></g><g><title>ata_std_qc_defer (2 samples, 0.07%)</title><rect x="29.1354%" y="837" width="0.0653%" height="15" fill="rgb(250,54,15)" fg:x="893" fg:w="2"/><text x="29.3854%" y="847.50"></text></g><g><title>ahci_qc_prep (1 samples, 0.03%)</title><rect x="29.2007%" y="853" width="0.0326%" height="15" fill="rgb(227,68,33)" fg:x="895" fg:w="1"/><text x="29.4507%" y="863.50"></text></g><g><title>ahci_qc_issue (1 samples, 0.03%)</title><rect x="29.2659%" y="837" width="0.0326%" height="15" fill="rgb(238,34,41)" fg:x="897" fg:w="1"/><text x="29.5159%" y="847.50"></text></g><g><title>ahci_qc_prep (11 samples, 0.36%)</title><rect x="29.2985%" y="837" width="0.3589%" height="15" fill="rgb(220,11,15)" fg:x="898" fg:w="11"/><text x="29.5485%" y="847.50"></text></g><g><title>__finalise_sg.isra.0 (1 samples, 0.03%)</title><rect x="29.7553%" y="789" width="0.0326%" height="15" fill="rgb(246,111,35)" fg:x="912" fg:w="1"/><text x="30.0053%" y="799.50"></text></g><g><title>iommu_dma_alloc_iova (1 samples, 0.03%)</title><rect x="29.7879%" y="789" width="0.0326%" height="15" fill="rgb(209,88,53)" fg:x="913" fg:w="1"/><text x="30.0379%" y="799.50"></text></g><g><title>__x86_indirect_thunk_array (1 samples, 0.03%)</title><rect x="29.8206%" y="757" width="0.0326%" height="15" fill="rgb(231,185,47)" fg:x="914" fg:w="1"/><text x="30.0706%" y="767.50"></text></g><g><title>amd_iommu_map_pages (4 samples, 0.13%)</title><rect x="29.8532%" y="757" width="0.1305%" height="15" fill="rgb(233,154,1)" fg:x="915" fg:w="4"/><text x="30.1032%" y="767.50"></text></g><g><title>iommu_v1_map_pages (4 samples, 0.13%)</title><rect x="29.8532%" y="741" width="0.1305%" height="15" fill="rgb(225,15,46)" fg:x="915" fg:w="4"/><text x="30.1032%" y="751.50"></text></g><g><title>__ata_scsi_queuecmd (28 samples, 0.91%)</title><rect x="29.1028%" y="869" width="0.9135%" height="15" fill="rgb(211,135,41)" fg:x="892" fg:w="28"/><text x="29.3528%" y="879.50"></text></g><g><title>ata_qc_issue (24 samples, 0.78%)</title><rect x="29.2333%" y="853" width="0.7830%" height="15" fill="rgb(208,54,0)" fg:x="896" fg:w="24"/><text x="29.4833%" y="863.50"></text></g><g><title>dma_map_sg_attrs (11 samples, 0.36%)</title><rect x="29.6574%" y="837" width="0.3589%" height="15" fill="rgb(244,136,14)" fg:x="909" fg:w="11"/><text x="29.9074%" y="847.50"></text></g><g><title>__dma_map_sg_attrs (10 samples, 0.33%)</title><rect x="29.6900%" y="821" width="0.3263%" height="15" fill="rgb(241,56,14)" fg:x="910" fg:w="10"/><text x="29.9400%" y="831.50"></text></g><g><title>iommu_dma_map_sg (10 samples, 0.33%)</title><rect x="29.6900%" y="805" width="0.3263%" height="15" fill="rgb(205,80,24)" fg:x="910" fg:w="10"/><text x="29.9400%" y="815.50"></text></g><g><title>iommu_map_sg (6 samples, 0.20%)</title><rect x="29.8206%" y="789" width="0.1958%" height="15" fill="rgb(220,57,4)" fg:x="914" fg:w="6"/><text x="30.0706%" y="799.50"></text></g><g><title>__iommu_map (6 samples, 0.20%)</title><rect x="29.8206%" y="773" width="0.1958%" height="15" fill="rgb(226,193,50)" fg:x="914" fg:w="6"/><text x="30.0706%" y="783.50"></text></g><g><title>iommu_v1_map_pages (1 samples, 0.03%)</title><rect x="29.9837%" y="757" width="0.0326%" height="15" fill="rgb(231,168,22)" fg:x="919" fg:w="1"/><text x="30.2337%" y="767.50"></text></g><g><title>ata_scsi_queuecmd (30 samples, 0.98%)</title><rect x="29.1028%" y="885" width="0.9788%" height="15" fill="rgb(254,215,14)" fg:x="892" fg:w="30"/><text x="29.3528%" y="895.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.07%)</title><rect x="30.0163%" y="869" width="0.0653%" height="15" fill="rgb(211,115,16)" fg:x="920" fg:w="2"/><text x="30.2663%" y="879.50"></text></g><g><title>blk_mq_start_request (2 samples, 0.07%)</title><rect x="30.0816%" y="885" width="0.0653%" height="15" fill="rgb(236,210,16)" fg:x="922" fg:w="2"/><text x="30.3316%" y="895.50"></text></g><g><title>wbt_issue (1 samples, 0.03%)</title><rect x="30.1142%" y="869" width="0.0326%" height="15" fill="rgb(221,94,12)" fg:x="923" fg:w="1"/><text x="30.3642%" y="879.50"></text></g><g><title>scsi_queue_rq (49 samples, 1.60%)</title><rect x="28.8091%" y="901" width="1.5987%" height="15" fill="rgb(235,218,49)" fg:x="883" fg:w="49"/><text x="29.0591%" y="911.50"></text></g><g><title>sd_init_command (8 samples, 0.26%)</title><rect x="30.1468%" y="885" width="0.2610%" height="15" fill="rgb(217,114,14)" fg:x="924" fg:w="8"/><text x="30.3968%" y="895.50"></text></g><g><title>scsi_alloc_sgtables (2 samples, 0.07%)</title><rect x="30.3426%" y="869" width="0.0653%" height="15" fill="rgb(216,145,22)" fg:x="930" fg:w="2"/><text x="30.5926%" y="879.50"></text></g><g><title>__blk_rq_map_sg (1 samples, 0.03%)</title><rect x="30.3752%" y="853" width="0.0326%" height="15" fill="rgb(217,112,39)" fg:x="931" fg:w="1"/><text x="30.6252%" y="863.50"></text></g><g><title>blk_mq_dispatch_rq_list (50 samples, 1.63%)</title><rect x="28.8091%" y="917" width="1.6313%" height="15" fill="rgb(225,85,32)" fg:x="883" fg:w="50"/><text x="29.0591%" y="927.50"></text></g><g><title>srso_safe_ret (1 samples, 0.03%)</title><rect x="30.4078%" y="901" width="0.0326%" height="15" fill="rgb(245,209,47)" fg:x="932" fg:w="1"/><text x="30.6578%" y="911.50"></text></g><g><title>dd_dispatch_request (7 samples, 0.23%)</title><rect x="30.4405%" y="917" width="0.2284%" height="15" fill="rgb(218,220,15)" fg:x="933" fg:w="7"/><text x="30.6905%" y="927.50"></text></g><g><title>__dd_dispatch_request (4 samples, 0.13%)</title><rect x="30.5383%" y="901" width="0.1305%" height="15" fill="rgb(222,202,31)" fg:x="936" fg:w="4"/><text x="30.7883%" y="911.50"></text></g><g><title>deadline_next_request (1 samples, 0.03%)</title><rect x="30.6362%" y="885" width="0.0326%" height="15" fill="rgb(243,203,4)" fg:x="939" fg:w="1"/><text x="30.8862%" y="895.50"></text></g><g><title>__blk_mq_sched_dispatch_requests (63 samples, 2.06%)</title><rect x="28.6786%" y="933" width="2.0555%" height="15" fill="rgb(237,92,17)" fg:x="879" fg:w="63"/><text x="28.9286%" y="943.50">_..</text></g><g><title>dd_has_work (2 samples, 0.07%)</title><rect x="30.6688%" y="917" width="0.0653%" height="15" fill="rgb(231,119,7)" fg:x="940" fg:w="2"/><text x="30.9188%" y="927.50"></text></g><g><title>__x86_indirect_thunk_array (1 samples, 0.03%)</title><rect x="30.7341%" y="933" width="0.0326%" height="15" fill="rgb(237,82,41)" fg:x="942" fg:w="1"/><text x="30.9841%" y="943.50"></text></g><g><title>dd_has_work (1 samples, 0.03%)</title><rect x="30.7667%" y="933" width="0.0326%" height="15" fill="rgb(226,81,48)" fg:x="943" fg:w="1"/><text x="31.0167%" y="943.50"></text></g><g><title>scsi_mq_get_budget (1 samples, 0.03%)</title><rect x="30.7993%" y="933" width="0.0326%" height="15" fill="rgb(234,70,51)" fg:x="944" fg:w="1"/><text x="31.0493%" y="943.50"></text></g><g><title>scsi_mq_set_rq_budget_token (1 samples, 0.03%)</title><rect x="30.8320%" y="933" width="0.0326%" height="15" fill="rgb(251,86,4)" fg:x="945" fg:w="1"/><text x="31.0820%" y="943.50"></text></g><g><title>blk_mq_sched_dispatch_requests (69 samples, 2.25%)</title><rect x="28.6460%" y="949" width="2.2512%" height="15" fill="rgb(244,144,28)" fg:x="878" fg:w="69"/><text x="28.8960%" y="959.50">b..</text></g><g><title>srso_safe_ret (1 samples, 0.03%)</title><rect x="30.8646%" y="933" width="0.0326%" height="15" fill="rgb(232,161,39)" fg:x="946" fg:w="1"/><text x="31.1146%" y="943.50"></text></g><g><title>blk_mq_run_hw_queue (71 samples, 2.32%)</title><rect x="28.6134%" y="965" width="2.3165%" height="15" fill="rgb(247,34,51)" fg:x="877" fg:w="71"/><text x="28.8634%" y="975.50">b..</text></g><g><title>sbitmap_any_bit_set (1 samples, 0.03%)</title><rect x="30.8972%" y="949" width="0.0326%" height="15" fill="rgb(225,132,2)" fg:x="947" fg:w="1"/><text x="31.1472%" y="959.50"></text></g><g><title>elv_rb_add (1 samples, 0.03%)</title><rect x="30.9625%" y="949" width="0.0326%" height="15" fill="rgb(209,159,44)" fg:x="949" fg:w="1"/><text x="31.2125%" y="959.50"></text></g><g><title>elv_rqhash_add (1 samples, 0.03%)</title><rect x="30.9951%" y="949" width="0.0326%" height="15" fill="rgb(251,214,1)" fg:x="950" fg:w="1"/><text x="31.2451%" y="959.50"></text></g><g><title>perf_trace_buf_alloc (2 samples, 0.07%)</title><rect x="31.0277%" y="933" width="0.0653%" height="15" fill="rgb(247,84,47)" fg:x="951" fg:w="2"/><text x="31.2777%" y="943.50"></text></g><g><title>bpf_prog_46ffc14ff6ba90c3_block_rq_insert (1 samples, 0.03%)</title><rect x="31.1256%" y="917" width="0.0326%" height="15" fill="rgb(240,111,43)" fg:x="954" fg:w="1"/><text x="31.3756%" y="927.50"></text></g><g><title>perf_event_output_forward (1 samples, 0.03%)</title><rect x="31.3214%" y="885" width="0.0326%" height="15" fill="rgb(215,214,35)" fg:x="960" fg:w="1"/><text x="31.5714%" y="895.50"></text></g><g><title>perf_swevent_event (3 samples, 0.10%)</title><rect x="31.2887%" y="901" width="0.0979%" height="15" fill="rgb(248,207,23)" fg:x="959" fg:w="3"/><text x="31.5387%" y="911.50"></text></g><g><title>srso_safe_ret (1 samples, 0.03%)</title><rect x="31.3540%" y="885" width="0.0326%" height="15" fill="rgb(214,186,4)" fg:x="961" fg:w="1"/><text x="31.6040%" y="895.50"></text></g><g><title>perf_tp_event (10 samples, 0.33%)</title><rect x="31.1582%" y="917" width="0.3263%" height="15" fill="rgb(220,133,22)" fg:x="955" fg:w="10"/><text x="31.4082%" y="927.50"></text></g><g><title>perf_trace_buf_update (3 samples, 0.10%)</title><rect x="31.3866%" y="901" width="0.0979%" height="15" fill="rgb(239,134,19)" fg:x="962" fg:w="3"/><text x="31.6366%" y="911.50"></text></g><g><title>bpf_ktime_get_boot_ns (1 samples, 0.03%)</title><rect x="31.5498%" y="901" width="0.0326%" height="15" fill="rgb(250,140,9)" fg:x="967" fg:w="1"/><text x="31.7998%" y="911.50"></text></g><g><title>bpf_ktime_get_boot_ns (1 samples, 0.03%)</title><rect x="31.6150%" y="885" width="0.0326%" height="15" fill="rgb(225,59,14)" fg:x="969" fg:w="1"/><text x="31.8650%" y="895.50"></text></g><g><title>ktime_get_boot_fast_ns (1 samples, 0.03%)</title><rect x="31.6150%" y="869" width="0.0326%" height="15" fill="rgb(214,152,51)" fg:x="969" fg:w="1"/><text x="31.8650%" y="879.50"></text></g><g><title>alloc_htab_elem (1 samples, 0.03%)</title><rect x="31.6476%" y="869" width="0.0326%" height="15" fill="rgb(251,227,43)" fg:x="970" fg:w="1"/><text x="31.8976%" y="879.50"></text></g><g><title>__pcpu_freelist_pop (1 samples, 0.03%)</title><rect x="31.6476%" y="853" width="0.0326%" height="15" fill="rgb(241,96,17)" fg:x="970" fg:w="1"/><text x="31.8976%" y="863.50"></text></g><g><title>___pcpu_freelist_pop (1 samples, 0.03%)</title><rect x="31.6476%" y="837" width="0.0326%" height="15" fill="rgb(234,198,43)" fg:x="970" fg:w="1"/><text x="31.8976%" y="847.50"></text></g><g><title>htab_lock_bucket (1 samples, 0.03%)</title><rect x="31.6803%" y="869" width="0.0326%" height="15" fill="rgb(220,108,29)" fg:x="971" fg:w="1"/><text x="31.9303%" y="879.50"></text></g><g><title>dd_insert_requests (25 samples, 0.82%)</title><rect x="30.9299%" y="965" width="0.8157%" height="15" fill="rgb(226,163,33)" fg:x="948" fg:w="25"/><text x="31.1799%" y="975.50"></text></g><g><title>perf_trace_block_rq (22 samples, 0.72%)</title><rect x="31.0277%" y="949" width="0.7178%" height="15" fill="rgb(205,194,45)" fg:x="951" fg:w="22"/><text x="31.2777%" y="959.50"></text></g><g><title>perf_trace_run_bpf_submit (20 samples, 0.65%)</title><rect x="31.0930%" y="933" width="0.6525%" height="15" fill="rgb(206,143,44)" fg:x="953" fg:w="20"/><text x="31.3430%" y="943.50"></text></g><g><title>trace_call_bpf (8 samples, 0.26%)</title><rect x="31.4845%" y="917" width="0.2610%" height="15" fill="rgb(236,136,36)" fg:x="965" fg:w="8"/><text x="31.7345%" y="927.50"></text></g><g><title>bpf_prog_46ffc14ff6ba90c3_block_rq_insert (5 samples, 0.16%)</title><rect x="31.5824%" y="901" width="0.1631%" height="15" fill="rgb(249,172,42)" fg:x="968" fg:w="5"/><text x="31.8324%" y="911.50"></text></g><g><title>htab_map_update_elem (3 samples, 0.10%)</title><rect x="31.6476%" y="885" width="0.0979%" height="15" fill="rgb(216,139,23)" fg:x="970" fg:w="3"/><text x="31.8976%" y="895.50"></text></g><g><title>lookup_elem_raw (1 samples, 0.03%)</title><rect x="31.7129%" y="869" width="0.0326%" height="15" fill="rgb(207,166,20)" fg:x="972" fg:w="1"/><text x="31.9629%" y="879.50"></text></g><g><title>blk_mq_flush_plug_list.part.0 (101 samples, 3.30%)</title><rect x="28.4829%" y="981" width="3.2953%" height="15" fill="rgb(210,209,22)" fg:x="873" fg:w="101"/><text x="28.7329%" y="991.50">blk..</text></g><g><title>srso_safe_ret (1 samples, 0.03%)</title><rect x="31.7455%" y="965" width="0.0326%" height="15" fill="rgb(232,118,20)" fg:x="973" fg:w="1"/><text x="31.9955%" y="975.50"></text></g><g><title>__blk_flush_plug (105 samples, 3.43%)</title><rect x="28.3850%" y="1013" width="3.4258%" height="15" fill="rgb(238,113,42)" fg:x="870" fg:w="105"/><text x="28.6350%" y="1023.50">__b..</text></g><g><title>blk_mq_flush_plug_list (103 samples, 3.36%)</title><rect x="28.4502%" y="997" width="3.3605%" height="15" fill="rgb(231,42,5)" fg:x="872" fg:w="103"/><text x="28.7002%" y="1007.50">blk..</text></g><g><title>dd_insert_requests (1 samples, 0.03%)</title><rect x="31.7781%" y="981" width="0.0326%" height="15" fill="rgb(243,166,24)" fg:x="974" fg:w="1"/><text x="32.0281%" y="991.50"></text></g><g><title>blk_finish_plug (106 samples, 3.46%)</title><rect x="28.3850%" y="1029" width="3.4584%" height="15" fill="rgb(237,226,12)" fg:x="870" fg:w="106"/><text x="28.6350%" y="1039.50">blk..</text></g><g><title>blk_mq_flush_plug_list (1 samples, 0.03%)</title><rect x="31.8108%" y="1013" width="0.0326%" height="15" fill="rgb(229,133,24)" fg:x="975" fg:w="1"/><text x="32.0608%" y="1023.50"></text></g><g><title>bio_add_folio (1 samples, 0.03%)</title><rect x="31.8434%" y="1013" width="0.0326%" height="15" fill="rgb(238,33,43)" fg:x="976" fg:w="1"/><text x="32.0934%" y="1023.50"></text></g><g><title>bio_add_folio (1 samples, 0.03%)</title><rect x="31.9739%" y="997" width="0.0326%" height="15" fill="rgb(227,59,38)" fg:x="980" fg:w="1"/><text x="32.2239%" y="1007.50"></text></g><g><title>bio_add_page (1 samples, 0.03%)</title><rect x="31.9739%" y="981" width="0.0326%" height="15" fill="rgb(230,97,0)" fg:x="980" fg:w="1"/><text x="32.2239%" y="991.50"></text></g><g><title>__bio_add_page (1 samples, 0.03%)</title><rect x="31.9739%" y="965" width="0.0326%" height="15" fill="rgb(250,173,50)" fg:x="980" fg:w="1"/><text x="32.2239%" y="975.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="32.0718%" y="965" width="0.0326%" height="15" fill="rgb(240,15,50)" fg:x="983" fg:w="1"/><text x="32.3218%" y="975.50"></text></g><g><title>bio_associate_blkg (6 samples, 0.20%)</title><rect x="32.0392%" y="981" width="0.1958%" height="15" fill="rgb(221,93,22)" fg:x="982" fg:w="6"/><text x="32.2892%" y="991.50"></text></g><g><title>bio_associate_blkg_from_css (4 samples, 0.13%)</title><rect x="32.1044%" y="965" width="0.1305%" height="15" fill="rgb(245,180,53)" fg:x="984" fg:w="4"/><text x="32.3544%" y="975.50"></text></g><g><title>bio_alloc_bioset (10 samples, 0.33%)</title><rect x="32.0065%" y="997" width="0.3263%" height="15" fill="rgb(231,88,51)" fg:x="981" fg:w="10"/><text x="32.2565%" y="1007.50"></text></g><g><title>mempool_alloc (3 samples, 0.10%)</title><rect x="32.2349%" y="981" width="0.0979%" height="15" fill="rgb(240,58,21)" fg:x="988" fg:w="3"/><text x="32.4849%" y="991.50"></text></g><g><title>mempool_alloc_slab (2 samples, 0.07%)</title><rect x="32.2675%" y="965" width="0.0653%" height="15" fill="rgb(237,21,10)" fg:x="989" fg:w="2"/><text x="32.5175%" y="975.50"></text></g><g><title>kmem_cache_alloc (2 samples, 0.07%)</title><rect x="32.2675%" y="949" width="0.0653%" height="15" fill="rgb(218,43,11)" fg:x="989" fg:w="2"/><text x="32.5175%" y="959.50"></text></g><g><title>__check_block_validity.constprop.0 (1 samples, 0.03%)</title><rect x="32.3328%" y="981" width="0.0326%" height="15" fill="rgb(218,221,29)" fg:x="991" fg:w="1"/><text x="32.5828%" y="991.50"></text></g><g><title>ext4_es_lookup_extent (3 samples, 0.10%)</title><rect x="32.3654%" y="981" width="0.0979%" height="15" fill="rgb(214,118,42)" fg:x="992" fg:w="3"/><text x="32.6154%" y="991.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="32.4307%" y="965" width="0.0326%" height="15" fill="rgb(251,200,26)" fg:x="994" fg:w="1"/><text x="32.6807%" y="975.50"></text></g><g><title>ext4_map_blocks (5 samples, 0.16%)</title><rect x="32.3328%" y="997" width="0.1631%" height="15" fill="rgb(237,101,39)" fg:x="991" fg:w="5"/><text x="32.5828%" y="1007.50"></text></g><g><title>ext4_inode_block_valid (1 samples, 0.03%)</title><rect x="32.4633%" y="981" width="0.0326%" height="15" fill="rgb(251,117,11)" fg:x="995" fg:w="1"/><text x="32.7133%" y="991.50"></text></g><g><title>__blk_mq_alloc_requests (8 samples, 0.26%)</title><rect x="32.6917%" y="917" width="0.2610%" height="15" fill="rgb(216,223,23)" fg:x="1002" fg:w="8"/><text x="32.9417%" y="927.50"></text></g><g><title>blk_mq_get_tag (1 samples, 0.03%)</title><rect x="32.9201%" y="901" width="0.0326%" height="15" fill="rgb(251,54,12)" fg:x="1009" fg:w="1"/><text x="33.1701%" y="911.50"></text></g><g><title>__rq_qos_throttle (1 samples, 0.03%)</title><rect x="32.9527%" y="917" width="0.0326%" height="15" fill="rgb(254,176,54)" fg:x="1010" fg:w="1"/><text x="33.2027%" y="927.50"></text></g><g><title>wbt_wait (1 samples, 0.03%)</title><rect x="32.9527%" y="901" width="0.0326%" height="15" fill="rgb(210,32,8)" fg:x="1010" fg:w="1"/><text x="33.2027%" y="911.50"></text></g><g><title>__rq_qos_track (2 samples, 0.07%)</title><rect x="32.9853%" y="917" width="0.0653%" height="15" fill="rgb(235,52,38)" fg:x="1011" fg:w="2"/><text x="33.2353%" y="927.50"></text></g><g><title>blk_mq_get_tag (1 samples, 0.03%)</title><rect x="33.0506%" y="917" width="0.0326%" height="15" fill="rgb(231,4,44)" fg:x="1013" fg:w="1"/><text x="33.3006%" y="927.50"></text></g><g><title>blkcg_set_ioprio (1 samples, 0.03%)</title><rect x="33.0832%" y="917" width="0.0326%" height="15" fill="rgb(249,2,32)" fg:x="1014" fg:w="1"/><text x="33.3332%" y="927.50"></text></g><g><title>dd_limit_depth (1 samples, 0.03%)</title><rect x="33.1158%" y="917" width="0.0326%" height="15" fill="rgb(224,65,26)" fg:x="1015" fg:w="1"/><text x="33.3658%" y="927.50"></text></g><g><title>__submit_bio (17 samples, 0.55%)</title><rect x="32.6264%" y="949" width="0.5546%" height="15" fill="rgb(250,73,40)" fg:x="1000" fg:w="17"/><text x="32.8764%" y="959.50"></text></g><g><title>blk_mq_submit_bio (16 samples, 0.52%)</title><rect x="32.6591%" y="933" width="0.5220%" height="15" fill="rgb(253,177,16)" fg:x="1001" fg:w="16"/><text x="32.9091%" y="943.50"></text></g><g><title>wbt_track (1 samples, 0.03%)</title><rect x="33.1485%" y="917" width="0.0326%" height="15" fill="rgb(217,32,34)" fg:x="1016" fg:w="1"/><text x="33.3985%" y="927.50"></text></g><g><title>blk_cgroup_bio_start (1 samples, 0.03%)</title><rect x="33.1811%" y="949" width="0.0326%" height="15" fill="rgb(212,7,10)" fg:x="1017" fg:w="1"/><text x="33.4311%" y="959.50"></text></g><g><title>submit_bio (23 samples, 0.75%)</title><rect x="32.4959%" y="997" width="0.7504%" height="15" fill="rgb(245,89,8)" fg:x="996" fg:w="23"/><text x="32.7459%" y="1007.50"></text></g><g><title>submit_bio_noacct (23 samples, 0.75%)</title><rect x="32.4959%" y="981" width="0.7504%" height="15" fill="rgb(237,16,53)" fg:x="996" fg:w="23"/><text x="32.7459%" y="991.50"></text></g><g><title>submit_bio_noacct_nocheck (20 samples, 0.65%)</title><rect x="32.5938%" y="965" width="0.6525%" height="15" fill="rgb(250,204,30)" fg:x="999" fg:w="20"/><text x="32.8438%" y="975.50"></text></g><g><title>read_tsc (1 samples, 0.03%)</title><rect x="33.2137%" y="949" width="0.0326%" height="15" fill="rgb(208,77,27)" fg:x="1018" fg:w="1"/><text x="33.4637%" y="959.50"></text></g><g><title>filemap_get_pages (314 samples, 10.24%)</title><rect x="23.1321%" y="1109" width="10.2447%" height="15" fill="rgb(250,204,28)" fg:x="709" fg:w="314"/><text x="23.3821%" y="1119.50">filemap_get_pag..</text></g><g><title>page_cache_sync_ra (252 samples, 8.22%)</title><rect x="25.1550%" y="1093" width="8.2219%" height="15" fill="rgb(244,63,21)" fg:x="771" fg:w="252"/><text x="25.4050%" y="1103.50">page_cache_..</text></g><g><title>force_page_cache_ra (252 samples, 8.22%)</title><rect x="25.1550%" y="1077" width="8.2219%" height="15" fill="rgb(236,85,44)" fg:x="771" fg:w="252"/><text x="25.4050%" y="1087.50">force_page_..</text></g><g><title>page_cache_ra_unbounded (251 samples, 8.19%)</title><rect x="25.1876%" y="1061" width="8.1892%" height="15" fill="rgb(215,98,4)" fg:x="772" fg:w="251"/><text x="25.4376%" y="1071.50">page_cache_..</text></g><g><title>read_pages (156 samples, 5.09%)</title><rect x="28.2871%" y="1045" width="5.0897%" height="15" fill="rgb(235,38,11)" fg:x="867" fg:w="156"/><text x="28.5371%" y="1055.50">read_p..</text></g><g><title>ext4_readahead (47 samples, 1.53%)</title><rect x="31.8434%" y="1029" width="1.5334%" height="15" fill="rgb(254,186,25)" fg:x="976" fg:w="47"/><text x="32.0934%" y="1039.50"></text></g><g><title>ext4_mpage_readpages (46 samples, 1.50%)</title><rect x="31.8760%" y="1013" width="1.5008%" height="15" fill="rgb(225,55,31)" fg:x="977" fg:w="46"/><text x="32.1260%" y="1023.50"></text></g><g><title>xa_load (4 samples, 0.13%)</title><rect x="33.2463%" y="997" width="0.1305%" height="15" fill="rgb(211,15,21)" fg:x="1019" fg:w="4"/><text x="33.4963%" y="1007.50"></text></g><g><title>xas_load (4 samples, 0.13%)</title><rect x="33.2463%" y="981" width="0.1305%" height="15" fill="rgb(215,187,41)" fg:x="1019" fg:w="4"/><text x="33.4963%" y="991.50"></text></g><g><title>xas_descend (2 samples, 0.07%)</title><rect x="33.3116%" y="965" width="0.0653%" height="15" fill="rgb(248,69,32)" fg:x="1021" fg:w="2"/><text x="33.5616%" y="975.50"></text></g><g><title>folio_mark_accessed (1 samples, 0.03%)</title><rect x="33.3768%" y="1109" width="0.0326%" height="15" fill="rgb(252,102,52)" fg:x="1023" fg:w="1"/><text x="33.6268%" y="1119.50"></text></g><g><title>__x64_sys_read (332 samples, 10.83%)</title><rect x="22.6754%" y="1205" width="10.8320%" height="15" fill="rgb(253,140,32)" fg:x="695" fg:w="332"/><text x="22.9254%" y="1215.50">__x64_sys_read</text></g><g><title>ksys_read (332 samples, 10.83%)</title><rect x="22.6754%" y="1189" width="10.8320%" height="15" fill="rgb(216,56,42)" fg:x="695" fg:w="332"/><text x="22.9254%" y="1199.50">ksys_read</text></g><g><title>vfs_read (330 samples, 10.77%)</title><rect x="22.7406%" y="1173" width="10.7667%" height="15" fill="rgb(216,184,14)" fg:x="697" fg:w="330"/><text x="22.9906%" y="1183.50">vfs_read</text></g><g><title>ext4_file_read_iter (328 samples, 10.70%)</title><rect x="22.8059%" y="1157" width="10.7015%" height="15" fill="rgb(237,187,27)" fg:x="699" fg:w="328"/><text x="23.0559%" y="1167.50">ext4_file_read_i..</text></g><g><title>generic_file_read_iter (327 samples, 10.67%)</title><rect x="22.8385%" y="1141" width="10.6688%" height="15" fill="rgb(219,65,3)" fg:x="700" fg:w="327"/><text x="23.0885%" y="1151.50">generic_file_rea..</text></g><g><title>filemap_read (327 samples, 10.67%)</title><rect x="22.8385%" y="1125" width="10.6688%" height="15" fill="rgb(245,83,25)" fg:x="700" fg:w="327"/><text x="23.0885%" y="1135.50">filemap_read</text></g><g><title>touch_atime (3 samples, 0.10%)</title><rect x="33.4095%" y="1109" width="0.0979%" height="15" fill="rgb(214,205,45)" fg:x="1024" fg:w="3"/><text x="33.6595%" y="1119.50"></text></g><g><title>atime_needs_update (1 samples, 0.03%)</title><rect x="33.4747%" y="1093" width="0.0326%" height="15" fill="rgb(241,20,18)" fg:x="1026" fg:w="1"/><text x="33.7247%" y="1103.50"></text></g><g><title>exit_to_user_mode_prepare (4 samples, 0.13%)</title><rect x="33.5073%" y="1189" width="0.1305%" height="15" fill="rgb(232,163,23)" fg:x="1027" fg:w="4"/><text x="33.7573%" y="1199.50"></text></g><g><title>__rseq_handle_notify_resume (4 samples, 0.13%)</title><rect x="33.5073%" y="1173" width="0.1305%" height="15" fill="rgb(214,5,46)" fg:x="1027" fg:w="4"/><text x="33.7573%" y="1183.50"></text></g><g><title>entry_SYSCALL_64 (340 samples, 11.09%)</title><rect x="22.5775%" y="1237" width="11.0930%" height="15" fill="rgb(229,78,17)" fg:x="692" fg:w="340"/><text x="22.8275%" y="1247.50">entry_SYSCALL_64</text></g><g><title>do_syscall_64 (338 samples, 11.03%)</title><rect x="22.6427%" y="1221" width="11.0277%" height="15" fill="rgb(248,89,10)" fg:x="694" fg:w="338"/><text x="22.8927%" y="1231.50">do_syscall_64</text></g><g><title>syscall_exit_to_user_mode (5 samples, 0.16%)</title><rect x="33.5073%" y="1205" width="0.1631%" height="15" fill="rgb(248,54,15)" fg:x="1027" fg:w="5"/><text x="33.7573%" y="1215.50"></text></g><g><title>mem_cgroup_handle_over_high (1 samples, 0.03%)</title><rect x="33.6378%" y="1189" width="0.0326%" height="15" fill="rgb(223,116,6)" fg:x="1031" fg:w="1"/><text x="33.8878%" y="1199.50"></text></g><g><title>[python3.10] (354 samples, 11.55%)</title><rect x="22.1533%" y="1285" width="11.5498%" height="15" fill="rgb(205,125,38)" fg:x="679" fg:w="354"/><text x="22.4033%" y="1295.50">[python3.10]</text></g><g><title>_Py_read (348 samples, 11.35%)</title><rect x="22.3491%" y="1269" width="11.3540%" height="15" fill="rgb(251,78,38)" fg:x="685" fg:w="348"/><text x="22.5991%" y="1279.50">_Py_read</text></g><g><title>__GI___libc_read (343 samples, 11.19%)</title><rect x="22.5122%" y="1253" width="11.1909%" height="15" fill="rgb(253,78,28)" fg:x="690" fg:w="343"/><text x="22.7622%" y="1263.50">__GI___libc_read</text></g><g><title>save_fpregs_to_fpstate (1 samples, 0.03%)</title><rect x="33.6705%" y="1237" width="0.0326%" height="15" fill="rgb(209,120,3)" fg:x="1032" fg:w="1"/><text x="33.9205%" y="1247.50"></text></g><g><title>[python3.10] (359 samples, 11.71%)</title><rect x="22.0881%" y="1301" width="11.7129%" height="15" fill="rgb(238,229,9)" fg:x="677" fg:w="359"/><text x="22.3381%" y="1311.50">[python3.10]</text></g><g><title>__GI___libc_free (3 samples, 0.10%)</title><rect x="33.7031%" y="1285" width="0.0979%" height="15" fill="rgb(253,159,18)" fg:x="1033" fg:w="3"/><text x="33.9531%" y="1295.50"></text></g><g><title>_int_free (3 samples, 0.10%)</title><rect x="33.7031%" y="1269" width="0.0979%" height="15" fill="rgb(244,42,34)" fg:x="1033" fg:w="3"/><text x="33.9531%" y="1279.50"></text></g><g><title>unlink_chunk (2 samples, 0.07%)</title><rect x="33.7357%" y="1253" width="0.0653%" height="15" fill="rgb(224,8,7)" fg:x="1034" fg:w="2"/><text x="33.9857%" y="1263.50"></text></g><g><title>_start (367 samples, 11.97%)</title><rect x="21.9250%" y="1573" width="11.9739%" height="15" fill="rgb(210,201,45)" fg:x="672" fg:w="367"/><text x="22.1750%" y="1583.50">_start</text></g><g><title>__libc_start_main_impl (367 samples, 11.97%)</title><rect x="21.9250%" y="1557" width="11.9739%" height="15" fill="rgb(252,185,21)" fg:x="672" fg:w="367"/><text x="22.1750%" y="1567.50">__libc_start_main_..</text></g><g><title>__libc_start_call_main (367 samples, 11.97%)</title><rect x="21.9250%" y="1541" width="11.9739%" height="15" fill="rgb(223,131,1)" fg:x="672" fg:w="367"/><text x="22.1750%" y="1551.50">__libc_start_call_..</text></g><g><title>Py_BytesMain (367 samples, 11.97%)</title><rect x="21.9250%" y="1525" width="11.9739%" height="15" fill="rgb(245,141,16)" fg:x="672" fg:w="367"/><text x="22.1750%" y="1535.50">Py_BytesMain</text></g><g><title>Py_RunMain (367 samples, 11.97%)</title><rect x="21.9250%" y="1509" width="11.9739%" height="15" fill="rgb(229,55,45)" fg:x="672" fg:w="367"/><text x="22.1750%" y="1519.50">Py_RunMain</text></g><g><title>_PyRun_AnyFileObject (367 samples, 11.97%)</title><rect x="21.9250%" y="1493" width="11.9739%" height="15" fill="rgb(208,92,15)" fg:x="672" fg:w="367"/><text x="22.1750%" y="1503.50">_PyRun_AnyFileObje..</text></g><g><title>_PyRun_SimpleFileObject (367 samples, 11.97%)</title><rect x="21.9250%" y="1477" width="11.9739%" height="15" fill="rgb(234,185,47)" fg:x="672" fg:w="367"/><text x="22.1750%" y="1487.50">_PyRun_SimpleFileO..</text></g><g><title>[python3.10] (367 samples, 11.97%)</title><rect x="21.9250%" y="1461" width="11.9739%" height="15" fill="rgb(253,104,50)" fg:x="672" fg:w="367"/><text x="22.1750%" y="1471.50">[python3.10]</text></g><g><title>[python3.10] (367 samples, 11.97%)</title><rect x="21.9250%" y="1445" width="11.9739%" height="15" fill="rgb(205,70,7)" fg:x="672" fg:w="367"/><text x="22.1750%" y="1455.50">[python3.10]</text></g><g><title>[python3.10] (367 samples, 11.97%)</title><rect x="21.9250%" y="1429" width="11.9739%" height="15" fill="rgb(240,178,43)" fg:x="672" fg:w="367"/><text x="22.1750%" y="1439.50">[python3.10]</text></g><g><title>PyEval_EvalCode (367 samples, 11.97%)</title><rect x="21.9250%" y="1413" width="11.9739%" height="15" fill="rgb(214,112,2)" fg:x="672" fg:w="367"/><text x="22.1750%" y="1423.50">PyEval_EvalCode</text></g><g><title>[python3.10] (367 samples, 11.97%)</title><rect x="21.9250%" y="1397" width="11.9739%" height="15" fill="rgb(206,46,17)" fg:x="672" fg:w="367"/><text x="22.1750%" y="1407.50">[python3.10]</text></g><g><title>_PyEval_EvalFrameDefault (367 samples, 11.97%)</title><rect x="21.9250%" y="1381" width="11.9739%" height="15" fill="rgb(225,220,16)" fg:x="672" fg:w="367"/><text x="22.1750%" y="1391.50">_PyEval_EvalFrameD..</text></g><g><title>_PyFunction_Vectorcall (367 samples, 11.97%)</title><rect x="21.9250%" y="1365" width="11.9739%" height="15" fill="rgb(238,65,40)" fg:x="672" fg:w="367"/><text x="22.1750%" y="1375.50">_PyFunction_Vector..</text></g><g><title>_PyEval_EvalFrameDefault (367 samples, 11.97%)</title><rect x="21.9250%" y="1349" width="11.9739%" height="15" fill="rgb(230,151,21)" fg:x="672" fg:w="367"/><text x="22.1750%" y="1359.50">_PyEval_EvalFrameD..</text></g><g><title>_PyFunction_Vectorcall (367 samples, 11.97%)</title><rect x="21.9250%" y="1333" width="11.9739%" height="15" fill="rgb(218,58,49)" fg:x="672" fg:w="367"/><text x="22.1750%" y="1343.50">_PyFunction_Vector..</text></g><g><title>_PyEval_EvalFrameDefault (367 samples, 11.97%)</title><rect x="21.9250%" y="1317" width="11.9739%" height="15" fill="rgb(219,179,14)" fg:x="672" fg:w="367"/><text x="22.1750%" y="1327.50">_PyEval_EvalFrameD..</text></g><g><title>_PyObject_GetMethod (3 samples, 0.10%)</title><rect x="33.8010%" y="1301" width="0.0979%" height="15" fill="rgb(223,72,1)" fg:x="1036" fg:w="3"/><text x="34.0510%" y="1311.50"></text></g><g><title>PyObject_GetAttr (2 samples, 0.07%)</title><rect x="33.8336%" y="1285" width="0.0653%" height="15" fill="rgb(238,126,10)" fg:x="1037" fg:w="2"/><text x="34.0836%" y="1295.50"></text></g><g><title>[python3.10] (2 samples, 0.07%)</title><rect x="33.8336%" y="1269" width="0.0653%" height="15" fill="rgb(224,206,38)" fg:x="1037" fg:w="2"/><text x="34.0836%" y="1279.50"></text></g><g><title>_PyObject_GenericGetAttrWithDict (2 samples, 0.07%)</title><rect x="33.8336%" y="1253" width="0.0653%" height="15" fill="rgb(212,201,54)" fg:x="1037" fg:w="2"/><text x="34.0836%" y="1263.50"></text></g><g><title>[python3.10] (1 samples, 0.03%)</title><rect x="33.8662%" y="1237" width="0.0326%" height="15" fill="rgb(218,154,48)" fg:x="1038" fg:w="1"/><text x="34.1162%" y="1247.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="33.9315%" y="1429" width="0.0326%" height="15" fill="rgb(232,93,24)" fg:x="1040" fg:w="1"/><text x="34.1815%" y="1439.50"></text></g><g><title>filemap_get_read_batch (5 samples, 0.16%)</title><rect x="33.9641%" y="1429" width="0.1631%" height="15" fill="rgb(245,30,21)" fg:x="1041" fg:w="5"/><text x="34.2141%" y="1439.50"></text></g><g><title>xas_load (3 samples, 0.10%)</title><rect x="34.0294%" y="1413" width="0.0979%" height="15" fill="rgb(242,148,29)" fg:x="1043" fg:w="3"/><text x="34.2794%" y="1423.50"></text></g><g><title>xas_descend (1 samples, 0.03%)</title><rect x="34.0946%" y="1397" width="0.0326%" height="15" fill="rgb(244,153,54)" fg:x="1045" fg:w="1"/><text x="34.3446%" y="1407.50"></text></g><g><title>blk_cgroup_congested (1 samples, 0.03%)</title><rect x="34.1272%" y="1413" width="0.0326%" height="15" fill="rgb(252,87,22)" fg:x="1046" fg:w="1"/><text x="34.3772%" y="1423.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="34.3230%" y="1381" width="0.0326%" height="15" fill="rgb(210,51,29)" fg:x="1052" fg:w="1"/><text x="34.5730%" y="1391.50"></text></g><g><title>xas_descend (1 samples, 0.03%)</title><rect x="34.3883%" y="1365" width="0.0326%" height="15" fill="rgb(242,136,47)" fg:x="1054" fg:w="1"/><text x="34.6383%" y="1375.50"></text></g><g><title>ext4_file_read_iter (16 samples, 0.52%)</title><rect x="33.9315%" y="1493" width="0.5220%" height="15" fill="rgb(238,68,4)" fg:x="1040" fg:w="16"/><text x="34.1815%" y="1503.50"></text></g><g><title>generic_file_read_iter (16 samples, 0.52%)</title><rect x="33.9315%" y="1477" width="0.5220%" height="15" fill="rgb(242,161,30)" fg:x="1040" fg:w="16"/><text x="34.1815%" y="1487.50"></text></g><g><title>filemap_read (16 samples, 0.52%)</title><rect x="33.9315%" y="1461" width="0.5220%" height="15" fill="rgb(218,58,44)" fg:x="1040" fg:w="16"/><text x="34.1815%" y="1471.50"></text></g><g><title>filemap_get_pages (16 samples, 0.52%)</title><rect x="33.9315%" y="1445" width="0.5220%" height="15" fill="rgb(252,125,32)" fg:x="1040" fg:w="16"/><text x="34.1815%" y="1455.50"></text></g><g><title>page_cache_sync_ra (10 samples, 0.33%)</title><rect x="34.1272%" y="1429" width="0.3263%" height="15" fill="rgb(219,178,0)" fg:x="1046" fg:w="10"/><text x="34.3772%" y="1439.50"></text></g><g><title>force_page_cache_ra (9 samples, 0.29%)</title><rect x="34.1599%" y="1413" width="0.2936%" height="15" fill="rgb(213,152,7)" fg:x="1047" fg:w="9"/><text x="34.4099%" y="1423.50"></text></g><g><title>page_cache_ra_unbounded (7 samples, 0.23%)</title><rect x="34.2251%" y="1397" width="0.2284%" height="15" fill="rgb(249,109,34)" fg:x="1049" fg:w="7"/><text x="34.4751%" y="1407.50"></text></g><g><title>xa_load (3 samples, 0.10%)</title><rect x="34.3556%" y="1381" width="0.0979%" height="15" fill="rgb(232,96,21)" fg:x="1053" fg:w="3"/><text x="34.6056%" y="1391.50"></text></g><g><title>xas_load (1 samples, 0.03%)</title><rect x="34.4209%" y="1365" width="0.0326%" height="15" fill="rgb(228,27,39)" fg:x="1055" fg:w="1"/><text x="34.6709%" y="1375.50"></text></g><g><title>xas_descend (1 samples, 0.03%)</title><rect x="34.4209%" y="1349" width="0.0326%" height="15" fill="rgb(211,182,52)" fg:x="1055" fg:w="1"/><text x="34.6709%" y="1359.50"></text></g><g><title>apparmor_file_permission (2 samples, 0.07%)</title><rect x="34.4535%" y="1461" width="0.0653%" height="15" fill="rgb(234,178,38)" fg:x="1056" fg:w="2"/><text x="34.7035%" y="1471.50"></text></g><g><title>dput (1 samples, 0.03%)</title><rect x="34.5514%" y="1429" width="0.0326%" height="15" fill="rgb(221,111,3)" fg:x="1059" fg:w="1"/><text x="34.8014%" y="1439.50"></text></g><g><title>python3 (389 samples, 12.69%)</title><rect x="21.9250%" y="1589" width="12.6917%" height="15" fill="rgb(228,175,21)" fg:x="672" fg:w="389"/><text x="22.1750%" y="1599.50">python3</text></g><g><title>entry_SYSCALL_64 (22 samples, 0.72%)</title><rect x="33.8989%" y="1573" width="0.7178%" height="15" fill="rgb(228,174,43)" fg:x="1039" fg:w="22"/><text x="34.1489%" y="1583.50"></text></g><g><title>do_syscall_64 (22 samples, 0.72%)</title><rect x="33.8989%" y="1557" width="0.7178%" height="15" fill="rgb(211,191,0)" fg:x="1039" fg:w="22"/><text x="34.1489%" y="1567.50"></text></g><g><title>__x64_sys_read (22 samples, 0.72%)</title><rect x="33.8989%" y="1541" width="0.7178%" height="15" fill="rgb(253,117,3)" fg:x="1039" fg:w="22"/><text x="34.1489%" y="1551.50"></text></g><g><title>ksys_read (22 samples, 0.72%)</title><rect x="33.8989%" y="1525" width="0.7178%" height="15" fill="rgb(241,127,19)" fg:x="1039" fg:w="22"/><text x="34.1489%" y="1535.50"></text></g><g><title>vfs_read (22 samples, 0.72%)</title><rect x="33.8989%" y="1509" width="0.7178%" height="15" fill="rgb(218,103,12)" fg:x="1039" fg:w="22"/><text x="34.1489%" y="1519.50"></text></g><g><title>rw_verify_area (5 samples, 0.16%)</title><rect x="34.4535%" y="1493" width="0.1631%" height="15" fill="rgb(236,214,43)" fg:x="1056" fg:w="5"/><text x="34.7035%" y="1503.50"></text></g><g><title>security_file_permission (5 samples, 0.16%)</title><rect x="34.4535%" y="1477" width="0.1631%" height="15" fill="rgb(244,144,19)" fg:x="1056" fg:w="5"/><text x="34.7035%" y="1487.50"></text></g><g><title>fsnotify_perm.part.0 (3 samples, 0.10%)</title><rect x="34.5188%" y="1461" width="0.0979%" height="15" fill="rgb(246,188,10)" fg:x="1058" fg:w="3"/><text x="34.7688%" y="1471.50"></text></g><g><title>__fsnotify_parent (3 samples, 0.10%)</title><rect x="34.5188%" y="1445" width="0.0979%" height="15" fill="rgb(212,193,33)" fg:x="1058" fg:w="3"/><text x="34.7688%" y="1455.50"></text></g><g><title>fsnotify (1 samples, 0.03%)</title><rect x="34.5840%" y="1429" width="0.0326%" height="15" fill="rgb(241,51,29)" fg:x="1060" fg:w="1"/><text x="34.8340%" y="1439.50"></text></g><g><title>force_qs_rnp (2 samples, 0.07%)</title><rect x="34.6166%" y="1493" width="0.0653%" height="15" fill="rgb(211,58,19)" fg:x="1061" fg:w="2"/><text x="34.8666%" y="1503.50"></text></g><g><title>dyntick_save_progress_counter (2 samples, 0.07%)</title><rect x="34.6166%" y="1477" width="0.0653%" height="15" fill="rgb(229,111,26)" fg:x="1061" fg:w="2"/><text x="34.8666%" y="1487.50"></text></g><g><title>rcu_gp_fqs_loop (3 samples, 0.10%)</title><rect x="34.6166%" y="1509" width="0.0979%" height="15" fill="rgb(213,115,40)" fg:x="1061" fg:w="3"/><text x="34.8666%" y="1519.50"></text></g><g><title>schedule_timeout (1 samples, 0.03%)</title><rect x="34.6819%" y="1493" width="0.0326%" height="15" fill="rgb(209,56,44)" fg:x="1063" fg:w="1"/><text x="34.9319%" y="1503.50"></text></g><g><title>schedule (1 samples, 0.03%)</title><rect x="34.6819%" y="1477" width="0.0326%" height="15" fill="rgb(230,108,32)" fg:x="1063" fg:w="1"/><text x="34.9319%" y="1487.50"></text></g><g><title>__schedule (1 samples, 0.03%)</title><rect x="34.6819%" y="1461" width="0.0326%" height="15" fill="rgb(216,165,31)" fg:x="1063" fg:w="1"/><text x="34.9319%" y="1471.50"></text></g><g><title>psi_task_switch (1 samples, 0.03%)</title><rect x="34.6819%" y="1445" width="0.0326%" height="15" fill="rgb(218,122,21)" fg:x="1063" fg:w="1"/><text x="34.9319%" y="1455.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.03%)</title><rect x="34.6819%" y="1429" width="0.0326%" height="15" fill="rgb(223,224,47)" fg:x="1063" fg:w="1"/><text x="34.9319%" y="1439.50"></text></g><g><title>sched_clock (1 samples, 0.03%)</title><rect x="34.6819%" y="1413" width="0.0326%" height="15" fill="rgb(238,102,44)" fg:x="1063" fg:w="1"/><text x="34.9319%" y="1423.50"></text></g><g><title>rcu_gp_kthread (4 samples, 0.13%)</title><rect x="34.6166%" y="1525" width="0.1305%" height="15" fill="rgb(236,46,40)" fg:x="1061" fg:w="4"/><text x="34.8666%" y="1535.50"></text></g><g><title>schedule (1 samples, 0.03%)</title><rect x="34.7145%" y="1509" width="0.0326%" height="15" fill="rgb(247,202,50)" fg:x="1064" fg:w="1"/><text x="34.9645%" y="1519.50"></text></g><g><title>__schedule (1 samples, 0.03%)</title><rect x="34.7145%" y="1493" width="0.0326%" height="15" fill="rgb(209,99,20)" fg:x="1064" fg:w="1"/><text x="34.9645%" y="1503.50"></text></g><g><title>psi_task_switch (1 samples, 0.03%)</title><rect x="34.7145%" y="1477" width="0.0326%" height="15" fill="rgb(252,27,34)" fg:x="1064" fg:w="1"/><text x="34.9645%" y="1487.50"></text></g><g><title>rcu_preempt (5 samples, 0.16%)</title><rect x="34.6166%" y="1589" width="0.1631%" height="15" fill="rgb(215,206,23)" fg:x="1061" fg:w="5"/><text x="34.8666%" y="1599.50"></text></g><g><title>ret_from_fork_asm (5 samples, 0.16%)</title><rect x="34.6166%" y="1573" width="0.1631%" height="15" fill="rgb(212,135,36)" fg:x="1061" fg:w="5"/><text x="34.8666%" y="1583.50"></text></g><g><title>ret_from_fork (5 samples, 0.16%)</title><rect x="34.6166%" y="1557" width="0.1631%" height="15" fill="rgb(240,189,1)" fg:x="1061" fg:w="5"/><text x="34.8666%" y="1567.50"></text></g><g><title>kthread (5 samples, 0.16%)</title><rect x="34.6166%" y="1541" width="0.1631%" height="15" fill="rgb(242,56,20)" fg:x="1061" fg:w="5"/><text x="34.8666%" y="1551.50"></text></g><g><title>srso_safe_ret (1 samples, 0.03%)</title><rect x="34.7471%" y="1525" width="0.0326%" height="15" fill="rgb(247,132,33)" fg:x="1065" fg:w="1"/><text x="34.9971%" y="1535.50"></text></g><g><title>sed (1 samples, 0.03%)</title><rect x="34.7798%" y="1589" width="0.0326%" height="15" fill="rgb(208,149,11)" fg:x="1066" fg:w="1"/><text x="35.0298%" y="1599.50"></text></g><g><title>_dl_runtime_resolve_xsavec (1 samples, 0.03%)</title><rect x="34.7798%" y="1573" width="0.0326%" height="15" fill="rgb(211,33,11)" fg:x="1066" fg:w="1"/><text x="35.0298%" y="1583.50"></text></g><g><title>__GI___clock_nanosleep (1 samples, 0.03%)</title><rect x="34.8124%" y="1573" width="0.0326%" height="15" fill="rgb(221,29,38)" fg:x="1067" fg:w="1"/><text x="35.0624%" y="1583.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="34.8124%" y="1557" width="0.0326%" height="15" fill="rgb(206,182,49)" fg:x="1067" fg:w="1"/><text x="35.0624%" y="1567.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="34.8124%" y="1541" width="0.0326%" height="15" fill="rgb(216,140,1)" fg:x="1067" fg:w="1"/><text x="35.0624%" y="1551.50"></text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.03%)</title><rect x="34.8124%" y="1525" width="0.0326%" height="15" fill="rgb(232,57,40)" fg:x="1067" fg:w="1"/><text x="35.0624%" y="1535.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.03%)</title><rect x="34.8124%" y="1509" width="0.0326%" height="15" fill="rgb(224,186,18)" fg:x="1067" fg:w="1"/><text x="35.0624%" y="1519.50"></text></g><g><title>sleep (2 samples, 0.07%)</title><rect x="34.8124%" y="1589" width="0.0653%" height="15" fill="rgb(215,121,11)" fg:x="1067" fg:w="2"/><text x="35.0624%" y="1599.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.03%)</title><rect x="34.8450%" y="1573" width="0.0326%" height="15" fill="rgb(245,147,10)" fg:x="1068" fg:w="1"/><text x="35.0950%" y="1583.50"></text></g><g><title>__access (1 samples, 0.03%)</title><rect x="34.8450%" y="1557" width="0.0326%" height="15" fill="rgb(238,153,13)" fg:x="1068" fg:w="1"/><text x="35.0950%" y="1567.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="34.8450%" y="1541" width="0.0326%" height="15" fill="rgb(233,108,0)" fg:x="1068" fg:w="1"/><text x="35.0950%" y="1551.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="34.8450%" y="1525" width="0.0326%" height="15" fill="rgb(212,157,17)" fg:x="1068" fg:w="1"/><text x="35.0950%" y="1535.50"></text></g><g><title>__x64_sys_access (1 samples, 0.03%)</title><rect x="34.8450%" y="1509" width="0.0326%" height="15" fill="rgb(225,213,38)" fg:x="1068" fg:w="1"/><text x="35.0950%" y="1519.50"></text></g><g><title>do_faccessat (1 samples, 0.03%)</title><rect x="34.8450%" y="1493" width="0.0326%" height="15" fill="rgb(248,16,11)" fg:x="1068" fg:w="1"/><text x="35.0950%" y="1503.50"></text></g><g><title>user_path_at_empty (1 samples, 0.03%)</title><rect x="34.8450%" y="1477" width="0.0326%" height="15" fill="rgb(241,33,4)" fg:x="1068" fg:w="1"/><text x="35.0950%" y="1487.50"></text></g><g><title>filename_lookup (1 samples, 0.03%)</title><rect x="34.8450%" y="1461" width="0.0326%" height="15" fill="rgb(222,26,43)" fg:x="1068" fg:w="1"/><text x="35.0950%" y="1471.50"></text></g><g><title>path_lookupat (1 samples, 0.03%)</title><rect x="34.8450%" y="1445" width="0.0326%" height="15" fill="rgb(243,29,36)" fg:x="1068" fg:w="1"/><text x="35.0950%" y="1455.50"></text></g><g><title>link_path_walk.part.0.constprop.0 (1 samples, 0.03%)</title><rect x="34.8450%" y="1429" width="0.0326%" height="15" fill="rgb(241,9,27)" fg:x="1068" fg:w="1"/><text x="35.0950%" y="1439.50"></text></g><g><title>walk_component (1 samples, 0.03%)</title><rect x="34.8450%" y="1413" width="0.0326%" height="15" fill="rgb(205,117,26)" fg:x="1068" fg:w="1"/><text x="35.0950%" y="1423.50"></text></g><g><title>step_into (1 samples, 0.03%)</title><rect x="34.8450%" y="1397" width="0.0326%" height="15" fill="rgb(209,80,39)" fg:x="1068" fg:w="1"/><text x="35.0950%" y="1407.50"></text></g><g><title>__lookup_mnt (1 samples, 0.03%)</title><rect x="34.8450%" y="1381" width="0.0326%" height="15" fill="rgb(239,155,6)" fg:x="1068" fg:w="1"/><text x="35.0950%" y="1391.50"></text></g><g><title>tcp_push (1 samples, 0.03%)</title><rect x="34.8777%" y="1301" width="0.0326%" height="15" fill="rgb(212,104,12)" fg:x="1069" fg:w="1"/><text x="35.1277%" y="1311.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.03%)</title><rect x="34.8777%" y="1285" width="0.0326%" height="15" fill="rgb(234,204,3)" fg:x="1069" fg:w="1"/><text x="35.1277%" y="1295.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.03%)</title><rect x="34.8777%" y="1269" width="0.0326%" height="15" fill="rgb(251,218,7)" fg:x="1069" fg:w="1"/><text x="35.1277%" y="1279.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.03%)</title><rect x="34.8777%" y="1253" width="0.0326%" height="15" fill="rgb(221,81,32)" fg:x="1069" fg:w="1"/><text x="35.1277%" y="1263.50"></text></g><g><title>ip_queue_xmit (1 samples, 0.03%)</title><rect x="34.8777%" y="1237" width="0.0326%" height="15" fill="rgb(214,152,26)" fg:x="1069" fg:w="1"/><text x="35.1277%" y="1247.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.03%)</title><rect x="34.8777%" y="1221" width="0.0326%" height="15" fill="rgb(223,22,3)" fg:x="1069" fg:w="1"/><text x="35.1277%" y="1231.50"></text></g><g><title>ip_local_out (1 samples, 0.03%)</title><rect x="34.8777%" y="1205" width="0.0326%" height="15" fill="rgb(207,174,7)" fg:x="1069" fg:w="1"/><text x="35.1277%" y="1215.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="34.8777%" y="1189" width="0.0326%" height="15" fill="rgb(224,19,52)" fg:x="1069" fg:w="1"/><text x="35.1277%" y="1199.50"></text></g><g><title>__build_skb_around (1 samples, 0.03%)</title><rect x="34.9103%" y="1285" width="0.0326%" height="15" fill="rgb(228,24,14)" fg:x="1070" fg:w="1"/><text x="35.1603%" y="1295.50"></text></g><g><title>[sshd] (3 samples, 0.10%)</title><rect x="34.8777%" y="1477" width="0.0979%" height="15" fill="rgb(230,153,43)" fg:x="1069" fg:w="3"/><text x="35.1277%" y="1487.50"></text></g><g><title>__GI___libc_write (3 samples, 0.10%)</title><rect x="34.8777%" y="1461" width="0.0979%" height="15" fill="rgb(231,106,12)" fg:x="1069" fg:w="3"/><text x="35.1277%" y="1471.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.10%)</title><rect x="34.8777%" y="1445" width="0.0979%" height="15" fill="rgb(215,92,2)" fg:x="1069" fg:w="3"/><text x="35.1277%" y="1455.50"></text></g><g><title>do_syscall_64 (3 samples, 0.10%)</title><rect x="34.8777%" y="1429" width="0.0979%" height="15" fill="rgb(249,143,25)" fg:x="1069" fg:w="3"/><text x="35.1277%" y="1439.50"></text></g><g><title>__x64_sys_write (3 samples, 0.10%)</title><rect x="34.8777%" y="1413" width="0.0979%" height="15" fill="rgb(252,7,35)" fg:x="1069" fg:w="3"/><text x="35.1277%" y="1423.50"></text></g><g><title>ksys_write (3 samples, 0.10%)</title><rect x="34.8777%" y="1397" width="0.0979%" height="15" fill="rgb(216,69,40)" fg:x="1069" fg:w="3"/><text x="35.1277%" y="1407.50"></text></g><g><title>vfs_write (3 samples, 0.10%)</title><rect x="34.8777%" y="1381" width="0.0979%" height="15" fill="rgb(240,36,33)" fg:x="1069" fg:w="3"/><text x="35.1277%" y="1391.50"></text></g><g><title>sock_write_iter (3 samples, 0.10%)</title><rect x="34.8777%" y="1365" width="0.0979%" height="15" fill="rgb(231,128,14)" fg:x="1069" fg:w="3"/><text x="35.1277%" y="1375.50"></text></g><g><title>inet_sendmsg (3 samples, 0.10%)</title><rect x="34.8777%" y="1349" width="0.0979%" height="15" fill="rgb(245,143,14)" fg:x="1069" fg:w="3"/><text x="35.1277%" y="1359.50"></text></g><g><title>tcp_sendmsg (3 samples, 0.10%)</title><rect x="34.8777%" y="1333" width="0.0979%" height="15" fill="rgb(222,130,28)" fg:x="1069" fg:w="3"/><text x="35.1277%" y="1343.50"></text></g><g><title>tcp_sendmsg_locked (3 samples, 0.10%)</title><rect x="34.8777%" y="1317" width="0.0979%" height="15" fill="rgb(212,10,48)" fg:x="1069" fg:w="3"/><text x="35.1277%" y="1327.50"></text></g><g><title>tcp_stream_alloc_skb (2 samples, 0.07%)</title><rect x="34.9103%" y="1301" width="0.0653%" height="15" fill="rgb(254,118,45)" fg:x="1070" fg:w="2"/><text x="35.1603%" y="1311.50"></text></g><g><title>sk_forced_mem_schedule (1 samples, 0.03%)</title><rect x="34.9429%" y="1285" width="0.0326%" height="15" fill="rgb(228,6,45)" fg:x="1071" fg:w="1"/><text x="35.1929%" y="1295.50"></text></g><g><title>mem_cgroup_charge_skmem (1 samples, 0.03%)</title><rect x="34.9429%" y="1269" width="0.0326%" height="15" fill="rgb(241,18,35)" fg:x="1071" fg:w="1"/><text x="35.1929%" y="1279.50"></text></g><g><title>try_charge_memcg (1 samples, 0.03%)</title><rect x="34.9429%" y="1253" width="0.0326%" height="15" fill="rgb(227,214,53)" fg:x="1071" fg:w="1"/><text x="35.1929%" y="1263.50"></text></g><g><title>page_counter_try_charge (1 samples, 0.03%)</title><rect x="34.9429%" y="1237" width="0.0326%" height="15" fill="rgb(224,107,51)" fg:x="1071" fg:w="1"/><text x="35.1929%" y="1247.50"></text></g><g><title>sshd (4 samples, 0.13%)</title><rect x="34.8777%" y="1589" width="0.1305%" height="15" fill="rgb(248,60,28)" fg:x="1069" fg:w="4"/><text x="35.1277%" y="1599.50"></text></g><g><title>[sshd] (4 samples, 0.13%)</title><rect x="34.8777%" y="1573" width="0.1305%" height="15" fill="rgb(249,101,23)" fg:x="1069" fg:w="4"/><text x="35.1277%" y="1583.50"></text></g><g><title>__libc_start_main_impl (4 samples, 0.13%)</title><rect x="34.8777%" y="1557" width="0.1305%" height="15" fill="rgb(228,51,19)" fg:x="1069" fg:w="4"/><text x="35.1277%" y="1567.50"></text></g><g><title>__libc_start_call_main (4 samples, 0.13%)</title><rect x="34.8777%" y="1541" width="0.1305%" height="15" fill="rgb(213,20,6)" fg:x="1069" fg:w="4"/><text x="35.1277%" y="1551.50"></text></g><g><title>[sshd] (4 samples, 0.13%)</title><rect x="34.8777%" y="1525" width="0.1305%" height="15" fill="rgb(212,124,10)" fg:x="1069" fg:w="4"/><text x="35.1277%" y="1535.50"></text></g><g><title>[sshd] (4 samples, 0.13%)</title><rect x="34.8777%" y="1509" width="0.1305%" height="15" fill="rgb(248,3,40)" fg:x="1069" fg:w="4"/><text x="35.1277%" y="1519.50"></text></g><g><title>[sshd] (4 samples, 0.13%)</title><rect x="34.8777%" y="1493" width="0.1305%" height="15" fill="rgb(223,178,23)" fg:x="1069" fg:w="4"/><text x="35.1277%" y="1503.50"></text></g><g><title>__ppoll (1 samples, 0.03%)</title><rect x="34.9755%" y="1477" width="0.0326%" height="15" fill="rgb(240,132,45)" fg:x="1072" fg:w="1"/><text x="35.2255%" y="1487.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="34.9755%" y="1461" width="0.0326%" height="15" fill="rgb(245,164,36)" fg:x="1072" fg:w="1"/><text x="35.2255%" y="1471.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="34.9755%" y="1445" width="0.0326%" height="15" fill="rgb(231,188,53)" fg:x="1072" fg:w="1"/><text x="35.2255%" y="1455.50"></text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.03%)</title><rect x="34.9755%" y="1429" width="0.0326%" height="15" fill="rgb(237,198,39)" fg:x="1072" fg:w="1"/><text x="35.2255%" y="1439.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.03%)</title><rect x="34.9755%" y="1413" width="0.0326%" height="15" fill="rgb(223,120,35)" fg:x="1072" fg:w="1"/><text x="35.2255%" y="1423.50"></text></g><g><title>__rdgsbase_inactive (2 samples, 0.07%)</title><rect x="35.0082%" y="1573" width="0.0653%" height="15" fill="rgb(253,107,49)" fg:x="1073" fg:w="2"/><text x="35.2582%" y="1583.50"></text></g><g><title>__switch_to (1 samples, 0.03%)</title><rect x="35.0734%" y="1573" width="0.0326%" height="15" fill="rgb(216,44,31)" fg:x="1075" fg:w="1"/><text x="35.3234%" y="1583.50"></text></g><g><title>irq_enter_rcu (2 samples, 0.07%)</title><rect x="35.1060%" y="1573" width="0.0653%" height="15" fill="rgb(253,87,21)" fg:x="1076" fg:w="2"/><text x="35.3560%" y="1583.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.07%)</title><rect x="35.1713%" y="1573" width="0.0653%" height="15" fill="rgb(226,18,2)" fg:x="1078" fg:w="2"/><text x="35.4213%" y="1583.50"></text></g><g><title>arch_cpu_idle_enter (2 samples, 0.07%)</title><rect x="35.2365%" y="1525" width="0.0653%" height="15" fill="rgb(216,8,46)" fg:x="1080" fg:w="2"/><text x="35.4865%" y="1535.50"></text></g><g><title>call_cpuidle (2 samples, 0.07%)</title><rect x="35.3018%" y="1525" width="0.0653%" height="15" fill="rgb(226,140,39)" fg:x="1082" fg:w="2"/><text x="35.5518%" y="1535.50"></text></g><g><title>cpuidle_reflect (2 samples, 0.07%)</title><rect x="35.3670%" y="1525" width="0.0653%" height="15" fill="rgb(221,194,54)" fg:x="1084" fg:w="2"/><text x="35.6170%" y="1535.50"></text></g><g><title>cpuidle_select (7 samples, 0.23%)</title><rect x="35.4323%" y="1525" width="0.2284%" height="15" fill="rgb(213,92,11)" fg:x="1086" fg:w="7"/><text x="35.6823%" y="1535.50"></text></g><g><title>arch_cpu_idle_enter (2 samples, 0.07%)</title><rect x="35.9869%" y="1509" width="0.0653%" height="15" fill="rgb(229,162,46)" fg:x="1103" fg:w="2"/><text x="36.2369%" y="1519.50"></text></g><g><title>tsc_verify_tsc_adjust (2 samples, 0.07%)</title><rect x="35.9869%" y="1493" width="0.0653%" height="15" fill="rgb(214,111,36)" fg:x="1103" fg:w="2"/><text x="36.2369%" y="1503.50"></text></g><g><title>asm_common_interrupt (6 samples, 0.20%)</title><rect x="36.0522%" y="1477" width="0.1958%" height="15" fill="rgb(207,6,21)" fg:x="1105" fg:w="6"/><text x="36.3022%" y="1487.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (26 samples, 0.85%)</title><rect x="36.2480%" y="1477" width="0.8483%" height="15" fill="rgb(213,127,38)" fg:x="1111" fg:w="26"/><text x="36.4980%" y="1487.50"></text></g><g><title>asm_sysvec_call_function_single (18 samples, 0.59%)</title><rect x="37.0962%" y="1477" width="0.5873%" height="15" fill="rgb(238,118,32)" fg:x="1137" fg:w="18"/><text x="37.3462%" y="1487.50"></text></g><g><title>acpi_idle_do_entry (1 samples, 0.03%)</title><rect x="39.1843%" y="1461" width="0.0326%" height="15" fill="rgb(240,139,39)" fg:x="1201" fg:w="1"/><text x="39.4343%" y="1471.50"></text></g><g><title>acpi_idle_do_entry (59 samples, 1.92%)</title><rect x="39.3801%" y="1445" width="1.9250%" height="15" fill="rgb(235,10,37)" fg:x="1207" fg:w="59"/><text x="39.6301%" y="1455.50">a..</text></g><g><title>acpi_processor_ffh_cstate_enter (55 samples, 1.79%)</title><rect x="39.5106%" y="1429" width="1.7945%" height="15" fill="rgb(249,171,38)" fg:x="1211" fg:w="55"/><text x="39.7606%" y="1439.50">a..</text></g><g><title>io_idle (222 samples, 7.24%)</title><rect x="41.3051%" y="1445" width="7.2431%" height="15" fill="rgb(242,144,32)" fg:x="1266" fg:w="222"/><text x="41.5551%" y="1455.50">io_idle</text></g><g><title>srso_return_thunk (1 samples, 0.03%)</title><rect x="48.5481%" y="1445" width="0.0326%" height="15" fill="rgb(217,117,21)" fg:x="1488" fg:w="1"/><text x="48.7981%" y="1455.50"></text></g><g><title>acpi_idle_enter (298 samples, 9.72%)</title><rect x="39.2170%" y="1461" width="9.7227%" height="15" fill="rgb(249,87,1)" fg:x="1202" fg:w="298"/><text x="39.4670%" y="1471.50">acpi_idle_enter</text></g><g><title>srso_safe_ret (11 samples, 0.36%)</title><rect x="48.5808%" y="1445" width="0.3589%" height="15" fill="rgb(248,196,48)" fg:x="1489" fg:w="11"/><text x="48.8308%" y="1455.50"></text></g><g><title>add_interrupt_randomness (1 samples, 0.03%)</title><rect x="49.1680%" y="1397" width="0.0326%" height="15" fill="rgb(251,206,33)" fg:x="1507" fg:w="1"/><text x="49.4180%" y="1407.50"></text></g><g><title>apic_ack_irq (1 samples, 0.03%)</title><rect x="49.2007%" y="1397" width="0.0326%" height="15" fill="rgb(232,141,28)" fg:x="1508" fg:w="1"/><text x="49.4507%" y="1407.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="49.4617%" y="1365" width="0.0326%" height="15" fill="rgb(209,167,14)" fg:x="1516" fg:w="1"/><text x="49.7117%" y="1375.50"></text></g><g><title>__x86_indirect_thunk_r13 (2 samples, 0.07%)</title><rect x="54.9429%" y="1269" width="0.0653%" height="15" fill="rgb(225,11,50)" fg:x="1684" fg:w="2"/><text x="55.1929%" y="1279.50"></text></g><g><title>cpus_share_cache (27 samples, 0.88%)</title><rect x="56.6069%" y="1189" width="0.8809%" height="15" fill="rgb(209,50,20)" fg:x="1735" fg:w="27"/><text x="56.8569%" y="1199.50"></text></g><g><title>__smp_call_single_queue (2 samples, 0.07%)</title><rect x="57.4878%" y="1157" width="0.0653%" height="15" fill="rgb(212,17,46)" fg:x="1762" fg:w="2"/><text x="57.7378%" y="1167.50"></text></g><g><title>call_function_single_prep_ipi (2 samples, 0.07%)</title><rect x="57.4878%" y="1141" width="0.0653%" height="15" fill="rgb(216,101,39)" fg:x="1762" fg:w="2"/><text x="57.7378%" y="1151.50"></text></g><g><title>blk_mq_complete_request_remote.part.0 (35 samples, 1.14%)</title><rect x="56.4437%" y="1205" width="1.1419%" height="15" fill="rgb(212,228,48)" fg:x="1730" fg:w="35"/><text x="56.6937%" y="1215.50"></text></g><g><title>smp_call_function_single_async (3 samples, 0.10%)</title><rect x="57.4878%" y="1189" width="0.0979%" height="15" fill="rgb(250,6,50)" fg:x="1762" fg:w="3"/><text x="57.7378%" y="1199.50"></text></g><g><title>generic_exec_single (3 samples, 0.10%)</title><rect x="57.4878%" y="1173" width="0.0979%" height="15" fill="rgb(250,160,48)" fg:x="1762" fg:w="3"/><text x="57.7378%" y="1183.50"></text></g><g><title>srso_return_thunk (1 samples, 0.03%)</title><rect x="57.5530%" y="1157" width="0.0326%" height="15" fill="rgb(244,216,33)" fg:x="1764" fg:w="1"/><text x="57.8030%" y="1167.50"></text></g><g><title>ata_scsi_qc_complete (84 samples, 2.74%)</title><rect x="55.0082%" y="1269" width="2.7406%" height="15" fill="rgb(207,157,5)" fg:x="1686" fg:w="84"/><text x="55.2582%" y="1279.50">at..</text></g><g><title>scsi_done (83 samples, 2.71%)</title><rect x="55.0408%" y="1253" width="2.7080%" height="15" fill="rgb(228,199,8)" fg:x="1687" fg:w="83"/><text x="55.2908%" y="1263.50">sc..</text></g><g><title>scsi_done_internal (83 samples, 2.71%)</title><rect x="55.0408%" y="1237" width="2.7080%" height="15" fill="rgb(227,80,20)" fg:x="1687" fg:w="83"/><text x="55.2908%" y="1247.50">sc..</text></g><g><title>blk_mq_complete_request (82 samples, 2.68%)</title><rect x="55.0734%" y="1221" width="2.6754%" height="15" fill="rgb(222,9,33)" fg:x="1688" fg:w="82"/><text x="55.3234%" y="1231.50">bl..</text></g><g><title>llist_add_batch (5 samples, 0.16%)</title><rect x="57.5856%" y="1205" width="0.1631%" height="15" fill="rgb(239,44,28)" fg:x="1765" fg:w="5"/><text x="57.8356%" y="1215.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="57.7814%" y="1189" width="0.0326%" height="15" fill="rgb(249,187,43)" fg:x="1771" fg:w="1"/><text x="58.0314%" y="1199.50"></text></g><g><title>free_iova_fast (2 samples, 0.07%)</title><rect x="57.8140%" y="1189" width="0.0653%" height="15" fill="rgb(216,141,28)" fg:x="1772" fg:w="2"/><text x="58.0640%" y="1199.50"></text></g><g><title>ahci_qc_complete (220 samples, 7.18%)</title><rect x="50.7667%" y="1333" width="7.1778%" height="15" fill="rgb(230,154,53)" fg:x="1556" fg:w="220"/><text x="51.0167%" y="1343.50">ahci_qc_co..</text></g><g><title>ata_qc_complete_multiple (93 samples, 3.03%)</title><rect x="54.9103%" y="1317" width="3.0343%" height="15" fill="rgb(227,82,4)" fg:x="1683" fg:w="93"/><text x="55.1603%" y="1327.50">ata..</text></g><g><title>ata_qc_complete (92 samples, 3.00%)</title><rect x="54.9429%" y="1301" width="3.0016%" height="15" fill="rgb(220,107,16)" fg:x="1684" fg:w="92"/><text x="55.1929%" y="1311.50">ata..</text></g><g><title>__ata_qc_complete (92 samples, 3.00%)</title><rect x="54.9429%" y="1285" width="3.0016%" height="15" fill="rgb(207,187,2)" fg:x="1684" fg:w="92"/><text x="55.1929%" y="1295.50">__a..</text></g><g><title>dma_unmap_sg_attrs (6 samples, 0.20%)</title><rect x="57.7488%" y="1269" width="0.1958%" height="15" fill="rgb(210,162,52)" fg:x="1770" fg:w="6"/><text x="57.9988%" y="1279.50"></text></g><g><title>iommu_dma_unmap_sg (6 samples, 0.20%)</title><rect x="57.7488%" y="1253" width="0.1958%" height="15" fill="rgb(217,216,49)" fg:x="1770" fg:w="6"/><text x="57.9988%" y="1263.50"></text></g><g><title>__iommu_dma_unmap (6 samples, 0.20%)</title><rect x="57.7488%" y="1237" width="0.1958%" height="15" fill="rgb(218,146,49)" fg:x="1770" fg:w="6"/><text x="57.9988%" y="1247.50"></text></g><g><title>iommu_dma_free_iova (6 samples, 0.20%)</title><rect x="57.7488%" y="1221" width="0.1958%" height="15" fill="rgb(216,55,40)" fg:x="1770" fg:w="6"/><text x="57.9988%" y="1231.50"></text></g><g><title>fq_ring_free (6 samples, 0.20%)</title><rect x="57.7488%" y="1205" width="0.1958%" height="15" fill="rgb(208,196,21)" fg:x="1770" fg:w="6"/><text x="57.9988%" y="1215.50"></text></g><g><title>put_pages_list (2 samples, 0.07%)</title><rect x="57.8793%" y="1189" width="0.0653%" height="15" fill="rgb(242,117,42)" fg:x="1774" fg:w="2"/><text x="58.1293%" y="1199.50"></text></g><g><title>__handle_irq_event_percpu (265 samples, 8.65%)</title><rect x="49.4617%" y="1381" width="8.6460%" height="15" fill="rgb(210,11,23)" fg:x="1516" fg:w="265"/><text x="49.7117%" y="1391.50">__handle_irq..</text></g><g><title>ahci_multi_irqs_intr_hard (264 samples, 8.61%)</title><rect x="49.4943%" y="1365" width="8.6134%" height="15" fill="rgb(217,110,2)" fg:x="1517" fg:w="264"/><text x="49.7443%" y="1375.50">ahci_multi_i..</text></g><g><title>ahci_handle_port_interrupt (225 samples, 7.34%)</title><rect x="50.7667%" y="1349" width="7.3409%" height="15" fill="rgb(229,77,54)" fg:x="1556" fg:w="225"/><text x="51.0167%" y="1359.50">ahci_handl..</text></g><g><title>sata_async_notification (5 samples, 0.16%)</title><rect x="57.9445%" y="1333" width="0.1631%" height="15" fill="rgb(218,53,16)" fg:x="1776" fg:w="5"/><text x="58.1945%" y="1343.50"></text></g><g><title>sata_scr_read (5 samples, 0.16%)</title><rect x="57.9445%" y="1317" width="0.1631%" height="15" fill="rgb(215,38,13)" fg:x="1776" fg:w="5"/><text x="58.1945%" y="1327.50"></text></g><g><title>ahci_scr_read (5 samples, 0.16%)</title><rect x="57.9445%" y="1301" width="0.1631%" height="15" fill="rgb(235,42,18)" fg:x="1776" fg:w="5"/><text x="58.1945%" y="1311.50"></text></g><g><title>add_interrupt_randomness (2 samples, 0.07%)</title><rect x="58.1077%" y="1381" width="0.0653%" height="15" fill="rgb(219,66,54)" fg:x="1781" fg:w="2"/><text x="58.3577%" y="1391.50"></text></g><g><title>handle_edge_irq (279 samples, 9.10%)</title><rect x="49.1028%" y="1413" width="9.1028%" height="15" fill="rgb(222,205,4)" fg:x="1505" fg:w="279"/><text x="49.3528%" y="1423.50">handle_edge_i..</text></g><g><title>handle_irq_event (275 samples, 8.97%)</title><rect x="49.2333%" y="1397" width="8.9723%" height="15" fill="rgb(227,213,46)" fg:x="1509" fg:w="275"/><text x="49.4833%" y="1407.50">handle_irq_ev..</text></g><g><title>fast_mix (1 samples, 0.03%)</title><rect x="58.1729%" y="1381" width="0.0326%" height="15" fill="rgb(250,145,42)" fg:x="1783" fg:w="1"/><text x="58.4229%" y="1391.50"></text></g><g><title>__common_interrupt (281 samples, 9.17%)</title><rect x="49.0701%" y="1429" width="9.1680%" height="15" fill="rgb(219,15,2)" fg:x="1504" fg:w="281"/><text x="49.3201%" y="1439.50">__common_inte..</text></g><g><title>irq_chip_ack_parent (1 samples, 0.03%)</title><rect x="58.2055%" y="1413" width="0.0326%" height="15" fill="rgb(231,181,52)" fg:x="1784" fg:w="1"/><text x="58.4555%" y="1423.50"></text></g><g><title>ct_irq_enter (1 samples, 0.03%)</title><rect x="58.2382%" y="1429" width="0.0326%" height="15" fill="rgb(235,1,42)" fg:x="1785" fg:w="1"/><text x="58.4882%" y="1439.50"></text></g><g><title>irqtime_account_irq (7 samples, 0.23%)</title><rect x="58.2708%" y="1413" width="0.2284%" height="15" fill="rgb(249,88,27)" fg:x="1786" fg:w="7"/><text x="58.5208%" y="1423.50"></text></g><g><title>sched_clock_cpu (6 samples, 0.20%)</title><rect x="58.3034%" y="1397" width="0.1958%" height="15" fill="rgb(235,145,16)" fg:x="1787" fg:w="6"/><text x="58.5534%" y="1407.50"></text></g><g><title>sched_clock (6 samples, 0.20%)</title><rect x="58.3034%" y="1381" width="0.1958%" height="15" fill="rgb(237,114,19)" fg:x="1787" fg:w="6"/><text x="58.5534%" y="1391.50"></text></g><g><title>sched_clock_noinstr (6 samples, 0.20%)</title><rect x="58.3034%" y="1365" width="0.1958%" height="15" fill="rgb(238,51,50)" fg:x="1787" fg:w="6"/><text x="58.5534%" y="1375.50"></text></g><g><title>native_sched_clock (6 samples, 0.20%)</title><rect x="58.3034%" y="1349" width="0.1958%" height="15" fill="rgb(205,194,25)" fg:x="1787" fg:w="6"/><text x="58.5534%" y="1359.50"></text></g><g><title>tick_check_oneshot_broadcast_this_cpu (1 samples, 0.03%)</title><rect x="58.4992%" y="1413" width="0.0326%" height="15" fill="rgb(215,203,17)" fg:x="1793" fg:w="1"/><text x="58.7492%" y="1423.50"></text></g><g><title>ktime_get (14 samples, 0.46%)</title><rect x="61.0114%" y="1397" width="0.4568%" height="15" fill="rgb(233,112,49)" fg:x="1870" fg:w="14"/><text x="61.2614%" y="1407.50"></text></g><g><title>nr_iowait_cpu (13 samples, 0.42%)</title><rect x="61.4682%" y="1397" width="0.4241%" height="15" fill="rgb(241,130,26)" fg:x="1884" fg:w="13"/><text x="61.7182%" y="1407.50"></text></g><g><title>read_tsc (66 samples, 2.15%)</title><rect x="61.8923%" y="1397" width="2.1533%" height="15" fill="rgb(252,223,19)" fg:x="1897" fg:w="66"/><text x="62.1423%" y="1407.50">r..</text></g><g><title>sched_clock_idle_wakeup_event (21 samples, 0.69%)</title><rect x="64.0457%" y="1397" width="0.6852%" height="15" fill="rgb(211,95,25)" fg:x="1963" fg:w="21"/><text x="64.2957%" y="1407.50"></text></g><g><title>srso_safe_ret (17 samples, 0.55%)</title><rect x="64.7308%" y="1397" width="0.5546%" height="15" fill="rgb(251,182,27)" fg:x="1984" fg:w="17"/><text x="64.9808%" y="1407.50"></text></g><g><title>tick_irq_enter (430 samples, 14.03%)</title><rect x="58.5318%" y="1413" width="14.0294%" height="15" fill="rgb(238,24,4)" fg:x="1794" fg:w="430"/><text x="58.7818%" y="1423.50">tick_irq_enter</text></g><g><title>tick_nohz_stop_idle (223 samples, 7.28%)</title><rect x="65.2855%" y="1397" width="7.2757%" height="15" fill="rgb(224,220,25)" fg:x="2001" fg:w="223"/><text x="65.5355%" y="1407.50">tick_nohz_..</text></g><g><title>nr_iowait_cpu (73 samples, 2.38%)</title><rect x="70.1794%" y="1381" width="2.3817%" height="15" fill="rgb(239,133,26)" fg:x="2151" fg:w="73"/><text x="70.4294%" y="1391.50">nr..</text></g><g><title>irq_enter_rcu (506 samples, 16.51%)</title><rect x="58.2708%" y="1429" width="16.5090%" height="15" fill="rgb(211,94,48)" fg:x="1786" fg:w="506"/><text x="58.5208%" y="1439.50">irq_enter_rcu</text></g><g><title>tick_nohz_stop_idle (68 samples, 2.22%)</title><rect x="72.5612%" y="1413" width="2.2186%" height="15" fill="rgb(239,87,6)" fg:x="2224" fg:w="68"/><text x="72.8112%" y="1423.50">t..</text></g><g><title>common_interrupt (798 samples, 26.04%)</title><rect x="48.9396%" y="1445" width="26.0359%" height="15" fill="rgb(227,62,0)" fg:x="1500" fg:w="798"/><text x="49.1896%" y="1455.50">common_interrupt</text></g><g><title>irqentry_enter (6 samples, 0.20%)</title><rect x="74.7798%" y="1429" width="0.1958%" height="15" fill="rgb(211,226,4)" fg:x="2292" fg:w="6"/><text x="75.0298%" y="1439.50"></text></g><g><title>ct_irq_enter (3 samples, 0.10%)</title><rect x="74.8777%" y="1413" width="0.0979%" height="15" fill="rgb(253,38,52)" fg:x="2295" fg:w="3"/><text x="75.1277%" y="1423.50"></text></g><g><title>ct_nmi_enter (3 samples, 0.10%)</title><rect x="74.8777%" y="1397" width="0.0979%" height="15" fill="rgb(229,126,40)" fg:x="2295" fg:w="3"/><text x="75.1277%" y="1407.50"></text></g><g><title>asm_common_interrupt (799 samples, 26.07%)</title><rect x="48.9396%" y="1461" width="26.0685%" height="15" fill="rgb(229,165,44)" fg:x="1500" fg:w="799"/><text x="49.1896%" y="1471.50">asm_common_interrupt</text></g><g><title>irqentry_enter (1 samples, 0.03%)</title><rect x="74.9755%" y="1445" width="0.0326%" height="15" fill="rgb(247,95,47)" fg:x="2298" fg:w="1"/><text x="75.2255%" y="1455.50"></text></g><g><title>tick_sched_do_timer (1 samples, 0.03%)</title><rect x="75.0734%" y="1365" width="0.0326%" height="15" fill="rgb(216,140,30)" fg:x="2301" fg:w="1"/><text x="75.3234%" y="1375.50"></text></g><g><title>__hrtimer_run_queues (4 samples, 0.13%)</title><rect x="75.0408%" y="1397" width="0.1305%" height="15" fill="rgb(246,214,8)" fg:x="2300" fg:w="4"/><text x="75.2908%" y="1407.50"></text></g><g><title>tick_sched_timer (4 samples, 0.13%)</title><rect x="75.0408%" y="1381" width="0.1305%" height="15" fill="rgb(227,224,15)" fg:x="2300" fg:w="4"/><text x="75.2908%" y="1391.50"></text></g><g><title>tick_sched_handle (2 samples, 0.07%)</title><rect x="75.1060%" y="1365" width="0.0653%" height="15" fill="rgb(233,175,4)" fg:x="2302" fg:w="2"/><text x="75.3560%" y="1375.50"></text></g><g><title>update_process_times (2 samples, 0.07%)</title><rect x="75.1060%" y="1349" width="0.0653%" height="15" fill="rgb(221,66,45)" fg:x="2302" fg:w="2"/><text x="75.3560%" y="1359.50"></text></g><g><title>scheduler_tick (2 samples, 0.07%)</title><rect x="75.1060%" y="1333" width="0.0653%" height="15" fill="rgb(221,178,18)" fg:x="2302" fg:w="2"/><text x="75.3560%" y="1343.50"></text></g><g><title>perf_event_task_tick (2 samples, 0.07%)</title><rect x="75.1060%" y="1317" width="0.0653%" height="15" fill="rgb(213,81,29)" fg:x="2302" fg:w="2"/><text x="75.3560%" y="1327.50"></text></g><g><title>perf_adjust_freq_unthr_context (2 samples, 0.07%)</title><rect x="75.1060%" y="1301" width="0.0653%" height="15" fill="rgb(220,89,49)" fg:x="2302" fg:w="2"/><text x="75.3560%" y="1311.50"></text></g><g><title>x86_pmu_enable (1 samples, 0.03%)</title><rect x="75.1387%" y="1285" width="0.0326%" height="15" fill="rgb(227,60,33)" fg:x="2303" fg:w="1"/><text x="75.3887%" y="1295.50"></text></g><g><title>amd_pmu_enable_all (1 samples, 0.03%)</title><rect x="75.1387%" y="1269" width="0.0326%" height="15" fill="rgb(205,113,12)" fg:x="2303" fg:w="1"/><text x="75.3887%" y="1279.50"></text></g><g><title>srso_safe_ret (1 samples, 0.03%)</title><rect x="75.1387%" y="1253" width="0.0326%" height="15" fill="rgb(211,32,1)" fg:x="2303" fg:w="1"/><text x="75.3887%" y="1263.50"></text></g><g><title>__sysvec_apic_timer_interrupt (5 samples, 0.16%)</title><rect x="75.0408%" y="1429" width="0.1631%" height="15" fill="rgb(246,2,12)" fg:x="2300" fg:w="5"/><text x="75.2908%" y="1439.50"></text></g><g><title>hrtimer_interrupt (5 samples, 0.16%)</title><rect x="75.0408%" y="1413" width="0.1631%" height="15" fill="rgb(243,37,27)" fg:x="2300" fg:w="5"/><text x="75.2908%" y="1423.50"></text></g><g><title>tick_program_event (1 samples, 0.03%)</title><rect x="75.1713%" y="1397" width="0.0326%" height="15" fill="rgb(248,211,31)" fg:x="2304" fg:w="1"/><text x="75.4213%" y="1407.50"></text></g><g><title>clockevents_program_event (1 samples, 0.03%)</title><rect x="75.1713%" y="1381" width="0.0326%" height="15" fill="rgb(242,146,47)" fg:x="2304" fg:w="1"/><text x="75.4213%" y="1391.50"></text></g><g><title>ktime_get (1 samples, 0.03%)</title><rect x="75.1713%" y="1365" width="0.0326%" height="15" fill="rgb(206,70,20)" fg:x="2304" fg:w="1"/><text x="75.4213%" y="1375.50"></text></g><g><title>tick_check_oneshot_broadcast_this_cpu (2 samples, 0.07%)</title><rect x="75.2039%" y="1413" width="0.0653%" height="15" fill="rgb(215,10,51)" fg:x="2305" fg:w="2"/><text x="75.4539%" y="1423.50"></text></g><g><title>read_tsc (4 samples, 0.13%)</title><rect x="75.3670%" y="1397" width="0.1305%" height="15" fill="rgb(243,178,53)" fg:x="2310" fg:w="4"/><text x="75.6170%" y="1407.50"></text></g><g><title>tick_irq_enter (11 samples, 0.36%)</title><rect x="75.2692%" y="1413" width="0.3589%" height="15" fill="rgb(233,221,20)" fg:x="2307" fg:w="11"/><text x="75.5192%" y="1423.50"></text></g><g><title>tick_nohz_stop_idle (4 samples, 0.13%)</title><rect x="75.4976%" y="1397" width="0.1305%" height="15" fill="rgb(218,95,35)" fg:x="2314" fg:w="4"/><text x="75.7476%" y="1407.50"></text></g><g><title>nr_iowait_cpu (2 samples, 0.07%)</title><rect x="75.5628%" y="1381" width="0.0653%" height="15" fill="rgb(229,13,5)" fg:x="2316" fg:w="2"/><text x="75.8128%" y="1391.50"></text></g><g><title>irq_enter_rcu (15 samples, 0.49%)</title><rect x="75.2039%" y="1429" width="0.4894%" height="15" fill="rgb(252,164,30)" fg:x="2305" fg:w="15"/><text x="75.4539%" y="1439.50"></text></g><g><title>tick_nohz_stop_idle (2 samples, 0.07%)</title><rect x="75.6281%" y="1413" width="0.0653%" height="15" fill="rgb(232,68,36)" fg:x="2318" fg:w="2"/><text x="75.8781%" y="1423.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.03%)</title><rect x="75.6933%" y="1381" width="0.0326%" height="15" fill="rgb(219,59,54)" fg:x="2320" fg:w="1"/><text x="75.9433%" y="1391.50"></text></g><g><title>common_interrupt (1 samples, 0.03%)</title><rect x="75.6933%" y="1365" width="0.0326%" height="15" fill="rgb(250,92,33)" fg:x="2320" fg:w="1"/><text x="75.9433%" y="1375.50"></text></g><g><title>__common_interrupt (1 samples, 0.03%)</title><rect x="75.6933%" y="1349" width="0.0326%" height="15" fill="rgb(229,162,54)" fg:x="2320" fg:w="1"/><text x="75.9433%" y="1359.50"></text></g><g><title>handle_edge_irq (1 samples, 0.03%)</title><rect x="75.6933%" y="1333" width="0.0326%" height="15" fill="rgb(244,114,52)" fg:x="2320" fg:w="1"/><text x="75.9433%" y="1343.50"></text></g><g><title>handle_irq_event (1 samples, 0.03%)</title><rect x="75.6933%" y="1317" width="0.0326%" height="15" fill="rgb(212,211,43)" fg:x="2320" fg:w="1"/><text x="75.9433%" y="1327.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.03%)</title><rect x="75.6933%" y="1301" width="0.0326%" height="15" fill="rgb(226,147,8)" fg:x="2320" fg:w="1"/><text x="75.9433%" y="1311.50"></text></g><g><title>ahci_multi_irqs_intr_hard (1 samples, 0.03%)</title><rect x="75.6933%" y="1285" width="0.0326%" height="15" fill="rgb(226,23,13)" fg:x="2320" fg:w="1"/><text x="75.9433%" y="1295.50"></text></g><g><title>ahci_handle_port_interrupt (1 samples, 0.03%)</title><rect x="75.6933%" y="1269" width="0.0326%" height="15" fill="rgb(240,63,4)" fg:x="2320" fg:w="1"/><text x="75.9433%" y="1279.50"></text></g><g><title>ahci_qc_complete (1 samples, 0.03%)</title><rect x="75.6933%" y="1253" width="0.0326%" height="15" fill="rgb(221,1,32)" fg:x="2320" fg:w="1"/><text x="75.9433%" y="1263.50"></text></g><g><title>ata_qc_complete_multiple (1 samples, 0.03%)</title><rect x="75.6933%" y="1237" width="0.0326%" height="15" fill="rgb(242,117,10)" fg:x="2320" fg:w="1"/><text x="75.9433%" y="1247.50"></text></g><g><title>ata_qc_complete (1 samples, 0.03%)</title><rect x="75.6933%" y="1221" width="0.0326%" height="15" fill="rgb(249,172,44)" fg:x="2320" fg:w="1"/><text x="75.9433%" y="1231.50"></text></g><g><title>__ata_qc_complete (1 samples, 0.03%)</title><rect x="75.6933%" y="1205" width="0.0326%" height="15" fill="rgb(244,46,45)" fg:x="2320" fg:w="1"/><text x="75.9433%" y="1215.50"></text></g><g><title>ata_scsi_qc_complete (1 samples, 0.03%)</title><rect x="75.6933%" y="1189" width="0.0326%" height="15" fill="rgb(206,43,17)" fg:x="2320" fg:w="1"/><text x="75.9433%" y="1199.50"></text></g><g><title>scsi_done (1 samples, 0.03%)</title><rect x="75.6933%" y="1173" width="0.0326%" height="15" fill="rgb(239,218,39)" fg:x="2320" fg:w="1"/><text x="75.9433%" y="1183.50"></text></g><g><title>scsi_done_internal (1 samples, 0.03%)</title><rect x="75.6933%" y="1157" width="0.0326%" height="15" fill="rgb(208,169,54)" fg:x="2320" fg:w="1"/><text x="75.9433%" y="1167.50"></text></g><g><title>blk_mq_complete_request (1 samples, 0.03%)</title><rect x="75.6933%" y="1141" width="0.0326%" height="15" fill="rgb(247,25,42)" fg:x="2320" fg:w="1"/><text x="75.9433%" y="1151.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="75.7259%" y="1349" width="0.0326%" height="15" fill="rgb(226,23,31)" fg:x="2321" fg:w="1"/><text x="75.9759%" y="1359.50"></text></g><g><title>rcu_core_si (2 samples, 0.07%)</title><rect x="75.7259%" y="1381" width="0.0653%" height="15" fill="rgb(247,16,28)" fg:x="2321" fg:w="2"/><text x="75.9759%" y="1391.50"></text></g><g><title>rcu_core (2 samples, 0.07%)</title><rect x="75.7259%" y="1365" width="0.0653%" height="15" fill="rgb(231,147,38)" fg:x="2321" fg:w="2"/><text x="75.9759%" y="1375.50"></text></g><g><title>vm_area_free_rcu_cb (1 samples, 0.03%)</title><rect x="75.7586%" y="1349" width="0.0326%" height="15" fill="rgb(253,81,48)" fg:x="2322" fg:w="1"/><text x="76.0086%" y="1359.50"></text></g><g><title>kmem_cache_free (1 samples, 0.03%)</title><rect x="75.7586%" y="1333" width="0.0326%" height="15" fill="rgb(249,222,43)" fg:x="2322" fg:w="1"/><text x="76.0086%" y="1343.50"></text></g><g><title>obj_cgroup_uncharge (1 samples, 0.03%)</title><rect x="75.7586%" y="1317" width="0.0326%" height="15" fill="rgb(221,3,27)" fg:x="2322" fg:w="1"/><text x="76.0086%" y="1327.50"></text></g><g><title>refill_obj_stock (1 samples, 0.03%)</title><rect x="75.7586%" y="1301" width="0.0326%" height="15" fill="rgb(228,180,5)" fg:x="2322" fg:w="1"/><text x="76.0086%" y="1311.50"></text></g><g><title>obj_cgroup_uncharge_pages (1 samples, 0.03%)</title><rect x="75.7586%" y="1285" width="0.0326%" height="15" fill="rgb(227,131,42)" fg:x="2322" fg:w="1"/><text x="76.0086%" y="1295.50"></text></g><g><title>memcg_account_kmem (1 samples, 0.03%)</title><rect x="75.7586%" y="1269" width="0.0326%" height="15" fill="rgb(212,3,39)" fg:x="2322" fg:w="1"/><text x="76.0086%" y="1279.50"></text></g><g><title>mod_memcg_state (1 samples, 0.03%)</title><rect x="75.7586%" y="1253" width="0.0326%" height="15" fill="rgb(226,45,5)" fg:x="2322" fg:w="1"/><text x="76.0086%" y="1263.50"></text></g><g><title>__mod_memcg_state (1 samples, 0.03%)</title><rect x="75.7586%" y="1237" width="0.0326%" height="15" fill="rgb(215,167,45)" fg:x="2322" fg:w="1"/><text x="76.0086%" y="1247.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.03%)</title><rect x="75.7586%" y="1221" width="0.0326%" height="15" fill="rgb(250,218,53)" fg:x="2322" fg:w="1"/><text x="76.0086%" y="1231.50"></text></g><g><title>rebalance_domains (4 samples, 0.13%)</title><rect x="75.7912%" y="1365" width="0.1305%" height="15" fill="rgb(207,140,0)" fg:x="2323" fg:w="4"/><text x="76.0412%" y="1375.50"></text></g><g><title>load_balance (4 samples, 0.13%)</title><rect x="75.7912%" y="1349" width="0.1305%" height="15" fill="rgb(238,133,51)" fg:x="2323" fg:w="4"/><text x="76.0412%" y="1359.50"></text></g><g><title>find_busiest_group (4 samples, 0.13%)</title><rect x="75.7912%" y="1333" width="0.1305%" height="15" fill="rgb(218,203,53)" fg:x="2323" fg:w="4"/><text x="76.0412%" y="1343.50"></text></g><g><title>update_sd_lb_stats.constprop.0 (4 samples, 0.13%)</title><rect x="75.7912%" y="1317" width="0.1305%" height="15" fill="rgb(226,184,25)" fg:x="2323" fg:w="4"/><text x="76.0412%" y="1327.50"></text></g><g><title>update_group_capacity (1 samples, 0.03%)</title><rect x="75.8891%" y="1301" width="0.0326%" height="15" fill="rgb(231,121,21)" fg:x="2326" fg:w="1"/><text x="76.1391%" y="1311.50"></text></g><g><title>run_rebalance_domains (7 samples, 0.23%)</title><rect x="75.7912%" y="1381" width="0.2284%" height="15" fill="rgb(251,14,34)" fg:x="2323" fg:w="7"/><text x="76.0412%" y="1391.50"></text></g><g><title>update_blocked_averages (3 samples, 0.10%)</title><rect x="75.9217%" y="1365" width="0.0979%" height="15" fill="rgb(249,193,11)" fg:x="2327" fg:w="3"/><text x="76.1717%" y="1375.50"></text></g><g><title>update_rq_clock (1 samples, 0.03%)</title><rect x="75.9869%" y="1349" width="0.0326%" height="15" fill="rgb(220,172,37)" fg:x="2329" fg:w="1"/><text x="76.2369%" y="1359.50"></text></g><g><title>_find_next_bit (1 samples, 0.03%)</title><rect x="76.0196%" y="1349" width="0.0326%" height="15" fill="rgb(231,229,43)" fg:x="2330" fg:w="1"/><text x="76.2696%" y="1359.50"></text></g><g><title>fq_flush_timeout (2 samples, 0.07%)</title><rect x="76.0522%" y="1333" width="0.0653%" height="15" fill="rgb(250,161,5)" fg:x="2331" fg:w="2"/><text x="76.3022%" y="1343.50"></text></g><g><title>fq_ring_free (2 samples, 0.07%)</title><rect x="76.0522%" y="1317" width="0.0653%" height="15" fill="rgb(218,225,18)" fg:x="2331" fg:w="2"/><text x="76.3022%" y="1327.50"></text></g><g><title>free_unref_page_list (1 samples, 0.03%)</title><rect x="76.0848%" y="1301" width="0.0326%" height="15" fill="rgb(245,45,42)" fg:x="2332" fg:w="1"/><text x="76.3348%" y="1311.50"></text></g><g><title>__do_softirq (14 samples, 0.46%)</title><rect x="75.6933%" y="1397" width="0.4568%" height="15" fill="rgb(211,115,1)" fg:x="2320" fg:w="14"/><text x="75.9433%" y="1407.50"></text></g><g><title>run_timer_softirq (4 samples, 0.13%)</title><rect x="76.0196%" y="1381" width="0.1305%" height="15" fill="rgb(248,133,52)" fg:x="2330" fg:w="4"/><text x="76.2696%" y="1391.50"></text></g><g><title>__run_timers.part.0 (4 samples, 0.13%)</title><rect x="76.0196%" y="1365" width="0.1305%" height="15" fill="rgb(238,100,21)" fg:x="2330" fg:w="4"/><text x="76.2696%" y="1375.50"></text></g><g><title>call_timer_fn (3 samples, 0.10%)</title><rect x="76.0522%" y="1349" width="0.0979%" height="15" fill="rgb(247,144,11)" fg:x="2331" fg:w="3"/><text x="76.3022%" y="1359.50"></text></g><g><title>process_timeout (1 samples, 0.03%)</title><rect x="76.1175%" y="1333" width="0.0326%" height="15" fill="rgb(206,164,16)" fg:x="2333" fg:w="1"/><text x="76.3675%" y="1343.50"></text></g><g><title>wake_up_process (1 samples, 0.03%)</title><rect x="76.1175%" y="1317" width="0.0326%" height="15" fill="rgb(222,34,3)" fg:x="2333" fg:w="1"/><text x="76.3675%" y="1327.50"></text></g><g><title>try_to_wake_up (1 samples, 0.03%)</title><rect x="76.1175%" y="1301" width="0.0326%" height="15" fill="rgb(248,82,4)" fg:x="2333" fg:w="1"/><text x="76.3675%" y="1311.50"></text></g><g><title>update_rq_clock (1 samples, 0.03%)</title><rect x="76.1175%" y="1285" width="0.0326%" height="15" fill="rgb(228,81,46)" fg:x="2333" fg:w="1"/><text x="76.3675%" y="1295.50"></text></g><g><title>update_irq_load_avg (1 samples, 0.03%)</title><rect x="76.1175%" y="1269" width="0.0326%" height="15" fill="rgb(227,67,47)" fg:x="2333" fg:w="1"/><text x="76.3675%" y="1279.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (36 samples, 1.17%)</title><rect x="75.0082%" y="1461" width="1.1746%" height="15" fill="rgb(215,93,53)" fg:x="2299" fg:w="36"/><text x="75.2582%" y="1471.50"></text></g><g><title>sysvec_apic_timer_interrupt (36 samples, 1.17%)</title><rect x="75.0082%" y="1445" width="1.1746%" height="15" fill="rgb(248,194,39)" fg:x="2299" fg:w="36"/><text x="75.2582%" y="1455.50"></text></g><g><title>irq_exit_rcu (15 samples, 0.49%)</title><rect x="75.6933%" y="1429" width="0.4894%" height="15" fill="rgb(215,5,19)" fg:x="2320" fg:w="15"/><text x="75.9433%" y="1439.50"></text></g><g><title>__irq_exit_rcu (15 samples, 0.49%)</title><rect x="75.6933%" y="1413" width="0.4894%" height="15" fill="rgb(226,215,51)" fg:x="2320" fg:w="15"/><text x="75.9433%" y="1423.50"></text></g><g><title>sched_core_idle_cpu (1 samples, 0.03%)</title><rect x="76.1501%" y="1397" width="0.0326%" height="15" fill="rgb(225,56,26)" fg:x="2334" fg:w="1"/><text x="76.4001%" y="1407.50"></text></g><g><title>asm_sysvec_call_function_single (1 samples, 0.03%)</title><rect x="76.1827%" y="1461" width="0.0326%" height="15" fill="rgb(222,75,29)" fg:x="2335" fg:w="1"/><text x="76.4327%" y="1471.50"></text></g><g><title>sysvec_call_function_single (1 samples, 0.03%)</title><rect x="76.1827%" y="1445" width="0.0326%" height="15" fill="rgb(236,139,6)" fg:x="2335" fg:w="1"/><text x="76.4327%" y="1455.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.03%)</title><rect x="76.1827%" y="1429" width="0.0326%" height="15" fill="rgb(223,137,36)" fg:x="2335" fg:w="1"/><text x="76.4327%" y="1439.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.03%)</title><rect x="76.1827%" y="1413" width="0.0326%" height="15" fill="rgb(226,99,2)" fg:x="2335" fg:w="1"/><text x="76.4327%" y="1423.50"></text></g><g><title>__do_softirq (1 samples, 0.03%)</title><rect x="76.1827%" y="1397" width="0.0326%" height="15" fill="rgb(206,133,23)" fg:x="2335" fg:w="1"/><text x="76.4327%" y="1407.50"></text></g><g><title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="76.1827%" y="1381" width="0.0326%" height="15" fill="rgb(243,173,15)" fg:x="2335" fg:w="1"/><text x="76.4327%" y="1391.50"></text></g><g><title>_nohz_idle_balance.isra.0 (1 samples, 0.03%)</title><rect x="76.1827%" y="1365" width="0.0326%" height="15" fill="rgb(228,69,28)" fg:x="2335" fg:w="1"/><text x="76.4327%" y="1375.50"></text></g><g><title>rebalance_domains (1 samples, 0.03%)</title><rect x="76.1827%" y="1349" width="0.0326%" height="15" fill="rgb(212,51,22)" fg:x="2335" fg:w="1"/><text x="76.4327%" y="1359.50"></text></g><g><title>load_balance (1 samples, 0.03%)</title><rect x="76.1827%" y="1333" width="0.0326%" height="15" fill="rgb(227,113,0)" fg:x="2335" fg:w="1"/><text x="76.4327%" y="1343.50"></text></g><g><title>find_busiest_group (1 samples, 0.03%)</title><rect x="76.1827%" y="1317" width="0.0326%" height="15" fill="rgb(252,84,27)" fg:x="2335" fg:w="1"/><text x="76.4327%" y="1327.50"></text></g><g><title>update_sd_lb_stats.constprop.0 (1 samples, 0.03%)</title><rect x="76.1827%" y="1301" width="0.0326%" height="15" fill="rgb(223,145,39)" fg:x="2335" fg:w="1"/><text x="76.4327%" y="1311.50"></text></g><g><title>ct_kernel_enter.constprop.0 (2 samples, 0.07%)</title><rect x="76.2806%" y="1445" width="0.0653%" height="15" fill="rgb(239,219,30)" fg:x="2338" fg:w="2"/><text x="76.5306%" y="1455.50"></text></g><g><title>ct_idle_exit (23 samples, 0.75%)</title><rect x="76.2153%" y="1461" width="0.7504%" height="15" fill="rgb(224,196,39)" fg:x="2336" fg:w="23"/><text x="76.4653%" y="1471.50"></text></g><g><title>ct_kernel_enter_state (19 samples, 0.62%)</title><rect x="76.3458%" y="1445" width="0.6199%" height="15" fill="rgb(205,35,43)" fg:x="2340" fg:w="19"/><text x="76.5958%" y="1455.50"></text></g><g><title>ct_kernel_enter.constprop.0 (27 samples, 0.88%)</title><rect x="76.9657%" y="1461" width="0.8809%" height="15" fill="rgb(228,201,21)" fg:x="2359" fg:w="27"/><text x="77.2157%" y="1471.50"></text></g><g><title>local_clock_noinstr (13 samples, 0.42%)</title><rect x="77.8467%" y="1461" width="0.4241%" height="15" fill="rgb(237,118,16)" fg:x="2386" fg:w="13"/><text x="78.0967%" y="1471.50"></text></g><g><title>sched_clock_noinstr (10 samples, 0.33%)</title><rect x="77.9445%" y="1445" width="0.3263%" height="15" fill="rgb(241,17,19)" fg:x="2389" fg:w="10"/><text x="78.1945%" y="1455.50"></text></g><g><title>native_sched_clock (10 samples, 0.33%)</title><rect x="77.9445%" y="1429" width="0.3263%" height="15" fill="rgb(214,10,25)" fg:x="2389" fg:w="10"/><text x="78.1945%" y="1439.50"></text></g><g><title>poll_idle (4 samples, 0.13%)</title><rect x="78.2708%" y="1461" width="0.1305%" height="15" fill="rgb(238,37,29)" fg:x="2399" fg:w="4"/><text x="78.5208%" y="1471.50"></text></g><g><title>sched_clock_noinstr (1 samples, 0.03%)</title><rect x="78.4013%" y="1461" width="0.0326%" height="15" fill="rgb(253,83,25)" fg:x="2403" fg:w="1"/><text x="78.6513%" y="1471.50"></text></g><g><title>cpuidle_enter_state (1,250 samples, 40.78%)</title><rect x="37.6835%" y="1477" width="40.7830%" height="15" fill="rgb(234,192,12)" fg:x="1155" fg:w="1250"/><text x="37.9335%" y="1487.50">cpuidle_enter_state</text></g><g><title>srso_safe_ret (1 samples, 0.03%)</title><rect x="78.4339%" y="1461" width="0.0326%" height="15" fill="rgb(241,216,45)" fg:x="2404" fg:w="1"/><text x="78.6839%" y="1471.50"></text></g><g><title>ct_idle_exit (2 samples, 0.07%)</title><rect x="78.4666%" y="1477" width="0.0653%" height="15" fill="rgb(242,22,33)" fg:x="2405" fg:w="2"/><text x="78.7166%" y="1487.50"></text></g><g><title>error_entry (4 samples, 0.13%)</title><rect x="78.5318%" y="1477" width="0.1305%" height="15" fill="rgb(231,105,49)" fg:x="2407" fg:w="4"/><text x="78.7818%" y="1487.50"></text></g><g><title>irq_entries_start (4 samples, 0.13%)</title><rect x="78.6623%" y="1477" width="0.1305%" height="15" fill="rgb(218,204,15)" fg:x="2411" fg:w="4"/><text x="78.9123%" y="1487.50"></text></g><g><title>sched_clock_idle_wakeup_event (4 samples, 0.13%)</title><rect x="78.7928%" y="1477" width="0.1305%" height="15" fill="rgb(235,138,41)" fg:x="2415" fg:w="4"/><text x="79.0428%" y="1487.50"></text></g><g><title>sched_idle_set_state (2 samples, 0.07%)</title><rect x="78.9233%" y="1477" width="0.0653%" height="15" fill="rgb(246,0,9)" fg:x="2419" fg:w="2"/><text x="79.1733%" y="1487.50"></text></g><g><title>srso_safe_ret (5 samples, 0.16%)</title><rect x="78.9886%" y="1477" width="0.1631%" height="15" fill="rgb(210,74,4)" fg:x="2421" fg:w="5"/><text x="79.2386%" y="1487.50"></text></g><g><title>sysvec_apic_timer_interrupt (3 samples, 0.10%)</title><rect x="79.1517%" y="1477" width="0.0979%" height="15" fill="rgb(250,60,41)" fg:x="2426" fg:w="3"/><text x="79.4017%" y="1487.50"></text></g><g><title>call_cpuidle (1,325 samples, 43.23%)</title><rect x="36.0522%" y="1509" width="43.2300%" height="15" fill="rgb(220,115,12)" fg:x="1105" fg:w="1325"/><text x="36.3022%" y="1519.50">call_cpuidle</text></g><g><title>cpuidle_enter (1,325 samples, 43.23%)</title><rect x="36.0522%" y="1493" width="43.2300%" height="15" fill="rgb(237,100,13)" fg:x="1105" fg:w="1325"/><text x="36.3022%" y="1503.50">cpuidle_enter</text></g><g><title>sysvec_call_function_single (1 samples, 0.03%)</title><rect x="79.2496%" y="1477" width="0.0326%" height="15" fill="rgb(213,55,26)" fg:x="2429" fg:w="1"/><text x="79.4996%" y="1487.50"></text></g><g><title>cpuidle_governor_latency_req (1 samples, 0.03%)</title><rect x="79.2822%" y="1493" width="0.0326%" height="15" fill="rgb(216,17,4)" fg:x="2430" fg:w="1"/><text x="79.5322%" y="1503.50"></text></g><g><title>cpuidle_governor_latency_req (1 samples, 0.03%)</title><rect x="79.4780%" y="1477" width="0.0326%" height="15" fill="rgb(220,153,47)" fg:x="2436" fg:w="1"/><text x="79.7280%" y="1487.50"></text></g><g><title>hrtimer_next_event_without (1 samples, 0.03%)</title><rect x="79.5106%" y="1477" width="0.0326%" height="15" fill="rgb(215,131,9)" fg:x="2437" fg:w="1"/><text x="79.7606%" y="1487.50"></text></g><g><title>nr_iowait_cpu (1 samples, 0.03%)</title><rect x="79.5432%" y="1477" width="0.0326%" height="15" fill="rgb(233,46,42)" fg:x="2438" fg:w="1"/><text x="79.7932%" y="1487.50"></text></g><g><title>__hrtimer_next_event_base (1 samples, 0.03%)</title><rect x="79.6411%" y="1445" width="0.0326%" height="15" fill="rgb(226,86,7)" fg:x="2441" fg:w="1"/><text x="79.8911%" y="1455.50"></text></g><g><title>hrtimer_next_event_without (3 samples, 0.10%)</title><rect x="79.6085%" y="1461" width="0.0979%" height="15" fill="rgb(239,226,21)" fg:x="2440" fg:w="3"/><text x="79.8585%" y="1471.50"></text></g><g><title>timerqueue_iterate_next (1 samples, 0.03%)</title><rect x="79.6737%" y="1445" width="0.0326%" height="15" fill="rgb(244,137,22)" fg:x="2442" fg:w="1"/><text x="79.9237%" y="1455.50"></text></g><g><title>get_next_timer_interrupt (2 samples, 0.07%)</title><rect x="79.7064%" y="1445" width="0.0653%" height="15" fill="rgb(211,139,35)" fg:x="2443" fg:w="2"/><text x="79.9564%" y="1455.50"></text></g><g><title>tick_nohz_next_event (3 samples, 0.10%)</title><rect x="79.7064%" y="1461" width="0.0979%" height="15" fill="rgb(214,62,50)" fg:x="2443" fg:w="3"/><text x="79.9564%" y="1471.50"></text></g><g><title>hrtimer_get_next_event (1 samples, 0.03%)</title><rect x="79.7716%" y="1445" width="0.0326%" height="15" fill="rgb(212,113,44)" fg:x="2445" fg:w="1"/><text x="80.0216%" y="1455.50"></text></g><g><title>menu_select (16 samples, 0.52%)</title><rect x="79.3148%" y="1493" width="0.5220%" height="15" fill="rgb(226,150,43)" fg:x="2431" fg:w="16"/><text x="79.5648%" y="1503.50"></text></g><g><title>tick_nohz_get_sleep_length (8 samples, 0.26%)</title><rect x="79.5759%" y="1477" width="0.2610%" height="15" fill="rgb(250,71,37)" fg:x="2439" fg:w="8"/><text x="79.8259%" y="1487.50"></text></g><g><title>timekeeping_max_deferment (1 samples, 0.03%)</title><rect x="79.8042%" y="1461" width="0.0326%" height="15" fill="rgb(219,76,19)" fg:x="2446" fg:w="1"/><text x="80.0542%" y="1471.50"></text></g><g><title>cpuidle_select (18 samples, 0.59%)</title><rect x="79.2822%" y="1509" width="0.5873%" height="15" fill="rgb(250,39,11)" fg:x="2430" fg:w="18"/><text x="79.5322%" y="1519.50"></text></g><g><title>tick_nohz_tick_stopped (1 samples, 0.03%)</title><rect x="79.8369%" y="1493" width="0.0326%" height="15" fill="rgb(230,64,31)" fg:x="2447" fg:w="1"/><text x="80.0869%" y="1503.50"></text></g><g><title>flush_smp_call_function_queue (2 samples, 0.07%)</title><rect x="79.8695%" y="1509" width="0.0653%" height="15" fill="rgb(208,222,23)" fg:x="2448" fg:w="2"/><text x="80.1195%" y="1519.50"></text></g><g><title>__flush_smp_call_function_queue (2 samples, 0.07%)</title><rect x="79.8695%" y="1493" width="0.0653%" height="15" fill="rgb(227,125,18)" fg:x="2448" fg:w="2"/><text x="80.1195%" y="1503.50"></text></g><g><title>sched_ttwu_pending (2 samples, 0.07%)</title><rect x="79.8695%" y="1477" width="0.0653%" height="15" fill="rgb(234,210,9)" fg:x="2448" fg:w="2"/><text x="80.1195%" y="1487.50"></text></g><g><title>_raw_spin_rq_lock_irqsave (1 samples, 0.03%)</title><rect x="79.9021%" y="1461" width="0.0326%" height="15" fill="rgb(217,127,24)" fg:x="2449" fg:w="1"/><text x="80.1521%" y="1471.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="79.9021%" y="1445" width="0.0326%" height="15" fill="rgb(239,141,48)" fg:x="2449" fg:w="1"/><text x="80.1521%" y="1455.50"></text></g><g><title>ktime_get (1 samples, 0.03%)</title><rect x="79.9347%" y="1509" width="0.0326%" height="15" fill="rgb(227,109,8)" fg:x="2450" fg:w="1"/><text x="80.1847%" y="1519.50"></text></g><g><title>menu_select (5 samples, 0.16%)</title><rect x="79.9674%" y="1509" width="0.1631%" height="15" fill="rgb(235,184,23)" fg:x="2451" fg:w="5"/><text x="80.2174%" y="1519.50"></text></g><g><title>__switch_to (1 samples, 0.03%)</title><rect x="80.1631%" y="1477" width="0.0326%" height="15" fill="rgb(227,226,48)" fg:x="2457" fg:w="1"/><text x="80.4131%" y="1487.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.03%)</title><rect x="80.1958%" y="1477" width="0.0326%" height="15" fill="rgb(206,150,11)" fg:x="2458" fg:w="1"/><text x="80.4458%" y="1487.50"></text></g><g><title>set_next_entity (1 samples, 0.03%)</title><rect x="80.1958%" y="1461" width="0.0326%" height="15" fill="rgb(254,2,33)" fg:x="2458" fg:w="1"/><text x="80.4458%" y="1471.50"></text></g><g><title>psi_task_switch (2 samples, 0.07%)</title><rect x="80.2284%" y="1477" width="0.0653%" height="15" fill="rgb(243,160,20)" fg:x="2459" fg:w="2"/><text x="80.4784%" y="1487.50"></text></g><g><title>psi_group_change (2 samples, 0.07%)</title><rect x="80.2284%" y="1461" width="0.0653%" height="15" fill="rgb(218,208,30)" fg:x="2459" fg:w="2"/><text x="80.4784%" y="1471.50"></text></g><g><title>rcu_note_context_switch (1 samples, 0.03%)</title><rect x="80.2936%" y="1477" width="0.0326%" height="15" fill="rgb(224,120,49)" fg:x="2461" fg:w="1"/><text x="80.5436%" y="1487.50"></text></g><g><title>schedule_idle (7 samples, 0.23%)</title><rect x="80.1305%" y="1509" width="0.2284%" height="15" fill="rgb(246,12,2)" fg:x="2456" fg:w="7"/><text x="80.3805%" y="1519.50"></text></g><g><title>__schedule (7 samples, 0.23%)</title><rect x="80.1305%" y="1493" width="0.2284%" height="15" fill="rgb(236,117,3)" fg:x="2456" fg:w="7"/><text x="80.3805%" y="1503.50"></text></g><g><title>switch_mm_irqs_off (1 samples, 0.03%)</title><rect x="80.3263%" y="1477" width="0.0326%" height="15" fill="rgb(216,128,52)" fg:x="2462" fg:w="1"/><text x="80.5763%" y="1487.50"></text></g><g><title>srso_safe_ret (1 samples, 0.03%)</title><rect x="80.3589%" y="1509" width="0.0326%" height="15" fill="rgb(246,145,19)" fg:x="2463" fg:w="1"/><text x="80.6089%" y="1519.50"></text></g><g><title>ktime_get (1 samples, 0.03%)</title><rect x="80.3915%" y="1493" width="0.0326%" height="15" fill="rgb(222,11,46)" fg:x="2464" fg:w="1"/><text x="80.6415%" y="1503.50"></text></g><g><title>tick_nohz_idle_exit (2 samples, 0.07%)</title><rect x="80.3915%" y="1509" width="0.0653%" height="15" fill="rgb(245,82,36)" fg:x="2464" fg:w="2"/><text x="80.6415%" y="1519.50"></text></g><g><title>tick_nohz_stop_idle (1 samples, 0.03%)</title><rect x="80.4241%" y="1493" width="0.0326%" height="15" fill="rgb(250,73,51)" fg:x="2465" fg:w="1"/><text x="80.6741%" y="1503.50"></text></g><g><title>nr_iowait_cpu (1 samples, 0.03%)</title><rect x="80.4241%" y="1477" width="0.0326%" height="15" fill="rgb(221,189,23)" fg:x="2465" fg:w="1"/><text x="80.6741%" y="1487.50"></text></g><g><title>hrtimer_update_next_event (1 samples, 0.03%)</title><rect x="80.4568%" y="1477" width="0.0326%" height="15" fill="rgb(210,33,7)" fg:x="2466" fg:w="1"/><text x="80.7068%" y="1487.50"></text></g><g><title>tick_program_event (1 samples, 0.03%)</title><rect x="80.4894%" y="1477" width="0.0326%" height="15" fill="rgb(210,107,22)" fg:x="2467" fg:w="1"/><text x="80.7394%" y="1487.50"></text></g><g><title>hrtimer_start_range_ns (3 samples, 0.10%)</title><rect x="80.4568%" y="1493" width="0.0979%" height="15" fill="rgb(222,116,37)" fg:x="2466" fg:w="3"/><text x="80.7068%" y="1503.50"></text></g><g><title>timerqueue_del (1 samples, 0.03%)</title><rect x="80.5220%" y="1477" width="0.0326%" height="15" fill="rgb(254,17,48)" fg:x="2468" fg:w="1"/><text x="80.7720%" y="1487.50"></text></g><g><title>need_update (1 samples, 0.03%)</title><rect x="80.5546%" y="1477" width="0.0326%" height="15" fill="rgb(224,36,32)" fg:x="2469" fg:w="1"/><text x="80.8046%" y="1487.50"></text></g><g><title>_find_next_bit (1 samples, 0.03%)</title><rect x="80.5546%" y="1461" width="0.0326%" height="15" fill="rgb(232,90,46)" fg:x="2469" fg:w="1"/><text x="80.8046%" y="1471.50"></text></g><g><title>do_idle (1,378 samples, 44.96%)</title><rect x="35.6607%" y="1525" width="44.9592%" height="15" fill="rgb(241,66,40)" fg:x="1093" fg:w="1378"/><text x="35.9107%" y="1535.50">do_idle</text></g><g><title>tick_nohz_idle_stop_tick (5 samples, 0.16%)</title><rect x="80.4568%" y="1509" width="0.1631%" height="15" fill="rgb(249,184,29)" fg:x="2466" fg:w="5"/><text x="80.7068%" y="1519.50"></text></g><g><title>quiet_vmstat (2 samples, 0.07%)</title><rect x="80.5546%" y="1493" width="0.0653%" height="15" fill="rgb(231,181,1)" fg:x="2469" fg:w="2"/><text x="80.8046%" y="1503.50"></text></g><g><title>srso_safe_ret (1 samples, 0.03%)</title><rect x="80.5873%" y="1477" width="0.0326%" height="15" fill="rgb(224,94,2)" fg:x="2470" fg:w="1"/><text x="80.8373%" y="1487.50"></text></g><g><title>flush_smp_call_function_queue (4 samples, 0.13%)</title><rect x="80.6199%" y="1525" width="0.1305%" height="15" fill="rgb(229,170,15)" fg:x="2471" fg:w="4"/><text x="80.8699%" y="1535.50"></text></g><g><title>tick_check_broadcast_expired (6 samples, 0.20%)</title><rect x="80.7504%" y="1525" width="0.1958%" height="15" fill="rgb(240,127,35)" fg:x="2475" fg:w="6"/><text x="81.0004%" y="1535.50"></text></g><g><title>start_secondary (1,402 samples, 45.74%)</title><rect x="35.2365%" y="1557" width="45.7423%" height="15" fill="rgb(248,196,34)" fg:x="1080" fg:w="1402"/><text x="35.4865%" y="1567.50">start_secondary</text></g><g><title>cpu_startup_entry (1,402 samples, 45.74%)</title><rect x="35.2365%" y="1541" width="45.7423%" height="15" fill="rgb(236,137,7)" fg:x="1080" fg:w="1402"/><text x="35.4865%" y="1551.50">cpu_startup_entry</text></g><g><title>tick_nohz_idle_retain_tick (1 samples, 0.03%)</title><rect x="80.9462%" y="1525" width="0.0326%" height="15" fill="rgb(235,127,16)" fg:x="2481" fg:w="1"/><text x="81.1962%" y="1535.50"></text></g><g><title>acpi_idle_enter (28 samples, 0.91%)</title><rect x="81.0440%" y="1397" width="0.9135%" height="15" fill="rgb(250,192,54)" fg:x="2484" fg:w="28"/><text x="81.2940%" y="1407.50"></text></g><g><title>acpi_idle_do_entry (28 samples, 0.91%)</title><rect x="81.0440%" y="1381" width="0.9135%" height="15" fill="rgb(218,98,20)" fg:x="2484" fg:w="28"/><text x="81.2940%" y="1391.50"></text></g><g><title>acpi_processor_ffh_cstate_enter (28 samples, 0.91%)</title><rect x="81.0440%" y="1365" width="0.9135%" height="15" fill="rgb(230,176,47)" fg:x="2484" fg:w="28"/><text x="81.2940%" y="1375.50"></text></g><g><title>irq_enter_rcu (1 samples, 0.03%)</title><rect x="81.9576%" y="1365" width="0.0326%" height="15" fill="rgb(244,2,33)" fg:x="2512" fg:w="1"/><text x="82.2076%" y="1375.50"></text></g><g><title>ktime_get (1 samples, 0.03%)</title><rect x="81.9576%" y="1349" width="0.0326%" height="15" fill="rgb(231,100,17)" fg:x="2512" fg:w="1"/><text x="82.2076%" y="1359.50"></text></g><g><title>irqtime_account_irq (1 samples, 0.03%)</title><rect x="81.9902%" y="1317" width="0.0326%" height="15" fill="rgb(245,23,12)" fg:x="2513" fg:w="1"/><text x="82.2402%" y="1327.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.03%)</title><rect x="81.9902%" y="1301" width="0.0326%" height="15" fill="rgb(249,55,22)" fg:x="2513" fg:w="1"/><text x="82.2402%" y="1311.50"></text></g><g><title>sched_clock (1 samples, 0.03%)</title><rect x="81.9902%" y="1285" width="0.0326%" height="15" fill="rgb(207,134,9)" fg:x="2513" fg:w="1"/><text x="82.2402%" y="1295.50"></text></g><g><title>sched_clock_noinstr (1 samples, 0.03%)</title><rect x="81.9902%" y="1269" width="0.0326%" height="15" fill="rgb(218,134,0)" fg:x="2513" fg:w="1"/><text x="82.2402%" y="1279.50"></text></g><g><title>native_sched_clock (1 samples, 0.03%)</title><rect x="81.9902%" y="1253" width="0.0326%" height="15" fill="rgb(213,212,33)" fg:x="2513" fg:w="1"/><text x="82.2402%" y="1263.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (3 samples, 0.10%)</title><rect x="81.9576%" y="1397" width="0.0979%" height="15" fill="rgb(252,106,18)" fg:x="2512" fg:w="3"/><text x="82.2076%" y="1407.50"></text></g><g><title>sysvec_apic_timer_interrupt (3 samples, 0.10%)</title><rect x="81.9576%" y="1381" width="0.0979%" height="15" fill="rgb(208,126,42)" fg:x="2512" fg:w="3"/><text x="82.2076%" y="1391.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.07%)</title><rect x="81.9902%" y="1365" width="0.0653%" height="15" fill="rgb(246,175,29)" fg:x="2513" fg:w="2"/><text x="82.2402%" y="1375.50"></text></g><g><title>__irq_exit_rcu (2 samples, 0.07%)</title><rect x="81.9902%" y="1349" width="0.0653%" height="15" fill="rgb(215,13,50)" fg:x="2513" fg:w="2"/><text x="82.2402%" y="1359.50"></text></g><g><title>__do_softirq (2 samples, 0.07%)</title><rect x="81.9902%" y="1333" width="0.0653%" height="15" fill="rgb(216,172,15)" fg:x="2513" fg:w="2"/><text x="82.2402%" y="1343.50"></text></g><g><title>run_timer_softirq (1 samples, 0.03%)</title><rect x="82.0228%" y="1317" width="0.0326%" height="15" fill="rgb(212,103,13)" fg:x="2514" fg:w="1"/><text x="82.2728%" y="1327.50"></text></g><g><title>__run_timers.part.0 (1 samples, 0.03%)</title><rect x="82.0228%" y="1301" width="0.0326%" height="15" fill="rgb(231,171,36)" fg:x="2514" fg:w="1"/><text x="82.2728%" y="1311.50"></text></g><g><title>call_timer_fn (1 samples, 0.03%)</title><rect x="82.0228%" y="1285" width="0.0326%" height="15" fill="rgb(250,123,20)" fg:x="2514" fg:w="1"/><text x="82.2728%" y="1295.50"></text></g><g><title>cgroup_file_notify_timer (1 samples, 0.03%)</title><rect x="82.0228%" y="1269" width="0.0326%" height="15" fill="rgb(212,53,50)" fg:x="2514" fg:w="1"/><text x="82.2728%" y="1279.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="82.0228%" y="1253" width="0.0326%" height="15" fill="rgb(243,54,12)" fg:x="2514" fg:w="1"/><text x="82.2728%" y="1263.50"></text></g><g><title>ct_kernel_enter_state (1 samples, 0.03%)</title><rect x="82.0555%" y="1381" width="0.0326%" height="15" fill="rgb(234,101,34)" fg:x="2515" fg:w="1"/><text x="82.3055%" y="1391.50"></text></g><g><title>ct_idle_enter (2 samples, 0.07%)</title><rect x="82.0555%" y="1397" width="0.0653%" height="15" fill="rgb(254,67,22)" fg:x="2515" fg:w="2"/><text x="82.3055%" y="1407.50"></text></g><g><title>ct_kernel_exit.constprop.0 (1 samples, 0.03%)</title><rect x="82.0881%" y="1381" width="0.0326%" height="15" fill="rgb(250,35,47)" fg:x="2516" fg:w="1"/><text x="82.3381%" y="1391.50"></text></g><g><title>ct_kernel_exit.constprop.0 (1 samples, 0.03%)</title><rect x="82.1207%" y="1397" width="0.0326%" height="15" fill="rgb(226,126,38)" fg:x="2517" fg:w="1"/><text x="82.3707%" y="1407.50"></text></g><g><title>call_cpuidle (38 samples, 1.24%)</title><rect x="81.0114%" y="1445" width="1.2398%" height="15" fill="rgb(216,138,53)" fg:x="2483" fg:w="38"/><text x="81.2614%" y="1455.50"></text></g><g><title>cpuidle_enter (37 samples, 1.21%)</title><rect x="81.0440%" y="1429" width="1.2072%" height="15" fill="rgb(246,199,43)" fg:x="2484" fg:w="37"/><text x="81.2940%" y="1439.50"></text></g><g><title>cpuidle_enter_state (37 samples, 1.21%)</title><rect x="81.0440%" y="1413" width="1.2072%" height="15" fill="rgb(232,125,11)" fg:x="2484" fg:w="37"/><text x="81.2940%" y="1423.50"></text></g><g><title>poll_idle (3 samples, 0.10%)</title><rect x="82.1533%" y="1397" width="0.0979%" height="15" fill="rgb(218,219,45)" fg:x="2518" fg:w="3"/><text x="82.4033%" y="1407.50"></text></g><g><title>cpuidle_not_available (1 samples, 0.03%)</title><rect x="82.2512%" y="1445" width="0.0326%" height="15" fill="rgb(216,102,54)" fg:x="2521" fg:w="1"/><text x="82.5012%" y="1455.50"></text></g><g><title>can_stop_idle_tick (1 samples, 0.03%)</title><rect x="82.3491%" y="1413" width="0.0326%" height="15" fill="rgb(250,228,7)" fg:x="2524" fg:w="1"/><text x="82.5991%" y="1423.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="82.4144%" y="1397" width="0.0326%" height="15" fill="rgb(226,125,25)" fg:x="2526" fg:w="1"/><text x="82.6644%" y="1407.50"></text></g><g><title>cpuidle_select (9 samples, 0.29%)</title><rect x="82.2838%" y="1445" width="0.2936%" height="15" fill="rgb(224,165,27)" fg:x="2522" fg:w="9"/><text x="82.5338%" y="1455.50"></text></g><g><title>menu_select (9 samples, 0.29%)</title><rect x="82.2838%" y="1429" width="0.2936%" height="15" fill="rgb(233,86,3)" fg:x="2522" fg:w="9"/><text x="82.5338%" y="1439.50"></text></g><g><title>tick_nohz_get_sleep_length (6 samples, 0.20%)</title><rect x="82.3817%" y="1413" width="0.1958%" height="15" fill="rgb(228,116,20)" fg:x="2525" fg:w="6"/><text x="82.6317%" y="1423.50"></text></g><g><title>tick_nohz_next_event (4 samples, 0.13%)</title><rect x="82.4470%" y="1397" width="0.1305%" height="15" fill="rgb(209,192,17)" fg:x="2527" fg:w="4"/><text x="82.6970%" y="1407.50"></text></g><g><title>get_next_timer_interrupt (2 samples, 0.07%)</title><rect x="82.5122%" y="1381" width="0.0653%" height="15" fill="rgb(224,88,34)" fg:x="2529" fg:w="2"/><text x="82.7622%" y="1391.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.03%)</title><rect x="82.5449%" y="1365" width="0.0326%" height="15" fill="rgb(233,38,6)" fg:x="2530" fg:w="1"/><text x="82.7949%" y="1375.50"></text></g><g><title>do_softirq (1 samples, 0.03%)</title><rect x="82.5775%" y="1445" width="0.0326%" height="15" fill="rgb(212,59,30)" fg:x="2531" fg:w="1"/><text x="82.8275%" y="1455.50"></text></g><g><title>__flush_smp_call_function_queue (80 samples, 2.61%)</title><rect x="84.6656%" y="1429" width="2.6101%" height="15" fill="rgb(213,80,3)" fg:x="2595" fg:w="80"/><text x="84.9156%" y="1439.50">__..</text></g><g><title>scsi_device_unbusy (2 samples, 0.07%)</title><rect x="87.4062%" y="1317" width="0.0653%" height="15" fill="rgb(251,178,7)" fg:x="2679" fg:w="2"/><text x="87.6562%" y="1327.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="87.5041%" y="1269" width="0.0326%" height="15" fill="rgb(213,154,26)" fg:x="2682" fg:w="1"/><text x="87.7541%" y="1279.50"></text></g><g><title>blk_account_io_done.part.0 (1 samples, 0.03%)</title><rect x="87.5367%" y="1269" width="0.0326%" height="15" fill="rgb(238,165,49)" fg:x="2683" fg:w="1"/><text x="87.7867%" y="1279.50"></text></g><g><title>blk_mq_put_tag (3 samples, 0.10%)</title><rect x="87.6020%" y="1237" width="0.0979%" height="15" fill="rgb(248,91,46)" fg:x="2685" fg:w="3"/><text x="87.8520%" y="1247.50"></text></g><g><title>sbitmap_queue_clear (3 samples, 0.10%)</title><rect x="87.6020%" y="1221" width="0.0979%" height="15" fill="rgb(244,21,52)" fg:x="2685" fg:w="3"/><text x="87.8520%" y="1231.50"></text></g><g><title>blk_mq_free_request (5 samples, 0.16%)</title><rect x="87.5693%" y="1269" width="0.1631%" height="15" fill="rgb(247,122,20)" fg:x="2684" fg:w="5"/><text x="87.8193%" y="1279.50"></text></g><g><title>__blk_mq_free_request (5 samples, 0.16%)</title><rect x="87.5693%" y="1253" width="0.1631%" height="15" fill="rgb(218,27,9)" fg:x="2684" fg:w="5"/><text x="87.8193%" y="1263.50"></text></g><g><title>read_tsc (1 samples, 0.03%)</title><rect x="87.6998%" y="1237" width="0.0326%" height="15" fill="rgb(246,7,6)" fg:x="2688" fg:w="1"/><text x="87.9498%" y="1247.50"></text></g><g><title>__blk_mq_end_request (8 samples, 0.26%)</title><rect x="87.5041%" y="1285" width="0.2610%" height="15" fill="rgb(227,135,54)" fg:x="2682" fg:w="8"/><text x="87.7541%" y="1295.50"></text></g><g><title>blk_stat_add (1 samples, 0.03%)</title><rect x="87.7325%" y="1269" width="0.0326%" height="15" fill="rgb(247,14,11)" fg:x="2689" fg:w="1"/><text x="87.9825%" y="1279.50"></text></g><g><title>blk_account_io_completion (2 samples, 0.07%)</title><rect x="87.7651%" y="1285" width="0.0653%" height="15" fill="rgb(206,149,34)" fg:x="2690" fg:w="2"/><text x="88.0151%" y="1295.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="87.8630%" y="1253" width="0.0326%" height="15" fill="rgb(227,228,4)" fg:x="2693" fg:w="1"/><text x="88.1130%" y="1263.50"></text></g><g><title>bio_uninit (1 samples, 0.03%)</title><rect x="87.8956%" y="1253" width="0.0326%" height="15" fill="rgb(238,218,28)" fg:x="2694" fg:w="1"/><text x="88.1456%" y="1263.50"></text></g><g><title>bio_put (2 samples, 0.07%)</title><rect x="87.9935%" y="1221" width="0.0653%" height="15" fill="rgb(252,86,40)" fg:x="2697" fg:w="2"/><text x="88.2435%" y="1231.50"></text></g><g><title>bio_free (2 samples, 0.07%)</title><rect x="87.9935%" y="1205" width="0.0653%" height="15" fill="rgb(251,225,11)" fg:x="2697" fg:w="2"/><text x="88.2435%" y="1215.50"></text></g><g><title>mempool_free (2 samples, 0.07%)</title><rect x="87.9935%" y="1189" width="0.0653%" height="15" fill="rgb(206,46,49)" fg:x="2697" fg:w="2"/><text x="88.2435%" y="1199.50"></text></g><g><title>kmem_cache_free (2 samples, 0.07%)</title><rect x="87.9935%" y="1173" width="0.0653%" height="15" fill="rgb(245,128,24)" fg:x="2697" fg:w="2"/><text x="88.2435%" y="1183.50"></text></g><g><title>__wake_up_locked_key_bookmark (1 samples, 0.03%)</title><rect x="88.0587%" y="1205" width="0.0326%" height="15" fill="rgb(219,177,34)" fg:x="2699" fg:w="1"/><text x="88.3087%" y="1215.50"></text></g><g><title>try_to_wake_up (1 samples, 0.03%)</title><rect x="88.0914%" y="1141" width="0.0326%" height="15" fill="rgb(218,60,48)" fg:x="2700" fg:w="1"/><text x="88.3414%" y="1151.50"></text></g><g><title>_find_first_bit (1 samples, 0.03%)</title><rect x="88.1240%" y="1125" width="0.0326%" height="15" fill="rgb(221,11,5)" fg:x="2701" fg:w="1"/><text x="88.3740%" y="1135.50"></text></g><g><title>enqueue_entity (4 samples, 0.13%)</title><rect x="88.5481%" y="1061" width="0.1305%" height="15" fill="rgb(220,148,13)" fg:x="2714" fg:w="4"/><text x="88.7981%" y="1071.50"></text></g><g><title>update_load_avg (1 samples, 0.03%)</title><rect x="88.6460%" y="1045" width="0.0326%" height="15" fill="rgb(210,16,3)" fg:x="2717" fg:w="1"/><text x="88.8960%" y="1055.50"></text></g><g><title>enqueue_task_fair (9 samples, 0.29%)</title><rect x="88.4176%" y="1077" width="0.2936%" height="15" fill="rgb(236,80,2)" fg:x="2710" fg:w="9"/><text x="88.6676%" y="1087.50"></text></g><g><title>update_cfs_group (1 samples, 0.03%)</title><rect x="88.6786%" y="1061" width="0.0326%" height="15" fill="rgb(239,129,19)" fg:x="2718" fg:w="1"/><text x="88.9286%" y="1071.50"></text></g><g><title>ttwu_do_activate (19 samples, 0.62%)</title><rect x="88.2871%" y="1109" width="0.6199%" height="15" fill="rgb(220,106,35)" fg:x="2706" fg:w="19"/><text x="88.5371%" y="1119.50"></text></g><g><title>enqueue_task (15 samples, 0.49%)</title><rect x="88.4176%" y="1093" width="0.4894%" height="15" fill="rgb(252,139,45)" fg:x="2710" fg:w="15"/><text x="88.6676%" y="1103.50"></text></g><g><title>psi_task_change (6 samples, 0.20%)</title><rect x="88.7113%" y="1077" width="0.1958%" height="15" fill="rgb(229,8,36)" fg:x="2719" fg:w="6"/><text x="88.9613%" y="1087.50"></text></g><g><title>psi_group_change (2 samples, 0.07%)</title><rect x="88.8418%" y="1061" width="0.0653%" height="15" fill="rgb(230,126,33)" fg:x="2723" fg:w="2"/><text x="89.0918%" y="1071.50"></text></g><g><title>__read_end_io (36 samples, 1.17%)</title><rect x="87.9282%" y="1237" width="1.1746%" height="15" fill="rgb(239,140,21)" fg:x="2695" fg:w="36"/><text x="88.1782%" y="1247.50"></text></g><g><title>folio_unlock (32 samples, 1.04%)</title><rect x="88.0587%" y="1221" width="1.0440%" height="15" fill="rgb(254,104,9)" fg:x="2699" fg:w="32"/><text x="88.3087%" y="1231.50"></text></g><g><title>folio_wake_bit (31 samples, 1.01%)</title><rect x="88.0914%" y="1205" width="1.0114%" height="15" fill="rgb(239,52,14)" fg:x="2700" fg:w="31"/><text x="88.3414%" y="1215.50"></text></g><g><title>__wake_up_locked_key_bookmark (31 samples, 1.01%)</title><rect x="88.0914%" y="1189" width="1.0114%" height="15" fill="rgb(208,227,44)" fg:x="2700" fg:w="31"/><text x="88.3414%" y="1199.50"></text></g><g><title>__wake_up_common (31 samples, 1.01%)</title><rect x="88.0914%" y="1173" width="1.0114%" height="15" fill="rgb(246,18,19)" fg:x="2700" fg:w="31"/><text x="88.3414%" y="1183.50"></text></g><g><title>wake_page_function (31 samples, 1.01%)</title><rect x="88.0914%" y="1157" width="1.0114%" height="15" fill="rgb(235,228,25)" fg:x="2700" fg:w="31"/><text x="88.3414%" y="1167.50"></text></g><g><title>wake_up_state (30 samples, 0.98%)</title><rect x="88.1240%" y="1141" width="0.9788%" height="15" fill="rgb(240,156,20)" fg:x="2701" fg:w="30"/><text x="88.3740%" y="1151.50"></text></g><g><title>try_to_wake_up (29 samples, 0.95%)</title><rect x="88.1566%" y="1125" width="0.9462%" height="15" fill="rgb(224,8,20)" fg:x="2702" fg:w="29"/><text x="88.4066%" y="1135.50"></text></g><g><title>update_rq_clock (6 samples, 0.20%)</title><rect x="88.9070%" y="1109" width="0.1958%" height="15" fill="rgb(214,12,52)" fg:x="2725" fg:w="6"/><text x="89.1570%" y="1119.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.03%)</title><rect x="89.0701%" y="1093" width="0.0326%" height="15" fill="rgb(211,220,47)" fg:x="2730" fg:w="1"/><text x="89.3201%" y="1103.50"></text></g><g><title>sched_clock (1 samples, 0.03%)</title><rect x="89.0701%" y="1077" width="0.0326%" height="15" fill="rgb(250,173,5)" fg:x="2730" fg:w="1"/><text x="89.3201%" y="1087.50"></text></g><g><title>sched_clock_noinstr (1 samples, 0.03%)</title><rect x="89.0701%" y="1061" width="0.0326%" height="15" fill="rgb(250,125,52)" fg:x="2730" fg:w="1"/><text x="89.3201%" y="1071.50"></text></g><g><title>native_sched_clock (1 samples, 0.03%)</title><rect x="89.0701%" y="1045" width="0.0326%" height="15" fill="rgb(209,133,18)" fg:x="2730" fg:w="1"/><text x="89.3201%" y="1055.50"></text></g><g><title>folio_unlock (1 samples, 0.03%)</title><rect x="89.1028%" y="1237" width="0.0326%" height="15" fill="rgb(216,173,22)" fg:x="2731" fg:w="1"/><text x="89.3528%" y="1247.50"></text></g><g><title>bio_endio (41 samples, 1.34%)</title><rect x="87.8630%" y="1269" width="1.3377%" height="15" fill="rgb(205,3,22)" fg:x="2693" fg:w="41"/><text x="88.1130%" y="1279.50"></text></g><g><title>mpage_end_io (39 samples, 1.27%)</title><rect x="87.9282%" y="1253" width="1.2724%" height="15" fill="rgb(248,22,20)" fg:x="2695" fg:w="39"/><text x="88.1782%" y="1263.50"></text></g><g><title>srso_safe_ret (2 samples, 0.07%)</title><rect x="89.1354%" y="1237" width="0.0653%" height="15" fill="rgb(233,6,29)" fg:x="2732" fg:w="2"/><text x="89.3854%" y="1247.50"></text></g><g><title>mpage_end_io (1 samples, 0.03%)</title><rect x="89.2007%" y="1269" width="0.0326%" height="15" fill="rgb(240,22,54)" fg:x="2734" fg:w="1"/><text x="89.4507%" y="1279.50"></text></g><g><title>perf_swevent_event (2 samples, 0.07%)</title><rect x="89.2985%" y="1221" width="0.0653%" height="15" fill="rgb(231,133,32)" fg:x="2737" fg:w="2"/><text x="89.5485%" y="1231.50"></text></g><g><title>__perf_event_overflow (1 samples, 0.03%)</title><rect x="89.3312%" y="1205" width="0.0326%" height="15" fill="rgb(248,193,4)" fg:x="2738" fg:w="1"/><text x="89.5812%" y="1215.50"></text></g><g><title>perf_event_output_forward (1 samples, 0.03%)</title><rect x="89.3312%" y="1189" width="0.0326%" height="15" fill="rgb(211,178,46)" fg:x="2738" fg:w="1"/><text x="89.5812%" y="1199.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="89.3312%" y="1173" width="0.0326%" height="15" fill="rgb(224,5,42)" fg:x="2738" fg:w="1"/><text x="89.5812%" y="1183.50"></text></g><g><title>perf_tp_event (4 samples, 0.13%)</title><rect x="89.2659%" y="1237" width="0.1305%" height="15" fill="rgb(239,176,25)" fg:x="2736" fg:w="4"/><text x="89.5159%" y="1247.50"></text></g><g><title>perf_trace_buf_update (1 samples, 0.03%)</title><rect x="89.3638%" y="1221" width="0.0326%" height="15" fill="rgb(245,187,50)" fg:x="2739" fg:w="1"/><text x="89.6138%" y="1231.50"></text></g><g><title>bpf_ktime_get_boot_ns (2 samples, 0.07%)</title><rect x="89.3964%" y="1221" width="0.0653%" height="15" fill="rgb(248,24,15)" fg:x="2740" fg:w="2"/><text x="89.6464%" y="1231.50"></text></g><g><title>__htab_map_lookup_elem (1 samples, 0.03%)</title><rect x="89.7553%" y="1205" width="0.0326%" height="15" fill="rgb(205,166,13)" fg:x="2751" fg:w="1"/><text x="90.0053%" y="1215.50"></text></g><g><title>ktime_get_mono_fast_ns (2 samples, 0.07%)</title><rect x="89.7879%" y="1173" width="0.0653%" height="15" fill="rgb(208,114,23)" fg:x="2752" fg:w="2"/><text x="90.0379%" y="1183.50"></text></g><g><title>bpf_ktime_get_boot_ns (3 samples, 0.10%)</title><rect x="89.7879%" y="1205" width="0.0979%" height="15" fill="rgb(239,127,18)" fg:x="2752" fg:w="3"/><text x="90.0379%" y="1215.50"></text></g><g><title>ktime_get_boot_fast_ns (3 samples, 0.10%)</title><rect x="89.7879%" y="1189" width="0.0979%" height="15" fill="rgb(219,154,28)" fg:x="2752" fg:w="3"/><text x="90.0379%" y="1199.50"></text></g><g><title>read_tsc (1 samples, 0.03%)</title><rect x="89.8532%" y="1173" width="0.0326%" height="15" fill="rgb(225,157,23)" fg:x="2754" fg:w="1"/><text x="90.1032%" y="1183.50"></text></g><g><title>__pcpu_freelist_push (1 samples, 0.03%)</title><rect x="89.9184%" y="1189" width="0.0326%" height="15" fill="rgb(219,8,6)" fg:x="2756" fg:w="1"/><text x="90.1684%" y="1199.50"></text></g><g><title>htab_map_delete_elem (3 samples, 0.10%)</title><rect x="89.8858%" y="1205" width="0.0979%" height="15" fill="rgb(212,47,6)" fg:x="2755" fg:w="3"/><text x="90.1358%" y="1215.50"></text></g><g><title>free_htab_elem (1 samples, 0.03%)</title><rect x="89.9511%" y="1189" width="0.0326%" height="15" fill="rgb(224,190,4)" fg:x="2757" fg:w="1"/><text x="90.2011%" y="1199.50"></text></g><g><title>htab_map_hash (10 samples, 0.33%)</title><rect x="89.9837%" y="1205" width="0.3263%" height="15" fill="rgb(239,183,29)" fg:x="2758" fg:w="10"/><text x="90.2337%" y="1215.50"></text></g><g><title>htab_map_update_elem (7 samples, 0.23%)</title><rect x="90.3100%" y="1205" width="0.2284%" height="15" fill="rgb(213,57,7)" fg:x="2768" fg:w="7"/><text x="90.5600%" y="1215.50"></text></g><g><title>check_and_free_fields (1 samples, 0.03%)</title><rect x="90.5057%" y="1189" width="0.0326%" height="15" fill="rgb(216,148,1)" fg:x="2774" fg:w="1"/><text x="90.7557%" y="1199.50"></text></g><g><title>scsi_end_request (95 samples, 3.10%)</title><rect x="87.4715%" y="1301" width="3.0995%" height="15" fill="rgb(236,182,29)" fg:x="2681" fg:w="95"/><text x="87.7215%" y="1311.50">scs..</text></g><g><title>blk_update_request (84 samples, 2.74%)</title><rect x="87.8303%" y="1285" width="2.7406%" height="15" fill="rgb(244,120,48)" fg:x="2692" fg:w="84"/><text x="88.0803%" y="1295.50">bl..</text></g><g><title>perf_trace_block_rq_completion (41 samples, 1.34%)</title><rect x="89.2333%" y="1269" width="1.3377%" height="15" fill="rgb(206,71,34)" fg:x="2735" fg:w="41"/><text x="89.4833%" y="1279.50"></text></g><g><title>perf_trace_run_bpf_submit (41 samples, 1.34%)</title><rect x="89.2333%" y="1253" width="1.3377%" height="15" fill="rgb(242,32,6)" fg:x="2735" fg:w="41"/><text x="89.4833%" y="1263.50"></text></g><g><title>trace_call_bpf (36 samples, 1.17%)</title><rect x="89.3964%" y="1237" width="1.1746%" height="15" fill="rgb(241,35,3)" fg:x="2740" fg:w="36"/><text x="89.6464%" y="1247.50"></text></g><g><title>bpf_prog_0431201ce9996740_block_rq_comple (34 samples, 1.11%)</title><rect x="89.4617%" y="1221" width="1.1093%" height="15" fill="rgb(222,62,19)" fg:x="2742" fg:w="34"/><text x="89.7117%" y="1231.50"></text></g><g><title>srso_safe_ret (1 samples, 0.03%)</title><rect x="90.5383%" y="1205" width="0.0326%" height="15" fill="rgb(223,110,41)" fg:x="2775" fg:w="1"/><text x="90.7883%" y="1215.50"></text></g><g><title>scsi_run_queue_async (1 samples, 0.03%)</title><rect x="90.5710%" y="1301" width="0.0326%" height="15" fill="rgb(208,224,4)" fg:x="2776" fg:w="1"/><text x="90.8210%" y="1311.50"></text></g><g><title>blk_complete_reqs (102 samples, 3.33%)</title><rect x="87.3083%" y="1365" width="3.3279%" height="15" fill="rgb(241,137,19)" fg:x="2676" fg:w="102"/><text x="87.5583%" y="1375.50">blk..</text></g><g><title>scsi_complete (102 samples, 3.33%)</title><rect x="87.3083%" y="1349" width="3.3279%" height="15" fill="rgb(244,24,17)" fg:x="2676" fg:w="102"/><text x="87.5583%" y="1359.50">scs..</text></g><g><title>scsi_finish_command (99 samples, 3.23%)</title><rect x="87.4062%" y="1333" width="3.2300%" height="15" fill="rgb(245,178,49)" fg:x="2679" fg:w="99"/><text x="87.6562%" y="1343.50">scs..</text></g><g><title>scsi_io_completion (97 samples, 3.16%)</title><rect x="87.4715%" y="1317" width="3.1648%" height="15" fill="rgb(219,160,38)" fg:x="2681" fg:w="97"/><text x="87.7215%" y="1327.50">scs..</text></g><g><title>sd_uninit_command (1 samples, 0.03%)</title><rect x="90.6036%" y="1301" width="0.0326%" height="15" fill="rgb(228,137,14)" fg:x="2777" fg:w="1"/><text x="90.8536%" y="1311.50"></text></g><g><title>blk_done_softirq (103 samples, 3.36%)</title><rect x="87.3083%" y="1381" width="3.3605%" height="15" fill="rgb(237,134,11)" fg:x="2676" fg:w="103"/><text x="87.5583%" y="1391.50">blk..</text></g><g><title>scsi_complete (1 samples, 0.03%)</title><rect x="90.6362%" y="1365" width="0.0326%" height="15" fill="rgb(211,126,44)" fg:x="2778" fg:w="1"/><text x="90.8862%" y="1375.50"></text></g><g><title>do_softirq (105 samples, 3.43%)</title><rect x="87.2757%" y="1429" width="3.4258%" height="15" fill="rgb(226,171,33)" fg:x="2675" fg:w="105"/><text x="87.5257%" y="1439.50">do_..</text></g><g><title>do_softirq.part.0 (105 samples, 3.43%)</title><rect x="87.2757%" y="1413" width="3.4258%" height="15" fill="rgb(253,99,13)" fg:x="2675" fg:w="105"/><text x="87.5257%" y="1423.50">do_..</text></g><g><title>__do_softirq (105 samples, 3.43%)</title><rect x="87.2757%" y="1397" width="3.4258%" height="15" fill="rgb(244,48,7)" fg:x="2675" fg:w="105"/><text x="87.5257%" y="1407.50">__d..</text></g><g><title>srso_safe_ret (1 samples, 0.03%)</title><rect x="90.6688%" y="1381" width="0.0326%" height="15" fill="rgb(244,217,54)" fg:x="2779" fg:w="1"/><text x="90.9188%" y="1391.50"></text></g><g><title>flush_smp_call_function_queue (416 samples, 13.57%)</title><rect x="82.6101%" y="1445" width="13.5726%" height="15" fill="rgb(224,15,18)" fg:x="2532" fg:w="416"/><text x="82.8601%" y="1455.50">flush_smp_call_functi..</text></g><g><title>llist_reverse_order (168 samples, 5.48%)</title><rect x="90.7015%" y="1429" width="5.4812%" height="15" fill="rgb(244,99,12)" fg:x="2780" fg:w="168"/><text x="90.9515%" y="1439.50">llist_r..</text></g><g><title>menu_select (1 samples, 0.03%)</title><rect x="96.1827%" y="1445" width="0.0326%" height="15" fill="rgb(233,226,8)" fg:x="2948" fg:w="1"/><text x="96.4327%" y="1455.50"></text></g><g><title>__switch_to (1 samples, 0.03%)</title><rect x="96.3132%" y="1413" width="0.0326%" height="15" fill="rgb(229,211,3)" fg:x="2952" fg:w="1"/><text x="96.5632%" y="1423.50"></text></g><g><title>finish_task_switch.isra.0 (1 samples, 0.03%)</title><rect x="96.3458%" y="1413" width="0.0326%" height="15" fill="rgb(216,140,21)" fg:x="2953" fg:w="1"/><text x="96.5958%" y="1423.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.03%)</title><rect x="96.3458%" y="1397" width="0.0326%" height="15" fill="rgb(234,122,30)" fg:x="2953" fg:w="1"/><text x="96.5958%" y="1407.50"></text></g><g><title>pick_next_entity.constprop.0 (1 samples, 0.03%)</title><rect x="96.3785%" y="1413" width="0.0326%" height="15" fill="rgb(236,25,46)" fg:x="2954" fg:w="1"/><text x="96.6285%" y="1423.50"></text></g><g><title>__dequeue_entity (2 samples, 0.07%)</title><rect x="96.4437%" y="1381" width="0.0653%" height="15" fill="rgb(217,52,54)" fg:x="2956" fg:w="2"/><text x="96.6937%" y="1391.50"></text></g><g><title>pick_next_task_fair (6 samples, 0.20%)</title><rect x="96.4111%" y="1413" width="0.1958%" height="15" fill="rgb(222,29,26)" fg:x="2955" fg:w="6"/><text x="96.6611%" y="1423.50"></text></g><g><title>set_next_entity (5 samples, 0.16%)</title><rect x="96.4437%" y="1397" width="0.1631%" height="15" fill="rgb(216,177,29)" fg:x="2956" fg:w="5"/><text x="96.6937%" y="1407.50"></text></g><g><title>update_load_avg (3 samples, 0.10%)</title><rect x="96.5090%" y="1381" width="0.0979%" height="15" fill="rgb(247,136,51)" fg:x="2958" fg:w="3"/><text x="96.7590%" y="1391.50"></text></g><g><title>psi_group_change (1 samples, 0.03%)</title><rect x="96.6069%" y="1397" width="0.0326%" height="15" fill="rgb(231,47,47)" fg:x="2961" fg:w="1"/><text x="96.8569%" y="1407.50"></text></g><g><title>psi_task_switch (3 samples, 0.10%)</title><rect x="96.6069%" y="1413" width="0.0979%" height="15" fill="rgb(211,192,36)" fg:x="2961" fg:w="3"/><text x="96.8569%" y="1423.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.07%)</title><rect x="96.6395%" y="1397" width="0.0653%" height="15" fill="rgb(229,156,32)" fg:x="2962" fg:w="2"/><text x="96.8895%" y="1407.50"></text></g><g><title>sched_clock (1 samples, 0.03%)</title><rect x="96.6721%" y="1381" width="0.0326%" height="15" fill="rgb(248,213,20)" fg:x="2963" fg:w="1"/><text x="96.9221%" y="1391.50"></text></g><g><title>sched_clock_noinstr (1 samples, 0.03%)</title><rect x="96.6721%" y="1365" width="0.0326%" height="15" fill="rgb(217,64,7)" fg:x="2963" fg:w="1"/><text x="96.9221%" y="1375.50"></text></g><g><title>native_sched_clock (1 samples, 0.03%)</title><rect x="96.6721%" y="1349" width="0.0326%" height="15" fill="rgb(232,142,8)" fg:x="2963" fg:w="1"/><text x="96.9221%" y="1359.50"></text></g><g><title>put_prev_task_idle (2 samples, 0.07%)</title><rect x="96.7047%" y="1413" width="0.0653%" height="15" fill="rgb(224,92,44)" fg:x="2964" fg:w="2"/><text x="96.9547%" y="1423.50"></text></g><g><title>raw_spin_rq_lock_nested (1 samples, 0.03%)</title><rect x="96.7700%" y="1413" width="0.0326%" height="15" fill="rgb(214,169,17)" fg:x="2966" fg:w="1"/><text x="97.0200%" y="1423.50"></text></g><g><title>__schedule (19 samples, 0.62%)</title><rect x="96.2153%" y="1429" width="0.6199%" height="15" fill="rgb(210,59,37)" fg:x="2949" fg:w="19"/><text x="96.4653%" y="1439.50"></text></g><g><title>srso_safe_ret (1 samples, 0.03%)</title><rect x="96.8026%" y="1413" width="0.0326%" height="15" fill="rgb(214,116,48)" fg:x="2967" fg:w="1"/><text x="97.0526%" y="1423.50"></text></g><g><title>raw_spin_rq_lock_nested (1 samples, 0.03%)</title><rect x="96.8352%" y="1429" width="0.0326%" height="15" fill="rgb(244,191,6)" fg:x="2968" fg:w="1"/><text x="97.0852%" y="1439.50"></text></g><g><title>schedule_idle (21 samples, 0.69%)</title><rect x="96.2153%" y="1445" width="0.6852%" height="15" fill="rgb(241,50,52)" fg:x="2949" fg:w="21"/><text x="96.4653%" y="1455.50"></text></g><g><title>srso_safe_ret (1 samples, 0.03%)</title><rect x="96.8679%" y="1429" width="0.0326%" height="15" fill="rgb(236,75,39)" fg:x="2969" fg:w="1"/><text x="97.1179%" y="1439.50"></text></g><g><title>do_idle (490 samples, 15.99%)</title><rect x="80.9788%" y="1461" width="15.9869%" height="15" fill="rgb(236,99,0)" fg:x="2482" fg:w="490"/><text x="81.2288%" y="1471.50">do_idle</text></g><g><title>tick_nohz_idle_enter (2 samples, 0.07%)</title><rect x="96.9005%" y="1445" width="0.0653%" height="15" fill="rgb(207,202,15)" fg:x="2970" fg:w="2"/><text x="97.1505%" y="1455.50"></text></g><g><title>read_tsc (2 samples, 0.07%)</title><rect x="96.9005%" y="1429" width="0.0653%" height="15" fill="rgb(233,207,14)" fg:x="2970" fg:w="2"/><text x="97.1505%" y="1439.50"></text></g><g><title>flush_smp_call_function_queue (88 samples, 2.87%)</title><rect x="96.9657%" y="1461" width="2.8711%" height="15" fill="rgb(226,27,51)" fg:x="2972" fg:w="88"/><text x="97.2157%" y="1471.50">fl..</text></g><g><title>swapper (1,989 samples, 64.89%)</title><rect x="35.0082%" y="1589" width="64.8940%" height="15" fill="rgb(206,104,42)" fg:x="1073" fg:w="1989"/><text x="35.2582%" y="1599.50">swapper</text></g><g><title>secondary_startup_64_no_verify (1,982 samples, 64.67%)</title><rect x="35.2365%" y="1573" width="64.6656%" height="15" fill="rgb(212,225,4)" fg:x="1080" fg:w="1982"/><text x="35.4865%" y="1583.50">secondary_startup_64_no_verify</text></g><g><title>x86_64_start_kernel (580 samples, 18.92%)</title><rect x="80.9788%" y="1557" width="18.9233%" height="15" fill="rgb(233,96,42)" fg:x="2482" fg:w="580"/><text x="81.2288%" y="1567.50">x86_64_start_kernel</text></g><g><title>x86_64_start_reservations (580 samples, 18.92%)</title><rect x="80.9788%" y="1541" width="18.9233%" height="15" fill="rgb(229,21,32)" fg:x="2482" fg:w="580"/><text x="81.2288%" y="1551.50">x86_64_start_reservations</text></g><g><title>start_kernel (580 samples, 18.92%)</title><rect x="80.9788%" y="1525" width="18.9233%" height="15" fill="rgb(226,216,24)" fg:x="2482" fg:w="580"/><text x="81.2288%" y="1535.50">start_kernel</text></g><g><title>[[kernel.vmlinux].init.text] (580 samples, 18.92%)</title><rect x="80.9788%" y="1509" width="18.9233%" height="15" fill="rgb(221,163,17)" fg:x="2482" fg:w="580"/><text x="81.2288%" y="1519.50">[[kernel.vmlinux].init.text]</text></g><g><title>rest_init (580 samples, 18.92%)</title><rect x="80.9788%" y="1493" width="18.9233%" height="15" fill="rgb(216,216,42)" fg:x="2482" fg:w="580"/><text x="81.2288%" y="1503.50">rest_init</text></g><g><title>cpu_startup_entry (580 samples, 18.92%)</title><rect x="80.9788%" y="1477" width="18.9233%" height="15" fill="rgb(240,118,7)" fg:x="2482" fg:w="580"/><text x="81.2288%" y="1487.50">cpu_startup_entry</text></g><g><title>schedule_idle (2 samples, 0.07%)</title><rect x="99.8369%" y="1461" width="0.0653%" height="15" fill="rgb(221,67,37)" fg:x="3060" fg:w="2"/><text x="100.0869%" y="1471.50"></text></g><g><title>[[heap]] (1 samples, 0.03%)</title><rect x="99.9021%" y="1573" width="0.0326%" height="15" fill="rgb(241,32,44)" fg:x="3062" fg:w="1"/><text x="100.1521%" y="1583.50"></text></g><g><title>[tmux] (1 samples, 0.03%)</title><rect x="99.9021%" y="1557" width="0.0326%" height="15" fill="rgb(235,204,43)" fg:x="3062" fg:w="1"/><text x="100.1521%" y="1567.50"></text></g><g><title>tmux:_server (2 samples, 0.07%)</title><rect x="99.9021%" y="1589" width="0.0653%" height="15" fill="rgb(213,116,10)" fg:x="3062" fg:w="2"/><text x="100.1521%" y="1599.50"></text></g><g><title>[tmux] (1 samples, 0.03%)</title><rect x="99.9347%" y="1573" width="0.0326%" height="15" fill="rgb(239,15,48)" fg:x="3063" fg:w="1"/><text x="100.1847%" y="1583.50"></text></g><g><title>__libc_start_main_impl (1 samples, 0.03%)</title><rect x="99.9347%" y="1557" width="0.0326%" height="15" fill="rgb(207,123,36)" fg:x="3063" fg:w="1"/><text x="100.1847%" y="1567.50"></text></g><g><title>__libc_start_call_main (1 samples, 0.03%)</title><rect x="99.9347%" y="1541" width="0.0326%" height="15" fill="rgb(209,103,30)" fg:x="3063" fg:w="1"/><text x="100.1847%" y="1551.50"></text></g><g><title>[tmux] (1 samples, 0.03%)</title><rect x="99.9347%" y="1525" width="0.0326%" height="15" fill="rgb(238,100,19)" fg:x="3063" fg:w="1"/><text x="100.1847%" y="1535.50"></text></g><g><title>[tmux] (1 samples, 0.03%)</title><rect x="99.9347%" y="1509" width="0.0326%" height="15" fill="rgb(244,30,14)" fg:x="3063" fg:w="1"/><text x="100.1847%" y="1519.50"></text></g><g><title>[tmux] (1 samples, 0.03%)</title><rect x="99.9347%" y="1493" width="0.0326%" height="15" fill="rgb(249,174,6)" fg:x="3063" fg:w="1"/><text x="100.1847%" y="1503.50"></text></g><g><title>[tmux] (1 samples, 0.03%)</title><rect x="99.9347%" y="1477" width="0.0326%" height="15" fill="rgb(235,213,41)" fg:x="3063" fg:w="1"/><text x="100.1847%" y="1487.50"></text></g><g><title>all (3,065 samples, 100%)</title><rect x="0.0000%" y="1605" width="100.0000%" height="15" fill="rgb(213,118,6)" fg:x="0" fg:w="3065"/><text x="0.2500%" y="1615.50"></text></g><g><title>which (1 samples, 0.03%)</title><rect x="99.9674%" y="1589" width="0.0326%" height="15" fill="rgb(235,44,51)" fg:x="3064" fg:w="1"/><text x="100.2174%" y="1599.50"></text></g><g><title>_start (1 samples, 0.03%)</title><rect x="99.9674%" y="1573" width="0.0326%" height="15" fill="rgb(217,9,53)" fg:x="3064" fg:w="1"/><text x="100.2174%" y="1583.50"></text></g><g><title>_dl_start (1 samples, 0.03%)</title><rect x="99.9674%" y="1557" width="0.0326%" height="15" fill="rgb(237,172,34)" fg:x="3064" fg:w="1"/><text x="100.2174%" y="1567.50"></text></g><g><title>_dl_start_final (1 samples, 0.03%)</title><rect x="99.9674%" y="1541" width="0.0326%" height="15" fill="rgb(206,206,11)" fg:x="3064" fg:w="1"/><text x="100.2174%" y="1551.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.03%)</title><rect x="99.9674%" y="1525" width="0.0326%" height="15" fill="rgb(214,149,29)" fg:x="3064" fg:w="1"/><text x="100.2174%" y="1535.50"></text></g><g><title>dl_main (1 samples, 0.03%)</title><rect x="99.9674%" y="1509" width="0.0326%" height="15" fill="rgb(208,123,3)" fg:x="3064" fg:w="1"/><text x="100.2174%" y="1519.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.03%)</title><rect x="99.9674%" y="1493" width="0.0326%" height="15" fill="rgb(229,126,4)" fg:x="3064" fg:w="1"/><text x="100.2174%" y="1503.50"></text></g><g><title>elf_dynamic_do_Rela (1 samples, 0.03%)</title><rect x="99.9674%" y="1477" width="0.0326%" height="15" fill="rgb(222,92,36)" fg:x="3064" fg:w="1"/><text x="100.2174%" y="1487.50"></text></g><g><title>elf_machine_rela_relative (1 samples, 0.03%)</title><rect x="99.9674%" y="1461" width="0.0326%" height="15" fill="rgb(216,39,41)" fg:x="3064" fg:w="1"/><text x="100.2174%" y="1471.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="99.9674%" y="1445" width="0.0326%" height="15" fill="rgb(253,127,28)" fg:x="3064" fg:w="1"/><text x="100.2174%" y="1455.50"></text></g><g><title>exc_page_fault (1 samples, 0.03%)</title><rect x="99.9674%" y="1429" width="0.0326%" height="15" fill="rgb(249,152,51)" fg:x="3064" fg:w="1"/><text x="100.2174%" y="1439.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="99.9674%" y="1413" width="0.0326%" height="15" fill="rgb(209,123,42)" fg:x="3064" fg:w="1"/><text x="100.2174%" y="1423.50"></text></g><g><title>handle_mm_fault (1 samples, 0.03%)</title><rect x="99.9674%" y="1397" width="0.0326%" height="15" fill="rgb(241,118,22)" fg:x="3064" fg:w="1"/><text x="100.2174%" y="1407.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="99.9674%" y="1381" width="0.0326%" height="15" fill="rgb(208,25,7)" fg:x="3064" fg:w="1"/><text x="100.2174%" y="1391.50"></text></g><g><title>do_wp_page (1 samples, 0.03%)</title><rect x="99.9674%" y="1365" width="0.0326%" height="15" fill="rgb(243,144,39)" fg:x="3064" fg:w="1"/><text x="100.2174%" y="1375.50"></text></g><g><title>page_remove_rmap (1 samples, 0.03%)</title><rect x="99.9674%" y="1349" width="0.0326%" height="15" fill="rgb(250,50,5)" fg:x="3064" fg:w="1"/><text x="100.2174%" y="1359.50"></text></g></svg></svg>