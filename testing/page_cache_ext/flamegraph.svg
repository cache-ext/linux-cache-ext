<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2134" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="2117.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="2117.00"> </text><svg id="frames" x="10" width="1180" total_samples="26878475948"><g><title>_dl_sysdep_start (3,339,340 samples, 0.01%)</title><rect x="0.0149%" y="2037" width="0.0124%" height="15" fill="rgb(227,0,7)" fg:x="3998569" fg:w="3339340"/><text x="0.2649%" y="2047.50"></text></g><g><title>[unknown] (9,344,870 samples, 0.03%)</title><rect x="0.0067%" y="2053" width="0.0348%" height="15" fill="rgb(217,0,24)" fg:x="1793778" fg:w="9344870"/><text x="0.2567%" y="2063.50"></text></g><g><title>grep (21,892,354 samples, 0.08%)</title><rect x="0.0046%" y="2069" width="0.0814%" height="15" fill="rgb(221,193,54)" fg:x="1234899" fg:w="21892354"/><text x="0.2546%" y="2079.50"></text></g><g><title>[htop] (5,579,653 samples, 0.02%)</title><rect x="0.1028%" y="2037" width="0.0208%" height="15" fill="rgb(248,212,6)" fg:x="27617993" fg:w="5579653"/><text x="0.3528%" y="2047.50"></text></g><g><title>[unknown] (4,691,145 samples, 0.02%)</title><rect x="0.1235%" y="2037" width="0.0175%" height="15" fill="rgb(208,68,35)" fg:x="33197646" fg:w="4691145"/><text x="0.3735%" y="2047.50"></text></g><g><title>__x64_sys_newfstatat (3,355,502 samples, 0.01%)</title><rect x="0.1518%" y="1989" width="0.0125%" height="15" fill="rgb(232,128,0)" fg:x="40796813" fg:w="3355502"/><text x="0.4018%" y="1999.50"></text></g><g><title>__se_sys_newfstatat (3,355,502 samples, 0.01%)</title><rect x="0.1518%" y="1973" width="0.0125%" height="15" fill="rgb(207,160,47)" fg:x="40796813" fg:w="3355502"/><text x="0.4018%" y="1983.50"></text></g><g><title>entry_SYSCALL_64 (4,144,682 samples, 0.02%)</title><rect x="0.1518%" y="2021" width="0.0154%" height="15" fill="rgb(228,23,34)" fg:x="40796813" fg:w="4144682"/><text x="0.4018%" y="2031.50"></text></g><g><title>do_syscall_64 (4,144,682 samples, 0.02%)</title><rect x="0.1518%" y="2005" width="0.0154%" height="15" fill="rgb(218,30,26)" fg:x="40796813" fg:w="4144682"/><text x="0.4018%" y="2015.50"></text></g><g><title>__GI___fstatat64 (5,652,609 samples, 0.02%)</title><rect x="0.1518%" y="2037" width="0.0210%" height="15" fill="rgb(220,122,19)" fg:x="40796813" fg:w="5652609"/><text x="0.4018%" y="2047.50"></text></g><g><title>proc_pid_readdir (4,500,851 samples, 0.02%)</title><rect x="0.2139%" y="1925" width="0.0167%" height="15" fill="rgb(250,228,42)" fg:x="57502017" fg:w="4500851"/><text x="0.4639%" y="1935.50"></text></g><g><title>proc_root_readdir (4,874,510 samples, 0.02%)</title><rect x="0.2139%" y="1941" width="0.0181%" height="15" fill="rgb(240,193,28)" fg:x="57502017" fg:w="4874510"/><text x="0.4639%" y="1951.50"></text></g><g><title>d_hash_and_lookup (5,620,975 samples, 0.02%)</title><rect x="0.2448%" y="1909" width="0.0209%" height="15" fill="rgb(216,20,37)" fg:x="65794564" fg:w="5620975"/><text x="0.4948%" y="1919.50"></text></g><g><title>__d_lookup (5,620,975 samples, 0.02%)</title><rect x="0.2448%" y="1893" width="0.0209%" height="15" fill="rgb(206,188,39)" fg:x="65794564" fg:w="5620975"/><text x="0.4948%" y="1903.50"></text></g><g><title>proc_fill_cache (7,086,051 samples, 0.03%)</title><rect x="0.2420%" y="1925" width="0.0264%" height="15" fill="rgb(217,207,13)" fg:x="65049839" fg:w="7086051"/><text x="0.4920%" y="1935.50"></text></g><g><title>proc_task_readdir (14,259,539 samples, 0.05%)</title><rect x="0.2321%" y="1941" width="0.0531%" height="15" fill="rgb(231,73,38)" fg:x="62376527" fg:w="14259539"/><text x="0.4821%" y="1951.50"></text></g><g><title>snprintf (4,500,176 samples, 0.02%)</title><rect x="0.2684%" y="1925" width="0.0167%" height="15" fill="rgb(225,20,46)" fg:x="72135890" fg:w="4500176"/><text x="0.5184%" y="1935.50"></text></g><g><title>vsnprintf (4,500,176 samples, 0.02%)</title><rect x="0.2684%" y="1909" width="0.0167%" height="15" fill="rgb(210,31,41)" fg:x="72135890" fg:w="4500176"/><text x="0.5184%" y="1919.50"></text></g><g><title>number (2,982,850 samples, 0.01%)</title><rect x="0.2740%" y="1893" width="0.0111%" height="15" fill="rgb(221,200,47)" fg:x="73653216" fg:w="2982850"/><text x="0.5240%" y="1903.50"></text></g><g><title>security_file_permission (3,003,005 samples, 0.01%)</title><rect x="0.2851%" y="1941" width="0.0112%" height="15" fill="rgb(226,26,5)" fg:x="76636066" fg:w="3003005"/><text x="0.5351%" y="1951.50"></text></g><g><title>__x64_sys_getdents64 (31,518,507 samples, 0.12%)</title><rect x="0.1841%" y="1989" width="0.1173%" height="15" fill="rgb(249,33,26)" fg:x="49487724" fg:w="31518507"/><text x="0.4341%" y="1999.50"></text></g><g><title>__se_sys_getdents64 (30,086,714 samples, 0.11%)</title><rect x="0.1894%" y="1973" width="0.1119%" height="15" fill="rgb(235,183,28)" fg:x="50919517" fg:w="30086714"/><text x="0.4394%" y="1983.50"></text></g><g><title>iterate_dir (28,086,606 samples, 0.10%)</title><rect x="0.1969%" y="1957" width="0.1045%" height="15" fill="rgb(221,5,38)" fg:x="52919625" fg:w="28086606"/><text x="0.4469%" y="1967.50"></text></g><g><title>entry_SYSCALL_64 (35,273,304 samples, 0.13%)</title><rect x="0.1728%" y="2021" width="0.1312%" height="15" fill="rgb(247,18,42)" fg:x="46449422" fg:w="35273304"/><text x="0.4228%" y="2031.50"></text></g><g><title>do_syscall_64 (33,025,587 samples, 0.12%)</title><rect x="0.1812%" y="2005" width="0.1229%" height="15" fill="rgb(241,131,45)" fg:x="48697139" fg:w="33025587"/><text x="0.4312%" y="2015.50"></text></g><g><title>__GI___getdents64 (42,470,910 samples, 0.16%)</title><rect x="0.1728%" y="2037" width="0.1580%" height="15" fill="rgb(249,31,29)" fg:x="46449422" fg:w="42470910"/><text x="0.4228%" y="2047.50"></text></g><g><title>entry_ibpb (7,197,606 samples, 0.03%)</title><rect x="0.3040%" y="2021" width="0.0268%" height="15" fill="rgb(225,111,53)" fg:x="81722726" fg:w="7197606"/><text x="0.5540%" y="2031.50"></text></g><g><title>__GI___readdir64 (3,717,419 samples, 0.01%)</title><rect x="0.3308%" y="2037" width="0.0138%" height="15" fill="rgb(238,160,17)" fg:x="88920332" fg:w="3717419"/><text x="0.5808%" y="2047.50"></text></g><g><title>__fput (13,576,023 samples, 0.05%)</title><rect x="0.3647%" y="1941" width="0.0505%" height="15" fill="rgb(214,148,48)" fg:x="98017225" fg:w="13576023"/><text x="0.6147%" y="1951.50"></text></g><g><title>single_release (6,002,022 samples, 0.02%)</title><rect x="0.3928%" y="1925" width="0.0223%" height="15" fill="rgb(232,36,49)" fg:x="105591226" fg:w="6002022"/><text x="0.6428%" y="1935.50"></text></g><g><title>kvfree (3,723,142 samples, 0.01%)</title><rect x="0.4013%" y="1909" width="0.0139%" height="15" fill="rgb(209,103,24)" fg:x="107870106" fg:w="3723142"/><text x="0.6513%" y="1919.50"></text></g><g><title>kfree (3,723,142 samples, 0.01%)</title><rect x="0.4013%" y="1893" width="0.0139%" height="15" fill="rgb(229,88,8)" fg:x="107870106" fg:w="3723142"/><text x="0.6513%" y="1903.50"></text></g><g><title>__kmem_cache_free (2,959,303 samples, 0.01%)</title><rect x="0.4042%" y="1877" width="0.0110%" height="15" fill="rgb(213,181,19)" fg:x="108633945" fg:w="2959303"/><text x="0.6542%" y="1887.50"></text></g><g><title>memcg_slab_free_hook (2,959,303 samples, 0.01%)</title><rect x="0.4042%" y="1861" width="0.0110%" height="15" fill="rgb(254,191,54)" fg:x="108633945" fg:w="2959303"/><text x="0.6542%" y="1871.50"></text></g><g><title>obj_cgroup_uncharge (2,959,303 samples, 0.01%)</title><rect x="0.4042%" y="1845" width="0.0110%" height="15" fill="rgb(241,83,37)" fg:x="108633945" fg:w="2959303"/><text x="0.6542%" y="1855.50"></text></g><g><title>refill_obj_stock (2,959,303 samples, 0.01%)</title><rect x="0.4042%" y="1829" width="0.0110%" height="15" fill="rgb(233,36,39)" fg:x="108633945" fg:w="2959303"/><text x="0.6542%" y="1839.50"></text></g><g><title>__x64_sys_close (18,216,937 samples, 0.07%)</title><rect x="0.3504%" y="1989" width="0.0678%" height="15" fill="rgb(226,3,54)" fg:x="94171338" fg:w="18216937"/><text x="0.6004%" y="1999.50"></text></g><g><title>__se_sys_close (18,216,937 samples, 0.07%)</title><rect x="0.3504%" y="1973" width="0.0678%" height="15" fill="rgb(245,192,40)" fg:x="94171338" fg:w="18216937"/><text x="0.6004%" y="1983.50"></text></g><g><title>__fput_sync (15,170,450 samples, 0.06%)</title><rect x="0.3617%" y="1957" width="0.0564%" height="15" fill="rgb(238,167,29)" fg:x="97217825" fg:w="15170450"/><text x="0.6117%" y="1967.50"></text></g><g><title>entry_SYSCALL_64 (21,141,811 samples, 0.08%)</title><rect x="0.3474%" y="2021" width="0.0787%" height="15" fill="rgb(232,182,51)" fg:x="93386409" fg:w="21141811"/><text x="0.5974%" y="2031.50"></text></g><g><title>do_syscall_64 (20,356,882 samples, 0.08%)</title><rect x="0.3504%" y="2005" width="0.0757%" height="15" fill="rgb(231,60,39)" fg:x="94171338" fg:w="20356882"/><text x="0.6004%" y="2015.50"></text></g><g><title>__close (27,692,029 samples, 0.10%)</title><rect x="0.3447%" y="2037" width="0.1030%" height="15" fill="rgb(208,69,12)" fg:x="92637751" fg:w="27692029"/><text x="0.5947%" y="2047.50"></text></g><g><title>entry_ibpb (5,801,560 samples, 0.02%)</title><rect x="0.4261%" y="2021" width="0.0216%" height="15" fill="rgb(235,93,37)" fg:x="114528220" fg:w="5801560"/><text x="0.6761%" y="2031.50"></text></g><g><title>__fput (5,571,302 samples, 0.02%)</title><rect x="0.4533%" y="1941" width="0.0207%" height="15" fill="rgb(213,116,39)" fg:x="121840788" fg:w="5571302"/><text x="0.7033%" y="1951.50"></text></g><g><title>__fput_sync (6,288,633 samples, 0.02%)</title><rect x="0.4533%" y="1957" width="0.0234%" height="15" fill="rgb(222,207,29)" fg:x="121840788" fg:w="6288633"/><text x="0.7033%" y="1967.50"></text></g><g><title>entry_SYSCALL_64 (9,407,791 samples, 0.04%)</title><rect x="0.4477%" y="2021" width="0.0350%" height="15" fill="rgb(206,96,30)" fg:x="120329780" fg:w="9407791"/><text x="0.6977%" y="2031.50"></text></g><g><title>do_syscall_64 (8,641,777 samples, 0.03%)</title><rect x="0.4505%" y="2005" width="0.0322%" height="15" fill="rgb(218,138,4)" fg:x="121095794" fg:w="8641777"/><text x="0.7005%" y="2015.50"></text></g><g><title>__x64_sys_close (8,641,777 samples, 0.03%)</title><rect x="0.4505%" y="1989" width="0.0322%" height="15" fill="rgb(250,191,14)" fg:x="121095794" fg:w="8641777"/><text x="0.7005%" y="1999.50"></text></g><g><title>__se_sys_close (8,641,777 samples, 0.03%)</title><rect x="0.4505%" y="1973" width="0.0322%" height="15" fill="rgb(239,60,40)" fg:x="121095794" fg:w="8641777"/><text x="0.7005%" y="1983.50"></text></g><g><title>__close_nocancel (12,572,208 samples, 0.05%)</title><rect x="0.4477%" y="2037" width="0.0468%" height="15" fill="rgb(206,27,48)" fg:x="120329780" fg:w="12572208"/><text x="0.6977%" y="2047.50"></text></g><g><title>entry_ibpb (3,164,417 samples, 0.01%)</title><rect x="0.4827%" y="2021" width="0.0118%" height="15" fill="rgb(225,35,8)" fg:x="129737571" fg:w="3164417"/><text x="0.7327%" y="2031.50"></text></g><g><title>memcg_slab_post_alloc_hook (3,386,747 samples, 0.01%)</title><rect x="0.5968%" y="1893" width="0.0126%" height="15" fill="rgb(250,213,24)" fg:x="160418272" fg:w="3386747"/><text x="0.8468%" y="1903.50"></text></g><g><title>kmem_cache_alloc (10,442,698 samples, 0.04%)</title><rect x="0.5732%" y="1909" width="0.0389%" height="15" fill="rgb(247,123,22)" fg:x="154076454" fg:w="10442698"/><text x="0.8232%" y="1919.50"></text></g><g><title>alloc_empty_file (22,218,106 samples, 0.08%)</title><rect x="0.5654%" y="1925" width="0.0827%" height="15" fill="rgb(231,138,38)" fg:x="151962726" fg:w="22218106"/><text x="0.8154%" y="1935.50"></text></g><g><title>security_file_alloc (7,460,820 samples, 0.03%)</title><rect x="0.6203%" y="1909" width="0.0278%" height="15" fill="rgb(231,145,46)" fg:x="166720012" fg:w="7460820"/><text x="0.8703%" y="1919.50"></text></g><g><title>memset_orig (3,676,301 samples, 0.01%)</title><rect x="0.6344%" y="1893" width="0.0137%" height="15" fill="rgb(251,118,11)" fg:x="170504531" fg:w="3676301"/><text x="0.8844%" y="1903.50"></text></g><g><title>d_alloc_parallel (2,974,684 samples, 0.01%)</title><rect x="0.6507%" y="1925" width="0.0111%" height="15" fill="rgb(217,147,25)" fg:x="174900957" fg:w="2974684"/><text x="0.9007%" y="1935.50"></text></g><g><title>path_lookupat (13,510,301 samples, 0.05%)</title><rect x="0.6646%" y="1909" width="0.0503%" height="15" fill="rgb(247,81,37)" fg:x="178639673" fg:w="13510301"/><text x="0.9146%" y="1919.50"></text></g><g><title>walk_component (3,590,452 samples, 0.01%)</title><rect x="0.7015%" y="1893" width="0.0134%" height="15" fill="rgb(209,12,38)" fg:x="188559522" fg:w="3590452"/><text x="0.9515%" y="1903.50"></text></g><g><title>lookup_fast (3,590,452 samples, 0.01%)</title><rect x="0.7015%" y="1877" width="0.0134%" height="15" fill="rgb(227,1,9)" fg:x="188559522" fg:w="3590452"/><text x="0.9515%" y="1887.50"></text></g><g><title>do_o_path (14,865,099 samples, 0.06%)</title><rect x="0.6646%" y="1925" width="0.0553%" height="15" fill="rgb(248,47,43)" fg:x="178639673" fg:w="14865099"/><text x="0.9146%" y="1935.50"></text></g><g><title>link_path_walk (3,587,706 samples, 0.01%)</title><rect x="0.7227%" y="1925" width="0.0133%" height="15" fill="rgb(221,10,30)" fg:x="194254526" fg:w="3587706"/><text x="0.9727%" y="1935.50"></text></g><g><title>inode_permission (2,944,204 samples, 0.01%)</title><rect x="0.7251%" y="1909" width="0.0110%" height="15" fill="rgb(210,229,1)" fg:x="194898028" fg:w="2944204"/><text x="0.9751%" y="1919.50"></text></g><g><title>proc_pid_permission (2,944,204 samples, 0.01%)</title><rect x="0.7251%" y="1893" width="0.0110%" height="15" fill="rgb(222,148,37)" fg:x="194898028" fg:w="2944204"/><text x="0.9751%" y="1903.50"></text></g><g><title>pid_revalidate (3,575,795 samples, 0.01%)</title><rect x="0.7461%" y="1909" width="0.0133%" height="15" fill="rgb(234,67,33)" fg:x="200532547" fg:w="3575795"/><text x="0.9961%" y="1919.50"></text></g><g><title>lookup_fast (7,711,293 samples, 0.03%)</title><rect x="0.7361%" y="1925" width="0.0287%" height="15" fill="rgb(247,98,35)" fg:x="197842232" fg:w="7711293"/><text x="0.9861%" y="1935.50"></text></g><g><title>path_init (4,492,793 samples, 0.02%)</title><rect x="0.7648%" y="1925" width="0.0167%" height="15" fill="rgb(247,138,52)" fg:x="205553525" fg:w="4492793"/><text x="1.0148%" y="1935.50"></text></g><g><title>terminate_walk (3,839,244 samples, 0.01%)</title><rect x="0.7927%" y="1925" width="0.0143%" height="15" fill="rgb(213,79,30)" fg:x="213073702" fg:w="3839244"/><text x="1.0427%" y="1935.50"></text></g><g><title>proc_single_open (3,027,464 samples, 0.01%)</title><rect x="0.8147%" y="1893" width="0.0113%" height="15" fill="rgb(246,177,23)" fg:x="218973091" fg:w="3027464"/><text x="1.0647%" y="1903.50"></text></g><g><title>single_open (3,027,464 samples, 0.01%)</title><rect x="0.8147%" y="1877" width="0.0113%" height="15" fill="rgb(230,62,27)" fg:x="218973091" fg:w="3027464"/><text x="1.0647%" y="1887.50"></text></g><g><title>path_openat (78,957,166 samples, 0.29%)</title><rect x="0.5378%" y="1941" width="0.2938%" height="15" fill="rgb(216,154,8)" fg:x="144549444" fg:w="78957166"/><text x="0.7878%" y="1951.50"></text></g><g><title>vfs_open (6,593,664 samples, 0.02%)</title><rect x="0.8070%" y="1925" width="0.0245%" height="15" fill="rgb(244,35,45)" fg:x="216912946" fg:w="6593664"/><text x="1.0570%" y="1935.50"></text></g><g><title>do_dentry_open (5,910,973 samples, 0.02%)</title><rect x="0.8096%" y="1909" width="0.0220%" height="15" fill="rgb(251,115,12)" fg:x="217595637" fg:w="5910973"/><text x="1.0596%" y="1919.50"></text></g><g><title>do_filp_open (81,760,393 samples, 0.30%)</title><rect x="0.5294%" y="1957" width="0.3042%" height="15" fill="rgb(240,54,50)" fg:x="142302190" fg:w="81760393"/><text x="0.7794%" y="1967.50"></text></g><g><title>get_unused_fd_flags (5,106,436 samples, 0.02%)</title><rect x="0.8336%" y="1957" width="0.0190%" height="15" fill="rgb(233,84,52)" fg:x="224062583" fg:w="5106436"/><text x="1.0836%" y="1967.50"></text></g><g><title>alloc_fd (2,910,879 samples, 0.01%)</title><rect x="0.8418%" y="1941" width="0.0108%" height="15" fill="rgb(207,117,47)" fg:x="226258140" fg:w="2910879"/><text x="1.0918%" y="1951.50"></text></g><g><title>memset_orig (5,195,658 samples, 0.02%)</title><rect x="0.8961%" y="1925" width="0.0193%" height="15" fill="rgb(249,43,39)" fg:x="240863455" fg:w="5195658"/><text x="1.1461%" y="1935.50"></text></g><g><title>check_heap_object (6,277,872 samples, 0.02%)</title><rect x="0.9266%" y="1893" width="0.0234%" height="15" fill="rgb(209,38,44)" fg:x="249055360" fg:w="6277872"/><text x="1.1766%" y="1903.50"></text></g><g><title>__check_object_size (7,761,799 samples, 0.03%)</title><rect x="0.9240%" y="1909" width="0.0289%" height="15" fill="rgb(236,212,23)" fg:x="248366495" fg:w="7761799"/><text x="1.1740%" y="1919.50"></text></g><g><title>getname_flags (27,230,079 samples, 0.10%)</title><rect x="0.8547%" y="1941" width="0.1013%" height="15" fill="rgb(242,79,21)" fg:x="229730737" fg:w="27230079"/><text x="1.1047%" y="1951.50"></text></g><g><title>strncpy_from_user (10,901,703 samples, 0.04%)</title><rect x="0.9155%" y="1925" width="0.0406%" height="15" fill="rgb(211,96,35)" fg:x="246059113" fg:w="10901703"/><text x="1.1655%" y="1935.50"></text></g><g><title>getname (28,557,513 samples, 0.11%)</title><rect x="0.8526%" y="1957" width="0.1062%" height="15" fill="rgb(253,215,40)" fg:x="229169019" fg:w="28557513"/><text x="1.1026%" y="1967.50"></text></g><g><title>do_sys_openat2 (122,232,669 samples, 0.45%)</title><rect x="0.5184%" y="1973" width="0.4548%" height="15" fill="rgb(211,81,21)" fg:x="139343913" fg:w="122232669"/><text x="0.7684%" y="1983.50"></text></g><g><title>__x64_sys_openat (125,802,100 samples, 0.47%)</title><rect x="0.5158%" y="1989" width="0.4680%" height="15" fill="rgb(208,190,38)" fg:x="138629393" fg:w="125802100"/><text x="0.7658%" y="1999.50"></text></g><g><title>exit_to_user_mode_prepare (6,727,036 samples, 0.03%)</title><rect x="0.9838%" y="1973" width="0.0250%" height="15" fill="rgb(235,213,38)" fg:x="264431493" fg:w="6727036"/><text x="1.2338%" y="1983.50"></text></g><g><title>exit_to_user_mode_loop (4,551,971 samples, 0.02%)</title><rect x="0.9919%" y="1957" width="0.0169%" height="15" fill="rgb(237,122,38)" fg:x="266606558" fg:w="4551971"/><text x="1.2419%" y="1967.50"></text></g><g><title>task_work_run (3,083,322 samples, 0.01%)</title><rect x="0.9974%" y="1941" width="0.0115%" height="15" fill="rgb(244,218,35)" fg:x="268075207" fg:w="3083322"/><text x="1.2474%" y="1951.50"></text></g><g><title>entry_SYSCALL_64 (136,844,890 samples, 0.51%)</title><rect x="0.5051%" y="2021" width="0.5091%" height="15" fill="rgb(240,68,47)" fg:x="135751148" fg:w="136844890"/><text x="0.7551%" y="2031.50"></text></g><g><title>do_syscall_64 (136,101,778 samples, 0.51%)</title><rect x="0.5078%" y="2005" width="0.5064%" height="15" fill="rgb(210,16,53)" fg:x="136494260" fg:w="136101778"/><text x="0.7578%" y="2015.50"></text></g><g><title>syscall_exit_to_user_mode (8,164,545 samples, 0.03%)</title><rect x="0.9838%" y="1989" width="0.0304%" height="15" fill="rgb(235,124,12)" fg:x="264431493" fg:w="8164545"/><text x="1.2338%" y="1999.50"></text></g><g><title>entry_ibpb (17,856,831 samples, 0.07%)</title><rect x="1.0142%" y="2021" width="0.0664%" height="15" fill="rgb(224,169,11)" fg:x="272596038" fg:w="17856831"/><text x="1.2642%" y="2031.50"></text></g><g><title>__libc_openat64 (156,885,451 samples, 0.58%)</title><rect x="0.4997%" y="2037" width="0.5837%" height="15" fill="rgb(250,166,2)" fg:x="134321418" fg:w="156885451"/><text x="0.7497%" y="2047.50"></text></g><g><title>security_file_permission (4,426,036 samples, 0.02%)</title><rect x="1.1242%" y="1941" width="0.0165%" height="15" fill="rgb(242,216,29)" fg:x="302161643" fg:w="4426036"/><text x="1.3742%" y="1951.50"></text></g><g><title>apparmor_file_permission (3,716,055 samples, 0.01%)</title><rect x="1.1268%" y="1925" width="0.0138%" height="15" fill="rgb(230,116,27)" fg:x="302871624" fg:w="3716055"/><text x="1.3768%" y="1935.50"></text></g><g><title>common_file_perm (2,936,539 samples, 0.01%)</title><rect x="1.1297%" y="1909" width="0.0109%" height="15" fill="rgb(228,99,48)" fg:x="303651140" fg:w="2936539"/><text x="1.3797%" y="1919.50"></text></g><g><title>__check_object_size (3,048,286 samples, 0.01%)</title><rect x="1.1516%" y="1909" width="0.0113%" height="15" fill="rgb(253,11,6)" fg:x="309544666" fg:w="3048286"/><text x="1.4016%" y="1919.50"></text></g><g><title>memcg_slab_post_alloc_hook (5,174,778 samples, 0.02%)</title><rect x="1.1713%" y="1861" width="0.0193%" height="15" fill="rgb(247,143,39)" fg:x="314819114" fg:w="5174778"/><text x="1.4213%" y="1871.50"></text></g><g><title>mod_objcg_state (3,673,024 samples, 0.01%)</title><rect x="1.1769%" y="1845" width="0.0137%" height="15" fill="rgb(236,97,10)" fg:x="316320868" fg:w="3673024"/><text x="1.4269%" y="1855.50"></text></g><g><title>__kmem_cache_alloc_node (8,232,818 samples, 0.03%)</title><rect x="1.1656%" y="1877" width="0.0306%" height="15" fill="rgb(233,208,19)" fg:x="313283710" fg:w="8232818"/><text x="1.4156%" y="1887.50"></text></g><g><title>__kmalloc_node (10,455,018 samples, 0.04%)</title><rect x="1.1656%" y="1893" width="0.0389%" height="15" fill="rgb(216,164,2)" fg:x="313283710" fg:w="10455018"/><text x="1.4156%" y="1903.50"></text></g><g><title>kvmalloc_node (11,208,389 samples, 0.04%)</title><rect x="1.1656%" y="1909" width="0.0417%" height="15" fill="rgb(220,129,5)" fg:x="313283710" fg:w="11208389"/><text x="1.4156%" y="1919.50"></text></g><g><title>proc_pid_statm (3,706,363 samples, 0.01%)</title><rect x="1.2214%" y="1893" width="0.0138%" height="15" fill="rgb(242,17,10)" fg:x="328303827" fg:w="3706363"/><text x="1.4714%" y="1903.50"></text></g><g><title>proc_tgid_stat (4,245,532 samples, 0.02%)</title><rect x="1.2352%" y="1893" width="0.0158%" height="15" fill="rgb(242,107,0)" fg:x="332010190" fg:w="4245532"/><text x="1.4852%" y="1903.50"></text></g><g><title>do_task_stat (4,245,532 samples, 0.02%)</title><rect x="1.2352%" y="1877" width="0.0158%" height="15" fill="rgb(251,28,31)" fg:x="332010190" fg:w="4245532"/><text x="1.4852%" y="1887.50"></text></g><g><title>do_task_stat (10,801,087 samples, 0.04%)</title><rect x="1.2510%" y="1877" width="0.0402%" height="15" fill="rgb(233,223,10)" fg:x="336255722" fg:w="10801087"/><text x="1.5010%" y="1887.50"></text></g><g><title>seq_put_decimal_ull (2,834,797 samples, 0.01%)</title><rect x="1.2807%" y="1861" width="0.0105%" height="15" fill="rgb(215,21,27)" fg:x="344222012" fg:w="2834797"/><text x="1.5307%" y="1871.50"></text></g><g><title>num_to_str (2,834,797 samples, 0.01%)</title><rect x="1.2807%" y="1845" width="0.0105%" height="15" fill="rgb(232,23,21)" fg:x="344222012" fg:w="2834797"/><text x="1.5307%" y="1855.50"></text></g><g><title>proc_tid_stat (11,577,702 samples, 0.04%)</title><rect x="1.2510%" y="1893" width="0.0431%" height="15" fill="rgb(244,5,23)" fg:x="336255722" fg:w="11577702"/><text x="1.5010%" y="1903.50"></text></g><g><title>seq_read_iter (40,516,025 samples, 0.15%)</title><rect x="1.1461%" y="1925" width="0.1507%" height="15" fill="rgb(226,81,46)" fg:x="308053070" fg:w="40516025"/><text x="1.3961%" y="1935.50"></text></g><g><title>proc_single_show (24,076,996 samples, 0.09%)</title><rect x="1.2073%" y="1909" width="0.0896%" height="15" fill="rgb(247,70,30)" fg:x="324492099" fg:w="24076996"/><text x="1.4573%" y="1919.50"></text></g><g><title>__x64_sys_read (55,189,241 samples, 0.21%)</title><rect x="1.0971%" y="1989" width="0.2053%" height="15" fill="rgb(212,68,19)" fg:x="294880227" fg:w="55189241"/><text x="1.3471%" y="1999.50"></text></g><g><title>ksys_read (55,189,241 samples, 0.21%)</title><rect x="1.0971%" y="1973" width="0.2053%" height="15" fill="rgb(240,187,13)" fg:x="294880227" fg:w="55189241"/><text x="1.3471%" y="1983.50"></text></g><g><title>vfs_read (52,130,839 samples, 0.19%)</title><rect x="1.1085%" y="1957" width="0.1940%" height="15" fill="rgb(223,113,26)" fg:x="297938629" fg:w="52130839"/><text x="1.3585%" y="1967.50"></text></g><g><title>seq_read (43,481,789 samples, 0.16%)</title><rect x="1.1406%" y="1941" width="0.1618%" height="15" fill="rgb(206,192,2)" fg:x="306587679" fg:w="43481789"/><text x="1.3906%" y="1951.50"></text></g><g><title>entry_SYSCALL_64 (58,108,528 samples, 0.22%)</title><rect x="1.0945%" y="2021" width="0.2162%" height="15" fill="rgb(241,108,4)" fg:x="294196158" fg:w="58108528"/><text x="1.3445%" y="2031.50"></text></g><g><title>do_syscall_64 (57,424,459 samples, 0.21%)</title><rect x="1.0971%" y="2005" width="0.2136%" height="15" fill="rgb(247,173,49)" fg:x="294880227" fg:w="57424459"/><text x="1.3471%" y="2015.50"></text></g><g><title>read (72,649,737 samples, 0.27%)</title><rect x="1.0917%" y="2037" width="0.2703%" height="15" fill="rgb(224,114,35)" fg:x="293422152" fg:w="72649737"/><text x="1.3417%" y="2047.50"></text></g><g><title>entry_ibpb (13,767,203 samples, 0.05%)</title><rect x="1.3107%" y="2021" width="0.0512%" height="15" fill="rgb(245,159,27)" fg:x="352304686" fg:w="13767203"/><text x="1.5607%" y="2031.50"></text></g><g><title>[unknown] (340,695,527 samples, 1.27%)</title><rect x="0.0972%" y="2053" width="1.2675%" height="15" fill="rgb(245,172,44)" fg:x="26123908" fg:w="340695527"/><text x="0.3472%" y="2063.50"></text></g><g><title>entry_SYSCALL_64 (3,609,354 samples, 0.01%)</title><rect x="1.3862%" y="2037" width="0.0134%" height="15" fill="rgb(236,23,11)" fg:x="372576521" fg:w="3609354"/><text x="1.6362%" y="2047.50"></text></g><g><title>entry_ibpb (6,173,718 samples, 0.02%)</title><rect x="1.3996%" y="2037" width="0.0230%" height="15" fill="rgb(205,117,38)" fg:x="376185875" fg:w="6173718"/><text x="1.6496%" y="2047.50"></text></g><g><title>__GI___fcntl64_nocancel (12,322,012 samples, 0.05%)</title><rect x="1.3789%" y="2053" width="0.0458%" height="15" fill="rgb(237,72,25)" fg:x="370640696" fg:w="12322012"/><text x="1.6289%" y="2063.50"></text></g><g><title>__x64_sys_newfstatat (7,801,706 samples, 0.03%)</title><rect x="1.4332%" y="2005" width="0.0290%" height="15" fill="rgb(244,70,9)" fg:x="385217065" fg:w="7801706"/><text x="1.6832%" y="2015.50"></text></g><g><title>__se_sys_newfstatat (7,801,706 samples, 0.03%)</title><rect x="1.4332%" y="1989" width="0.0290%" height="15" fill="rgb(217,125,39)" fg:x="385217065" fg:w="7801706"/><text x="1.6832%" y="1999.50"></text></g><g><title>vfs_fstatat (7,048,971 samples, 0.03%)</title><rect x="1.4360%" y="1973" width="0.0262%" height="15" fill="rgb(235,36,10)" fg:x="385969800" fg:w="7048971"/><text x="1.6860%" y="1983.50"></text></g><g><title>vfs_fstat (5,530,278 samples, 0.02%)</title><rect x="1.4416%" y="1957" width="0.0206%" height="15" fill="rgb(251,123,47)" fg:x="387488493" fg:w="5530278"/><text x="1.6916%" y="1967.50"></text></g><g><title>security_inode_getattr (3,385,675 samples, 0.01%)</title><rect x="1.4496%" y="1941" width="0.0126%" height="15" fill="rgb(221,13,13)" fg:x="389633096" fg:w="3385675"/><text x="1.6996%" y="1951.50"></text></g><g><title>entry_SYSCALL_64 (11,474,782 samples, 0.04%)</title><rect x="1.4277%" y="2037" width="0.0427%" height="15" fill="rgb(238,131,9)" fg:x="383733961" fg:w="11474782"/><text x="1.6777%" y="2047.50"></text></g><g><title>do_syscall_64 (10,699,913 samples, 0.04%)</title><rect x="1.4305%" y="2021" width="0.0398%" height="15" fill="rgb(211,50,8)" fg:x="384508830" fg:w="10699913"/><text x="1.6805%" y="2031.50"></text></g><g><title>__GI___fstatat64 (15,460,860 samples, 0.06%)</title><rect x="1.4248%" y="2053" width="0.0575%" height="15" fill="rgb(245,182,24)" fg:x="382962708" fg:w="15460860"/><text x="1.6748%" y="2063.50"></text></g><g><title>entry_ibpb (3,214,825 samples, 0.01%)</title><rect x="1.4704%" y="2037" width="0.0120%" height="15" fill="rgb(242,14,37)" fg:x="395208743" fg:w="3214825"/><text x="1.7204%" y="2047.50"></text></g><g><title>__fput (5,249,565 samples, 0.02%)</title><rect x="1.4964%" y="1957" width="0.0195%" height="15" fill="rgb(246,228,12)" fg:x="402197229" fg:w="5249565"/><text x="1.7464%" y="1967.50"></text></g><g><title>__x64_sys_close (5,940,726 samples, 0.02%)</title><rect x="1.4964%" y="2005" width="0.0221%" height="15" fill="rgb(213,55,15)" fg:x="402197229" fg:w="5940726"/><text x="1.7464%" y="2015.50"></text></g><g><title>__se_sys_close (5,940,726 samples, 0.02%)</title><rect x="1.4964%" y="1989" width="0.0221%" height="15" fill="rgb(209,9,3)" fg:x="402197229" fg:w="5940726"/><text x="1.7464%" y="1999.50"></text></g><g><title>__fput_sync (5,940,726 samples, 0.02%)</title><rect x="1.4964%" y="1973" width="0.0221%" height="15" fill="rgb(230,59,30)" fg:x="402197229" fg:w="5940726"/><text x="1.7464%" y="1983.50"></text></g><g><title>entry_SYSCALL_64 (9,016,921 samples, 0.03%)</title><rect x="1.4936%" y="2037" width="0.0335%" height="15" fill="rgb(209,121,21)" fg:x="401456530" fg:w="9016921"/><text x="1.7436%" y="2047.50"></text></g><g><title>do_syscall_64 (9,016,921 samples, 0.03%)</title><rect x="1.4936%" y="2021" width="0.0335%" height="15" fill="rgb(220,109,13)" fg:x="401456530" fg:w="9016921"/><text x="1.7436%" y="2031.50"></text></g><g><title>__close (14,883,963 samples, 0.06%)</title><rect x="1.4909%" y="2053" width="0.0554%" height="15" fill="rgb(232,18,1)" fg:x="400741561" fg:w="14883963"/><text x="1.7409%" y="2063.50"></text></g><g><title>entry_ibpb (5,152,073 samples, 0.02%)</title><rect x="1.5271%" y="2037" width="0.0192%" height="15" fill="rgb(215,41,42)" fg:x="410473451" fg:w="5152073"/><text x="1.7771%" y="2047.50"></text></g><g><title>kmem_cache_free (3,775,429 samples, 0.01%)</title><rect x="1.5626%" y="1925" width="0.0140%" height="15" fill="rgb(224,123,36)" fg:x="419994806" fg:w="3775429"/><text x="1.8126%" y="1935.50"></text></g><g><title>__x64_sys_close (10,341,868 samples, 0.04%)</title><rect x="1.5491%" y="2005" width="0.0385%" height="15" fill="rgb(240,125,3)" fg:x="416361935" fg:w="10341868"/><text x="1.7991%" y="2015.50"></text></g><g><title>__se_sys_close (10,341,868 samples, 0.04%)</title><rect x="1.5491%" y="1989" width="0.0385%" height="15" fill="rgb(205,98,50)" fg:x="416361935" fg:w="10341868"/><text x="1.7991%" y="1999.50"></text></g><g><title>__fput_sync (10,341,868 samples, 0.04%)</title><rect x="1.5491%" y="1973" width="0.0385%" height="15" fill="rgb(205,185,37)" fg:x="416361935" fg:w="10341868"/><text x="1.7991%" y="1983.50"></text></g><g><title>__fput (10,341,868 samples, 0.04%)</title><rect x="1.5491%" y="1957" width="0.0385%" height="15" fill="rgb(238,207,15)" fg:x="416361935" fg:w="10341868"/><text x="1.7991%" y="1967.50"></text></g><g><title>single_release (7,487,102 samples, 0.03%)</title><rect x="1.5597%" y="1941" width="0.0279%" height="15" fill="rgb(213,199,42)" fg:x="419216701" fg:w="7487102"/><text x="1.8097%" y="1951.50"></text></g><g><title>kvfree (2,933,568 samples, 0.01%)</title><rect x="1.5766%" y="1925" width="0.0109%" height="15" fill="rgb(235,201,11)" fg:x="423770235" fg:w="2933568"/><text x="1.8266%" y="1935.50"></text></g><g><title>kfree (2,933,568 samples, 0.01%)</title><rect x="1.5766%" y="1909" width="0.0109%" height="15" fill="rgb(207,46,11)" fg:x="423770235" fg:w="2933568"/><text x="1.8266%" y="1919.50"></text></g><g><title>entry_SYSCALL_64 (11,833,858 samples, 0.04%)</title><rect x="1.5491%" y="2037" width="0.0440%" height="15" fill="rgb(241,35,35)" fg:x="416361935" fg:w="11833858"/><text x="1.7991%" y="2047.50"></text></g><g><title>do_syscall_64 (11,833,858 samples, 0.04%)</title><rect x="1.5491%" y="2021" width="0.0440%" height="15" fill="rgb(243,32,47)" fg:x="416361935" fg:w="11833858"/><text x="1.7991%" y="2031.50"></text></g><g><title>__close_nocancel (16,990,079 samples, 0.06%)</title><rect x="1.5463%" y="2053" width="0.0632%" height="15" fill="rgb(247,202,23)" fg:x="415625524" fg:w="16990079"/><text x="1.7963%" y="2063.50"></text></g><g><title>entry_ibpb (4,419,810 samples, 0.02%)</title><rect x="1.5931%" y="2037" width="0.0164%" height="15" fill="rgb(219,102,11)" fg:x="428195793" fg:w="4419810"/><text x="1.8431%" y="2047.50"></text></g><g><title>entry_SYSCALL_64 (3,745,036 samples, 0.01%)</title><rect x="1.6123%" y="2037" width="0.0139%" height="15" fill="rgb(243,110,44)" fg:x="433365626" fg:w="3745036"/><text x="1.8623%" y="2047.50"></text></g><g><title>__fcntl64_nocancel_adjusted (5,906,130 samples, 0.02%)</title><rect x="1.6123%" y="2053" width="0.0220%" height="15" fill="rgb(222,74,54)" fg:x="433365626" fg:w="5906130"/><text x="1.8623%" y="2063.50"></text></g><g><title>__isoc99_fscanf (5,135,206 samples, 0.02%)</title><rect x="1.6343%" y="2053" width="0.0191%" height="15" fill="rgb(216,99,12)" fg:x="439271756" fg:w="5135206"/><text x="1.8843%" y="2063.50"></text></g><g><title>__vfscanf_internal (4,340,010 samples, 0.02%)</title><rect x="1.6372%" y="2037" width="0.0161%" height="15" fill="rgb(226,22,26)" fg:x="440066952" fg:w="4340010"/><text x="1.8872%" y="2047.50"></text></g><g><title>do_filp_open (10,876,150 samples, 0.04%)</title><rect x="1.6618%" y="1973" width="0.0405%" height="15" fill="rgb(217,163,10)" fg:x="446660479" fg:w="10876150"/><text x="1.9118%" y="1983.50"></text></g><g><title>path_openat (10,876,150 samples, 0.04%)</title><rect x="1.6618%" y="1957" width="0.0405%" height="15" fill="rgb(213,25,53)" fg:x="446660479" fg:w="10876150"/><text x="1.9118%" y="1967.50"></text></g><g><title>vfs_open (3,032,509 samples, 0.01%)</title><rect x="1.6910%" y="1941" width="0.0113%" height="15" fill="rgb(252,105,26)" fg:x="454504120" fg:w="3032509"/><text x="1.9410%" y="1951.50"></text></g><g><title>do_dentry_open (3,032,509 samples, 0.01%)</title><rect x="1.6910%" y="1925" width="0.0113%" height="15" fill="rgb(220,39,43)" fg:x="454504120" fg:w="3032509"/><text x="1.9410%" y="1935.50"></text></g><g><title>entry_SYSCALL_64 (17,531,448 samples, 0.07%)</title><rect x="1.6534%" y="2037" width="0.0652%" height="15" fill="rgb(229,68,48)" fg:x="444406962" fg:w="17531448"/><text x="1.9034%" y="2047.50"></text></g><g><title>do_syscall_64 (15,277,931 samples, 0.06%)</title><rect x="1.6618%" y="2021" width="0.0568%" height="15" fill="rgb(252,8,32)" fg:x="446660479" fg:w="15277931"/><text x="1.9118%" y="2031.50"></text></g><g><title>__x64_sys_openat (15,277,931 samples, 0.06%)</title><rect x="1.6618%" y="2005" width="0.0568%" height="15" fill="rgb(223,20,43)" fg:x="446660479" fg:w="15277931"/><text x="1.9118%" y="2015.50"></text></g><g><title>do_sys_openat2 (15,277,931 samples, 0.06%)</title><rect x="1.6618%" y="1989" width="0.0568%" height="15" fill="rgb(229,81,49)" fg:x="446660479" fg:w="15277931"/><text x="1.9118%" y="1999.50"></text></g><g><title>getname (3,011,020 samples, 0.01%)</title><rect x="1.7074%" y="1973" width="0.0112%" height="15" fill="rgb(236,28,36)" fg:x="458927390" fg:w="3011020"/><text x="1.9574%" y="1983.50"></text></g><g><title>getname_flags (3,011,020 samples, 0.01%)</title><rect x="1.7074%" y="1957" width="0.0112%" height="15" fill="rgb(249,185,26)" fg:x="458927390" fg:w="3011020"/><text x="1.9574%" y="1967.50"></text></g><g><title>__libc_openat64 (19,070,453 samples, 0.07%)</title><rect x="1.6534%" y="2053" width="0.0710%" height="15" fill="rgb(249,174,33)" fg:x="444406962" fg:w="19070453"/><text x="1.9034%" y="2063.50"></text></g><g><title>htop (446,245,836 samples, 1.66%)</title><rect x="0.0860%" y="2069" width="1.6602%" height="15" fill="rgb(233,201,37)" fg:x="23127253" fg:w="446245836"/><text x="0.3360%" y="2079.50"></text></g><g><title>entry_SYSCALL_64 (3,176,447 samples, 0.01%)</title><rect x="1.7507%" y="2021" width="0.0118%" height="15" fill="rgb(221,78,26)" fg:x="470554965" fg:w="3176447"/><text x="2.0007%" y="2031.50"></text></g><g><title>do_syscall_64 (3,176,447 samples, 0.01%)</title><rect x="1.7507%" y="2005" width="0.0118%" height="15" fill="rgb(250,127,30)" fg:x="470554965" fg:w="3176447"/><text x="2.0007%" y="2015.50"></text></g><g><title>__x64_sys_openat (3,176,447 samples, 0.01%)</title><rect x="1.7507%" y="1989" width="0.0118%" height="15" fill="rgb(230,49,44)" fg:x="470554965" fg:w="3176447"/><text x="2.0007%" y="1999.50"></text></g><g><title>do_sys_openat2 (2,852,395 samples, 0.01%)</title><rect x="1.7519%" y="1973" width="0.0106%" height="15" fill="rgb(229,67,23)" fg:x="470879017" fg:w="2852395"/><text x="2.0019%" y="1983.50"></text></g><g><title>__GI___libc_open (4,283,759 samples, 0.02%)</title><rect x="1.7491%" y="2037" width="0.0159%" height="15" fill="rgb(249,83,47)" fg:x="470143306" fg:w="4283759"/><text x="1.9991%" y="2047.50"></text></g><g><title>__GI___libc_write (3,908,485 samples, 0.01%)</title><rect x="1.7651%" y="2037" width="0.0145%" height="15" fill="rgb(215,43,3)" fg:x="474427065" fg:w="3908485"/><text x="2.0151%" y="2047.50"></text></g><g><title>kernfs_seq_show (3,250,578 samples, 0.01%)</title><rect x="1.7923%" y="1909" width="0.0121%" height="15" fill="rgb(238,154,13)" fg:x="481748639" fg:w="3250578"/><text x="2.0423%" y="1919.50"></text></g><g><title>sysfs_kf_seq_show (2,784,354 samples, 0.01%)</title><rect x="1.7941%" y="1893" width="0.0104%" height="15" fill="rgb(219,56,2)" fg:x="482214863" fg:w="2784354"/><text x="2.0441%" y="1903.50"></text></g><g><title>dev_attr_show (2,784,354 samples, 0.01%)</title><rect x="1.7941%" y="1877" width="0.0104%" height="15" fill="rgb(233,0,4)" fg:x="482214863" fg:w="2784354"/><text x="2.0441%" y="1887.50"></text></g><g><title>part_stat_show (2,784,354 samples, 0.01%)</title><rect x="1.7941%" y="1861" width="0.0104%" height="15" fill="rgb(235,30,7)" fg:x="482214863" fg:w="2784354"/><text x="2.0441%" y="1871.50"></text></g><g><title>kernfs_fop_read_iter (5,466,426 samples, 0.02%)</title><rect x="1.7856%" y="1941" width="0.0203%" height="15" fill="rgb(250,79,13)" fg:x="479930495" fg:w="5466426"/><text x="2.0356%" y="1951.50"></text></g><g><title>seq_read_iter (4,362,576 samples, 0.02%)</title><rect x="1.7897%" y="1925" width="0.0162%" height="15" fill="rgb(211,146,34)" fg:x="481034345" fg:w="4362576"/><text x="2.0397%" y="1935.50"></text></g><g><title>[unknown] (18,345,907 samples, 0.07%)</title><rect x="1.7463%" y="2053" width="0.0683%" height="15" fill="rgb(228,22,38)" fg:x="469373089" fg:w="18345907"/><text x="1.9963%" y="2063.50"></text></g><g><title>read (8,176,104 samples, 0.03%)</title><rect x="1.7841%" y="2037" width="0.0304%" height="15" fill="rgb(235,168,5)" fg:x="479542892" fg:w="8176104"/><text x="2.0341%" y="2047.50"></text></g><g><title>entry_SYSCALL_64 (8,176,104 samples, 0.03%)</title><rect x="1.7841%" y="2021" width="0.0304%" height="15" fill="rgb(221,155,16)" fg:x="479542892" fg:w="8176104"/><text x="2.0341%" y="2031.50"></text></g><g><title>do_syscall_64 (8,176,104 samples, 0.03%)</title><rect x="1.7841%" y="2005" width="0.0304%" height="15" fill="rgb(215,215,53)" fg:x="479542892" fg:w="8176104"/><text x="2.0341%" y="2015.50"></text></g><g><title>__x64_sys_read (8,176,104 samples, 0.03%)</title><rect x="1.7841%" y="1989" width="0.0304%" height="15" fill="rgb(223,4,10)" fg:x="479542892" fg:w="8176104"/><text x="2.0341%" y="1999.50"></text></g><g><title>ksys_read (8,176,104 samples, 0.03%)</title><rect x="1.7841%" y="1973" width="0.0304%" height="15" fill="rgb(234,103,6)" fg:x="479542892" fg:w="8176104"/><text x="2.0341%" y="1983.50"></text></g><g><title>vfs_read (7,788,501 samples, 0.03%)</title><rect x="1.7856%" y="1957" width="0.0290%" height="15" fill="rgb(227,97,0)" fg:x="479930495" fg:w="7788501"/><text x="2.0356%" y="1967.50"></text></g><g><title>iostat (22,640,441 samples, 0.08%)</title><rect x="1.7463%" y="2069" width="0.0842%" height="15" fill="rgb(234,150,53)" fg:x="469373089" fg:w="22640441"/><text x="1.9963%" y="2079.50"></text></g><g><title>ata_qc_issue (4,364,851 samples, 0.02%)</title><rect x="1.8640%" y="1845" width="0.0162%" height="15" fill="rgb(228,201,54)" fg:x="501027732" fg:w="4364851"/><text x="2.1140%" y="1855.50"></text></g><g><title>dma_map_sg_attrs (4,364,851 samples, 0.02%)</title><rect x="1.8640%" y="1829" width="0.0162%" height="15" fill="rgb(222,22,37)" fg:x="501027732" fg:w="4364851"/><text x="2.1140%" y="1839.50"></text></g><g><title>__dma_map_sg_attrs (4,364,851 samples, 0.02%)</title><rect x="1.8640%" y="1813" width="0.0162%" height="15" fill="rgb(237,53,32)" fg:x="501027732" fg:w="4364851"/><text x="2.1140%" y="1823.50"></text></g><g><title>iommu_dma_map_sg (4,364,851 samples, 0.02%)</title><rect x="1.8640%" y="1797" width="0.0162%" height="15" fill="rgb(233,25,53)" fg:x="501027732" fg:w="4364851"/><text x="2.1140%" y="1807.50"></text></g><g><title>iommu_map_sg (3,123,711 samples, 0.01%)</title><rect x="1.8687%" y="1781" width="0.0116%" height="15" fill="rgb(210,40,34)" fg:x="502268872" fg:w="3123711"/><text x="2.1187%" y="1791.50"></text></g><g><title>__iommu_map (3,123,711 samples, 0.01%)</title><rect x="1.8687%" y="1765" width="0.0116%" height="15" fill="rgb(241,220,44)" fg:x="502268872" fg:w="3123711"/><text x="2.1187%" y="1775.50"></text></g><g><title>__iommu_map_pages (3,123,711 samples, 0.01%)</title><rect x="1.8687%" y="1749" width="0.0116%" height="15" fill="rgb(235,28,35)" fg:x="502268872" fg:w="3123711"/><text x="2.1187%" y="1759.50"></text></g><g><title>__ata_scsi_queuecmd (5,116,398 samples, 0.02%)</title><rect x="1.8626%" y="1861" width="0.0190%" height="15" fill="rgb(210,56,17)" fg:x="500642880" fg:w="5116398"/><text x="2.1126%" y="1871.50"></text></g><g><title>scsi_dispatch_cmd (5,466,107 samples, 0.02%)</title><rect x="1.8626%" y="1893" width="0.0203%" height="15" fill="rgb(224,130,29)" fg:x="500642880" fg:w="5466107"/><text x="2.1126%" y="1903.50"></text></g><g><title>ata_scsi_queuecmd (5,466,107 samples, 0.02%)</title><rect x="1.8626%" y="1877" width="0.0203%" height="15" fill="rgb(235,212,8)" fg:x="500642880" fg:w="5466107"/><text x="2.1126%" y="1887.50"></text></g><g><title>blk_mq_dispatch_rq_list (6,964,441 samples, 0.03%)</title><rect x="1.8584%" y="1925" width="0.0259%" height="15" fill="rgb(223,33,50)" fg:x="499504347" fg:w="6964441"/><text x="2.1084%" y="1935.50"></text></g><g><title>scsi_queue_rq (6,964,441 samples, 0.03%)</title><rect x="1.8584%" y="1909" width="0.0259%" height="15" fill="rgb(219,149,13)" fg:x="499504347" fg:w="6964441"/><text x="2.1084%" y="1919.50"></text></g><g><title>blk_mq_run_work_fn (7,417,617 samples, 0.03%)</title><rect x="1.8584%" y="1973" width="0.0276%" height="15" fill="rgb(250,156,29)" fg:x="499504347" fg:w="7417617"/><text x="2.1084%" y="1983.50"></text></g><g><title>blk_mq_sched_dispatch_requests (7,417,617 samples, 0.03%)</title><rect x="1.8584%" y="1957" width="0.0276%" height="15" fill="rgb(216,193,19)" fg:x="499504347" fg:w="7417617"/><text x="2.1084%" y="1967.50"></text></g><g><title>__blk_mq_sched_dispatch_requests (7,417,617 samples, 0.03%)</title><rect x="1.8584%" y="1941" width="0.0276%" height="15" fill="rgb(216,135,14)" fg:x="499504347" fg:w="7417617"/><text x="2.1084%" y="1951.50"></text></g><g><title>process_one_work (7,565,099 samples, 0.03%)</title><rect x="1.8584%" y="1989" width="0.0281%" height="15" fill="rgb(241,47,5)" fg:x="499504347" fg:w="7565099"/><text x="2.1084%" y="1999.50"></text></g><g><title>kworker/0:1H-kb (11,078,296 samples, 0.04%)</title><rect x="1.8584%" y="2069" width="0.0412%" height="15" fill="rgb(233,42,35)" fg:x="499504347" fg:w="11078296"/><text x="2.1084%" y="2079.50"></text></g><g><title>ret_from_fork_asm (11,078,296 samples, 0.04%)</title><rect x="1.8584%" y="2053" width="0.0412%" height="15" fill="rgb(231,13,6)" fg:x="499504347" fg:w="11078296"/><text x="2.1084%" y="2063.50"></text></g><g><title>ret_from_fork (11,078,296 samples, 0.04%)</title><rect x="1.8584%" y="2037" width="0.0412%" height="15" fill="rgb(207,181,40)" fg:x="499504347" fg:w="11078296"/><text x="2.1084%" y="2047.50"></text></g><g><title>kthread (11,078,296 samples, 0.04%)</title><rect x="1.8584%" y="2021" width="0.0412%" height="15" fill="rgb(254,173,49)" fg:x="499504347" fg:w="11078296"/><text x="2.1084%" y="2031.50"></text></g><g><title>worker_thread (11,078,296 samples, 0.04%)</title><rect x="1.8584%" y="2005" width="0.0412%" height="15" fill="rgb(221,1,38)" fg:x="499504347" fg:w="11078296"/><text x="2.1084%" y="2015.50"></text></g><g><title>schedule (3,513,197 samples, 0.01%)</title><rect x="1.8865%" y="1989" width="0.0131%" height="15" fill="rgb(206,124,46)" fg:x="507069446" fg:w="3513197"/><text x="2.1365%" y="1999.50"></text></g><g><title>__sched_text_start (3,513,197 samples, 0.01%)</title><rect x="1.8865%" y="1973" width="0.0131%" height="15" fill="rgb(249,21,11)" fg:x="507069446" fg:w="3513197"/><text x="2.1365%" y="1983.50"></text></g><g><title>ata_qc_issue (4,600,504 samples, 0.02%)</title><rect x="1.9059%" y="1845" width="0.0171%" height="15" fill="rgb(222,201,40)" fg:x="512285262" fg:w="4600504"/><text x="2.1559%" y="1855.50"></text></g><g><title>dma_map_sg_attrs (4,055,483 samples, 0.02%)</title><rect x="1.9080%" y="1829" width="0.0151%" height="15" fill="rgb(235,61,29)" fg:x="512830283" fg:w="4055483"/><text x="2.1580%" y="1839.50"></text></g><g><title>__dma_map_sg_attrs (4,055,483 samples, 0.02%)</title><rect x="1.9080%" y="1813" width="0.0151%" height="15" fill="rgb(219,207,3)" fg:x="512830283" fg:w="4055483"/><text x="2.1580%" y="1823.50"></text></g><g><title>iommu_dma_map_sg (3,553,787 samples, 0.01%)</title><rect x="1.9098%" y="1797" width="0.0132%" height="15" fill="rgb(222,56,46)" fg:x="513331979" fg:w="3553787"/><text x="2.1598%" y="1807.50"></text></g><g><title>iommu_map_sg (3,189,691 samples, 0.01%)</title><rect x="1.9112%" y="1781" width="0.0119%" height="15" fill="rgb(239,76,54)" fg:x="513696075" fg:w="3189691"/><text x="2.1612%" y="1791.50"></text></g><g><title>__iommu_map (2,737,729 samples, 0.01%)</title><rect x="1.9129%" y="1765" width="0.0102%" height="15" fill="rgb(231,124,27)" fg:x="514148037" fg:w="2737729"/><text x="2.1629%" y="1775.50"></text></g><g><title>__iommu_map_pages (2,737,729 samples, 0.01%)</title><rect x="1.9129%" y="1749" width="0.0102%" height="15" fill="rgb(249,195,6)" fg:x="514148037" fg:w="2737729"/><text x="2.1629%" y="1759.50"></text></g><g><title>__ata_scsi_queuecmd (4,748,660 samples, 0.02%)</title><rect x="1.9059%" y="1861" width="0.0177%" height="15" fill="rgb(237,174,47)" fg:x="512285262" fg:w="4748660"/><text x="2.1559%" y="1871.50"></text></g><g><title>scsi_dispatch_cmd (4,988,800 samples, 0.02%)</title><rect x="1.9059%" y="1893" width="0.0186%" height="15" fill="rgb(206,201,31)" fg:x="512285262" fg:w="4988800"/><text x="2.1559%" y="1903.50"></text></g><g><title>ata_scsi_queuecmd (4,988,800 samples, 0.02%)</title><rect x="1.9059%" y="1877" width="0.0186%" height="15" fill="rgb(231,57,52)" fg:x="512285262" fg:w="4988800"/><text x="2.1559%" y="1887.50"></text></g><g><title>blk_mq_dispatch_rq_list (5,789,471 samples, 0.02%)</title><rect x="1.9059%" y="1925" width="0.0215%" height="15" fill="rgb(248,177,22)" fg:x="512285262" fg:w="5789471"/><text x="2.1559%" y="1935.50"></text></g><g><title>scsi_queue_rq (5,789,471 samples, 0.02%)</title><rect x="1.9059%" y="1909" width="0.0215%" height="15" fill="rgb(215,211,37)" fg:x="512285262" fg:w="5789471"/><text x="2.1559%" y="1919.50"></text></g><g><title>blk_mq_run_work_fn (7,860,648 samples, 0.03%)</title><rect x="1.9040%" y="1973" width="0.0292%" height="15" fill="rgb(241,128,51)" fg:x="511771732" fg:w="7860648"/><text x="2.1540%" y="1983.50"></text></g><g><title>blk_mq_sched_dispatch_requests (7,860,648 samples, 0.03%)</title><rect x="1.9040%" y="1957" width="0.0292%" height="15" fill="rgb(227,165,31)" fg:x="511771732" fg:w="7860648"/><text x="2.1540%" y="1967.50"></text></g><g><title>__blk_mq_sched_dispatch_requests (7,860,648 samples, 0.03%)</title><rect x="1.9040%" y="1941" width="0.0292%" height="15" fill="rgb(228,167,24)" fg:x="511771732" fg:w="7860648"/><text x="2.1540%" y="1951.50"></text></g><g><title>process_one_work (8,376,606 samples, 0.03%)</title><rect x="1.9040%" y="1989" width="0.0312%" height="15" fill="rgb(228,143,12)" fg:x="511771732" fg:w="8376606"/><text x="2.1540%" y="1999.50"></text></g><g><title>kworker/1:1H-kb (11,747,069 samples, 0.04%)</title><rect x="1.9040%" y="2069" width="0.0437%" height="15" fill="rgb(249,149,8)" fg:x="511771732" fg:w="11747069"/><text x="2.1540%" y="2079.50"></text></g><g><title>ret_from_fork_asm (11,747,069 samples, 0.04%)</title><rect x="1.9040%" y="2053" width="0.0437%" height="15" fill="rgb(243,35,44)" fg:x="511771732" fg:w="11747069"/><text x="2.1540%" y="2063.50"></text></g><g><title>ret_from_fork (11,747,069 samples, 0.04%)</title><rect x="1.9040%" y="2037" width="0.0437%" height="15" fill="rgb(246,89,9)" fg:x="511771732" fg:w="11747069"/><text x="2.1540%" y="2047.50"></text></g><g><title>kthread (11,747,069 samples, 0.04%)</title><rect x="1.9040%" y="2021" width="0.0437%" height="15" fill="rgb(233,213,13)" fg:x="511771732" fg:w="11747069"/><text x="2.1540%" y="2031.50"></text></g><g><title>worker_thread (11,747,069 samples, 0.04%)</title><rect x="1.9040%" y="2005" width="0.0437%" height="15" fill="rgb(233,141,41)" fg:x="511771732" fg:w="11747069"/><text x="2.1540%" y="2015.50"></text></g><g><title>schedule (3,370,463 samples, 0.01%)</title><rect x="1.9352%" y="1989" width="0.0125%" height="15" fill="rgb(239,167,4)" fg:x="520148338" fg:w="3370463"/><text x="2.1852%" y="1999.50"></text></g><g><title>__sched_text_start (3,370,463 samples, 0.01%)</title><rect x="1.9352%" y="1973" width="0.0125%" height="15" fill="rgb(209,217,16)" fg:x="520148338" fg:w="3370463"/><text x="2.1852%" y="1983.50"></text></g><g><title>pick_next_task (2,917,930 samples, 0.01%)</title><rect x="1.9369%" y="1957" width="0.0109%" height="15" fill="rgb(219,88,35)" fg:x="520600871" fg:w="2917930"/><text x="2.1869%" y="1967.50"></text></g><g><title>pick_next_task_fair (2,917,930 samples, 0.01%)</title><rect x="1.9369%" y="1941" width="0.0109%" height="15" fill="rgb(220,193,23)" fg:x="520600871" fg:w="2917930"/><text x="2.1869%" y="1951.50"></text></g><g><title>newidle_balance (2,917,930 samples, 0.01%)</title><rect x="1.9369%" y="1925" width="0.0109%" height="15" fill="rgb(230,90,52)" fg:x="520600871" fg:w="2917930"/><text x="2.1869%" y="1935.50"></text></g><g><title>__ata_scsi_queuecmd (2,785,240 samples, 0.01%)</title><rect x="1.9554%" y="1861" width="0.0104%" height="15" fill="rgb(252,106,19)" fg:x="525593352" fg:w="2785240"/><text x="2.2054%" y="1871.50"></text></g><g><title>scsi_dispatch_cmd (3,713,285 samples, 0.01%)</title><rect x="1.9554%" y="1893" width="0.0138%" height="15" fill="rgb(206,74,20)" fg:x="525593352" fg:w="3713285"/><text x="2.2054%" y="1903.50"></text></g><g><title>ata_scsi_queuecmd (3,713,285 samples, 0.01%)</title><rect x="1.9554%" y="1877" width="0.0138%" height="15" fill="rgb(230,138,44)" fg:x="525593352" fg:w="3713285"/><text x="2.2054%" y="1887.50"></text></g><g><title>process_one_work (5,413,195 samples, 0.02%)</title><rect x="1.9513%" y="1989" width="0.0201%" height="15" fill="rgb(235,182,43)" fg:x="524487539" fg:w="5413195"/><text x="2.2013%" y="1999.50"></text></g><g><title>blk_mq_run_work_fn (5,413,195 samples, 0.02%)</title><rect x="1.9513%" y="1973" width="0.0201%" height="15" fill="rgb(242,16,51)" fg:x="524487539" fg:w="5413195"/><text x="2.2013%" y="1983.50"></text></g><g><title>blk_mq_sched_dispatch_requests (5,207,689 samples, 0.02%)</title><rect x="1.9521%" y="1957" width="0.0194%" height="15" fill="rgb(248,9,4)" fg:x="524693045" fg:w="5207689"/><text x="2.2021%" y="1967.50"></text></g><g><title>__blk_mq_sched_dispatch_requests (5,207,689 samples, 0.02%)</title><rect x="1.9521%" y="1941" width="0.0194%" height="15" fill="rgb(210,31,22)" fg:x="524693045" fg:w="5207689"/><text x="2.2021%" y="1951.50"></text></g><g><title>blk_mq_dispatch_rq_list (5,207,689 samples, 0.02%)</title><rect x="1.9521%" y="1925" width="0.0194%" height="15" fill="rgb(239,54,39)" fg:x="524693045" fg:w="5207689"/><text x="2.2021%" y="1935.50"></text></g><g><title>scsi_queue_rq (5,207,689 samples, 0.02%)</title><rect x="1.9521%" y="1909" width="0.0194%" height="15" fill="rgb(230,99,41)" fg:x="524693045" fg:w="5207689"/><text x="2.2021%" y="1919.50"></text></g><g><title>__sched_text_start (3,087,761 samples, 0.01%)</title><rect x="1.9715%" y="1973" width="0.0115%" height="15" fill="rgb(253,106,12)" fg:x="529900734" fg:w="3087761"/><text x="2.2215%" y="1983.50"></text></g><g><title>pick_next_task (2,783,741 samples, 0.01%)</title><rect x="1.9726%" y="1957" width="0.0104%" height="15" fill="rgb(213,46,41)" fg:x="530204754" fg:w="2783741"/><text x="2.2226%" y="1967.50"></text></g><g><title>pick_next_task_fair (2,783,741 samples, 0.01%)</title><rect x="1.9726%" y="1941" width="0.0104%" height="15" fill="rgb(215,133,35)" fg:x="530204754" fg:w="2783741"/><text x="2.2226%" y="1951.50"></text></g><g><title>newidle_balance (2,783,741 samples, 0.01%)</title><rect x="1.9726%" y="1925" width="0.0104%" height="15" fill="rgb(213,28,5)" fg:x="530204754" fg:w="2783741"/><text x="2.2226%" y="1935.50"></text></g><g><title>kworker/2:1H-kb (9,609,494 samples, 0.04%)</title><rect x="1.9495%" y="2069" width="0.0358%" height="15" fill="rgb(215,77,49)" fg:x="523991791" fg:w="9609494"/><text x="2.1995%" y="2079.50"></text></g><g><title>ret_from_fork_asm (9,340,674 samples, 0.03%)</title><rect x="1.9505%" y="2053" width="0.0348%" height="15" fill="rgb(248,100,22)" fg:x="524260611" fg:w="9340674"/><text x="2.2005%" y="2063.50"></text></g><g><title>ret_from_fork (9,340,674 samples, 0.03%)</title><rect x="1.9505%" y="2037" width="0.0348%" height="15" fill="rgb(208,67,9)" fg:x="524260611" fg:w="9340674"/><text x="2.2005%" y="2047.50"></text></g><g><title>kthread (9,340,674 samples, 0.03%)</title><rect x="1.9505%" y="2021" width="0.0348%" height="15" fill="rgb(219,133,21)" fg:x="524260611" fg:w="9340674"/><text x="2.2005%" y="2031.50"></text></g><g><title>worker_thread (9,340,674 samples, 0.03%)</title><rect x="1.9505%" y="2005" width="0.0348%" height="15" fill="rgb(246,46,29)" fg:x="524260611" fg:w="9340674"/><text x="2.2005%" y="2015.50"></text></g><g><title>schedule (3,700,551 samples, 0.01%)</title><rect x="1.9715%" y="1989" width="0.0138%" height="15" fill="rgb(246,185,52)" fg:x="529900734" fg:w="3700551"/><text x="2.2215%" y="1999.50"></text></g><g><title>kworker/3:1H-kb (5,196,290 samples, 0.02%)</title><rect x="1.9870%" y="2069" width="0.0193%" height="15" fill="rgb(252,136,11)" fg:x="534065850" fg:w="5196290"/><text x="2.2370%" y="2079.50"></text></g><g><title>ret_from_fork_asm (4,696,576 samples, 0.02%)</title><rect x="1.9888%" y="2053" width="0.0175%" height="15" fill="rgb(219,138,53)" fg:x="534565564" fg:w="4696576"/><text x="2.2388%" y="2063.50"></text></g><g><title>ret_from_fork (4,696,576 samples, 0.02%)</title><rect x="1.9888%" y="2037" width="0.0175%" height="15" fill="rgb(211,51,23)" fg:x="534565564" fg:w="4696576"/><text x="2.2388%" y="2047.50"></text></g><g><title>kthread (4,696,576 samples, 0.02%)</title><rect x="1.9888%" y="2021" width="0.0175%" height="15" fill="rgb(247,221,28)" fg:x="534565564" fg:w="4696576"/><text x="2.2388%" y="2031.50"></text></g><g><title>worker_thread (4,696,576 samples, 0.02%)</title><rect x="1.9888%" y="2005" width="0.0175%" height="15" fill="rgb(251,222,45)" fg:x="534565564" fg:w="4696576"/><text x="2.2388%" y="2015.50"></text></g><g><title>scsi_dispatch_cmd (3,092,085 samples, 0.01%)</title><rect x="2.0132%" y="1893" width="0.0115%" height="15" fill="rgb(217,162,53)" fg:x="541118311" fg:w="3092085"/><text x="2.2632%" y="1903.50"></text></g><g><title>ata_scsi_queuecmd (3,092,085 samples, 0.01%)</title><rect x="2.0132%" y="1877" width="0.0115%" height="15" fill="rgb(229,93,14)" fg:x="541118311" fg:w="3092085"/><text x="2.2632%" y="1887.50"></text></g><g><title>__ata_scsi_queuecmd (3,092,085 samples, 0.01%)</title><rect x="2.0132%" y="1861" width="0.0115%" height="15" fill="rgb(209,67,49)" fg:x="541118311" fg:w="3092085"/><text x="2.2632%" y="1871.50"></text></g><g><title>blk_mq_dispatch_rq_list (3,395,700 samples, 0.01%)</title><rect x="2.0132%" y="1925" width="0.0126%" height="15" fill="rgb(213,87,29)" fg:x="541118311" fg:w="3395700"/><text x="2.2632%" y="1935.50"></text></g><g><title>scsi_queue_rq (3,395,700 samples, 0.01%)</title><rect x="2.0132%" y="1909" width="0.0126%" height="15" fill="rgb(205,151,52)" fg:x="541118311" fg:w="3395700"/><text x="2.2632%" y="1919.50"></text></g><g><title>process_one_work (5,350,930 samples, 0.02%)</title><rect x="2.0084%" y="1989" width="0.0199%" height="15" fill="rgb(253,215,39)" fg:x="539830565" fg:w="5350930"/><text x="2.2584%" y="1999.50"></text></g><g><title>blk_mq_run_work_fn (5,350,930 samples, 0.02%)</title><rect x="2.0084%" y="1973" width="0.0199%" height="15" fill="rgb(221,220,41)" fg:x="539830565" fg:w="5350930"/><text x="2.2584%" y="1983.50"></text></g><g><title>blk_mq_sched_dispatch_requests (5,350,930 samples, 0.02%)</title><rect x="2.0084%" y="1957" width="0.0199%" height="15" fill="rgb(218,133,21)" fg:x="539830565" fg:w="5350930"/><text x="2.2584%" y="1967.50"></text></g><g><title>__blk_mq_sched_dispatch_requests (5,350,930 samples, 0.02%)</title><rect x="2.0084%" y="1941" width="0.0199%" height="15" fill="rgb(221,193,43)" fg:x="539830565" fg:w="5350930"/><text x="2.2584%" y="1951.50"></text></g><g><title>kworker/4:1H-kb (8,705,119 samples, 0.03%)</title><rect x="2.0063%" y="2069" width="0.0324%" height="15" fill="rgb(240,128,52)" fg:x="539262140" fg:w="8705119"/><text x="2.2563%" y="2079.50"></text></g><g><title>ret_from_fork_asm (8,136,694 samples, 0.03%)</title><rect x="2.0084%" y="2053" width="0.0303%" height="15" fill="rgb(253,114,12)" fg:x="539830565" fg:w="8136694"/><text x="2.2584%" y="2063.50"></text></g><g><title>ret_from_fork (8,136,694 samples, 0.03%)</title><rect x="2.0084%" y="2037" width="0.0303%" height="15" fill="rgb(215,223,47)" fg:x="539830565" fg:w="8136694"/><text x="2.2584%" y="2047.50"></text></g><g><title>kthread (8,136,694 samples, 0.03%)</title><rect x="2.0084%" y="2021" width="0.0303%" height="15" fill="rgb(248,225,23)" fg:x="539830565" fg:w="8136694"/><text x="2.2584%" y="2031.50"></text></g><g><title>worker_thread (8,136,694 samples, 0.03%)</title><rect x="2.0084%" y="2005" width="0.0303%" height="15" fill="rgb(250,108,0)" fg:x="539830565" fg:w="8136694"/><text x="2.2584%" y="2015.50"></text></g><g><title>schedule (2,785,764 samples, 0.01%)</title><rect x="2.0283%" y="1989" width="0.0104%" height="15" fill="rgb(228,208,7)" fg:x="545181495" fg:w="2785764"/><text x="2.2783%" y="1999.50"></text></g><g><title>__ata_scsi_queuecmd (4,940,072 samples, 0.02%)</title><rect x="2.0471%" y="1861" width="0.0184%" height="15" fill="rgb(244,45,10)" fg:x="550231414" fg:w="4940072"/><text x="2.2971%" y="1871.50"></text></g><g><title>ata_qc_issue (3,717,120 samples, 0.01%)</title><rect x="2.0517%" y="1845" width="0.0138%" height="15" fill="rgb(207,125,25)" fg:x="551454366" fg:w="3717120"/><text x="2.3017%" y="1855.50"></text></g><g><title>blk_mq_dispatch_rq_list (6,954,000 samples, 0.03%)</title><rect x="2.0439%" y="1925" width="0.0259%" height="15" fill="rgb(210,195,18)" fg:x="549363686" fg:w="6954000"/><text x="2.2939%" y="1935.50"></text></g><g><title>scsi_queue_rq (6,302,220 samples, 0.02%)</title><rect x="2.0463%" y="1909" width="0.0234%" height="15" fill="rgb(249,80,12)" fg:x="550015466" fg:w="6302220"/><text x="2.2963%" y="1919.50"></text></g><g><title>scsi_dispatch_cmd (6,086,272 samples, 0.02%)</title><rect x="2.0471%" y="1893" width="0.0226%" height="15" fill="rgb(221,65,9)" fg:x="550231414" fg:w="6086272"/><text x="2.2971%" y="1903.50"></text></g><g><title>ata_scsi_queuecmd (6,086,272 samples, 0.02%)</title><rect x="2.0471%" y="1877" width="0.0226%" height="15" fill="rgb(235,49,36)" fg:x="550231414" fg:w="6086272"/><text x="2.2971%" y="1887.50"></text></g><g><title>blk_mq_run_work_fn (7,973,415 samples, 0.03%)</title><rect x="2.0431%" y="1973" width="0.0297%" height="15" fill="rgb(225,32,20)" fg:x="549165713" fg:w="7973415"/><text x="2.2931%" y="1983.50"></text></g><g><title>blk_mq_sched_dispatch_requests (7,973,415 samples, 0.03%)</title><rect x="2.0431%" y="1957" width="0.0297%" height="15" fill="rgb(215,141,46)" fg:x="549165713" fg:w="7973415"/><text x="2.2931%" y="1967.50"></text></g><g><title>__blk_mq_sched_dispatch_requests (7,973,415 samples, 0.03%)</title><rect x="2.0431%" y="1941" width="0.0297%" height="15" fill="rgb(250,160,47)" fg:x="549165713" fg:w="7973415"/><text x="2.2931%" y="1951.50"></text></g><g><title>process_one_work (8,503,214 samples, 0.03%)</title><rect x="2.0431%" y="1989" width="0.0316%" height="15" fill="rgb(216,222,40)" fg:x="549165713" fg:w="8503214"/><text x="2.2931%" y="1999.50"></text></g><g><title>kworker/5:1H-kb (11,315,803 samples, 0.04%)</title><rect x="2.0412%" y="2069" width="0.0421%" height="15" fill="rgb(234,217,39)" fg:x="548654543" fg:w="11315803"/><text x="2.2912%" y="2079.50"></text></g><g><title>ret_from_fork_asm (11,315,803 samples, 0.04%)</title><rect x="2.0412%" y="2053" width="0.0421%" height="15" fill="rgb(207,178,40)" fg:x="548654543" fg:w="11315803"/><text x="2.2912%" y="2063.50"></text></g><g><title>ret_from_fork (11,315,803 samples, 0.04%)</title><rect x="2.0412%" y="2037" width="0.0421%" height="15" fill="rgb(221,136,13)" fg:x="548654543" fg:w="11315803"/><text x="2.2912%" y="2047.50"></text></g><g><title>kthread (11,315,803 samples, 0.04%)</title><rect x="2.0412%" y="2021" width="0.0421%" height="15" fill="rgb(249,199,10)" fg:x="548654543" fg:w="11315803"/><text x="2.2912%" y="2031.50"></text></g><g><title>worker_thread (11,315,803 samples, 0.04%)</title><rect x="2.0412%" y="2005" width="0.0421%" height="15" fill="rgb(249,222,13)" fg:x="548654543" fg:w="11315803"/><text x="2.2912%" y="2015.50"></text></g><g><title>ata_qc_issue (5,052,520 samples, 0.02%)</title><rect x="2.0963%" y="1845" width="0.0188%" height="15" fill="rgb(244,185,38)" fg:x="563458753" fg:w="5052520"/><text x="2.3463%" y="1855.50"></text></g><g><title>dma_map_sg_attrs (5,052,520 samples, 0.02%)</title><rect x="2.0963%" y="1829" width="0.0188%" height="15" fill="rgb(236,202,9)" fg:x="563458753" fg:w="5052520"/><text x="2.3463%" y="1839.50"></text></g><g><title>__dma_map_sg_attrs (5,052,520 samples, 0.02%)</title><rect x="2.0963%" y="1813" width="0.0188%" height="15" fill="rgb(250,229,37)" fg:x="563458753" fg:w="5052520"/><text x="2.3463%" y="1823.50"></text></g><g><title>iommu_dma_map_sg (5,052,520 samples, 0.02%)</title><rect x="2.0963%" y="1797" width="0.0188%" height="15" fill="rgb(206,174,23)" fg:x="563458753" fg:w="5052520"/><text x="2.3463%" y="1807.50"></text></g><g><title>iommu_map_sg (4,123,038 samples, 0.02%)</title><rect x="2.0998%" y="1781" width="0.0153%" height="15" fill="rgb(211,33,43)" fg:x="564388235" fg:w="4123038"/><text x="2.3498%" y="1791.50"></text></g><g><title>__iommu_map (4,123,038 samples, 0.02%)</title><rect x="2.0998%" y="1765" width="0.0153%" height="15" fill="rgb(245,58,50)" fg:x="564388235" fg:w="4123038"/><text x="2.3498%" y="1775.50"></text></g><g><title>__iommu_map_pages (4,123,038 samples, 0.02%)</title><rect x="2.0998%" y="1749" width="0.0153%" height="15" fill="rgb(244,68,36)" fg:x="564388235" fg:w="4123038"/><text x="2.3498%" y="1759.50"></text></g><g><title>amd_iommu_map_pages (4,123,038 samples, 0.02%)</title><rect x="2.0998%" y="1733" width="0.0153%" height="15" fill="rgb(232,229,15)" fg:x="564388235" fg:w="4123038"/><text x="2.3498%" y="1743.50"></text></g><g><title>iommu_v1_map_pages (4,123,038 samples, 0.02%)</title><rect x="2.0998%" y="1717" width="0.0153%" height="15" fill="rgb(254,30,23)" fg:x="564388235" fg:w="4123038"/><text x="2.3498%" y="1727.50"></text></g><g><title>scsi_dispatch_cmd (5,384,777 samples, 0.02%)</title><rect x="2.0963%" y="1893" width="0.0200%" height="15" fill="rgb(235,160,14)" fg:x="563458753" fg:w="5384777"/><text x="2.3463%" y="1903.50"></text></g><g><title>ata_scsi_queuecmd (5,384,777 samples, 0.02%)</title><rect x="2.0963%" y="1877" width="0.0200%" height="15" fill="rgb(212,155,44)" fg:x="563458753" fg:w="5384777"/><text x="2.3463%" y="1887.50"></text></g><g><title>__ata_scsi_queuecmd (5,384,777 samples, 0.02%)</title><rect x="2.0963%" y="1861" width="0.0200%" height="15" fill="rgb(226,2,50)" fg:x="563458753" fg:w="5384777"/><text x="2.3463%" y="1871.50"></text></g><g><title>blk_mq_dispatch_rq_list (8,006,330 samples, 0.03%)</title><rect x="2.0897%" y="1925" width="0.0298%" height="15" fill="rgb(234,177,6)" fg:x="561685203" fg:w="8006330"/><text x="2.3397%" y="1935.50"></text></g><g><title>scsi_queue_rq (7,139,173 samples, 0.03%)</title><rect x="2.0929%" y="1909" width="0.0266%" height="15" fill="rgb(217,24,9)" fg:x="562552360" fg:w="7139173"/><text x="2.3429%" y="1919.50"></text></g><g><title>__blk_mq_sched_dispatch_requests (9,608,737 samples, 0.04%)</title><rect x="2.0873%" y="1941" width="0.0357%" height="15" fill="rgb(220,13,46)" fg:x="561027641" fg:w="9608737"/><text x="2.3373%" y="1951.50"></text></g><g><title>blk_mq_run_work_fn (10,054,353 samples, 0.04%)</title><rect x="2.0873%" y="1973" width="0.0374%" height="15" fill="rgb(239,221,27)" fg:x="561027641" fg:w="10054353"/><text x="2.3373%" y="1983.50"></text></g><g><title>blk_mq_sched_dispatch_requests (10,054,353 samples, 0.04%)</title><rect x="2.0873%" y="1957" width="0.0374%" height="15" fill="rgb(222,198,25)" fg:x="561027641" fg:w="10054353"/><text x="2.3373%" y="1967.50"></text></g><g><title>process_one_work (10,506,309 samples, 0.04%)</title><rect x="2.0870%" y="1989" width="0.0391%" height="15" fill="rgb(211,99,13)" fg:x="560966204" fg:w="10506309"/><text x="2.3370%" y="1999.50"></text></g><g><title>load_balance (3,066,018 samples, 0.01%)</title><rect x="2.1357%" y="1909" width="0.0114%" height="15" fill="rgb(232,111,31)" fg:x="574046942" fg:w="3066018"/><text x="2.3857%" y="1919.50"></text></g><g><title>find_busiest_group (2,716,157 samples, 0.01%)</title><rect x="2.1370%" y="1893" width="0.0101%" height="15" fill="rgb(245,82,37)" fg:x="574396803" fg:w="2716157"/><text x="2.3870%" y="1903.50"></text></g><g><title>update_sd_lb_stats (2,716,157 samples, 0.01%)</title><rect x="2.1370%" y="1877" width="0.0101%" height="15" fill="rgb(227,149,46)" fg:x="574396803" fg:w="2716157"/><text x="2.3870%" y="1887.50"></text></g><g><title>__sched_text_start (6,707,334 samples, 0.02%)</title><rect x="2.1261%" y="1973" width="0.0250%" height="15" fill="rgb(218,36,50)" fg:x="571472513" fg:w="6707334"/><text x="2.3761%" y="1983.50"></text></g><g><title>pick_next_task (4,733,975 samples, 0.02%)</title><rect x="2.1335%" y="1957" width="0.0176%" height="15" fill="rgb(226,80,48)" fg:x="573445872" fg:w="4733975"/><text x="2.3835%" y="1967.50"></text></g><g><title>pick_next_task_fair (4,733,975 samples, 0.02%)</title><rect x="2.1335%" y="1941" width="0.0176%" height="15" fill="rgb(238,224,15)" fg:x="573445872" fg:w="4733975"/><text x="2.3835%" y="1951.50"></text></g><g><title>newidle_balance (4,132,905 samples, 0.02%)</title><rect x="2.1357%" y="1925" width="0.0154%" height="15" fill="rgb(241,136,10)" fg:x="574046942" fg:w="4132905"/><text x="2.3857%" y="1935.50"></text></g><g><title>kworker/6:1H-kb (17,573,030 samples, 0.07%)</title><rect x="2.0870%" y="2069" width="0.0654%" height="15" fill="rgb(208,32,45)" fg:x="560966204" fg:w="17573030"/><text x="2.3370%" y="2079.50"></text></g><g><title>ret_from_fork_asm (17,573,030 samples, 0.07%)</title><rect x="2.0870%" y="2053" width="0.0654%" height="15" fill="rgb(207,135,9)" fg:x="560966204" fg:w="17573030"/><text x="2.3370%" y="2063.50"></text></g><g><title>ret_from_fork (17,573,030 samples, 0.07%)</title><rect x="2.0870%" y="2037" width="0.0654%" height="15" fill="rgb(206,86,44)" fg:x="560966204" fg:w="17573030"/><text x="2.3370%" y="2047.50"></text></g><g><title>kthread (17,573,030 samples, 0.07%)</title><rect x="2.0870%" y="2021" width="0.0654%" height="15" fill="rgb(245,177,15)" fg:x="560966204" fg:w="17573030"/><text x="2.3370%" y="2031.50"></text></g><g><title>worker_thread (17,573,030 samples, 0.07%)</title><rect x="2.0870%" y="2005" width="0.0654%" height="15" fill="rgb(206,64,50)" fg:x="560966204" fg:w="17573030"/><text x="2.3370%" y="2015.50"></text></g><g><title>schedule (7,066,721 samples, 0.03%)</title><rect x="2.1261%" y="1989" width="0.0263%" height="15" fill="rgb(234,36,40)" fg:x="571472513" fg:w="7066721"/><text x="2.3761%" y="1999.50"></text></g><g><title>blk_mq_run_work_fn (3,155,053 samples, 0.01%)</title><rect x="2.1555%" y="1973" width="0.0117%" height="15" fill="rgb(213,64,8)" fg:x="579369571" fg:w="3155053"/><text x="2.4055%" y="1983.50"></text></g><g><title>blk_mq_sched_dispatch_requests (3,155,053 samples, 0.01%)</title><rect x="2.1555%" y="1957" width="0.0117%" height="15" fill="rgb(210,75,36)" fg:x="579369571" fg:w="3155053"/><text x="2.4055%" y="1967.50"></text></g><g><title>__blk_mq_sched_dispatch_requests (3,155,053 samples, 0.01%)</title><rect x="2.1555%" y="1941" width="0.0117%" height="15" fill="rgb(229,88,21)" fg:x="579369571" fg:w="3155053"/><text x="2.4055%" y="1951.50"></text></g><g><title>process_one_work (3,469,212 samples, 0.01%)</title><rect x="2.1555%" y="1989" width="0.0129%" height="15" fill="rgb(252,204,47)" fg:x="579369571" fg:w="3469212"/><text x="2.4055%" y="1999.50"></text></g><g><title>kworker/7:1H-kb (7,092,704 samples, 0.03%)</title><rect x="2.1524%" y="2069" width="0.0264%" height="15" fill="rgb(208,77,27)" fg:x="578539234" fg:w="7092704"/><text x="2.4024%" y="2079.50"></text></g><g><title>ret_from_fork_asm (6,705,918 samples, 0.02%)</title><rect x="2.1539%" y="2053" width="0.0249%" height="15" fill="rgb(221,76,26)" fg:x="578926020" fg:w="6705918"/><text x="2.4039%" y="2063.50"></text></g><g><title>ret_from_fork (6,705,918 samples, 0.02%)</title><rect x="2.1539%" y="2037" width="0.0249%" height="15" fill="rgb(225,139,18)" fg:x="578926020" fg:w="6705918"/><text x="2.4039%" y="2047.50"></text></g><g><title>kthread (6,705,918 samples, 0.02%)</title><rect x="2.1539%" y="2021" width="0.0249%" height="15" fill="rgb(230,137,11)" fg:x="578926020" fg:w="6705918"/><text x="2.4039%" y="2031.50"></text></g><g><title>worker_thread (6,705,918 samples, 0.02%)</title><rect x="2.1539%" y="2005" width="0.0249%" height="15" fill="rgb(212,28,1)" fg:x="578926020" fg:w="6705918"/><text x="2.4039%" y="2015.50"></text></g><g><title>schedule (2,793,155 samples, 0.01%)</title><rect x="2.1684%" y="1989" width="0.0104%" height="15" fill="rgb(248,164,17)" fg:x="582838783" fg:w="2793155"/><text x="2.4184%" y="1999.50"></text></g><g><title>__sched_text_start (2,793,155 samples, 0.01%)</title><rect x="2.1684%" y="1973" width="0.0104%" height="15" fill="rgb(222,171,42)" fg:x="582838783" fg:w="2793155"/><text x="2.4184%" y="1983.50"></text></g><g><title>pick_next_task (2,793,155 samples, 0.01%)</title><rect x="2.1684%" y="1957" width="0.0104%" height="15" fill="rgb(243,84,45)" fg:x="582838783" fg:w="2793155"/><text x="2.4184%" y="1967.50"></text></g><g><title>pick_next_task_fair (2,793,155 samples, 0.01%)</title><rect x="2.1684%" y="1941" width="0.0104%" height="15" fill="rgb(252,49,23)" fg:x="582838783" fg:w="2793155"/><text x="2.4184%" y="1951.50"></text></g><g><title>newidle_balance (2,793,155 samples, 0.01%)</title><rect x="2.1684%" y="1925" width="0.0104%" height="15" fill="rgb(215,19,7)" fg:x="582838783" fg:w="2793155"/><text x="2.4184%" y="1935.50"></text></g><g><title>__folio_start_writeback (2,927,326 samples, 0.01%)</title><rect x="2.1989%" y="1765" width="0.0109%" height="15" fill="rgb(238,81,41)" fg:x="591035416" fg:w="2927326"/><text x="2.4489%" y="1775.50"></text></g><g><title>ext4_bio_write_folio (4,352,770 samples, 0.02%)</title><rect x="2.1966%" y="1781" width="0.0162%" height="15" fill="rgb(210,199,37)" fg:x="590410654" fg:w="4352770"/><text x="2.4466%" y="1791.50"></text></g><g><title>kworker/u65:0-f (9,813,425 samples, 0.04%)</title><rect x="2.1794%" y="2069" width="0.0365%" height="15" fill="rgb(244,192,49)" fg:x="585798348" fg:w="9813425"/><text x="2.4294%" y="2079.50"></text></g><g><title>ret_from_fork_asm (9,813,425 samples, 0.04%)</title><rect x="2.1794%" y="2053" width="0.0365%" height="15" fill="rgb(226,211,11)" fg:x="585798348" fg:w="9813425"/><text x="2.4294%" y="2063.50"></text></g><g><title>ret_from_fork (9,813,425 samples, 0.04%)</title><rect x="2.1794%" y="2037" width="0.0365%" height="15" fill="rgb(236,162,54)" fg:x="585798348" fg:w="9813425"/><text x="2.4294%" y="2047.50"></text></g><g><title>kthread (9,813,425 samples, 0.04%)</title><rect x="2.1794%" y="2021" width="0.0365%" height="15" fill="rgb(220,229,9)" fg:x="585798348" fg:w="9813425"/><text x="2.4294%" y="2031.50"></text></g><g><title>worker_thread (9,813,425 samples, 0.04%)</title><rect x="2.1794%" y="2005" width="0.0365%" height="15" fill="rgb(250,87,22)" fg:x="585798348" fg:w="9813425"/><text x="2.4294%" y="2015.50"></text></g><g><title>process_one_work (9,813,425 samples, 0.04%)</title><rect x="2.1794%" y="1989" width="0.0365%" height="15" fill="rgb(239,43,17)" fg:x="585798348" fg:w="9813425"/><text x="2.4294%" y="1999.50"></text></g><g><title>wb_workfn (9,813,425 samples, 0.04%)</title><rect x="2.1794%" y="1973" width="0.0365%" height="15" fill="rgb(231,177,25)" fg:x="585798348" fg:w="9813425"/><text x="2.4294%" y="1983.50"></text></g><g><title>wb_do_writeback (9,813,425 samples, 0.04%)</title><rect x="2.1794%" y="1957" width="0.0365%" height="15" fill="rgb(219,179,1)" fg:x="585798348" fg:w="9813425"/><text x="2.4294%" y="1967.50"></text></g><g><title>wb_writeback (9,813,425 samples, 0.04%)</title><rect x="2.1794%" y="1941" width="0.0365%" height="15" fill="rgb(238,219,53)" fg:x="585798348" fg:w="9813425"/><text x="2.4294%" y="1951.50"></text></g><g><title>__writeback_inodes_wb (9,813,425 samples, 0.04%)</title><rect x="2.1794%" y="1925" width="0.0365%" height="15" fill="rgb(232,167,36)" fg:x="585798348" fg:w="9813425"/><text x="2.4294%" y="1935.50"></text></g><g><title>writeback_sb_inodes (9,813,425 samples, 0.04%)</title><rect x="2.1794%" y="1909" width="0.0365%" height="15" fill="rgb(244,19,51)" fg:x="585798348" fg:w="9813425"/><text x="2.4294%" y="1919.50"></text></g><g><title>__writeback_single_inode (9,813,425 samples, 0.04%)</title><rect x="2.1794%" y="1893" width="0.0365%" height="15" fill="rgb(224,6,22)" fg:x="585798348" fg:w="9813425"/><text x="2.4294%" y="1903.50"></text></g><g><title>do_writepages (9,813,425 samples, 0.04%)</title><rect x="2.1794%" y="1877" width="0.0365%" height="15" fill="rgb(224,145,5)" fg:x="585798348" fg:w="9813425"/><text x="2.4294%" y="1887.50"></text></g><g><title>ext4_writepages (9,813,425 samples, 0.04%)</title><rect x="2.1794%" y="1861" width="0.0365%" height="15" fill="rgb(234,130,49)" fg:x="585798348" fg:w="9813425"/><text x="2.4294%" y="1871.50"></text></g><g><title>ext4_do_writepages (9,813,425 samples, 0.04%)</title><rect x="2.1794%" y="1845" width="0.0365%" height="15" fill="rgb(254,6,2)" fg:x="585798348" fg:w="9813425"/><text x="2.4294%" y="1855.50"></text></g><g><title>mpage_prepare_extent_to_map (9,294,388 samples, 0.03%)</title><rect x="2.1814%" y="1829" width="0.0346%" height="15" fill="rgb(208,96,46)" fg:x="586317385" fg:w="9294388"/><text x="2.4314%" y="1839.50"></text></g><g><title>mpage_process_page_bufs (6,356,679 samples, 0.02%)</title><rect x="2.1923%" y="1813" width="0.0236%" height="15" fill="rgb(239,3,39)" fg:x="589255094" fg:w="6356679"/><text x="2.4423%" y="1823.50"></text></g><g><title>mpage_submit_folio (5,201,119 samples, 0.02%)</title><rect x="2.1966%" y="1797" width="0.0194%" height="15" fill="rgb(233,210,1)" fg:x="590410654" fg:w="5201119"/><text x="2.4466%" y="1807.50"></text></g><g><title>find_get_entry (9,764,397 samples, 0.04%)</title><rect x="2.2471%" y="1797" width="0.0363%" height="15" fill="rgb(244,137,37)" fg:x="603977079" fg:w="9764397"/><text x="2.4971%" y="1807.50"></text></g><g><title>xas_find_marked (3,493,900 samples, 0.01%)</title><rect x="2.2704%" y="1781" width="0.0130%" height="15" fill="rgb(240,136,2)" fg:x="610247576" fg:w="3493900"/><text x="2.5204%" y="1791.50"></text></g><g><title>filemap_get_folios_tag (11,660,375 samples, 0.04%)</title><rect x="2.2425%" y="1813" width="0.0434%" height="15" fill="rgb(239,18,37)" fg:x="602753991" fg:w="11660375"/><text x="2.4925%" y="1823.50"></text></g><g><title>__mod_memcg_lruvec_state (3,375,938 samples, 0.01%)</title><rect x="2.4180%" y="1733" width="0.0126%" height="15" fill="rgb(218,185,22)" fg:x="649932125" fg:w="3375938"/><text x="2.6680%" y="1743.50"></text></g><g><title>__mod_lruvec_page_state (5,600,109 samples, 0.02%)</title><rect x="2.4140%" y="1749" width="0.0208%" height="15" fill="rgb(225,218,4)" fg:x="648851092" fg:w="5600109"/><text x="2.6640%" y="1759.50"></text></g><g><title>__folio_start_writeback (18,560,454 samples, 0.07%)</title><rect x="2.3974%" y="1765" width="0.0691%" height="15" fill="rgb(230,182,32)" fg:x="644386553" fg:w="18560454"/><text x="2.6474%" y="1775.50"></text></g><g><title>bio_add_folio (4,511,378 samples, 0.02%)</title><rect x="2.4665%" y="1765" width="0.0168%" height="15" fill="rgb(242,56,43)" fg:x="662947007" fg:w="4511378"/><text x="2.7165%" y="1775.50"></text></g><g><title>bio_add_page (4,511,378 samples, 0.02%)</title><rect x="2.4665%" y="1749" width="0.0168%" height="15" fill="rgb(233,99,24)" fg:x="662947007" fg:w="4511378"/><text x="2.7165%" y="1759.50"></text></g><g><title>bh_get_inode_and_lblk_num (4,273,593 samples, 0.02%)</title><rect x="2.4881%" y="1749" width="0.0159%" height="15" fill="rgb(234,209,42)" fg:x="668761673" fg:w="4273593"/><text x="2.7381%" y="1759.50"></text></g><g><title>fscrypt_mergeable_bio_bh (7,917,327 samples, 0.03%)</title><rect x="2.4832%" y="1765" width="0.0295%" height="15" fill="rgb(227,7,12)" fg:x="667458385" fg:w="7917327"/><text x="2.7332%" y="1775.50"></text></g><g><title>ext4_bio_write_folio (45,697,242 samples, 0.17%)</title><rect x="2.3558%" y="1781" width="0.1700%" height="15" fill="rgb(245,203,43)" fg:x="633191441" fg:w="45697242"/><text x="2.6058%" y="1791.50"></text></g><g><title>folio_clear_dirty_for_io (12,795,469 samples, 0.05%)</title><rect x="2.5258%" y="1781" width="0.0476%" height="15" fill="rgb(238,205,33)" fg:x="678888683" fg:w="12795469"/><text x="2.7758%" y="1791.50"></text></g><g><title>kworker/u65:1-f (96,771,084 samples, 0.36%)</title><rect x="2.2159%" y="2069" width="0.3600%" height="15" fill="rgb(231,56,7)" fg:x="595611773" fg:w="96771084"/><text x="2.4659%" y="2079.50"></text></g><g><title>ret_from_fork_asm (96,771,084 samples, 0.36%)</title><rect x="2.2159%" y="2053" width="0.3600%" height="15" fill="rgb(244,186,29)" fg:x="595611773" fg:w="96771084"/><text x="2.4659%" y="2063.50"></text></g><g><title>ret_from_fork (96,771,084 samples, 0.36%)</title><rect x="2.2159%" y="2037" width="0.3600%" height="15" fill="rgb(234,111,31)" fg:x="595611773" fg:w="96771084"/><text x="2.4659%" y="2047.50"></text></g><g><title>kthread (96,771,084 samples, 0.36%)</title><rect x="2.2159%" y="2021" width="0.3600%" height="15" fill="rgb(241,149,10)" fg:x="595611773" fg:w="96771084"/><text x="2.4659%" y="2031.50"></text></g><g><title>worker_thread (96,771,084 samples, 0.36%)</title><rect x="2.2159%" y="2005" width="0.3600%" height="15" fill="rgb(249,206,44)" fg:x="595611773" fg:w="96771084"/><text x="2.4659%" y="2015.50"></text></g><g><title>process_one_work (96,771,084 samples, 0.36%)</title><rect x="2.2159%" y="1989" width="0.3600%" height="15" fill="rgb(251,153,30)" fg:x="595611773" fg:w="96771084"/><text x="2.4659%" y="1999.50"></text></g><g><title>wb_workfn (96,442,938 samples, 0.36%)</title><rect x="2.2172%" y="1973" width="0.3588%" height="15" fill="rgb(239,152,38)" fg:x="595939919" fg:w="96442938"/><text x="2.4672%" y="1983.50"></text></g><g><title>wb_do_writeback (96,442,938 samples, 0.36%)</title><rect x="2.2172%" y="1957" width="0.3588%" height="15" fill="rgb(249,139,47)" fg:x="595939919" fg:w="96442938"/><text x="2.4672%" y="1967.50"></text></g><g><title>wb_writeback (95,975,036 samples, 0.36%)</title><rect x="2.2189%" y="1941" width="0.3571%" height="15" fill="rgb(244,64,35)" fg:x="596407821" fg:w="95975036"/><text x="2.4689%" y="1951.50"></text></g><g><title>__writeback_inodes_wb (95,975,036 samples, 0.36%)</title><rect x="2.2189%" y="1925" width="0.3571%" height="15" fill="rgb(216,46,15)" fg:x="596407821" fg:w="95975036"/><text x="2.4689%" y="1935.50"></text></g><g><title>writeback_sb_inodes (95,975,036 samples, 0.36%)</title><rect x="2.2189%" y="1909" width="0.3571%" height="15" fill="rgb(250,74,19)" fg:x="596407821" fg:w="95975036"/><text x="2.4689%" y="1919.50"></text></g><g><title>__writeback_single_inode (95,975,036 samples, 0.36%)</title><rect x="2.2189%" y="1893" width="0.3571%" height="15" fill="rgb(249,42,33)" fg:x="596407821" fg:w="95975036"/><text x="2.4689%" y="1903.50"></text></g><g><title>do_writepages (95,975,036 samples, 0.36%)</title><rect x="2.2189%" y="1877" width="0.3571%" height="15" fill="rgb(242,149,17)" fg:x="596407821" fg:w="95975036"/><text x="2.4689%" y="1887.50"></text></g><g><title>ext4_writepages (95,975,036 samples, 0.36%)</title><rect x="2.2189%" y="1861" width="0.3571%" height="15" fill="rgb(244,29,21)" fg:x="596407821" fg:w="95975036"/><text x="2.4689%" y="1871.50"></text></g><g><title>ext4_do_writepages (95,975,036 samples, 0.36%)</title><rect x="2.2189%" y="1845" width="0.3571%" height="15" fill="rgb(220,130,37)" fg:x="596407821" fg:w="95975036"/><text x="2.4689%" y="1855.50"></text></g><g><title>mpage_prepare_extent_to_map (94,513,832 samples, 0.35%)</title><rect x="2.2243%" y="1829" width="0.3516%" height="15" fill="rgb(211,67,2)" fg:x="597869025" fg:w="94513832"/><text x="2.4743%" y="1839.50"></text></g><g><title>mpage_process_page_bufs (77,297,093 samples, 0.29%)</title><rect x="2.2884%" y="1813" width="0.2876%" height="15" fill="rgb(235,68,52)" fg:x="615085764" fg:w="77297093"/><text x="2.5384%" y="1823.50"></text></g><g><title>mpage_submit_folio (61,492,225 samples, 0.23%)</title><rect x="2.3472%" y="1797" width="0.2288%" height="15" fill="rgb(246,142,3)" fg:x="630890632" fg:w="61492225"/><text x="2.5972%" y="1807.50"></text></g><g><title>filemap_get_folios_tag (8,353,416 samples, 0.03%)</title><rect x="2.5993%" y="1813" width="0.0311%" height="15" fill="rgb(241,25,7)" fg:x="698642395" fg:w="8353416"/><text x="2.8493%" y="1823.50"></text></g><g><title>find_get_entry (7,260,309 samples, 0.03%)</title><rect x="2.6033%" y="1797" width="0.0270%" height="15" fill="rgb(242,119,39)" fg:x="699735502" fg:w="7260309"/><text x="2.8533%" y="1807.50"></text></g><g><title>__mod_lruvec_page_state (4,497,004 samples, 0.02%)</title><rect x="2.8028%" y="1749" width="0.0167%" height="15" fill="rgb(241,98,45)" fg:x="753339732" fg:w="4497004"/><text x="3.0528%" y="1759.50"></text></g><g><title>_raw_spin_lock_irqsave (4,222,212 samples, 0.02%)</title><rect x="2.8208%" y="1749" width="0.0157%" height="15" fill="rgb(254,28,30)" fg:x="758179009" fg:w="4222212"/><text x="3.0708%" y="1759.50"></text></g><g><title>mod_zone_page_state (2,926,564 samples, 0.01%)</title><rect x="2.8425%" y="1749" width="0.0109%" height="15" fill="rgb(241,142,54)" fg:x="764014839" fg:w="2926564"/><text x="3.0925%" y="1759.50"></text></g><g><title>percpu_counter_add_batch (3,113,504 samples, 0.01%)</title><rect x="2.8534%" y="1749" width="0.0116%" height="15" fill="rgb(222,85,15)" fg:x="766941403" fg:w="3113504"/><text x="3.1034%" y="1759.50"></text></g><g><title>xas_load (3,675,965 samples, 0.01%)</title><rect x="2.8719%" y="1749" width="0.0137%" height="15" fill="rgb(210,85,47)" fg:x="771935344" fg:w="3675965"/><text x="3.1219%" y="1759.50"></text></g><g><title>__folio_start_writeback (29,883,943 samples, 0.11%)</title><rect x="2.7818%" y="1765" width="0.1112%" height="15" fill="rgb(224,206,25)" fg:x="747708239" fg:w="29883943"/><text x="3.0318%" y="1775.50"></text></g><g><title>bio_add_folio (4,384,768 samples, 0.02%)</title><rect x="2.8948%" y="1765" width="0.0163%" height="15" fill="rgb(243,201,19)" fg:x="778090470" fg:w="4384768"/><text x="3.1448%" y="1775.50"></text></g><g><title>bio_add_page (4,384,768 samples, 0.02%)</title><rect x="2.8948%" y="1749" width="0.0163%" height="15" fill="rgb(236,59,4)" fg:x="778090470" fg:w="4384768"/><text x="3.1448%" y="1759.50"></text></g><g><title>bh_get_inode_and_lblk_num (2,823,202 samples, 0.01%)</title><rect x="2.9151%" y="1749" width="0.0105%" height="15" fill="rgb(254,179,45)" fg:x="783524755" fg:w="2823202"/><text x="3.1651%" y="1759.50"></text></g><g><title>fscrypt_mergeable_bio_bh (3,773,345 samples, 0.01%)</title><rect x="2.9131%" y="1765" width="0.0140%" height="15" fill="rgb(226,14,10)" fg:x="783005333" fg:w="3773345"/><text x="3.1631%" y="1775.50"></text></g><g><title>submit_bio (3,705,643 samples, 0.01%)</title><rect x="2.9316%" y="1765" width="0.0138%" height="15" fill="rgb(244,27,41)" fg:x="787970202" fg:w="3705643"/><text x="3.1816%" y="1775.50"></text></g><g><title>submit_bio_noacct (3,705,643 samples, 0.01%)</title><rect x="2.9316%" y="1749" width="0.0138%" height="15" fill="rgb(235,35,32)" fg:x="787970202" fg:w="3705643"/><text x="3.1816%" y="1759.50"></text></g><g><title>submit_bio_noacct_nocheck (3,705,643 samples, 0.01%)</title><rect x="2.9316%" y="1733" width="0.0138%" height="15" fill="rgb(218,68,31)" fg:x="787970202" fg:w="3705643"/><text x="3.1816%" y="1743.50"></text></g><g><title>__submit_bio (3,705,643 samples, 0.01%)</title><rect x="2.9316%" y="1717" width="0.0138%" height="15" fill="rgb(207,120,37)" fg:x="787970202" fg:w="3705643"/><text x="3.1816%" y="1727.50"></text></g><g><title>blk_mq_submit_bio (3,705,643 samples, 0.01%)</title><rect x="2.9316%" y="1701" width="0.0138%" height="15" fill="rgb(227,98,0)" fg:x="787970202" fg:w="3705643"/><text x="3.1816%" y="1711.50"></text></g><g><title>blk_add_rq_to_plug (2,820,847 samples, 0.01%)</title><rect x="2.9349%" y="1685" width="0.0105%" height="15" fill="rgb(207,7,3)" fg:x="788854998" fg:w="2820847"/><text x="3.1849%" y="1695.50"></text></g><g><title>blk_mq_flush_plug_list (2,820,847 samples, 0.01%)</title><rect x="2.9349%" y="1669" width="0.0105%" height="15" fill="rgb(206,98,19)" fg:x="788854998" fg:w="2820847"/><text x="3.1849%" y="1679.50"></text></g><g><title>blk_mq_dispatch_plug_list (2,820,847 samples, 0.01%)</title><rect x="2.9349%" y="1653" width="0.0105%" height="15" fill="rgb(217,5,26)" fg:x="788854998" fg:w="2820847"/><text x="3.1849%" y="1663.50"></text></g><g><title>blk_mq_run_hw_queue (2,820,847 samples, 0.01%)</title><rect x="2.9349%" y="1637" width="0.0105%" height="15" fill="rgb(235,190,38)" fg:x="788854998" fg:w="2820847"/><text x="3.1849%" y="1647.50"></text></g><g><title>blk_mq_sched_dispatch_requests (2,820,847 samples, 0.01%)</title><rect x="2.9349%" y="1621" width="0.0105%" height="15" fill="rgb(247,86,24)" fg:x="788854998" fg:w="2820847"/><text x="3.1849%" y="1631.50"></text></g><g><title>__blk_mq_sched_dispatch_requests (2,820,847 samples, 0.01%)</title><rect x="2.9349%" y="1605" width="0.0105%" height="15" fill="rgb(205,101,16)" fg:x="788854998" fg:w="2820847"/><text x="3.1849%" y="1615.50"></text></g><g><title>blk_mq_dispatch_rq_list (2,820,847 samples, 0.01%)</title><rect x="2.9349%" y="1589" width="0.0105%" height="15" fill="rgb(246,168,33)" fg:x="788854998" fg:w="2820847"/><text x="3.1849%" y="1599.50"></text></g><g><title>ext4_bio_write_folio (59,916,471 samples, 0.22%)</title><rect x="2.7300%" y="1781" width="0.2229%" height="15" fill="rgb(231,114,1)" fg:x="733778365" fg:w="59916471"/><text x="2.9800%" y="1791.50"></text></g><g><title>__mod_lruvec_page_state (3,721,733 samples, 0.01%)</title><rect x="2.9629%" y="1765" width="0.0138%" height="15" fill="rgb(207,184,53)" fg:x="796374087" fg:w="3721733"/><text x="3.2129%" y="1775.50"></text></g><g><title>folio_clear_dirty_for_io (10,717,226 samples, 0.04%)</title><rect x="2.9529%" y="1781" width="0.0399%" height="15" fill="rgb(224,95,51)" fg:x="793694836" fg:w="10717226"/><text x="3.2029%" y="1791.50"></text></g><g><title>mpage_prepare_extent_to_map (110,372,627 samples, 0.41%)</title><rect x="2.5833%" y="1829" width="0.4106%" height="15" fill="rgb(212,188,45)" fg:x="694349004" fg:w="110372627"/><text x="2.8333%" y="1839.50"></text></g><g><title>mpage_process_page_bufs (97,725,820 samples, 0.36%)</title><rect x="2.6303%" y="1813" width="0.3636%" height="15" fill="rgb(223,154,38)" fg:x="706995811" fg:w="97725820"/><text x="2.8803%" y="1823.50"></text></g><g><title>mpage_submit_folio (72,397,683 samples, 0.27%)</title><rect x="2.7246%" y="1797" width="0.2694%" height="15" fill="rgb(251,22,52)" fg:x="732323948" fg:w="72397683"/><text x="2.9746%" y="1807.50"></text></g><g><title>process_one_work (112,634,986 samples, 0.42%)</title><rect x="2.5760%" y="1989" width="0.4191%" height="15" fill="rgb(229,209,22)" fg:x="692382857" fg:w="112634986"/><text x="2.8260%" y="1999.50"></text></g><g><title>wb_workfn (112,634,986 samples, 0.42%)</title><rect x="2.5760%" y="1973" width="0.4191%" height="15" fill="rgb(234,138,34)" fg:x="692382857" fg:w="112634986"/><text x="2.8260%" y="1983.50"></text></g><g><title>wb_do_writeback (112,634,986 samples, 0.42%)</title><rect x="2.5760%" y="1957" width="0.4191%" height="15" fill="rgb(212,95,11)" fg:x="692382857" fg:w="112634986"/><text x="2.8260%" y="1967.50"></text></g><g><title>wb_writeback (112,259,426 samples, 0.42%)</title><rect x="2.5774%" y="1941" width="0.4177%" height="15" fill="rgb(240,179,47)" fg:x="692758417" fg:w="112259426"/><text x="2.8274%" y="1951.50"></text></g><g><title>__writeback_inodes_wb (112,259,426 samples, 0.42%)</title><rect x="2.5774%" y="1925" width="0.4177%" height="15" fill="rgb(240,163,11)" fg:x="692758417" fg:w="112259426"/><text x="2.8274%" y="1935.50"></text></g><g><title>writeback_sb_inodes (112,259,426 samples, 0.42%)</title><rect x="2.5774%" y="1909" width="0.4177%" height="15" fill="rgb(236,37,12)" fg:x="692758417" fg:w="112259426"/><text x="2.8274%" y="1919.50"></text></g><g><title>__writeback_single_inode (112,259,426 samples, 0.42%)</title><rect x="2.5774%" y="1893" width="0.4177%" height="15" fill="rgb(232,164,16)" fg:x="692758417" fg:w="112259426"/><text x="2.8274%" y="1903.50"></text></g><g><title>do_writepages (112,259,426 samples, 0.42%)</title><rect x="2.5774%" y="1877" width="0.4177%" height="15" fill="rgb(244,205,15)" fg:x="692758417" fg:w="112259426"/><text x="2.8274%" y="1887.50"></text></g><g><title>ext4_writepages (112,259,426 samples, 0.42%)</title><rect x="2.5774%" y="1861" width="0.4177%" height="15" fill="rgb(223,117,47)" fg:x="692758417" fg:w="112259426"/><text x="2.8274%" y="1871.50"></text></g><g><title>ext4_do_writepages (112,259,426 samples, 0.42%)</title><rect x="2.5774%" y="1845" width="0.4177%" height="15" fill="rgb(244,107,35)" fg:x="692758417" fg:w="112259426"/><text x="2.8274%" y="1855.50"></text></g><g><title>kworker/u66:2-f (113,318,780 samples, 0.42%)</title><rect x="2.5760%" y="2069" width="0.4216%" height="15" fill="rgb(205,140,8)" fg:x="692382857" fg:w="113318780"/><text x="2.8260%" y="2079.50"></text></g><g><title>ret_from_fork_asm (113,318,780 samples, 0.42%)</title><rect x="2.5760%" y="2053" width="0.4216%" height="15" fill="rgb(228,84,46)" fg:x="692382857" fg:w="113318780"/><text x="2.8260%" y="2063.50"></text></g><g><title>ret_from_fork (113,318,780 samples, 0.42%)</title><rect x="2.5760%" y="2037" width="0.4216%" height="15" fill="rgb(254,188,9)" fg:x="692382857" fg:w="113318780"/><text x="2.8260%" y="2047.50"></text></g><g><title>kthread (113,318,780 samples, 0.42%)</title><rect x="2.5760%" y="2021" width="0.4216%" height="15" fill="rgb(206,112,54)" fg:x="692382857" fg:w="113318780"/><text x="2.8260%" y="2031.50"></text></g><g><title>worker_thread (113,318,780 samples, 0.42%)</title><rect x="2.5760%" y="2005" width="0.4216%" height="15" fill="rgb(216,84,49)" fg:x="692382857" fg:w="113318780"/><text x="2.8260%" y="2015.50"></text></g><g><title>filemap_get_folios_tag (5,905,057 samples, 0.02%)</title><rect x="3.0121%" y="1813" width="0.0220%" height="15" fill="rgb(214,194,35)" fg:x="809594110" fg:w="5905057"/><text x="3.2621%" y="1823.50"></text></g><g><title>find_get_entry (5,543,217 samples, 0.02%)</title><rect x="3.0134%" y="1797" width="0.0206%" height="15" fill="rgb(249,28,3)" fg:x="809955950" fg:w="5543217"/><text x="3.2634%" y="1807.50"></text></g><g><title>__folio_start_writeback (14,226,996 samples, 0.05%)</title><rect x="3.1160%" y="1765" width="0.0529%" height="15" fill="rgb(222,56,52)" fg:x="837522642" fg:w="14226996"/><text x="3.3660%" y="1775.50"></text></g><g><title>fscrypt_mergeable_bio_bh (3,406,094 samples, 0.01%)</title><rect x="3.1719%" y="1765" width="0.0127%" height="15" fill="rgb(245,217,50)" fg:x="852557269" fg:w="3406094"/><text x="3.4219%" y="1775.50"></text></g><g><title>ext4_bio_write_folio (30,985,983 samples, 0.12%)</title><rect x="3.0783%" y="1781" width="0.1153%" height="15" fill="rgb(213,201,24)" fg:x="827400374" fg:w="30985983"/><text x="3.3283%" y="1791.50"></text></g><g><title>folio_clear_dirty_for_io (9,001,061 samples, 0.03%)</title><rect x="3.1936%" y="1781" width="0.0335%" height="15" fill="rgb(248,116,28)" fg:x="858386357" fg:w="9001061"/><text x="3.4436%" y="1791.50"></text></g><g><title>kworker/u66:3-w (61,793,398 samples, 0.23%)</title><rect x="2.9976%" y="2069" width="0.2299%" height="15" fill="rgb(219,72,43)" fg:x="805701637" fg:w="61793398"/><text x="3.2476%" y="2079.50"></text></g><g><title>ret_from_fork_asm (61,793,398 samples, 0.23%)</title><rect x="2.9976%" y="2053" width="0.2299%" height="15" fill="rgb(209,138,14)" fg:x="805701637" fg:w="61793398"/><text x="3.2476%" y="2063.50"></text></g><g><title>ret_from_fork (61,793,398 samples, 0.23%)</title><rect x="2.9976%" y="2037" width="0.2299%" height="15" fill="rgb(222,18,33)" fg:x="805701637" fg:w="61793398"/><text x="3.2476%" y="2047.50"></text></g><g><title>kthread (61,793,398 samples, 0.23%)</title><rect x="2.9976%" y="2021" width="0.2299%" height="15" fill="rgb(213,199,7)" fg:x="805701637" fg:w="61793398"/><text x="3.2476%" y="2031.50"></text></g><g><title>worker_thread (61,793,398 samples, 0.23%)</title><rect x="2.9976%" y="2005" width="0.2299%" height="15" fill="rgb(250,110,10)" fg:x="805701637" fg:w="61793398"/><text x="3.2476%" y="2015.50"></text></g><g><title>process_one_work (61,793,398 samples, 0.23%)</title><rect x="2.9976%" y="1989" width="0.2299%" height="15" fill="rgb(248,123,6)" fg:x="805701637" fg:w="61793398"/><text x="3.2476%" y="1999.50"></text></g><g><title>wb_workfn (61,793,398 samples, 0.23%)</title><rect x="2.9976%" y="1973" width="0.2299%" height="15" fill="rgb(206,91,31)" fg:x="805701637" fg:w="61793398"/><text x="3.2476%" y="1983.50"></text></g><g><title>wb_do_writeback (61,793,398 samples, 0.23%)</title><rect x="2.9976%" y="1957" width="0.2299%" height="15" fill="rgb(211,154,13)" fg:x="805701637" fg:w="61793398"/><text x="3.2476%" y="1967.50"></text></g><g><title>wb_writeback (60,261,296 samples, 0.22%)</title><rect x="3.0033%" y="1941" width="0.2242%" height="15" fill="rgb(225,148,7)" fg:x="807233739" fg:w="60261296"/><text x="3.2533%" y="1951.50"></text></g><g><title>__writeback_inodes_wb (60,261,296 samples, 0.22%)</title><rect x="3.0033%" y="1925" width="0.2242%" height="15" fill="rgb(220,160,43)" fg:x="807233739" fg:w="60261296"/><text x="3.2533%" y="1935.50"></text></g><g><title>writeback_sb_inodes (60,261,296 samples, 0.22%)</title><rect x="3.0033%" y="1909" width="0.2242%" height="15" fill="rgb(213,52,39)" fg:x="807233739" fg:w="60261296"/><text x="3.2533%" y="1919.50"></text></g><g><title>__writeback_single_inode (60,261,296 samples, 0.22%)</title><rect x="3.0033%" y="1893" width="0.2242%" height="15" fill="rgb(243,137,7)" fg:x="807233739" fg:w="60261296"/><text x="3.2533%" y="1903.50"></text></g><g><title>do_writepages (60,261,296 samples, 0.22%)</title><rect x="3.0033%" y="1877" width="0.2242%" height="15" fill="rgb(230,79,13)" fg:x="807233739" fg:w="60261296"/><text x="3.2533%" y="1887.50"></text></g><g><title>ext4_writepages (60,261,296 samples, 0.22%)</title><rect x="3.0033%" y="1861" width="0.2242%" height="15" fill="rgb(247,105,23)" fg:x="807233739" fg:w="60261296"/><text x="3.2533%" y="1871.50"></text></g><g><title>ext4_do_writepages (60,261,296 samples, 0.22%)</title><rect x="3.0033%" y="1845" width="0.2242%" height="15" fill="rgb(223,179,41)" fg:x="807233739" fg:w="60261296"/><text x="3.2533%" y="1855.50"></text></g><g><title>mpage_prepare_extent_to_map (60,261,296 samples, 0.22%)</title><rect x="3.0033%" y="1829" width="0.2242%" height="15" fill="rgb(218,9,34)" fg:x="807233739" fg:w="60261296"/><text x="3.2533%" y="1839.50"></text></g><g><title>mpage_process_page_bufs (51,599,190 samples, 0.19%)</title><rect x="3.0355%" y="1813" width="0.1920%" height="15" fill="rgb(222,106,8)" fg:x="815895845" fg:w="51599190"/><text x="3.2855%" y="1823.50"></text></g><g><title>mpage_submit_folio (40,936,556 samples, 0.15%)</title><rect x="3.0752%" y="1797" width="0.1523%" height="15" fill="rgb(211,220,0)" fg:x="826558479" fg:w="40936556"/><text x="3.3252%" y="1807.50"></text></g><g><title>process_one_work (5,461,291 samples, 0.02%)</title><rect x="3.2275%" y="1989" width="0.0203%" height="15" fill="rgb(229,52,16)" fg:x="867495035" fg:w="5461291"/><text x="3.4775%" y="1999.50"></text></g><g><title>wb_workfn (4,538,308 samples, 0.02%)</title><rect x="3.2309%" y="1973" width="0.0169%" height="15" fill="rgb(212,155,18)" fg:x="868418018" fg:w="4538308"/><text x="3.4809%" y="1983.50"></text></g><g><title>wb_do_writeback (4,538,308 samples, 0.02%)</title><rect x="3.2309%" y="1957" width="0.0169%" height="15" fill="rgb(242,21,14)" fg:x="868418018" fg:w="4538308"/><text x="3.4809%" y="1967.50"></text></g><g><title>wb_writeback (4,538,308 samples, 0.02%)</title><rect x="3.2309%" y="1941" width="0.0169%" height="15" fill="rgb(222,19,48)" fg:x="868418018" fg:w="4538308"/><text x="3.4809%" y="1951.50"></text></g><g><title>__writeback_inodes_wb (4,538,308 samples, 0.02%)</title><rect x="3.2309%" y="1925" width="0.0169%" height="15" fill="rgb(232,45,27)" fg:x="868418018" fg:w="4538308"/><text x="3.4809%" y="1935.50"></text></g><g><title>writeback_sb_inodes (4,538,308 samples, 0.02%)</title><rect x="3.2309%" y="1909" width="0.0169%" height="15" fill="rgb(249,103,42)" fg:x="868418018" fg:w="4538308"/><text x="3.4809%" y="1919.50"></text></g><g><title>__writeback_single_inode (4,538,308 samples, 0.02%)</title><rect x="3.2309%" y="1893" width="0.0169%" height="15" fill="rgb(246,81,33)" fg:x="868418018" fg:w="4538308"/><text x="3.4809%" y="1903.50"></text></g><g><title>do_writepages (4,538,308 samples, 0.02%)</title><rect x="3.2309%" y="1877" width="0.0169%" height="15" fill="rgb(252,33,42)" fg:x="868418018" fg:w="4538308"/><text x="3.4809%" y="1887.50"></text></g><g><title>ext4_writepages (4,538,308 samples, 0.02%)</title><rect x="3.2309%" y="1861" width="0.0169%" height="15" fill="rgb(209,212,41)" fg:x="868418018" fg:w="4538308"/><text x="3.4809%" y="1871.50"></text></g><g><title>ext4_do_writepages (4,538,308 samples, 0.02%)</title><rect x="3.2309%" y="1845" width="0.0169%" height="15" fill="rgb(207,154,6)" fg:x="868418018" fg:w="4538308"/><text x="3.4809%" y="1855.50"></text></g><g><title>mpage_prepare_extent_to_map (4,082,842 samples, 0.02%)</title><rect x="3.2326%" y="1829" width="0.0152%" height="15" fill="rgb(223,64,47)" fg:x="868873484" fg:w="4082842"/><text x="3.4826%" y="1839.50"></text></g><g><title>mpage_process_page_bufs (4,082,842 samples, 0.02%)</title><rect x="3.2326%" y="1813" width="0.0152%" height="15" fill="rgb(211,161,38)" fg:x="868873484" fg:w="4082842"/><text x="3.4826%" y="1823.50"></text></g><g><title>mpage_submit_folio (3,295,493 samples, 0.01%)</title><rect x="3.2355%" y="1797" width="0.0123%" height="15" fill="rgb(219,138,40)" fg:x="869660833" fg:w="3295493"/><text x="3.4855%" y="1807.50"></text></g><g><title>kworker/u67:1-e (6,268,472 samples, 0.02%)</title><rect x="3.2275%" y="2069" width="0.0233%" height="15" fill="rgb(241,228,46)" fg:x="867495035" fg:w="6268472"/><text x="3.4775%" y="2079.50"></text></g><g><title>ret_from_fork_asm (6,268,472 samples, 0.02%)</title><rect x="3.2275%" y="2053" width="0.0233%" height="15" fill="rgb(223,209,38)" fg:x="867495035" fg:w="6268472"/><text x="3.4775%" y="2063.50"></text></g><g><title>ret_from_fork (6,268,472 samples, 0.02%)</title><rect x="3.2275%" y="2037" width="0.0233%" height="15" fill="rgb(236,164,45)" fg:x="867495035" fg:w="6268472"/><text x="3.4775%" y="2047.50"></text></g><g><title>kthread (6,268,472 samples, 0.02%)</title><rect x="3.2275%" y="2021" width="0.0233%" height="15" fill="rgb(231,15,5)" fg:x="867495035" fg:w="6268472"/><text x="3.4775%" y="2031.50"></text></g><g><title>worker_thread (6,268,472 samples, 0.02%)</title><rect x="3.2275%" y="2005" width="0.0233%" height="15" fill="rgb(252,35,15)" fg:x="867495035" fg:w="6268472"/><text x="3.4775%" y="2015.50"></text></g><g><title>__rq_qos_throttle (2,876,156 samples, 0.01%)</title><rect x="3.2666%" y="1733" width="0.0107%" height="15" fill="rgb(248,181,18)" fg:x="878007251" fg:w="2876156"/><text x="3.5166%" y="1743.50"></text></g><g><title>wbt_wait (2,876,156 samples, 0.01%)</title><rect x="3.2666%" y="1717" width="0.0107%" height="15" fill="rgb(233,39,42)" fg:x="878007251" fg:w="2876156"/><text x="3.5166%" y="1727.50"></text></g><g><title>rq_qos_wait (2,876,156 samples, 0.01%)</title><rect x="3.2666%" y="1701" width="0.0107%" height="15" fill="rgb(238,110,33)" fg:x="878007251" fg:w="2876156"/><text x="3.5166%" y="1711.50"></text></g><g><title>io_schedule (2,876,156 samples, 0.01%)</title><rect x="3.2666%" y="1685" width="0.0107%" height="15" fill="rgb(233,195,10)" fg:x="878007251" fg:w="2876156"/><text x="3.5166%" y="1695.50"></text></g><g><title>ext4_io_submit (6,685,938 samples, 0.02%)</title><rect x="3.2641%" y="1829" width="0.0249%" height="15" fill="rgb(254,105,3)" fg:x="877339763" fg:w="6685938"/><text x="3.5141%" y="1839.50"></text></g><g><title>submit_bio (6,685,938 samples, 0.02%)</title><rect x="3.2641%" y="1813" width="0.0249%" height="15" fill="rgb(221,225,9)" fg:x="877339763" fg:w="6685938"/><text x="3.5141%" y="1823.50"></text></g><g><title>submit_bio_noacct (6,685,938 samples, 0.02%)</title><rect x="3.2641%" y="1797" width="0.0249%" height="15" fill="rgb(224,227,45)" fg:x="877339763" fg:w="6685938"/><text x="3.5141%" y="1807.50"></text></g><g><title>submit_bio_noacct_nocheck (6,685,938 samples, 0.02%)</title><rect x="3.2641%" y="1781" width="0.0249%" height="15" fill="rgb(229,198,43)" fg:x="877339763" fg:w="6685938"/><text x="3.5141%" y="1791.50"></text></g><g><title>__submit_bio (6,685,938 samples, 0.02%)</title><rect x="3.2641%" y="1765" width="0.0249%" height="15" fill="rgb(206,209,35)" fg:x="877339763" fg:w="6685938"/><text x="3.5141%" y="1775.50"></text></g><g><title>blk_mq_submit_bio (6,685,938 samples, 0.02%)</title><rect x="3.2641%" y="1749" width="0.0249%" height="15" fill="rgb(245,195,53)" fg:x="877339763" fg:w="6685938"/><text x="3.5141%" y="1759.50"></text></g><g><title>blk_add_rq_to_plug (3,142,294 samples, 0.01%)</title><rect x="3.2773%" y="1733" width="0.0117%" height="15" fill="rgb(240,92,26)" fg:x="880883407" fg:w="3142294"/><text x="3.5273%" y="1743.50"></text></g><g><title>blk_mq_flush_plug_list (3,142,294 samples, 0.01%)</title><rect x="3.2773%" y="1717" width="0.0117%" height="15" fill="rgb(207,40,23)" fg:x="880883407" fg:w="3142294"/><text x="3.5273%" y="1727.50"></text></g><g><title>blk_mq_dispatch_plug_list (3,142,294 samples, 0.01%)</title><rect x="3.2773%" y="1701" width="0.0117%" height="15" fill="rgb(223,111,35)" fg:x="880883407" fg:w="3142294"/><text x="3.5273%" y="1711.50"></text></g><g><title>blk_mq_run_hw_queue (3,142,294 samples, 0.01%)</title><rect x="3.2773%" y="1685" width="0.0117%" height="15" fill="rgb(229,147,28)" fg:x="880883407" fg:w="3142294"/><text x="3.5273%" y="1695.50"></text></g><g><title>blk_mq_sched_dispatch_requests (3,142,294 samples, 0.01%)</title><rect x="3.2773%" y="1669" width="0.0117%" height="15" fill="rgb(211,29,28)" fg:x="880883407" fg:w="3142294"/><text x="3.5273%" y="1679.50"></text></g><g><title>__blk_mq_sched_dispatch_requests (3,142,294 samples, 0.01%)</title><rect x="3.2773%" y="1653" width="0.0117%" height="15" fill="rgb(228,72,33)" fg:x="880883407" fg:w="3142294"/><text x="3.5273%" y="1663.50"></text></g><g><title>blk_mq_dispatch_rq_list (2,728,231 samples, 0.01%)</title><rect x="3.2788%" y="1637" width="0.0102%" height="15" fill="rgb(205,214,31)" fg:x="881297470" fg:w="2728231"/><text x="3.5288%" y="1647.50"></text></g><g><title>scsi_queue_rq (2,728,231 samples, 0.01%)</title><rect x="3.2788%" y="1621" width="0.0102%" height="15" fill="rgb(224,111,15)" fg:x="881297470" fg:w="2728231"/><text x="3.5288%" y="1631.50"></text></g><g><title>__folio_batch_release (3,290,601 samples, 0.01%)</title><rect x="3.2966%" y="1813" width="0.0122%" height="15" fill="rgb(253,21,26)" fg:x="886088165" fg:w="3290601"/><text x="3.5466%" y="1823.50"></text></g><g><title>release_pages (3,290,601 samples, 0.01%)</title><rect x="3.2966%" y="1797" width="0.0122%" height="15" fill="rgb(245,139,43)" fg:x="886088165" fg:w="3290601"/><text x="3.5466%" y="1807.50"></text></g><g><title>filemap_get_folios_tag (16,279,139 samples, 0.06%)</title><rect x="3.3089%" y="1813" width="0.0606%" height="15" fill="rgb(252,170,7)" fg:x="889378766" fg:w="16279139"/><text x="3.5589%" y="1823.50"></text></g><g><title>find_get_entry (13,560,319 samples, 0.05%)</title><rect x="3.3190%" y="1797" width="0.0505%" height="15" fill="rgb(231,118,14)" fg:x="892097586" fg:w="13560319"/><text x="3.5690%" y="1807.50"></text></g><g><title>xas_find_marked (3,959,056 samples, 0.01%)</title><rect x="3.3547%" y="1781" width="0.0147%" height="15" fill="rgb(238,83,0)" fg:x="901698849" fg:w="3959056"/><text x="3.6047%" y="1791.50"></text></g><g><title>__mod_memcg_lruvec_state (4,051,419 samples, 0.02%)</title><rect x="3.5856%" y="1733" width="0.0151%" height="15" fill="rgb(221,39,39)" fg:x="963744604" fg:w="4051419"/><text x="3.8356%" y="1743.50"></text></g><g><title>__mod_lruvec_page_state (8,888,298 samples, 0.03%)</title><rect x="3.5791%" y="1749" width="0.0331%" height="15" fill="rgb(222,119,46)" fg:x="962020791" fg:w="8888298"/><text x="3.8291%" y="1759.50"></text></g><g><title>__mod_node_page_state (3,113,066 samples, 0.01%)</title><rect x="3.6006%" y="1733" width="0.0116%" height="15" fill="rgb(222,165,49)" fg:x="967796023" fg:w="3113066"/><text x="3.8506%" y="1743.50"></text></g><g><title>percpu_counter_add_batch (2,915,438 samples, 0.01%)</title><rect x="3.6355%" y="1749" width="0.0108%" height="15" fill="rgb(219,113,52)" fg:x="977157775" fg:w="2915438"/><text x="3.8855%" y="1759.50"></text></g><g><title>xas_load (6,094,033 samples, 0.02%)</title><rect x="3.6527%" y="1749" width="0.0227%" height="15" fill="rgb(214,7,15)" fg:x="981793195" fg:w="6094033"/><text x="3.9027%" y="1759.50"></text></g><g><title>xas_start (3,534,509 samples, 0.01%)</title><rect x="3.6622%" y="1733" width="0.0131%" height="15" fill="rgb(235,32,4)" fg:x="984352719" fg:w="3534509"/><text x="3.9122%" y="1743.50"></text></g><g><title>__folio_start_writeback (37,618,151 samples, 0.14%)</title><rect x="3.5503%" y="1765" width="0.1400%" height="15" fill="rgb(238,90,54)" fg:x="954276115" fg:w="37618151"/><text x="3.8003%" y="1775.50"></text></g><g><title>xas_set_mark (4,007,038 samples, 0.01%)</title><rect x="3.6754%" y="1749" width="0.0149%" height="15" fill="rgb(213,208,19)" fg:x="987887228" fg:w="4007038"/><text x="3.9254%" y="1759.50"></text></g><g><title>bio_add_folio (3,111,986 samples, 0.01%)</title><rect x="3.6903%" y="1765" width="0.0116%" height="15" fill="rgb(233,156,4)" fg:x="991894266" fg:w="3111986"/><text x="3.9403%" y="1775.50"></text></g><g><title>bio_add_page (3,111,986 samples, 0.01%)</title><rect x="3.6903%" y="1749" width="0.0116%" height="15" fill="rgb(207,194,5)" fg:x="991894266" fg:w="3111986"/><text x="3.9403%" y="1759.50"></text></g><g><title>bh_get_inode_and_lblk_num (4,461,952 samples, 0.02%)</title><rect x="3.7094%" y="1749" width="0.0166%" height="15" fill="rgb(206,111,30)" fg:x="997038464" fg:w="4461952"/><text x="3.9594%" y="1759.50"></text></g><g><title>fscrypt_mergeable_bio_bh (6,587,647 samples, 0.02%)</title><rect x="3.7040%" y="1765" width="0.0245%" height="15" fill="rgb(243,70,54)" fg:x="995566115" fg:w="6587647"/><text x="3.9540%" y="1775.50"></text></g><g><title>scsi_dispatch_cmd (3,329,377 samples, 0.01%)</title><rect x="3.7325%" y="1557" width="0.0124%" height="15" fill="rgb(242,28,8)" fg:x="1003232667" fg:w="3329377"/><text x="3.9825%" y="1567.50"></text></g><g><title>ata_scsi_queuecmd (3,329,377 samples, 0.01%)</title><rect x="3.7325%" y="1541" width="0.0124%" height="15" fill="rgb(219,106,18)" fg:x="1003232667" fg:w="3329377"/><text x="3.9825%" y="1551.50"></text></g><g><title>__ata_scsi_queuecmd (3,329,377 samples, 0.01%)</title><rect x="3.7325%" y="1525" width="0.0124%" height="15" fill="rgb(244,222,10)" fg:x="1003232667" fg:w="3329377"/><text x="3.9825%" y="1535.50"></text></g><g><title>ata_qc_issue (3,329,377 samples, 0.01%)</title><rect x="3.7325%" y="1509" width="0.0124%" height="15" fill="rgb(236,179,52)" fg:x="1003232667" fg:w="3329377"/><text x="3.9825%" y="1519.50"></text></g><g><title>dma_map_sg_attrs (3,329,377 samples, 0.01%)</title><rect x="3.7325%" y="1493" width="0.0124%" height="15" fill="rgb(213,23,39)" fg:x="1003232667" fg:w="3329377"/><text x="3.9825%" y="1503.50"></text></g><g><title>__dma_map_sg_attrs (3,329,377 samples, 0.01%)</title><rect x="3.7325%" y="1477" width="0.0124%" height="15" fill="rgb(238,48,10)" fg:x="1003232667" fg:w="3329377"/><text x="3.9825%" y="1487.50"></text></g><g><title>iommu_dma_map_sg (3,329,377 samples, 0.01%)</title><rect x="3.7325%" y="1461" width="0.0124%" height="15" fill="rgb(251,196,23)" fg:x="1003232667" fg:w="3329377"/><text x="3.9825%" y="1471.50"></text></g><g><title>iommu_map_sg (2,779,241 samples, 0.01%)</title><rect x="3.7345%" y="1445" width="0.0103%" height="15" fill="rgb(250,152,24)" fg:x="1003782803" fg:w="2779241"/><text x="3.9845%" y="1455.50"></text></g><g><title>__iommu_map (2,779,241 samples, 0.01%)</title><rect x="3.7345%" y="1429" width="0.0103%" height="15" fill="rgb(209,150,17)" fg:x="1003782803" fg:w="2779241"/><text x="3.9845%" y="1439.50"></text></g><g><title>__iommu_map_pages (2,779,241 samples, 0.01%)</title><rect x="3.7345%" y="1413" width="0.0103%" height="15" fill="rgb(234,202,34)" fg:x="1003782803" fg:w="2779241"/><text x="3.9845%" y="1423.50"></text></g><g><title>amd_iommu_map_pages (2,779,241 samples, 0.01%)</title><rect x="3.7345%" y="1397" width="0.0103%" height="15" fill="rgb(253,148,53)" fg:x="1003782803" fg:w="2779241"/><text x="3.9845%" y="1407.50"></text></g><g><title>iommu_v1_map_pages (2,779,241 samples, 0.01%)</title><rect x="3.7345%" y="1381" width="0.0103%" height="15" fill="rgb(218,129,16)" fg:x="1003782803" fg:w="2779241"/><text x="3.9845%" y="1391.50"></text></g><g><title>blk_mq_dispatch_rq_list (3,804,251 samples, 0.01%)</title><rect x="3.7325%" y="1589" width="0.0142%" height="15" fill="rgb(216,85,19)" fg:x="1003232667" fg:w="3804251"/><text x="3.9825%" y="1599.50"></text></g><g><title>scsi_queue_rq (3,804,251 samples, 0.01%)</title><rect x="3.7325%" y="1573" width="0.0142%" height="15" fill="rgb(235,228,7)" fg:x="1003232667" fg:w="3804251"/><text x="3.9825%" y="1583.50"></text></g><g><title>submit_bio (5,400,890 samples, 0.02%)</title><rect x="3.7285%" y="1765" width="0.0201%" height="15" fill="rgb(245,175,0)" fg:x="1002153762" fg:w="5400890"/><text x="3.9785%" y="1775.50"></text></g><g><title>submit_bio_noacct (5,400,890 samples, 0.02%)</title><rect x="3.7285%" y="1749" width="0.0201%" height="15" fill="rgb(208,168,36)" fg:x="1002153762" fg:w="5400890"/><text x="3.9785%" y="1759.50"></text></g><g><title>submit_bio_noacct_nocheck (5,400,890 samples, 0.02%)</title><rect x="3.7285%" y="1733" width="0.0201%" height="15" fill="rgb(246,171,24)" fg:x="1002153762" fg:w="5400890"/><text x="3.9785%" y="1743.50"></text></g><g><title>__submit_bio (5,400,890 samples, 0.02%)</title><rect x="3.7285%" y="1717" width="0.0201%" height="15" fill="rgb(215,142,24)" fg:x="1002153762" fg:w="5400890"/><text x="3.9785%" y="1727.50"></text></g><g><title>blk_mq_submit_bio (5,400,890 samples, 0.02%)</title><rect x="3.7285%" y="1701" width="0.0201%" height="15" fill="rgb(250,187,7)" fg:x="1002153762" fg:w="5400890"/><text x="3.9785%" y="1711.50"></text></g><g><title>blk_add_rq_to_plug (4,321,985 samples, 0.02%)</title><rect x="3.7325%" y="1685" width="0.0161%" height="15" fill="rgb(228,66,33)" fg:x="1003232667" fg:w="4321985"/><text x="3.9825%" y="1695.50"></text></g><g><title>blk_mq_flush_plug_list (4,321,985 samples, 0.02%)</title><rect x="3.7325%" y="1669" width="0.0161%" height="15" fill="rgb(234,215,21)" fg:x="1003232667" fg:w="4321985"/><text x="3.9825%" y="1679.50"></text></g><g><title>blk_mq_dispatch_plug_list (4,321,985 samples, 0.02%)</title><rect x="3.7325%" y="1653" width="0.0161%" height="15" fill="rgb(222,191,20)" fg:x="1003232667" fg:w="4321985"/><text x="3.9825%" y="1663.50"></text></g><g><title>blk_mq_run_hw_queue (4,321,985 samples, 0.02%)</title><rect x="3.7325%" y="1637" width="0.0161%" height="15" fill="rgb(245,79,54)" fg:x="1003232667" fg:w="4321985"/><text x="3.9825%" y="1647.50"></text></g><g><title>blk_mq_sched_dispatch_requests (4,321,985 samples, 0.02%)</title><rect x="3.7325%" y="1621" width="0.0161%" height="15" fill="rgb(240,10,37)" fg:x="1003232667" fg:w="4321985"/><text x="3.9825%" y="1631.50"></text></g><g><title>__blk_mq_sched_dispatch_requests (4,321,985 samples, 0.02%)</title><rect x="3.7325%" y="1605" width="0.0161%" height="15" fill="rgb(214,192,32)" fg:x="1003232667" fg:w="4321985"/><text x="3.9825%" y="1615.50"></text></g><g><title>ext4_bio_write_folio (72,611,970 samples, 0.27%)</title><rect x="3.4854%" y="1781" width="0.2701%" height="15" fill="rgb(209,36,54)" fg:x="936813469" fg:w="72611970"/><text x="3.7354%" y="1791.50"></text></g><g><title>__mod_lruvec_page_state (3,095,471 samples, 0.01%)</title><rect x="3.7714%" y="1765" width="0.0115%" height="15" fill="rgb(220,10,11)" fg:x="1013704256" fg:w="3095471"/><text x="4.0214%" y="1775.50"></text></g><g><title>folio_clear_dirty_for_io (14,076,723 samples, 0.05%)</title><rect x="3.7555%" y="1781" width="0.0524%" height="15" fill="rgb(221,106,17)" fg:x="1009425439" fg:w="14076723"/><text x="4.0055%" y="1791.50"></text></g><g><title>percpu_counter_add_batch (2,720,080 samples, 0.01%)</title><rect x="3.7978%" y="1765" width="0.0101%" height="15" fill="rgb(251,142,44)" fg:x="1020782082" fg:w="2720080"/><text x="4.0478%" y="1775.50"></text></g><g><title>mpage_prepare_extent_to_map (140,258,162 samples, 0.52%)</title><rect x="3.2890%" y="1829" width="0.5218%" height="15" fill="rgb(238,13,15)" fg:x="884025701" fg:w="140258162"/><text x="3.5390%" y="1839.50"></text></g><g><title>mpage_process_page_bufs (118,625,958 samples, 0.44%)</title><rect x="3.3695%" y="1813" width="0.4413%" height="15" fill="rgb(208,107,27)" fg:x="905657905" fg:w="118625958"/><text x="3.6195%" y="1823.50"></text></g><g><title>mpage_submit_folio (90,381,488 samples, 0.34%)</title><rect x="3.4745%" y="1797" width="0.3363%" height="15" fill="rgb(205,136,37)" fg:x="933902375" fg:w="90381488"/><text x="3.7245%" y="1807.50"></text></g><g><title>__writeback_inodes_wb (149,726,931 samples, 0.56%)</title><rect x="3.2579%" y="1925" width="0.5571%" height="15" fill="rgb(250,205,27)" fg:x="875676918" fg:w="149726931"/><text x="3.5079%" y="1935.50"></text></g><g><title>writeback_sb_inodes (149,726,931 samples, 0.56%)</title><rect x="3.2579%" y="1909" width="0.5571%" height="15" fill="rgb(210,80,43)" fg:x="875676918" fg:w="149726931"/><text x="3.5079%" y="1919.50"></text></g><g><title>__writeback_single_inode (149,726,931 samples, 0.56%)</title><rect x="3.2579%" y="1893" width="0.5571%" height="15" fill="rgb(247,160,36)" fg:x="875676918" fg:w="149726931"/><text x="3.5079%" y="1903.50"></text></g><g><title>do_writepages (149,374,570 samples, 0.56%)</title><rect x="3.2592%" y="1877" width="0.5557%" height="15" fill="rgb(234,13,49)" fg:x="876029279" fg:w="149374570"/><text x="3.5092%" y="1887.50"></text></g><g><title>ext4_writepages (149,374,570 samples, 0.56%)</title><rect x="3.2592%" y="1861" width="0.5557%" height="15" fill="rgb(234,122,0)" fg:x="876029279" fg:w="149374570"/><text x="3.5092%" y="1871.50"></text></g><g><title>ext4_do_writepages (149,009,573 samples, 0.55%)</title><rect x="3.2606%" y="1845" width="0.5544%" height="15" fill="rgb(207,146,38)" fg:x="876394276" fg:w="149009573"/><text x="3.5106%" y="1855.50"></text></g><g><title>process_one_work (151,661,079 samples, 0.56%)</title><rect x="3.2519%" y="1989" width="0.5642%" height="15" fill="rgb(207,177,25)" fg:x="874053725" fg:w="151661079"/><text x="3.5019%" y="1999.50"></text></g><g><title>wb_workfn (150,677,271 samples, 0.56%)</title><rect x="3.2555%" y="1973" width="0.5606%" height="15" fill="rgb(211,178,42)" fg:x="875037533" fg:w="150677271"/><text x="3.5055%" y="1983.50"></text></g><g><title>wb_do_writeback (150,677,271 samples, 0.56%)</title><rect x="3.2555%" y="1957" width="0.5606%" height="15" fill="rgb(230,69,54)" fg:x="875037533" fg:w="150677271"/><text x="3.5055%" y="1967.50"></text></g><g><title>wb_writeback (150,037,886 samples, 0.56%)</title><rect x="3.2579%" y="1941" width="0.5582%" height="15" fill="rgb(214,135,41)" fg:x="875676918" fg:w="150037886"/><text x="3.5079%" y="1951.50"></text></g><g><title>kworker/u67:2-f (152,358,659 samples, 0.57%)</title><rect x="3.2508%" y="2069" width="0.5668%" height="15" fill="rgb(237,67,25)" fg:x="873763507" fg:w="152358659"/><text x="3.5008%" y="2079.50"></text></g><g><title>ret_from_fork_asm (152,068,441 samples, 0.57%)</title><rect x="3.2519%" y="2053" width="0.5658%" height="15" fill="rgb(222,189,50)" fg:x="874053725" fg:w="152068441"/><text x="3.5019%" y="2063.50"></text></g><g><title>ret_from_fork (152,068,441 samples, 0.57%)</title><rect x="3.2519%" y="2037" width="0.5658%" height="15" fill="rgb(245,148,34)" fg:x="874053725" fg:w="152068441"/><text x="3.5019%" y="2047.50"></text></g><g><title>kthread (152,068,441 samples, 0.57%)</title><rect x="3.2519%" y="2021" width="0.5658%" height="15" fill="rgb(222,29,6)" fg:x="874053725" fg:w="152068441"/><text x="3.5019%" y="2031.50"></text></g><g><title>worker_thread (152,068,441 samples, 0.57%)</title><rect x="3.2519%" y="2005" width="0.5658%" height="15" fill="rgb(221,189,43)" fg:x="874053725" fg:w="152068441"/><text x="3.5019%" y="2015.50"></text></g><g><title>__folio_start_writeback (6,242,961 samples, 0.02%)</title><rect x="3.8890%" y="1765" width="0.0232%" height="15" fill="rgb(207,36,27)" fg:x="1045311947" fg:w="6242961"/><text x="4.1390%" y="1775.50"></text></g><g><title>ext4_bio_write_folio (16,608,625 samples, 0.06%)</title><rect x="3.8687%" y="1781" width="0.0618%" height="15" fill="rgb(217,90,24)" fg:x="1039841968" fg:w="16608625"/><text x="4.1187%" y="1791.50"></text></g><g><title>ext4_writepages (35,155,666 samples, 0.13%)</title><rect x="3.8214%" y="1861" width="0.1308%" height="15" fill="rgb(224,66,35)" fg:x="1027125466" fg:w="35155666"/><text x="4.0714%" y="1871.50"></text></g><g><title>ext4_do_writepages (35,155,666 samples, 0.13%)</title><rect x="3.8214%" y="1845" width="0.1308%" height="15" fill="rgb(221,13,50)" fg:x="1027125466" fg:w="35155666"/><text x="4.0714%" y="1855.50"></text></g><g><title>mpage_prepare_extent_to_map (32,715,426 samples, 0.12%)</title><rect x="3.8304%" y="1829" width="0.1217%" height="15" fill="rgb(236,68,49)" fg:x="1029565706" fg:w="32715426"/><text x="4.0804%" y="1839.50"></text></g><g><title>mpage_process_page_bufs (27,654,738 samples, 0.10%)</title><rect x="3.8493%" y="1813" width="0.1029%" height="15" fill="rgb(229,146,28)" fg:x="1034626394" fg:w="27654738"/><text x="4.0993%" y="1823.50"></text></g><g><title>mpage_submit_folio (22,713,803 samples, 0.08%)</title><rect x="3.8677%" y="1797" width="0.0845%" height="15" fill="rgb(225,31,38)" fg:x="1039567329" fg:w="22713803"/><text x="4.1177%" y="1807.50"></text></g><g><title>folio_clear_dirty_for_io (5,830,539 samples, 0.02%)</title><rect x="3.9305%" y="1781" width="0.0217%" height="15" fill="rgb(250,208,3)" fg:x="1056450593" fg:w="5830539"/><text x="4.1805%" y="1791.50"></text></g><g><title>process_one_work (36,273,813 samples, 0.13%)</title><rect x="3.8187%" y="1989" width="0.1350%" height="15" fill="rgb(246,54,23)" fg:x="1026413946" fg:w="36273813"/><text x="4.0687%" y="1999.50"></text></g><g><title>wb_workfn (35,680,840 samples, 0.13%)</title><rect x="3.8209%" y="1973" width="0.1327%" height="15" fill="rgb(243,76,11)" fg:x="1027006919" fg:w="35680840"/><text x="4.0709%" y="1983.50"></text></g><g><title>wb_do_writeback (35,680,840 samples, 0.13%)</title><rect x="3.8209%" y="1957" width="0.1327%" height="15" fill="rgb(245,21,50)" fg:x="1027006919" fg:w="35680840"/><text x="4.0709%" y="1967.50"></text></g><g><title>wb_writeback (35,562,293 samples, 0.13%)</title><rect x="3.8214%" y="1941" width="0.1323%" height="15" fill="rgb(228,9,43)" fg:x="1027125466" fg:w="35562293"/><text x="4.0714%" y="1951.50"></text></g><g><title>__writeback_inodes_wb (35,562,293 samples, 0.13%)</title><rect x="3.8214%" y="1925" width="0.1323%" height="15" fill="rgb(208,100,47)" fg:x="1027125466" fg:w="35562293"/><text x="4.0714%" y="1935.50"></text></g><g><title>writeback_sb_inodes (35,562,293 samples, 0.13%)</title><rect x="3.8214%" y="1909" width="0.1323%" height="15" fill="rgb(232,26,8)" fg:x="1027125466" fg:w="35562293"/><text x="4.0714%" y="1919.50"></text></g><g><title>__writeback_single_inode (35,562,293 samples, 0.13%)</title><rect x="3.8214%" y="1893" width="0.1323%" height="15" fill="rgb(216,166,38)" fg:x="1027125466" fg:w="35562293"/><text x="4.0714%" y="1903.50"></text></g><g><title>do_writepages (35,562,293 samples, 0.13%)</title><rect x="3.8214%" y="1877" width="0.1323%" height="15" fill="rgb(251,202,51)" fg:x="1027125466" fg:w="35562293"/><text x="4.0714%" y="1887.50"></text></g><g><title>kworker/u67:3-f (36,929,840 samples, 0.14%)</title><rect x="3.8176%" y="2069" width="0.1374%" height="15" fill="rgb(254,216,34)" fg:x="1026122166" fg:w="36929840"/><text x="4.0676%" y="2079.50"></text></g><g><title>ret_from_fork_asm (36,929,840 samples, 0.14%)</title><rect x="3.8176%" y="2053" width="0.1374%" height="15" fill="rgb(251,32,27)" fg:x="1026122166" fg:w="36929840"/><text x="4.0676%" y="2063.50"></text></g><g><title>ret_from_fork (36,929,840 samples, 0.14%)</title><rect x="3.8176%" y="2037" width="0.1374%" height="15" fill="rgb(208,127,28)" fg:x="1026122166" fg:w="36929840"/><text x="4.0676%" y="2047.50"></text></g><g><title>kthread (36,929,840 samples, 0.14%)</title><rect x="3.8176%" y="2021" width="0.1374%" height="15" fill="rgb(224,137,22)" fg:x="1026122166" fg:w="36929840"/><text x="4.0676%" y="2031.50"></text></g><g><title>worker_thread (36,929,840 samples, 0.14%)</title><rect x="3.8176%" y="2005" width="0.1374%" height="15" fill="rgb(254,70,32)" fg:x="1026122166" fg:w="36929840"/><text x="4.0676%" y="2015.50"></text></g><g><title>find_get_entry (7,845,471 samples, 0.03%)</title><rect x="3.9896%" y="1797" width="0.0292%" height="15" fill="rgb(229,75,37)" fg:x="1072354553" fg:w="7845471"/><text x="4.2396%" y="1807.50"></text></g><g><title>xas_find_marked (4,863,709 samples, 0.02%)</title><rect x="4.0007%" y="1781" width="0.0181%" height="15" fill="rgb(252,64,23)" fg:x="1075336315" fg:w="4863709"/><text x="4.2507%" y="1791.50"></text></g><g><title>filemap_get_folios_tag (8,840,811 samples, 0.03%)</title><rect x="3.9877%" y="1813" width="0.0329%" height="15" fill="rgb(232,162,48)" fg:x="1071833852" fg:w="8840811"/><text x="4.2377%" y="1823.50"></text></g><g><title>xas_load (2,931,172 samples, 0.01%)</title><rect x="4.1443%" y="1749" width="0.0109%" height="15" fill="rgb(246,160,12)" fg:x="1113915843" fg:w="2931172"/><text x="4.3943%" y="1759.50"></text></g><g><title>__folio_start_writeback (17,084,585 samples, 0.06%)</title><rect x="4.0967%" y="1765" width="0.0636%" height="15" fill="rgb(247,166,0)" fg:x="1101129426" fg:w="17084585"/><text x="4.3467%" y="1775.50"></text></g><g><title>submit_bio (2,996,950 samples, 0.01%)</title><rect x="4.1759%" y="1765" width="0.0111%" height="15" fill="rgb(249,219,21)" fg:x="1122417080" fg:w="2996950"/><text x="4.4259%" y="1775.50"></text></g><g><title>submit_bio_noacct (2,996,950 samples, 0.01%)</title><rect x="4.1759%" y="1749" width="0.0111%" height="15" fill="rgb(205,209,3)" fg:x="1122417080" fg:w="2996950"/><text x="4.4259%" y="1759.50"></text></g><g><title>submit_bio_noacct_nocheck (2,996,950 samples, 0.01%)</title><rect x="4.1759%" y="1733" width="0.0111%" height="15" fill="rgb(243,44,1)" fg:x="1122417080" fg:w="2996950"/><text x="4.4259%" y="1743.50"></text></g><g><title>__submit_bio (2,996,950 samples, 0.01%)</title><rect x="4.1759%" y="1717" width="0.0111%" height="15" fill="rgb(206,159,16)" fg:x="1122417080" fg:w="2996950"/><text x="4.4259%" y="1727.50"></text></g><g><title>blk_mq_submit_bio (2,996,950 samples, 0.01%)</title><rect x="4.1759%" y="1701" width="0.0111%" height="15" fill="rgb(244,77,30)" fg:x="1122417080" fg:w="2996950"/><text x="4.4259%" y="1711.50"></text></g><g><title>ext4_bio_write_folio (35,360,752 samples, 0.13%)</title><rect x="4.0564%" y="1781" width="0.1316%" height="15" fill="rgb(218,69,12)" fg:x="1090301069" fg:w="35360752"/><text x="4.3064%" y="1791.50"></text></g><g><title>folio_clear_dirty_for_io (12,514,257 samples, 0.05%)</title><rect x="4.1880%" y="1781" width="0.0466%" height="15" fill="rgb(212,87,7)" fg:x="1125661821" fg:w="12514257"/><text x="4.4380%" y="1791.50"></text></g><g><title>__writeback_single_inode (74,777,421 samples, 0.28%)</title><rect x="3.9572%" y="1893" width="0.2782%" height="15" fill="rgb(245,114,25)" fg:x="1063642285" fg:w="74777421"/><text x="4.2072%" y="1903.50"></text></g><g><title>do_writepages (74,777,421 samples, 0.28%)</title><rect x="3.9572%" y="1877" width="0.2782%" height="15" fill="rgb(210,61,42)" fg:x="1063642285" fg:w="74777421"/><text x="4.2072%" y="1887.50"></text></g><g><title>ext4_writepages (74,777,421 samples, 0.28%)</title><rect x="3.9572%" y="1861" width="0.2782%" height="15" fill="rgb(211,52,33)" fg:x="1063642285" fg:w="74777421"/><text x="4.2072%" y="1871.50"></text></g><g><title>ext4_do_writepages (74,777,421 samples, 0.28%)</title><rect x="3.9572%" y="1845" width="0.2782%" height="15" fill="rgb(234,58,33)" fg:x="1063642285" fg:w="74777421"/><text x="4.2072%" y="1855.50"></text></g><g><title>mpage_prepare_extent_to_map (71,653,298 samples, 0.27%)</title><rect x="3.9689%" y="1829" width="0.2666%" height="15" fill="rgb(220,115,36)" fg:x="1066766408" fg:w="71653298"/><text x="4.2189%" y="1839.50"></text></g><g><title>mpage_process_page_bufs (57,745,043 samples, 0.21%)</title><rect x="4.0206%" y="1813" width="0.2148%" height="15" fill="rgb(243,153,54)" fg:x="1080674663" fg:w="57745043"/><text x="4.2706%" y="1823.50"></text></g><g><title>mpage_submit_folio (49,376,626 samples, 0.18%)</title><rect x="4.0517%" y="1797" width="0.1837%" height="15" fill="rgb(251,47,18)" fg:x="1089043080" fg:w="49376626"/><text x="4.3017%" y="1807.50"></text></g><g><title>__writeback_inodes_wb (75,322,029 samples, 0.28%)</title><rect x="3.9572%" y="1925" width="0.2802%" height="15" fill="rgb(242,102,42)" fg:x="1063642285" fg:w="75322029"/><text x="4.2072%" y="1935.50"></text></g><g><title>writeback_sb_inodes (75,322,029 samples, 0.28%)</title><rect x="3.9572%" y="1909" width="0.2802%" height="15" fill="rgb(234,31,38)" fg:x="1063642285" fg:w="75322029"/><text x="4.2072%" y="1919.50"></text></g><g><title>kworker/u68:1-f (76,929,968 samples, 0.29%)</title><rect x="3.9550%" y="2069" width="0.2862%" height="15" fill="rgb(221,117,51)" fg:x="1063052006" fg:w="76929968"/><text x="4.2050%" y="2079.50"></text></g><g><title>ret_from_fork_asm (76,929,968 samples, 0.29%)</title><rect x="3.9550%" y="2053" width="0.2862%" height="15" fill="rgb(212,20,18)" fg:x="1063052006" fg:w="76929968"/><text x="4.2050%" y="2063.50"></text></g><g><title>ret_from_fork (76,929,968 samples, 0.29%)</title><rect x="3.9550%" y="2037" width="0.2862%" height="15" fill="rgb(245,133,36)" fg:x="1063052006" fg:w="76929968"/><text x="4.2050%" y="2047.50"></text></g><g><title>kthread (76,929,968 samples, 0.29%)</title><rect x="3.9550%" y="2021" width="0.2862%" height="15" fill="rgb(212,6,19)" fg:x="1063052006" fg:w="76929968"/><text x="4.2050%" y="2031.50"></text></g><g><title>worker_thread (76,929,968 samples, 0.29%)</title><rect x="3.9550%" y="2005" width="0.2862%" height="15" fill="rgb(218,1,36)" fg:x="1063052006" fg:w="76929968"/><text x="4.2050%" y="2015.50"></text></g><g><title>process_one_work (76,929,968 samples, 0.29%)</title><rect x="3.9550%" y="1989" width="0.2862%" height="15" fill="rgb(246,84,54)" fg:x="1063052006" fg:w="76929968"/><text x="4.2050%" y="1999.50"></text></g><g><title>wb_workfn (76,929,968 samples, 0.29%)</title><rect x="3.9550%" y="1973" width="0.2862%" height="15" fill="rgb(242,110,6)" fg:x="1063052006" fg:w="76929968"/><text x="4.2050%" y="1983.50"></text></g><g><title>wb_do_writeback (76,929,968 samples, 0.29%)</title><rect x="3.9550%" y="1957" width="0.2862%" height="15" fill="rgb(214,47,5)" fg:x="1063052006" fg:w="76929968"/><text x="4.2050%" y="1967.50"></text></g><g><title>wb_writeback (76,339,689 samples, 0.28%)</title><rect x="3.9572%" y="1941" width="0.2840%" height="15" fill="rgb(218,159,25)" fg:x="1063642285" fg:w="76339689"/><text x="4.2072%" y="1951.50"></text></g><g><title>ext4_io_submit (2,966,017 samples, 0.01%)</title><rect x="4.2437%" y="1829" width="0.0110%" height="15" fill="rgb(215,211,28)" fg:x="1140635128" fg:w="2966017"/><text x="4.4937%" y="1839.50"></text></g><g><title>submit_bio (2,966,017 samples, 0.01%)</title><rect x="4.2437%" y="1813" width="0.0110%" height="15" fill="rgb(238,59,32)" fg:x="1140635128" fg:w="2966017"/><text x="4.4937%" y="1823.50"></text></g><g><title>submit_bio_noacct (2,966,017 samples, 0.01%)</title><rect x="4.2437%" y="1797" width="0.0110%" height="15" fill="rgb(226,82,3)" fg:x="1140635128" fg:w="2966017"/><text x="4.4937%" y="1807.50"></text></g><g><title>submit_bio_noacct_nocheck (2,966,017 samples, 0.01%)</title><rect x="4.2437%" y="1781" width="0.0110%" height="15" fill="rgb(240,164,32)" fg:x="1140635128" fg:w="2966017"/><text x="4.4937%" y="1791.50"></text></g><g><title>find_get_entry (5,773,399 samples, 0.02%)</title><rect x="4.2673%" y="1797" width="0.0215%" height="15" fill="rgb(232,46,7)" fg:x="1146993256" fg:w="5773399"/><text x="4.5173%" y="1807.50"></text></g><g><title>filemap_get_folios_tag (7,090,404 samples, 0.03%)</title><rect x="4.2639%" y="1813" width="0.0264%" height="15" fill="rgb(229,129,53)" fg:x="1146069162" fg:w="7090404"/><text x="4.5139%" y="1823.50"></text></g><g><title>__folio_start_writeback (13,930,026 samples, 0.05%)</title><rect x="4.3742%" y="1765" width="0.0518%" height="15" fill="rgb(234,188,29)" fg:x="1175720284" fg:w="13930026"/><text x="4.6242%" y="1775.50"></text></g><g><title>fscrypt_mergeable_bio_bh (3,491,988 samples, 0.01%)</title><rect x="4.4322%" y="1765" width="0.0130%" height="15" fill="rgb(246,141,4)" fg:x="1191314241" fg:w="3491988"/><text x="4.6822%" y="1775.50"></text></g><g><title>ext4_bio_write_folio (29,627,947 samples, 0.11%)</title><rect x="4.3407%" y="1781" width="0.1102%" height="15" fill="rgb(229,23,39)" fg:x="1166721451" fg:w="29627947"/><text x="4.5907%" y="1791.50"></text></g><g><title>folio_clear_dirty_for_io (6,957,972 samples, 0.03%)</title><rect x="4.4510%" y="1781" width="0.0259%" height="15" fill="rgb(206,12,3)" fg:x="1196349398" fg:w="6957972"/><text x="4.7010%" y="1791.50"></text></g><g><title>mpage_prepare_extent_to_map (60,683,106 samples, 0.23%)</title><rect x="4.2547%" y="1829" width="0.2258%" height="15" fill="rgb(252,226,20)" fg:x="1143601145" fg:w="60683106"/><text x="4.5047%" y="1839.50"></text></g><g><title>mpage_process_page_bufs (51,124,685 samples, 0.19%)</title><rect x="4.2903%" y="1813" width="0.1902%" height="15" fill="rgb(216,123,35)" fg:x="1153159566" fg:w="51124685"/><text x="4.5403%" y="1823.50"></text></g><g><title>mpage_submit_folio (38,011,844 samples, 0.14%)</title><rect x="4.3391%" y="1797" width="0.1414%" height="15" fill="rgb(212,68,40)" fg:x="1166272407" fg:w="38011844"/><text x="4.5891%" y="1807.50"></text></g><g><title>__writeback_inodes_wb (64,025,994 samples, 0.24%)</title><rect x="4.2437%" y="1925" width="0.2382%" height="15" fill="rgb(254,125,32)" fg:x="1140635128" fg:w="64025994"/><text x="4.4937%" y="1935.50"></text></g><g><title>writeback_sb_inodes (64,025,994 samples, 0.24%)</title><rect x="4.2437%" y="1909" width="0.2382%" height="15" fill="rgb(253,97,22)" fg:x="1140635128" fg:w="64025994"/><text x="4.4937%" y="1919.50"></text></g><g><title>__writeback_single_inode (64,025,994 samples, 0.24%)</title><rect x="4.2437%" y="1893" width="0.2382%" height="15" fill="rgb(241,101,14)" fg:x="1140635128" fg:w="64025994"/><text x="4.4937%" y="1903.50"></text></g><g><title>do_writepages (64,025,994 samples, 0.24%)</title><rect x="4.2437%" y="1877" width="0.2382%" height="15" fill="rgb(238,103,29)" fg:x="1140635128" fg:w="64025994"/><text x="4.4937%" y="1887.50"></text></g><g><title>ext4_writepages (64,025,994 samples, 0.24%)</title><rect x="4.2437%" y="1861" width="0.2382%" height="15" fill="rgb(233,195,47)" fg:x="1140635128" fg:w="64025994"/><text x="4.4937%" y="1871.50"></text></g><g><title>ext4_do_writepages (64,025,994 samples, 0.24%)</title><rect x="4.2437%" y="1845" width="0.2382%" height="15" fill="rgb(246,218,30)" fg:x="1140635128" fg:w="64025994"/><text x="4.4937%" y="1855.50"></text></g><g><title>process_one_work (64,954,634 samples, 0.24%)</title><rect x="4.2412%" y="1989" width="0.2417%" height="15" fill="rgb(219,145,47)" fg:x="1139981974" fg:w="64954634"/><text x="4.4912%" y="1999.50"></text></g><g><title>wb_workfn (64,954,634 samples, 0.24%)</title><rect x="4.2412%" y="1973" width="0.2417%" height="15" fill="rgb(243,12,26)" fg:x="1139981974" fg:w="64954634"/><text x="4.4912%" y="1983.50"></text></g><g><title>wb_do_writeback (64,954,634 samples, 0.24%)</title><rect x="4.2412%" y="1957" width="0.2417%" height="15" fill="rgb(214,87,16)" fg:x="1139981974" fg:w="64954634"/><text x="4.4912%" y="1967.50"></text></g><g><title>wb_writeback (64,301,480 samples, 0.24%)</title><rect x="4.2437%" y="1941" width="0.2392%" height="15" fill="rgb(208,99,42)" fg:x="1140635128" fg:w="64301480"/><text x="4.4937%" y="1951.50"></text></g><g><title>kworker/u68:2-f (66,082,154 samples, 0.25%)</title><rect x="4.2412%" y="2069" width="0.2459%" height="15" fill="rgb(253,99,2)" fg:x="1139981974" fg:w="66082154"/><text x="4.4912%" y="2079.50"></text></g><g><title>ret_from_fork_asm (66,082,154 samples, 0.25%)</title><rect x="4.2412%" y="2053" width="0.2459%" height="15" fill="rgb(220,168,23)" fg:x="1139981974" fg:w="66082154"/><text x="4.4912%" y="2063.50"></text></g><g><title>ret_from_fork (66,082,154 samples, 0.25%)</title><rect x="4.2412%" y="2037" width="0.2459%" height="15" fill="rgb(242,38,24)" fg:x="1139981974" fg:w="66082154"/><text x="4.4912%" y="2047.50"></text></g><g><title>kthread (66,082,154 samples, 0.25%)</title><rect x="4.2412%" y="2021" width="0.2459%" height="15" fill="rgb(225,182,9)" fg:x="1139981974" fg:w="66082154"/><text x="4.4912%" y="2031.50"></text></g><g><title>worker_thread (66,082,154 samples, 0.25%)</title><rect x="4.2412%" y="2005" width="0.2459%" height="15" fill="rgb(243,178,37)" fg:x="1139981974" fg:w="66082154"/><text x="4.4912%" y="2015.50"></text></g><g><title>[ls] (4,455,351 samples, 0.02%)</title><rect x="4.5196%" y="2021" width="0.0166%" height="15" fill="rgb(232,139,19)" fg:x="1214800795" fg:w="4455351"/><text x="4.7696%" y="2031.50"></text></g><g><title>[ls] (12,723,927 samples, 0.05%)</title><rect x="4.4999%" y="2037" width="0.0473%" height="15" fill="rgb(225,201,24)" fg:x="1209496407" fg:w="12723927"/><text x="4.7499%" y="2047.50"></text></g><g><title>[unknown] (3,033,954 samples, 0.01%)</title><rect x="4.5472%" y="2037" width="0.0113%" height="15" fill="rgb(221,47,46)" fg:x="1222220334" fg:w="3033954"/><text x="4.7972%" y="2047.50"></text></g><g><title>link_path_walk (7,333,108 samples, 0.03%)</title><rect x="4.5919%" y="1909" width="0.0273%" height="15" fill="rgb(249,23,13)" fg:x="1234222841" fg:w="7333108"/><text x="4.8419%" y="1919.50"></text></g><g><title>terminate_walk (2,996,856 samples, 0.01%)</title><rect x="4.6274%" y="1909" width="0.0111%" height="15" fill="rgb(219,9,5)" fg:x="1243772432" fg:w="2996856"/><text x="4.8774%" y="1919.50"></text></g><g><title>filename_lookup (16,976,601 samples, 0.06%)</title><rect x="4.5833%" y="1941" width="0.0632%" height="15" fill="rgb(254,171,16)" fg:x="1231934010" fg:w="16976601"/><text x="4.8333%" y="1951.50"></text></g><g><title>path_lookupat (15,407,238 samples, 0.06%)</title><rect x="4.5892%" y="1925" width="0.0573%" height="15" fill="rgb(230,171,20)" fg:x="1233503373" fg:w="15407238"/><text x="4.8392%" y="1935.50"></text></g><g><title>user_path_at_empty (19,920,592 samples, 0.07%)</title><rect x="4.5805%" y="1957" width="0.0741%" height="15" fill="rgb(210,71,41)" fg:x="1231159936" fg:w="19920592"/><text x="4.8305%" y="1967.50"></text></g><g><title>__ptrace_may_access (2,939,464 samples, 0.01%)</title><rect x="4.6991%" y="1909" width="0.0109%" height="15" fill="rgb(206,173,20)" fg:x="1263054273" fg:w="2939464"/><text x="4.9491%" y="1919.50"></text></g><g><title>do_readlinkat (38,524,949 samples, 0.14%)</title><rect x="4.5695%" y="1973" width="0.1433%" height="15" fill="rgb(233,88,34)" fg:x="1228208241" fg:w="38524949"/><text x="4.8195%" y="1983.50"></text></g><g><title>vfs_readlink (15,652,662 samples, 0.06%)</title><rect x="4.6546%" y="1957" width="0.0582%" height="15" fill="rgb(223,209,46)" fg:x="1251080528" fg:w="15652662"/><text x="4.9046%" y="1967.50"></text></g><g><title>proc_pid_readlink (14,220,642 samples, 0.05%)</title><rect x="4.6599%" y="1941" width="0.0529%" height="15" fill="rgb(250,43,18)" fg:x="1252512548" fg:w="14220642"/><text x="4.9099%" y="1951.50"></text></g><g><title>ptrace_may_access (3,678,917 samples, 0.01%)</title><rect x="4.6991%" y="1925" width="0.0137%" height="15" fill="rgb(208,13,10)" fg:x="1263054273" fg:w="3678917"/><text x="4.9491%" y="1935.50"></text></g><g><title>__x64_sys_readlink (39,208,401 samples, 0.15%)</title><rect x="4.5695%" y="1989" width="0.1459%" height="15" fill="rgb(212,200,36)" fg:x="1228208241" fg:w="39208401"/><text x="4.8195%" y="1999.50"></text></g><g><title>entry_SYSCALL_64 (41,386,415 samples, 0.15%)</title><rect x="4.5671%" y="2021" width="0.1540%" height="15" fill="rgb(225,90,30)" fg:x="1227556994" fg:w="41386415"/><text x="4.8171%" y="2031.50"></text></g><g><title>do_syscall_64 (40,735,168 samples, 0.15%)</title><rect x="4.5695%" y="2005" width="0.1516%" height="15" fill="rgb(236,182,39)" fg:x="1228208241" fg:w="40735168"/><text x="4.8195%" y="2015.50"></text></g><g><title>__GI___readlink (44,433,037 samples, 0.17%)</title><rect x="4.5641%" y="2037" width="0.1653%" height="15" fill="rgb(212,144,35)" fg:x="1226767549" fg:w="44433037"/><text x="4.8141%" y="2047.50"></text></g><g><title>[unknown] (67,660,087 samples, 0.25%)</title><rect x="4.4999%" y="2053" width="0.2517%" height="15" fill="rgb(228,63,44)" fg:x="1209496407" fg:w="67660087"/><text x="4.7499%" y="2063.50"></text></g><g><title>__strcoll_l (3,831,046 samples, 0.01%)</title><rect x="4.7681%" y="2053" width="0.0143%" height="15" fill="rgb(228,109,6)" fg:x="1281590323" fg:w="3831046"/><text x="5.0181%" y="2063.50"></text></g><g><title>link_path_walk (8,096,803 samples, 0.03%)</title><rect x="4.8426%" y="1941" width="0.0301%" height="15" fill="rgb(238,117,24)" fg:x="1301609720" fg:w="8096803"/><text x="5.0926%" y="1951.50"></text></g><g><title>lookup_fast (2,988,172 samples, 0.01%)</title><rect x="4.8867%" y="1925" width="0.0111%" height="15" fill="rgb(242,26,26)" fg:x="1313470440" fg:w="2988172"/><text x="5.1367%" y="1935.50"></text></g><g><title>path_lookupat (17,815,636 samples, 0.07%)</title><rect x="4.8371%" y="1957" width="0.0663%" height="15" fill="rgb(221,92,48)" fg:x="1300139477" fg:w="17815636"/><text x="5.0871%" y="1967.50"></text></g><g><title>walk_component (4,484,673 samples, 0.02%)</title><rect x="4.8867%" y="1941" width="0.0167%" height="15" fill="rgb(209,209,32)" fg:x="1313470440" fg:w="4484673"/><text x="5.1367%" y="1951.50"></text></g><g><title>filename_lookup (19,377,739 samples, 0.07%)</title><rect x="4.8371%" y="1973" width="0.0721%" height="15" fill="rgb(221,70,22)" fg:x="1300139477" fg:w="19377739"/><text x="5.0871%" y="1983.50"></text></g><g><title>__x64_sys_statx (28,958,428 samples, 0.11%)</title><rect x="4.8066%" y="2005" width="0.1077%" height="15" fill="rgb(248,145,5)" fg:x="1291953647" fg:w="28958428"/><text x="5.0566%" y="2015.50"></text></g><g><title>vfs_statx (21,516,090 samples, 0.08%)</title><rect x="4.8343%" y="1989" width="0.0800%" height="15" fill="rgb(226,116,26)" fg:x="1299395985" fg:w="21516090"/><text x="5.0843%" y="1999.50"></text></g><g><title>entry_SYSCALL_64 (29,624,009 samples, 0.11%)</title><rect x="4.8066%" y="2037" width="0.1102%" height="15" fill="rgb(244,5,17)" fg:x="1291953647" fg:w="29624009"/><text x="5.0566%" y="2047.50"></text></g><g><title>do_syscall_64 (29,624,009 samples, 0.11%)</title><rect x="4.8066%" y="2021" width="0.1102%" height="15" fill="rgb(252,159,33)" fg:x="1291953647" fg:w="29624009"/><text x="5.0566%" y="2031.50"></text></g><g><title>statx (31,104,458 samples, 0.12%)</title><rect x="4.8066%" y="2053" width="0.1157%" height="15" fill="rgb(206,71,0)" fg:x="1291953647" fg:w="31104458"/><text x="5.0566%" y="2063.50"></text></g><g><title>ls (115,856,172 samples, 0.43%)</title><rect x="4.4969%" y="2069" width="0.4310%" height="15" fill="rgb(233,118,54)" fg:x="1208698247" fg:w="115856172"/><text x="4.7469%" y="2079.50"></text></g><g><title>InotifyBackend::handleSubscription (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="2053" width="0.0137%" height="15" fill="rgb(234,83,48)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="2063.50"></text></g><g><title>Watcher::isIgnored (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="2037" width="0.0137%" height="15" fill="rgb(228,3,54)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="2047.50"></text></g><g><title>Glob::isIgnored (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="2021" width="0.0137%" height="15" fill="rgb(226,155,13)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="2031.50"></text></g><g><title>bool std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;, (std::__detail::_RegexExecutorPolicy)0, true&gt; (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="2005" width="0.0137%" height="15" fill="rgb(241,28,37)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="2015.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1989" width="0.0137%" height="15" fill="rgb(233,93,10)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1999.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1973" width="0.0137%" height="15" fill="rgb(225,113,19)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1983.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1957" width="0.0137%" height="15" fill="rgb(241,2,18)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1967.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1941" width="0.0137%" height="15" fill="rgb(228,207,21)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1951.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1925" width="0.0137%" height="15" fill="rgb(213,211,35)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1935.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1909" width="0.0137%" height="15" fill="rgb(209,83,10)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1919.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1893" width="0.0137%" height="15" fill="rgb(209,164,1)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1903.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1877" width="0.0137%" height="15" fill="rgb(213,184,43)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1887.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1861" width="0.0137%" height="15" fill="rgb(231,61,34)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1871.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1845" width="0.0137%" height="15" fill="rgb(235,75,3)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1855.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1829" width="0.0137%" height="15" fill="rgb(220,106,47)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1839.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1813" width="0.0137%" height="15" fill="rgb(210,196,33)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1823.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1797" width="0.0137%" height="15" fill="rgb(229,154,42)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1807.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1781" width="0.0137%" height="15" fill="rgb(228,114,26)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1791.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1765" width="0.0137%" height="15" fill="rgb(208,144,1)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1775.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1749" width="0.0137%" height="15" fill="rgb(239,112,37)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1759.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1733" width="0.0137%" height="15" fill="rgb(210,96,50)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1743.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1717" width="0.0137%" height="15" fill="rgb(222,178,2)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1727.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1701" width="0.0137%" height="15" fill="rgb(226,74,18)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1711.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1685" width="0.0137%" height="15" fill="rgb(225,67,54)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1695.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1669" width="0.0137%" height="15" fill="rgb(251,92,32)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1679.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1653" width="0.0137%" height="15" fill="rgb(228,149,22)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1663.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1637" width="0.0137%" height="15" fill="rgb(243,54,13)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1647.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1621" width="0.0137%" height="15" fill="rgb(243,180,28)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1631.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1605" width="0.0137%" height="15" fill="rgb(208,167,24)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1615.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1589" width="0.0137%" height="15" fill="rgb(245,73,45)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1599.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1573" width="0.0137%" height="15" fill="rgb(237,203,48)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1583.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1557" width="0.0137%" height="15" fill="rgb(211,197,16)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1567.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1541" width="0.0137%" height="15" fill="rgb(243,99,51)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1551.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1525" width="0.0137%" height="15" fill="rgb(215,123,29)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1535.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1509" width="0.0137%" height="15" fill="rgb(239,186,37)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1519.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1493" width="0.0137%" height="15" fill="rgb(252,136,39)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1503.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1477" width="0.0137%" height="15" fill="rgb(223,213,32)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1487.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1461" width="0.0137%" height="15" fill="rgb(233,115,5)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1471.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1445" width="0.0137%" height="15" fill="rgb(207,226,44)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1455.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1429" width="0.0137%" height="15" fill="rgb(208,126,0)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1439.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1413" width="0.0137%" height="15" fill="rgb(244,66,21)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1423.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1397" width="0.0137%" height="15" fill="rgb(222,97,12)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1407.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1381" width="0.0137%" height="15" fill="rgb(219,213,19)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1391.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1365" width="0.0137%" height="15" fill="rgb(252,169,30)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1375.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1349" width="0.0137%" height="15" fill="rgb(206,32,51)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1359.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1333" width="0.0137%" height="15" fill="rgb(250,172,42)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1343.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1317" width="0.0137%" height="15" fill="rgb(209,34,43)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1327.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1301" width="0.0137%" height="15" fill="rgb(223,11,35)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1311.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1285" width="0.0137%" height="15" fill="rgb(251,219,26)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1295.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1269" width="0.0137%" height="15" fill="rgb(231,119,3)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1279.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1253" width="0.0137%" height="15" fill="rgb(216,97,11)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1263.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1237" width="0.0137%" height="15" fill="rgb(223,59,9)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1247.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1221" width="0.0137%" height="15" fill="rgb(233,93,31)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1231.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1205" width="0.0137%" height="15" fill="rgb(239,81,33)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1215.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1189" width="0.0137%" height="15" fill="rgb(213,120,34)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1199.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1173" width="0.0137%" height="15" fill="rgb(243,49,53)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1183.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1157" width="0.0137%" height="15" fill="rgb(247,216,33)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1167.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1141" width="0.0137%" height="15" fill="rgb(226,26,14)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1151.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1125" width="0.0137%" height="15" fill="rgb(215,49,53)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1135.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1109" width="0.0137%" height="15" fill="rgb(245,162,40)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1119.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1093" width="0.0137%" height="15" fill="rgb(229,68,17)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1103.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1077" width="0.0137%" height="15" fill="rgb(213,182,10)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1087.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1061" width="0.0137%" height="15" fill="rgb(245,125,30)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1071.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1045" width="0.0137%" height="15" fill="rgb(232,202,2)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1055.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1029" width="0.0137%" height="15" fill="rgb(237,140,51)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1039.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="1013" width="0.0137%" height="15" fill="rgb(236,157,25)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1023.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="997" width="0.0137%" height="15" fill="rgb(219,209,0)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="1007.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="981" width="0.0137%" height="15" fill="rgb(240,116,54)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="991.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="965" width="0.0137%" height="15" fill="rgb(216,10,36)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="975.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="949" width="0.0137%" height="15" fill="rgb(222,72,44)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="959.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="933" width="0.0137%" height="15" fill="rgb(232,159,9)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="943.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="917" width="0.0137%" height="15" fill="rgb(210,39,32)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="927.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="901" width="0.0137%" height="15" fill="rgb(216,194,45)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="911.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="885" width="0.0137%" height="15" fill="rgb(218,18,35)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="895.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="869" width="0.0137%" height="15" fill="rgb(207,83,51)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="879.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="853" width="0.0137%" height="15" fill="rgb(225,63,43)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="863.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="837" width="0.0137%" height="15" fill="rgb(207,57,36)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="847.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="821" width="0.0137%" height="15" fill="rgb(216,99,33)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="831.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="805" width="0.0137%" height="15" fill="rgb(225,42,16)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="815.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="789" width="0.0137%" height="15" fill="rgb(220,201,45)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="799.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="773" width="0.0137%" height="15" fill="rgb(225,33,4)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="783.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="757" width="0.0137%" height="15" fill="rgb(224,33,50)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="767.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="741" width="0.0137%" height="15" fill="rgb(246,198,51)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="751.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="725" width="0.0137%" height="15" fill="rgb(205,22,4)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="735.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="709" width="0.0137%" height="15" fill="rgb(206,3,8)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="719.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="693" width="0.0137%" height="15" fill="rgb(251,23,15)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="703.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="677" width="0.0137%" height="15" fill="rgb(252,88,28)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="687.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="661" width="0.0137%" height="15" fill="rgb(212,127,14)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="671.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="645" width="0.0137%" height="15" fill="rgb(247,145,37)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="655.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="629" width="0.0137%" height="15" fill="rgb(209,117,53)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="639.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="613" width="0.0137%" height="15" fill="rgb(212,90,42)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="623.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="597" width="0.0137%" height="15" fill="rgb(218,164,37)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="607.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="581" width="0.0137%" height="15" fill="rgb(246,65,34)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="591.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="565" width="0.0137%" height="15" fill="rgb(231,100,33)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="575.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="549" width="0.0137%" height="15" fill="rgb(228,126,14)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="559.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="533" width="0.0137%" height="15" fill="rgb(215,173,21)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="543.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="517" width="0.0137%" height="15" fill="rgb(210,6,40)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="527.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="501" width="0.0137%" height="15" fill="rgb(212,48,18)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="511.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="485" width="0.0137%" height="15" fill="rgb(230,214,11)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="495.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="469" width="0.0137%" height="15" fill="rgb(254,105,39)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="479.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="453" width="0.0137%" height="15" fill="rgb(245,158,5)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="463.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="437" width="0.0137%" height="15" fill="rgb(249,208,11)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="447.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="421" width="0.0137%" height="15" fill="rgb(210,39,28)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="431.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="405" width="0.0137%" height="15" fill="rgb(211,56,53)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="415.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="389" width="0.0137%" height="15" fill="rgb(226,201,30)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="399.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="373" width="0.0137%" height="15" fill="rgb(239,101,34)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="383.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="357" width="0.0137%" height="15" fill="rgb(226,209,5)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="367.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="341" width="0.0137%" height="15" fill="rgb(250,105,47)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="351.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="325" width="0.0137%" height="15" fill="rgb(230,72,3)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="335.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="309" width="0.0137%" height="15" fill="rgb(232,218,39)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="319.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="293" width="0.0137%" height="15" fill="rgb(248,166,6)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="303.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="277" width="0.0137%" height="15" fill="rgb(247,89,20)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="287.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="261" width="0.0137%" height="15" fill="rgb(248,130,54)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="271.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="245" width="0.0137%" height="15" fill="rgb(234,196,4)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="255.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="229" width="0.0137%" height="15" fill="rgb(250,143,31)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="239.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="213" width="0.0137%" height="15" fill="rgb(211,110,34)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="223.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="197" width="0.0137%" height="15" fill="rgb(215,124,48)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="207.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="181" width="0.0137%" height="15" fill="rgb(216,46,13)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="191.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="165" width="0.0137%" height="15" fill="rgb(205,184,25)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="175.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="149" width="0.0137%" height="15" fill="rgb(228,1,10)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="159.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="133" width="0.0137%" height="15" fill="rgb(213,116,27)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="143.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="117" width="0.0137%" height="15" fill="rgb(241,95,50)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="127.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="101" width="0.0137%" height="15" fill="rgb(238,48,32)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="111.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="85" width="0.0137%" height="15" fill="rgb(235,113,49)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="95.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="69" width="0.0137%" height="15" fill="rgb(205,127,43)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="79.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,677,406 samples, 0.01%)</title><rect x="4.9353%" y="53" width="0.0137%" height="15" fill="rgb(250,162,2)" fg:x="1326529999" fg:w="3677406"/><text x="5.1853%" y="63.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (3,340,507 samples, 0.01%)</title><rect x="4.9365%" y="37" width="0.0124%" height="15" fill="rgb(220,13,41)" fg:x="1326866898" fg:w="3340507"/><text x="5.1865%" y="47.50"></text></g><g><title>DirTree::_find (3,432,874 samples, 0.01%)</title><rect x="4.9891%" y="1941" width="0.0128%" height="15" fill="rgb(249,221,25)" fg:x="1340984962" fg:w="3432874"/><text x="5.2391%" y="1951.50"></text></g><g><title>std::_Hashtable&lt;std::string, std::pair&lt;std::string const, DirEntry&gt;, std::allocator&lt;std::pair&lt;std::string const, DirEntry&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::string&gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (2,895,963 samples, 0.01%)</title><rect x="4.9911%" y="1925" width="0.0108%" height="15" fill="rgb(215,208,19)" fg:x="1341521873" fg:w="2895963"/><text x="5.2411%" y="1935.50"></text></g><g><title>DirTree::update (7,715,468 samples, 0.03%)</title><rect x="4.9847%" y="1957" width="0.0287%" height="15" fill="rgb(236,175,2)" fg:x="1339823109" fg:w="7715468"/><text x="5.2347%" y="1967.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,827,223 samples, 0.03%)</title><rect x="5.2581%" y="149" width="0.0254%" height="15" fill="rgb(241,52,2)" fg:x="1413305750" fg:w="6827223"/><text x="5.5081%" y="159.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,394,294 samples, 0.02%)</title><rect x="5.2597%" y="133" width="0.0238%" height="15" fill="rgb(248,140,14)" fg:x="1413738679" fg:w="6394294"/><text x="5.5097%" y="143.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,394,294 samples, 0.02%)</title><rect x="5.2597%" y="117" width="0.0238%" height="15" fill="rgb(253,22,42)" fg:x="1413738679" fg:w="6394294"/><text x="5.5097%" y="127.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5,140,298 samples, 0.02%)</title><rect x="5.2644%" y="101" width="0.0191%" height="15" fill="rgb(234,61,47)" fg:x="1414992675" fg:w="5140298"/><text x="5.5144%" y="111.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (3,422,030 samples, 0.01%)</title><rect x="5.2708%" y="85" width="0.0127%" height="15" fill="rgb(208,226,15)" fg:x="1416710943" fg:w="3422030"/><text x="5.5208%" y="95.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14,026,260 samples, 0.05%)</title><rect x="5.2535%" y="213" width="0.0522%" height="15" fill="rgb(217,221,4)" fg:x="1412056999" fg:w="14026260"/><text x="5.5035%" y="223.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12,777,509 samples, 0.05%)</title><rect x="5.2581%" y="197" width="0.0475%" height="15" fill="rgb(212,174,34)" fg:x="1413305750" fg:w="12777509"/><text x="5.5081%" y="207.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (12,777,509 samples, 0.05%)</title><rect x="5.2581%" y="181" width="0.0475%" height="15" fill="rgb(253,83,4)" fg:x="1413305750" fg:w="12777509"/><text x="5.5081%" y="191.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12,777,509 samples, 0.05%)</title><rect x="5.2581%" y="165" width="0.0475%" height="15" fill="rgb(250,195,49)" fg:x="1413305750" fg:w="12777509"/><text x="5.5081%" y="175.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (5,950,286 samples, 0.02%)</title><rect x="5.2835%" y="149" width="0.0221%" height="15" fill="rgb(241,192,25)" fg:x="1420132973" fg:w="5950286"/><text x="5.5335%" y="159.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (19,206,021 samples, 0.07%)</title><rect x="5.2535%" y="277" width="0.0715%" height="15" fill="rgb(208,124,10)" fg:x="1412056999" fg:w="19206021"/><text x="5.5035%" y="287.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (19,206,021 samples, 0.07%)</title><rect x="5.2535%" y="261" width="0.0715%" height="15" fill="rgb(222,33,0)" fg:x="1412056999" fg:w="19206021"/><text x="5.5035%" y="271.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (19,206,021 samples, 0.07%)</title><rect x="5.2535%" y="245" width="0.0715%" height="15" fill="rgb(234,209,28)" fg:x="1412056999" fg:w="19206021"/><text x="5.5035%" y="255.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (19,206,021 samples, 0.07%)</title><rect x="5.2535%" y="229" width="0.0715%" height="15" fill="rgb(224,11,23)" fg:x="1412056999" fg:w="19206021"/><text x="5.5035%" y="239.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (5,179,761 samples, 0.02%)</title><rect x="5.3057%" y="213" width="0.0193%" height="15" fill="rgb(232,99,1)" fg:x="1426083259" fg:w="5179761"/><text x="5.5557%" y="223.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,273,511 samples, 0.09%)</title><rect x="5.2499%" y="341" width="0.0940%" height="15" fill="rgb(237,95,45)" fg:x="1411103389" fg:w="25273511"/><text x="5.4999%" y="351.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,273,511 samples, 0.09%)</title><rect x="5.2499%" y="325" width="0.0940%" height="15" fill="rgb(208,109,11)" fg:x="1411103389" fg:w="25273511"/><text x="5.4999%" y="335.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (24,927,636 samples, 0.09%)</title><rect x="5.2512%" y="309" width="0.0927%" height="15" fill="rgb(216,190,48)" fg:x="1411449264" fg:w="24927636"/><text x="5.5012%" y="319.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (24,319,901 samples, 0.09%)</title><rect x="5.2535%" y="293" width="0.0905%" height="15" fill="rgb(251,171,36)" fg:x="1412056999" fg:w="24319901"/><text x="5.5035%" y="303.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (5,113,880 samples, 0.02%)</title><rect x="5.3249%" y="277" width="0.0190%" height="15" fill="rgb(230,62,22)" fg:x="1431263020" fg:w="5113880"/><text x="5.5749%" y="287.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (38,012,221 samples, 0.14%)</title><rect x="5.2382%" y="405" width="0.1414%" height="15" fill="rgb(225,114,35)" fg:x="1407936677" fg:w="38012221"/><text x="5.4882%" y="415.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (36,895,631 samples, 0.14%)</title><rect x="5.2423%" y="389" width="0.1373%" height="15" fill="rgb(215,118,42)" fg:x="1409053267" fg:w="36895631"/><text x="5.4923%" y="399.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (35,878,030 samples, 0.13%)</title><rect x="5.2461%" y="373" width="0.1335%" height="15" fill="rgb(243,119,21)" fg:x="1410070868" fg:w="35878030"/><text x="5.4961%" y="383.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (35,366,262 samples, 0.13%)</title><rect x="5.2480%" y="357" width="0.1316%" height="15" fill="rgb(252,177,53)" fg:x="1410582636" fg:w="35366262"/><text x="5.4980%" y="367.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (9,571,998 samples, 0.04%)</title><rect x="5.3440%" y="341" width="0.0356%" height="15" fill="rgb(237,209,29)" fg:x="1436376900" fg:w="9571998"/><text x="5.5940%" y="351.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (47,485,971 samples, 0.18%)</title><rect x="5.2259%" y="469" width="0.1767%" height="15" fill="rgb(212,65,23)" fg:x="1404629286" fg:w="47485971"/><text x="5.4759%" y="479.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (46,243,153 samples, 0.17%)</title><rect x="5.2305%" y="453" width="0.1720%" height="15" fill="rgb(230,222,46)" fg:x="1405872104" fg:w="46243153"/><text x="5.4805%" y="463.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (44,637,206 samples, 0.17%)</title><rect x="5.2365%" y="437" width="0.1661%" height="15" fill="rgb(215,135,32)" fg:x="1407478051" fg:w="44637206"/><text x="5.4865%" y="447.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (44,178,580 samples, 0.16%)</title><rect x="5.2382%" y="421" width="0.1644%" height="15" fill="rgb(246,101,22)" fg:x="1407936677" fg:w="44178580"/><text x="5.4882%" y="431.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (6,166,359 samples, 0.02%)</title><rect x="5.3796%" y="405" width="0.0229%" height="15" fill="rgb(206,107,13)" fg:x="1445948898" fg:w="6166359"/><text x="5.6296%" y="415.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (57,196,374 samples, 0.21%)</title><rect x="5.2176%" y="533" width="0.2128%" height="15" fill="rgb(250,100,44)" fg:x="1402422341" fg:w="57196374"/><text x="5.4676%" y="543.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (57,196,374 samples, 0.21%)</title><rect x="5.2176%" y="517" width="0.2128%" height="15" fill="rgb(231,147,38)" fg:x="1402422341" fg:w="57196374"/><text x="5.4676%" y="527.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (56,146,872 samples, 0.21%)</title><rect x="5.2215%" y="501" width="0.2089%" height="15" fill="rgb(229,8,40)" fg:x="1403471843" fg:w="56146872"/><text x="5.4715%" y="511.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,146,872 samples, 0.21%)</title><rect x="5.2215%" y="485" width="0.2089%" height="15" fill="rgb(221,135,30)" fg:x="1403471843" fg:w="56146872"/><text x="5.4715%" y="495.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (7,503,458 samples, 0.03%)</title><rect x="5.4025%" y="469" width="0.0279%" height="15" fill="rgb(249,193,18)" fg:x="1452115257" fg:w="7503458"/><text x="5.6525%" y="479.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (67,405,030 samples, 0.25%)</title><rect x="5.2102%" y="597" width="0.2508%" height="15" fill="rgb(209,133,39)" fg:x="1400431461" fg:w="67405030"/><text x="5.4602%" y="607.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (67,405,030 samples, 0.25%)</title><rect x="5.2102%" y="581" width="0.2508%" height="15" fill="rgb(232,100,14)" fg:x="1400431461" fg:w="67405030"/><text x="5.4602%" y="591.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (66,937,191 samples, 0.25%)</title><rect x="5.2120%" y="565" width="0.2490%" height="15" fill="rgb(224,185,1)" fg:x="1400899300" fg:w="66937191"/><text x="5.4620%" y="575.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (66,937,191 samples, 0.25%)</title><rect x="5.2120%" y="549" width="0.2490%" height="15" fill="rgb(223,139,8)" fg:x="1400899300" fg:w="66937191"/><text x="5.4620%" y="559.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (8,217,776 samples, 0.03%)</title><rect x="5.4304%" y="533" width="0.0306%" height="15" fill="rgb(232,213,38)" fg:x="1459618715" fg:w="8217776"/><text x="5.6804%" y="543.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (75,795,632 samples, 0.28%)</title><rect x="5.1982%" y="661" width="0.2820%" height="15" fill="rgb(207,94,22)" fg:x="1397203226" fg:w="75795632"/><text x="5.4482%" y="671.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (74,561,475 samples, 0.28%)</title><rect x="5.2028%" y="645" width="0.2774%" height="15" fill="rgb(219,183,54)" fg:x="1398437383" fg:w="74561475"/><text x="5.4528%" y="655.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (74,107,085 samples, 0.28%)</title><rect x="5.2045%" y="629" width="0.2757%" height="15" fill="rgb(216,185,54)" fg:x="1398891773" fg:w="74107085"/><text x="5.4545%" y="639.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (74,107,085 samples, 0.28%)</title><rect x="5.2045%" y="613" width="0.2757%" height="15" fill="rgb(254,217,39)" fg:x="1398891773" fg:w="74107085"/><text x="5.4545%" y="623.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (5,162,367 samples, 0.02%)</title><rect x="5.4610%" y="597" width="0.0192%" height="15" fill="rgb(240,178,23)" fg:x="1467836491" fg:w="5162367"/><text x="5.7110%" y="607.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (82,516,630 samples, 0.31%)</title><rect x="5.1895%" y="725" width="0.3070%" height="15" fill="rgb(218,11,47)" fg:x="1394852552" fg:w="82516630"/><text x="5.4395%" y="735.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (81,267,156 samples, 0.30%)</title><rect x="5.1941%" y="709" width="0.3024%" height="15" fill="rgb(218,51,51)" fg:x="1396102026" fg:w="81267156"/><text x="5.4441%" y="719.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (81,267,156 samples, 0.30%)</title><rect x="5.1941%" y="693" width="0.3024%" height="15" fill="rgb(238,126,27)" fg:x="1396102026" fg:w="81267156"/><text x="5.4441%" y="703.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (81,267,156 samples, 0.30%)</title><rect x="5.1941%" y="677" width="0.3024%" height="15" fill="rgb(249,202,22)" fg:x="1396102026" fg:w="81267156"/><text x="5.4441%" y="687.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (4,370,324 samples, 0.02%)</title><rect x="5.4802%" y="661" width="0.0163%" height="15" fill="rgb(254,195,49)" fg:x="1472998858" fg:w="4370324"/><text x="5.7302%" y="671.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (88,533,983 samples, 0.33%)</title><rect x="5.1871%" y="789" width="0.3294%" height="15" fill="rgb(208,123,14)" fg:x="1394218076" fg:w="88533983"/><text x="5.4371%" y="799.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (88,533,983 samples, 0.33%)</title><rect x="5.1871%" y="773" width="0.3294%" height="15" fill="rgb(224,200,8)" fg:x="1394218076" fg:w="88533983"/><text x="5.4371%" y="783.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (88,533,983 samples, 0.33%)</title><rect x="5.1871%" y="757" width="0.3294%" height="15" fill="rgb(217,61,36)" fg:x="1394218076" fg:w="88533983"/><text x="5.4371%" y="767.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (88,533,983 samples, 0.33%)</title><rect x="5.1871%" y="741" width="0.3294%" height="15" fill="rgb(206,35,45)" fg:x="1394218076" fg:w="88533983"/><text x="5.4371%" y="751.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (5,382,877 samples, 0.02%)</title><rect x="5.4965%" y="725" width="0.0200%" height="15" fill="rgb(217,65,33)" fg:x="1477369182" fg:w="5382877"/><text x="5.7465%" y="735.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (94,834,519 samples, 0.35%)</title><rect x="5.1808%" y="853" width="0.3528%" height="15" fill="rgb(222,158,48)" fg:x="1392512919" fg:w="94834519"/><text x="5.4308%" y="863.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (94,227,978 samples, 0.35%)</title><rect x="5.1830%" y="837" width="0.3506%" height="15" fill="rgb(254,2,54)" fg:x="1393119460" fg:w="94227978"/><text x="5.4330%" y="847.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (94,227,978 samples, 0.35%)</title><rect x="5.1830%" y="821" width="0.3506%" height="15" fill="rgb(250,143,38)" fg:x="1393119460" fg:w="94227978"/><text x="5.4330%" y="831.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (93,608,388 samples, 0.35%)</title><rect x="5.1853%" y="805" width="0.3483%" height="15" fill="rgb(248,25,0)" fg:x="1393739050" fg:w="93608388"/><text x="5.4353%" y="815.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (4,595,379 samples, 0.02%)</title><rect x="5.5165%" y="789" width="0.0171%" height="15" fill="rgb(206,152,27)" fg:x="1482752059" fg:w="4595379"/><text x="5.7665%" y="799.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,058,242 samples, 0.39%)</title><rect x="5.1648%" y="917" width="0.3871%" height="15" fill="rgb(240,77,30)" fg:x="1388212893" fg:w="104058242"/><text x="5.4148%" y="927.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (103,362,681 samples, 0.38%)</title><rect x="5.1674%" y="901" width="0.3846%" height="15" fill="rgb(231,5,3)" fg:x="1388908454" fg:w="103362681"/><text x="5.4174%" y="911.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (102,784,299 samples, 0.38%)</title><rect x="5.1695%" y="885" width="0.3824%" height="15" fill="rgb(207,226,32)" fg:x="1389486836" fg:w="102784299"/><text x="5.4195%" y="895.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (101,588,746 samples, 0.38%)</title><rect x="5.1740%" y="869" width="0.3780%" height="15" fill="rgb(222,207,47)" fg:x="1390682389" fg:w="101588746"/><text x="5.4240%" y="879.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (4,923,697 samples, 0.02%)</title><rect x="5.5336%" y="853" width="0.0183%" height="15" fill="rgb(229,115,45)" fg:x="1487347438" fg:w="4923697"/><text x="5.7836%" y="863.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (113,763,856 samples, 0.42%)</title><rect x="5.1539%" y="981" width="0.4233%" height="15" fill="rgb(224,191,6)" fg:x="1385278482" fg:w="113763856"/><text x="5.4039%" y="991.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (113,763,856 samples, 0.42%)</title><rect x="5.1539%" y="965" width="0.4233%" height="15" fill="rgb(230,227,24)" fg:x="1385278482" fg:w="113763856"/><text x="5.4039%" y="975.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (113,763,856 samples, 0.42%)</title><rect x="5.1539%" y="949" width="0.4233%" height="15" fill="rgb(228,80,19)" fg:x="1385278482" fg:w="113763856"/><text x="5.4039%" y="959.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (112,383,078 samples, 0.42%)</title><rect x="5.1590%" y="933" width="0.4181%" height="15" fill="rgb(247,229,0)" fg:x="1386659260" fg:w="112383078"/><text x="5.4090%" y="943.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (6,771,203 samples, 0.03%)</title><rect x="5.5519%" y="917" width="0.0252%" height="15" fill="rgb(237,194,15)" fg:x="1492271135" fg:w="6771203"/><text x="5.8019%" y="927.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (123,682,078 samples, 0.46%)</title><rect x="5.1449%" y="1045" width="0.4602%" height="15" fill="rgb(219,203,20)" fg:x="1382872664" fg:w="123682078"/><text x="5.3949%" y="1055.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (123,203,080 samples, 0.46%)</title><rect x="5.1467%" y="1029" width="0.4584%" height="15" fill="rgb(234,128,8)" fg:x="1383351662" fg:w="123203080"/><text x="5.3967%" y="1039.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (122,595,590 samples, 0.46%)</title><rect x="5.1489%" y="1013" width="0.4561%" height="15" fill="rgb(248,202,8)" fg:x="1383959152" fg:w="122595590"/><text x="5.3989%" y="1023.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (122,595,590 samples, 0.46%)</title><rect x="5.1489%" y="997" width="0.4561%" height="15" fill="rgb(206,104,37)" fg:x="1383959152" fg:w="122595590"/><text x="5.3989%" y="1007.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (7,512,404 samples, 0.03%)</title><rect x="5.5771%" y="981" width="0.0279%" height="15" fill="rgb(223,8,27)" fg:x="1499042338" fg:w="7512404"/><text x="5.8271%" y="991.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (131,165,576 samples, 0.49%)</title><rect x="5.1352%" y="1109" width="0.4880%" height="15" fill="rgb(216,217,28)" fg:x="1380262943" fg:w="131165576"/><text x="5.3852%" y="1119.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (130,592,114 samples, 0.49%)</title><rect x="5.1373%" y="1093" width="0.4859%" height="15" fill="rgb(249,199,1)" fg:x="1380836405" fg:w="130592114"/><text x="5.3873%" y="1103.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (129,052,754 samples, 0.48%)</title><rect x="5.1431%" y="1077" width="0.4801%" height="15" fill="rgb(240,85,17)" fg:x="1382375765" fg:w="129052754"/><text x="5.3931%" y="1087.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (128,770,353 samples, 0.48%)</title><rect x="5.1441%" y="1061" width="0.4791%" height="15" fill="rgb(206,108,45)" fg:x="1382658166" fg:w="128770353"/><text x="5.3941%" y="1071.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (4,873,777 samples, 0.02%)</title><rect x="5.6051%" y="1045" width="0.0181%" height="15" fill="rgb(245,210,41)" fg:x="1506554742" fg:w="4873777"/><text x="5.8551%" y="1055.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (135,980,614 samples, 0.51%)</title><rect x="5.1352%" y="1125" width="0.5059%" height="15" fill="rgb(206,13,37)" fg:x="1380262943" fg:w="135980614"/><text x="5.3852%" y="1135.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (4,815,038 samples, 0.02%)</title><rect x="5.6232%" y="1109" width="0.0179%" height="15" fill="rgb(250,61,18)" fg:x="1511428519" fg:w="4815038"/><text x="5.8732%" y="1119.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (136,891,763 samples, 0.51%)</title><rect x="5.1336%" y="1173" width="0.5093%" height="15" fill="rgb(235,172,48)" fg:x="1379833378" fg:w="136891763"/><text x="5.3836%" y="1183.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (136,891,763 samples, 0.51%)</title><rect x="5.1336%" y="1157" width="0.5093%" height="15" fill="rgb(249,201,17)" fg:x="1379833378" fg:w="136891763"/><text x="5.3836%" y="1167.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (136,462,198 samples, 0.51%)</title><rect x="5.1352%" y="1141" width="0.5077%" height="15" fill="rgb(219,208,6)" fg:x="1380262943" fg:w="136462198"/><text x="5.3852%" y="1151.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (144,498,932 samples, 0.54%)</title><rect x="5.1239%" y="1237" width="0.5376%" height="15" fill="rgb(248,31,23)" fg:x="1377239184" fg:w="144498932"/><text x="5.3739%" y="1247.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (144,498,932 samples, 0.54%)</title><rect x="5.1239%" y="1221" width="0.5376%" height="15" fill="rgb(245,15,42)" fg:x="1377239184" fg:w="144498932"/><text x="5.3739%" y="1231.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (142,920,445 samples, 0.53%)</title><rect x="5.1298%" y="1205" width="0.5317%" height="15" fill="rgb(222,217,39)" fg:x="1378817671" fg:w="142920445"/><text x="5.3798%" y="1215.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (142,446,733 samples, 0.53%)</title><rect x="5.1316%" y="1189" width="0.5300%" height="15" fill="rgb(210,219,27)" fg:x="1379291383" fg:w="142446733"/><text x="5.3816%" y="1199.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (5,012,975 samples, 0.02%)</title><rect x="5.6429%" y="1173" width="0.0187%" height="15" fill="rgb(252,166,36)" fg:x="1516725141" fg:w="5012975"/><text x="5.8929%" y="1183.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (149,879,606 samples, 0.56%)</title><rect x="5.1194%" y="1301" width="0.5576%" height="15" fill="rgb(245,132,34)" fg:x="1376006042" fg:w="149879606"/><text x="5.3694%" y="1311.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (149,244,745 samples, 0.56%)</title><rect x="5.1217%" y="1285" width="0.5553%" height="15" fill="rgb(236,54,3)" fg:x="1376640903" fg:w="149244745"/><text x="5.3717%" y="1295.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (148,646,464 samples, 0.55%)</title><rect x="5.1239%" y="1269" width="0.5530%" height="15" fill="rgb(241,173,43)" fg:x="1377239184" fg:w="148646464"/><text x="5.3739%" y="1279.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (148,646,464 samples, 0.55%)</title><rect x="5.1239%" y="1253" width="0.5530%" height="15" fill="rgb(215,190,9)" fg:x="1377239184" fg:w="148646464"/><text x="5.3739%" y="1263.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (4,147,532 samples, 0.02%)</title><rect x="5.6615%" y="1237" width="0.0154%" height="15" fill="rgb(242,101,16)" fg:x="1521738116" fg:w="4147532"/><text x="5.9115%" y="1247.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (157,063,517 samples, 0.58%)</title><rect x="5.1113%" y="1365" width="0.5843%" height="15" fill="rgb(223,190,21)" fg:x="1373846262" fg:w="157063517"/><text x="5.3613%" y="1375.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (156,597,126 samples, 0.58%)</title><rect x="5.1131%" y="1349" width="0.5826%" height="15" fill="rgb(215,228,25)" fg:x="1374312653" fg:w="156597126"/><text x="5.3631%" y="1359.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (154,903,737 samples, 0.58%)</title><rect x="5.1194%" y="1333" width="0.5763%" height="15" fill="rgb(225,36,22)" fg:x="1376006042" fg:w="154903737"/><text x="5.3694%" y="1343.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (154,903,737 samples, 0.58%)</title><rect x="5.1194%" y="1317" width="0.5763%" height="15" fill="rgb(251,106,46)" fg:x="1376006042" fg:w="154903737"/><text x="5.3694%" y="1327.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (5,024,131 samples, 0.02%)</title><rect x="5.6770%" y="1301" width="0.0187%" height="15" fill="rgb(208,90,1)" fg:x="1525885648" fg:w="5024131"/><text x="5.9270%" y="1311.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,146,297 samples, 0.63%)</title><rect x="5.0974%" y="1429" width="0.6256%" height="15" fill="rgb(243,10,4)" fg:x="1370109209" fg:w="168146297"/><text x="5.3474%" y="1439.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (167,157,234 samples, 0.62%)</title><rect x="5.1011%" y="1413" width="0.6219%" height="15" fill="rgb(212,137,27)" fg:x="1371098272" fg:w="167157234"/><text x="5.3511%" y="1423.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (165,613,727 samples, 0.62%)</title><rect x="5.1068%" y="1397" width="0.6162%" height="15" fill="rgb(231,220,49)" fg:x="1372641779" fg:w="165613727"/><text x="5.3568%" y="1407.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (165,162,146 samples, 0.61%)</title><rect x="5.1085%" y="1381" width="0.6145%" height="15" fill="rgb(237,96,20)" fg:x="1373093360" fg:w="165162146"/><text x="5.3585%" y="1391.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (7,345,727 samples, 0.03%)</title><rect x="5.6957%" y="1365" width="0.0273%" height="15" fill="rgb(239,229,30)" fg:x="1530909779" fg:w="7345727"/><text x="5.9457%" y="1375.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (172,514,251 samples, 0.64%)</title><rect x="5.0951%" y="1493" width="0.6418%" height="15" fill="rgb(219,65,33)" fg:x="1369478972" fg:w="172514251"/><text x="5.3451%" y="1503.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (171,884,014 samples, 0.64%)</title><rect x="5.0974%" y="1477" width="0.6395%" height="15" fill="rgb(243,134,7)" fg:x="1370109209" fg:w="171884014"/><text x="5.3474%" y="1487.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (171,884,014 samples, 0.64%)</title><rect x="5.0974%" y="1461" width="0.6395%" height="15" fill="rgb(216,177,54)" fg:x="1370109209" fg:w="171884014"/><text x="5.3474%" y="1471.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (171,884,014 samples, 0.64%)</title><rect x="5.0974%" y="1445" width="0.6395%" height="15" fill="rgb(211,160,20)" fg:x="1370109209" fg:w="171884014"/><text x="5.3474%" y="1455.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (3,737,717 samples, 0.01%)</title><rect x="5.7230%" y="1429" width="0.0139%" height="15" fill="rgb(239,85,39)" fg:x="1538255506" fg:w="3737717"/><text x="5.9730%" y="1439.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (183,928,183 samples, 0.68%)</title><rect x="5.0916%" y="1557" width="0.6843%" height="15" fill="rgb(232,125,22)" fg:x="1368543276" fg:w="183928183"/><text x="5.3416%" y="1567.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (183,487,649 samples, 0.68%)</title><rect x="5.0932%" y="1541" width="0.6827%" height="15" fill="rgb(244,57,34)" fg:x="1368983810" fg:w="183487649"/><text x="5.3432%" y="1551.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (183,487,649 samples, 0.68%)</title><rect x="5.0932%" y="1525" width="0.6827%" height="15" fill="rgb(214,203,32)" fg:x="1368983810" fg:w="183487649"/><text x="5.3432%" y="1535.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (183,487,649 samples, 0.68%)</title><rect x="5.0932%" y="1509" width="0.6827%" height="15" fill="rgb(207,58,43)" fg:x="1368983810" fg:w="183487649"/><text x="5.3432%" y="1519.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (10,478,236 samples, 0.04%)</title><rect x="5.7369%" y="1493" width="0.0390%" height="15" fill="rgb(215,193,15)" fg:x="1541993223" fg:w="10478236"/><text x="5.9869%" y="1503.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,429,419 samples, 0.01%)</title><rect x="5.7879%" y="1541" width="0.0128%" height="15" fill="rgb(232,15,44)" fg:x="1555694612" fg:w="3429419"/><text x="6.0379%" y="1551.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,429,419 samples, 0.01%)</title><rect x="5.7879%" y="1525" width="0.0128%" height="15" fill="rgb(212,3,48)" fg:x="1555694612" fg:w="3429419"/><text x="6.0379%" y="1535.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (195,188,134 samples, 0.73%)</title><rect x="5.0818%" y="1621" width="0.7262%" height="15" fill="rgb(218,128,7)" fg:x="1365903893" fg:w="195188134"/><text x="5.3318%" y="1631.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (194,660,347 samples, 0.72%)</title><rect x="5.0837%" y="1605" width="0.7242%" height="15" fill="rgb(226,216,39)" fg:x="1366431680" fg:w="194660347"/><text x="5.3337%" y="1615.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (193,468,185 samples, 0.72%)</title><rect x="5.0882%" y="1589" width="0.7198%" height="15" fill="rgb(243,47,51)" fg:x="1367623842" fg:w="193468185"/><text x="5.3382%" y="1599.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (193,030,331 samples, 0.72%)</title><rect x="5.0898%" y="1573" width="0.7182%" height="15" fill="rgb(241,183,40)" fg:x="1368061696" fg:w="193030331"/><text x="5.3398%" y="1583.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (8,620,568 samples, 0.03%)</title><rect x="5.7759%" y="1557" width="0.0321%" height="15" fill="rgb(231,217,32)" fg:x="1552471459" fg:w="8620568"/><text x="6.0259%" y="1567.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (203,722,855 samples, 0.76%)</title><rect x="5.0772%" y="1685" width="0.7579%" height="15" fill="rgb(229,61,38)" fg:x="1364682640" fg:w="203722855"/><text x="5.3272%" y="1695.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (203,722,855 samples, 0.76%)</title><rect x="5.0772%" y="1669" width="0.7579%" height="15" fill="rgb(225,210,5)" fg:x="1364682640" fg:w="203722855"/><text x="5.3272%" y="1679.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (203,722,855 samples, 0.76%)</title><rect x="5.0772%" y="1653" width="0.7579%" height="15" fill="rgb(231,79,45)" fg:x="1364682640" fg:w="203722855"/><text x="5.3272%" y="1663.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (203,224,012 samples, 0.76%)</title><rect x="5.0791%" y="1637" width="0.7561%" height="15" fill="rgb(224,100,7)" fg:x="1365181483" fg:w="203224012"/><text x="5.3291%" y="1647.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (7,313,468 samples, 0.03%)</title><rect x="5.8080%" y="1621" width="0.0272%" height="15" fill="rgb(241,198,18)" fg:x="1561092027" fg:w="7313468"/><text x="6.0580%" y="1631.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (212,633,966 samples, 0.79%)</title><rect x="5.0751%" y="1749" width="0.7911%" height="15" fill="rgb(252,97,53)" fg:x="1364113505" fg:w="212633966"/><text x="5.3251%" y="1759.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (212,633,966 samples, 0.79%)</title><rect x="5.0751%" y="1733" width="0.7911%" height="15" fill="rgb(220,88,7)" fg:x="1364113505" fg:w="212633966"/><text x="5.3251%" y="1743.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (212,633,966 samples, 0.79%)</title><rect x="5.0751%" y="1717" width="0.7911%" height="15" fill="rgb(213,176,14)" fg:x="1364113505" fg:w="212633966"/><text x="5.3251%" y="1727.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (212,633,966 samples, 0.79%)</title><rect x="5.0751%" y="1701" width="0.7911%" height="15" fill="rgb(246,73,7)" fg:x="1364113505" fg:w="212633966"/><text x="5.3251%" y="1711.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (8,341,976 samples, 0.03%)</title><rect x="5.8352%" y="1685" width="0.0310%" height="15" fill="rgb(245,64,36)" fg:x="1568405495" fg:w="8341976"/><text x="6.0852%" y="1695.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (219,954,461 samples, 0.82%)</title><rect x="5.0580%" y="1813" width="0.8183%" height="15" fill="rgb(245,80,10)" fg:x="1359512967" fg:w="219954461"/><text x="5.3080%" y="1823.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (218,237,490 samples, 0.81%)</title><rect x="5.0644%" y="1797" width="0.8119%" height="15" fill="rgb(232,107,50)" fg:x="1361229938" fg:w="218237490"/><text x="5.3144%" y="1807.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (217,674,237 samples, 0.81%)</title><rect x="5.0665%" y="1781" width="0.8098%" height="15" fill="rgb(253,3,0)" fg:x="1361793191" fg:w="217674237"/><text x="5.3165%" y="1791.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (217,674,237 samples, 0.81%)</title><rect x="5.0665%" y="1765" width="0.8098%" height="15" fill="rgb(212,99,53)" fg:x="1361793191" fg:w="217674237"/><text x="5.3165%" y="1775.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (2,719,957 samples, 0.01%)</title><rect x="5.8662%" y="1749" width="0.0101%" height="15" fill="rgb(249,111,54)" fg:x="1576747471" fg:w="2719957"/><text x="6.1162%" y="1759.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,126,161 samples, 0.01%)</title><rect x="5.8779%" y="1797" width="0.0116%" height="15" fill="rgb(249,55,30)" fg:x="1579902830" fg:w="3126161"/><text x="6.1279%" y="1807.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,695,830 samples, 0.85%)</title><rect x="5.0441%" y="1909" width="0.8471%" height="15" fill="rgb(237,47,42)" fg:x="1355776577" fg:w="227695830"/><text x="5.2941%" y="1919.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (227,695,830 samples, 0.85%)</title><rect x="5.0441%" y="1893" width="0.8471%" height="15" fill="rgb(211,20,18)" fg:x="1355776577" fg:w="227695830"/><text x="5.2941%" y="1903.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,495,733 samples, 0.84%)</title><rect x="5.0486%" y="1877" width="0.8427%" height="15" fill="rgb(231,203,46)" fg:x="1356976674" fg:w="226495733"/><text x="5.2986%" y="1887.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (225,938,768 samples, 0.84%)</title><rect x="5.0506%" y="1861" width="0.8406%" height="15" fill="rgb(237,142,3)" fg:x="1357533639" fg:w="225938768"/><text x="5.3006%" y="1871.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (224,975,847 samples, 0.84%)</title><rect x="5.0542%" y="1845" width="0.8370%" height="15" fill="rgb(241,107,1)" fg:x="1358496560" fg:w="224975847"/><text x="5.3042%" y="1855.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (224,975,847 samples, 0.84%)</title><rect x="5.0542%" y="1829" width="0.8370%" height="15" fill="rgb(229,83,13)" fg:x="1358496560" fg:w="224975847"/><text x="5.3042%" y="1839.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (4,004,979 samples, 0.01%)</title><rect x="5.8763%" y="1813" width="0.0149%" height="15" fill="rgb(241,91,40)" fg:x="1579467428" fg:w="4004979"/><text x="6.1263%" y="1823.50"></text></g><g><title>bool std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;, (std::__detail::_RegexExecutorPolicy)0, true&gt; (235,115,986 samples, 0.87%)</title><rect x="5.0239%" y="1925" width="0.8747%" height="15" fill="rgb(225,3,45)" fg:x="1350351734" fg:w="235115986"/><text x="5.2739%" y="1935.50"></text></g><g><title>Glob::isIgnored (237,359,629 samples, 0.88%)</title><rect x="5.0239%" y="1941" width="0.8831%" height="15" fill="rgb(244,223,14)" fg:x="1350351734" fg:w="237359629"/><text x="5.2739%" y="1951.50"></text></g><g><title>Watcher::isIgnored (241,426,911 samples, 0.90%)</title><rect x="5.0134%" y="1957" width="0.8982%" height="15" fill="rgb(224,124,37)" fg:x="1347538577" fg:w="241426911"/><text x="5.2634%" y="1967.50"></text></g><g><title>InotifyBackend::handleSubscription (263,290,327 samples, 0.98%)</title><rect x="4.9696%" y="1973" width="0.9796%" height="15" fill="rgb(251,171,30)" fg:x="1335756619" fg:w="263290327"/><text x="5.2196%" y="1983.50"></text></g><g><title>kmem_cache_alloc (3,378,284 samples, 0.01%)</title><rect x="5.9814%" y="1877" width="0.0126%" height="15" fill="rgb(236,46,54)" fg:x="1607710702" fg:w="3378284"/><text x="6.2314%" y="1887.50"></text></g><g><title>memset_orig (7,473,226 samples, 0.03%)</title><rect x="5.9940%" y="1877" width="0.0278%" height="15" fill="rgb(245,213,5)" fg:x="1611088986" fg:w="7473226"/><text x="6.2440%" y="1887.50"></text></g><g><title>check_heap_object (5,109,554 samples, 0.02%)</title><rect x="6.0343%" y="1845" width="0.0190%" height="15" fill="rgb(230,144,27)" fg:x="1621924686" fg:w="5109554"/><text x="6.2843%" y="1855.50"></text></g><g><title>getname_flags (20,590,484 samples, 0.08%)</title><rect x="5.9788%" y="1893" width="0.0766%" height="15" fill="rgb(220,86,6)" fg:x="1607020047" fg:w="20590484"/><text x="6.2288%" y="1903.50"></text></g><g><title>strncpy_from_user (9,048,319 samples, 0.03%)</title><rect x="6.0218%" y="1877" width="0.0337%" height="15" fill="rgb(240,20,13)" fg:x="1618562212" fg:w="9048319"/><text x="6.2718%" y="1887.50"></text></g><g><title>__check_object_size (7,952,285 samples, 0.03%)</title><rect x="6.0259%" y="1861" width="0.0296%" height="15" fill="rgb(217,89,34)" fg:x="1619658246" fg:w="7952285"/><text x="6.2759%" y="1871.50"></text></g><g><title>cache_from_obj (5,273,686 samples, 0.02%)</title><rect x="6.0720%" y="1861" width="0.0196%" height="15" fill="rgb(229,13,5)" fg:x="1632066058" fg:w="5273686"/><text x="6.3220%" y="1871.50"></text></g><g><title>kmem_cache_free (8,484,698 samples, 0.03%)</title><rect x="6.0620%" y="1877" width="0.0316%" height="15" fill="rgb(244,67,35)" fg:x="1629381905" fg:w="8484698"/><text x="6.3120%" y="1887.50"></text></g><g><title>putname (9,614,216 samples, 0.04%)</title><rect x="6.0599%" y="1893" width="0.0358%" height="15" fill="rgb(221,40,2)" fg:x="1628800316" fg:w="9614216"/><text x="6.3099%" y="1903.50"></text></g><g><title>generic_permission (4,545,227 samples, 0.02%)</title><rect x="6.1604%" y="1813" width="0.0169%" height="15" fill="rgb(237,157,21)" fg:x="1655813442" fg:w="4545227"/><text x="6.4104%" y="1823.50"></text></g><g><title>inode_permission (7,326,063 samples, 0.03%)</title><rect x="6.1541%" y="1829" width="0.0273%" height="15" fill="rgb(222,94,11)" fg:x="1654126176" fg:w="7326063"/><text x="6.4041%" y="1839.50"></text></g><g><title>lookup_fast (4,770,809 samples, 0.02%)</title><rect x="6.1813%" y="1829" width="0.0177%" height="15" fill="rgb(249,113,6)" fg:x="1661452239" fg:w="4770809"/><text x="6.4313%" y="1839.50"></text></g><g><title>__d_lookup_rcu (4,193,659 samples, 0.02%)</title><rect x="6.1835%" y="1813" width="0.0156%" height="15" fill="rgb(238,137,36)" fg:x="1662029389" fg:w="4193659"/><text x="6.4335%" y="1823.50"></text></g><g><title>link_path_walk (21,521,584 samples, 0.08%)</title><rect x="6.1271%" y="1845" width="0.0801%" height="15" fill="rgb(210,102,26)" fg:x="1646857701" fg:w="21521584"/><text x="6.3771%" y="1855.50"></text></g><g><title>__d_lookup_rcu (8,848,394 samples, 0.03%)</title><rect x="6.2349%" y="1813" width="0.0329%" height="15" fill="rgb(218,30,30)" fg:x="1675855220" fg:w="8848394"/><text x="6.4849%" y="1823.50"></text></g><g><title>path_lookupat (41,986,168 samples, 0.16%)</title><rect x="6.1127%" y="1861" width="0.1562%" height="15" fill="rgb(214,67,26)" fg:x="1643013168" fg:w="41986168"/><text x="6.3627%" y="1871.50"></text></g><g><title>walk_component (9,144,116 samples, 0.03%)</title><rect x="6.2349%" y="1845" width="0.0340%" height="15" fill="rgb(251,9,53)" fg:x="1675855220" fg:w="9144116"/><text x="6.4849%" y="1855.50"></text></g><g><title>lookup_fast (9,144,116 samples, 0.03%)</title><rect x="6.2349%" y="1829" width="0.0340%" height="15" fill="rgb(228,204,25)" fg:x="1675855220" fg:w="9144116"/><text x="6.4849%" y="1839.50"></text></g><g><title>filename_lookup (43,722,159 samples, 0.16%)</title><rect x="6.1084%" y="1877" width="0.1627%" height="15" fill="rgb(207,153,8)" fg:x="1641847946" fg:w="43722159"/><text x="6.3584%" y="1887.50"></text></g><g><title>security_inode_getattr (3,899,910 samples, 0.01%)</title><rect x="6.2774%" y="1877" width="0.0145%" height="15" fill="rgb(242,9,16)" fg:x="1687277599" fg:w="3899910"/><text x="6.5274%" y="1887.50"></text></g><g><title>apparmor_inode_getattr (2,843,436 samples, 0.01%)</title><rect x="6.2814%" y="1861" width="0.0106%" height="15" fill="rgb(217,211,10)" fg:x="1688334073" fg:w="2843436"/><text x="6.5314%" y="1871.50"></text></g><g><title>__se_sys_newstat (93,190,101 samples, 0.35%)</title><rect x="5.9666%" y="1909" width="0.3467%" height="15" fill="rgb(219,228,52)" fg:x="1603727633" fg:w="93190101"/><text x="6.2166%" y="1919.50"></text></g><g><title>vfs_statx (56,257,643 samples, 0.21%)</title><rect x="6.1040%" y="1893" width="0.2093%" height="15" fill="rgb(231,92,29)" fg:x="1640660091" fg:w="56257643"/><text x="6.3540%" y="1903.50"></text></g><g><title>vfs_getattr_nosec (5,740,225 samples, 0.02%)</title><rect x="6.2919%" y="1877" width="0.0214%" height="15" fill="rgb(232,8,23)" fg:x="1691177509" fg:w="5740225"/><text x="6.5419%" y="1887.50"></text></g><g><title>ext4_file_getattr (5,171,565 samples, 0.02%)</title><rect x="6.2941%" y="1861" width="0.0192%" height="15" fill="rgb(216,211,34)" fg:x="1691746169" fg:w="5171565"/><text x="6.5441%" y="1871.50"></text></g><g><title>ext4_getattr (4,621,201 samples, 0.02%)</title><rect x="6.2961%" y="1845" width="0.0172%" height="15" fill="rgb(236,151,0)" fg:x="1692296533" fg:w="4621201"/><text x="6.5461%" y="1855.50"></text></g><g><title>__x64_sys_newstat (94,646,849 samples, 0.35%)</title><rect x="5.9666%" y="1925" width="0.3521%" height="15" fill="rgb(209,168,3)" fg:x="1603727633" fg:w="94646849"/><text x="6.2166%" y="1935.50"></text></g><g><title>do_syscall_64 (98,554,597 samples, 0.37%)</title><rect x="5.9600%" y="1941" width="0.3667%" height="15" fill="rgb(208,129,28)" fg:x="1601969050" fg:w="98554597"/><text x="6.2100%" y="1951.50"></text></g><g><title>entry_SYSCALL_64 (101,455,898 samples, 0.38%)</title><rect x="5.9514%" y="1957" width="0.3775%" height="15" fill="rgb(229,78,22)" fg:x="1599632319" fg:w="101455898"/><text x="6.2014%" y="1967.50"></text></g><g><title>entry_ibpb (8,958,803 samples, 0.03%)</title><rect x="6.3288%" y="1957" width="0.0333%" height="15" fill="rgb(228,187,13)" fg:x="1701088217" fg:w="8958803"/><text x="6.5788%" y="1967.50"></text></g><g><title>__xstat64 (112,117,305 samples, 0.42%)</title><rect x="5.9492%" y="1973" width="0.4171%" height="15" fill="rgb(240,119,24)" fg:x="1599046946" fg:w="112117305"/><text x="6.1992%" y="1983.50"></text></g><g><title>InotifyBackend::handleEvent (382,235,345 samples, 1.42%)</title><rect x="4.9632%" y="1989" width="1.4221%" height="15" fill="rgb(209,194,42)" fg:x="1334038799" fg:w="382235345"/><text x="5.2132%" y="1999.50"></text></g><g><title>InotifyBackend::handleEvents (387,556,824 samples, 1.44%)</title><rect x="4.9524%" y="2005" width="1.4419%" height="15" fill="rgb(247,200,46)" fg:x="1331135024" fg:w="387556824"/><text x="5.2024%" y="2015.50"></text></g><g><title>__check_object_size (3,286,126 samples, 0.01%)</title><rect x="6.4569%" y="1877" width="0.0122%" height="15" fill="rgb(218,76,16)" fg:x="1735515232" fg:w="3286126"/><text x="6.7069%" y="1887.50"></text></g><g><title>check_heap_object (2,807,706 samples, 0.01%)</title><rect x="6.4587%" y="1861" width="0.0104%" height="15" fill="rgb(225,21,48)" fg:x="1735993652" fg:w="2807706"/><text x="6.7087%" y="1871.50"></text></g><g><title>copy_event_to_user (6,029,833 samples, 0.02%)</title><rect x="6.4569%" y="1893" width="0.0224%" height="15" fill="rgb(239,223,50)" fg:x="1735515232" fg:w="6029833"/><text x="6.7069%" y="1903.50"></text></g><g><title>fsnotify_destroy_event (3,478,735 samples, 0.01%)</title><rect x="6.4793%" y="1893" width="0.0129%" height="15" fill="rgb(244,45,21)" fg:x="1741545065" fg:w="3478735"/><text x="6.7293%" y="1903.50"></text></g><g><title>inotify_free_event (3,478,735 samples, 0.01%)</title><rect x="6.4793%" y="1877" width="0.0129%" height="15" fill="rgb(232,33,43)" fg:x="1741545065" fg:w="3478735"/><text x="6.7293%" y="1887.50"></text></g><g><title>kfree (2,895,159 samples, 0.01%)</title><rect x="6.4815%" y="1861" width="0.0108%" height="15" fill="rgb(209,8,3)" fg:x="1742128641" fg:w="2895159"/><text x="6.7315%" y="1871.50"></text></g><g><title>inotify_read (14,159,461 samples, 0.05%)</title><rect x="6.4417%" y="1909" width="0.0527%" height="15" fill="rgb(214,25,53)" fg:x="1731433907" fg:w="14159461"/><text x="6.6917%" y="1919.50"></text></g><g><title>ksys_read (21,887,098 samples, 0.08%)</title><rect x="6.4288%" y="1941" width="0.0814%" height="15" fill="rgb(254,186,54)" fg:x="1727965229" fg:w="21887098"/><text x="6.6788%" y="1951.50"></text></g><g><title>vfs_read (20,747,759 samples, 0.08%)</title><rect x="6.4330%" y="1925" width="0.0772%" height="15" fill="rgb(208,174,49)" fg:x="1729104568" fg:w="20747759"/><text x="6.6830%" y="1935.50"></text></g><g><title>security_file_permission (4,258,959 samples, 0.02%)</title><rect x="6.4944%" y="1909" width="0.0158%" height="15" fill="rgb(233,191,51)" fg:x="1745593368" fg:w="4258959"/><text x="6.7444%" y="1919.50"></text></g><g><title>__x64_sys_read (23,630,558 samples, 0.09%)</title><rect x="6.4245%" y="1957" width="0.0879%" height="15" fill="rgb(222,134,10)" fg:x="1726804321" fg:w="23630558"/><text x="6.6745%" y="1967.50"></text></g><g><title>do_syscall_64 (25,374,708 samples, 0.09%)</title><rect x="6.4245%" y="1973" width="0.0944%" height="15" fill="rgb(230,226,20)" fg:x="1726804321" fg:w="25374708"/><text x="6.6745%" y="1983.50"></text></g><g><title>entry_SYSCALL_64 (27,421,831 samples, 0.10%)</title><rect x="6.4190%" y="1989" width="0.1020%" height="15" fill="rgb(251,111,25)" fg:x="1725329334" fg:w="27421831"/><text x="6.6690%" y="1999.50"></text></g><g><title>InotifyBackend::start (432,319,852 samples, 1.61%)</title><rect x="4.9524%" y="2021" width="1.6084%" height="15" fill="rgb(224,40,46)" fg:x="1331135024" fg:w="432319852"/><text x="5.2024%" y="2031.50"></text></g><g><title>read (40,431,273 samples, 0.15%)</title><rect x="6.4104%" y="2005" width="0.1504%" height="15" fill="rgb(236,108,47)" fg:x="1723023603" fg:w="40431273"/><text x="6.6604%" y="2015.50"></text></g><g><title>entry_ibpb (10,703,711 samples, 0.04%)</title><rect x="6.5210%" y="1989" width="0.0398%" height="15" fill="rgb(234,93,0)" fg:x="1752751165" fg:w="10703711"/><text x="6.7710%" y="1999.50"></text></g><g><title>hrtimer_start_range_ns (2,955,860 samples, 0.01%)</title><rect x="6.6200%" y="1893" width="0.0110%" height="15" fill="rgb(224,213,32)" fg:x="1779356591" fg:w="2955860"/><text x="6.8700%" y="1903.50"></text></g><g><title>update_curr (4,170,311 samples, 0.02%)</title><rect x="6.6683%" y="1813" width="0.0155%" height="15" fill="rgb(251,11,48)" fg:x="1792327527" fg:w="4170311"/><text x="6.9183%" y="1823.50"></text></g><g><title>dequeue_task (12,381,338 samples, 0.05%)</title><rect x="6.6422%" y="1861" width="0.0461%" height="15" fill="rgb(236,173,5)" fg:x="1785318204" fg:w="12381338"/><text x="6.8922%" y="1871.50"></text></g><g><title>dequeue_task_fair (11,788,150 samples, 0.04%)</title><rect x="6.6444%" y="1845" width="0.0439%" height="15" fill="rgb(230,95,12)" fg:x="1785911392" fg:w="11788150"/><text x="6.8944%" y="1855.50"></text></g><g><title>dequeue_entity (11,182,400 samples, 0.04%)</title><rect x="6.6466%" y="1829" width="0.0416%" height="15" fill="rgb(232,209,1)" fg:x="1786517142" fg:w="11182400"/><text x="6.8966%" y="1839.50"></text></g><g><title>pick_next_task (9,608,904 samples, 0.04%)</title><rect x="6.6882%" y="1861" width="0.0357%" height="15" fill="rgb(232,6,1)" fg:x="1797699542" fg:w="9608904"/><text x="6.9382%" y="1871.50"></text></g><g><title>pick_next_task_fair (9,608,904 samples, 0.04%)</title><rect x="6.6882%" y="1845" width="0.0357%" height="15" fill="rgb(210,224,50)" fg:x="1797699542" fg:w="9608904"/><text x="6.9382%" y="1855.50"></text></g><g><title>newidle_balance (8,405,131 samples, 0.03%)</title><rect x="6.6927%" y="1829" width="0.0313%" height="15" fill="rgb(228,127,35)" fg:x="1798903315" fg:w="8405131"/><text x="6.9427%" y="1839.50"></text></g><g><title>load_balance (3,565,046 samples, 0.01%)</title><rect x="6.7107%" y="1813" width="0.0133%" height="15" fill="rgb(245,102,45)" fg:x="1803743400" fg:w="3565046"/><text x="6.9607%" y="1823.50"></text></g><g><title>psi_task_switch (3,537,819 samples, 0.01%)</title><rect x="6.7262%" y="1861" width="0.0132%" height="15" fill="rgb(214,1,49)" fg:x="1807911435" fg:w="3537819"/><text x="6.9762%" y="1871.50"></text></g><g><title>__sched_text_start (31,452,902 samples, 0.12%)</title><rect x="6.6332%" y="1877" width="0.1170%" height="15" fill="rgb(226,163,40)" fg:x="1782912387" fg:w="31452902"/><text x="6.8832%" y="1887.50"></text></g><g><title>schedule (34,046,638 samples, 0.13%)</title><rect x="6.6310%" y="1893" width="0.1267%" height="15" fill="rgb(239,212,28)" fg:x="1782312451" fg:w="34046638"/><text x="6.8810%" y="1903.50"></text></g><g><title>do_sys_poll (48,959,319 samples, 0.18%)</title><rect x="6.5777%" y="1941" width="0.1822%" height="15" fill="rgb(220,20,13)" fg:x="1767996560" fg:w="48959319"/><text x="6.8277%" y="1951.50"></text></g><g><title>schedule_hrtimeout_range (39,337,084 samples, 0.15%)</title><rect x="6.6135%" y="1925" width="0.1464%" height="15" fill="rgb(210,164,35)" fg:x="1777618795" fg:w="39337084"/><text x="6.8635%" y="1935.50"></text></g><g><title>schedule_hrtimeout_range_clock (38,732,915 samples, 0.14%)</title><rect x="6.6158%" y="1909" width="0.1441%" height="15" fill="rgb(248,109,41)" fg:x="1778222964" fg:w="38732915"/><text x="6.8658%" y="1919.50"></text></g><g><title>__se_sys_poll (51,334,018 samples, 0.19%)</title><rect x="6.5777%" y="1957" width="0.1910%" height="15" fill="rgb(238,23,50)" fg:x="1767996560" fg:w="51334018"/><text x="6.8277%" y="1967.50"></text></g><g><title>entry_SYSCALL_64 (54,815,286 samples, 0.20%)</title><rect x="6.5758%" y="2005" width="0.2039%" height="15" fill="rgb(211,48,49)" fg:x="1767464416" fg:w="54815286"/><text x="6.8258%" y="2015.50"></text></g><g><title>do_syscall_64 (54,283,142 samples, 0.20%)</title><rect x="6.5777%" y="1989" width="0.2020%" height="15" fill="rgb(223,36,21)" fg:x="1767996560" fg:w="54283142"/><text x="6.8277%" y="1999.50"></text></g><g><title>__x64_sys_poll (54,283,142 samples, 0.20%)</title><rect x="6.5777%" y="1973" width="0.2020%" height="15" fill="rgb(207,123,46)" fg:x="1767996560" fg:w="54283142"/><text x="6.8277%" y="1983.50"></text></g><g><title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Backend::run()::{lambda()#1}&gt; &gt; &gt;::_M_run (494,686,966 samples, 1.84%)</title><rect x="4.9524%" y="2037" width="1.8405%" height="15" fill="rgb(240,218,32)" fg:x="1331135024" fg:w="494686966"/><text x="5.2024%" y="2047.50">s..</text></g><g><title>__poll (62,367,114 samples, 0.23%)</title><rect x="6.5608%" y="2021" width="0.2320%" height="15" fill="rgb(252,5,43)" fg:x="1763454876" fg:w="62367114"/><text x="6.8108%" y="2031.50"></text></g><g><title>[libstdc++.so.6.0.30] (494,862,306 samples, 1.84%)</title><rect x="4.9522%" y="2053" width="1.8411%" height="15" fill="rgb(252,84,19)" fg:x="1331085521" fg:w="494862306"/><text x="5.2022%" y="2063.50">[..</text></g><g><title>dequeue_entity (3,621,389 samples, 0.01%)</title><rect x="6.8256%" y="1845" width="0.0135%" height="15" fill="rgb(243,152,39)" fg:x="1834614452" fg:w="3621389"/><text x="7.0756%" y="1855.50"></text></g><g><title>dequeue_task (5,786,057 samples, 0.02%)</title><rect x="6.8204%" y="1877" width="0.0215%" height="15" fill="rgb(234,160,15)" fg:x="1833219614" fg:w="5786057"/><text x="7.0704%" y="1887.50"></text></g><g><title>dequeue_task_fair (5,078,679 samples, 0.02%)</title><rect x="6.8230%" y="1861" width="0.0189%" height="15" fill="rgb(237,34,20)" fg:x="1833926992" fg:w="5078679"/><text x="7.0730%" y="1871.50"></text></g><g><title>psi_task_switch (2,898,091 samples, 0.01%)</title><rect x="6.8501%" y="1877" width="0.0108%" height="15" fill="rgb(229,97,13)" fg:x="1841212735" fg:w="2898091"/><text x="7.1001%" y="1887.50"></text></g><g><title>__x64_sys_futex (19,739,855 samples, 0.07%)</title><rect x="6.8006%" y="1973" width="0.0734%" height="15" fill="rgb(234,71,50)" fg:x="1827894699" fg:w="19739855"/><text x="7.0506%" y="1983.50"></text></g><g><title>__se_sys_futex (19,739,855 samples, 0.07%)</title><rect x="6.8006%" y="1957" width="0.0734%" height="15" fill="rgb(253,155,4)" fg:x="1827894699" fg:w="19739855"/><text x="7.0506%" y="1967.50"></text></g><g><title>do_futex (19,739,855 samples, 0.07%)</title><rect x="6.8006%" y="1941" width="0.0734%" height="15" fill="rgb(222,185,37)" fg:x="1827894699" fg:w="19739855"/><text x="7.0506%" y="1951.50"></text></g><g><title>futex_wait (19,739,855 samples, 0.07%)</title><rect x="6.8006%" y="1925" width="0.0734%" height="15" fill="rgb(251,177,13)" fg:x="1827894699" fg:w="19739855"/><text x="7.0506%" y="1935.50"></text></g><g><title>schedule (15,135,068 samples, 0.06%)</title><rect x="6.8177%" y="1909" width="0.0563%" height="15" fill="rgb(250,179,40)" fg:x="1832499486" fg:w="15135068"/><text x="7.0677%" y="1919.50"></text></g><g><title>__sched_text_start (15,135,068 samples, 0.06%)</title><rect x="6.8177%" y="1893" width="0.0563%" height="15" fill="rgb(242,44,2)" fg:x="1832499486" fg:w="15135068"/><text x="7.0677%" y="1903.50"></text></g><g><title>entry_SYSCALL_64 (23,778,591 samples, 0.09%)</title><rect x="6.7957%" y="2005" width="0.0885%" height="15" fill="rgb(216,177,13)" fg:x="1826591983" fg:w="23778591"/><text x="7.0457%" y="2015.50"></text></g><g><title>do_syscall_64 (22,475,875 samples, 0.08%)</title><rect x="6.8006%" y="1989" width="0.0836%" height="15" fill="rgb(216,106,43)" fg:x="1827894699" fg:w="22475875"/><text x="7.0506%" y="1999.50"></text></g><g><title>syscall_exit_to_user_mode (2,736,020 samples, 0.01%)</title><rect x="6.8740%" y="1973" width="0.0102%" height="15" fill="rgb(216,183,2)" fg:x="1847634554" fg:w="2736020"/><text x="7.1240%" y="1983.50"></text></g><g><title>entry_ibpb (4,141,560 samples, 0.02%)</title><rect x="6.8842%" y="2005" width="0.0154%" height="15" fill="rgb(249,75,3)" fg:x="1850370574" fg:w="4141560"/><text x="7.1342%" y="2015.50"></text></g><g><title>__GI___futex_abstimed_wait_cancelable64 (30,709,155 samples, 0.11%)</title><rect x="6.7933%" y="2021" width="0.1143%" height="15" fill="rgb(219,67,39)" fg:x="1825947827" fg:w="30709155"/><text x="7.0433%" y="2031.50"></text></g><g><title>[node] (32,173,984 samples, 0.12%)</title><rect x="6.7933%" y="2037" width="0.1197%" height="15" fill="rgb(253,228,2)" fg:x="1825947827" fg:w="32173984"/><text x="7.0433%" y="2047.50"></text></g><g><title>__x64_sys_futex (2,766,423 samples, 0.01%)</title><rect x="6.9157%" y="1957" width="0.0103%" height="15" fill="rgb(235,138,27)" fg:x="1858828745" fg:w="2766423"/><text x="7.1657%" y="1967.50"></text></g><g><title>__se_sys_futex (2,766,423 samples, 0.01%)</title><rect x="6.9157%" y="1941" width="0.0103%" height="15" fill="rgb(236,97,51)" fg:x="1858828745" fg:w="2766423"/><text x="7.1657%" y="1951.50"></text></g><g><title>do_futex (2,766,423 samples, 0.01%)</title><rect x="6.9157%" y="1925" width="0.0103%" height="15" fill="rgb(240,80,30)" fg:x="1858828745" fg:w="2766423"/><text x="7.1657%" y="1935.50"></text></g><g><title>futex_wait (2,766,423 samples, 0.01%)</title><rect x="6.9157%" y="1909" width="0.0103%" height="15" fill="rgb(230,178,19)" fg:x="1858828745" fg:w="2766423"/><text x="7.1657%" y="1919.50"></text></g><g><title>[node] (4,271,697 samples, 0.02%)</title><rect x="6.9157%" y="2021" width="0.0159%" height="15" fill="rgb(210,190,27)" fg:x="1858828745" fg:w="4271697"/><text x="7.1657%" y="2031.50"></text></g><g><title>__GI___futex_abstimed_wait_cancelable64 (4,271,697 samples, 0.02%)</title><rect x="6.9157%" y="2005" width="0.0159%" height="15" fill="rgb(222,107,31)" fg:x="1858828745" fg:w="4271697"/><text x="7.1657%" y="2015.50"></text></g><g><title>entry_SYSCALL_64 (4,271,697 samples, 0.02%)</title><rect x="6.9157%" y="1989" width="0.0159%" height="15" fill="rgb(216,127,34)" fg:x="1858828745" fg:w="4271697"/><text x="7.1657%" y="1999.50"></text></g><g><title>do_syscall_64 (4,271,697 samples, 0.02%)</title><rect x="6.9157%" y="1973" width="0.0159%" height="15" fill="rgb(234,116,52)" fg:x="1858828745" fg:w="4271697"/><text x="7.1657%" y="1983.50"></text></g><g><title>[unknown] (3,117,812 samples, 0.01%)</title><rect x="6.9323%" y="517" width="0.0116%" height="15" fill="rgb(222,124,15)" fg:x="1863286634" fg:w="3117812"/><text x="7.1823%" y="527.50"></text></g><g><title>[unknown] (3,117,812 samples, 0.01%)</title><rect x="6.9323%" y="501" width="0.0116%" height="15" fill="rgb(231,179,28)" fg:x="1863286634" fg:w="3117812"/><text x="7.1823%" y="511.50"></text></g><g><title>[unknown] (3,798,287 samples, 0.01%)</title><rect x="6.9323%" y="549" width="0.0141%" height="15" fill="rgb(226,93,45)" fg:x="1863286634" fg:w="3798287"/><text x="7.1823%" y="559.50"></text></g><g><title>[unknown] (3,798,287 samples, 0.01%)</title><rect x="6.9323%" y="533" width="0.0141%" height="15" fill="rgb(215,8,51)" fg:x="1863286634" fg:w="3798287"/><text x="7.1823%" y="543.50"></text></g><g><title>[unknown] (5,395,477 samples, 0.02%)</title><rect x="6.9323%" y="581" width="0.0201%" height="15" fill="rgb(223,106,5)" fg:x="1863286634" fg:w="5395477"/><text x="7.1823%" y="591.50"></text></g><g><title>[unknown] (5,395,477 samples, 0.02%)</title><rect x="6.9323%" y="565" width="0.0201%" height="15" fill="rgb(250,191,5)" fg:x="1863286634" fg:w="5395477"/><text x="7.1823%" y="575.50"></text></g><g><title>[unknown] (5,989,339 samples, 0.02%)</title><rect x="6.9323%" y="597" width="0.0223%" height="15" fill="rgb(242,132,44)" fg:x="1863286634" fg:w="5989339"/><text x="7.1823%" y="607.50"></text></g><g><title>[unknown] (6,603,093 samples, 0.02%)</title><rect x="6.9323%" y="613" width="0.0246%" height="15" fill="rgb(251,152,29)" fg:x="1863286634" fg:w="6603093"/><text x="7.1823%" y="623.50"></text></g><g><title>[unknown] (7,142,058 samples, 0.03%)</title><rect x="6.9323%" y="661" width="0.0266%" height="15" fill="rgb(218,179,5)" fg:x="1863286634" fg:w="7142058"/><text x="7.1823%" y="671.50"></text></g><g><title>[unknown] (7,142,058 samples, 0.03%)</title><rect x="6.9323%" y="645" width="0.0266%" height="15" fill="rgb(227,67,19)" fg:x="1863286634" fg:w="7142058"/><text x="7.1823%" y="655.50"></text></g><g><title>[unknown] (7,142,058 samples, 0.03%)</title><rect x="6.9323%" y="629" width="0.0266%" height="15" fill="rgb(233,119,31)" fg:x="1863286634" fg:w="7142058"/><text x="7.1823%" y="639.50"></text></g><g><title>[unknown] (7,765,492 samples, 0.03%)</title><rect x="6.9323%" y="677" width="0.0289%" height="15" fill="rgb(241,120,22)" fg:x="1863286634" fg:w="7765492"/><text x="7.1823%" y="687.50"></text></g><g><title>[unknown] (8,929,407 samples, 0.03%)</title><rect x="6.9323%" y="693" width="0.0332%" height="15" fill="rgb(224,102,30)" fg:x="1863286634" fg:w="8929407"/><text x="7.1823%" y="703.50"></text></g><g><title>[unknown] (9,898,267 samples, 0.04%)</title><rect x="6.9323%" y="741" width="0.0368%" height="15" fill="rgb(210,164,37)" fg:x="1863286634" fg:w="9898267"/><text x="7.1823%" y="751.50"></text></g><g><title>[unknown] (9,898,267 samples, 0.04%)</title><rect x="6.9323%" y="725" width="0.0368%" height="15" fill="rgb(226,191,16)" fg:x="1863286634" fg:w="9898267"/><text x="7.1823%" y="735.50"></text></g><g><title>[unknown] (9,898,267 samples, 0.04%)</title><rect x="6.9323%" y="709" width="0.0368%" height="15" fill="rgb(214,40,45)" fg:x="1863286634" fg:w="9898267"/><text x="7.1823%" y="719.50"></text></g><g><title>[unknown] (11,555,584 samples, 0.04%)</title><rect x="6.9323%" y="789" width="0.0430%" height="15" fill="rgb(244,29,26)" fg:x="1863286634" fg:w="11555584"/><text x="7.1823%" y="799.50"></text></g><g><title>[unknown] (11,555,584 samples, 0.04%)</title><rect x="6.9323%" y="773" width="0.0430%" height="15" fill="rgb(216,16,5)" fg:x="1863286634" fg:w="11555584"/><text x="7.1823%" y="783.50"></text></g><g><title>[unknown] (11,555,584 samples, 0.04%)</title><rect x="6.9323%" y="757" width="0.0430%" height="15" fill="rgb(249,76,35)" fg:x="1863286634" fg:w="11555584"/><text x="7.1823%" y="767.50"></text></g><g><title>[unknown] (12,066,950 samples, 0.04%)</title><rect x="6.9323%" y="805" width="0.0449%" height="15" fill="rgb(207,11,44)" fg:x="1863286634" fg:w="12066950"/><text x="7.1823%" y="815.50"></text></g><g><title>[unknown] (12,739,596 samples, 0.05%)</title><rect x="6.9323%" y="821" width="0.0474%" height="15" fill="rgb(228,190,49)" fg:x="1863286634" fg:w="12739596"/><text x="7.1823%" y="831.50"></text></g><g><title>[unknown] (14,372,724 samples, 0.05%)</title><rect x="6.9323%" y="837" width="0.0535%" height="15" fill="rgb(214,173,12)" fg:x="1863286634" fg:w="14372724"/><text x="7.1823%" y="847.50"></text></g><g><title>[unknown] (18,191,941 samples, 0.07%)</title><rect x="6.9323%" y="853" width="0.0677%" height="15" fill="rgb(218,26,35)" fg:x="1863286634" fg:w="18191941"/><text x="7.1823%" y="863.50"></text></g><g><title>_int_malloc (3,819,217 samples, 0.01%)</title><rect x="6.9857%" y="837" width="0.0142%" height="15" fill="rgb(220,200,19)" fg:x="1877659358" fg:w="3819217"/><text x="7.2357%" y="847.50"></text></g><g><title>[unknown] (19,245,199 samples, 0.07%)</title><rect x="6.9323%" y="869" width="0.0716%" height="15" fill="rgb(239,95,49)" fg:x="1863286634" fg:w="19245199"/><text x="7.1823%" y="879.50"></text></g><g><title>[unknown] (19,729,226 samples, 0.07%)</title><rect x="6.9323%" y="965" width="0.0734%" height="15" fill="rgb(235,85,53)" fg:x="1863286634" fg:w="19729226"/><text x="7.1823%" y="975.50"></text></g><g><title>[unknown] (19,729,226 samples, 0.07%)</title><rect x="6.9323%" y="949" width="0.0734%" height="15" fill="rgb(233,133,31)" fg:x="1863286634" fg:w="19729226"/><text x="7.1823%" y="959.50"></text></g><g><title>[unknown] (19,729,226 samples, 0.07%)</title><rect x="6.9323%" y="933" width="0.0734%" height="15" fill="rgb(218,25,20)" fg:x="1863286634" fg:w="19729226"/><text x="7.1823%" y="943.50"></text></g><g><title>[unknown] (19,729,226 samples, 0.07%)</title><rect x="6.9323%" y="917" width="0.0734%" height="15" fill="rgb(252,210,38)" fg:x="1863286634" fg:w="19729226"/><text x="7.1823%" y="927.50"></text></g><g><title>[unknown] (19,729,226 samples, 0.07%)</title><rect x="6.9323%" y="901" width="0.0734%" height="15" fill="rgb(242,134,21)" fg:x="1863286634" fg:w="19729226"/><text x="7.1823%" y="911.50"></text></g><g><title>[unknown] (19,729,226 samples, 0.07%)</title><rect x="6.9323%" y="885" width="0.0734%" height="15" fill="rgb(213,28,48)" fg:x="1863286634" fg:w="19729226"/><text x="7.1823%" y="895.50"></text></g><g><title>[unknown] (20,191,303 samples, 0.08%)</title><rect x="6.9323%" y="981" width="0.0751%" height="15" fill="rgb(250,196,2)" fg:x="1863286634" fg:w="20191303"/><text x="7.1823%" y="991.50"></text></g><g><title>[unknown] (21,647,564 samples, 0.08%)</title><rect x="6.9323%" y="997" width="0.0805%" height="15" fill="rgb(227,5,17)" fg:x="1863286634" fg:w="21647564"/><text x="7.1823%" y="1007.50"></text></g><g><title>[unknown] (22,387,121 samples, 0.08%)</title><rect x="6.9323%" y="1013" width="0.0833%" height="15" fill="rgb(221,226,24)" fg:x="1863286634" fg:w="22387121"/><text x="7.1823%" y="1023.50"></text></g><g><title>[unknown] (23,033,984 samples, 0.09%)</title><rect x="6.9323%" y="1045" width="0.0857%" height="15" fill="rgb(211,5,48)" fg:x="1863286634" fg:w="23033984"/><text x="7.1823%" y="1055.50"></text></g><g><title>[unknown] (23,033,984 samples, 0.09%)</title><rect x="6.9323%" y="1029" width="0.0857%" height="15" fill="rgb(219,150,6)" fg:x="1863286634" fg:w="23033984"/><text x="7.1823%" y="1039.50"></text></g><g><title>[unknown] (23,447,226 samples, 0.09%)</title><rect x="6.9323%" y="1061" width="0.0872%" height="15" fill="rgb(251,46,16)" fg:x="1863286634" fg:w="23447226"/><text x="7.1823%" y="1071.50"></text></g><g><title>[unknown] (23,934,892 samples, 0.09%)</title><rect x="6.9323%" y="1093" width="0.0890%" height="15" fill="rgb(220,204,40)" fg:x="1863286634" fg:w="23934892"/><text x="7.1823%" y="1103.50"></text></g><g><title>[unknown] (23,934,892 samples, 0.09%)</title><rect x="6.9323%" y="1077" width="0.0890%" height="15" fill="rgb(211,85,2)" fg:x="1863286634" fg:w="23934892"/><text x="7.1823%" y="1087.50"></text></g><g><title>[unknown] (24,688,008 samples, 0.09%)</title><rect x="6.9323%" y="1109" width="0.0919%" height="15" fill="rgb(229,17,7)" fg:x="1863286634" fg:w="24688008"/><text x="7.1823%" y="1119.50"></text></g><g><title>[unknown] (26,427,589 samples, 0.10%)</title><rect x="6.9323%" y="1157" width="0.0983%" height="15" fill="rgb(239,72,28)" fg:x="1863286634" fg:w="26427589"/><text x="7.1823%" y="1167.50"></text></g><g><title>[unknown] (26,427,589 samples, 0.10%)</title><rect x="6.9323%" y="1141" width="0.0983%" height="15" fill="rgb(230,47,54)" fg:x="1863286634" fg:w="26427589"/><text x="7.1823%" y="1151.50"></text></g><g><title>[unknown] (26,427,589 samples, 0.10%)</title><rect x="6.9323%" y="1125" width="0.0983%" height="15" fill="rgb(214,50,8)" fg:x="1863286634" fg:w="26427589"/><text x="7.1823%" y="1135.50"></text></g><g><title>[unknown] (27,889,072 samples, 0.10%)</title><rect x="6.9323%" y="1253" width="0.1038%" height="15" fill="rgb(216,198,43)" fg:x="1863286634" fg:w="27889072"/><text x="7.1823%" y="1263.50"></text></g><g><title>[unknown] (27,889,072 samples, 0.10%)</title><rect x="6.9323%" y="1237" width="0.1038%" height="15" fill="rgb(234,20,35)" fg:x="1863286634" fg:w="27889072"/><text x="7.1823%" y="1247.50"></text></g><g><title>[unknown] (27,889,072 samples, 0.10%)</title><rect x="6.9323%" y="1221" width="0.1038%" height="15" fill="rgb(254,45,19)" fg:x="1863286634" fg:w="27889072"/><text x="7.1823%" y="1231.50"></text></g><g><title>[unknown] (27,889,072 samples, 0.10%)</title><rect x="6.9323%" y="1205" width="0.1038%" height="15" fill="rgb(219,14,44)" fg:x="1863286634" fg:w="27889072"/><text x="7.1823%" y="1215.50"></text></g><g><title>[unknown] (27,889,072 samples, 0.10%)</title><rect x="6.9323%" y="1189" width="0.1038%" height="15" fill="rgb(217,220,26)" fg:x="1863286634" fg:w="27889072"/><text x="7.1823%" y="1199.50"></text></g><g><title>[unknown] (27,889,072 samples, 0.10%)</title><rect x="6.9323%" y="1173" width="0.1038%" height="15" fill="rgb(213,158,28)" fg:x="1863286634" fg:w="27889072"/><text x="7.1823%" y="1183.50"></text></g><g><title>[unknown] (28,889,303 samples, 0.11%)</title><rect x="6.9323%" y="1285" width="0.1075%" height="15" fill="rgb(252,51,52)" fg:x="1863286634" fg:w="28889303"/><text x="7.1823%" y="1295.50"></text></g><g><title>[unknown] (28,889,303 samples, 0.11%)</title><rect x="6.9323%" y="1269" width="0.1075%" height="15" fill="rgb(246,89,16)" fg:x="1863286634" fg:w="28889303"/><text x="7.1823%" y="1279.50"></text></g><g><title>[unknown] (29,385,673 samples, 0.11%)</title><rect x="6.9323%" y="1317" width="0.1093%" height="15" fill="rgb(216,158,49)" fg:x="1863286634" fg:w="29385673"/><text x="7.1823%" y="1327.50"></text></g><g><title>[unknown] (29,385,673 samples, 0.11%)</title><rect x="6.9323%" y="1301" width="0.1093%" height="15" fill="rgb(236,107,19)" fg:x="1863286634" fg:w="29385673"/><text x="7.1823%" y="1311.50"></text></g><g><title>[unknown] (30,930,245 samples, 0.12%)</title><rect x="6.9323%" y="1333" width="0.1151%" height="15" fill="rgb(228,185,30)" fg:x="1863286634" fg:w="30930245"/><text x="7.1823%" y="1343.50"></text></g><g><title>[unknown] (32,244,005 samples, 0.12%)</title><rect x="6.9323%" y="1365" width="0.1200%" height="15" fill="rgb(246,134,8)" fg:x="1863286634" fg:w="32244005"/><text x="7.1823%" y="1375.50"></text></g><g><title>[unknown] (32,244,005 samples, 0.12%)</title><rect x="6.9323%" y="1349" width="0.1200%" height="15" fill="rgb(214,143,50)" fg:x="1863286634" fg:w="32244005"/><text x="7.1823%" y="1359.50"></text></g><g><title>[unknown] (33,273,367 samples, 0.12%)</title><rect x="6.9323%" y="1381" width="0.1238%" height="15" fill="rgb(228,75,8)" fg:x="1863286634" fg:w="33273367"/><text x="7.1823%" y="1391.50"></text></g><g><title>[unknown] (34,889,396 samples, 0.13%)</title><rect x="6.9323%" y="1397" width="0.1298%" height="15" fill="rgb(207,175,4)" fg:x="1863286634" fg:w="34889396"/><text x="7.1823%" y="1407.50"></text></g><g><title>[unknown] (42,422,924 samples, 0.16%)</title><rect x="6.9323%" y="1413" width="0.1578%" height="15" fill="rgb(205,108,24)" fg:x="1863286634" fg:w="42422924"/><text x="7.1823%" y="1423.50"></text></g><g><title>_int_malloc (7,533,528 samples, 0.03%)</title><rect x="7.0621%" y="1397" width="0.0280%" height="15" fill="rgb(244,120,49)" fg:x="1898176030" fg:w="7533528"/><text x="7.3121%" y="1407.50"></text></g><g><title>[unknown] (50,616,443 samples, 0.19%)</title><rect x="6.9323%" y="1429" width="0.1883%" height="15" fill="rgb(223,47,38)" fg:x="1863286634" fg:w="50616443"/><text x="7.1823%" y="1439.50"></text></g><g><title>_int_malloc (8,193,519 samples, 0.03%)</title><rect x="7.0901%" y="1413" width="0.0305%" height="15" fill="rgb(229,179,11)" fg:x="1905709558" fg:w="8193519"/><text x="7.3401%" y="1423.50"></text></g><g><title>[unknown] (54,203,200 samples, 0.20%)</title><rect x="6.9323%" y="1445" width="0.2017%" height="15" fill="rgb(231,122,1)" fg:x="1863286634" fg:w="54203200"/><text x="7.1823%" y="1455.50"></text></g><g><title>_int_malloc (3,586,757 samples, 0.01%)</title><rect x="7.1206%" y="1429" width="0.0133%" height="15" fill="rgb(245,119,9)" fg:x="1913903077" fg:w="3586757"/><text x="7.3706%" y="1439.50"></text></g><g><title>[unknown] (59,701,210 samples, 0.22%)</title><rect x="6.9323%" y="1461" width="0.2221%" height="15" fill="rgb(241,163,25)" fg:x="1863286634" fg:w="59701210"/><text x="7.1823%" y="1471.50"></text></g><g><title>_int_malloc (5,498,010 samples, 0.02%)</title><rect x="7.1339%" y="1445" width="0.0205%" height="15" fill="rgb(217,214,3)" fg:x="1917489834" fg:w="5498010"/><text x="7.3839%" y="1455.50"></text></g><g><title>[unknown] (68,521,250 samples, 0.25%)</title><rect x="6.9323%" y="1477" width="0.2549%" height="15" fill="rgb(240,86,28)" fg:x="1863286634" fg:w="68521250"/><text x="7.1823%" y="1487.50"></text></g><g><title>_int_malloc (8,820,040 samples, 0.03%)</title><rect x="7.1544%" y="1461" width="0.0328%" height="15" fill="rgb(215,47,9)" fg:x="1922987844" fg:w="8820040"/><text x="7.4044%" y="1471.50"></text></g><g><title>[unknown] (74,621,052 samples, 0.28%)</title><rect x="6.9323%" y="1493" width="0.2776%" height="15" fill="rgb(252,25,45)" fg:x="1863286634" fg:w="74621052"/><text x="7.1823%" y="1503.50"></text></g><g><title>_int_malloc (6,099,802 samples, 0.02%)</title><rect x="7.1872%" y="1477" width="0.0227%" height="15" fill="rgb(251,164,9)" fg:x="1931807884" fg:w="6099802"/><text x="7.4372%" y="1487.50"></text></g><g><title>[unknown] (81,283,059 samples, 0.30%)</title><rect x="6.9323%" y="1509" width="0.3024%" height="15" fill="rgb(233,194,0)" fg:x="1863286634" fg:w="81283059"/><text x="7.1823%" y="1519.50"></text></g><g><title>_int_malloc (6,662,007 samples, 0.02%)</title><rect x="7.2099%" y="1493" width="0.0248%" height="15" fill="rgb(249,111,24)" fg:x="1937907686" fg:w="6662007"/><text x="7.4599%" y="1503.50"></text></g><g><title>[unknown] (82,848,732 samples, 0.31%)</title><rect x="6.9323%" y="1525" width="0.3082%" height="15" fill="rgb(250,223,3)" fg:x="1863286634" fg:w="82848732"/><text x="7.1823%" y="1535.50"></text></g><g><title>[unknown] (85,283,379 samples, 0.32%)</title><rect x="6.9323%" y="1541" width="0.3173%" height="15" fill="rgb(236,178,37)" fg:x="1863286634" fg:w="85283379"/><text x="7.1823%" y="1551.50"></text></g><g><title>[unknown] (87,230,099 samples, 0.32%)</title><rect x="6.9323%" y="1557" width="0.3245%" height="15" fill="rgb(241,158,50)" fg:x="1863286634" fg:w="87230099"/><text x="7.1823%" y="1567.50"></text></g><g><title>[unknown] (90,412,176 samples, 0.34%)</title><rect x="6.9323%" y="1605" width="0.3364%" height="15" fill="rgb(213,121,41)" fg:x="1863286634" fg:w="90412176"/><text x="7.1823%" y="1615.50"></text></g><g><title>[unknown] (90,412,176 samples, 0.34%)</title><rect x="6.9323%" y="1589" width="0.3364%" height="15" fill="rgb(240,92,3)" fg:x="1863286634" fg:w="90412176"/><text x="7.1823%" y="1599.50"></text></g><g><title>[unknown] (90,412,176 samples, 0.34%)</title><rect x="6.9323%" y="1573" width="0.3364%" height="15" fill="rgb(205,123,3)" fg:x="1863286634" fg:w="90412176"/><text x="7.1823%" y="1583.50"></text></g><g><title>_int_malloc (3,182,077 samples, 0.01%)</title><rect x="7.2568%" y="1557" width="0.0118%" height="15" fill="rgb(205,97,47)" fg:x="1950516733" fg:w="3182077"/><text x="7.5068%" y="1567.50"></text></g><g><title>[unknown] (92,699,828 samples, 0.34%)</title><rect x="6.9323%" y="1621" width="0.3449%" height="15" fill="rgb(247,152,14)" fg:x="1863286634" fg:w="92699828"/><text x="7.1823%" y="1631.50"></text></g><g><title>[unknown] (93,756,326 samples, 0.35%)</title><rect x="6.9323%" y="1637" width="0.3488%" height="15" fill="rgb(248,195,53)" fg:x="1863286634" fg:w="93756326"/><text x="7.1823%" y="1647.50"></text></g><g><title>[unknown] (95,485,968 samples, 0.36%)</title><rect x="6.9323%" y="1669" width="0.3553%" height="15" fill="rgb(226,201,16)" fg:x="1863286634" fg:w="95485968"/><text x="7.1823%" y="1679.50"></text></g><g><title>[unknown] (95,485,968 samples, 0.36%)</title><rect x="6.9323%" y="1653" width="0.3553%" height="15" fill="rgb(205,98,0)" fg:x="1863286634" fg:w="95485968"/><text x="7.1823%" y="1663.50"></text></g><g><title>[unknown] (96,013,175 samples, 0.36%)</title><rect x="6.9323%" y="1685" width="0.3572%" height="15" fill="rgb(214,191,48)" fg:x="1863286634" fg:w="96013175"/><text x="7.1823%" y="1695.50"></text></g><g><title>[unknown] (96,641,528 samples, 0.36%)</title><rect x="6.9323%" y="1701" width="0.3595%" height="15" fill="rgb(237,112,39)" fg:x="1863286634" fg:w="96641528"/><text x="7.1823%" y="1711.50"></text></g><g><title>[unknown] (97,670,480 samples, 0.36%)</title><rect x="6.9323%" y="1717" width="0.3634%" height="15" fill="rgb(247,203,27)" fg:x="1863286634" fg:w="97670480"/><text x="7.1823%" y="1727.50"></text></g><g><title>[unknown] (98,216,546 samples, 0.37%)</title><rect x="6.9323%" y="1749" width="0.3654%" height="15" fill="rgb(235,124,28)" fg:x="1863286634" fg:w="98216546"/><text x="7.1823%" y="1759.50"></text></g><g><title>[unknown] (98,216,546 samples, 0.37%)</title><rect x="6.9323%" y="1733" width="0.3654%" height="15" fill="rgb(208,207,46)" fg:x="1863286634" fg:w="98216546"/><text x="7.1823%" y="1743.50"></text></g><g><title>[unknown] (101,275,144 samples, 0.38%)</title><rect x="6.9323%" y="1765" width="0.3768%" height="15" fill="rgb(234,176,4)" fg:x="1863286634" fg:w="101275144"/><text x="7.1823%" y="1775.50"></text></g><g><title>_int_malloc (3,058,598 samples, 0.01%)</title><rect x="7.2977%" y="1749" width="0.0114%" height="15" fill="rgb(230,133,28)" fg:x="1961503180" fg:w="3058598"/><text x="7.5477%" y="1759.50"></text></g><g><title>[unknown] (101,773,605 samples, 0.38%)</title><rect x="6.9323%" y="1877" width="0.3786%" height="15" fill="rgb(211,137,40)" fg:x="1863286634" fg:w="101773605"/><text x="7.1823%" y="1887.50"></text></g><g><title>[unknown] (101,773,605 samples, 0.38%)</title><rect x="6.9323%" y="1861" width="0.3786%" height="15" fill="rgb(254,35,13)" fg:x="1863286634" fg:w="101773605"/><text x="7.1823%" y="1871.50"></text></g><g><title>[unknown] (101,773,605 samples, 0.38%)</title><rect x="6.9323%" y="1845" width="0.3786%" height="15" fill="rgb(225,49,51)" fg:x="1863286634" fg:w="101773605"/><text x="7.1823%" y="1855.50"></text></g><g><title>[unknown] (101,773,605 samples, 0.38%)</title><rect x="6.9323%" y="1829" width="0.3786%" height="15" fill="rgb(251,10,15)" fg:x="1863286634" fg:w="101773605"/><text x="7.1823%" y="1839.50"></text></g><g><title>[unknown] (101,773,605 samples, 0.38%)</title><rect x="6.9323%" y="1813" width="0.3786%" height="15" fill="rgb(228,207,15)" fg:x="1863286634" fg:w="101773605"/><text x="7.1823%" y="1823.50"></text></g><g><title>[unknown] (101,773,605 samples, 0.38%)</title><rect x="6.9323%" y="1797" width="0.3786%" height="15" fill="rgb(241,99,19)" fg:x="1863286634" fg:w="101773605"/><text x="7.1823%" y="1807.50"></text></g><g><title>[unknown] (101,773,605 samples, 0.38%)</title><rect x="6.9323%" y="1781" width="0.3786%" height="15" fill="rgb(207,104,49)" fg:x="1863286634" fg:w="101773605"/><text x="7.1823%" y="1791.50"></text></g><g><title>[unknown] (102,386,685 samples, 0.38%)</title><rect x="6.9323%" y="1989" width="0.3809%" height="15" fill="rgb(234,99,18)" fg:x="1863286634" fg:w="102386685"/><text x="7.1823%" y="1999.50"></text></g><g><title>[unknown] (102,386,685 samples, 0.38%)</title><rect x="6.9323%" y="1973" width="0.3809%" height="15" fill="rgb(213,191,49)" fg:x="1863286634" fg:w="102386685"/><text x="7.1823%" y="1983.50"></text></g><g><title>[unknown] (102,386,685 samples, 0.38%)</title><rect x="6.9323%" y="1957" width="0.3809%" height="15" fill="rgb(210,226,19)" fg:x="1863286634" fg:w="102386685"/><text x="7.1823%" y="1967.50"></text></g><g><title>[unknown] (102,386,685 samples, 0.38%)</title><rect x="6.9323%" y="1941" width="0.3809%" height="15" fill="rgb(229,97,18)" fg:x="1863286634" fg:w="102386685"/><text x="7.1823%" y="1951.50"></text></g><g><title>[unknown] (102,386,685 samples, 0.38%)</title><rect x="6.9323%" y="1925" width="0.3809%" height="15" fill="rgb(211,167,15)" fg:x="1863286634" fg:w="102386685"/><text x="7.1823%" y="1935.50"></text></g><g><title>[unknown] (102,386,685 samples, 0.38%)</title><rect x="6.9323%" y="1909" width="0.3809%" height="15" fill="rgb(210,169,34)" fg:x="1863286634" fg:w="102386685"/><text x="7.1823%" y="1919.50"></text></g><g><title>[unknown] (102,386,685 samples, 0.38%)</title><rect x="6.9323%" y="1893" width="0.3809%" height="15" fill="rgb(241,121,31)" fg:x="1863286634" fg:w="102386685"/><text x="7.1823%" y="1903.50"></text></g><g><title>[unknown] (103,168,088 samples, 0.38%)</title><rect x="6.9323%" y="2005" width="0.3838%" height="15" fill="rgb(232,40,11)" fg:x="1863286634" fg:w="103168088"/><text x="7.1823%" y="2015.50"></text></g><g><title>[unknown] (105,523,607 samples, 0.39%)</title><rect x="6.9323%" y="2021" width="0.3926%" height="15" fill="rgb(205,86,26)" fg:x="1863286634" fg:w="105523607"/><text x="7.1823%" y="2031.50"></text></g><g><title>_int_malloc (3,944,055 samples, 0.01%)</title><rect x="7.3323%" y="2021" width="0.0147%" height="15" fill="rgb(231,126,28)" fg:x="1970805836" fg:w="3944055"/><text x="7.5823%" y="2031.50"></text></g><g><title>[unknown] (117,743,243 samples, 0.44%)</title><rect x="6.9130%" y="2037" width="0.4381%" height="15" fill="rgb(219,221,18)" fg:x="1858121811" fg:w="117743243"/><text x="7.1630%" y="2047.50"></text></g><g><title>entry_SYSCALL_64 (2,696,368 samples, 0.01%)</title><rect x="7.3525%" y="2021" width="0.0100%" height="15" fill="rgb(211,40,0)" fg:x="1976244886" fg:w="2696368"/><text x="7.6025%" y="2031.50"></text></g><g><title>do_syscall_64 (2,696,368 samples, 0.01%)</title><rect x="7.3525%" y="2005" width="0.0100%" height="15" fill="rgb(239,85,43)" fg:x="1976244886" fg:w="2696368"/><text x="7.6025%" y="2015.50"></text></g><g><title>__GI___futex_abstimed_wait_cancelable64 (2,785,828 samples, 0.01%)</title><rect x="7.3524%" y="2037" width="0.0104%" height="15" fill="rgb(231,55,21)" fg:x="1976210306" fg:w="2785828"/><text x="7.6024%" y="2047.50"></text></g><g><title>proc_pid_readdir (3,862,043 samples, 0.01%)</title><rect x="7.3628%" y="1925" width="0.0144%" height="15" fill="rgb(225,184,43)" fg:x="1978996134" fg:w="3862043"/><text x="7.6128%" y="1935.50"></text></g><g><title>__GI___getdents64 (3,990,323 samples, 0.01%)</title><rect x="7.3628%" y="2037" width="0.0148%" height="15" fill="rgb(251,158,41)" fg:x="1978996134" fg:w="3990323"/><text x="7.6128%" y="2047.50"></text></g><g><title>entry_SYSCALL_64 (3,990,323 samples, 0.01%)</title><rect x="7.3628%" y="2021" width="0.0148%" height="15" fill="rgb(234,159,37)" fg:x="1978996134" fg:w="3990323"/><text x="7.6128%" y="2031.50"></text></g><g><title>do_syscall_64 (3,990,323 samples, 0.01%)</title><rect x="7.3628%" y="2005" width="0.0148%" height="15" fill="rgb(216,204,22)" fg:x="1978996134" fg:w="3990323"/><text x="7.6128%" y="2015.50"></text></g><g><title>__x64_sys_getdents64 (3,990,323 samples, 0.01%)</title><rect x="7.3628%" y="1989" width="0.0148%" height="15" fill="rgb(214,17,3)" fg:x="1978996134" fg:w="3990323"/><text x="7.6128%" y="1999.50"></text></g><g><title>__se_sys_getdents64 (3,990,323 samples, 0.01%)</title><rect x="7.3628%" y="1973" width="0.0148%" height="15" fill="rgb(212,111,17)" fg:x="1978996134" fg:w="3990323"/><text x="7.6128%" y="1983.50"></text></g><g><title>iterate_dir (3,990,323 samples, 0.01%)</title><rect x="7.3628%" y="1957" width="0.0148%" height="15" fill="rgb(221,157,24)" fg:x="1978996134" fg:w="3990323"/><text x="7.6128%" y="1967.50"></text></g><g><title>proc_root_readdir (3,990,323 samples, 0.01%)</title><rect x="7.3628%" y="1941" width="0.0148%" height="15" fill="rgb(252,16,13)" fg:x="1978996134" fg:w="3990323"/><text x="7.6128%" y="1951.50"></text></g><g><title>path_put (5,144,401 samples, 0.02%)</title><rect x="7.4221%" y="1957" width="0.0191%" height="15" fill="rgb(221,62,2)" fg:x="1994943090" fg:w="5144401"/><text x="7.6721%" y="1967.50"></text></g><g><title>complete_walk (3,824,766 samples, 0.01%)</title><rect x="7.4610%" y="1909" width="0.0142%" height="15" fill="rgb(247,87,22)" fg:x="2005399141" fg:w="3824766"/><text x="7.7110%" y="1919.50"></text></g><g><title>inode_permission (6,002,441 samples, 0.02%)</title><rect x="7.5150%" y="1893" width="0.0223%" height="15" fill="rgb(215,73,9)" fg:x="2019907427" fg:w="6002441"/><text x="7.7650%" y="1903.50"></text></g><g><title>generic_permission (5,210,099 samples, 0.02%)</title><rect x="7.5179%" y="1877" width="0.0194%" height="15" fill="rgb(207,175,33)" fg:x="2020699769" fg:w="5210099"/><text x="7.7679%" y="1887.50"></text></g><g><title>link_path_walk (18,896,796 samples, 0.07%)</title><rect x="7.4810%" y="1909" width="0.0703%" height="15" fill="rgb(243,129,54)" fg:x="2010784593" fg:w="18896796"/><text x="7.7310%" y="1919.50"></text></g><g><title>nd_jump_root (4,085,915 samples, 0.02%)</title><rect x="7.5594%" y="1893" width="0.0152%" height="15" fill="rgb(227,119,45)" fg:x="2031856863" fg:w="4085915"/><text x="7.8094%" y="1903.50"></text></g><g><title>path_init (6,135,826 samples, 0.02%)</title><rect x="7.5543%" y="1909" width="0.0228%" height="15" fill="rgb(205,109,36)" fg:x="2030472021" fg:w="6135826"/><text x="7.8043%" y="1919.50"></text></g><g><title>lookup_fast (3,491,532 samples, 0.01%)</title><rect x="7.5798%" y="1893" width="0.0130%" height="15" fill="rgb(205,6,39)" fg:x="2037347486" fg:w="3491532"/><text x="7.8298%" y="1903.50"></text></g><g><title>__d_lookup_rcu (3,491,532 samples, 0.01%)</title><rect x="7.5798%" y="1877" width="0.0130%" height="15" fill="rgb(221,32,16)" fg:x="2037347486" fg:w="3491532"/><text x="7.8298%" y="1887.50"></text></g><g><title>path_lookupat (39,012,020 samples, 0.15%)</title><rect x="7.4556%" y="1925" width="0.1451%" height="15" fill="rgb(228,144,50)" fg:x="2003957955" fg:w="39012020"/><text x="7.7056%" y="1935.50"></text></g><g><title>walk_component (5,622,489 samples, 0.02%)</title><rect x="7.5798%" y="1909" width="0.0209%" height="15" fill="rgb(229,201,53)" fg:x="2037347486" fg:w="5622489"/><text x="7.8298%" y="1919.50"></text></g><g><title>filename_lookup (42,231,227 samples, 0.16%)</title><rect x="7.4492%" y="1941" width="0.1571%" height="15" fill="rgb(249,153,27)" fg:x="2002243765" fg:w="42231227"/><text x="7.6992%" y="1951.50"></text></g><g><title>memset_orig (5,417,823 samples, 0.02%)</title><rect x="7.6324%" y="1925" width="0.0202%" height="15" fill="rgb(227,106,25)" fg:x="2051473057" fg:w="5417823"/><text x="7.8824%" y="1935.50"></text></g><g><title>__virt_addr_valid (3,229,222 samples, 0.01%)</title><rect x="7.6625%" y="1877" width="0.0120%" height="15" fill="rgb(230,65,29)" fg:x="2059550378" fg:w="3229222"/><text x="7.9125%" y="1887.50"></text></g><g><title>check_heap_object (5,230,798 samples, 0.02%)</title><rect x="7.6577%" y="1893" width="0.0195%" height="15" fill="rgb(221,57,46)" fg:x="2058263375" fg:w="5230798"/><text x="7.9077%" y="1903.50"></text></g><g><title>__check_object_size (5,992,155 samples, 0.02%)</title><rect x="7.6577%" y="1909" width="0.0223%" height="15" fill="rgb(229,161,17)" fg:x="2058263375" fg:w="5992155"/><text x="7.9077%" y="1919.50"></text></g><g><title>getname_flags (20,541,733 samples, 0.08%)</title><rect x="7.6064%" y="1941" width="0.0764%" height="15" fill="rgb(222,213,11)" fg:x="2044474992" fg:w="20541733"/><text x="7.8564%" y="1951.50"></text></g><g><title>strncpy_from_user (8,125,845 samples, 0.03%)</title><rect x="7.6526%" y="1925" width="0.0302%" height="15" fill="rgb(235,35,13)" fg:x="2056890880" fg:w="8125845"/><text x="7.9026%" y="1935.50"></text></g><g><title>do_readlinkat (76,335,091 samples, 0.28%)</title><rect x="7.4098%" y="1973" width="0.2840%" height="15" fill="rgb(233,158,34)" fg:x="1991639891" fg:w="76335091"/><text x="7.6598%" y="1983.50"></text></g><g><title>user_path_at_empty (67,887,491 samples, 0.25%)</title><rect x="7.4412%" y="1957" width="0.2526%" height="15" fill="rgb(215,151,48)" fg:x="2000087491" fg:w="67887491"/><text x="7.6912%" y="1967.50"></text></g><g><title>__x64_sys_readlink (78,831,538 samples, 0.29%)</title><rect x="7.4098%" y="1989" width="0.2933%" height="15" fill="rgb(229,84,14)" fg:x="1991639891" fg:w="78831538"/><text x="7.6598%" y="1999.50"></text></g><g><title>entry_SYSCALL_64 (87,515,450 samples, 0.33%)</title><rect x="7.3914%" y="2021" width="0.3256%" height="15" fill="rgb(229,68,14)" fg:x="1986698375" fg:w="87515450"/><text x="7.6414%" y="2031.50"></text></g><g><title>do_syscall_64 (83,262,164 samples, 0.31%)</title><rect x="7.4072%" y="2005" width="0.3098%" height="15" fill="rgb(243,106,26)" fg:x="1990951661" fg:w="83262164"/><text x="7.6572%" y="2015.50"></text></g><g><title>syscall_exit_to_user_mode (2,979,436 samples, 0.01%)</title><rect x="7.7059%" y="1989" width="0.0111%" height="15" fill="rgb(206,45,38)" fg:x="2071234389" fg:w="2979436"/><text x="7.9559%" y="1999.50"></text></g><g><title>exit_to_user_mode_prepare (2,979,436 samples, 0.01%)</title><rect x="7.7059%" y="1973" width="0.0111%" height="15" fill="rgb(226,6,15)" fg:x="2071234389" fg:w="2979436"/><text x="7.9559%" y="1983.50"></text></g><g><title>__GI___readlink (101,211,522 samples, 0.38%)</title><rect x="7.3814%" y="2037" width="0.3766%" height="15" fill="rgb(232,22,54)" fg:x="1984009264" fg:w="101211522"/><text x="7.6314%" y="2047.50"></text></g><g><title>entry_ibpb (11,006,961 samples, 0.04%)</title><rect x="7.7170%" y="2021" width="0.0410%" height="15" fill="rgb(229,222,32)" fg:x="2074213825" fg:w="11006961"/><text x="7.9670%" y="2031.50"></text></g><g><title>asm_exc_page_fault (3,147,488 samples, 0.01%)</title><rect x="7.7607%" y="2021" width="0.0117%" height="15" fill="rgb(228,62,29)" fg:x="2085954459" fg:w="3147488"/><text x="8.0107%" y="2031.50"></text></g><g><title>exc_page_fault (3,147,488 samples, 0.01%)</title><rect x="7.7607%" y="2005" width="0.0117%" height="15" fill="rgb(251,103,34)" fg:x="2085954459" fg:w="3147488"/><text x="8.0107%" y="2015.50"></text></g><g><title>do_user_addr_fault (3,147,488 samples, 0.01%)</title><rect x="7.7607%" y="1989" width="0.0117%" height="15" fill="rgb(233,12,30)" fg:x="2085954459" fg:w="3147488"/><text x="8.0107%" y="1999.50"></text></g><g><title>handle_mm_fault (3,147,488 samples, 0.01%)</title><rect x="7.7607%" y="1973" width="0.0117%" height="15" fill="rgb(238,52,0)" fg:x="2085954459" fg:w="3147488"/><text x="8.0107%" y="1983.50"></text></g><g><title>__handle_mm_fault (3,147,488 samples, 0.01%)</title><rect x="7.7607%" y="1957" width="0.0117%" height="15" fill="rgb(223,98,5)" fg:x="2085954459" fg:w="3147488"/><text x="8.0107%" y="1967.50"></text></g><g><title>handle_pte_fault (3,147,488 samples, 0.01%)</title><rect x="7.7607%" y="1941" width="0.0117%" height="15" fill="rgb(228,75,37)" fg:x="2085954459" fg:w="3147488"/><text x="8.0107%" y="1951.50"></text></g><g><title>do_wp_page (3,147,488 samples, 0.01%)</title><rect x="7.7607%" y="1925" width="0.0117%" height="15" fill="rgb(205,115,49)" fg:x="2085954459" fg:w="3147488"/><text x="8.0107%" y="1935.50"></text></g><g><title>wp_page_copy (3,147,488 samples, 0.01%)</title><rect x="7.7607%" y="1909" width="0.0117%" height="15" fill="rgb(250,154,43)" fg:x="2085954459" fg:w="3147488"/><text x="8.0107%" y="1919.50"></text></g><g><title>__malloc_fork_unlock_parent (3,888,444 samples, 0.01%)</title><rect x="7.7607%" y="2037" width="0.0145%" height="15" fill="rgb(226,43,29)" fg:x="2085954459" fg:w="3888444"/><text x="8.0107%" y="2047.50"></text></g><g><title>handle_mm_fault (2,747,110 samples, 0.01%)</title><rect x="8.2491%" y="1973" width="0.0102%" height="15" fill="rgb(249,228,39)" fg:x="2217242735" fg:w="2747110"/><text x="8.4991%" y="1983.50"></text></g><g><title>__handle_mm_fault (2,747,110 samples, 0.01%)</title><rect x="8.2491%" y="1957" width="0.0102%" height="15" fill="rgb(216,79,43)" fg:x="2217242735" fg:w="2747110"/><text x="8.4991%" y="1967.50"></text></g><g><title>asm_exc_page_fault (5,052,864 samples, 0.02%)</title><rect x="8.2467%" y="2021" width="0.0188%" height="15" fill="rgb(228,95,12)" fg:x="2216583669" fg:w="5052864"/><text x="8.4967%" y="2031.50"></text></g><g><title>exc_page_fault (4,393,798 samples, 0.02%)</title><rect x="8.2491%" y="2005" width="0.0163%" height="15" fill="rgb(249,221,15)" fg:x="2217242735" fg:w="4393798"/><text x="8.4991%" y="2015.50"></text></g><g><title>do_user_addr_fault (4,393,798 samples, 0.02%)</title><rect x="8.2491%" y="1989" width="0.0163%" height="15" fill="rgb(233,34,13)" fg:x="2217242735" fg:w="4393798"/><text x="8.4991%" y="1999.50"></text></g><g><title>_int_free (134,067,782 samples, 0.50%)</title><rect x="7.7784%" y="2037" width="0.4988%" height="15" fill="rgb(214,103,39)" fg:x="2090723830" fg:w="134067782"/><text x="8.0284%" y="2047.50"></text></g><g><title>realpath_stk (3,618,561 samples, 0.01%)</title><rect x="8.2886%" y="2037" width="0.0135%" height="15" fill="rgb(251,126,39)" fg:x="2227843418" fg:w="3618561"/><text x="8.5386%" y="2047.50"></text></g><g><title>unlink_chunk.constprop.0 (22,785,465 samples, 0.08%)</title><rect x="8.3020%" y="2037" width="0.0848%" height="15" fill="rgb(214,216,36)" fg:x="2231461979" fg:w="22785465"/><text x="8.5520%" y="2047.50"></text></g><g><title>[unknown] (428,845,724 samples, 1.60%)</title><rect x="6.7933%" y="2053" width="1.5955%" height="15" fill="rgb(220,221,8)" fg:x="1825947827" fg:w="428845724"/><text x="7.0433%" y="2063.50"></text></g><g><title>anon_vma_fork (3,126,826 samples, 0.01%)</title><rect x="8.4203%" y="1925" width="0.0116%" height="15" fill="rgb(240,216,3)" fg:x="2263241663" fg:w="3126826"/><text x="8.6703%" y="1935.50"></text></g><g><title>clear_page_rep (5,378,365 samples, 0.02%)</title><rect x="8.5137%" y="1797" width="0.0200%" height="15" fill="rgb(232,218,17)" fg:x="2288360562" fg:w="5378365"/><text x="8.7637%" y="1807.50"></text></g><g><title>__pte_alloc (10,109,926 samples, 0.04%)</title><rect x="8.5049%" y="1877" width="0.0376%" height="15" fill="rgb(229,163,45)" fg:x="2285977617" fg:w="10109926"/><text x="8.7549%" y="1887.50"></text></g><g><title>pte_alloc_one (9,312,376 samples, 0.03%)</title><rect x="8.5078%" y="1861" width="0.0346%" height="15" fill="rgb(231,110,42)" fg:x="2286775167" fg:w="9312376"/><text x="8.7578%" y="1871.50"></text></g><g><title>alloc_pages (9,312,376 samples, 0.03%)</title><rect x="8.5078%" y="1845" width="0.0346%" height="15" fill="rgb(208,170,48)" fg:x="2286775167" fg:w="9312376"/><text x="8.7578%" y="1855.50"></text></g><g><title>__alloc_pages (9,312,376 samples, 0.03%)</title><rect x="8.5078%" y="1829" width="0.0346%" height="15" fill="rgb(239,116,25)" fg:x="2286775167" fg:w="9312376"/><text x="8.7578%" y="1839.50"></text></g><g><title>get_page_from_freelist (8,514,719 samples, 0.03%)</title><rect x="8.5108%" y="1813" width="0.0317%" height="15" fill="rgb(219,200,50)" fg:x="2287572824" fg:w="8514719"/><text x="8.7608%" y="1823.50"></text></g><g><title>_raw_spin_lock (3,055,434 samples, 0.01%)</title><rect x="8.5482%" y="1877" width="0.0114%" height="15" fill="rgb(245,200,0)" fg:x="2297634336" fg:w="3055434"/><text x="8.7982%" y="1887.50"></text></g><g><title>native_set_pte (3,850,929 samples, 0.01%)</title><rect x="9.6591%" y="1861" width="0.0143%" height="15" fill="rgb(245,119,33)" fg:x="2596206889" fg:w="3850929"/><text x="9.9091%" y="1871.50"></text></g><g><title>copy_present_pte (311,664,705 samples, 1.16%)</title><rect x="8.5596%" y="1877" width="1.1595%" height="15" fill="rgb(231,125,12)" fg:x="2300689770" fg:w="311664705"/><text x="8.8096%" y="1887.50"></text></g><g><title>vm_normal_page (12,296,657 samples, 0.05%)</title><rect x="9.6734%" y="1861" width="0.0457%" height="15" fill="rgb(216,96,41)" fg:x="2600057818" fg:w="12296657"/><text x="9.9234%" y="1871.50"></text></g><g><title>native_set_pte (4,649,265 samples, 0.02%)</title><rect x="9.7191%" y="1877" width="0.0173%" height="15" fill="rgb(248,43,45)" fg:x="2612354475" fg:w="4649265"/><text x="9.9691%" y="1887.50"></text></g><g><title>copy_page_range (353,735,699 samples, 1.32%)</title><rect x="8.4319%" y="1925" width="1.3161%" height="15" fill="rgb(217,222,7)" fg:x="2266368489" fg:w="353735699"/><text x="8.6819%" y="1935.50"></text></g><g><title>copy_p4d_range (353,735,699 samples, 1.32%)</title><rect x="8.4319%" y="1909" width="1.3161%" height="15" fill="rgb(233,28,6)" fg:x="2266368489" fg:w="353735699"/><text x="8.6819%" y="1919.50"></text></g><g><title>copy_pte_range (353,735,699 samples, 1.32%)</title><rect x="8.4319%" y="1893" width="1.3161%" height="15" fill="rgb(231,218,15)" fg:x="2266368489" fg:w="353735699"/><text x="8.6819%" y="1903.50"></text></g><g><title>down_write (3,670,317 samples, 0.01%)</title><rect x="9.7480%" y="1925" width="0.0137%" height="15" fill="rgb(226,171,48)" fg:x="2620104188" fg:w="3670317"/><text x="9.9980%" y="1935.50"></text></g><g><title>entry_SYSCALL_64 (377,138,460 samples, 1.40%)</title><rect x="8.3891%" y="2037" width="1.4031%" height="15" fill="rgb(235,201,9)" fg:x="2254859252" fg:w="377138460"/><text x="8.6391%" y="2047.50"></text></g><g><title>do_syscall_64 (377,138,460 samples, 1.40%)</title><rect x="8.3891%" y="2021" width="1.4031%" height="15" fill="rgb(217,80,15)" fg:x="2254859252" fg:w="377138460"/><text x="8.6391%" y="2031.50"></text></g><g><title>__x64_sys_clone (377,138,460 samples, 1.40%)</title><rect x="8.3891%" y="2005" width="1.4031%" height="15" fill="rgb(219,152,8)" fg:x="2254859252" fg:w="377138460"/><text x="8.6391%" y="2015.50"></text></g><g><title>kernel_clone (377,138,460 samples, 1.40%)</title><rect x="8.3891%" y="1989" width="1.4031%" height="15" fill="rgb(243,107,38)" fg:x="2254859252" fg:w="377138460"/><text x="8.6391%" y="1999.50"></text></g><g><title>copy_process (377,138,460 samples, 1.40%)</title><rect x="8.3891%" y="1973" width="1.4031%" height="15" fill="rgb(231,17,5)" fg:x="2254859252" fg:w="377138460"/><text x="8.6391%" y="1983.50"></text></g><g><title>copy_mm (375,879,451 samples, 1.40%)</title><rect x="8.3938%" y="1957" width="1.3984%" height="15" fill="rgb(209,25,54)" fg:x="2256118261" fg:w="375879451"/><text x="8.6438%" y="1967.50"></text></g><g><title>dup_mmap (375,879,451 samples, 1.40%)</title><rect x="8.3938%" y="1941" width="1.3984%" height="15" fill="rgb(219,0,2)" fg:x="2256118261" fg:w="375879451"/><text x="8.6438%" y="1951.50"></text></g><g><title>vma_iter_bulk_store (2,859,349 samples, 0.01%)</title><rect x="9.7816%" y="1925" width="0.0106%" height="15" fill="rgb(246,9,5)" fg:x="2629138363" fg:w="2859349"/><text x="10.0316%" y="1935.50"></text></g><g><title>mas_store (2,859,349 samples, 0.01%)</title><rect x="9.7816%" y="1909" width="0.0106%" height="15" fill="rgb(226,159,4)" fg:x="2629138363" fg:w="2859349"/><text x="10.0316%" y="1919.50"></text></g><g><title>mas_wr_store_entry (2,859,349 samples, 0.01%)</title><rect x="9.7816%" y="1893" width="0.0106%" height="15" fill="rgb(219,175,34)" fg:x="2629138363" fg:w="2859349"/><text x="10.0316%" y="1903.50"></text></g><g><title>_Fork (377,243,239 samples, 1.40%)</title><rect x="8.3888%" y="2053" width="1.4035%" height="15" fill="rgb(236,10,46)" fg:x="2254793551" fg:w="377243239"/><text x="8.6388%" y="2063.50"></text></g><g><title>free_pgtables (5,592,577 samples, 0.02%)</title><rect x="9.8040%" y="1845" width="0.0208%" height="15" fill="rgb(240,211,16)" fg:x="2635178262" fg:w="5592577"/><text x="10.0540%" y="1855.50"></text></g><g><title>tlb_finish_mmu (3,189,786 samples, 0.01%)</title><rect x="9.8249%" y="1845" width="0.0119%" height="15" fill="rgb(205,3,43)" fg:x="2640770839" fg:w="3189786"/><text x="10.0749%" y="1855.50"></text></g><g><title>tlb_flush_mmu (3,189,786 samples, 0.01%)</title><rect x="9.8249%" y="1829" width="0.0119%" height="15" fill="rgb(245,7,22)" fg:x="2640770839" fg:w="3189786"/><text x="10.0749%" y="1839.50"></text></g><g><title>free_pages_and_swap_cache (3,189,786 samples, 0.01%)</title><rect x="9.8249%" y="1813" width="0.0119%" height="15" fill="rgb(239,132,32)" fg:x="2640770839" fg:w="3189786"/><text x="10.0749%" y="1823.50"></text></g><g><title>release_pages (3,189,786 samples, 0.01%)</title><rect x="9.8249%" y="1797" width="0.0119%" height="15" fill="rgb(228,202,34)" fg:x="2640770839" fg:w="3189786"/><text x="10.0749%" y="1807.50"></text></g><g><title>__tlb_remove_page_size (3,977,097 samples, 0.01%)</title><rect x="9.8393%" y="1781" width="0.0148%" height="15" fill="rgb(254,200,22)" fg:x="2644658495" fg:w="3977097"/><text x="10.0893%" y="1791.50"></text></g><g><title>arch_check_zapped_pte (8,390,308 samples, 0.03%)</title><rect x="9.8541%" y="1781" width="0.0312%" height="15" fill="rgb(219,10,39)" fg:x="2648635592" fg:w="8390308"/><text x="10.1041%" y="1791.50"></text></g><g><title>vm_normal_page (3,162,731 samples, 0.01%)</title><rect x="9.8905%" y="1781" width="0.0118%" height="15" fill="rgb(226,210,39)" fg:x="2658404312" fg:w="3162731"/><text x="10.1405%" y="1791.50"></text></g><g><title>__tlb_remove_page_size (20,329,909 samples, 0.08%)</title><rect x="10.7848%" y="1765" width="0.0756%" height="15" fill="rgb(208,219,16)" fg:x="2898781380" fg:w="20329909"/><text x="11.0348%" y="1775.50"></text></g><g><title>page_remove_rmap (96,203,506 samples, 0.36%)</title><rect x="10.8685%" y="1765" width="0.3579%" height="15" fill="rgb(216,158,51)" fg:x="2921289707" fg:w="96203506"/><text x="11.1185%" y="1775.50"></text></g><g><title>free_swap_cache (28,183,739 samples, 0.10%)</title><rect x="11.2381%" y="1733" width="0.1049%" height="15" fill="rgb(233,14,44)" fg:x="3020616613" fg:w="28183739"/><text x="11.4881%" y="1743.50"></text></g><g><title>free_pages_and_swap_cache (92,089,352 samples, 0.34%)</title><rect x="11.2264%" y="1749" width="0.3426%" height="15" fill="rgb(237,97,39)" fg:x="3017493213" fg:w="92089352"/><text x="11.4764%" y="1759.50"></text></g><g><title>release_pages (60,782,213 samples, 0.23%)</title><rect x="11.3429%" y="1733" width="0.2261%" height="15" fill="rgb(218,198,43)" fg:x="3048800352" fg:w="60782213"/><text x="11.5929%" y="1743.50"></text></g><g><title>tlb_flush_mmu (92,888,786 samples, 0.35%)</title><rect x="11.2264%" y="1765" width="0.3456%" height="15" fill="rgb(231,104,20)" fg:x="3017493213" fg:w="92888786"/><text x="11.4764%" y="1775.50"></text></g><g><title>vm_normal_page (8,582,853 samples, 0.03%)</title><rect x="11.5720%" y="1765" width="0.0319%" height="15" fill="rgb(254,36,13)" fg:x="3110381999" fg:w="8582853"/><text x="11.8220%" y="1775.50"></text></g><g><title>__GI___execve (506,721,000 samples, 1.89%)</title><rect x="9.7924%" y="2053" width="1.8852%" height="15" fill="rgb(248,14,50)" fg:x="2632036790" fg:w="506721000"/><text x="10.0424%" y="2063.50">_..</text></g><g><title>entry_SYSCALL_64 (506,721,000 samples, 1.89%)</title><rect x="9.7924%" y="2037" width="1.8852%" height="15" fill="rgb(217,107,29)" fg:x="2632036790" fg:w="506721000"/><text x="10.0424%" y="2047.50">e..</text></g><g><title>do_syscall_64 (506,721,000 samples, 1.89%)</title><rect x="9.7924%" y="2021" width="1.8852%" height="15" fill="rgb(251,169,33)" fg:x="2632036790" fg:w="506721000"/><text x="10.0424%" y="2031.50">d..</text></g><g><title>__x64_sys_execve (506,721,000 samples, 1.89%)</title><rect x="9.7924%" y="2005" width="1.8852%" height="15" fill="rgb(217,108,32)" fg:x="2632036790" fg:w="506721000"/><text x="10.0424%" y="2015.50">_..</text></g><g><title>do_execveat_common (506,721,000 samples, 1.89%)</title><rect x="9.7924%" y="1989" width="1.8852%" height="15" fill="rgb(219,66,42)" fg:x="2632036790" fg:w="506721000"/><text x="10.0424%" y="1999.50">d..</text></g><g><title>bprm_execve (506,721,000 samples, 1.89%)</title><rect x="9.7924%" y="1973" width="1.8852%" height="15" fill="rgb(206,180,7)" fg:x="2632036790" fg:w="506721000"/><text x="10.0424%" y="1983.50">b..</text></g><g><title>exec_binprm (506,721,000 samples, 1.89%)</title><rect x="9.7924%" y="1957" width="1.8852%" height="15" fill="rgb(208,226,31)" fg:x="2632036790" fg:w="506721000"/><text x="10.0424%" y="1967.50">e..</text></g><g><title>load_elf_binary (506,721,000 samples, 1.89%)</title><rect x="9.7924%" y="1941" width="1.8852%" height="15" fill="rgb(218,26,49)" fg:x="2632036790" fg:w="506721000"/><text x="10.0424%" y="1951.50">l..</text></g><g><title>begin_new_exec (506,721,000 samples, 1.89%)</title><rect x="9.7924%" y="1925" width="1.8852%" height="15" fill="rgb(233,197,48)" fg:x="2632036790" fg:w="506721000"/><text x="10.0424%" y="1935.50">b..</text></g><g><title>exec_mmap (506,721,000 samples, 1.89%)</title><rect x="9.7924%" y="1909" width="1.8852%" height="15" fill="rgb(252,181,51)" fg:x="2632036790" fg:w="506721000"/><text x="10.0424%" y="1919.50">e..</text></g><g><title>mmput (506,721,000 samples, 1.89%)</title><rect x="9.7924%" y="1893" width="1.8852%" height="15" fill="rgb(253,90,19)" fg:x="2632036790" fg:w="506721000"/><text x="10.0424%" y="1903.50">m..</text></g><g><title>__mmput (506,721,000 samples, 1.89%)</title><rect x="9.7924%" y="1877" width="1.8852%" height="15" fill="rgb(215,171,30)" fg:x="2632036790" fg:w="506721000"/><text x="10.0424%" y="1887.50">_..</text></g><g><title>exit_mmap (505,177,716 samples, 1.88%)</title><rect x="9.7981%" y="1861" width="1.8795%" height="15" fill="rgb(214,222,9)" fg:x="2633580074" fg:w="505177716"/><text x="10.0481%" y="1871.50">e..</text></g><g><title>unmap_vmas (494,797,165 samples, 1.84%)</title><rect x="9.8367%" y="1845" width="1.8409%" height="15" fill="rgb(223,3,22)" fg:x="2643960625" fg:w="494797165"/><text x="10.0867%" y="1855.50">u..</text></g><g><title>unmap_single_vma (494,099,295 samples, 1.84%)</title><rect x="9.8393%" y="1829" width="1.8383%" height="15" fill="rgb(225,196,46)" fg:x="2644658495" fg:w="494099295"/><text x="10.0893%" y="1839.50">u..</text></g><g><title>unmap_page_range (494,099,295 samples, 1.84%)</title><rect x="9.8393%" y="1813" width="1.8383%" height="15" fill="rgb(209,110,37)" fg:x="2644658495" fg:w="494099295"/><text x="10.0893%" y="1823.50">u..</text></g><g><title>zap_p4d_range (494,099,295 samples, 1.84%)</title><rect x="9.8393%" y="1797" width="1.8383%" height="15" fill="rgb(249,89,12)" fg:x="2644658495" fg:w="494099295"/><text x="10.0893%" y="1807.50">z..</text></g><g><title>zap_pte_range (476,392,077 samples, 1.77%)</title><rect x="9.9052%" y="1781" width="1.7724%" height="15" fill="rgb(226,27,33)" fg:x="2662365713" fg:w="476392077"/><text x="10.1552%" y="1791.50">z..</text></g><g><title>zap_install_uffd_wp_if_needed (19,792,938 samples, 0.07%)</title><rect x="11.6039%" y="1765" width="0.0736%" height="15" fill="rgb(213,82,22)" fg:x="3118964852" fg:w="19792938"/><text x="11.8539%" y="1775.50"></text></g><g><title>handle_mm_fault (2,911,325 samples, 0.01%)</title><rect x="11.6795%" y="1989" width="0.0108%" height="15" fill="rgb(248,140,0)" fg:x="3139282501" fg:w="2911325"/><text x="11.9295%" y="1999.50"></text></g><g><title>__handle_mm_fault (2,911,325 samples, 0.01%)</title><rect x="11.6795%" y="1973" width="0.0108%" height="15" fill="rgb(228,106,3)" fg:x="3139282501" fg:w="2911325"/><text x="11.9295%" y="1983.50"></text></g><g><title>handle_pte_fault (2,911,325 samples, 0.01%)</title><rect x="11.6795%" y="1957" width="0.0108%" height="15" fill="rgb(209,23,37)" fg:x="3139282501" fg:w="2911325"/><text x="11.9295%" y="1967.50"></text></g><g><title>do_wp_page (2,911,325 samples, 0.01%)</title><rect x="11.6795%" y="1941" width="0.0108%" height="15" fill="rgb(241,93,50)" fg:x="3139282501" fg:w="2911325"/><text x="11.9295%" y="1951.50"></text></g><g><title>asm_exc_page_fault (3,759,969 samples, 0.01%)</title><rect x="11.6795%" y="2037" width="0.0140%" height="15" fill="rgb(253,46,43)" fg:x="3139282501" fg:w="3759969"/><text x="11.9295%" y="2047.50"></text></g><g><title>exc_page_fault (3,759,969 samples, 0.01%)</title><rect x="11.6795%" y="2021" width="0.0140%" height="15" fill="rgb(226,206,43)" fg:x="3139282501" fg:w="3759969"/><text x="11.9295%" y="2031.50"></text></g><g><title>do_user_addr_fault (3,759,969 samples, 0.01%)</title><rect x="11.6795%" y="2005" width="0.0140%" height="15" fill="rgb(217,54,7)" fg:x="3139282501" fg:w="3759969"/><text x="11.9295%" y="2015.50"></text></g><g><title>__libc_fork (5,154,601 samples, 0.02%)</title><rect x="11.6776%" y="2053" width="0.0192%" height="15" fill="rgb(223,5,52)" fg:x="3138757790" fg:w="5154601"/><text x="11.9276%" y="2063.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (3,438,791 samples, 0.01%)</title><rect x="11.7075%" y="1957" width="0.0128%" height="15" fill="rgb(206,52,46)" fg:x="3146794265" fg:w="3438791"/><text x="11.9575%" y="1967.50"></text></g><g><title>hrtimer_start_range_ns (3,908,329 samples, 0.01%)</title><rect x="11.8087%" y="1829" width="0.0145%" height="15" fill="rgb(253,136,11)" fg:x="3174008698" fg:w="3908329"/><text x="12.0587%" y="1839.50"></text></g><g><title>dequeue_entity (7,364,243 samples, 0.03%)</title><rect x="11.8395%" y="1765" width="0.0274%" height="15" fill="rgb(208,106,33)" fg:x="3182282391" fg:w="7364243"/><text x="12.0895%" y="1775.50"></text></g><g><title>dequeue_task (9,597,079 samples, 0.04%)</title><rect x="11.8339%" y="1797" width="0.0357%" height="15" fill="rgb(206,54,4)" fg:x="3180776814" fg:w="9597079"/><text x="12.0839%" y="1807.50"></text></g><g><title>dequeue_task_fair (8,091,502 samples, 0.03%)</title><rect x="11.8395%" y="1781" width="0.0301%" height="15" fill="rgb(213,3,15)" fg:x="3182282391" fg:w="8091502"/><text x="12.0895%" y="1791.50"></text></g><g><title>__sched_text_start (16,537,122 samples, 0.06%)</title><rect x="11.8286%" y="1813" width="0.0615%" height="15" fill="rgb(252,211,39)" fg:x="3179339911" fg:w="16537122"/><text x="12.0786%" y="1823.50"></text></g><g><title>schedule_hrtimeout_range (24,606,630 samples, 0.09%)</title><rect x="11.8008%" y="1861" width="0.0915%" height="15" fill="rgb(223,6,36)" fg:x="3171875407" fg:w="24606630"/><text x="12.0508%" y="1871.50"></text></g><g><title>schedule_hrtimeout_range_clock (23,149,698 samples, 0.09%)</title><rect x="11.8062%" y="1845" width="0.0861%" height="15" fill="rgb(252,169,45)" fg:x="3173332339" fg:w="23149698"/><text x="12.0562%" y="1855.50"></text></g><g><title>schedule (17,827,644 samples, 0.07%)</title><rect x="11.8260%" y="1829" width="0.0663%" height="15" fill="rgb(212,48,26)" fg:x="3178654393" fg:w="17827644"/><text x="12.0760%" y="1839.50"></text></g><g><title>do_epoll_wait (37,663,198 samples, 0.14%)</title><rect x="11.7560%" y="1877" width="0.1401%" height="15" fill="rgb(251,102,48)" fg:x="3159833744" fg:w="37663198"/><text x="12.0060%" y="1887.50"></text></g><g><title>__se_sys_epoll_pwait (40,016,647 samples, 0.15%)</title><rect x="11.7526%" y="1893" width="0.1489%" height="15" fill="rgb(243,208,16)" fg:x="3158908972" fg:w="40016647"/><text x="12.0026%" y="1903.50"></text></g><g><title>__x64_sys_epoll_pwait (40,758,158 samples, 0.15%)</title><rect x="11.7526%" y="1909" width="0.1516%" height="15" fill="rgb(219,96,24)" fg:x="3158908972" fg:w="40758158"/><text x="12.0026%" y="1919.50"></text></g><g><title>exit_to_user_mode_prepare (4,399,429 samples, 0.02%)</title><rect x="11.9096%" y="1893" width="0.0164%" height="15" fill="rgb(219,33,29)" fg:x="3201121860" fg:w="4399429"/><text x="12.1596%" y="1903.50"></text></g><g><title>exit_to_user_mode_loop (3,673,465 samples, 0.01%)</title><rect x="11.9123%" y="1877" width="0.0137%" height="15" fill="rgb(223,176,5)" fg:x="3201847824" fg:w="3673465"/><text x="12.1623%" y="1887.50"></text></g><g><title>do_syscall_64 (48,740,611 samples, 0.18%)</title><rect x="11.7473%" y="1925" width="0.1813%" height="15" fill="rgb(228,140,14)" fg:x="3157493393" fg:w="48740611"/><text x="11.9973%" y="1935.50"></text></g><g><title>syscall_exit_to_user_mode (5,112,144 samples, 0.02%)</title><rect x="11.9096%" y="1909" width="0.0190%" height="15" fill="rgb(217,179,31)" fg:x="3201121860" fg:w="5112144"/><text x="12.1596%" y="1919.50"></text></g><g><title>entry_SYSCALL_64 (53,020,444 samples, 0.20%)</title><rect x="11.7340%" y="1941" width="0.1973%" height="15" fill="rgb(230,9,30)" fg:x="3153907852" fg:w="53020444"/><text x="11.9840%" y="1951.50"></text></g><g><title>entry_ibpb (7,252,208 samples, 0.03%)</title><rect x="11.9312%" y="1941" width="0.0270%" height="15" fill="rgb(230,136,20)" fg:x="3206928296" fg:w="7252208"/><text x="12.1812%" y="1951.50"></text></g><g><title>epoll_pwait (64,693,877 samples, 0.24%)</title><rect x="11.7203%" y="1957" width="0.2407%" height="15" fill="rgb(215,210,22)" fg:x="3150233056" fg:w="64693877"/><text x="11.9703%" y="1967.50"></text></g><g><title>eventfd_read (5,243,818 samples, 0.02%)</title><rect x="12.0065%" y="1845" width="0.0195%" height="15" fill="rgb(218,43,5)" fg:x="3227162065" fg:w="5243818"/><text x="12.2565%" y="1855.50"></text></g><g><title>apparmor_file_permission (2,903,969 samples, 0.01%)</title><rect x="12.0260%" y="1829" width="0.0108%" height="15" fill="rgb(216,11,5)" fg:x="3232405883" fg:w="2903969"/><text x="12.2760%" y="1839.50"></text></g><g><title>__x64_sys_read (14,724,979 samples, 0.05%)</title><rect x="11.9903%" y="1893" width="0.0548%" height="15" fill="rgb(209,82,29)" fg:x="3222821560" fg:w="14724979"/><text x="12.2403%" y="1903.50"></text></g><g><title>ksys_read (14,724,979 samples, 0.05%)</title><rect x="11.9903%" y="1877" width="0.0548%" height="15" fill="rgb(244,115,12)" fg:x="3222821560" fg:w="14724979"/><text x="12.2403%" y="1887.50"></text></g><g><title>vfs_read (12,608,690 samples, 0.05%)</title><rect x="11.9982%" y="1861" width="0.0469%" height="15" fill="rgb(222,82,18)" fg:x="3224937849" fg:w="12608690"/><text x="12.2482%" y="1871.50"></text></g><g><title>security_file_permission (5,140,656 samples, 0.02%)</title><rect x="12.0260%" y="1845" width="0.0191%" height="15" fill="rgb(249,227,8)" fg:x="3232405883" fg:w="5140656"/><text x="12.2760%" y="1855.50"></text></g><g><title>entry_SYSCALL_64 (16,225,152 samples, 0.06%)</title><rect x="11.9903%" y="1925" width="0.0604%" height="15" fill="rgb(253,141,45)" fg:x="3222821560" fg:w="16225152"/><text x="12.2403%" y="1935.50"></text></g><g><title>do_syscall_64 (16,225,152 samples, 0.06%)</title><rect x="11.9903%" y="1909" width="0.0604%" height="15" fill="rgb(234,184,4)" fg:x="3222821560" fg:w="16225152"/><text x="12.2403%" y="1919.50"></text></g><g><title>entry_ibpb (3,772,282 samples, 0.01%)</title><rect x="12.0507%" y="1925" width="0.0140%" height="15" fill="rgb(218,194,23)" fg:x="3239046712" fg:w="3772282"/><text x="12.3007%" y="1935.50"></text></g><g><title>read (24,153,722 samples, 0.09%)</title><rect x="11.9804%" y="1941" width="0.0899%" height="15" fill="rgb(235,66,41)" fg:x="3220146649" fg:w="24153722"/><text x="12.2304%" y="1951.50"></text></g><g><title>Watcher::callbackEventsToJS (6,032,441 samples, 0.02%)</title><rect x="12.0877%" y="1909" width="0.0224%" height="15" fill="rgb(245,217,1)" fg:x="3248989267" fg:w="6032441"/><text x="12.3377%" y="1919.50"></text></g><g><title>Watcher::fireCallbacks (7,563,673 samples, 0.03%)</title><rect x="12.0877%" y="1925" width="0.0281%" height="15" fill="rgb(229,91,1)" fg:x="3248989267" fg:w="7563673"/><text x="12.3377%" y="1935.50"></text></g><g><title>v8::internal::ScavengerCollector::CollectGarbage (11,897,199 samples, 0.04%)</title><rect x="12.1192%" y="1829" width="0.0443%" height="15" fill="rgb(207,101,30)" fg:x="3257457120" fg:w="11897199"/><text x="12.3692%" y="1839.50"></text></g><g><title>v8::internal::Heap::Scavenge (12,485,306 samples, 0.05%)</title><rect x="12.1192%" y="1845" width="0.0465%" height="15" fill="rgb(223,82,49)" fg:x="3257457120" fg:w="12485306"/><text x="12.3692%" y="1855.50"></text></g><g><title>node::PerIsolatePlatformData::FlushForegroundTasksInternal (13,551,670 samples, 0.05%)</title><rect x="12.1168%" y="1925" width="0.0504%" height="15" fill="rgb(218,167,17)" fg:x="3256822011" fg:w="13551670"/><text x="12.3668%" y="1935.50"></text></g><g><title>node::PerIsolatePlatformData::RunForegroundTask (13,551,670 samples, 0.05%)</title><rect x="12.1168%" y="1909" width="0.0504%" height="15" fill="rgb(208,103,14)" fg:x="3256822011" fg:w="13551670"/><text x="12.3668%" y="1919.50"></text></g><g><title>v8::internal::MinorGCJob::Task::RunInternal (13,551,670 samples, 0.05%)</title><rect x="12.1168%" y="1893" width="0.0504%" height="15" fill="rgb(238,20,8)" fg:x="3256822011" fg:w="13551670"/><text x="12.3668%" y="1903.50"></text></g><g><title>v8::internal::Heap::CollectGarbage (13,551,670 samples, 0.05%)</title><rect x="12.1168%" y="1877" width="0.0504%" height="15" fill="rgb(218,80,54)" fg:x="3256822011" fg:w="13551670"/><text x="12.3668%" y="1887.50"></text></g><g><title>v8::internal::Heap::PerformGarbageCollection (13,551,670 samples, 0.05%)</title><rect x="12.1168%" y="1861" width="0.0504%" height="15" fill="rgb(240,144,17)" fg:x="3256822011" fg:w="13551670"/><text x="12.3668%" y="1871.50"></text></g><g><title>node::fs::AfterInteger (3,363,511 samples, 0.01%)</title><rect x="12.1806%" y="1893" width="0.0125%" height="15" fill="rgb(245,27,50)" fg:x="3273969679" fg:w="3363511"/><text x="12.4306%" y="1903.50"></text></g><g><title>node::fs::FSReqPromise&lt;node::AliasedBufferBase&lt;double, v8::Float64Array&gt; &gt;::Resolve (3,363,511 samples, 0.01%)</title><rect x="12.1806%" y="1877" width="0.0125%" height="15" fill="rgb(251,51,7)" fg:x="3273969679" fg:w="3363511"/><text x="12.4306%" y="1887.50"></text></g><g><title>node::InternalCallbackScope::~InternalCallbackScope (3,363,511 samples, 0.01%)</title><rect x="12.1806%" y="1861" width="0.0125%" height="15" fill="rgb(245,217,29)" fg:x="3273969679" fg:w="3363511"/><text x="12.4306%" y="1871.50"></text></g><g><title>node::InternalCallbackScope::Close (3,363,511 samples, 0.01%)</title><rect x="12.1806%" y="1845" width="0.0125%" height="15" fill="rgb(221,176,29)" fg:x="3273969679" fg:w="3363511"/><text x="12.4306%" y="1855.50"></text></g><g><title>v8::internal::MicrotaskQueue::PerformCheckpoint (3,363,511 samples, 0.01%)</title><rect x="12.1806%" y="1829" width="0.0125%" height="15" fill="rgb(212,180,24)" fg:x="3273969679" fg:w="3363511"/><text x="12.4306%" y="1839.50"></text></g><g><title>v8::internal::MicrotaskQueue::RunMicrotasks (3,363,511 samples, 0.01%)</title><rect x="12.1806%" y="1813" width="0.0125%" height="15" fill="rgb(254,24,2)" fg:x="3273969679" fg:w="3363511"/><text x="12.4306%" y="1823.50"></text></g><g><title>v8::internal::Execution::TryRunMicrotasks (3,363,511 samples, 0.01%)</title><rect x="12.1806%" y="1797" width="0.0125%" height="15" fill="rgb(230,100,2)" fg:x="3273969679" fg:w="3363511"/><text x="12.4306%" y="1807.50"></text></g><g><title>v8::internal::(anonymous namespace)::InvokeWithTryCatch (3,363,511 samples, 0.01%)</title><rect x="12.1806%" y="1781" width="0.0125%" height="15" fill="rgb(219,142,25)" fg:x="3273969679" fg:w="3363511"/><text x="12.4306%" y="1791.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (3,363,511 samples, 0.01%)</title><rect x="12.1806%" y="1765" width="0.0125%" height="15" fill="rgb(240,73,43)" fg:x="3273969679" fg:w="3363511"/><text x="12.4306%" y="1775.50"></text></g><g><title>Builtins_JSRunMicrotasksEntry (3,363,511 samples, 0.01%)</title><rect x="12.1806%" y="1749" width="0.0125%" height="15" fill="rgb(214,114,15)" fg:x="3273969679" fg:w="3363511"/><text x="12.4306%" y="1759.50"></text></g><g><title>Builtins_RunMicrotasks (3,363,511 samples, 0.01%)</title><rect x="12.1806%" y="1733" width="0.0125%" height="15" fill="rgb(207,130,4)" fg:x="3273969679" fg:w="3363511"/><text x="12.4306%" y="1743.50"></text></g><g><title>Builtins_PromiseFulfillReactionJob (3,363,511 samples, 0.01%)</title><rect x="12.1806%" y="1717" width="0.0125%" height="15" fill="rgb(221,25,40)" fg:x="3273969679" fg:w="3363511"/><text x="12.4306%" y="1727.50"></text></g><g><title>node::fs::AfterOpenFileHandle (7,662,342 samples, 0.03%)</title><rect x="12.1946%" y="1893" width="0.0285%" height="15" fill="rgb(241,184,7)" fg:x="3277735787" fg:w="7662342"/><text x="12.4446%" y="1903.50"></text></g><g><title>node::fs::FSReqPromise&lt;node::AliasedBufferBase&lt;double, v8::Float64Array&gt; &gt;::Resolve (7,662,342 samples, 0.03%)</title><rect x="12.1946%" y="1877" width="0.0285%" height="15" fill="rgb(235,159,4)" fg:x="3277735787" fg:w="7662342"/><text x="12.4446%" y="1887.50"></text></g><g><title>node::InternalCallbackScope::~InternalCallbackScope (7,662,342 samples, 0.03%)</title><rect x="12.1946%" y="1861" width="0.0285%" height="15" fill="rgb(214,87,48)" fg:x="3277735787" fg:w="7662342"/><text x="12.4446%" y="1871.50"></text></g><g><title>node::InternalCallbackScope::Close (7,662,342 samples, 0.03%)</title><rect x="12.1946%" y="1845" width="0.0285%" height="15" fill="rgb(246,198,24)" fg:x="3277735787" fg:w="7662342"/><text x="12.4446%" y="1855.50"></text></g><g><title>v8::internal::MicrotaskQueue::PerformCheckpoint (6,947,579 samples, 0.03%)</title><rect x="12.1973%" y="1829" width="0.0258%" height="15" fill="rgb(209,66,40)" fg:x="3278450550" fg:w="6947579"/><text x="12.4473%" y="1839.50"></text></g><g><title>v8::internal::MicrotaskQueue::RunMicrotasks (6,947,579 samples, 0.03%)</title><rect x="12.1973%" y="1813" width="0.0258%" height="15" fill="rgb(233,147,39)" fg:x="3278450550" fg:w="6947579"/><text x="12.4473%" y="1823.50"></text></g><g><title>v8::internal::Execution::TryRunMicrotasks (6,247,407 samples, 0.02%)</title><rect x="12.1999%" y="1797" width="0.0232%" height="15" fill="rgb(231,145,52)" fg:x="3279150722" fg:w="6247407"/><text x="12.4499%" y="1807.50"></text></g><g><title>v8::internal::(anonymous namespace)::InvokeWithTryCatch (6,247,407 samples, 0.02%)</title><rect x="12.1999%" y="1781" width="0.0232%" height="15" fill="rgb(206,20,26)" fg:x="3279150722" fg:w="6247407"/><text x="12.4499%" y="1791.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (6,247,407 samples, 0.02%)</title><rect x="12.1999%" y="1765" width="0.0232%" height="15" fill="rgb(238,220,4)" fg:x="3279150722" fg:w="6247407"/><text x="12.4499%" y="1775.50"></text></g><g><title>Builtins_JSRunMicrotasksEntry (6,247,407 samples, 0.02%)</title><rect x="12.1999%" y="1749" width="0.0232%" height="15" fill="rgb(252,195,42)" fg:x="3279150722" fg:w="6247407"/><text x="12.4499%" y="1759.50"></text></g><g><title>Builtins_RunMicrotasks (5,561,450 samples, 0.02%)</title><rect x="12.2025%" y="1733" width="0.0207%" height="15" fill="rgb(209,10,6)" fg:x="3279836679" fg:w="5561450"/><text x="12.4525%" y="1743.50"></text></g><g><title>Builtins_PromiseFulfillReactionJob (4,836,391 samples, 0.02%)</title><rect x="12.2052%" y="1717" width="0.0180%" height="15" fill="rgb(229,3,52)" fg:x="3280561738" fg:w="4836391"/><text x="12.4552%" y="1727.50"></text></g><g><title>Builtins_AsyncFunctionAwaitResolveClosure (4,836,391 samples, 0.02%)</title><rect x="12.2052%" y="1701" width="0.0180%" height="15" fill="rgb(253,49,37)" fg:x="3280561738" fg:w="4836391"/><text x="12.4552%" y="1711.50"></text></g><g><title>[perf-5264.map] (4,836,391 samples, 0.02%)</title><rect x="12.2052%" y="1685" width="0.0180%" height="15" fill="rgb(240,103,49)" fg:x="3280561738" fg:w="4836391"/><text x="12.4552%" y="1695.50"></text></g><g><title>[perf-5264.map] (4,047,877 samples, 0.02%)</title><rect x="12.2081%" y="1669" width="0.0151%" height="15" fill="rgb(250,182,30)" fg:x="3281350252" fg:w="4047877"/><text x="12.4581%" y="1679.50"></text></g><g><title>Builtins_CallApiCallback (4,047,877 samples, 0.02%)</title><rect x="12.2081%" y="1653" width="0.0151%" height="15" fill="rgb(248,8,30)" fg:x="3281350252" fg:w="4047877"/><text x="12.4581%" y="1663.50"></text></g><g><title>node::fs::FStat (4,047,877 samples, 0.02%)</title><rect x="12.2081%" y="1637" width="0.0151%" height="15" fill="rgb(237,120,30)" fg:x="3281350252" fg:w="4047877"/><text x="12.4581%" y="1647.50"></text></g><g><title>node::fs::GetReqWrap (3,380,316 samples, 0.01%)</title><rect x="12.2106%" y="1621" width="0.0126%" height="15" fill="rgb(221,146,34)" fg:x="3282017813" fg:w="3380316"/><text x="12.4606%" y="1631.50"></text></g><g><title>node::fs::FSReqPromise&lt;node::AliasedBufferBase&lt;double, v8::Float64Array&gt; &gt;::New (3,380,316 samples, 0.01%)</title><rect x="12.2106%" y="1605" width="0.0126%" height="15" fill="rgb(242,55,13)" fg:x="3282017813" fg:w="3380316"/><text x="12.4606%" y="1615.50"></text></g><g><title>node::fs::FSReqAfterScope::~FSReqAfterScope (3,531,316 samples, 0.01%)</title><rect x="12.2305%" y="1877" width="0.0131%" height="15" fill="rgb(242,112,31)" fg:x="3287362536" fg:w="3531316"/><text x="12.4805%" y="1887.50"></text></g><g><title>node::fs::FSReqPromise&lt;node::AliasedBufferBase&lt;double, v8::Float64Array&gt; &gt;::SetReturnValue (5,158,507 samples, 0.02%)</title><rect x="12.3721%" y="1621" width="0.0192%" height="15" fill="rgb(249,192,27)" fg:x="3325423076" fg:w="5158507"/><text x="12.6221%" y="1631.50"></text></g><g><title>v8::Object::Get (4,403,008 samples, 0.02%)</title><rect x="12.3749%" y="1605" width="0.0164%" height="15" fill="rgb(208,204,44)" fg:x="3326178575" fg:w="4403008"/><text x="12.6249%" y="1615.50"></text></g><g><title>v8::internal::Runtime::GetObjectProperty (2,996,822 samples, 0.01%)</title><rect x="12.3801%" y="1589" width="0.0111%" height="15" fill="rgb(208,93,54)" fg:x="3327584761" fg:w="2996822"/><text x="12.6301%" y="1599.50"></text></g><g><title>v8::internal::Factory::NewJSArrayBufferAndBackingStore (8,632,734 samples, 0.03%)</title><rect x="12.4017%" y="1557" width="0.0321%" height="15" fill="rgb(242,1,31)" fg:x="3333396229" fg:w="8632734"/><text x="12.6517%" y="1567.50"></text></g><g><title>v8::ArrayBuffer::New (10,804,924 samples, 0.04%)</title><rect x="12.3963%" y="1573" width="0.0402%" height="15" fill="rgb(241,83,25)" fg:x="3331936062" fg:w="10804924"/><text x="12.6463%" y="1583.50"></text></g><g><title>node::AliasedBufferBase&lt;double, v8::Float64Array&gt;::AliasedBufferBase (14,213,400 samples, 0.05%)</title><rect x="12.3963%" y="1589" width="0.0529%" height="15" fill="rgb(205,169,50)" fg:x="3331936062" fg:w="14213400"/><text x="12.6463%" y="1599.50"></text></g><g><title>v8::Float64Array::New (3,408,476 samples, 0.01%)</title><rect x="12.4365%" y="1573" width="0.0127%" height="15" fill="rgb(239,186,37)" fg:x="3342740986" fg:w="3408476"/><text x="12.6865%" y="1583.50"></text></g><g><title>v8::internal::Factory::NewJSTypedArray (3,408,476 samples, 0.01%)</title><rect x="12.4365%" y="1557" width="0.0127%" height="15" fill="rgb(205,221,10)" fg:x="3342740986" fg:w="3408476"/><text x="12.6865%" y="1567.50"></text></g><g><title>node::AsyncWrap::AsyncWrap (3,236,308 samples, 0.01%)</title><rect x="12.4492%" y="1589" width="0.0120%" height="15" fill="rgb(218,196,15)" fg:x="3346149462" fg:w="3236308"/><text x="12.6992%" y="1599.50"></text></g><g><title>node::BaseObject::BaseObject (3,236,308 samples, 0.01%)</title><rect x="12.4492%" y="1573" width="0.0120%" height="15" fill="rgb(218,196,35)" fg:x="3346149462" fg:w="3236308"/><text x="12.6992%" y="1583.50"></text></g><g><title>v8::Object::Set (4,190,141 samples, 0.02%)</title><rect x="12.4641%" y="1589" width="0.0156%" height="15" fill="rgb(233,63,24)" fg:x="3350156998" fg:w="4190141"/><text x="12.7141%" y="1599.50"></text></g><g><title>v8::internal::Runtime::SetObjectProperty (3,432,958 samples, 0.01%)</title><rect x="12.4669%" y="1573" width="0.0128%" height="15" fill="rgb(225,8,4)" fg:x="3350914181" fg:w="3432958"/><text x="12.7169%" y="1583.50"></text></g><g><title>v8::internal::Object::SetProperty (3,432,958 samples, 0.01%)</title><rect x="12.4669%" y="1557" width="0.0128%" height="15" fill="rgb(234,105,35)" fg:x="3350914181" fg:w="3432958"/><text x="12.7169%" y="1567.50"></text></g><g><title>node::fs::FSReqPromise&lt;node::AliasedBufferBase&lt;double, v8::Float64Array&gt; &gt;::New (25,304,421 samples, 0.09%)</title><rect x="12.3963%" y="1605" width="0.0941%" height="15" fill="rgb(236,21,32)" fg:x="3331936062" fg:w="25304421"/><text x="12.6463%" y="1615.50"></text></g><g><title>node::fs::GetReqWrap (27,286,630 samples, 0.10%)</title><rect x="12.3913%" y="1621" width="0.1015%" height="15" fill="rgb(228,109,6)" fg:x="3330581583" fg:w="27286630"/><text x="12.6413%" y="1631.50"></text></g><g><title>node::fs::ReadLink (36,567,484 samples, 0.14%)</title><rect x="12.3721%" y="1637" width="0.1360%" height="15" fill="rgb(229,215,31)" fg:x="3325423076" fg:w="36567484"/><text x="12.6221%" y="1647.50"></text></g><g><title>void node::MakeUtf8String&lt;char&gt; (2,819,941 samples, 0.01%)</title><rect x="12.4976%" y="1621" width="0.0105%" height="15" fill="rgb(221,52,54)" fg:x="3359170619" fg:w="2819941"/><text x="12.7476%" y="1631.50"></text></g><g><title>Builtins_CallApiCallback (40,408,871 samples, 0.15%)</title><rect x="12.3721%" y="1653" width="0.1503%" height="15" fill="rgb(252,129,43)" fg:x="3325423076" fg:w="40408871"/><text x="12.6221%" y="1663.50"></text></g><g><title>node::fs::Stat (3,841,387 samples, 0.01%)</title><rect x="12.5081%" y="1637" width="0.0143%" height="15" fill="rgb(248,183,27)" fg:x="3361990560" fg:w="3841387"/><text x="12.7581%" y="1647.50"></text></g><g><title>Builtins_JSBuiltinsConstructStub (8,433,269 samples, 0.03%)</title><rect x="12.5249%" y="1653" width="0.0314%" height="15" fill="rgb(250,0,22)" fg:x="3366505179" fg:w="8433269"/><text x="12.7749%" y="1663.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_BuiltinExit (8,433,269 samples, 0.03%)</title><rect x="12.5249%" y="1637" width="0.0314%" height="15" fill="rgb(213,166,10)" fg:x="3366505179" fg:w="8433269"/><text x="12.7749%" y="1647.50"></text></g><g><title>v8::internal::Builtin_DateConstructor (8,433,269 samples, 0.03%)</title><rect x="12.5249%" y="1621" width="0.0314%" height="15" fill="rgb(207,163,36)" fg:x="3366505179" fg:w="8433269"/><text x="12.7749%" y="1631.50"></text></g><g><title>v8::internal::JSDate::New (7,001,213 samples, 0.03%)</title><rect x="12.5302%" y="1605" width="0.0260%" height="15" fill="rgb(208,122,22)" fg:x="3367937235" fg:w="7001213"/><text x="12.7802%" y="1615.50"></text></g><g><title>Builtins_RegExpPrototypeTestFast (3,546,846 samples, 0.01%)</title><rect x="12.5587%" y="1653" width="0.0132%" height="15" fill="rgb(207,104,49)" fg:x="3375592204" fg:w="3546846"/><text x="12.8087%" y="1663.50"></text></g><g><title>[perf-5264.map] (4,072,496 samples, 0.02%)</title><rect x="12.5747%" y="1653" width="0.0152%" height="15" fill="rgb(248,211,50)" fg:x="3379895161" fg:w="4072496"/><text x="12.8247%" y="1663.50"></text></g><g><title>[perf-5264.map] (3,783,898 samples, 0.01%)</title><rect x="12.5758%" y="1637" width="0.0141%" height="15" fill="rgb(217,13,45)" fg:x="3380183759" fg:w="3783898"/><text x="12.8258%" y="1647.50"></text></g><g><title>[perf-5264.map] (3,099,249 samples, 0.01%)</title><rect x="12.5783%" y="1621" width="0.0115%" height="15" fill="rgb(211,216,49)" fg:x="3380868408" fg:w="3099249"/><text x="12.8283%" y="1631.50"></text></g><g><title>[perf-5264.map] (3,099,249 samples, 0.01%)</title><rect x="12.5783%" y="1605" width="0.0115%" height="15" fill="rgb(221,58,53)" fg:x="3380868408" fg:w="3099249"/><text x="12.8283%" y="1615.50"></text></g><g><title>Builtins_AsyncFunctionAwaitResolveClosure (87,389,091 samples, 0.33%)</title><rect x="12.2673%" y="1701" width="0.3251%" height="15" fill="rgb(220,112,41)" fg:x="3297262244" fg:w="87389091"/><text x="12.5173%" y="1711.50"></text></g><g><title>[perf-5264.map] (87,389,091 samples, 0.33%)</title><rect x="12.2673%" y="1685" width="0.3251%" height="15" fill="rgb(236,38,28)" fg:x="3297262244" fg:w="87389091"/><text x="12.5173%" y="1695.50"></text></g><g><title>[perf-5264.map] (71,618,820 samples, 0.27%)</title><rect x="12.3260%" y="1669" width="0.2665%" height="15" fill="rgb(227,195,22)" fg:x="3313032515" fg:w="71618820"/><text x="12.5760%" y="1679.50"></text></g><g><title>Builtins_JSRunMicrotasksEntry (90,187,318 samples, 0.34%)</title><rect x="12.2617%" y="1749" width="0.3355%" height="15" fill="rgb(214,55,33)" fg:x="3295769614" fg:w="90187318"/><text x="12.5117%" y="1759.50"></text></g><g><title>Builtins_RunMicrotasks (90,187,318 samples, 0.34%)</title><rect x="12.2617%" y="1733" width="0.3355%" height="15" fill="rgb(248,80,13)" fg:x="3295769614" fg:w="90187318"/><text x="12.5117%" y="1743.50"></text></g><g><title>Builtins_PromiseFulfillReactionJob (88,694,688 samples, 0.33%)</title><rect x="12.2673%" y="1717" width="0.3300%" height="15" fill="rgb(238,52,6)" fg:x="3297262244" fg:w="88694688"/><text x="12.5173%" y="1727.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (91,560,094 samples, 0.34%)</title><rect x="12.2593%" y="1765" width="0.3406%" height="15" fill="rgb(224,198,47)" fg:x="3295111379" fg:w="91560094"/><text x="12.5093%" y="1775.50"></text></g><g><title>node::InternalCallbackScope::Close (96,477,829 samples, 0.36%)</title><rect x="12.2436%" y="1845" width="0.3589%" height="15" fill="rgb(233,171,20)" fg:x="3290893852" fg:w="96477829"/><text x="12.4936%" y="1855.50"></text></g><g><title>v8::internal::MicrotaskQueue::PerformCheckpoint (94,336,275 samples, 0.35%)</title><rect x="12.2516%" y="1829" width="0.3510%" height="15" fill="rgb(241,30,25)" fg:x="3293035406" fg:w="94336275"/><text x="12.5016%" y="1839.50"></text></g><g><title>v8::internal::MicrotaskQueue::RunMicrotasks (93,676,992 samples, 0.35%)</title><rect x="12.2540%" y="1813" width="0.3485%" height="15" fill="rgb(207,171,38)" fg:x="3293694689" fg:w="93676992"/><text x="12.5040%" y="1823.50"></text></g><g><title>v8::internal::Execution::TryRunMicrotasks (92,260,302 samples, 0.34%)</title><rect x="12.2593%" y="1797" width="0.3432%" height="15" fill="rgb(234,70,1)" fg:x="3295111379" fg:w="92260302"/><text x="12.5093%" y="1807.50"></text></g><g><title>v8::internal::(anonymous namespace)::InvokeWithTryCatch (92,260,302 samples, 0.34%)</title><rect x="12.2593%" y="1781" width="0.3432%" height="15" fill="rgb(232,178,18)" fg:x="3295111379" fg:w="92260302"/><text x="12.5093%" y="1791.50"></text></g><g><title>node::InternalCallbackScope::~InternalCallbackScope (97,118,925 samples, 0.36%)</title><rect x="12.2436%" y="1861" width="0.3613%" height="15" fill="rgb(241,78,40)" fg:x="3290893852" fg:w="97118925"/><text x="12.4936%" y="1871.50"></text></g><g><title>v8::internal::JSReceiver::GetProperty (2,807,349 samples, 0.01%)</title><rect x="12.6184%" y="1829" width="0.0104%" height="15" fill="rgb(222,35,25)" fg:x="3391626523" fg:w="2807349"/><text x="12.8684%" y="1839.50"></text></g><g><title>void v8::internal::LookupIterator::Start&lt;false&gt; (2,807,349 samples, 0.01%)</title><rect x="12.6184%" y="1813" width="0.0104%" height="15" fill="rgb(207,92,16)" fg:x="3391626523" fg:w="2807349"/><text x="12.8684%" y="1823.50"></text></g><g><title>node::fs::FSReqPromise&lt;node::AliasedBufferBase&lt;double, v8::Float64Array&gt; &gt;::ResolveStat (104,193,871 samples, 0.39%)</title><rect x="12.2436%" y="1877" width="0.3876%" height="15" fill="rgb(216,59,51)" fg:x="3290893852" fg:w="104193871"/><text x="12.4936%" y="1887.50"></text></g><g><title>v8::Promise::Resolver::Resolve (5,712,193 samples, 0.02%)</title><rect x="12.6100%" y="1861" width="0.0213%" height="15" fill="rgb(213,80,28)" fg:x="3389375530" fg:w="5712193"/><text x="12.8600%" y="1871.50"></text></g><g><title>v8::internal::JSPromise::Resolve (5,712,193 samples, 0.02%)</title><rect x="12.6100%" y="1845" width="0.0213%" height="15" fill="rgb(220,93,7)" fg:x="3389375530" fg:w="5712193"/><text x="12.8600%" y="1855.50"></text></g><g><title>node::fs::AfterStat (110,418,016 samples, 0.41%)</title><rect x="12.2232%" y="1893" width="0.4108%" height="15" fill="rgb(225,24,44)" fg:x="3285398129" fg:w="110418016"/><text x="12.4732%" y="1903.50"></text></g><g><title>v8::internal::Isolate::CaptureAndSetErrorStack (4,775,388 samples, 0.02%)</title><rect x="12.6390%" y="1797" width="0.0178%" height="15" fill="rgb(243,74,40)" fg:x="3397158021" fg:w="4775388"/><text x="12.8890%" y="1807.50"></text></g><g><title>v8::internal::JSObject::SetOwnPropertyIgnoreAttributes (4,277,054 samples, 0.02%)</title><rect x="12.6615%" y="1797" width="0.0159%" height="15" fill="rgb(228,39,7)" fg:x="3403220071" fg:w="4277054"/><text x="12.9115%" y="1807.50"></text></g><g><title>v8::internal::JSObject::DefineOwnPropertyIgnoreAttributes (4,277,054 samples, 0.02%)</title><rect x="12.6615%" y="1781" width="0.0159%" height="15" fill="rgb(227,79,8)" fg:x="3403220071" fg:w="4277054"/><text x="12.9115%" y="1791.50"></text></g><g><title>v8::internal::Object::AddDataProperty (3,572,108 samples, 0.01%)</title><rect x="12.6641%" y="1765" width="0.0133%" height="15" fill="rgb(236,58,11)" fg:x="3403925017" fg:w="3572108"/><text x="12.9141%" y="1775.50"></text></g><g><title>v8::internal::Object::TransitionAndWriteDataProperty (2,821,658 samples, 0.01%)</title><rect x="12.6669%" y="1749" width="0.0105%" height="15" fill="rgb(249,63,35)" fg:x="3404675467" fg:w="2821658"/><text x="12.9169%" y="1759.50"></text></g><g><title>v8::internal::ErrorUtils::Construct (11,798,117 samples, 0.04%)</title><rect x="12.6363%" y="1813" width="0.0439%" height="15" fill="rgb(252,114,16)" fg:x="3396445228" fg:w="11798117"/><text x="12.8863%" y="1823.50"></text></g><g><title>v8::Exception::Error (12,560,320 samples, 0.05%)</title><rect x="12.6363%" y="1845" width="0.0467%" height="15" fill="rgb(254,151,24)" fg:x="3396445228" fg:w="12560320"/><text x="12.8863%" y="1855.50"></text></g><g><title>v8::internal::Factory::NewError (12,560,320 samples, 0.05%)</title><rect x="12.6363%" y="1829" width="0.0467%" height="15" fill="rgb(253,54,39)" fg:x="3396445228" fg:w="12560320"/><text x="12.8863%" y="1839.50"></text></g><g><title>v8::internal::Object::SetProperty (4,982,503 samples, 0.02%)</title><rect x="12.6884%" y="1813" width="0.0185%" height="15" fill="rgb(243,25,45)" fg:x="3410458070" fg:w="4982503"/><text x="12.9384%" y="1823.50"></text></g><g><title>v8::internal::Object::AddDataProperty (4,982,503 samples, 0.02%)</title><rect x="12.6884%" y="1797" width="0.0185%" height="15" fill="rgb(234,134,9)" fg:x="3410458070" fg:w="4982503"/><text x="12.9384%" y="1807.50"></text></g><g><title>v8::internal::Object::TransitionAndWriteDataProperty (4,982,503 samples, 0.02%)</title><rect x="12.6884%" y="1781" width="0.0185%" height="15" fill="rgb(227,166,31)" fg:x="3410458070" fg:w="4982503"/><text x="12.9384%" y="1791.50"></text></g><g><title>v8::Object::Set (6,230,155 samples, 0.02%)</title><rect x="12.6859%" y="1845" width="0.0232%" height="15" fill="rgb(245,143,41)" fg:x="3409788416" fg:w="6230155"/><text x="12.9359%" y="1855.50"></text></g><g><title>v8::internal::Runtime::SetObjectProperty (5,560,501 samples, 0.02%)</title><rect x="12.6884%" y="1829" width="0.0207%" height="15" fill="rgb(238,181,32)" fg:x="3410458070" fg:w="5560501"/><text x="12.9384%" y="1839.50"></text></g><g><title>node::UVException (22,940,372 samples, 0.09%)</title><rect x="12.6363%" y="1861" width="0.0853%" height="15" fill="rgb(224,113,18)" fg:x="3396445228" fg:w="22940372"/><text x="12.8863%" y="1871.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_NoBuiltinExit (4,944,199 samples, 0.02%)</title><rect x="12.7507%" y="1653" width="0.0184%" height="15" fill="rgb(240,229,28)" fg:x="3427205310" fg:w="4944199"/><text x="13.0007%" y="1663.50"></text></g><g><title>v8::internal::Runtime_UnwindAndFindExceptionHandler (4,944,199 samples, 0.02%)</title><rect x="12.7507%" y="1637" width="0.0184%" height="15" fill="rgb(250,185,3)" fg:x="3427205310" fg:w="4944199"/><text x="13.0007%" y="1647.50"></text></g><g><title>v8::internal::Isolate::UnwindAndFindHandler (4,310,246 samples, 0.02%)</title><rect x="12.7531%" y="1621" width="0.0160%" height="15" fill="rgb(212,59,25)" fg:x="3427839263" fg:w="4310246"/><text x="13.0031%" y="1631.50"></text></g><g><title>v8::internal::StackFrameIterator::Advance (4,310,246 samples, 0.02%)</title><rect x="12.7531%" y="1605" width="0.0160%" height="15" fill="rgb(221,87,20)" fg:x="3427839263" fg:w="4310246"/><text x="13.0031%" y="1615.50"></text></g><g><title>v8::internal::BackingStore::Allocate (2,881,830 samples, 0.01%)</title><rect x="12.8346%" y="1525" width="0.0107%" height="15" fill="rgb(213,74,28)" fg:x="3449743138" fg:w="2881830"/><text x="13.0846%" y="1535.50"></text></g><g><title>v8::ArrayBuffer::New (6,380,265 samples, 0.02%)</title><rect x="12.8293%" y="1557" width="0.0237%" height="15" fill="rgb(224,132,34)" fg:x="3448318736" fg:w="6380265"/><text x="13.0793%" y="1567.50"></text></g><g><title>v8::internal::Factory::NewJSArrayBufferAndBackingStore (6,380,265 samples, 0.02%)</title><rect x="12.8293%" y="1541" width="0.0237%" height="15" fill="rgb(222,101,24)" fg:x="3448318736" fg:w="6380265"/><text x="13.0793%" y="1551.50"></text></g><g><title>node::AliasedBufferBase&lt;double, v8::Float64Array&gt;::AliasedBufferBase (7,812,446 samples, 0.03%)</title><rect x="12.8293%" y="1573" width="0.0291%" height="15" fill="rgb(254,142,4)" fg:x="3448318736" fg:w="7812446"/><text x="13.0793%" y="1583.50"></text></g><g><title>node::AsyncWrap::AsyncWrap (2,857,770 samples, 0.01%)</title><rect x="12.8584%" y="1573" width="0.0106%" height="15" fill="rgb(230,229,49)" fg:x="3456131182" fg:w="2857770"/><text x="13.1084%" y="1583.50"></text></g><g><title>node::fs::FSReqPromise&lt;node::AliasedBufferBase&lt;double, v8::Float64Array&gt; &gt;::New (18,323,039 samples, 0.07%)</title><rect x="12.8293%" y="1589" width="0.0682%" height="15" fill="rgb(238,70,47)" fg:x="3448318736" fg:w="18323039"/><text x="13.0793%" y="1599.50"></text></g><g><title>node::fs::GetReqWrap (19,099,638 samples, 0.07%)</title><rect x="12.8293%" y="1605" width="0.0711%" height="15" fill="rgb(231,160,17)" fg:x="3448318736" fg:w="19099638"/><text x="13.0793%" y="1615.50"></text></g><g><title>Builtins_CallApiCallback (21,978,135 samples, 0.08%)</title><rect x="12.8266%" y="1637" width="0.0818%" height="15" fill="rgb(218,68,53)" fg:x="3447594505" fg:w="21978135"/><text x="13.0766%" y="1647.50"></text></g><g><title>node::fs::Stat (21,978,135 samples, 0.08%)</title><rect x="12.8266%" y="1621" width="0.0818%" height="15" fill="rgb(236,111,10)" fg:x="3447594505" fg:w="21978135"/><text x="13.0766%" y="1631.50"></text></g><g><title>Builtins_AsyncFunctionAwaitRejectClosure (48,183,546 samples, 0.18%)</title><rect x="12.7427%" y="1685" width="0.1793%" height="15" fill="rgb(224,34,41)" fg:x="3425036900" fg:w="48183546"/><text x="12.9927%" y="1695.50"></text></g><g><title>[perf-5264.map] (48,183,546 samples, 0.18%)</title><rect x="12.7427%" y="1669" width="0.1793%" height="15" fill="rgb(241,118,19)" fg:x="3425036900" fg:w="48183546"/><text x="12.9927%" y="1679.50"></text></g><g><title>[perf-5264.map] (31,907,129 samples, 0.12%)</title><rect x="12.8032%" y="1653" width="0.1187%" height="15" fill="rgb(238,129,25)" fg:x="3441313317" fg:w="31907129"/><text x="13.0532%" y="1663.50"></text></g><g><title>node::InternalCallbackScope::~InternalCallbackScope (53,889,817 samples, 0.20%)</title><rect x="12.7268%" y="1845" width="0.2005%" height="15" fill="rgb(238,22,31)" fg:x="3420782742" fg:w="53889817"/><text x="12.9768%" y="1855.50"></text></g><g><title>node::InternalCallbackScope::Close (53,205,380 samples, 0.20%)</title><rect x="12.7294%" y="1829" width="0.1979%" height="15" fill="rgb(222,174,48)" fg:x="3421467179" fg:w="53205380"/><text x="12.9794%" y="1839.50"></text></g><g><title>v8::internal::MicrotaskQueue::PerformCheckpoint (51,852,527 samples, 0.19%)</title><rect x="12.7344%" y="1813" width="0.1929%" height="15" fill="rgb(206,152,40)" fg:x="3422820032" fg:w="51852527"/><text x="12.9844%" y="1823.50"></text></g><g><title>v8::internal::MicrotaskQueue::RunMicrotasks (51,076,133 samples, 0.19%)</title><rect x="12.7373%" y="1797" width="0.1900%" height="15" fill="rgb(218,99,54)" fg:x="3423596426" fg:w="51076133"/><text x="12.9873%" y="1807.50"></text></g><g><title>v8::internal::Execution::TryRunMicrotasks (50,363,396 samples, 0.19%)</title><rect x="12.7400%" y="1781" width="0.1874%" height="15" fill="rgb(220,174,26)" fg:x="3424309163" fg:w="50363396"/><text x="12.9900%" y="1791.50"></text></g><g><title>v8::internal::(anonymous namespace)::InvokeWithTryCatch (50,363,396 samples, 0.19%)</title><rect x="12.7400%" y="1765" width="0.1874%" height="15" fill="rgb(245,116,9)" fg:x="3424309163" fg:w="50363396"/><text x="12.9900%" y="1775.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (49,635,659 samples, 0.18%)</title><rect x="12.7427%" y="1749" width="0.1847%" height="15" fill="rgb(209,72,35)" fg:x="3425036900" fg:w="49635659"/><text x="12.9927%" y="1759.50"></text></g><g><title>Builtins_JSRunMicrotasksEntry (49,635,659 samples, 0.18%)</title><rect x="12.7427%" y="1733" width="0.1847%" height="15" fill="rgb(226,126,21)" fg:x="3425036900" fg:w="49635659"/><text x="12.9927%" y="1743.50"></text></g><g><title>Builtins_RunMicrotasks (49,635,659 samples, 0.18%)</title><rect x="12.7427%" y="1717" width="0.1847%" height="15" fill="rgb(227,192,1)" fg:x="3425036900" fg:w="49635659"/><text x="12.9927%" y="1727.50"></text></g><g><title>Builtins_PromiseRejectReactionJob (49,635,659 samples, 0.18%)</title><rect x="12.7427%" y="1701" width="0.1847%" height="15" fill="rgb(237,180,29)" fg:x="3425036900" fg:w="49635659"/><text x="12.9927%" y="1711.50"></text></g><g><title>node::fs::FSReqPromise&lt;node::AliasedBufferBase&lt;double, v8::Float64Array&gt; &gt;::Reject (58,215,728 samples, 0.22%)</title><rect x="12.7216%" y="1861" width="0.2166%" height="15" fill="rgb(230,197,35)" fg:x="3419385600" fg:w="58215728"/><text x="12.9716%" y="1871.50"></text></g><g><title>node::fs::FSReqAfterScope::Reject (84,395,484 samples, 0.31%)</title><rect x="12.6340%" y="1877" width="0.3140%" height="15" fill="rgb(246,193,31)" fg:x="3395816145" fg:w="84395484"/><text x="12.8840%" y="1887.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_NoBuiltinExit (2,977,024 samples, 0.01%)</title><rect x="12.9480%" y="1653" width="0.0111%" height="15" fill="rgb(241,36,4)" fg:x="3480211629" fg:w="2977024"/><text x="13.1980%" y="1663.50"></text></g><g><title>node::fs::FSReqPromise&lt;node::AliasedBufferBase&lt;double, v8::Float64Array&gt; &gt;::Resolve (4,399,160 samples, 0.02%)</title><rect x="12.9480%" y="1877" width="0.0164%" height="15" fill="rgb(241,130,17)" fg:x="3480211629" fg:w="4399160"/><text x="13.1980%" y="1887.50"></text></g><g><title>node::InternalCallbackScope::~InternalCallbackScope (4,399,160 samples, 0.02%)</title><rect x="12.9480%" y="1861" width="0.0164%" height="15" fill="rgb(206,137,32)" fg:x="3480211629" fg:w="4399160"/><text x="13.1980%" y="1871.50"></text></g><g><title>node::InternalCallbackScope::Close (4,399,160 samples, 0.02%)</title><rect x="12.9480%" y="1845" width="0.0164%" height="15" fill="rgb(237,228,51)" fg:x="3480211629" fg:w="4399160"/><text x="13.1980%" y="1855.50"></text></g><g><title>v8::internal::MicrotaskQueue::PerformCheckpoint (4,399,160 samples, 0.02%)</title><rect x="12.9480%" y="1829" width="0.0164%" height="15" fill="rgb(243,6,42)" fg:x="3480211629" fg:w="4399160"/><text x="13.1980%" y="1839.50"></text></g><g><title>v8::internal::MicrotaskQueue::RunMicrotasks (4,399,160 samples, 0.02%)</title><rect x="12.9480%" y="1813" width="0.0164%" height="15" fill="rgb(251,74,28)" fg:x="3480211629" fg:w="4399160"/><text x="13.1980%" y="1823.50"></text></g><g><title>v8::internal::Execution::TryRunMicrotasks (4,399,160 samples, 0.02%)</title><rect x="12.9480%" y="1797" width="0.0164%" height="15" fill="rgb(218,20,49)" fg:x="3480211629" fg:w="4399160"/><text x="13.1980%" y="1807.50"></text></g><g><title>v8::internal::(anonymous namespace)::InvokeWithTryCatch (4,399,160 samples, 0.02%)</title><rect x="12.9480%" y="1781" width="0.0164%" height="15" fill="rgb(238,28,14)" fg:x="3480211629" fg:w="4399160"/><text x="13.1980%" y="1791.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (4,399,160 samples, 0.02%)</title><rect x="12.9480%" y="1765" width="0.0164%" height="15" fill="rgb(229,40,46)" fg:x="3480211629" fg:w="4399160"/><text x="13.1980%" y="1775.50"></text></g><g><title>Builtins_JSRunMicrotasksEntry (4,399,160 samples, 0.02%)</title><rect x="12.9480%" y="1749" width="0.0164%" height="15" fill="rgb(244,195,20)" fg:x="3480211629" fg:w="4399160"/><text x="13.1980%" y="1759.50"></text></g><g><title>Builtins_RunMicrotasks (4,399,160 samples, 0.02%)</title><rect x="12.9480%" y="1733" width="0.0164%" height="15" fill="rgb(253,56,35)" fg:x="3480211629" fg:w="4399160"/><text x="13.1980%" y="1743.50"></text></g><g><title>Builtins_PromiseFulfillReactionJob (4,399,160 samples, 0.02%)</title><rect x="12.9480%" y="1717" width="0.0164%" height="15" fill="rgb(210,149,44)" fg:x="3480211629" fg:w="4399160"/><text x="13.1980%" y="1727.50"></text></g><g><title>Builtins_AsyncFunctionAwaitResolveClosure (4,399,160 samples, 0.02%)</title><rect x="12.9480%" y="1701" width="0.0164%" height="15" fill="rgb(240,135,12)" fg:x="3480211629" fg:w="4399160"/><text x="13.1980%" y="1711.50"></text></g><g><title>[perf-5264.map] (4,399,160 samples, 0.02%)</title><rect x="12.9480%" y="1685" width="0.0164%" height="15" fill="rgb(251,24,50)" fg:x="3480211629" fg:w="4399160"/><text x="13.1980%" y="1695.50"></text></g><g><title>[perf-5264.map] (4,399,160 samples, 0.02%)</title><rect x="12.9480%" y="1669" width="0.0164%" height="15" fill="rgb(243,200,47)" fg:x="3480211629" fg:w="4399160"/><text x="13.1980%" y="1679.50"></text></g><g><title>node::fs::AfterStringPtr (89,420,538 samples, 0.33%)</title><rect x="12.6340%" y="1893" width="0.3327%" height="15" fill="rgb(224,166,26)" fg:x="3395816145" fg:w="89420538"/><text x="12.8840%" y="1903.50"></text></g><g><title>node::BaseObject::~BaseObject (3,377,186 samples, 0.01%)</title><rect x="12.9767%" y="1861" width="0.0126%" height="15" fill="rgb(233,0,47)" fg:x="3487945220" fg:w="3377186"/><text x="13.2267%" y="1871.50"></text></g><g><title>node::fs::FSReqPromise&lt;node::AliasedBufferBase&lt;double, v8::Float64Array&gt; &gt;::~FSReqPromise (6,209,119 samples, 0.02%)</title><rect x="12.9689%" y="1893" width="0.0231%" height="15" fill="rgb(253,80,5)" fg:x="3485846255" fg:w="6209119"/><text x="13.2189%" y="1903.50"></text></g><g><title>node::AsyncWrap::~AsyncWrap (5,537,212 samples, 0.02%)</title><rect x="12.9714%" y="1877" width="0.0206%" height="15" fill="rgb(214,133,25)" fg:x="3486518162" fg:w="5537212"/><text x="13.2214%" y="1887.50"></text></g><g><title>Builtins_CallApiCallback (2,744,616 samples, 0.01%)</title><rect x="13.0116%" y="1589" width="0.0102%" height="15" fill="rgb(209,27,14)" fg:x="3497328528" fg:w="2744616"/><text x="13.2616%" y="1599.50"></text></g><g><title>node::(anonymous namespace)::ProcessWrap::Spawn (2,744,616 samples, 0.01%)</title><rect x="13.0116%" y="1573" width="0.0102%" height="15" fill="rgb(219,102,51)" fg:x="3497328528" fg:w="2744616"/><text x="13.2616%" y="1583.50"></text></g><g><title>Builtins_AsyncFunctionAwaitResolveClosure (8,395,978 samples, 0.03%)</title><rect x="12.9973%" y="1701" width="0.0312%" height="15" fill="rgb(237,18,16)" fg:x="3493471005" fg:w="8395978"/><text x="13.2473%" y="1711.50"></text></g><g><title>[perf-5264.map] (8,395,978 samples, 0.03%)</title><rect x="12.9973%" y="1685" width="0.0312%" height="15" fill="rgb(241,85,17)" fg:x="3493471005" fg:w="8395978"/><text x="13.2473%" y="1695.50"></text></g><g><title>[perf-5264.map] (8,395,978 samples, 0.03%)</title><rect x="12.9973%" y="1669" width="0.0312%" height="15" fill="rgb(236,90,42)" fg:x="3493471005" fg:w="8395978"/><text x="13.2473%" y="1679.50"></text></g><g><title>[perf-5264.map] (5,638,854 samples, 0.02%)</title><rect x="13.0075%" y="1653" width="0.0210%" height="15" fill="rgb(249,57,21)" fg:x="3496228129" fg:w="5638854"/><text x="13.2575%" y="1663.50"></text></g><g><title>[perf-5264.map] (5,638,854 samples, 0.02%)</title><rect x="13.0075%" y="1637" width="0.0210%" height="15" fill="rgb(243,12,36)" fg:x="3496228129" fg:w="5638854"/><text x="13.2575%" y="1647.50"></text></g><g><title>[perf-5264.map] (5,638,854 samples, 0.02%)</title><rect x="13.0075%" y="1621" width="0.0210%" height="15" fill="rgb(253,128,47)" fg:x="3496228129" fg:w="5638854"/><text x="13.2575%" y="1631.50"></text></g><g><title>[perf-5264.map] (5,638,854 samples, 0.02%)</title><rect x="13.0075%" y="1605" width="0.0210%" height="15" fill="rgb(207,33,20)" fg:x="3496228129" fg:w="5638854"/><text x="13.2575%" y="1615.50"></text></g><g><title>node::InternalCallbackScope::~InternalCallbackScope (11,263,337 samples, 0.04%)</title><rect x="12.9920%" y="1861" width="0.0419%" height="15" fill="rgb(233,215,35)" fg:x="3492055374" fg:w="11263337"/><text x="13.2420%" y="1871.50"></text></g><g><title>node::InternalCallbackScope::Close (10,524,228 samples, 0.04%)</title><rect x="12.9948%" y="1845" width="0.0392%" height="15" fill="rgb(249,188,52)" fg:x="3492794483" fg:w="10524228"/><text x="13.2448%" y="1855.50"></text></g><g><title>v8::internal::MicrotaskQueue::PerformCheckpoint (10,524,228 samples, 0.04%)</title><rect x="12.9948%" y="1829" width="0.0392%" height="15" fill="rgb(225,12,32)" fg:x="3492794483" fg:w="10524228"/><text x="13.2448%" y="1839.50"></text></g><g><title>v8::internal::MicrotaskQueue::RunMicrotasks (10,524,228 samples, 0.04%)</title><rect x="12.9948%" y="1813" width="0.0392%" height="15" fill="rgb(247,98,14)" fg:x="3492794483" fg:w="10524228"/><text x="13.2448%" y="1823.50"></text></g><g><title>v8::internal::Execution::TryRunMicrotasks (10,524,228 samples, 0.04%)</title><rect x="12.9948%" y="1797" width="0.0392%" height="15" fill="rgb(247,219,48)" fg:x="3492794483" fg:w="10524228"/><text x="13.2448%" y="1807.50"></text></g><g><title>v8::internal::(anonymous namespace)::InvokeWithTryCatch (10,524,228 samples, 0.04%)</title><rect x="12.9948%" y="1781" width="0.0392%" height="15" fill="rgb(253,60,48)" fg:x="3492794483" fg:w="10524228"/><text x="13.2448%" y="1791.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (10,524,228 samples, 0.04%)</title><rect x="12.9948%" y="1765" width="0.0392%" height="15" fill="rgb(245,15,52)" fg:x="3492794483" fg:w="10524228"/><text x="13.2448%" y="1775.50"></text></g><g><title>Builtins_JSRunMicrotasksEntry (10,524,228 samples, 0.04%)</title><rect x="12.9948%" y="1749" width="0.0392%" height="15" fill="rgb(220,133,28)" fg:x="3492794483" fg:w="10524228"/><text x="13.2448%" y="1759.50"></text></g><g><title>Builtins_RunMicrotasks (10,524,228 samples, 0.04%)</title><rect x="12.9948%" y="1733" width="0.0392%" height="15" fill="rgb(217,180,4)" fg:x="3492794483" fg:w="10524228"/><text x="13.2448%" y="1743.50"></text></g><g><title>Builtins_PromiseFulfillReactionJob (9,847,706 samples, 0.04%)</title><rect x="12.9973%" y="1717" width="0.0366%" height="15" fill="rgb(251,24,1)" fg:x="3493471005" fg:w="9847706"/><text x="13.2473%" y="1727.50"></text></g><g><title>node::fs::FileHandle::ClosePromise (11,960,512 samples, 0.04%)</title><rect x="12.9920%" y="1893" width="0.0445%" height="15" fill="rgb(212,185,49)" fg:x="3492055374" fg:w="11960512"/><text x="13.2420%" y="1903.50"></text></g><g><title>node::fs::FileHandle::CloseReq::Resolve (11,960,512 samples, 0.04%)</title><rect x="12.9920%" y="1877" width="0.0445%" height="15" fill="rgb(215,175,22)" fg:x="3492055374" fg:w="11960512"/><text x="13.2420%" y="1887.50"></text></g><g><title>node::MakeLibuvRequestCallback&lt;uv_fs_s, void (*)(uv_fs_s*)&gt;::Wrapper (233,532,220 samples, 0.87%)</title><rect x="12.1727%" y="1909" width="0.8688%" height="15" fill="rgb(250,205,14)" fg:x="3271823395" fg:w="233532220"/><text x="12.4227%" y="1919.50"></text></g><g><title>uv__async_io.part.3 (261,787,334 samples, 0.97%)</title><rect x="12.0703%" y="1941" width="0.9740%" height="15" fill="rgb(225,211,22)" fg:x="3244300371" fg:w="261787334"/><text x="12.3203%" y="1951.50"></text></g><g><title>uv__work_done (234,975,891 samples, 0.87%)</title><rect x="12.1700%" y="1925" width="0.8742%" height="15" fill="rgb(251,179,42)" fg:x="3271111814" fg:w="234975891"/><text x="12.4200%" y="1935.50"></text></g><g><title>Builtins_AsyncFunctionAwaitResolveClosure (4,915,913 samples, 0.02%)</title><rect x="13.0526%" y="1605" width="0.0183%" height="15" fill="rgb(208,216,51)" fg:x="3508332256" fg:w="4915913"/><text x="13.3026%" y="1615.50"></text></g><g><title>[perf-5264.map] (4,915,913 samples, 0.02%)</title><rect x="13.0526%" y="1589" width="0.0183%" height="15" fill="rgb(235,36,11)" fg:x="3508332256" fg:w="4915913"/><text x="13.3026%" y="1599.50"></text></g><g><title>[perf-5264.map] (4,406,017 samples, 0.02%)</title><rect x="13.0545%" y="1573" width="0.0164%" height="15" fill="rgb(213,189,28)" fg:x="3508842152" fg:w="4406017"/><text x="13.3045%" y="1583.50"></text></g><g><title>node::InternalCallbackScope::Close (5,205,270 samples, 0.02%)</title><rect x="13.0526%" y="1861" width="0.0194%" height="15" fill="rgb(227,203,42)" fg:x="3508332256" fg:w="5205270"/><text x="13.3026%" y="1871.50"></text></g><g><title>v8::Function::Call (5,205,270 samples, 0.02%)</title><rect x="13.0526%" y="1845" width="0.0194%" height="15" fill="rgb(244,72,36)" fg:x="3508332256" fg:w="5205270"/><text x="13.3026%" y="1855.50"></text></g><g><title>v8::internal::Execution::Call (5,205,270 samples, 0.02%)</title><rect x="13.0526%" y="1829" width="0.0194%" height="15" fill="rgb(213,53,17)" fg:x="3508332256" fg:w="5205270"/><text x="13.3026%" y="1839.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (5,205,270 samples, 0.02%)</title><rect x="13.0526%" y="1813" width="0.0194%" height="15" fill="rgb(207,167,3)" fg:x="3508332256" fg:w="5205270"/><text x="13.3026%" y="1823.50"></text></g><g><title>Builtins_JSEntry (5,205,270 samples, 0.02%)</title><rect x="13.0526%" y="1797" width="0.0194%" height="15" fill="rgb(216,98,30)" fg:x="3508332256" fg:w="5205270"/><text x="13.3026%" y="1807.50"></text></g><g><title>Builtins_JSEntryTrampoline (5,205,270 samples, 0.02%)</title><rect x="13.0526%" y="1781" width="0.0194%" height="15" fill="rgb(236,123,15)" fg:x="3508332256" fg:w="5205270"/><text x="13.3026%" y="1791.50"></text></g><g><title>[perf-5264.map] (5,205,270 samples, 0.02%)</title><rect x="13.0526%" y="1765" width="0.0194%" height="15" fill="rgb(248,81,50)" fg:x="3508332256" fg:w="5205270"/><text x="13.3026%" y="1775.50"></text></g><g><title>Builtins_CallApiCallback (5,205,270 samples, 0.02%)</title><rect x="13.0526%" y="1749" width="0.0194%" height="15" fill="rgb(214,120,4)" fg:x="3508332256" fg:w="5205270"/><text x="13.3026%" y="1759.50"></text></g><g><title>v8::internal::MicrotaskQueue::PerformCheckpoint (5,205,270 samples, 0.02%)</title><rect x="13.0526%" y="1733" width="0.0194%" height="15" fill="rgb(208,179,34)" fg:x="3508332256" fg:w="5205270"/><text x="13.3026%" y="1743.50"></text></g><g><title>v8::internal::MicrotaskQueue::RunMicrotasks (5,205,270 samples, 0.02%)</title><rect x="13.0526%" y="1717" width="0.0194%" height="15" fill="rgb(227,140,7)" fg:x="3508332256" fg:w="5205270"/><text x="13.3026%" y="1727.50"></text></g><g><title>v8::internal::Execution::TryRunMicrotasks (5,205,270 samples, 0.02%)</title><rect x="13.0526%" y="1701" width="0.0194%" height="15" fill="rgb(214,22,6)" fg:x="3508332256" fg:w="5205270"/><text x="13.3026%" y="1711.50"></text></g><g><title>v8::internal::(anonymous namespace)::InvokeWithTryCatch (5,205,270 samples, 0.02%)</title><rect x="13.0526%" y="1685" width="0.0194%" height="15" fill="rgb(207,137,27)" fg:x="3508332256" fg:w="5205270"/><text x="13.3026%" y="1695.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (5,205,270 samples, 0.02%)</title><rect x="13.0526%" y="1669" width="0.0194%" height="15" fill="rgb(210,8,46)" fg:x="3508332256" fg:w="5205270"/><text x="13.3026%" y="1679.50"></text></g><g><title>Builtins_JSRunMicrotasksEntry (5,205,270 samples, 0.02%)</title><rect x="13.0526%" y="1653" width="0.0194%" height="15" fill="rgb(240,16,54)" fg:x="3508332256" fg:w="5205270"/><text x="13.3026%" y="1663.50"></text></g><g><title>Builtins_RunMicrotasks (5,205,270 samples, 0.02%)</title><rect x="13.0526%" y="1637" width="0.0194%" height="15" fill="rgb(211,209,29)" fg:x="3508332256" fg:w="5205270"/><text x="13.3026%" y="1647.50"></text></g><g><title>Builtins_PromiseFulfillReactionJob (5,205,270 samples, 0.02%)</title><rect x="13.0526%" y="1621" width="0.0194%" height="15" fill="rgb(226,228,24)" fg:x="3508332256" fg:w="5205270"/><text x="13.3026%" y="1631.50"></text></g><g><title>uv__signal_event (6,633,889 samples, 0.02%)</title><rect x="13.0499%" y="1941" width="0.0247%" height="15" fill="rgb(222,84,9)" fg:x="3507610310" fg:w="6633889"/><text x="13.2999%" y="1951.50"></text></g><g><title>uv__wait_children (6,216,664 samples, 0.02%)</title><rect x="13.0514%" y="1925" width="0.0231%" height="15" fill="rgb(234,203,30)" fg:x="3508027535" fg:w="6216664"/><text x="13.3014%" y="1935.50"></text></g><g><title>node::(anonymous namespace)::ProcessWrap::OnExit (6,216,664 samples, 0.02%)</title><rect x="13.0514%" y="1909" width="0.0231%" height="15" fill="rgb(238,109,14)" fg:x="3508027535" fg:w="6216664"/><text x="13.3014%" y="1919.50"></text></g><g><title>node::AsyncWrap::MakeCallback (5,911,943 samples, 0.02%)</title><rect x="13.0526%" y="1893" width="0.0220%" height="15" fill="rgb(233,206,34)" fg:x="3508332256" fg:w="5911943"/><text x="13.3026%" y="1903.50"></text></g><g><title>node::InternalMakeCallback (5,911,943 samples, 0.02%)</title><rect x="13.0526%" y="1877" width="0.0220%" height="15" fill="rgb(220,167,47)" fg:x="3508332256" fg:w="5911943"/><text x="13.3026%" y="1887.50"></text></g><g><title>v8::internal::JsonParser&lt;unsigned char&gt;::BuildJsonObject (3,315,657 samples, 0.01%)</title><rect x="13.0960%" y="1541" width="0.0123%" height="15" fill="rgb(238,105,10)" fg:x="3520014252" fg:w="3315657"/><text x="13.3460%" y="1551.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_BuiltinExit (7,686,280 samples, 0.03%)</title><rect x="13.0899%" y="1605" width="0.0286%" height="15" fill="rgb(213,227,17)" fg:x="3518373618" fg:w="7686280"/><text x="13.3399%" y="1615.50"></text></g><g><title>v8::internal::Builtin_JsonParse (7,686,280 samples, 0.03%)</title><rect x="13.0899%" y="1589" width="0.0286%" height="15" fill="rgb(217,132,38)" fg:x="3518373618" fg:w="7686280"/><text x="13.3399%" y="1599.50"></text></g><g><title>v8::internal::JsonParser&lt;unsigned char&gt;::ParseJson (7,265,759 samples, 0.03%)</title><rect x="13.0915%" y="1573" width="0.0270%" height="15" fill="rgb(242,146,4)" fg:x="3518794139" fg:w="7265759"/><text x="13.3415%" y="1583.50"></text></g><g><title>v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::JsonParser&lt;unsigned char&gt;::ParseJsonValue&lt;false&gt; (6,996,473 samples, 0.03%)</title><rect x="13.0925%" y="1557" width="0.0260%" height="15" fill="rgb(212,61,9)" fg:x="3519063425" fg:w="6996473"/><text x="13.3425%" y="1567.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_BuiltinExit (7,796,561 samples, 0.03%)</title><rect x="13.1287%" y="1477" width="0.0290%" height="15" fill="rgb(247,126,22)" fg:x="3528795979" fg:w="7796561"/><text x="13.3787%" y="1487.50"></text></g><g><title>v8::internal::Builtin_JsonStringify (7,796,561 samples, 0.03%)</title><rect x="13.1287%" y="1461" width="0.0290%" height="15" fill="rgb(220,196,2)" fg:x="3528795979" fg:w="7796561"/><text x="13.3787%" y="1471.50"></text></g><g><title>v8::internal::JsonStringify (7,796,561 samples, 0.03%)</title><rect x="13.1287%" y="1445" width="0.0290%" height="15" fill="rgb(208,46,4)" fg:x="3528795979" fg:w="7796561"/><text x="13.3787%" y="1455.50"></text></g><g><title>v8::internal::JsonStringifier::Stringify (7,796,561 samples, 0.03%)</title><rect x="13.1287%" y="1429" width="0.0290%" height="15" fill="rgb(252,104,46)" fg:x="3528795979" fg:w="7796561"/><text x="13.3787%" y="1439.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (6,325,632 samples, 0.02%)</title><rect x="13.1342%" y="1413" width="0.0235%" height="15" fill="rgb(237,152,48)" fg:x="3530266908" fg:w="6325632"/><text x="13.3842%" y="1423.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (4,639,467 samples, 0.02%)</title><rect x="13.1405%" y="1397" width="0.0173%" height="15" fill="rgb(221,59,37)" fg:x="3531953073" fg:w="4639467"/><text x="13.3905%" y="1407.50"></text></g><g><title>[perf-5221.map] (14,841,651 samples, 0.06%)</title><rect x="13.1237%" y="1557" width="0.0552%" height="15" fill="rgb(209,202,51)" fg:x="3527440975" fg:w="14841651"/><text x="13.3737%" y="1567.50"></text></g><g><title>[perf-5221.map] (14,841,651 samples, 0.06%)</title><rect x="13.1237%" y="1541" width="0.0552%" height="15" fill="rgb(228,81,30)" fg:x="3527440975" fg:w="14841651"/><text x="13.3737%" y="1551.50"></text></g><g><title>[perf-5221.map] (14,499,693 samples, 0.05%)</title><rect x="13.1249%" y="1525" width="0.0539%" height="15" fill="rgb(227,42,39)" fg:x="3527782933" fg:w="14499693"/><text x="13.3749%" y="1535.50"></text></g><g><title>[perf-5221.map] (14,499,693 samples, 0.05%)</title><rect x="13.1249%" y="1509" width="0.0539%" height="15" fill="rgb(221,26,2)" fg:x="3527782933" fg:w="14499693"/><text x="13.3749%" y="1519.50"></text></g><g><title>[perf-5221.map] (13,486,647 samples, 0.05%)</title><rect x="13.1287%" y="1493" width="0.0502%" height="15" fill="rgb(254,61,31)" fg:x="3528795979" fg:w="13486647"/><text x="13.3787%" y="1503.50"></text></g><g><title>[perf-5221.map] (4,688,990 samples, 0.02%)</title><rect x="13.1614%" y="1477" width="0.0174%" height="15" fill="rgb(222,173,38)" fg:x="3537593636" fg:w="4688990"/><text x="13.4114%" y="1487.50"></text></g><g><title>[perf-5221.map] (25,887,665 samples, 0.10%)</title><rect x="13.0841%" y="1717" width="0.0963%" height="15" fill="rgb(218,50,12)" fg:x="3516799525" fg:w="25887665"/><text x="13.3341%" y="1727.50"></text></g><g><title>[perf-5221.map] (25,887,665 samples, 0.10%)</title><rect x="13.0841%" y="1701" width="0.0963%" height="15" fill="rgb(223,88,40)" fg:x="3516799525" fg:w="25887665"/><text x="13.3341%" y="1711.50"></text></g><g><title>[perf-5221.map] (25,784,211 samples, 0.10%)</title><rect x="13.0845%" y="1685" width="0.0959%" height="15" fill="rgb(237,54,19)" fg:x="3516902979" fg:w="25784211"/><text x="13.3345%" y="1695.50"></text></g><g><title>[perf-5221.map] (25,784,211 samples, 0.10%)</title><rect x="13.0845%" y="1669" width="0.0959%" height="15" fill="rgb(251,129,25)" fg:x="3516902979" fg:w="25784211"/><text x="13.3345%" y="1679.50"></text></g><g><title>[perf-5221.map] (25,784,211 samples, 0.10%)</title><rect x="13.0845%" y="1653" width="0.0959%" height="15" fill="rgb(238,97,19)" fg:x="3516902979" fg:w="25784211"/><text x="13.3345%" y="1663.50"></text></g><g><title>[perf-5221.map] (24,859,679 samples, 0.09%)</title><rect x="13.0879%" y="1637" width="0.0925%" height="15" fill="rgb(240,169,18)" fg:x="3517827511" fg:w="24859679"/><text x="13.3379%" y="1647.50"></text></g><g><title>[perf-5221.map] (24,313,572 samples, 0.09%)</title><rect x="13.0899%" y="1621" width="0.0905%" height="15" fill="rgb(230,187,49)" fg:x="3518373618" fg:w="24313572"/><text x="13.3399%" y="1631.50"></text></g><g><title>[perf-5221.map] (16,148,188 samples, 0.06%)</title><rect x="13.1203%" y="1605" width="0.0601%" height="15" fill="rgb(209,44,26)" fg:x="3526539002" fg:w="16148188"/><text x="13.3703%" y="1615.50"></text></g><g><title>[perf-5221.map] (15,246,215 samples, 0.06%)</title><rect x="13.1237%" y="1589" width="0.0567%" height="15" fill="rgb(244,0,6)" fg:x="3527440975" fg:w="15246215"/><text x="13.3737%" y="1599.50"></text></g><g><title>[perf-5221.map] (15,246,215 samples, 0.06%)</title><rect x="13.1237%" y="1573" width="0.0567%" height="15" fill="rgb(248,18,21)" fg:x="3527440975" fg:w="15246215"/><text x="13.3737%" y="1583.50"></text></g><g><title>node::InternalCallbackScope::Close (28,208,388 samples, 0.10%)</title><rect x="13.0835%" y="1813" width="0.1049%" height="15" fill="rgb(245,180,19)" fg:x="3516655413" fg:w="28208388"/><text x="13.3335%" y="1823.50"></text></g><g><title>v8::Function::Call (28,208,388 samples, 0.10%)</title><rect x="13.0835%" y="1797" width="0.1049%" height="15" fill="rgb(252,118,36)" fg:x="3516655413" fg:w="28208388"/><text x="13.3335%" y="1807.50"></text></g><g><title>v8::internal::Execution::Call (28,064,276 samples, 0.10%)</title><rect x="13.0841%" y="1781" width="0.1044%" height="15" fill="rgb(210,224,19)" fg:x="3516799525" fg:w="28064276"/><text x="13.3341%" y="1791.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (28,064,276 samples, 0.10%)</title><rect x="13.0841%" y="1765" width="0.1044%" height="15" fill="rgb(218,30,24)" fg:x="3516799525" fg:w="28064276"/><text x="13.3341%" y="1775.50"></text></g><g><title>Builtins_JSEntry (28,064,276 samples, 0.10%)</title><rect x="13.0841%" y="1749" width="0.1044%" height="15" fill="rgb(219,75,50)" fg:x="3516799525" fg:w="28064276"/><text x="13.3341%" y="1759.50"></text></g><g><title>Builtins_JSEntryTrampoline (28,064,276 samples, 0.10%)</title><rect x="13.0841%" y="1733" width="0.1044%" height="15" fill="rgb(234,72,50)" fg:x="3516799525" fg:w="28064276"/><text x="13.3341%" y="1743.50"></text></g><g><title>[perf-5221.map] (2,717,550 samples, 0.01%)</title><rect x="13.1891%" y="1733" width="0.0101%" height="15" fill="rgb(219,100,48)" fg:x="3545036784" fg:w="2717550"/><text x="13.4391%" y="1743.50"></text></g><g><title>Builtins_GeneratorPrototypeNext (2,717,550 samples, 0.01%)</title><rect x="13.1891%" y="1717" width="0.0101%" height="15" fill="rgb(253,5,41)" fg:x="3545036784" fg:w="2717550"/><text x="13.4391%" y="1727.50"></text></g><g><title>[perf-5221.map] (2,717,550 samples, 0.01%)</title><rect x="13.1891%" y="1701" width="0.0101%" height="15" fill="rgb(247,181,11)" fg:x="3545036784" fg:w="2717550"/><text x="13.4391%" y="1711.50"></text></g><g><title>long v8::internal::SearchStringRaw&lt;unsigned char const, unsigned char const&gt; (3,462,726 samples, 0.01%)</title><rect x="13.2498%" y="1477" width="0.0129%" height="15" fill="rgb(222,223,25)" fg:x="3561338822" fg:w="3462726"/><text x="13.4998%" y="1487.50"></text></g><g><title>Builtins_StringIndexOf (5,516,962 samples, 0.02%)</title><rect x="13.2447%" y="1493" width="0.0205%" height="15" fill="rgb(214,198,28)" fg:x="3559972735" fg:w="5516962"/><text x="13.4947%" y="1503.50"></text></g><g><title>v8::internal::Runtime_AddDictionaryProperty (3,806,772 samples, 0.01%)</title><rect x="13.3725%" y="1397" width="0.0142%" height="15" fill="rgb(230,46,43)" fg:x="3594330482" fg:w="3806772"/><text x="13.6225%" y="1407.50"></text></g><g><title>v8::internal::BaseNameDictionary&lt;v8::internal::NameDictionary, v8::internal::NameDictionaryShape&gt;::Add (3,806,772 samples, 0.01%)</title><rect x="13.3725%" y="1381" width="0.0142%" height="15" fill="rgb(233,65,53)" fg:x="3594330482" fg:w="3806772"/><text x="13.6225%" y="1391.50"></text></g><g><title>v8::internal::Handle&lt;v8::internal::NameDictionary&gt; v8::internal::Dictionary&lt;v8::internal::NameDictionary, v8::internal::NameDictionaryShape&gt;::Add&lt;v8::internal::Isolate&gt; (3,806,772 samples, 0.01%)</title><rect x="13.3725%" y="1365" width="0.0142%" height="15" fill="rgb(221,121,27)" fg:x="3594330482" fg:w="3806772"/><text x="13.6225%" y="1375.50"></text></g><g><title>v8::internal::Handle&lt;v8::internal::NameDictionary&gt; v8::internal::HashTable&lt;v8::internal::NameDictionary, v8::internal::NameDictionaryShape&gt;::EnsureCapacity&lt;v8::internal::Isolate&gt; (3,806,772 samples, 0.01%)</title><rect x="13.3725%" y="1349" width="0.0142%" height="15" fill="rgb(247,70,47)" fg:x="3594330482" fg:w="3806772"/><text x="13.6225%" y="1359.50"></text></g><g><title>v8::internal::LookupIterator::ApplyTransitionToDataProperty (4,204,530 samples, 0.02%)</title><rect x="13.3974%" y="1317" width="0.0156%" height="15" fill="rgb(228,85,35)" fg:x="3601005531" fg:w="4204530"/><text x="13.6474%" y="1327.50"></text></g><g><title>v8::internal::JSObject::MigrateToMap (4,204,530 samples, 0.02%)</title><rect x="13.3974%" y="1301" width="0.0156%" height="15" fill="rgb(209,50,18)" fg:x="3601005531" fg:w="4204530"/><text x="13.6474%" y="1311.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_NoBuiltinExit (11,835,160 samples, 0.04%)</title><rect x="13.3705%" y="1413" width="0.0440%" height="15" fill="rgb(250,19,35)" fg:x="3593779519" fg:w="11835160"/><text x="13.6205%" y="1423.50"></text></g><g><title>v8::internal::Runtime_SetKeyedProperty (6,335,905 samples, 0.02%)</title><rect x="13.3909%" y="1397" width="0.0236%" height="15" fill="rgb(253,107,29)" fg:x="3599278774" fg:w="6335905"/><text x="13.6409%" y="1407.50"></text></g><g><title>v8::internal::Runtime::SetObjectProperty (6,335,905 samples, 0.02%)</title><rect x="13.3909%" y="1381" width="0.0236%" height="15" fill="rgb(252,179,29)" fg:x="3599278774" fg:w="6335905"/><text x="13.6409%" y="1391.50"></text></g><g><title>v8::internal::Object::SetProperty (5,788,785 samples, 0.02%)</title><rect x="13.3930%" y="1365" width="0.0215%" height="15" fill="rgb(238,194,6)" fg:x="3599825894" fg:w="5788785"/><text x="13.6430%" y="1375.50"></text></g><g><title>v8::internal::Object::AddDataProperty (5,157,882 samples, 0.02%)</title><rect x="13.3953%" y="1349" width="0.0192%" height="15" fill="rgb(238,164,29)" fg:x="3600456797" fg:w="5157882"/><text x="13.6453%" y="1359.50"></text></g><g><title>v8::internal::Object::TransitionAndWriteDataProperty (5,157,882 samples, 0.02%)</title><rect x="13.3953%" y="1333" width="0.0192%" height="15" fill="rgb(224,25,9)" fg:x="3600456797" fg:w="5157882"/><text x="13.6453%" y="1343.50"></text></g><g><title>Builtins_KeyedHasIC_Megamorphic (5,787,225 samples, 0.02%)</title><rect x="13.4170%" y="1413" width="0.0215%" height="15" fill="rgb(244,153,23)" fg:x="3606271740" fg:w="5787225"/><text x="13.6670%" y="1423.50"></text></g><g><title>Builtins_KeyedLoadIC_Megamorphic (4,716,508 samples, 0.02%)</title><rect x="13.4385%" y="1413" width="0.0175%" height="15" fill="rgb(212,203,14)" fg:x="3612058965" fg:w="4716508"/><text x="13.6885%" y="1423.50"></text></g><g><title>Builtins_KeyedStoreIC_Megamorphic (3,433,373 samples, 0.01%)</title><rect x="13.4560%" y="1413" width="0.0128%" height="15" fill="rgb(220,164,20)" fg:x="3616775473" fg:w="3433373"/><text x="13.7060%" y="1423.50"></text></g><g><title>v8::internal::JSReceiver::GetOwnPropertyDescriptor (3,336,640 samples, 0.01%)</title><rect x="13.4809%" y="1253" width="0.0124%" height="15" fill="rgb(222,203,48)" fg:x="3623451551" fg:w="3336640"/><text x="13.7309%" y="1263.50"></text></g><g><title>v8::internal::JSReceiver::GetOwnPropertyDescriptor (8,885,664 samples, 0.03%)</title><rect x="13.4809%" y="1269" width="0.0331%" height="15" fill="rgb(215,159,22)" fg:x="3623451551" fg:w="8885664"/><text x="13.7309%" y="1279.50"></text></g><g><title>void v8::internal::LookupIterator::Start&lt;false&gt; (3,688,202 samples, 0.01%)</title><rect x="13.5002%" y="1253" width="0.0137%" height="15" fill="rgb(216,183,47)" fg:x="3628649013" fg:w="3688202"/><text x="13.7502%" y="1263.50"></text></g><g><title>v8::internal::LookupIterator::State v8::internal::LookupIterator::LookupInRegularHolder&lt;false&gt; (3,688,202 samples, 0.01%)</title><rect x="13.5002%" y="1237" width="0.0137%" height="15" fill="rgb(229,195,25)" fg:x="3628649013" fg:w="3688202"/><text x="13.7502%" y="1247.50"></text></g><g><title>v8::internal::FilterProxyKeys (15,501,211 samples, 0.06%)</title><rect x="13.4688%" y="1301" width="0.0577%" height="15" fill="rgb(224,132,51)" fg:x="3620208846" fg:w="15501211"/><text x="13.7188%" y="1311.50"></text></g><g><title>v8::internal::JSProxy::GetOwnPropertyDescriptor (14,349,349 samples, 0.05%)</title><rect x="13.4731%" y="1285" width="0.0534%" height="15" fill="rgb(240,63,7)" fg:x="3621360708" fg:w="14349349"/><text x="13.7231%" y="1295.50"></text></g><g><title>v8::internal::Object::GetMethod (3,372,842 samples, 0.01%)</title><rect x="13.5139%" y="1269" width="0.0125%" height="15" fill="rgb(249,182,41)" fg:x="3632337215" fg:w="3372842"/><text x="13.7639%" y="1279.50"></text></g><g><title>v8::internal::JSReceiver::GetProperty (2,961,834 samples, 0.01%)</title><rect x="13.5155%" y="1253" width="0.0110%" height="15" fill="rgb(243,47,26)" fg:x="3632748223" fg:w="2961834"/><text x="13.7655%" y="1263.50"></text></g><g><title>v8::internal::KeyAccumulator::AddKey (10,459,106 samples, 0.04%)</title><rect x="13.5283%" y="1285" width="0.0389%" height="15" fill="rgb(233,48,2)" fg:x="3636210843" fg:w="10459106"/><text x="13.7783%" y="1295.50"></text></g><g><title>v8::internal::OrderedHashSet::Add (8,214,026 samples, 0.03%)</title><rect x="13.5367%" y="1269" width="0.0306%" height="15" fill="rgb(244,165,34)" fg:x="3638455923" fg:w="8214026"/><text x="13.7867%" y="1279.50"></text></g><g><title>v8::internal::KeyAccumulator::AddKeys (11,648,818 samples, 0.04%)</title><rect x="13.5265%" y="1301" width="0.0433%" height="15" fill="rgb(207,89,7)" fg:x="3635710057" fg:w="11648818"/><text x="13.7765%" y="1311.50"></text></g><g><title>v8::internal::OrderedHashTable&lt;v8::internal::OrderedHashSet, 1&gt;::Rehash (3,258,790 samples, 0.01%)</title><rect x="13.5967%" y="1205" width="0.0121%" height="15" fill="rgb(244,117,36)" fg:x="3654594956" fg:w="3258790"/><text x="13.8467%" y="1215.50"></text></g><g><title>v8::internal::KeyAccumulator::AddKey (8,503,226 samples, 0.03%)</title><rect x="13.5813%" y="1237" width="0.0316%" height="15" fill="rgb(226,144,34)" fg:x="3650446271" fg:w="8503226"/><text x="13.8313%" y="1247.50"></text></g><g><title>v8::internal::OrderedHashSet::Add (6,914,983 samples, 0.03%)</title><rect x="13.5872%" y="1221" width="0.0257%" height="15" fill="rgb(213,23,19)" fg:x="3652034514" fg:w="6914983"/><text x="13.8372%" y="1231.50"></text></g><g><title>v8::internal::ExceptionStatus v8::internal::(anonymous namespace)::CollectKeysFromDictionary&lt;v8::internal::NameDictionary&gt; (14,388,655 samples, 0.05%)</title><rect x="13.5698%" y="1253" width="0.0535%" height="15" fill="rgb(217,75,12)" fg:x="3647358875" fg:w="14388655"/><text x="13.8198%" y="1263.50"></text></g><g><title>v8::internal::KeyAccumulator::CollectKeys (16,813,842 samples, 0.06%)</title><rect x="13.5698%" y="1301" width="0.0626%" height="15" fill="rgb(224,159,17)" fg:x="3647358875" fg:w="16813842"/><text x="13.8198%" y="1311.50"></text></g><g><title>v8::internal::KeyAccumulator::CollectOwnKeys (16,813,842 samples, 0.06%)</title><rect x="13.5698%" y="1285" width="0.0626%" height="15" fill="rgb(217,118,1)" fg:x="3647358875" fg:w="16813842"/><text x="13.8198%" y="1295.50"></text></g><g><title>v8::internal::KeyAccumulator::CollectOwnPropertyNames (16,813,842 samples, 0.06%)</title><rect x="13.5698%" y="1269" width="0.0626%" height="15" fill="rgb(232,180,48)" fg:x="3647358875" fg:w="16813842"/><text x="13.8198%" y="1279.50"></text></g><g><title>v8::internal::KeyAccumulator::CollectKeys (45,249,131 samples, 0.17%)</title><rect x="13.4688%" y="1349" width="0.1683%" height="15" fill="rgb(230,27,33)" fg:x="3620208846" fg:w="45249131"/><text x="13.7188%" y="1359.50"></text></g><g><title>v8::internal::KeyAccumulator::CollectOwnJSProxyKeys (45,249,131 samples, 0.17%)</title><rect x="13.4688%" y="1333" width="0.1683%" height="15" fill="rgb(205,31,21)" fg:x="3620208846" fg:w="45249131"/><text x="13.7188%" y="1343.50"></text></g><g><title>v8::internal::KeyAccumulator::CollectOwnJSProxyTargetKeys (45,249,131 samples, 0.17%)</title><rect x="13.4688%" y="1317" width="0.1683%" height="15" fill="rgb(253,59,4)" fg:x="3620208846" fg:w="45249131"/><text x="13.7188%" y="1327.50"></text></g><g><title>Builtins_ObjectKeys (45,566,485 samples, 0.17%)</title><rect x="13.4688%" y="1413" width="0.1695%" height="15" fill="rgb(224,201,9)" fg:x="3620208846" fg:w="45566485"/><text x="13.7188%" y="1423.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_NoBuiltinExit (45,566,485 samples, 0.17%)</title><rect x="13.4688%" y="1397" width="0.1695%" height="15" fill="rgb(229,206,30)" fg:x="3620208846" fg:w="45566485"/><text x="13.7188%" y="1407.50"></text></g><g><title>v8::internal::Runtime_ObjectKeys (45,566,485 samples, 0.17%)</title><rect x="13.4688%" y="1381" width="0.1695%" height="15" fill="rgb(212,67,47)" fg:x="3620208846" fg:w="45566485"/><text x="13.7188%" y="1391.50"></text></g><g><title>v8::internal::KeyAccumulator::GetKeys (45,566,485 samples, 0.17%)</title><rect x="13.4688%" y="1365" width="0.1695%" height="15" fill="rgb(211,96,50)" fg:x="3620208846" fg:w="45566485"/><text x="13.7188%" y="1375.50"></text></g><g><title>Builtins_GetProperty (3,497,465 samples, 0.01%)</title><rect x="13.6450%" y="1397" width="0.0130%" height="15" fill="rgb(252,114,18)" fg:x="3667569503" fg:w="3497465"/><text x="13.8950%" y="1407.50"></text></g><g><title>Builtins_ProxyGetProperty (12,600,482 samples, 0.05%)</title><rect x="13.6383%" y="1413" width="0.0469%" height="15" fill="rgb(223,58,37)" fg:x="3665775331" fg:w="12600482"/><text x="13.8883%" y="1423.50"></text></g><g><title>[perf-5264.map] (7,308,845 samples, 0.03%)</title><rect x="13.6580%" y="1397" width="0.0272%" height="15" fill="rgb(237,70,4)" fg:x="3671066968" fg:w="7308845"/><text x="13.9080%" y="1407.50"></text></g><g><title>Builtins_KeyedLoadIC_Megamorphic (3,161,741 samples, 0.01%)</title><rect x="13.6734%" y="1381" width="0.0118%" height="15" fill="rgb(244,85,46)" fg:x="3675214072" fg:w="3161741"/><text x="13.9234%" y="1391.50"></text></g><g><title>[perf-5264.map] (101,196,683 samples, 0.38%)</title><rect x="13.3156%" y="1461" width="0.3765%" height="15" fill="rgb(223,39,52)" fg:x="3579023412" fg:w="101196683"/><text x="13.5656%" y="1471.50"></text></g><g><title>[perf-5264.map] (95,160,374 samples, 0.35%)</title><rect x="13.3380%" y="1445" width="0.3540%" height="15" fill="rgb(218,200,14)" fg:x="3585059721" fg:w="95160374"/><text x="13.5880%" y="1455.50"></text></g><g><title>[perf-5264.map] (90,166,391 samples, 0.34%)</title><rect x="13.3566%" y="1429" width="0.3355%" height="15" fill="rgb(208,171,16)" fg:x="3590053704" fg:w="90166391"/><text x="13.6066%" y="1439.50"></text></g><g><title>[perf-5264.map] (115,404,403 samples, 0.43%)</title><rect x="13.2652%" y="1493" width="0.4294%" height="15" fill="rgb(234,200,18)" fg:x="3565489697" fg:w="115404403"/><text x="13.5152%" y="1503.50"></text></g><g><title>[perf-5264.map] (109,807,252 samples, 0.41%)</title><rect x="13.2860%" y="1477" width="0.4085%" height="15" fill="rgb(228,45,11)" fg:x="3571086848" fg:w="109807252"/><text x="13.5360%" y="1487.50"></text></g><g><title>[perf-5264.map] (133,840,534 samples, 0.50%)</title><rect x="13.1992%" y="1733" width="0.4979%" height="15" fill="rgb(237,182,11)" fg:x="3547754334" fg:w="133840534"/><text x="13.4492%" y="1743.50"></text></g><g><title>[perf-5264.map] (133,840,534 samples, 0.50%)</title><rect x="13.1992%" y="1717" width="0.4979%" height="15" fill="rgb(241,175,49)" fg:x="3547754334" fg:w="133840534"/><text x="13.4492%" y="1727.50"></text></g><g><title>[perf-5264.map] (133,840,534 samples, 0.50%)</title><rect x="13.1992%" y="1701" width="0.4979%" height="15" fill="rgb(247,38,35)" fg:x="3547754334" fg:w="133840534"/><text x="13.4492%" y="1711.50"></text></g><g><title>[perf-5264.map] (133,191,405 samples, 0.50%)</title><rect x="13.2017%" y="1685" width="0.4955%" height="15" fill="rgb(228,39,49)" fg:x="3548403463" fg:w="133191405"/><text x="13.4517%" y="1695.50"></text></g><g><title>[perf-5264.map] (132,414,536 samples, 0.49%)</title><rect x="13.2045%" y="1669" width="0.4926%" height="15" fill="rgb(226,101,26)" fg:x="3549180332" fg:w="132414536"/><text x="13.4545%" y="1679.50"></text></g><g><title>[perf-5264.map] (132,414,536 samples, 0.49%)</title><rect x="13.2045%" y="1653" width="0.4926%" height="15" fill="rgb(206,141,19)" fg:x="3549180332" fg:w="132414536"/><text x="13.4545%" y="1663.50"></text></g><g><title>[perf-5264.map] (132,414,536 samples, 0.49%)</title><rect x="13.2045%" y="1637" width="0.4926%" height="15" fill="rgb(211,200,13)" fg:x="3549180332" fg:w="132414536"/><text x="13.4545%" y="1647.50"></text></g><g><title>[perf-5264.map] (132,259,811 samples, 0.49%)</title><rect x="13.2051%" y="1621" width="0.4921%" height="15" fill="rgb(241,121,6)" fg:x="3549335057" fg:w="132259811"/><text x="13.4551%" y="1631.50"></text></g><g><title>[perf-5264.map] (132,259,811 samples, 0.49%)</title><rect x="13.2051%" y="1605" width="0.4921%" height="15" fill="rgb(234,221,29)" fg:x="3549335057" fg:w="132259811"/><text x="13.4551%" y="1615.50"></text></g><g><title>[perf-5264.map] (132,259,811 samples, 0.49%)</title><rect x="13.2051%" y="1589" width="0.4921%" height="15" fill="rgb(229,136,5)" fg:x="3549335057" fg:w="132259811"/><text x="13.4551%" y="1599.50"></text></g><g><title>[perf-5264.map] (132,259,811 samples, 0.49%)</title><rect x="13.2051%" y="1573" width="0.4921%" height="15" fill="rgb(238,36,11)" fg:x="3549335057" fg:w="132259811"/><text x="13.4551%" y="1583.50"></text></g><g><title>[perf-5264.map] (131,510,931 samples, 0.49%)</title><rect x="13.2079%" y="1557" width="0.4893%" height="15" fill="rgb(251,55,41)" fg:x="3550083937" fg:w="131510931"/><text x="13.4579%" y="1567.50"></text></g><g><title>[perf-5264.map] (131,040,101 samples, 0.49%)</title><rect x="13.2097%" y="1541" width="0.4875%" height="15" fill="rgb(242,34,40)" fg:x="3550554767" fg:w="131040101"/><text x="13.4597%" y="1551.50"></text></g><g><title>[perf-5264.map] (130,356,070 samples, 0.48%)</title><rect x="13.2122%" y="1525" width="0.4850%" height="15" fill="rgb(215,42,17)" fg:x="3551238798" fg:w="130356070"/><text x="13.4622%" y="1535.50"></text></g><g><title>[perf-5264.map] (125,376,396 samples, 0.47%)</title><rect x="13.2307%" y="1509" width="0.4665%" height="15" fill="rgb(207,44,46)" fg:x="3556218472" fg:w="125376396"/><text x="13.4807%" y="1519.50"></text></g><g><title>Builtins_JSEntryTrampoline (137,683,830 samples, 0.51%)</title><rect x="13.1885%" y="1749" width="0.5122%" height="15" fill="rgb(211,206,28)" fg:x="3544863801" fg:w="137683830"/><text x="13.4385%" y="1759.50"></text></g><g><title>node::EmitToJSStreamListener::OnStreamRead (166,406,632 samples, 0.62%)</title><rect x="13.0820%" y="1877" width="0.6191%" height="15" fill="rgb(237,167,16)" fg:x="3516241532" fg:w="166406632"/><text x="13.3320%" y="1887.50"></text></g><g><title>node::StreamBase::CallJSOnreadMethod (166,283,126 samples, 0.62%)</title><rect x="13.0825%" y="1861" width="0.6186%" height="15" fill="rgb(233,66,6)" fg:x="3516365038" fg:w="166283126"/><text x="13.3325%" y="1871.50"></text></g><g><title>node::AsyncWrap::MakeCallback (166,283,126 samples, 0.62%)</title><rect x="13.0825%" y="1845" width="0.6186%" height="15" fill="rgb(246,123,29)" fg:x="3516365038" fg:w="166283126"/><text x="13.3325%" y="1855.50"></text></g><g><title>node::InternalMakeCallback (165,992,751 samples, 0.62%)</title><rect x="13.0835%" y="1829" width="0.6176%" height="15" fill="rgb(209,62,40)" fg:x="3516655413" fg:w="165992751"/><text x="13.3335%" y="1839.50"></text></g><g><title>v8::Function::Call (137,784,363 samples, 0.51%)</title><rect x="13.1885%" y="1813" width="0.5126%" height="15" fill="rgb(218,4,25)" fg:x="3544863801" fg:w="137784363"/><text x="13.4385%" y="1823.50"></text></g><g><title>v8::internal::Execution::Call (137,784,363 samples, 0.51%)</title><rect x="13.1885%" y="1797" width="0.5126%" height="15" fill="rgb(253,91,49)" fg:x="3544863801" fg:w="137784363"/><text x="13.4385%" y="1807.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (137,784,363 samples, 0.51%)</title><rect x="13.1885%" y="1781" width="0.5126%" height="15" fill="rgb(228,155,29)" fg:x="3544863801" fg:w="137784363"/><text x="13.4385%" y="1791.50"></text></g><g><title>Builtins_JSEntry (137,784,363 samples, 0.51%)</title><rect x="13.1885%" y="1765" width="0.5126%" height="15" fill="rgb(243,57,37)" fg:x="3544863801" fg:w="137784363"/><text x="13.4385%" y="1775.50"></text></g><g><title>uv__stream_io (168,613,632 samples, 0.63%)</title><rect x="13.0746%" y="1941" width="0.6273%" height="15" fill="rgb(244,167,17)" fg:x="3514244199" fg:w="168613632"/><text x="13.3246%" y="1951.50"></text></g><g><title>uv__read (166,902,669 samples, 0.62%)</title><rect x="13.0809%" y="1925" width="0.6210%" height="15" fill="rgb(207,181,38)" fg:x="3515955162" fg:w="166902669"/><text x="13.3309%" y="1935.50"></text></g><g><title>node::LibuvStreamWrap::ReadStart (166,671,755 samples, 0.62%)</title><rect x="13.0818%" y="1909" width="0.6201%" height="15" fill="rgb(211,8,23)" fg:x="3516186076" fg:w="166671755"/><text x="13.3318%" y="1919.50"></text></g><g><title>node::LibuvStreamWrap::OnUvRead (166,671,755 samples, 0.62%)</title><rect x="13.0818%" y="1893" width="0.6201%" height="15" fill="rgb(235,11,44)" fg:x="3516186076" fg:w="166671755"/><text x="13.3318%" y="1903.50"></text></g><g><title>uv__io_poll (466,787,185 samples, 1.74%)</title><rect x="11.9680%" y="1957" width="1.7367%" height="15" fill="rgb(248,18,52)" fg:x="3216808294" fg:w="466787185"/><text x="12.2180%" y="1967.50"></text></g><g><title>node::Environment::RunAndClearNativeImmediates (9,251,541 samples, 0.03%)</title><rect x="13.7101%" y="1925" width="0.0344%" height="15" fill="rgb(208,4,7)" fg:x="3685071707" fg:w="9251541"/><text x="13.9601%" y="1935.50"></text></g><g><title>Builtins_CallApiCallback (3,166,739 samples, 0.01%)</title><rect x="13.8103%" y="1749" width="0.0118%" height="15" fill="rgb(240,17,39)" fg:x="3711990834" fg:w="3166739"/><text x="14.0603%" y="1759.50"></text></g><g><title>Builtins_LoadIC (3,573,606 samples, 0.01%)</title><rect x="13.8289%" y="1749" width="0.0133%" height="15" fill="rgb(207,170,3)" fg:x="3716989520" fg:w="3573606"/><text x="14.0789%" y="1759.50"></text></g><g><title>Builtins_ArrayPrototypeJoin (7,750,442 samples, 0.03%)</title><rect x="13.9399%" y="1733" width="0.0288%" height="15" fill="rgb(236,100,52)" fg:x="3746826518" fg:w="7750442"/><text x="14.1899%" y="1743.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_NoBuiltinExit (3,748,867 samples, 0.01%)</title><rect x="13.9687%" y="1733" width="0.0139%" height="15" fill="rgb(246,78,51)" fg:x="3754576960" fg:w="3748867"/><text x="14.2187%" y="1743.50"></text></g><g><title>Builtins_CallApiCallback (4,991,970 samples, 0.02%)</title><rect x="13.9827%" y="1733" width="0.0186%" height="15" fill="rgb(211,17,15)" fg:x="3758325827" fg:w="4991970"/><text x="14.2327%" y="1743.50"></text></g><g><title>node::fs::RealPath (4,991,970 samples, 0.02%)</title><rect x="13.9827%" y="1717" width="0.0186%" height="15" fill="rgb(209,59,46)" fg:x="3758325827" fg:w="4991970"/><text x="14.2327%" y="1727.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_NoBuiltinExit (3,823,111 samples, 0.01%)</title><rect x="14.0201%" y="1717" width="0.0142%" height="15" fill="rgb(210,92,25)" fg:x="3768388968" fg:w="3823111"/><text x="14.2701%" y="1727.50"></text></g><g><title>v8::internal::Runtime_StringEqual (3,823,111 samples, 0.01%)</title><rect x="14.0201%" y="1701" width="0.0142%" height="15" fill="rgb(238,174,52)" fg:x="3768388968" fg:w="3823111"/><text x="14.2701%" y="1711.50"></text></g><g><title>v8::internal::String::SlowEquals (3,823,111 samples, 0.01%)</title><rect x="14.0201%" y="1685" width="0.0142%" height="15" fill="rgb(230,73,7)" fg:x="3768388968" fg:w="3823111"/><text x="14.2701%" y="1695.50"></text></g><g><title>Builtins_FindOrderedHashMapEntry (11,682,129 samples, 0.04%)</title><rect x="14.0065%" y="1733" width="0.0435%" height="15" fill="rgb(243,124,40)" fg:x="3764724110" fg:w="11682129"/><text x="14.2565%" y="1743.50"></text></g><g><title>v8::internal::OrderedHashMap::GetHash (4,194,160 samples, 0.02%)</title><rect x="14.0343%" y="1717" width="0.0156%" height="15" fill="rgb(244,170,11)" fg:x="3772212079" fg:w="4194160"/><text x="14.2843%" y="1727.50"></text></g><g><title>v8::internal::String::ComputeAndSetRawHash (4,194,160 samples, 0.02%)</title><rect x="14.0343%" y="1701" width="0.0156%" height="15" fill="rgb(207,114,54)" fg:x="3772212079" fg:w="4194160"/><text x="14.2843%" y="1711.50"></text></g><g><title>v8::internal::String::ComputeAndSetRawHash (3,473,828 samples, 0.01%)</title><rect x="14.0370%" y="1685" width="0.0129%" height="15" fill="rgb(205,42,20)" fg:x="3772932411" fg:w="3473828"/><text x="14.2870%" y="1695.50"></text></g><g><title>Builtins_JSConstructStubGeneric (5,638,609 samples, 0.02%)</title><rect x="14.0499%" y="1733" width="0.0210%" height="15" fill="rgb(230,30,28)" fg:x="3776406239" fg:w="5638609"/><text x="14.2999%" y="1743.50"></text></g><g><title>[perf-6052.map] (5,112,129 samples, 0.02%)</title><rect x="14.0519%" y="1717" width="0.0190%" height="15" fill="rgb(205,73,54)" fg:x="3776932719" fg:w="5112129"/><text x="14.3019%" y="1727.50"></text></g><g><title>Builtins_RegExpPrototypeTestFast (3,178,842 samples, 0.01%)</title><rect x="14.0591%" y="1701" width="0.0118%" height="15" fill="rgb(254,227,23)" fg:x="3778866006" fg:w="3178842"/><text x="14.3091%" y="1711.50"></text></g><g><title>Builtins_LoadIC (2,913,600 samples, 0.01%)</title><rect x="14.0738%" y="1733" width="0.0108%" height="15" fill="rgb(228,202,34)" fg:x="3782833811" fg:w="2913600"/><text x="14.3238%" y="1743.50"></text></g><g><title>Builtins_LoadIC_Megamorphic (3,363,616 samples, 0.01%)</title><rect x="14.0875%" y="1733" width="0.0125%" height="15" fill="rgb(222,225,37)" fg:x="3786515745" fg:w="3363616"/><text x="14.3375%" y="1743.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_NoBuiltinExit (4,607,973 samples, 0.02%)</title><rect x="14.1668%" y="1717" width="0.0171%" height="15" fill="rgb(221,14,54)" fg:x="3807808718" fg:w="4607973"/><text x="14.4168%" y="1727.50"></text></g><g><title>v8::internal::Runtime_StringEqual (3,261,823 samples, 0.01%)</title><rect x="14.1718%" y="1701" width="0.0121%" height="15" fill="rgb(254,102,2)" fg:x="3809154868" fg:w="3261823"/><text x="14.4218%" y="1711.50"></text></g><g><title>v8::internal::String::SlowEquals (3,261,823 samples, 0.01%)</title><rect x="14.1718%" y="1685" width="0.0121%" height="15" fill="rgb(232,104,17)" fg:x="3809154868" fg:w="3261823"/><text x="14.4218%" y="1695.50"></text></g><g><title>Builtins_FindOrderedHashMapEntry (5,190,702 samples, 0.02%)</title><rect x="14.1862%" y="1717" width="0.0193%" height="15" fill="rgb(250,220,14)" fg:x="3813039889" fg:w="5190702"/><text x="14.4362%" y="1727.50"></text></g><g><title>v8::internal::OrderedHashMap::GetHash (3,582,836 samples, 0.01%)</title><rect x="14.1922%" y="1701" width="0.0133%" height="15" fill="rgb(241,158,9)" fg:x="3814647755" fg:w="3582836"/><text x="14.4422%" y="1711.50"></text></g><g><title>v8::internal::String::ComputeAndSetRawHash (3,582,836 samples, 0.01%)</title><rect x="14.1922%" y="1685" width="0.0133%" height="15" fill="rgb(246,9,43)" fg:x="3814647755" fg:w="3582836"/><text x="14.4422%" y="1695.50"></text></g><g><title>v8::internal::String::ComputeAndSetRawHash (2,874,161 samples, 0.01%)</title><rect x="14.1948%" y="1669" width="0.0107%" height="15" fill="rgb(206,73,33)" fg:x="3815356430" fg:w="2874161"/><text x="14.4448%" y="1679.50"></text></g><g><title>Builtins_JSConstructStubGeneric (2,924,278 samples, 0.01%)</title><rect x="14.2055%" y="1717" width="0.0109%" height="15" fill="rgb(222,79,8)" fg:x="3818230591" fg:w="2924278"/><text x="14.4555%" y="1727.50"></text></g><g><title>filename_lookup (2,847,721 samples, 0.01%)</title><rect x="14.3269%" y="1557" width="0.0106%" height="15" fill="rgb(234,8,54)" fg:x="3850863556" fg:w="2847721"/><text x="14.5769%" y="1567.50"></text></g><g><title>__x64_sys_access (4,394,797 samples, 0.02%)</title><rect x="14.3269%" y="1605" width="0.0164%" height="15" fill="rgb(209,134,38)" fg:x="3850863556" fg:w="4394797"/><text x="14.5769%" y="1615.50"></text></g><g><title>do_faccessat (4,394,797 samples, 0.02%)</title><rect x="14.3269%" y="1589" width="0.0164%" height="15" fill="rgb(230,127,29)" fg:x="3850863556" fg:w="4394797"/><text x="14.5769%" y="1599.50"></text></g><g><title>user_path_at_empty (4,394,797 samples, 0.02%)</title><rect x="14.3269%" y="1573" width="0.0164%" height="15" fill="rgb(242,44,41)" fg:x="3850863556" fg:w="4394797"/><text x="14.5769%" y="1583.50"></text></g><g><title>__GI___access (5,170,769 samples, 0.02%)</title><rect x="14.3269%" y="1653" width="0.0192%" height="15" fill="rgb(222,56,43)" fg:x="3850863556" fg:w="5170769"/><text x="14.5769%" y="1663.50"></text></g><g><title>entry_SYSCALL_64 (5,170,769 samples, 0.02%)</title><rect x="14.3269%" y="1637" width="0.0192%" height="15" fill="rgb(238,39,47)" fg:x="3850863556" fg:w="5170769"/><text x="14.5769%" y="1647.50"></text></g><g><title>do_syscall_64 (5,170,769 samples, 0.02%)</title><rect x="14.3269%" y="1621" width="0.0192%" height="15" fill="rgb(226,79,43)" fg:x="3850863556" fg:w="5170769"/><text x="14.5769%" y="1631.50"></text></g><g><title>uv_fs_access (5,932,762 samples, 0.02%)</title><rect x="14.3269%" y="1669" width="0.0221%" height="15" fill="rgb(242,105,53)" fg:x="3850863556" fg:w="5932762"/><text x="14.5769%" y="1679.50"></text></g><g><title>Builtins_CallApiCallback (7,935,843 samples, 0.03%)</title><rect x="14.3236%" y="1701" width="0.0295%" height="15" fill="rgb(251,132,46)" fg:x="3849977285" fg:w="7935843"/><text x="14.5736%" y="1711.50"></text></g><g><title>node::fs::ExistsSync (7,165,638 samples, 0.03%)</title><rect x="14.3265%" y="1685" width="0.0267%" height="15" fill="rgb(231,77,14)" fg:x="3850747490" fg:w="7165638"/><text x="14.5765%" y="1695.50"></text></g><g><title>Builtins_StringIndexOf (3,381,314 samples, 0.01%)</title><rect x="14.3694%" y="1701" width="0.0126%" height="15" fill="rgb(240,135,9)" fg:x="3862263583" fg:w="3381314"/><text x="14.6194%" y="1711.50"></text></g><g><title>Builtins_StringPrototypeMatch (4,207,347 samples, 0.02%)</title><rect x="14.3819%" y="1701" width="0.0157%" height="15" fill="rgb(248,109,14)" fg:x="3865644897" fg:w="4207347"/><text x="14.6319%" y="1711.50"></text></g><g><title>Builtins_RegExpMatchFast (4,207,347 samples, 0.02%)</title><rect x="14.3819%" y="1685" width="0.0157%" height="15" fill="rgb(227,146,52)" fg:x="3865644897" fg:w="4207347"/><text x="14.6319%" y="1695.50"></text></g><g><title>[perf-6052.map] (3,507,182 samples, 0.01%)</title><rect x="14.3845%" y="1669" width="0.0130%" height="15" fill="rgb(232,54,3)" fg:x="3866345062" fg:w="3507182"/><text x="14.6345%" y="1679.50"></text></g><g><title>filename_lookup (3,355,733 samples, 0.01%)</title><rect x="14.4506%" y="1541" width="0.0125%" height="15" fill="rgb(229,201,43)" fg:x="3884112770" fg:w="3355733"/><text x="14.7006%" y="1551.50"></text></g><g><title>path_lookupat (3,355,733 samples, 0.01%)</title><rect x="14.4506%" y="1525" width="0.0125%" height="15" fill="rgb(252,161,33)" fg:x="3884112770" fg:w="3355733"/><text x="14.7006%" y="1535.50"></text></g><g><title>entry_SYSCALL_64 (8,834,936 samples, 0.03%)</title><rect x="14.4456%" y="1621" width="0.0329%" height="15" fill="rgb(226,146,40)" fg:x="3882748825" fg:w="8834936"/><text x="14.6956%" y="1631.50"></text></g><g><title>do_syscall_64 (8,834,936 samples, 0.03%)</title><rect x="14.4456%" y="1605" width="0.0329%" height="15" fill="rgb(219,47,25)" fg:x="3882748825" fg:w="8834936"/><text x="14.6956%" y="1615.50"></text></g><g><title>__x64_sys_access (8,834,936 samples, 0.03%)</title><rect x="14.4456%" y="1589" width="0.0329%" height="15" fill="rgb(250,135,13)" fg:x="3882748825" fg:w="8834936"/><text x="14.6956%" y="1599.50"></text></g><g><title>do_faccessat (8,834,936 samples, 0.03%)</title><rect x="14.4456%" y="1573" width="0.0329%" height="15" fill="rgb(219,229,18)" fg:x="3882748825" fg:w="8834936"/><text x="14.6956%" y="1583.50"></text></g><g><title>user_path_at_empty (7,470,991 samples, 0.03%)</title><rect x="14.4506%" y="1557" width="0.0278%" height="15" fill="rgb(217,152,27)" fg:x="3884112770" fg:w="7470991"/><text x="14.7006%" y="1567.50"></text></g><g><title>uv_fs_access (11,439,329 samples, 0.04%)</title><rect x="14.4456%" y="1653" width="0.0426%" height="15" fill="rgb(225,71,47)" fg:x="3882748825" fg:w="11439329"/><text x="14.6956%" y="1663.50"></text></g><g><title>__GI___access (11,439,329 samples, 0.04%)</title><rect x="14.4456%" y="1637" width="0.0426%" height="15" fill="rgb(220,139,14)" fg:x="3882748825" fg:w="11439329"/><text x="14.6956%" y="1647.50"></text></g><g><title>Builtins_CallApiCallback (22,059,858 samples, 0.08%)</title><rect x="14.4318%" y="1685" width="0.0821%" height="15" fill="rgb(247,54,32)" fg:x="3879035787" fg:w="22059858"/><text x="14.6818%" y="1695.50"></text></g><g><title>node::fs::ExistsSync (22,059,858 samples, 0.08%)</title><rect x="14.4318%" y="1669" width="0.0821%" height="15" fill="rgb(252,131,39)" fg:x="3879035787" fg:w="22059858"/><text x="14.6818%" y="1679.50"></text></g><g><title>void node::MakeUtf8String&lt;char&gt; (3,027,465 samples, 0.01%)</title><rect x="14.5026%" y="1653" width="0.0113%" height="15" fill="rgb(210,108,39)" fg:x="3898068180" fg:w="3027465"/><text x="14.7526%" y="1663.50"></text></g><g><title>Builtins_StringIndexOf (4,263,494 samples, 0.02%)</title><rect x="14.5219%" y="1685" width="0.0159%" height="15" fill="rgb(205,23,29)" fg:x="3903270918" fg:w="4263494"/><text x="14.7719%" y="1695.50"></text></g><g><title>Builtins_StringIndexOf (3,711,192 samples, 0.01%)</title><rect x="14.5673%" y="1669" width="0.0138%" height="15" fill="rgb(246,139,46)" fg:x="3915476987" fg:w="3711192"/><text x="14.8173%" y="1679.50"></text></g><g><title>getname_flags (4,532,344 samples, 0.02%)</title><rect x="14.6127%" y="1477" width="0.0169%" height="15" fill="rgb(250,81,26)" fg:x="3927658271" fg:w="4532344"/><text x="14.8627%" y="1487.50"></text></g><g><title>filename_lookup (4,680,185 samples, 0.02%)</title><rect x="14.6321%" y="1461" width="0.0174%" height="15" fill="rgb(214,104,7)" fg:x="3932889281" fg:w="4680185"/><text x="14.8821%" y="1471.50"></text></g><g><title>path_lookupat (4,680,185 samples, 0.02%)</title><rect x="14.6321%" y="1445" width="0.0174%" height="15" fill="rgb(233,189,8)" fg:x="3932889281" fg:w="4680185"/><text x="14.8821%" y="1455.50"></text></g><g><title>link_path_walk (3,386,914 samples, 0.01%)</title><rect x="14.6369%" y="1429" width="0.0126%" height="15" fill="rgb(228,141,17)" fg:x="3934182552" fg:w="3386914"/><text x="14.8869%" y="1439.50"></text></g><g><title>int node::fs::SyncCallAndThrowIf&lt;bool (*)(int), int (*)(uv_loop_s*, uv_fs_s*, char const*, void (*)(uv_fs_s*)), char*&gt; (15,126,709 samples, 0.06%)</title><rect x="14.6014%" y="1605" width="0.0563%" height="15" fill="rgb(247,157,1)" fg:x="3924642858" fg:w="15126709"/><text x="14.8514%" y="1615.50"></text></g><g><title>uv_fs_stat (15,126,709 samples, 0.06%)</title><rect x="14.6014%" y="1589" width="0.0563%" height="15" fill="rgb(249,225,5)" fg:x="3924642858" fg:w="15126709"/><text x="14.8514%" y="1599.50"></text></g><g><title>uv__fs_work (14,013,172 samples, 0.05%)</title><rect x="14.6056%" y="1573" width="0.0521%" height="15" fill="rgb(242,55,13)" fg:x="3925756395" fg:w="14013172"/><text x="14.8556%" y="1583.50"></text></g><g><title>uv__fs_statx (13,304,899 samples, 0.05%)</title><rect x="14.6082%" y="1557" width="0.0495%" height="15" fill="rgb(230,49,50)" fg:x="3926464668" fg:w="13304899"/><text x="14.8582%" y="1567.50"></text></g><g><title>syscall (13,304,899 samples, 0.05%)</title><rect x="14.6082%" y="1541" width="0.0495%" height="15" fill="rgb(241,111,38)" fg:x="3926464668" fg:w="13304899"/><text x="14.8582%" y="1551.50"></text></g><g><title>entry_SYSCALL_64 (13,304,899 samples, 0.05%)</title><rect x="14.6082%" y="1525" width="0.0495%" height="15" fill="rgb(252,155,4)" fg:x="3926464668" fg:w="13304899"/><text x="14.8582%" y="1535.50"></text></g><g><title>do_syscall_64 (13,304,899 samples, 0.05%)</title><rect x="14.6082%" y="1509" width="0.0495%" height="15" fill="rgb(212,69,32)" fg:x="3926464668" fg:w="13304899"/><text x="14.8582%" y="1519.50"></text></g><g><title>__x64_sys_statx (13,304,899 samples, 0.05%)</title><rect x="14.6082%" y="1493" width="0.0495%" height="15" fill="rgb(243,107,47)" fg:x="3926464668" fg:w="13304899"/><text x="14.8582%" y="1503.50"></text></g><g><title>vfs_statx (6,880,286 samples, 0.03%)</title><rect x="14.6321%" y="1477" width="0.0256%" height="15" fill="rgb(247,130,12)" fg:x="3932889281" fg:w="6880286"/><text x="14.8821%" y="1487.50"></text></g><g><title>[perf-6052.map] (21,225,865 samples, 0.08%)</title><rect x="14.5839%" y="1669" width="0.0790%" height="15" fill="rgb(233,74,16)" fg:x="3919925185" fg:w="21225865"/><text x="14.8339%" y="1679.50"></text></g><g><title>[perf-6052.map] (17,956,033 samples, 0.07%)</title><rect x="14.5960%" y="1653" width="0.0668%" height="15" fill="rgb(208,58,18)" fg:x="3923195017" fg:w="17956033"/><text x="14.8460%" y="1663.50"></text></g><g><title>Builtins_CallApiCallback (17,243,771 samples, 0.06%)</title><rect x="14.5987%" y="1637" width="0.0642%" height="15" fill="rgb(242,225,1)" fg:x="3923907279" fg:w="17243771"/><text x="14.8487%" y="1647.50"></text></g><g><title>node::fs::Stat (17,243,771 samples, 0.06%)</title><rect x="14.5987%" y="1621" width="0.0642%" height="15" fill="rgb(249,39,40)" fg:x="3923907279" fg:w="17243771"/><text x="14.8487%" y="1631.50"></text></g><g><title>[perf-6052.map] (110,418,701 samples, 0.41%)</title><rect x="14.2568%" y="1717" width="0.4108%" height="15" fill="rgb(207,72,44)" fg:x="3832021530" fg:w="110418701"/><text x="14.5068%" y="1727.50"></text></g><g><title>[perf-6052.map] (71,948,592 samples, 0.27%)</title><rect x="14.4000%" y="1701" width="0.2677%" height="15" fill="rgb(215,193,12)" fg:x="3870491639" fg:w="71948592"/><text x="14.6500%" y="1711.50"></text></g><g><title>[perf-6052.map] (33,423,610 samples, 0.12%)</title><rect x="14.5433%" y="1685" width="0.1244%" height="15" fill="rgb(248,41,39)" fg:x="3909016621" fg:w="33423610"/><text x="14.7933%" y="1695.50"></text></g><g><title>[perf-6052.map] (146,250,970 samples, 0.54%)</title><rect x="14.1259%" y="1733" width="0.5441%" height="15" fill="rgb(253,85,4)" fg:x="3796823122" fg:w="146250970"/><text x="14.3759%" y="1743.50"></text></g><g><title>node::MakeCallback (251,101,901 samples, 0.93%)</title><rect x="13.7472%" y="1925" width="0.9342%" height="15" fill="rgb(243,70,31)" fg:x="3695039439" fg:w="251101901"/><text x="13.9972%" y="1935.50"></text></g><g><title>node::InternalMakeCallback (251,101,901 samples, 0.93%)</title><rect x="13.7472%" y="1909" width="0.9342%" height="15" fill="rgb(253,195,26)" fg:x="3695039439" fg:w="251101901"/><text x="13.9972%" y="1919.50"></text></g><g><title>v8::Function::Call (251,101,901 samples, 0.93%)</title><rect x="13.7472%" y="1893" width="0.9342%" height="15" fill="rgb(243,42,11)" fg:x="3695039439" fg:w="251101901"/><text x="13.9972%" y="1903.50"></text></g><g><title>v8::internal::Execution::Call (251,101,901 samples, 0.93%)</title><rect x="13.7472%" y="1877" width="0.9342%" height="15" fill="rgb(239,66,17)" fg:x="3695039439" fg:w="251101901"/><text x="13.9972%" y="1887.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (251,101,901 samples, 0.93%)</title><rect x="13.7472%" y="1861" width="0.9342%" height="15" fill="rgb(217,132,21)" fg:x="3695039439" fg:w="251101901"/><text x="13.9972%" y="1871.50"></text></g><g><title>Builtins_JSEntry (251,101,901 samples, 0.93%)</title><rect x="13.7472%" y="1845" width="0.9342%" height="15" fill="rgb(252,202,21)" fg:x="3695039439" fg:w="251101901"/><text x="13.9972%" y="1855.50"></text></g><g><title>Builtins_JSEntryTrampoline (251,101,901 samples, 0.93%)</title><rect x="13.7472%" y="1829" width="0.9342%" height="15" fill="rgb(233,98,36)" fg:x="3695039439" fg:w="251101901"/><text x="13.9972%" y="1839.50"></text></g><g><title>[perf-6052.map] (251,101,901 samples, 0.93%)</title><rect x="13.7472%" y="1813" width="0.9342%" height="15" fill="rgb(216,153,54)" fg:x="3695039439" fg:w="251101901"/><text x="13.9972%" y="1823.50"></text></g><g><title>[perf-6052.map] (251,101,901 samples, 0.93%)</title><rect x="13.7472%" y="1797" width="0.9342%" height="15" fill="rgb(250,99,7)" fg:x="3695039439" fg:w="251101901"/><text x="13.9972%" y="1807.50"></text></g><g><title>[perf-6052.map] (250,461,856 samples, 0.93%)</title><rect x="13.7496%" y="1781" width="0.9318%" height="15" fill="rgb(207,56,50)" fg:x="3695679484" fg:w="250461856"/><text x="13.9996%" y="1791.50"></text></g><g><title>[perf-6052.map] (242,529,761 samples, 0.90%)</title><rect x="13.7791%" y="1765" width="0.9023%" height="15" fill="rgb(244,61,34)" fg:x="3703611579" fg:w="242529761"/><text x="14.0291%" y="1775.50"></text></g><g><title>[perf-6052.map] (219,728,524 samples, 0.82%)</title><rect x="13.8639%" y="1749" width="0.8175%" height="15" fill="rgb(241,50,38)" fg:x="3726412816" fg:w="219728524"/><text x="14.1139%" y="1759.50"></text></g><g><title>uv__run_check (262,508,632 samples, 0.98%)</title><rect x="13.7074%" y="1957" width="0.9766%" height="15" fill="rgb(212,166,30)" fg:x="3684352693" fg:w="262508632"/><text x="13.9574%" y="1967.50"></text></g><g><title>node::Environment::CheckImmediate (262,508,632 samples, 0.98%)</title><rect x="13.7074%" y="1941" width="0.9766%" height="15" fill="rgb(249,127,32)" fg:x="3684352693" fg:w="262508632"/><text x="13.9574%" y="1951.50"></text></g><g><title>node::InternalCallbackScope::~InternalCallbackScope (3,342,119 samples, 0.01%)</title><rect x="14.6842%" y="1925" width="0.0124%" height="15" fill="rgb(209,103,0)" fg:x="3946894840" fg:w="3342119"/><text x="14.9342%" y="1935.50"></text></g><g><title>node::InternalCallbackScope::Close (3,342,119 samples, 0.01%)</title><rect x="14.6842%" y="1909" width="0.0124%" height="15" fill="rgb(238,209,51)" fg:x="3946894840" fg:w="3342119"/><text x="14.9342%" y="1919.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (5,578,660 samples, 0.02%)</title><rect x="14.7110%" y="1685" width="0.0208%" height="15" fill="rgb(237,56,23)" fg:x="3954105814" fg:w="5578660"/><text x="14.9610%" y="1695.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeString (5,578,660 samples, 0.02%)</title><rect x="14.7110%" y="1669" width="0.0208%" height="15" fill="rgb(215,153,46)" fg:x="3954105814" fg:w="5578660"/><text x="14.9610%" y="1679.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_BuiltinExit (6,234,673 samples, 0.02%)</title><rect x="14.7110%" y="1749" width="0.0232%" height="15" fill="rgb(224,49,31)" fg:x="3954105814" fg:w="6234673"/><text x="14.9610%" y="1759.50"></text></g><g><title>v8::internal::Builtin_JsonStringify (6,234,673 samples, 0.02%)</title><rect x="14.7110%" y="1733" width="0.0232%" height="15" fill="rgb(250,18,42)" fg:x="3954105814" fg:w="6234673"/><text x="14.9610%" y="1743.50"></text></g><g><title>v8::internal::JsonStringify (6,234,673 samples, 0.02%)</title><rect x="14.7110%" y="1717" width="0.0232%" height="15" fill="rgb(215,176,39)" fg:x="3954105814" fg:w="6234673"/><text x="14.9610%" y="1727.50"></text></g><g><title>v8::internal::JsonStringifier::Stringify (6,234,673 samples, 0.02%)</title><rect x="14.7110%" y="1701" width="0.0232%" height="15" fill="rgb(223,77,29)" fg:x="3954105814" fg:w="6234673"/><text x="14.9610%" y="1711.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (5,474,825 samples, 0.02%)</title><rect x="14.7499%" y="1637" width="0.0204%" height="15" fill="rgb(234,94,52)" fg:x="3964536127" fg:w="5474825"/><text x="14.9999%" y="1647.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeString (3,958,703 samples, 0.01%)</title><rect x="14.7555%" y="1621" width="0.0147%" height="15" fill="rgb(220,154,50)" fg:x="3966052249" fg:w="3958703"/><text x="15.0055%" y="1631.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_BuiltinExit (7,586,313 samples, 0.03%)</title><rect x="14.7424%" y="1733" width="0.0282%" height="15" fill="rgb(212,11,10)" fg:x="3962543521" fg:w="7586313"/><text x="14.9924%" y="1743.50"></text></g><g><title>v8::internal::Builtin_JsonStringify (7,586,313 samples, 0.03%)</title><rect x="14.7424%" y="1717" width="0.0282%" height="15" fill="rgb(205,166,19)" fg:x="3962543521" fg:w="7586313"/><text x="14.9924%" y="1727.50"></text></g><g><title>v8::internal::JsonStringify (7,586,313 samples, 0.03%)</title><rect x="14.7424%" y="1701" width="0.0282%" height="15" fill="rgb(244,198,16)" fg:x="3962543521" fg:w="7586313"/><text x="14.9924%" y="1711.50"></text></g><g><title>v8::internal::JsonStringifier::Stringify (7,586,313 samples, 0.03%)</title><rect x="14.7424%" y="1685" width="0.0282%" height="15" fill="rgb(219,69,12)" fg:x="3962543521" fg:w="7586313"/><text x="14.9924%" y="1695.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (7,461,811 samples, 0.03%)</title><rect x="14.7429%" y="1669" width="0.0278%" height="15" fill="rgb(245,30,7)" fg:x="3962668023" fg:w="7461811"/><text x="14.9929%" y="1679.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (6,606,451 samples, 0.02%)</title><rect x="14.7461%" y="1653" width="0.0246%" height="15" fill="rgb(218,221,48)" fg:x="3963523383" fg:w="6606451"/><text x="14.9961%" y="1663.50"></text></g><g><title>[perf-5270.map] (3,284,421 samples, 0.01%)</title><rect x="14.7733%" y="1733" width="0.0122%" height="15" fill="rgb(216,66,15)" fg:x="3970840243" fg:w="3284421"/><text x="15.0233%" y="1743.50"></text></g><g><title>[perf-5270.map] (13,004,753 samples, 0.05%)</title><rect x="14.7403%" y="1749" width="0.0484%" height="15" fill="rgb(226,122,50)" fg:x="3961977424" fg:w="13004753"/><text x="14.9903%" y="1759.50"></text></g><g><title>[perf-5270.map] (23,765,251 samples, 0.09%)</title><rect x="14.7015%" y="1845" width="0.0884%" height="15" fill="rgb(239,156,16)" fg:x="3951548761" fg:w="23765251"/><text x="14.9515%" y="1855.50"></text></g><g><title>[perf-5270.map] (23,765,251 samples, 0.09%)</title><rect x="14.7015%" y="1829" width="0.0884%" height="15" fill="rgb(224,27,38)" fg:x="3951548761" fg:w="23765251"/><text x="14.9515%" y="1839.50"></text></g><g><title>[perf-5270.map] (23,765,251 samples, 0.09%)</title><rect x="14.7015%" y="1813" width="0.0884%" height="15" fill="rgb(224,39,27)" fg:x="3951548761" fg:w="23765251"/><text x="14.9515%" y="1823.50"></text></g><g><title>[perf-5270.map] (23,765,251 samples, 0.09%)</title><rect x="14.7015%" y="1797" width="0.0884%" height="15" fill="rgb(215,92,29)" fg:x="3951548761" fg:w="23765251"/><text x="14.9515%" y="1807.50"></text></g><g><title>[perf-5270.map] (22,641,504 samples, 0.08%)</title><rect x="14.7057%" y="1781" width="0.0842%" height="15" fill="rgb(207,159,16)" fg:x="3952672508" fg:w="22641504"/><text x="14.9557%" y="1791.50"></text></g><g><title>[perf-5270.map] (22,110,971 samples, 0.08%)</title><rect x="14.7077%" y="1765" width="0.0823%" height="15" fill="rgb(238,163,47)" fg:x="3953203041" fg:w="22110971"/><text x="14.9577%" y="1775.50"></text></g><g><title>node::Environment::RunTimers (30,294,745 samples, 0.11%)</title><rect x="14.6841%" y="1941" width="0.1127%" height="15" fill="rgb(219,91,49)" fg:x="3946861325" fg:w="30294745"/><text x="14.9341%" y="1951.50"></text></g><g><title>v8::Function::Call (26,919,111 samples, 0.10%)</title><rect x="14.6967%" y="1925" width="0.1002%" height="15" fill="rgb(227,167,31)" fg:x="3950236959" fg:w="26919111"/><text x="14.9467%" y="1935.50"></text></g><g><title>v8::internal::Execution::Call (26,919,111 samples, 0.10%)</title><rect x="14.6967%" y="1909" width="0.1002%" height="15" fill="rgb(234,80,54)" fg:x="3950236959" fg:w="26919111"/><text x="14.9467%" y="1919.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (26,919,111 samples, 0.10%)</title><rect x="14.6967%" y="1893" width="0.1002%" height="15" fill="rgb(212,114,2)" fg:x="3950236959" fg:w="26919111"/><text x="14.9467%" y="1903.50"></text></g><g><title>Builtins_JSEntry (26,875,308 samples, 0.10%)</title><rect x="14.6968%" y="1877" width="0.1000%" height="15" fill="rgb(234,50,24)" fg:x="3950280762" fg:w="26875308"/><text x="14.9468%" y="1887.50"></text></g><g><title>Builtins_JSEntryTrampoline (26,231,589 samples, 0.10%)</title><rect x="14.6992%" y="1861" width="0.0976%" height="15" fill="rgb(221,68,8)" fg:x="3950924481" fg:w="26231589"/><text x="14.9492%" y="1871.50"></text></g><g><title>__libc_start_call_main (833,823,001 samples, 3.10%)</title><rect x="11.6968%" y="2053" width="3.1022%" height="15" fill="rgb(254,180,31)" fg:x="3143912391" fg:w="833823001"/><text x="11.9468%" y="2063.50">__l..</text></g><g><title>node::Start (833,823,001 samples, 3.10%)</title><rect x="11.6968%" y="2037" width="3.1022%" height="15" fill="rgb(247,130,50)" fg:x="3143912391" fg:w="833823001"/><text x="11.9468%" y="2047.50">nod..</text></g><g><title>node::NodeMainInstance::Run (833,823,001 samples, 3.10%)</title><rect x="11.6968%" y="2021" width="3.1022%" height="15" fill="rgb(211,109,4)" fg:x="3143912391" fg:w="833823001"/><text x="11.9468%" y="2031.50">nod..</text></g><g><title>node::NodeMainInstance::Run (833,823,001 samples, 3.10%)</title><rect x="11.6968%" y="2005" width="3.1022%" height="15" fill="rgb(238,50,21)" fg:x="3143912391" fg:w="833823001"/><text x="11.9468%" y="2015.50">nod..</text></g><g><title>node::SpinEventLoopInternal (833,823,001 samples, 3.10%)</title><rect x="11.6968%" y="1989" width="3.1022%" height="15" fill="rgb(225,57,45)" fg:x="3143912391" fg:w="833823001"/><text x="11.9468%" y="1999.50">nod..</text></g><g><title>uv_run (833,328,024 samples, 3.10%)</title><rect x="11.6986%" y="1973" width="3.1004%" height="15" fill="rgb(209,196,50)" fg:x="3144407368" fg:w="833328024"/><text x="11.9486%" y="1983.50">uv_..</text></g><g><title>uv__run_timers (30,874,067 samples, 0.11%)</title><rect x="14.6841%" y="1957" width="0.1149%" height="15" fill="rgb(242,140,13)" fg:x="3946861325" fg:w="30874067"/><text x="14.9341%" y="1967.50"></text></g><g><title>_int_free (29,158,307 samples, 0.11%)</title><rect x="14.8161%" y="2053" width="0.1085%" height="15" fill="rgb(217,111,7)" fg:x="3982354359" fg:w="29158307"/><text x="15.0661%" y="2063.50"></text></g><g><title>__handle_mm_fault (3,682,542 samples, 0.01%)</title><rect x="15.3281%" y="1973" width="0.0137%" height="15" fill="rgb(253,193,51)" fg:x="4119968753" fg:w="3682542"/><text x="15.5781%" y="1983.50"></text></g><g><title>handle_pte_fault (2,966,442 samples, 0.01%)</title><rect x="15.3308%" y="1957" width="0.0110%" height="15" fill="rgb(252,70,29)" fg:x="4120684853" fg:w="2966442"/><text x="15.5808%" y="1967.50"></text></g><g><title>handle_mm_fault (4,633,367 samples, 0.02%)</title><rect x="15.3255%" y="1989" width="0.0172%" height="15" fill="rgb(232,127,12)" fg:x="4119255069" fg:w="4633367"/><text x="15.5755%" y="1999.50"></text></g><g><title>do_user_addr_fault (6,284,194 samples, 0.02%)</title><rect x="15.3219%" y="2005" width="0.0234%" height="15" fill="rgb(211,180,21)" fg:x="4118303587" fg:w="6284194"/><text x="15.5719%" y="2015.50"></text></g><g><title>asm_exc_page_fault (7,143,648 samples, 0.03%)</title><rect x="15.3215%" y="2037" width="0.0266%" height="15" fill="rgb(229,72,13)" fg:x="4118180196" fg:w="7143648"/><text x="15.5715%" y="2047.50"></text></g><g><title>exc_page_fault (7,143,648 samples, 0.03%)</title><rect x="15.3215%" y="2021" width="0.0266%" height="15" fill="rgb(240,211,49)" fg:x="4118180196" fg:w="7143648"/><text x="15.5715%" y="2031.50"></text></g><g><title>_int_malloc (114,712,866 samples, 0.43%)</title><rect x="14.9246%" y="2053" width="0.4268%" height="15" fill="rgb(219,149,40)" fg:x="4011512666" fg:w="114712866"/><text x="15.1746%" y="2063.50"></text></g><g><title>cfree@GLIBC_2.2.5 (39,026,645 samples, 0.15%)</title><rect x="15.3514%" y="2053" width="0.1452%" height="15" fill="rgb(210,127,46)" fg:x="4126225532" fg:w="39026645"/><text x="15.6014%" y="2063.50"></text></g><g><title>malloc (149,796,837 samples, 0.56%)</title><rect x="15.5016%" y="2053" width="0.5573%" height="15" fill="rgb(220,106,7)" fg:x="4166598580" fg:w="149796837"/><text x="15.7516%" y="2063.50"></text></g><g><title>select_task_rq_fair (2,958,404 samples, 0.01%)</title><rect x="16.0988%" y="1909" width="0.0110%" height="15" fill="rgb(249,31,22)" fg:x="4327102389" fg:w="2958404"/><text x="16.3488%" y="1919.50"></text></g><g><title>do_futex (14,760,776 samples, 0.05%)</title><rect x="16.0613%" y="1973" width="0.0549%" height="15" fill="rgb(253,1,49)" fg:x="4317032753" fg:w="14760776"/><text x="16.3113%" y="1983.50"></text></g><g><title>futex_wake (13,577,334 samples, 0.05%)</title><rect x="16.0657%" y="1957" width="0.0505%" height="15" fill="rgb(227,144,33)" fg:x="4318216195" fg:w="13577334"/><text x="16.3157%" y="1967.50"></text></g><g><title>wake_up_q (8,306,434 samples, 0.03%)</title><rect x="16.0853%" y="1941" width="0.0309%" height="15" fill="rgb(249,163,44)" fg:x="4323487095" fg:w="8306434"/><text x="16.3353%" y="1951.50"></text></g><g><title>try_to_wake_up (7,709,374 samples, 0.03%)</title><rect x="16.0875%" y="1925" width="0.0287%" height="15" fill="rgb(234,15,39)" fg:x="4324084155" fg:w="7709374"/><text x="16.3375%" y="1935.50"></text></g><g><title>__x64_sys_futex (15,357,036 samples, 0.06%)</title><rect x="16.0613%" y="2005" width="0.0571%" height="15" fill="rgb(207,66,16)" fg:x="4317032753" fg:w="15357036"/><text x="16.3113%" y="2015.50"></text></g><g><title>__se_sys_futex (15,357,036 samples, 0.06%)</title><rect x="16.0613%" y="1989" width="0.0571%" height="15" fill="rgb(233,112,24)" fg:x="4317032753" fg:w="15357036"/><text x="16.3113%" y="1999.50"></text></g><g><title>entry_SYSCALL_64 (16,491,176 samples, 0.06%)</title><rect x="16.0613%" y="2037" width="0.0614%" height="15" fill="rgb(230,90,22)" fg:x="4317032753" fg:w="16491176"/><text x="16.3113%" y="2047.50"></text></g><g><title>do_syscall_64 (16,491,176 samples, 0.06%)</title><rect x="16.0613%" y="2021" width="0.0614%" height="15" fill="rgb(229,61,13)" fg:x="4317032753" fg:w="16491176"/><text x="16.3113%" y="2031.50"></text></g><g><title>entry_ibpb (8,525,121 samples, 0.03%)</title><rect x="16.1227%" y="2037" width="0.0317%" height="15" fill="rgb(225,57,24)" fg:x="4333523929" fg:w="8525121"/><text x="16.3727%" y="2047.50"></text></g><g><title>pthread_cond_broadcast@@GLIBC_2.3.2 (26,205,924 samples, 0.10%)</title><rect x="16.0591%" y="2053" width="0.0975%" height="15" fill="rgb(208,169,48)" fg:x="4316445094" fg:w="26205924"/><text x="16.3091%" y="2063.50"></text></g><g><title>__x64_sys_futex (9,915,049 samples, 0.04%)</title><rect x="16.1645%" y="2005" width="0.0369%" height="15" fill="rgb(244,218,51)" fg:x="4344769733" fg:w="9915049"/><text x="16.4145%" y="2015.50"></text></g><g><title>__se_sys_futex (9,915,049 samples, 0.04%)</title><rect x="16.1645%" y="1989" width="0.0369%" height="15" fill="rgb(214,148,10)" fg:x="4344769733" fg:w="9915049"/><text x="16.4145%" y="1999.50"></text></g><g><title>do_futex (9,915,049 samples, 0.04%)</title><rect x="16.1645%" y="1973" width="0.0369%" height="15" fill="rgb(225,174,27)" fg:x="4344769733" fg:w="9915049"/><text x="16.4145%" y="1983.50"></text></g><g><title>futex_wake (9,915,049 samples, 0.04%)</title><rect x="16.1645%" y="1957" width="0.0369%" height="15" fill="rgb(230,96,26)" fg:x="4344769733" fg:w="9915049"/><text x="16.4145%" y="1967.50"></text></g><g><title>wake_up_q (8,037,450 samples, 0.03%)</title><rect x="16.1715%" y="1941" width="0.0299%" height="15" fill="rgb(232,10,30)" fg:x="4346647332" fg:w="8037450"/><text x="16.4215%" y="1951.50"></text></g><g><title>try_to_wake_up (6,715,307 samples, 0.02%)</title><rect x="16.1764%" y="1925" width="0.0250%" height="15" fill="rgb(222,8,50)" fg:x="4347969475" fg:w="6715307"/><text x="16.4264%" y="1935.50"></text></g><g><title>ttwu_queue (3,275,725 samples, 0.01%)</title><rect x="16.1892%" y="1909" width="0.0122%" height="15" fill="rgb(213,81,27)" fg:x="4351409057" fg:w="3275725"/><text x="16.4392%" y="1919.50"></text></g><g><title>ttwu_queue_wakelist (3,275,725 samples, 0.01%)</title><rect x="16.1892%" y="1893" width="0.0122%" height="15" fill="rgb(245,50,10)" fg:x="4351409057" fg:w="3275725"/><text x="16.4392%" y="1903.50"></text></g><g><title>entry_SYSCALL_64 (12,798,849 samples, 0.05%)</title><rect x="16.1617%" y="2037" width="0.0476%" height="15" fill="rgb(216,100,18)" fg:x="4344018899" fg:w="12798849"/><text x="16.4117%" y="2047.50"></text></g><g><title>do_syscall_64 (12,048,015 samples, 0.04%)</title><rect x="16.1645%" y="2021" width="0.0448%" height="15" fill="rgb(236,147,54)" fg:x="4344769733" fg:w="12048015"/><text x="16.4145%" y="2031.50"></text></g><g><title>entry_ibpb (3,470,505 samples, 0.01%)</title><rect x="16.2093%" y="2037" width="0.0129%" height="15" fill="rgb(205,143,26)" fg:x="4356817748" fg:w="3470505"/><text x="16.4593%" y="2047.50"></text></g><g><title>pthread_cond_signal@@GLIBC_2.3.2 (18,402,410 samples, 0.07%)</title><rect x="16.1566%" y="2053" width="0.0685%" height="15" fill="rgb(236,26,9)" fg:x="4342651018" fg:w="18402410"/><text x="16.4066%" y="2063.50"></text></g><g><title>asm_exc_page_fault (3,625,332 samples, 0.01%)</title><rect x="16.2652%" y="1957" width="0.0135%" height="15" fill="rgb(221,165,53)" fg:x="4371846315" fg:w="3625332"/><text x="16.5152%" y="1967.50"></text></g><g><title>exc_page_fault (2,901,717 samples, 0.01%)</title><rect x="16.2679%" y="1941" width="0.0108%" height="15" fill="rgb(214,110,17)" fg:x="4372569930" fg:w="2901717"/><text x="16.5179%" y="1951.50"></text></g><g><title>do_user_addr_fault (2,901,717 samples, 0.01%)</title><rect x="16.2679%" y="1925" width="0.0108%" height="15" fill="rgb(237,197,12)" fg:x="4372569930" fg:w="2901717"/><text x="16.5179%" y="1935.50"></text></g><g><title>std::_Function_handler&lt;void (), v8::internal::ArrayBufferSweeper::RequestSweep(v8::internal::ArrayBufferSweeper::SweepingType, v8::internal::ArrayBufferSweeper::TreatAllYoungAsPromoted)::{lambda()#1}&gt;::_M_invoke (15,380,735 samples, 0.06%)</title><rect x="16.2270%" y="2021" width="0.0572%" height="15" fill="rgb(205,84,17)" fg:x="4361581272" fg:w="15380735"/><text x="16.4770%" y="2031.50"></text></g><g><title>v8::internal::ArrayBufferSweeper::SweepingJob::SweepYoung (15,380,735 samples, 0.06%)</title><rect x="16.2270%" y="2005" width="0.0572%" height="15" fill="rgb(237,18,45)" fg:x="4361581272" fg:w="15380735"/><text x="16.4770%" y="2015.50"></text></g><g><title>std::_Sp_counted_deleter&lt;v8::internal::BackingStore*, std::default_delete&lt;v8::internal::BackingStore&gt;, std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (9,979,085 samples, 0.04%)</title><rect x="16.2471%" y="1989" width="0.0371%" height="15" fill="rgb(221,87,14)" fg:x="4366982922" fg:w="9979085"/><text x="16.4971%" y="1999.50"></text></g><g><title>v8::internal::BackingStore::Clear (6,499,596 samples, 0.02%)</title><rect x="16.2601%" y="1973" width="0.0242%" height="15" fill="rgb(238,186,15)" fg:x="4370462411" fg:w="6499596"/><text x="16.5101%" y="1983.50"></text></g><g><title>v8::internal::compiler::GraphReducer::ReduceTop (3,252,261 samples, 0.01%)</title><rect x="16.2917%" y="1909" width="0.0121%" height="15" fill="rgb(208,115,11)" fg:x="4378949710" fg:w="3252261"/><text x="16.5417%" y="1919.50"></text></g><g><title>v8::internal::compiler::GraphReducer::Reduce (2,768,529 samples, 0.01%)</title><rect x="16.2935%" y="1893" width="0.0103%" height="15" fill="rgb(254,175,0)" fg:x="4379433442" fg:w="2768529"/><text x="16.5435%" y="1903.50"></text></g><g><title>v8::internal::compiler::(anonymous namespace)::SourcePositionWrapper::Reduce (2,768,529 samples, 0.01%)</title><rect x="16.2935%" y="1877" width="0.0103%" height="15" fill="rgb(227,24,42)" fg:x="4379433442" fg:w="2768529"/><text x="16.5435%" y="1887.50"></text></g><g><title>v8::internal::compiler::Reducer::Reduce (2,768,529 samples, 0.01%)</title><rect x="16.2935%" y="1861" width="0.0103%" height="15" fill="rgb(223,211,37)" fg:x="4379433442" fg:w="2768529"/><text x="16.5435%" y="1871.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::CreateGraph (4,266,316 samples, 0.02%)</title><rect x="16.2895%" y="1957" width="0.0159%" height="15" fill="rgb(235,49,27)" fg:x="4378366046" fg:w="4266316"/><text x="16.5395%" y="1967.50"></text></g><g><title>v8::internal::compiler::InliningPhase::Run (3,682,652 samples, 0.01%)</title><rect x="16.2917%" y="1941" width="0.0137%" height="15" fill="rgb(254,97,51)" fg:x="4378949710" fg:w="3682652"/><text x="16.5417%" y="1951.50"></text></g><g><title>v8::internal::compiler::GraphReducer::ReduceNode (3,682,652 samples, 0.01%)</title><rect x="16.2917%" y="1925" width="0.0137%" height="15" fill="rgb(249,51,40)" fg:x="4378949710" fg:w="3682652"/><text x="16.5417%" y="1935.50"></text></g><g><title>auto v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::AllocateGeneralRegistersPhase&lt;v8::internal::compiler::LinearScanAllocator&gt;&gt; (3,166,432 samples, 0.01%)</title><rect x="16.3498%" y="1909" width="0.0118%" height="15" fill="rgb(210,128,45)" fg:x="4394570853" fg:w="3166432"/><text x="16.5998%" y="1919.50"></text></g><g><title>v8::internal::compiler::LinearScanAllocator::AllocateRegisters (3,166,432 samples, 0.01%)</title><rect x="16.3498%" y="1893" width="0.0118%" height="15" fill="rgb(224,137,50)" fg:x="4394570853" fg:w="3166432"/><text x="16.5998%" y="1903.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::SelectInstructions (5,747,899 samples, 0.02%)</title><rect x="16.3425%" y="1941" width="0.0214%" height="15" fill="rgb(242,15,9)" fg:x="4392612904" fg:w="5747899"/><text x="16.5925%" y="1951.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::AllocateRegistersForTopTier (4,465,700 samples, 0.02%)</title><rect x="16.3473%" y="1925" width="0.0166%" height="15" fill="rgb(233,187,41)" fg:x="4393895103" fg:w="4465700"/><text x="16.5973%" y="1935.50"></text></g><g><title>v8::internal::OptimizingCompileDispatcher::CompileTask::RunInternal (24,674,164 samples, 0.09%)</title><rect x="16.2843%" y="2021" width="0.0918%" height="15" fill="rgb(227,2,29)" fg:x="4376962007" fg:w="24674164"/><text x="16.5343%" y="2031.50"></text></g><g><title>v8::internal::OptimizingCompileDispatcher::CompileNext (24,674,164 samples, 0.09%)</title><rect x="16.2843%" y="2005" width="0.0918%" height="15" fill="rgb(222,70,3)" fg:x="4376962007" fg:w="24674164"/><text x="16.5343%" y="2015.50"></text></g><g><title>v8::internal::OptimizedCompilationJob::ExecuteJob (24,674,164 samples, 0.09%)</title><rect x="16.2843%" y="1989" width="0.0918%" height="15" fill="rgb(213,11,42)" fg:x="4376962007" fg:w="24674164"/><text x="16.5343%" y="1999.50"></text></g><g><title>v8::internal::compiler::PipelineCompilationJob::ExecuteJobImpl (24,674,164 samples, 0.09%)</title><rect x="16.2843%" y="1973" width="0.0918%" height="15" fill="rgb(225,150,9)" fg:x="4376962007" fg:w="24674164"/><text x="16.5343%" y="1983.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::OptimizeGraph (19,003,809 samples, 0.07%)</title><rect x="16.3054%" y="1957" width="0.0707%" height="15" fill="rgb(230,162,45)" fg:x="4382632362" fg:w="19003809"/><text x="16.5554%" y="1967.50"></text></g><g><title>node::(anonymous namespace)::PlatformWorkerThread (43,648,605 samples, 0.16%)</title><rect x="16.2270%" y="2037" width="0.1624%" height="15" fill="rgb(222,14,52)" fg:x="4361581272" fg:w="43648605"/><text x="16.4770%" y="2047.50"></text></g><g><title>v8::platform::DefaultJobWorker::Run (3,593,706 samples, 0.01%)</title><rect x="16.3761%" y="2021" width="0.0134%" height="15" fill="rgb(254,198,14)" fg:x="4401636171" fg:w="3593706"/><text x="16.6261%" y="2031.50"></text></g><g><title>select_task_rq_fair (3,335,511 samples, 0.01%)</title><rect x="16.4532%" y="1797" width="0.0124%" height="15" fill="rgb(220,217,30)" fg:x="4422368541" fg:w="3335511"/><text x="16.7032%" y="1807.50"></text></g><g><title>__wake_up_common_lock (14,050,874 samples, 0.05%)</title><rect x="16.4214%" y="1861" width="0.0523%" height="15" fill="rgb(215,146,41)" fg:x="4413820708" fg:w="14050874"/><text x="16.6714%" y="1871.50"></text></g><g><title>ep_autoremove_wake_function (13,227,717 samples, 0.05%)</title><rect x="16.4245%" y="1845" width="0.0492%" height="15" fill="rgb(217,27,36)" fg:x="4414643865" fg:w="13227717"/><text x="16.6745%" y="1855.50"></text></g><g><title>default_wake_function (13,118,547 samples, 0.05%)</title><rect x="16.4249%" y="1829" width="0.0488%" height="15" fill="rgb(219,218,39)" fg:x="4414753035" fg:w="13118547"/><text x="16.6749%" y="1839.50"></text></g><g><title>try_to_wake_up (12,351,972 samples, 0.05%)</title><rect x="16.4277%" y="1813" width="0.0460%" height="15" fill="rgb(219,4,42)" fg:x="4415519610" fg:w="12351972"/><text x="16.6777%" y="1823.50"></text></g><g><title>__wake_up (14,813,179 samples, 0.06%)</title><rect x="16.4214%" y="1877" width="0.0551%" height="15" fill="rgb(249,119,36)" fg:x="4413820708" fg:w="14813179"/><text x="16.6714%" y="1887.50"></text></g><g><title>__wake_up_locked_key (18,332,443 samples, 0.07%)</title><rect x="16.4108%" y="1909" width="0.0682%" height="15" fill="rgb(209,23,33)" fg:x="4410981286" fg:w="18332443"/><text x="16.6608%" y="1919.50"></text></g><g><title>ep_poll_callback (16,989,260 samples, 0.06%)</title><rect x="16.4158%" y="1893" width="0.0632%" height="15" fill="rgb(211,10,0)" fg:x="4412324469" fg:w="16989260"/><text x="16.6658%" y="1903.50"></text></g><g><title>eventfd_write (20,598,696 samples, 0.08%)</title><rect x="16.4081%" y="1925" width="0.0766%" height="15" fill="rgb(208,99,37)" fg:x="4410246234" fg:w="20598696"/><text x="16.6581%" y="1935.50"></text></g><g><title>__x64_sys_write (22,820,548 samples, 0.08%)</title><rect x="16.4026%" y="1973" width="0.0849%" height="15" fill="rgb(213,132,31)" fg:x="4408761122" fg:w="22820548"/><text x="16.6526%" y="1983.50"></text></g><g><title>ksys_write (22,820,548 samples, 0.08%)</title><rect x="16.4026%" y="1957" width="0.0849%" height="15" fill="rgb(243,129,40)" fg:x="4408761122" fg:w="22820548"/><text x="16.6526%" y="1967.50"></text></g><g><title>vfs_write (22,820,548 samples, 0.08%)</title><rect x="16.4026%" y="1941" width="0.0849%" height="15" fill="rgb(210,66,33)" fg:x="4408761122" fg:w="22820548"/><text x="16.6526%" y="1951.50"></text></g><g><title>entry_SYSCALL_64 (23,582,244 samples, 0.09%)</title><rect x="16.4026%" y="2005" width="0.0877%" height="15" fill="rgb(209,189,4)" fg:x="4408761122" fg:w="23582244"/><text x="16.6526%" y="2015.50"></text></g><g><title>do_syscall_64 (23,582,244 samples, 0.09%)</title><rect x="16.4026%" y="1989" width="0.0877%" height="15" fill="rgb(214,107,37)" fg:x="4408761122" fg:w="23582244"/><text x="16.6526%" y="1999.50"></text></g><g><title>__GI___libc_write (30,079,800 samples, 0.11%)</title><rect x="16.3971%" y="2021" width="0.1119%" height="15" fill="rgb(245,88,54)" fg:x="4407300573" fg:w="30079800"/><text x="16.6471%" y="2031.50"></text></g><g><title>entry_ibpb (5,037,007 samples, 0.02%)</title><rect x="16.4903%" y="2005" width="0.0187%" height="15" fill="rgb(205,146,20)" fg:x="4432343366" fg:w="5037007"/><text x="16.7403%" y="2015.50"></text></g><g><title>entry_SYSCALL_64 (4,443,422 samples, 0.02%)</title><rect x="16.5090%" y="2005" width="0.0165%" height="15" fill="rgb(220,161,25)" fg:x="4437380373" fg:w="4443422"/><text x="16.7590%" y="2015.50"></text></g><g><title>do_syscall_64 (2,897,453 samples, 0.01%)</title><rect x="16.5148%" y="1989" width="0.0108%" height="15" fill="rgb(215,152,15)" fg:x="4438926342" fg:w="2897453"/><text x="16.7648%" y="1999.50"></text></g><g><title>__GI___lll_lock_wake (10,753,015 samples, 0.04%)</title><rect x="16.5090%" y="2021" width="0.0400%" height="15" fill="rgb(233,192,44)" fg:x="4437380373" fg:w="10753015"/><text x="16.7590%" y="2031.50"></text></g><g><title>entry_ibpb (6,309,593 samples, 0.02%)</title><rect x="16.5256%" y="2005" width="0.0235%" height="15" fill="rgb(240,170,46)" fg:x="4441823795" fg:w="6309593"/><text x="16.7756%" y="2015.50"></text></g><g><title>link_path_walk (2,949,248 samples, 0.01%)</title><rect x="16.5631%" y="1893" width="0.0110%" height="15" fill="rgb(207,104,33)" fg:x="4451897491" fg:w="2949248"/><text x="16.8131%" y="1903.50"></text></g><g><title>filename_lookup (5,174,949 samples, 0.02%)</title><rect x="16.5631%" y="1925" width="0.0193%" height="15" fill="rgb(219,21,39)" fg:x="4451897491" fg:w="5174949"/><text x="16.8131%" y="1935.50"></text></g><g><title>path_lookupat (5,174,949 samples, 0.02%)</title><rect x="16.5631%" y="1909" width="0.0193%" height="15" fill="rgb(214,133,29)" fg:x="4451897491" fg:w="5174949"/><text x="16.8131%" y="1919.50"></text></g><g><title>user_path_at_empty (7,259,214 samples, 0.03%)</title><rect x="16.5631%" y="1941" width="0.0270%" height="15" fill="rgb(226,93,6)" fg:x="4451897491" fg:w="7259214"/><text x="16.8131%" y="1951.50"></text></g><g><title>do_readlinkat (11,066,768 samples, 0.04%)</title><rect x="16.5517%" y="1957" width="0.0412%" height="15" fill="rgb(252,222,34)" fg:x="4448843865" fg:w="11066768"/><text x="16.8017%" y="1967.50"></text></g><g><title>entry_SYSCALL_64 (12,553,581 samples, 0.05%)</title><rect x="16.5491%" y="2005" width="0.0467%" height="15" fill="rgb(252,92,48)" fg:x="4448133388" fg:w="12553581"/><text x="16.7991%" y="2015.50"></text></g><g><title>do_syscall_64 (11,843,104 samples, 0.04%)</title><rect x="16.5517%" y="1989" width="0.0441%" height="15" fill="rgb(245,223,24)" fg:x="4448843865" fg:w="11843104"/><text x="16.8017%" y="1999.50"></text></g><g><title>__x64_sys_readlink (11,843,104 samples, 0.04%)</title><rect x="16.5517%" y="1973" width="0.0441%" height="15" fill="rgb(205,176,3)" fg:x="4448843865" fg:w="11843104"/><text x="16.8017%" y="1983.50"></text></g><g><title>__GI___readlink (14,027,079 samples, 0.05%)</title><rect x="16.5491%" y="2021" width="0.0522%" height="15" fill="rgb(235,151,15)" fg:x="4448133388" fg:w="14027079"/><text x="16.7991%" y="2031.50"></text></g><g><title>established_get_first (14,942,976 samples, 0.06%)</title><rect x="16.6184%" y="1861" width="0.0556%" height="15" fill="rgb(237,209,11)" fg:x="4466766492" fg:w="14942976"/><text x="16.8684%" y="1871.50"></text></g><g><title>established_get_next (9,911,275 samples, 0.04%)</title><rect x="16.6740%" y="1861" width="0.0369%" height="15" fill="rgb(243,227,24)" fg:x="4481709468" fg:w="9911275"/><text x="16.9240%" y="1871.50"></text></g><g><title>established_get_first (9,911,275 samples, 0.04%)</title><rect x="16.6740%" y="1845" width="0.0369%" height="15" fill="rgb(239,193,16)" fg:x="4481709468" fg:w="9911275"/><text x="16.9240%" y="1855.50"></text></g><g><title>proc_reg_read (26,506,645 samples, 0.10%)</title><rect x="16.6179%" y="1925" width="0.0986%" height="15" fill="rgb(231,27,9)" fg:x="4466650791" fg:w="26506645"/><text x="16.8679%" y="1935.50"></text></g><g><title>seq_read (26,506,645 samples, 0.10%)</title><rect x="16.6179%" y="1909" width="0.0986%" height="15" fill="rgb(219,169,10)" fg:x="4466650791" fg:w="26506645"/><text x="16.8679%" y="1919.50"></text></g><g><title>seq_read_iter (26,506,645 samples, 0.10%)</title><rect x="16.6179%" y="1893" width="0.0986%" height="15" fill="rgb(244,229,43)" fg:x="4466650791" fg:w="26506645"/><text x="16.8679%" y="1903.50"></text></g><g><title>tcp_seq_next (26,390,944 samples, 0.10%)</title><rect x="16.6184%" y="1877" width="0.0982%" height="15" fill="rgb(254,38,20)" fg:x="4466766492" fg:w="26390944"/><text x="16.8684%" y="1887.50"></text></g><g><title>read (28,732,862 samples, 0.11%)</title><rect x="16.6122%" y="2021" width="0.1069%" height="15" fill="rgb(250,47,30)" fg:x="4465102328" fg:w="28732862"/><text x="16.8622%" y="2031.50"></text></g><g><title>entry_SYSCALL_64 (28,732,862 samples, 0.11%)</title><rect x="16.6122%" y="2005" width="0.1069%" height="15" fill="rgb(224,124,36)" fg:x="4465102328" fg:w="28732862"/><text x="16.8622%" y="2015.50"></text></g><g><title>do_syscall_64 (28,732,862 samples, 0.11%)</title><rect x="16.6122%" y="1989" width="0.1069%" height="15" fill="rgb(246,68,51)" fg:x="4465102328" fg:w="28732862"/><text x="16.8622%" y="1999.50"></text></g><g><title>__x64_sys_read (28,732,862 samples, 0.11%)</title><rect x="16.6122%" y="1973" width="0.1069%" height="15" fill="rgb(253,43,49)" fg:x="4465102328" fg:w="28732862"/><text x="16.8622%" y="1983.50"></text></g><g><title>ksys_read (28,732,862 samples, 0.11%)</title><rect x="16.6122%" y="1957" width="0.1069%" height="15" fill="rgb(219,54,36)" fg:x="4465102328" fg:w="28732862"/><text x="16.8622%" y="1967.50"></text></g><g><title>vfs_read (28,732,862 samples, 0.11%)</title><rect x="16.6122%" y="1941" width="0.1069%" height="15" fill="rgb(227,133,34)" fg:x="4465102328" fg:w="28732862"/><text x="16.8622%" y="1951.50"></text></g><g><title>getname_flags (3,717,588 samples, 0.01%)</title><rect x="16.7294%" y="1925" width="0.0138%" height="15" fill="rgb(247,227,15)" fg:x="4496618400" fg:w="3717588"/><text x="16.9794%" y="1935.50"></text></g><g><title>__x64_sys_statx (9,437,247 samples, 0.04%)</title><rect x="16.7240%" y="1941" width="0.0351%" height="15" fill="rgb(229,96,14)" fg:x="4495168490" fg:w="9437247"/><text x="16.9740%" y="1951.50"></text></g><g><title>vfs_statx (4,269,749 samples, 0.02%)</title><rect x="16.7433%" y="1925" width="0.0159%" height="15" fill="rgb(220,79,17)" fg:x="4500335988" fg:w="4269749"/><text x="16.9933%" y="1935.50"></text></g><g><title>filename_lookup (4,269,749 samples, 0.02%)</title><rect x="16.7433%" y="1909" width="0.0159%" height="15" fill="rgb(205,131,53)" fg:x="4500335988" fg:w="4269749"/><text x="16.9933%" y="1919.50"></text></g><g><title>path_lookupat (4,269,749 samples, 0.02%)</title><rect x="16.7433%" y="1893" width="0.0159%" height="15" fill="rgb(209,50,29)" fg:x="4500335988" fg:w="4269749"/><text x="16.9933%" y="1903.50"></text></g><g><title>entry_SYSCALL_64 (11,448,469 samples, 0.04%)</title><rect x="16.7191%" y="1973" width="0.0426%" height="15" fill="rgb(245,86,46)" fg:x="4493835190" fg:w="11448469"/><text x="16.9691%" y="1983.50"></text></g><g><title>do_syscall_64 (10,115,169 samples, 0.04%)</title><rect x="16.7240%" y="1957" width="0.0376%" height="15" fill="rgb(235,66,46)" fg:x="4495168490" fg:w="10115169"/><text x="16.9740%" y="1967.50"></text></g><g><title>uv__fs_statx (13,414,743 samples, 0.05%)</title><rect x="16.7191%" y="2005" width="0.0499%" height="15" fill="rgb(232,148,31)" fg:x="4493835190" fg:w="13414743"/><text x="16.9691%" y="2015.50"></text></g><g><title>syscall (13,414,743 samples, 0.05%)</title><rect x="16.7191%" y="1989" width="0.0499%" height="15" fill="rgb(217,149,8)" fg:x="4493835190" fg:w="13414743"/><text x="16.9691%" y="1999.50"></text></g><g><title>uv__fs_work (14,150,179 samples, 0.05%)</title><rect x="16.7191%" y="2021" width="0.0526%" height="15" fill="rgb(209,183,11)" fg:x="4493835190" fg:w="14150179"/><text x="16.9691%" y="2031.50"></text></g><g><title>start_thread (147,159,107 samples, 0.55%)</title><rect x="16.2270%" y="2053" width="0.5475%" height="15" fill="rgb(208,55,20)" fg:x="4361581272" fg:w="147159107"/><text x="16.4770%" y="2063.50"></text></g><g><title>worker (101,987,033 samples, 0.38%)</title><rect x="16.3951%" y="2037" width="0.3794%" height="15" fill="rgb(218,39,14)" fg:x="4406753346" fg:w="101987033"/><text x="16.6451%" y="2047.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="2005" width="0.0229%" height="15" fill="rgb(216,169,33)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="2015.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1989" width="0.0229%" height="15" fill="rgb(233,80,24)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1999.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1973" width="0.0229%" height="15" fill="rgb(213,179,31)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1983.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1957" width="0.0229%" height="15" fill="rgb(209,19,5)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1967.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1941" width="0.0229%" height="15" fill="rgb(219,18,35)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1951.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1925" width="0.0229%" height="15" fill="rgb(209,169,16)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1935.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1909" width="0.0229%" height="15" fill="rgb(245,90,51)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1919.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1893" width="0.0229%" height="15" fill="rgb(220,99,45)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1903.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1877" width="0.0229%" height="15" fill="rgb(249,89,25)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1887.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1861" width="0.0229%" height="15" fill="rgb(239,193,0)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1871.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1845" width="0.0229%" height="15" fill="rgb(231,126,1)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1855.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1829" width="0.0229%" height="15" fill="rgb(243,166,3)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1839.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1813" width="0.0229%" height="15" fill="rgb(223,22,34)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1823.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1797" width="0.0229%" height="15" fill="rgb(251,52,51)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1807.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1781" width="0.0229%" height="15" fill="rgb(221,165,28)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1791.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1765" width="0.0229%" height="15" fill="rgb(218,121,47)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1775.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1749" width="0.0229%" height="15" fill="rgb(209,120,9)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1759.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1733" width="0.0229%" height="15" fill="rgb(236,68,12)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1743.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1717" width="0.0229%" height="15" fill="rgb(225,194,26)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1727.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1701" width="0.0229%" height="15" fill="rgb(231,84,39)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1711.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1685" width="0.0229%" height="15" fill="rgb(210,11,45)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1695.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1669" width="0.0229%" height="15" fill="rgb(224,54,52)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1679.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1653" width="0.0229%" height="15" fill="rgb(238,102,14)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1663.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1637" width="0.0229%" height="15" fill="rgb(243,160,52)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1647.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1621" width="0.0229%" height="15" fill="rgb(216,114,19)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1631.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1605" width="0.0229%" height="15" fill="rgb(244,166,37)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1615.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1589" width="0.0229%" height="15" fill="rgb(246,29,44)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1599.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1573" width="0.0229%" height="15" fill="rgb(215,56,53)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1583.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1557" width="0.0229%" height="15" fill="rgb(217,60,2)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1567.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1541" width="0.0229%" height="15" fill="rgb(207,26,24)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1551.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1525" width="0.0229%" height="15" fill="rgb(252,210,15)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1535.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1509" width="0.0229%" height="15" fill="rgb(253,209,26)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1519.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1493" width="0.0229%" height="15" fill="rgb(238,170,14)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1503.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1477" width="0.0229%" height="15" fill="rgb(216,178,15)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1487.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1461" width="0.0229%" height="15" fill="rgb(250,197,2)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1471.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1445" width="0.0229%" height="15" fill="rgb(212,70,42)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1455.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1429" width="0.0229%" height="15" fill="rgb(227,213,9)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1439.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1413" width="0.0229%" height="15" fill="rgb(245,99,25)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1423.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1397" width="0.0229%" height="15" fill="rgb(250,82,29)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1407.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1381" width="0.0229%" height="15" fill="rgb(241,226,54)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1391.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1365" width="0.0229%" height="15" fill="rgb(221,99,41)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1375.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1349" width="0.0229%" height="15" fill="rgb(213,90,21)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1359.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1333" width="0.0229%" height="15" fill="rgb(205,208,24)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1343.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1317" width="0.0229%" height="15" fill="rgb(246,31,12)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1327.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1301" width="0.0229%" height="15" fill="rgb(213,154,6)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1311.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1285" width="0.0229%" height="15" fill="rgb(222,163,29)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1295.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1269" width="0.0229%" height="15" fill="rgb(227,201,8)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1279.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1253" width="0.0229%" height="15" fill="rgb(233,9,32)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1263.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1237" width="0.0229%" height="15" fill="rgb(217,54,24)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1247.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1221" width="0.0229%" height="15" fill="rgb(235,192,0)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1231.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1205" width="0.0229%" height="15" fill="rgb(235,45,9)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1215.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1189" width="0.0229%" height="15" fill="rgb(246,42,40)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1199.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1173" width="0.0229%" height="15" fill="rgb(248,111,24)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1183.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1157" width="0.0229%" height="15" fill="rgb(249,65,22)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1167.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1141" width="0.0229%" height="15" fill="rgb(238,111,51)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1151.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1125" width="0.0229%" height="15" fill="rgb(250,118,22)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1135.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1109" width="0.0229%" height="15" fill="rgb(234,84,26)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1119.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1093" width="0.0229%" height="15" fill="rgb(243,172,12)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1103.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1077" width="0.0229%" height="15" fill="rgb(236,150,49)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1087.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1061" width="0.0229%" height="15" fill="rgb(225,197,26)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1071.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1045" width="0.0229%" height="15" fill="rgb(214,17,42)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1055.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1029" width="0.0229%" height="15" fill="rgb(224,165,40)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1039.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="1013" width="0.0229%" height="15" fill="rgb(246,100,4)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1023.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="997" width="0.0229%" height="15" fill="rgb(222,103,0)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="1007.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="981" width="0.0229%" height="15" fill="rgb(227,189,26)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="991.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="965" width="0.0229%" height="15" fill="rgb(214,202,17)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="975.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="949" width="0.0229%" height="15" fill="rgb(229,111,3)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="959.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="933" width="0.0229%" height="15" fill="rgb(229,172,15)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="943.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="917" width="0.0229%" height="15" fill="rgb(230,224,35)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="927.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="901" width="0.0229%" height="15" fill="rgb(251,141,6)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="911.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="885" width="0.0229%" height="15" fill="rgb(225,208,6)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="895.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="869" width="0.0229%" height="15" fill="rgb(246,181,16)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="879.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="853" width="0.0229%" height="15" fill="rgb(227,129,36)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="863.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="837" width="0.0229%" height="15" fill="rgb(248,117,24)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="847.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="821" width="0.0229%" height="15" fill="rgb(214,185,35)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="831.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="805" width="0.0229%" height="15" fill="rgb(236,150,34)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="815.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="789" width="0.0229%" height="15" fill="rgb(243,228,27)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="799.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="773" width="0.0229%" height="15" fill="rgb(245,77,44)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="783.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="757" width="0.0229%" height="15" fill="rgb(235,214,42)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="767.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="741" width="0.0229%" height="15" fill="rgb(221,74,3)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="751.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="725" width="0.0229%" height="15" fill="rgb(206,121,29)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="735.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="709" width="0.0229%" height="15" fill="rgb(249,131,53)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="719.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="693" width="0.0229%" height="15" fill="rgb(236,170,29)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="703.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="677" width="0.0229%" height="15" fill="rgb(247,96,15)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="687.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="661" width="0.0229%" height="15" fill="rgb(211,210,7)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="671.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="645" width="0.0229%" height="15" fill="rgb(240,88,50)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="655.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="629" width="0.0229%" height="15" fill="rgb(209,229,26)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="639.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="613" width="0.0229%" height="15" fill="rgb(210,68,23)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="623.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="597" width="0.0229%" height="15" fill="rgb(229,180,13)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="607.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="581" width="0.0229%" height="15" fill="rgb(236,53,44)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="591.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="565" width="0.0229%" height="15" fill="rgb(244,214,29)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="575.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="549" width="0.0229%" height="15" fill="rgb(220,75,29)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="559.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="533" width="0.0229%" height="15" fill="rgb(214,183,37)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="543.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="517" width="0.0229%" height="15" fill="rgb(239,117,29)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="527.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="501" width="0.0229%" height="15" fill="rgb(237,171,35)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="511.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="485" width="0.0229%" height="15" fill="rgb(229,178,53)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="495.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="469" width="0.0229%" height="15" fill="rgb(210,102,19)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="479.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="453" width="0.0229%" height="15" fill="rgb(235,127,22)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="463.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="437" width="0.0229%" height="15" fill="rgb(244,31,31)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="447.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="421" width="0.0229%" height="15" fill="rgb(231,43,21)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="431.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="405" width="0.0229%" height="15" fill="rgb(217,131,35)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="415.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="389" width="0.0229%" height="15" fill="rgb(221,149,4)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="399.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="373" width="0.0229%" height="15" fill="rgb(232,170,28)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="383.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="357" width="0.0229%" height="15" fill="rgb(238,56,10)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="367.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="341" width="0.0229%" height="15" fill="rgb(235,196,14)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="351.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="325" width="0.0229%" height="15" fill="rgb(216,45,48)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="335.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="309" width="0.0229%" height="15" fill="rgb(238,213,17)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="319.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="293" width="0.0229%" height="15" fill="rgb(212,13,2)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="303.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="277" width="0.0229%" height="15" fill="rgb(240,114,20)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="287.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="261" width="0.0229%" height="15" fill="rgb(228,41,40)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="271.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="245" width="0.0229%" height="15" fill="rgb(244,132,35)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="255.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="229" width="0.0229%" height="15" fill="rgb(253,189,4)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="239.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="213" width="0.0229%" height="15" fill="rgb(224,37,19)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="223.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="197" width="0.0229%" height="15" fill="rgb(235,223,18)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="207.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="181" width="0.0229%" height="15" fill="rgb(235,163,25)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="191.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="165" width="0.0229%" height="15" fill="rgb(217,145,28)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="175.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="149" width="0.0229%" height="15" fill="rgb(223,223,32)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="159.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="133" width="0.0229%" height="15" fill="rgb(227,189,39)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="143.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="117" width="0.0229%" height="15" fill="rgb(248,10,22)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="127.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="101" width="0.0229%" height="15" fill="rgb(248,46,39)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="111.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="85" width="0.0229%" height="15" fill="rgb(248,113,48)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="95.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="69" width="0.0229%" height="15" fill="rgb(245,16,25)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="79.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6,151,032 samples, 0.02%)</title><rect x="16.7745%" y="53" width="0.0229%" height="15" fill="rgb(249,152,16)" fg:x="4508740379" fg:w="6151032"/><text x="17.0245%" y="63.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (5,605,908 samples, 0.02%)</title><rect x="16.7766%" y="37" width="0.0209%" height="15" fill="rgb(250,16,1)" fg:x="4509285503" fg:w="5605908"/><text x="17.0266%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (40,095,374 samples, 0.15%)</title><rect x="16.7995%" y="37" width="0.1492%" height="15" fill="rgb(249,138,3)" fg:x="4515450724" fg:w="40095374"/><text x="17.0495%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (41,796,923 samples, 0.16%)</title><rect x="16.7995%" y="53" width="0.1555%" height="15" fill="rgb(227,71,41)" fg:x="4515450724" fg:w="41796923"/><text x="17.0495%" y="63.50"></text></g><g><title>malloc (8,022,332 samples, 0.03%)</title><rect x="16.9550%" y="37" width="0.0298%" height="15" fill="rgb(209,184,23)" fg:x="4557247647" fg:w="8022332"/><text x="17.2050%" y="47.50"></text></g><g><title>operator new (7,546,805 samples, 0.03%)</title><rect x="16.9849%" y="37" width="0.0281%" height="15" fill="rgb(223,215,31)" fg:x="4565269979" fg:w="7546805"/><text x="17.2349%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (37,285,099 samples, 0.14%)</title><rect x="17.0129%" y="37" width="0.1387%" height="15" fill="rgb(210,146,28)" fg:x="4572816784" fg:w="37285099"/><text x="17.2629%" y="47.50"></text></g><g><title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (48,810,110 samples, 0.18%)</title><rect x="17.1516%" y="37" width="0.1816%" height="15" fill="rgb(209,183,41)" fg:x="4610101883" fg:w="48810110"/><text x="17.4016%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (167,442,314 samples, 0.62%)</title><rect x="16.7995%" y="117" width="0.6230%" height="15" fill="rgb(209,224,45)" fg:x="4515450724" fg:w="167442314"/><text x="17.0495%" y="127.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (167,442,314 samples, 0.62%)</title><rect x="16.7995%" y="101" width="0.6230%" height="15" fill="rgb(224,209,51)" fg:x="4515450724" fg:w="167442314"/><text x="17.0495%" y="111.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (167,442,314 samples, 0.62%)</title><rect x="16.7995%" y="85" width="0.6230%" height="15" fill="rgb(223,17,39)" fg:x="4515450724" fg:w="167442314"/><text x="17.0495%" y="95.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (167,442,314 samples, 0.62%)</title><rect x="16.7995%" y="69" width="0.6230%" height="15" fill="rgb(234,204,37)" fg:x="4515450724" fg:w="167442314"/><text x="17.0495%" y="79.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (125,645,391 samples, 0.47%)</title><rect x="16.9550%" y="53" width="0.4675%" height="15" fill="rgb(236,120,5)" fg:x="4557247647" fg:w="125645391"/><text x="17.2050%" y="63.50"></text></g><g><title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (23,981,045 samples, 0.09%)</title><rect x="17.3332%" y="37" width="0.0892%" height="15" fill="rgb(248,97,27)" fg:x="4658911993" fg:w="23981045"/><text x="17.5832%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (174,696,342 samples, 0.65%)</title><rect x="16.7745%" y="2021" width="0.6499%" height="15" fill="rgb(240,66,17)" fg:x="4508740379" fg:w="174696342"/><text x="17.0245%" y="2031.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="2005" width="0.6271%" height="15" fill="rgb(210,79,3)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="2015.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1989" width="0.6271%" height="15" fill="rgb(214,176,27)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1999.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1973" width="0.6271%" height="15" fill="rgb(235,185,3)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1983.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1957" width="0.6271%" height="15" fill="rgb(227,24,12)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1967.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1941" width="0.6271%" height="15" fill="rgb(252,169,48)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1951.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1925" width="0.6271%" height="15" fill="rgb(212,65,1)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1935.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1909" width="0.6271%" height="15" fill="rgb(242,39,24)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1919.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1893" width="0.6271%" height="15" fill="rgb(249,32,23)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1903.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1877" width="0.6271%" height="15" fill="rgb(251,195,23)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1887.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1861" width="0.6271%" height="15" fill="rgb(236,174,8)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1871.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1845" width="0.6271%" height="15" fill="rgb(220,197,8)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1855.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1829" width="0.6271%" height="15" fill="rgb(240,108,37)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1839.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1813" width="0.6271%" height="15" fill="rgb(232,176,24)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1823.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1797" width="0.6271%" height="15" fill="rgb(243,35,29)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1807.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1781" width="0.6271%" height="15" fill="rgb(210,37,18)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1791.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1765" width="0.6271%" height="15" fill="rgb(224,184,40)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1775.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1749" width="0.6271%" height="15" fill="rgb(236,39,29)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1759.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1733" width="0.6271%" height="15" fill="rgb(232,48,39)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1743.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1717" width="0.6271%" height="15" fill="rgb(236,34,42)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1727.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1701" width="0.6271%" height="15" fill="rgb(243,106,37)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1711.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1685" width="0.6271%" height="15" fill="rgb(218,96,6)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1695.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1669" width="0.6271%" height="15" fill="rgb(235,130,12)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1679.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1653" width="0.6271%" height="15" fill="rgb(231,95,0)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1663.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1637" width="0.6271%" height="15" fill="rgb(228,12,23)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1647.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1621" width="0.6271%" height="15" fill="rgb(216,12,1)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1631.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1605" width="0.6271%" height="15" fill="rgb(219,59,3)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1615.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1589" width="0.6271%" height="15" fill="rgb(215,208,46)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1599.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1573" width="0.6271%" height="15" fill="rgb(254,224,29)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1583.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1557" width="0.6271%" height="15" fill="rgb(232,14,29)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1567.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1541" width="0.6271%" height="15" fill="rgb(208,45,52)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1551.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1525" width="0.6271%" height="15" fill="rgb(234,191,28)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1535.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1509" width="0.6271%" height="15" fill="rgb(244,67,43)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1519.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1493" width="0.6271%" height="15" fill="rgb(236,189,24)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1503.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1477" width="0.6271%" height="15" fill="rgb(239,214,33)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1487.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1461" width="0.6271%" height="15" fill="rgb(226,176,41)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1471.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1445" width="0.6271%" height="15" fill="rgb(248,47,8)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1455.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1429" width="0.6271%" height="15" fill="rgb(218,81,44)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1439.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1413" width="0.6271%" height="15" fill="rgb(213,98,6)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1423.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1397" width="0.6271%" height="15" fill="rgb(222,85,22)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1407.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1381" width="0.6271%" height="15" fill="rgb(239,46,39)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1391.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1365" width="0.6271%" height="15" fill="rgb(237,12,29)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1375.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1349" width="0.6271%" height="15" fill="rgb(214,77,8)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1359.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1333" width="0.6271%" height="15" fill="rgb(217,168,37)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1343.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1317" width="0.6271%" height="15" fill="rgb(221,217,23)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1327.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1301" width="0.6271%" height="15" fill="rgb(243,229,36)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1311.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1285" width="0.6271%" height="15" fill="rgb(251,163,40)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1295.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1269" width="0.6271%" height="15" fill="rgb(237,222,12)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1279.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1253" width="0.6271%" height="15" fill="rgb(248,132,6)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1263.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1237" width="0.6271%" height="15" fill="rgb(227,167,50)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1247.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1221" width="0.6271%" height="15" fill="rgb(242,84,37)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1231.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1205" width="0.6271%" height="15" fill="rgb(212,4,50)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1215.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1189" width="0.6271%" height="15" fill="rgb(230,228,32)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1199.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1173" width="0.6271%" height="15" fill="rgb(248,217,23)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1183.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1157" width="0.6271%" height="15" fill="rgb(238,197,32)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1167.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1141" width="0.6271%" height="15" fill="rgb(236,106,1)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1151.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1125" width="0.6271%" height="15" fill="rgb(219,228,13)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1135.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1109" width="0.6271%" height="15" fill="rgb(238,30,35)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1119.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1093" width="0.6271%" height="15" fill="rgb(236,70,23)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1103.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1077" width="0.6271%" height="15" fill="rgb(249,104,48)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1087.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1061" width="0.6271%" height="15" fill="rgb(254,117,50)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1071.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1045" width="0.6271%" height="15" fill="rgb(223,152,4)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1055.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1029" width="0.6271%" height="15" fill="rgb(245,6,2)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1039.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="1013" width="0.6271%" height="15" fill="rgb(249,150,24)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1023.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="997" width="0.6271%" height="15" fill="rgb(228,185,42)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="1007.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="981" width="0.6271%" height="15" fill="rgb(226,39,33)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="991.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="965" width="0.6271%" height="15" fill="rgb(221,166,19)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="975.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="949" width="0.6271%" height="15" fill="rgb(209,109,2)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="959.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="933" width="0.6271%" height="15" fill="rgb(252,216,26)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="943.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="917" width="0.6271%" height="15" fill="rgb(227,173,36)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="927.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="901" width="0.6271%" height="15" fill="rgb(209,90,7)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="911.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="885" width="0.6271%" height="15" fill="rgb(250,194,11)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="895.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="869" width="0.6271%" height="15" fill="rgb(220,72,50)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="879.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="853" width="0.6271%" height="15" fill="rgb(222,106,48)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="863.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="837" width="0.6271%" height="15" fill="rgb(216,220,45)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="847.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="821" width="0.6271%" height="15" fill="rgb(234,112,18)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="831.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="805" width="0.6271%" height="15" fill="rgb(206,179,9)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="815.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="789" width="0.6271%" height="15" fill="rgb(215,115,40)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="799.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="773" width="0.6271%" height="15" fill="rgb(222,69,34)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="783.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="757" width="0.6271%" height="15" fill="rgb(209,161,10)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="767.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="741" width="0.6271%" height="15" fill="rgb(217,6,38)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="751.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="725" width="0.6271%" height="15" fill="rgb(229,229,48)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="735.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="709" width="0.6271%" height="15" fill="rgb(225,21,28)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="719.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="693" width="0.6271%" height="15" fill="rgb(206,33,13)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="703.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="677" width="0.6271%" height="15" fill="rgb(242,178,17)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="687.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="661" width="0.6271%" height="15" fill="rgb(220,162,5)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="671.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="645" width="0.6271%" height="15" fill="rgb(210,33,43)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="655.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="629" width="0.6271%" height="15" fill="rgb(216,116,54)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="639.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="613" width="0.6271%" height="15" fill="rgb(249,92,24)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="623.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="597" width="0.6271%" height="15" fill="rgb(231,189,14)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="607.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="581" width="0.6271%" height="15" fill="rgb(230,8,41)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="591.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="565" width="0.6271%" height="15" fill="rgb(249,7,27)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="575.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="549" width="0.6271%" height="15" fill="rgb(232,86,5)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="559.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="533" width="0.6271%" height="15" fill="rgb(224,175,18)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="543.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="517" width="0.6271%" height="15" fill="rgb(220,129,12)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="527.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="501" width="0.6271%" height="15" fill="rgb(210,19,36)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="511.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="485" width="0.6271%" height="15" fill="rgb(219,96,14)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="495.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="469" width="0.6271%" height="15" fill="rgb(249,106,1)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="479.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="453" width="0.6271%" height="15" fill="rgb(249,155,20)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="463.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="437" width="0.6271%" height="15" fill="rgb(244,168,9)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="447.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="421" width="0.6271%" height="15" fill="rgb(216,23,50)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="431.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="405" width="0.6271%" height="15" fill="rgb(224,219,20)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="415.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="389" width="0.6271%" height="15" fill="rgb(222,156,15)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="399.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="373" width="0.6271%" height="15" fill="rgb(231,97,17)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="383.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="357" width="0.6271%" height="15" fill="rgb(218,70,48)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="367.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="341" width="0.6271%" height="15" fill="rgb(212,196,52)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="351.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="325" width="0.6271%" height="15" fill="rgb(243,203,18)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="335.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="309" width="0.6271%" height="15" fill="rgb(252,125,41)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="319.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="293" width="0.6271%" height="15" fill="rgb(223,180,33)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="303.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="277" width="0.6271%" height="15" fill="rgb(254,159,46)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="287.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (168,545,310 samples, 0.63%)</title><rect x="16.7974%" y="261" width="0.6271%" height="15" fill="rgb(254,38,10)" fg:x="4514891411" fg:w="168545310"/><text x="17.0474%" y="271.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (167,985,997 samples, 0.62%)</title><rect x="16.7995%" y="245" width="0.6250%" height="15" fill="rgb(208,217,32)" fg:x="4515450724" fg:w="167985997"/><text x="17.0495%" y="255.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (167,985,997 samples, 0.62%)</title><rect x="16.7995%" y="229" width="0.6250%" height="15" fill="rgb(221,120,13)" fg:x="4515450724" fg:w="167985997"/><text x="17.0495%" y="239.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (167,985,997 samples, 0.62%)</title><rect x="16.7995%" y="213" width="0.6250%" height="15" fill="rgb(246,54,52)" fg:x="4515450724" fg:w="167985997"/><text x="17.0495%" y="223.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (167,985,997 samples, 0.62%)</title><rect x="16.7995%" y="197" width="0.6250%" height="15" fill="rgb(242,34,25)" fg:x="4515450724" fg:w="167985997"/><text x="17.0495%" y="207.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (167,985,997 samples, 0.62%)</title><rect x="16.7995%" y="181" width="0.6250%" height="15" fill="rgb(247,209,9)" fg:x="4515450724" fg:w="167985997"/><text x="17.0495%" y="191.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (167,985,997 samples, 0.62%)</title><rect x="16.7995%" y="165" width="0.6250%" height="15" fill="rgb(228,71,26)" fg:x="4515450724" fg:w="167985997"/><text x="17.0495%" y="175.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (167,985,997 samples, 0.62%)</title><rect x="16.7995%" y="149" width="0.6250%" height="15" fill="rgb(222,145,49)" fg:x="4515450724" fg:w="167985997"/><text x="17.0495%" y="159.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (167,985,997 samples, 0.62%)</title><rect x="16.7995%" y="133" width="0.6250%" height="15" fill="rgb(218,121,17)" fg:x="4515450724" fg:w="167985997"/><text x="17.0495%" y="143.50"></text></g><g><title>std::_Function_handler&lt;bool (char), std::__detail::_CharMatcher&lt;std::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_invoke (2,752,753 samples, 0.01%)</title><rect x="17.4267%" y="37" width="0.0102%" height="15" fill="rgb(244,50,7)" fg:x="4684023538" fg:w="2752753"/><text x="17.6767%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,531,263 samples, 0.08%)</title><rect x="17.4369%" y="37" width="0.0764%" height="15" fill="rgb(246,229,37)" fg:x="4686776291" fg:w="20531263"/><text x="17.6869%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,627,051 samples, 0.24%)</title><rect x="17.4267%" y="69" width="0.2442%" height="15" fill="rgb(225,18,5)" fg:x="4684023538" fg:w="65627051"/><text x="17.6767%" y="79.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,627,051 samples, 0.24%)</title><rect x="17.4267%" y="53" width="0.2442%" height="15" fill="rgb(213,204,8)" fg:x="4684023538" fg:w="65627051"/><text x="17.6767%" y="63.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (42,343,035 samples, 0.16%)</title><rect x="17.5133%" y="37" width="0.1575%" height="15" fill="rgb(238,103,6)" fg:x="4707307554" fg:w="42343035"/><text x="17.7633%" y="47.50"></text></g><g><title>std::_Function_handler&lt;bool (char), std::__detail::_CharMatcher&lt;std::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_invoke (5,703,993 samples, 0.02%)</title><rect x="17.6708%" y="37" width="0.0212%" height="15" fill="rgb(222,25,35)" fg:x="4749650589" fg:w="5703993"/><text x="17.9208%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (318,012,510 samples, 1.18%)</title><rect x="16.7745%" y="2037" width="1.1831%" height="15" fill="rgb(213,203,35)" fg:x="4508740379" fg:w="318012510"/><text x="17.0245%" y="2047.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="2021" width="0.5332%" height="15" fill="rgb(221,79,53)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="2031.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="2005" width="0.5332%" height="15" fill="rgb(243,200,35)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="2015.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1989" width="0.5332%" height="15" fill="rgb(248,60,25)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1999.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1973" width="0.5332%" height="15" fill="rgb(227,53,46)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1983.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1957" width="0.5332%" height="15" fill="rgb(216,120,32)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1967.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1941" width="0.5332%" height="15" fill="rgb(220,134,1)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1951.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1925" width="0.5332%" height="15" fill="rgb(237,168,5)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1935.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1909" width="0.5332%" height="15" fill="rgb(231,100,33)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1919.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1893" width="0.5332%" height="15" fill="rgb(236,177,47)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1903.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1877" width="0.5332%" height="15" fill="rgb(235,7,49)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1887.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1861" width="0.5332%" height="15" fill="rgb(232,119,22)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1871.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1845" width="0.5332%" height="15" fill="rgb(254,73,53)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1855.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1829" width="0.5332%" height="15" fill="rgb(251,35,20)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1839.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1813" width="0.5332%" height="15" fill="rgb(241,119,20)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1823.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1797" width="0.5332%" height="15" fill="rgb(207,102,14)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1807.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1781" width="0.5332%" height="15" fill="rgb(248,201,50)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1791.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1765" width="0.5332%" height="15" fill="rgb(222,185,44)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1775.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1749" width="0.5332%" height="15" fill="rgb(218,107,18)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1759.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1733" width="0.5332%" height="15" fill="rgb(237,177,39)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1743.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1717" width="0.5332%" height="15" fill="rgb(246,69,6)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1727.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1701" width="0.5332%" height="15" fill="rgb(234,208,37)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1711.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1685" width="0.5332%" height="15" fill="rgb(225,4,6)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1695.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1669" width="0.5332%" height="15" fill="rgb(233,45,0)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1679.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1653" width="0.5332%" height="15" fill="rgb(226,136,5)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1663.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1637" width="0.5332%" height="15" fill="rgb(211,91,47)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1647.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1621" width="0.5332%" height="15" fill="rgb(242,88,51)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1631.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1605" width="0.5332%" height="15" fill="rgb(230,91,28)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1615.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1589" width="0.5332%" height="15" fill="rgb(254,186,29)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1599.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1573" width="0.5332%" height="15" fill="rgb(238,6,4)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1583.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1557" width="0.5332%" height="15" fill="rgb(221,151,16)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1567.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1541" width="0.5332%" height="15" fill="rgb(251,143,52)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1551.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1525" width="0.5332%" height="15" fill="rgb(206,90,15)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1535.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1509" width="0.5332%" height="15" fill="rgb(218,35,8)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1519.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1493" width="0.5332%" height="15" fill="rgb(239,215,6)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1503.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1477" width="0.5332%" height="15" fill="rgb(245,116,39)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1487.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1461" width="0.5332%" height="15" fill="rgb(242,65,28)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1471.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1445" width="0.5332%" height="15" fill="rgb(252,132,53)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1455.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1429" width="0.5332%" height="15" fill="rgb(224,159,50)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1439.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1413" width="0.5332%" height="15" fill="rgb(224,93,4)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1423.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1397" width="0.5332%" height="15" fill="rgb(208,81,34)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1407.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1381" width="0.5332%" height="15" fill="rgb(233,92,54)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1391.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1365" width="0.5332%" height="15" fill="rgb(237,21,14)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1375.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1349" width="0.5332%" height="15" fill="rgb(249,128,51)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1359.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1333" width="0.5332%" height="15" fill="rgb(223,129,24)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1343.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1317" width="0.5332%" height="15" fill="rgb(231,168,25)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1327.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1301" width="0.5332%" height="15" fill="rgb(224,39,20)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1311.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1285" width="0.5332%" height="15" fill="rgb(225,152,53)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1295.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1269" width="0.5332%" height="15" fill="rgb(252,17,24)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1279.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1253" width="0.5332%" height="15" fill="rgb(250,114,30)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1263.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1237" width="0.5332%" height="15" fill="rgb(229,5,4)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1247.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1221" width="0.5332%" height="15" fill="rgb(225,176,49)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1231.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1205" width="0.5332%" height="15" fill="rgb(224,221,49)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1215.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1189" width="0.5332%" height="15" fill="rgb(253,169,27)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1199.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1173" width="0.5332%" height="15" fill="rgb(211,206,16)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1183.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1157" width="0.5332%" height="15" fill="rgb(244,87,35)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1167.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1141" width="0.5332%" height="15" fill="rgb(246,28,10)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1151.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1125" width="0.5332%" height="15" fill="rgb(229,12,44)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1135.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1109" width="0.5332%" height="15" fill="rgb(210,145,37)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1119.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1093" width="0.5332%" height="15" fill="rgb(227,112,52)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1103.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1077" width="0.5332%" height="15" fill="rgb(238,155,34)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1087.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1061" width="0.5332%" height="15" fill="rgb(239,226,36)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1071.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1045" width="0.5332%" height="15" fill="rgb(230,16,23)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1055.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1029" width="0.5332%" height="15" fill="rgb(236,171,36)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1039.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="1013" width="0.5332%" height="15" fill="rgb(221,22,14)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1023.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="997" width="0.5332%" height="15" fill="rgb(242,43,11)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="1007.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="981" width="0.5332%" height="15" fill="rgb(232,69,23)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="991.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="965" width="0.5332%" height="15" fill="rgb(216,180,54)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="975.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="949" width="0.5332%" height="15" fill="rgb(216,5,24)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="959.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="933" width="0.5332%" height="15" fill="rgb(225,89,9)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="943.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="917" width="0.5332%" height="15" fill="rgb(243,75,33)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="927.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="901" width="0.5332%" height="15" fill="rgb(247,141,45)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="911.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="885" width="0.5332%" height="15" fill="rgb(232,177,36)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="895.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="869" width="0.5332%" height="15" fill="rgb(219,125,36)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="879.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="853" width="0.5332%" height="15" fill="rgb(227,94,9)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="863.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="837" width="0.5332%" height="15" fill="rgb(240,34,52)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="847.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="821" width="0.5332%" height="15" fill="rgb(216,45,12)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="831.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="805" width="0.5332%" height="15" fill="rgb(246,21,19)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="815.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="789" width="0.5332%" height="15" fill="rgb(213,98,42)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="799.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="773" width="0.5332%" height="15" fill="rgb(250,136,47)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="783.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="757" width="0.5332%" height="15" fill="rgb(251,124,27)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="767.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="741" width="0.5332%" height="15" fill="rgb(229,180,14)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="751.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="725" width="0.5332%" height="15" fill="rgb(245,216,25)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="735.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="709" width="0.5332%" height="15" fill="rgb(251,43,5)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="719.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="693" width="0.5332%" height="15" fill="rgb(250,128,24)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="703.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="677" width="0.5332%" height="15" fill="rgb(217,117,27)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="687.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="661" width="0.5332%" height="15" fill="rgb(245,147,4)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="671.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="645" width="0.5332%" height="15" fill="rgb(242,201,35)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="655.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="629" width="0.5332%" height="15" fill="rgb(218,181,1)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="639.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="613" width="0.5332%" height="15" fill="rgb(222,6,29)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="623.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="597" width="0.5332%" height="15" fill="rgb(208,186,3)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="607.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="581" width="0.5332%" height="15" fill="rgb(216,36,26)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="591.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="565" width="0.5332%" height="15" fill="rgb(248,201,23)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="575.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="549" width="0.5332%" height="15" fill="rgb(251,170,31)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="559.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="533" width="0.5332%" height="15" fill="rgb(207,110,25)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="543.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="517" width="0.5332%" height="15" fill="rgb(250,54,15)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="527.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="501" width="0.5332%" height="15" fill="rgb(227,68,33)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="511.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="485" width="0.5332%" height="15" fill="rgb(238,34,41)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="495.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="469" width="0.5332%" height="15" fill="rgb(220,11,15)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="479.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="453" width="0.5332%" height="15" fill="rgb(246,111,35)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="463.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="437" width="0.5332%" height="15" fill="rgb(209,88,53)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="447.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="421" width="0.5332%" height="15" fill="rgb(231,185,47)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="431.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="405" width="0.5332%" height="15" fill="rgb(233,154,1)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="415.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="389" width="0.5332%" height="15" fill="rgb(225,15,46)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="399.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="373" width="0.5332%" height="15" fill="rgb(211,135,41)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="383.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="357" width="0.5332%" height="15" fill="rgb(208,54,0)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="367.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="341" width="0.5332%" height="15" fill="rgb(244,136,14)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="351.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="325" width="0.5332%" height="15" fill="rgb(241,56,14)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="335.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="309" width="0.5332%" height="15" fill="rgb(205,80,24)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="319.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="293" width="0.5332%" height="15" fill="rgb(220,57,4)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="303.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="277" width="0.5332%" height="15" fill="rgb(226,193,50)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="287.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="261" width="0.5332%" height="15" fill="rgb(231,168,22)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="271.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="245" width="0.5332%" height="15" fill="rgb(254,215,14)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="255.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="229" width="0.5332%" height="15" fill="rgb(211,115,16)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="239.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="213" width="0.5332%" height="15" fill="rgb(236,210,16)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="223.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="197" width="0.5332%" height="15" fill="rgb(221,94,12)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="207.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="181" width="0.5332%" height="15" fill="rgb(235,218,49)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="191.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="165" width="0.5332%" height="15" fill="rgb(217,114,14)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="175.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (143,316,168 samples, 0.53%)</title><rect x="17.4245%" y="149" width="0.5332%" height="15" fill="rgb(216,145,22)" fg:x="4683436721" fg:w="143316168"/><text x="17.6745%" y="159.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (142,729,351 samples, 0.53%)</title><rect x="17.4267%" y="133" width="0.5310%" height="15" fill="rgb(217,112,39)" fg:x="4684023538" fg:w="142729351"/><text x="17.6767%" y="143.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (142,729,351 samples, 0.53%)</title><rect x="17.4267%" y="117" width="0.5310%" height="15" fill="rgb(225,85,32)" fg:x="4684023538" fg:w="142729351"/><text x="17.6767%" y="127.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (142,729,351 samples, 0.53%)</title><rect x="17.4267%" y="101" width="0.5310%" height="15" fill="rgb(245,209,47)" fg:x="4684023538" fg:w="142729351"/><text x="17.6767%" y="111.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (142,729,351 samples, 0.53%)</title><rect x="17.4267%" y="85" width="0.5310%" height="15" fill="rgb(218,220,15)" fg:x="4684023538" fg:w="142729351"/><text x="17.6767%" y="95.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (77,102,300 samples, 0.29%)</title><rect x="17.6708%" y="69" width="0.2869%" height="15" fill="rgb(222,202,31)" fg:x="4749650589" fg:w="77102300"/><text x="17.9208%" y="79.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (77,102,300 samples, 0.29%)</title><rect x="17.6708%" y="53" width="0.2869%" height="15" fill="rgb(243,203,4)" fg:x="4749650589" fg:w="77102300"/><text x="17.9208%" y="63.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (71,398,307 samples, 0.27%)</title><rect x="17.6921%" y="37" width="0.2656%" height="15" fill="rgb(237,92,17)" fg:x="4755354582" fg:w="71398307"/><text x="17.9421%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (69,968,795 samples, 0.26%)</title><rect x="17.9636%" y="37" width="0.2603%" height="15" fill="rgb(231,119,7)" fg:x="4828343447" fg:w="69968795"/><text x="18.2136%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (72,121,532 samples, 0.27%)</title><rect x="17.9577%" y="85" width="0.2683%" height="15" fill="rgb(237,82,41)" fg:x="4826752889" fg:w="72121532"/><text x="18.2077%" y="95.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (72,121,532 samples, 0.27%)</title><rect x="17.9577%" y="69" width="0.2683%" height="15" fill="rgb(226,81,48)" fg:x="4826752889" fg:w="72121532"/><text x="18.2077%" y="79.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (70,530,974 samples, 0.26%)</title><rect x="17.9636%" y="53" width="0.2624%" height="15" fill="rgb(234,70,51)" fg:x="4828343447" fg:w="70530974"/><text x="18.2136%" y="63.50"></text></g><g><title>std::_Function_handler&lt;bool (char), std::__detail::_CharMatcher&lt;std::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_invoke (4,970,653 samples, 0.02%)</title><rect x="18.2260%" y="37" width="0.0185%" height="15" fill="rgb(251,86,4)" fg:x="4898874421" fg:w="4970653"/><text x="18.4760%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (424,393,323 samples, 1.58%)</title><rect x="16.7745%" y="2053" width="1.5789%" height="15" fill="rgb(244,144,28)" fg:x="4508740379" fg:w="424393323"/><text x="17.0245%" y="2063.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="2037" width="0.3958%" height="15" fill="rgb(232,161,39)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="2047.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="2021" width="0.3958%" height="15" fill="rgb(247,34,51)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="2031.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="2005" width="0.3958%" height="15" fill="rgb(225,132,2)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="2015.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1989" width="0.3958%" height="15" fill="rgb(209,159,44)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1999.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1973" width="0.3958%" height="15" fill="rgb(251,214,1)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1983.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1957" width="0.3958%" height="15" fill="rgb(247,84,47)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1967.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1941" width="0.3958%" height="15" fill="rgb(240,111,43)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1951.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1925" width="0.3958%" height="15" fill="rgb(215,214,35)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1935.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1909" width="0.3958%" height="15" fill="rgb(248,207,23)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1919.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1893" width="0.3958%" height="15" fill="rgb(214,186,4)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1903.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1877" width="0.3958%" height="15" fill="rgb(220,133,22)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1887.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1861" width="0.3958%" height="15" fill="rgb(239,134,19)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1871.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1845" width="0.3958%" height="15" fill="rgb(250,140,9)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1855.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1829" width="0.3958%" height="15" fill="rgb(225,59,14)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1839.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1813" width="0.3958%" height="15" fill="rgb(214,152,51)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1823.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1797" width="0.3958%" height="15" fill="rgb(251,227,43)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1807.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1781" width="0.3958%" height="15" fill="rgb(241,96,17)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1791.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1765" width="0.3958%" height="15" fill="rgb(234,198,43)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1775.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1749" width="0.3958%" height="15" fill="rgb(220,108,29)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1759.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1733" width="0.3958%" height="15" fill="rgb(226,163,33)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1743.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1717" width="0.3958%" height="15" fill="rgb(205,194,45)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1727.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1701" width="0.3958%" height="15" fill="rgb(206,143,44)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1711.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1685" width="0.3958%" height="15" fill="rgb(236,136,36)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1695.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1669" width="0.3958%" height="15" fill="rgb(249,172,42)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1679.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1653" width="0.3958%" height="15" fill="rgb(216,139,23)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1663.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1637" width="0.3958%" height="15" fill="rgb(207,166,20)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1647.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1621" width="0.3958%" height="15" fill="rgb(210,209,22)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1631.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1605" width="0.3958%" height="15" fill="rgb(232,118,20)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1615.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1589" width="0.3958%" height="15" fill="rgb(238,113,42)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1599.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1573" width="0.3958%" height="15" fill="rgb(231,42,5)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1583.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1557" width="0.3958%" height="15" fill="rgb(243,166,24)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1567.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1541" width="0.3958%" height="15" fill="rgb(237,226,12)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1551.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1525" width="0.3958%" height="15" fill="rgb(229,133,24)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1535.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1509" width="0.3958%" height="15" fill="rgb(238,33,43)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1519.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1493" width="0.3958%" height="15" fill="rgb(227,59,38)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1503.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1477" width="0.3958%" height="15" fill="rgb(230,97,0)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1487.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1461" width="0.3958%" height="15" fill="rgb(250,173,50)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1471.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1445" width="0.3958%" height="15" fill="rgb(240,15,50)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1455.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1429" width="0.3958%" height="15" fill="rgb(221,93,22)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1439.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1413" width="0.3958%" height="15" fill="rgb(245,180,53)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1423.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1397" width="0.3958%" height="15" fill="rgb(231,88,51)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1407.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1381" width="0.3958%" height="15" fill="rgb(240,58,21)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1391.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1365" width="0.3958%" height="15" fill="rgb(237,21,10)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1375.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1349" width="0.3958%" height="15" fill="rgb(218,43,11)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1359.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1333" width="0.3958%" height="15" fill="rgb(218,221,29)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1343.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1317" width="0.3958%" height="15" fill="rgb(214,118,42)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1327.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1301" width="0.3958%" height="15" fill="rgb(251,200,26)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1311.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1285" width="0.3958%" height="15" fill="rgb(237,101,39)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1295.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1269" width="0.3958%" height="15" fill="rgb(251,117,11)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1279.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1253" width="0.3958%" height="15" fill="rgb(216,223,23)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1263.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1237" width="0.3958%" height="15" fill="rgb(251,54,12)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1247.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1221" width="0.3958%" height="15" fill="rgb(254,176,54)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1231.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1205" width="0.3958%" height="15" fill="rgb(210,32,8)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1215.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1189" width="0.3958%" height="15" fill="rgb(235,52,38)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1199.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1173" width="0.3958%" height="15" fill="rgb(231,4,44)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1183.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1157" width="0.3958%" height="15" fill="rgb(249,2,32)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1167.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1141" width="0.3958%" height="15" fill="rgb(224,65,26)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1151.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1125" width="0.3958%" height="15" fill="rgb(250,73,40)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1135.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1109" width="0.3958%" height="15" fill="rgb(253,177,16)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1119.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1093" width="0.3958%" height="15" fill="rgb(217,32,34)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1103.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1077" width="0.3958%" height="15" fill="rgb(212,7,10)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1087.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1061" width="0.3958%" height="15" fill="rgb(245,89,8)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1071.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1045" width="0.3958%" height="15" fill="rgb(237,16,53)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1055.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1029" width="0.3958%" height="15" fill="rgb(250,204,30)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1039.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="1013" width="0.3958%" height="15" fill="rgb(208,77,27)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1023.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="997" width="0.3958%" height="15" fill="rgb(250,204,28)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="1007.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="981" width="0.3958%" height="15" fill="rgb(244,63,21)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="991.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="965" width="0.3958%" height="15" fill="rgb(236,85,44)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="975.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="949" width="0.3958%" height="15" fill="rgb(215,98,4)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="959.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="933" width="0.3958%" height="15" fill="rgb(235,38,11)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="943.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="917" width="0.3958%" height="15" fill="rgb(254,186,25)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="927.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="901" width="0.3958%" height="15" fill="rgb(225,55,31)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="911.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="885" width="0.3958%" height="15" fill="rgb(211,15,21)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="895.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="869" width="0.3958%" height="15" fill="rgb(215,187,41)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="879.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="853" width="0.3958%" height="15" fill="rgb(248,69,32)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="863.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="837" width="0.3958%" height="15" fill="rgb(252,102,52)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="847.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="821" width="0.3958%" height="15" fill="rgb(253,140,32)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="831.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="805" width="0.3958%" height="15" fill="rgb(216,56,42)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="815.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="789" width="0.3958%" height="15" fill="rgb(216,184,14)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="799.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="773" width="0.3958%" height="15" fill="rgb(237,187,27)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="783.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="757" width="0.3958%" height="15" fill="rgb(219,65,3)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="767.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="741" width="0.3958%" height="15" fill="rgb(245,83,25)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="751.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="725" width="0.3958%" height="15" fill="rgb(214,205,45)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="735.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="709" width="0.3958%" height="15" fill="rgb(241,20,18)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="719.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="693" width="0.3958%" height="15" fill="rgb(232,163,23)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="703.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="677" width="0.3958%" height="15" fill="rgb(214,5,46)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="687.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="661" width="0.3958%" height="15" fill="rgb(229,78,17)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="671.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="645" width="0.3958%" height="15" fill="rgb(248,89,10)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="655.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="629" width="0.3958%" height="15" fill="rgb(248,54,15)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="639.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="613" width="0.3958%" height="15" fill="rgb(223,116,6)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="623.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="597" width="0.3958%" height="15" fill="rgb(205,125,38)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="607.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="581" width="0.3958%" height="15" fill="rgb(251,78,38)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="591.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="565" width="0.3958%" height="15" fill="rgb(253,78,28)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="575.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="549" width="0.3958%" height="15" fill="rgb(209,120,3)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="559.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="533" width="0.3958%" height="15" fill="rgb(238,229,9)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="543.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="517" width="0.3958%" height="15" fill="rgb(253,159,18)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="527.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="501" width="0.3958%" height="15" fill="rgb(244,42,34)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="511.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="485" width="0.3958%" height="15" fill="rgb(224,8,7)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="495.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="469" width="0.3958%" height="15" fill="rgb(210,201,45)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="479.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="453" width="0.3958%" height="15" fill="rgb(252,185,21)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="463.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="437" width="0.3958%" height="15" fill="rgb(223,131,1)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="447.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="421" width="0.3958%" height="15" fill="rgb(245,141,16)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="431.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="405" width="0.3958%" height="15" fill="rgb(229,55,45)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="415.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="389" width="0.3958%" height="15" fill="rgb(208,92,15)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="399.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="373" width="0.3958%" height="15" fill="rgb(234,185,47)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="383.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="357" width="0.3958%" height="15" fill="rgb(253,104,50)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="367.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="341" width="0.3958%" height="15" fill="rgb(205,70,7)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="351.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="325" width="0.3958%" height="15" fill="rgb(240,178,43)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="335.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="309" width="0.3958%" height="15" fill="rgb(214,112,2)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="319.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="293" width="0.3958%" height="15" fill="rgb(206,46,17)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="303.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="277" width="0.3958%" height="15" fill="rgb(225,220,16)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="287.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="261" width="0.3958%" height="15" fill="rgb(238,65,40)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="271.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="245" width="0.3958%" height="15" fill="rgb(230,151,21)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="255.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="229" width="0.3958%" height="15" fill="rgb(218,58,49)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="239.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="213" width="0.3958%" height="15" fill="rgb(219,179,14)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="223.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="197" width="0.3958%" height="15" fill="rgb(223,72,1)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="207.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="181" width="0.3958%" height="15" fill="rgb(238,126,10)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="191.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="165" width="0.3958%" height="15" fill="rgb(224,206,38)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="175.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="149" width="0.3958%" height="15" fill="rgb(212,201,54)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="159.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="133" width="0.3958%" height="15" fill="rgb(218,154,48)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="143.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="117" width="0.3958%" height="15" fill="rgb(232,93,24)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="127.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,380,813 samples, 0.40%)</title><rect x="17.9577%" y="101" width="0.3958%" height="15" fill="rgb(245,30,21)" fg:x="4826752889" fg:w="106380813"/><text x="18.2077%" y="111.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (34,259,281 samples, 0.13%)</title><rect x="18.2260%" y="85" width="0.1275%" height="15" fill="rgb(242,148,29)" fg:x="4898874421" fg:w="34259281"/><text x="18.4760%" y="95.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (34,259,281 samples, 0.13%)</title><rect x="18.2260%" y="69" width="0.1275%" height="15" fill="rgb(244,153,54)" fg:x="4898874421" fg:w="34259281"/><text x="18.4760%" y="79.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (34,259,281 samples, 0.13%)</title><rect x="18.2260%" y="53" width="0.1275%" height="15" fill="rgb(252,87,22)" fg:x="4898874421" fg:w="34259281"/><text x="18.4760%" y="63.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (29,288,628 samples, 0.11%)</title><rect x="18.2445%" y="37" width="0.1090%" height="15" fill="rgb(210,51,29)" fg:x="4903845074" fg:w="29288628"/><text x="18.4945%" y="47.50"></text></g><g><title>cfree@GLIBC_2.2.5 (10,546,514 samples, 0.04%)</title><rect x="18.3535%" y="37" width="0.0392%" height="15" fill="rgb(242,136,47)" fg:x="4933133702" fg:w="10546514"/><text x="18.6035%" y="47.50"></text></g><g><title>malloc (3,748,401 samples, 0.01%)</title><rect x="18.3927%" y="37" width="0.0139%" height="15" fill="rgb(238,68,4)" fg:x="4943680216" fg:w="3748401"/><text x="18.6427%" y="47.50"></text></g><g><title>operator delete (5,610,687 samples, 0.02%)</title><rect x="18.4067%" y="37" width="0.0209%" height="15" fill="rgb(242,161,30)" fg:x="4947428617" fg:w="5610687"/><text x="18.6567%" y="47.50"></text></g><g><title>operator new (4,125,242 samples, 0.02%)</title><rect x="18.4275%" y="37" width="0.0153%" height="15" fill="rgb(218,58,44)" fg:x="4953039304" fg:w="4125242"/><text x="18.6775%" y="47.50"></text></g><g><title>std::_Function_handler&lt;bool (char), std::__detail::_AnyMatcher&lt;std::regex_traits&lt;char&gt;, true, false, false&gt; &gt;::_M_invoke (5,975,193 samples, 0.02%)</title><rect x="18.4429%" y="37" width="0.0222%" height="15" fill="rgb(252,125,32)" fg:x="4957164546" fg:w="5975193"/><text x="18.6929%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (59,038,092 samples, 0.22%)</title><rect x="18.4651%" y="37" width="0.2196%" height="15" fill="rgb(219,178,0)" fg:x="4963139739" fg:w="59038092"/><text x="18.7151%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (594,793,628 samples, 2.21%)</title><rect x="18.6848%" y="37" width="2.2129%" height="15" fill="rgb(213,152,7)" fg:x="5022177831" fg:w="594793628"/><text x="18.9348%" y="47.50">s..</text></g><g><title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (4,823,232 samples, 0.02%)</title><rect x="20.8977%" y="37" width="0.0179%" height="15" fill="rgb(249,109,34)" fg:x="5616971459" fg:w="4823232"/><text x="21.1477%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="2053" width="2.5773%" height="15" fill="rgb(232,96,21)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="2063.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="2037" width="2.5773%" height="15" fill="rgb(228,27,39)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="2047.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="2021" width="2.5773%" height="15" fill="rgb(211,182,52)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="2031.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="2005" width="2.5773%" height="15" fill="rgb(234,178,38)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="2015.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1989" width="2.5773%" height="15" fill="rgb(221,111,3)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1999.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1973" width="2.5773%" height="15" fill="rgb(228,175,21)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1983.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1957" width="2.5773%" height="15" fill="rgb(228,174,43)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1967.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1941" width="2.5773%" height="15" fill="rgb(211,191,0)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1951.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1925" width="2.5773%" height="15" fill="rgb(253,117,3)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1935.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1909" width="2.5773%" height="15" fill="rgb(241,127,19)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1919.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1893" width="2.5773%" height="15" fill="rgb(218,103,12)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1903.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1877" width="2.5773%" height="15" fill="rgb(236,214,43)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1887.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1861" width="2.5773%" height="15" fill="rgb(244,144,19)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1871.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1845" width="2.5773%" height="15" fill="rgb(246,188,10)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1855.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1829" width="2.5773%" height="15" fill="rgb(212,193,33)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1839.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1813" width="2.5773%" height="15" fill="rgb(241,51,29)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1823.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1797" width="2.5773%" height="15" fill="rgb(211,58,19)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1807.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1781" width="2.5773%" height="15" fill="rgb(229,111,26)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1791.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1765" width="2.5773%" height="15" fill="rgb(213,115,40)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1775.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1749" width="2.5773%" height="15" fill="rgb(209,56,44)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1759.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1733" width="2.5773%" height="15" fill="rgb(230,108,32)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1743.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1717" width="2.5773%" height="15" fill="rgb(216,165,31)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1727.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1701" width="2.5773%" height="15" fill="rgb(218,122,21)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1711.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1685" width="2.5773%" height="15" fill="rgb(223,224,47)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1695.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1669" width="2.5773%" height="15" fill="rgb(238,102,44)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1679.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1653" width="2.5773%" height="15" fill="rgb(236,46,40)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1663.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1637" width="2.5773%" height="15" fill="rgb(247,202,50)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1647.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1621" width="2.5773%" height="15" fill="rgb(209,99,20)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1631.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1605" width="2.5773%" height="15" fill="rgb(252,27,34)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1615.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1589" width="2.5773%" height="15" fill="rgb(215,206,23)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1599.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1573" width="2.5773%" height="15" fill="rgb(212,135,36)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1583.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1557" width="2.5773%" height="15" fill="rgb(240,189,1)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1567.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1541" width="2.5773%" height="15" fill="rgb(242,56,20)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1551.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1525" width="2.5773%" height="15" fill="rgb(247,132,33)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1535.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1509" width="2.5773%" height="15" fill="rgb(208,149,11)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1519.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1493" width="2.5773%" height="15" fill="rgb(211,33,11)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1503.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1477" width="2.5773%" height="15" fill="rgb(221,29,38)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1487.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1461" width="2.5773%" height="15" fill="rgb(206,182,49)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1471.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1445" width="2.5773%" height="15" fill="rgb(216,140,1)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1455.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1429" width="2.5773%" height="15" fill="rgb(232,57,40)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1439.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1413" width="2.5773%" height="15" fill="rgb(224,186,18)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1423.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1397" width="2.5773%" height="15" fill="rgb(215,121,11)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1407.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1381" width="2.5773%" height="15" fill="rgb(245,147,10)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1391.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1365" width="2.5773%" height="15" fill="rgb(238,153,13)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1375.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1349" width="2.5773%" height="15" fill="rgb(233,108,0)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1359.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1333" width="2.5773%" height="15" fill="rgb(212,157,17)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1343.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1317" width="2.5773%" height="15" fill="rgb(225,213,38)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1327.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1301" width="2.5773%" height="15" fill="rgb(248,16,11)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1311.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1285" width="2.5773%" height="15" fill="rgb(241,33,4)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1295.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1269" width="2.5773%" height="15" fill="rgb(222,26,43)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1279.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1253" width="2.5773%" height="15" fill="rgb(243,29,36)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1263.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1237" width="2.5773%" height="15" fill="rgb(241,9,27)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1247.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1221" width="2.5773%" height="15" fill="rgb(205,117,26)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1231.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1205" width="2.5773%" height="15" fill="rgb(209,80,39)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1215.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1189" width="2.5773%" height="15" fill="rgb(239,155,6)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1199.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1173" width="2.5773%" height="15" fill="rgb(212,104,12)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1183.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1157" width="2.5773%" height="15" fill="rgb(234,204,3)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1167.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1141" width="2.5773%" height="15" fill="rgb(251,218,7)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1151.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1125" width="2.5773%" height="15" fill="rgb(221,81,32)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1135.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1109" width="2.5773%" height="15" fill="rgb(214,152,26)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1119.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1093" width="2.5773%" height="15" fill="rgb(223,22,3)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1103.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1077" width="2.5773%" height="15" fill="rgb(207,174,7)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1087.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1061" width="2.5773%" height="15" fill="rgb(224,19,52)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1071.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1045" width="2.5773%" height="15" fill="rgb(228,24,14)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1055.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1029" width="2.5773%" height="15" fill="rgb(230,153,43)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1039.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="1013" width="2.5773%" height="15" fill="rgb(231,106,12)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1023.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="997" width="2.5773%" height="15" fill="rgb(215,92,2)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="1007.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="981" width="2.5773%" height="15" fill="rgb(249,143,25)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="991.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="965" width="2.5773%" height="15" fill="rgb(252,7,35)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="975.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="949" width="2.5773%" height="15" fill="rgb(216,69,40)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="959.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="933" width="2.5773%" height="15" fill="rgb(240,36,33)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="943.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="917" width="2.5773%" height="15" fill="rgb(231,128,14)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="927.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="901" width="2.5773%" height="15" fill="rgb(245,143,14)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="911.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="885" width="2.5773%" height="15" fill="rgb(222,130,28)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="895.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="869" width="2.5773%" height="15" fill="rgb(212,10,48)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="879.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="853" width="2.5773%" height="15" fill="rgb(254,118,45)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="863.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="837" width="2.5773%" height="15" fill="rgb(228,6,45)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="847.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="821" width="2.5773%" height="15" fill="rgb(241,18,35)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="831.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="805" width="2.5773%" height="15" fill="rgb(227,214,53)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="815.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="789" width="2.5773%" height="15" fill="rgb(224,107,51)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="799.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="773" width="2.5773%" height="15" fill="rgb(248,60,28)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="783.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="757" width="2.5773%" height="15" fill="rgb(249,101,23)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="767.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="741" width="2.5773%" height="15" fill="rgb(228,51,19)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="751.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="725" width="2.5773%" height="15" fill="rgb(213,20,6)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="735.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="709" width="2.5773%" height="15" fill="rgb(212,124,10)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="719.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="693" width="2.5773%" height="15" fill="rgb(248,3,40)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="703.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="677" width="2.5773%" height="15" fill="rgb(223,178,23)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="687.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="661" width="2.5773%" height="15" fill="rgb(240,132,45)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="671.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="645" width="2.5773%" height="15" fill="rgb(245,164,36)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="655.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="629" width="2.5773%" height="15" fill="rgb(231,188,53)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="639.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="613" width="2.5773%" height="15" fill="rgb(237,198,39)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="623.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="597" width="2.5773%" height="15" fill="rgb(223,120,35)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="607.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="581" width="2.5773%" height="15" fill="rgb(253,107,49)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="591.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="565" width="2.5773%" height="15" fill="rgb(216,44,31)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="575.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="549" width="2.5773%" height="15" fill="rgb(253,87,21)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="559.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="533" width="2.5773%" height="15" fill="rgb(226,18,2)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="543.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="517" width="2.5773%" height="15" fill="rgb(216,8,46)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="527.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="501" width="2.5773%" height="15" fill="rgb(226,140,39)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="511.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="485" width="2.5773%" height="15" fill="rgb(221,194,54)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="495.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="469" width="2.5773%" height="15" fill="rgb(213,92,11)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="479.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="453" width="2.5773%" height="15" fill="rgb(229,162,46)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="463.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="437" width="2.5773%" height="15" fill="rgb(214,111,36)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="447.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="421" width="2.5773%" height="15" fill="rgb(207,6,21)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="431.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="405" width="2.5773%" height="15" fill="rgb(213,127,38)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="415.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="389" width="2.5773%" height="15" fill="rgb(238,118,32)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="399.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="373" width="2.5773%" height="15" fill="rgb(240,139,39)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="383.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="357" width="2.5773%" height="15" fill="rgb(235,10,37)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="367.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="341" width="2.5773%" height="15" fill="rgb(249,171,38)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="351.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="325" width="2.5773%" height="15" fill="rgb(242,144,32)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="335.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="309" width="2.5773%" height="15" fill="rgb(217,117,21)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="319.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="293" width="2.5773%" height="15" fill="rgb(249,87,1)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="303.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="277" width="2.5773%" height="15" fill="rgb(248,196,48)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="287.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="261" width="2.5773%" height="15" fill="rgb(251,206,33)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="271.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="245" width="2.5773%" height="15" fill="rgb(232,141,28)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="255.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="229" width="2.5773%" height="15" fill="rgb(209,167,14)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="239.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="213" width="2.5773%" height="15" fill="rgb(225,11,50)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="223.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="197" width="2.5773%" height="15" fill="rgb(209,50,20)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="207.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="181" width="2.5773%" height="15" fill="rgb(212,17,46)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="191.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="165" width="2.5773%" height="15" fill="rgb(216,101,39)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="175.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="149" width="2.5773%" height="15" fill="rgb(212,228,48)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="159.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="133" width="2.5773%" height="15" fill="rgb(250,6,50)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="143.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="117" width="2.5773%" height="15" fill="rgb(250,160,48)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="127.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="101" width="2.5773%" height="15" fill="rgb(244,216,33)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="111.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="85" width="2.5773%" height="15" fill="rgb(207,157,5)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="95.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="69" width="2.5773%" height="15" fill="rgb(228,199,8)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="79.50">st..</text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (692,725,950 samples, 2.58%)</title><rect x="18.3535%" y="53" width="2.5773%" height="15" fill="rgb(227,80,20)" fg:x="4933133702" fg:w="692725950"/><text x="18.6035%" y="63.50">st..</text></g><g><title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (4,064,961 samples, 0.02%)</title><rect x="20.9156%" y="37" width="0.0151%" height="15" fill="rgb(222,9,33)" fg:x="5621794691" fg:w="4064961"/><text x="21.1656%" y="47.50"></text></g><g><title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Backend::run()::{lambda()#1}&gt; &gt; &gt;::_M_run (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="2053" width="0.0135%" height="15" fill="rgb(239,44,28)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="2063.50"></text></g><g><title>InotifyBackend::start (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="2037" width="0.0135%" height="15" fill="rgb(249,187,43)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="2047.50"></text></g><g><title>InotifyBackend::handleEvents (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="2021" width="0.0135%" height="15" fill="rgb(216,141,28)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="2031.50"></text></g><g><title>InotifyBackend::handleEvent (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="2005" width="0.0135%" height="15" fill="rgb(230,154,53)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="2015.50"></text></g><g><title>InotifyBackend::handleSubscription (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1989" width="0.0135%" height="15" fill="rgb(227,82,4)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1999.50"></text></g><g><title>Watcher::isIgnored (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1973" width="0.0135%" height="15" fill="rgb(220,107,16)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1983.50"></text></g><g><title>Glob::isIgnored (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1957" width="0.0135%" height="15" fill="rgb(207,187,2)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1967.50"></text></g><g><title>bool std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;, (std::__detail::_RegexExecutorPolicy)0, true&gt; (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1941" width="0.0135%" height="15" fill="rgb(210,162,52)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1951.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1925" width="0.0135%" height="15" fill="rgb(217,216,49)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1935.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1909" width="0.0135%" height="15" fill="rgb(218,146,49)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1919.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1893" width="0.0135%" height="15" fill="rgb(216,55,40)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1903.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1877" width="0.0135%" height="15" fill="rgb(208,196,21)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1887.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1861" width="0.0135%" height="15" fill="rgb(242,117,42)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1871.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1845" width="0.0135%" height="15" fill="rgb(210,11,23)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1855.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1829" width="0.0135%" height="15" fill="rgb(217,110,2)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1839.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1813" width="0.0135%" height="15" fill="rgb(229,77,54)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1823.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1797" width="0.0135%" height="15" fill="rgb(218,53,16)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1807.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1781" width="0.0135%" height="15" fill="rgb(215,38,13)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1791.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1765" width="0.0135%" height="15" fill="rgb(235,42,18)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1775.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1749" width="0.0135%" height="15" fill="rgb(219,66,54)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1759.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1733" width="0.0135%" height="15" fill="rgb(222,205,4)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1743.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1717" width="0.0135%" height="15" fill="rgb(227,213,46)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1727.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1701" width="0.0135%" height="15" fill="rgb(250,145,42)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1711.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1685" width="0.0135%" height="15" fill="rgb(219,15,2)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1695.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1669" width="0.0135%" height="15" fill="rgb(231,181,52)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1679.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1653" width="0.0135%" height="15" fill="rgb(235,1,42)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1663.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1637" width="0.0135%" height="15" fill="rgb(249,88,27)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1647.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1621" width="0.0135%" height="15" fill="rgb(235,145,16)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1631.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1605" width="0.0135%" height="15" fill="rgb(237,114,19)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1615.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1589" width="0.0135%" height="15" fill="rgb(238,51,50)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1599.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1573" width="0.0135%" height="15" fill="rgb(205,194,25)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1583.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1557" width="0.0135%" height="15" fill="rgb(215,203,17)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1567.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1541" width="0.0135%" height="15" fill="rgb(233,112,49)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1551.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1525" width="0.0135%" height="15" fill="rgb(241,130,26)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1535.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1509" width="0.0135%" height="15" fill="rgb(252,223,19)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1519.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1493" width="0.0135%" height="15" fill="rgb(211,95,25)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1503.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1477" width="0.0135%" height="15" fill="rgb(251,182,27)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1487.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1461" width="0.0135%" height="15" fill="rgb(238,24,4)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1471.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1445" width="0.0135%" height="15" fill="rgb(224,220,25)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1455.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1429" width="0.0135%" height="15" fill="rgb(239,133,26)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1439.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1413" width="0.0135%" height="15" fill="rgb(211,94,48)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1423.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1397" width="0.0135%" height="15" fill="rgb(239,87,6)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1407.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1381" width="0.0135%" height="15" fill="rgb(227,62,0)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1391.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1365" width="0.0135%" height="15" fill="rgb(211,226,4)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1375.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1349" width="0.0135%" height="15" fill="rgb(253,38,52)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1359.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1333" width="0.0135%" height="15" fill="rgb(229,126,40)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1343.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1317" width="0.0135%" height="15" fill="rgb(229,165,44)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1327.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1301" width="0.0135%" height="15" fill="rgb(247,95,47)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1311.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1285" width="0.0135%" height="15" fill="rgb(216,140,30)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1295.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1269" width="0.0135%" height="15" fill="rgb(246,214,8)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1279.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1253" width="0.0135%" height="15" fill="rgb(227,224,15)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1263.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1237" width="0.0135%" height="15" fill="rgb(233,175,4)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1247.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1221" width="0.0135%" height="15" fill="rgb(221,66,45)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1231.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1205" width="0.0135%" height="15" fill="rgb(221,178,18)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1215.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1189" width="0.0135%" height="15" fill="rgb(213,81,29)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1199.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1173" width="0.0135%" height="15" fill="rgb(220,89,49)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1183.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1157" width="0.0135%" height="15" fill="rgb(227,60,33)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1167.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1141" width="0.0135%" height="15" fill="rgb(205,113,12)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1151.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1125" width="0.0135%" height="15" fill="rgb(211,32,1)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1135.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1109" width="0.0135%" height="15" fill="rgb(246,2,12)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1119.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1093" width="0.0135%" height="15" fill="rgb(243,37,27)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1103.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1077" width="0.0135%" height="15" fill="rgb(248,211,31)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1087.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1061" width="0.0135%" height="15" fill="rgb(242,146,47)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1071.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1045" width="0.0135%" height="15" fill="rgb(206,70,20)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1055.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1029" width="0.0135%" height="15" fill="rgb(215,10,51)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1039.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="1013" width="0.0135%" height="15" fill="rgb(243,178,53)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1023.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="997" width="0.0135%" height="15" fill="rgb(233,221,20)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="1007.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="981" width="0.0135%" height="15" fill="rgb(218,95,35)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="991.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="965" width="0.0135%" height="15" fill="rgb(229,13,5)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="975.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="949" width="0.0135%" height="15" fill="rgb(252,164,30)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="959.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="933" width="0.0135%" height="15" fill="rgb(232,68,36)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="943.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="917" width="0.0135%" height="15" fill="rgb(219,59,54)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="927.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="901" width="0.0135%" height="15" fill="rgb(250,92,33)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="911.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="885" width="0.0135%" height="15" fill="rgb(229,162,54)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="895.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="869" width="0.0135%" height="15" fill="rgb(244,114,52)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="879.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="853" width="0.0135%" height="15" fill="rgb(212,211,43)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="863.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="837" width="0.0135%" height="15" fill="rgb(226,147,8)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="847.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="821" width="0.0135%" height="15" fill="rgb(226,23,13)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="831.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="805" width="0.0135%" height="15" fill="rgb(240,63,4)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="815.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="789" width="0.0135%" height="15" fill="rgb(221,1,32)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="799.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="773" width="0.0135%" height="15" fill="rgb(242,117,10)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="783.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="757" width="0.0135%" height="15" fill="rgb(249,172,44)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="767.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="741" width="0.0135%" height="15" fill="rgb(244,46,45)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="751.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="725" width="0.0135%" height="15" fill="rgb(206,43,17)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="735.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="709" width="0.0135%" height="15" fill="rgb(239,218,39)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="719.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="693" width="0.0135%" height="15" fill="rgb(208,169,54)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="703.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="677" width="0.0135%" height="15" fill="rgb(247,25,42)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="687.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="661" width="0.0135%" height="15" fill="rgb(226,23,31)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="671.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="645" width="0.0135%" height="15" fill="rgb(247,16,28)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="655.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="629" width="0.0135%" height="15" fill="rgb(231,147,38)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="639.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="613" width="0.0135%" height="15" fill="rgb(253,81,48)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="623.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="597" width="0.0135%" height="15" fill="rgb(249,222,43)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="607.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="581" width="0.0135%" height="15" fill="rgb(221,3,27)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="591.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="565" width="0.0135%" height="15" fill="rgb(228,180,5)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="575.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="549" width="0.0135%" height="15" fill="rgb(227,131,42)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="559.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="533" width="0.0135%" height="15" fill="rgb(212,3,39)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="543.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="517" width="0.0135%" height="15" fill="rgb(226,45,5)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="527.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="501" width="0.0135%" height="15" fill="rgb(215,167,45)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="511.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="485" width="0.0135%" height="15" fill="rgb(250,218,53)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="495.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="469" width="0.0135%" height="15" fill="rgb(207,140,0)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="479.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="453" width="0.0135%" height="15" fill="rgb(238,133,51)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="463.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="437" width="0.0135%" height="15" fill="rgb(218,203,53)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="447.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="421" width="0.0135%" height="15" fill="rgb(226,184,25)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="431.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="405" width="0.0135%" height="15" fill="rgb(231,121,21)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="415.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="389" width="0.0135%" height="15" fill="rgb(251,14,34)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="399.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="373" width="0.0135%" height="15" fill="rgb(249,193,11)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="383.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="357" width="0.0135%" height="15" fill="rgb(220,172,37)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="367.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="341" width="0.0135%" height="15" fill="rgb(231,229,43)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="351.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="325" width="0.0135%" height="15" fill="rgb(250,161,5)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="335.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="309" width="0.0135%" height="15" fill="rgb(218,225,18)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="319.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="293" width="0.0135%" height="15" fill="rgb(245,45,42)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="303.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="277" width="0.0135%" height="15" fill="rgb(211,115,1)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="287.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="261" width="0.0135%" height="15" fill="rgb(248,133,52)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="271.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="245" width="0.0135%" height="15" fill="rgb(238,100,21)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="255.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="229" width="0.0135%" height="15" fill="rgb(247,144,11)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="239.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="213" width="0.0135%" height="15" fill="rgb(206,164,16)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="223.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="197" width="0.0135%" height="15" fill="rgb(222,34,3)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="207.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="181" width="0.0135%" height="15" fill="rgb(248,82,4)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="191.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="165" width="0.0135%" height="15" fill="rgb(228,81,46)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="175.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="149" width="0.0135%" height="15" fill="rgb(227,67,47)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="159.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="133" width="0.0135%" height="15" fill="rgb(215,93,53)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="143.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="117" width="0.0135%" height="15" fill="rgb(248,194,39)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="127.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="101" width="0.0135%" height="15" fill="rgb(215,5,19)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="111.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="85" width="0.0135%" height="15" fill="rgb(226,215,51)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="95.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="69" width="0.0135%" height="15" fill="rgb(225,56,26)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="79.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,617,819 samples, 0.01%)</title><rect x="20.9307%" y="53" width="0.0135%" height="15" fill="rgb(222,75,29)" fg:x="5625859652" fg:w="3617819"/><text x="21.1807%" y="63.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (3,141,479 samples, 0.01%)</title><rect x="20.9325%" y="37" width="0.0117%" height="15" fill="rgb(236,139,6)" fg:x="5626335992" fg:w="3141479"/><text x="21.1825%" y="47.50"></text></g><g><title>__handle_mm_fault (4,158,503 samples, 0.02%)</title><rect x="21.1726%" y="1973" width="0.0155%" height="15" fill="rgb(223,137,36)" fg:x="5690866177" fg:w="4158503"/><text x="21.4226%" y="1983.50"></text></g><g><title>handle_pte_fault (3,489,842 samples, 0.01%)</title><rect x="21.1751%" y="1957" width="0.0130%" height="15" fill="rgb(226,99,2)" fg:x="5691534838" fg:w="3489842"/><text x="21.4251%" y="1967.50"></text></g><g><title>handle_mm_fault (7,604,668 samples, 0.03%)</title><rect x="21.1726%" y="1989" width="0.0283%" height="15" fill="rgb(206,133,23)" fg:x="5690866177" fg:w="7604668"/><text x="21.4226%" y="1999.50"></text></g><g><title>mm_account_fault (2,819,223 samples, 0.01%)</title><rect x="21.1904%" y="1973" width="0.0105%" height="15" fill="rgb(243,173,15)" fg:x="5695651622" fg:w="2819223"/><text x="21.4404%" y="1983.50"></text></g><g><title>asm_exc_page_fault (13,805,862 samples, 0.05%)</title><rect x="21.1620%" y="2037" width="0.0514%" height="15" fill="rgb(228,69,28)" fg:x="5688010415" fg:w="13805862"/><text x="21.4120%" y="2047.50"></text></g><g><title>exc_page_fault (13,067,026 samples, 0.05%)</title><rect x="21.1647%" y="2021" width="0.0486%" height="15" fill="rgb(212,51,22)" fg:x="5688749251" fg:w="13067026"/><text x="21.4147%" y="2031.50"></text></g><g><title>do_user_addr_fault (13,067,026 samples, 0.05%)</title><rect x="21.1647%" y="2005" width="0.0486%" height="15" fill="rgb(227,113,0)" fg:x="5688749251" fg:w="13067026"/><text x="21.4147%" y="2015.50"></text></g><g><title>lock_vma_under_rcu (3,345,432 samples, 0.01%)</title><rect x="21.2009%" y="1989" width="0.0124%" height="15" fill="rgb(252,84,27)" fg:x="5698470845" fg:w="3345432"/><text x="21.4509%" y="1999.50"></text></g><g><title>unlink_chunk.constprop.0 (75,898,597 samples, 0.28%)</title><rect x="20.9442%" y="2053" width="0.2824%" height="15" fill="rgb(223,145,39)" fg:x="5629477471" fg:w="75898597"/><text x="21.1942%" y="2063.50"></text></g><g><title>entry_ibpb (2,810,400 samples, 0.01%)</title><rect x="21.2161%" y="2037" width="0.0105%" height="15" fill="rgb(239,219,30)" fg:x="5702565668" fg:w="2810400"/><text x="21.4661%" y="2047.50"></text></g><g><title>node (4,382,840,954 samples, 16.31%)</title><rect x="4.9284%" y="2069" width="16.3061%" height="15" fill="rgb(224,196,39)" fg:x="1324678069" fg:w="4382840954"/><text x="5.1784%" y="2079.50">node</text></g><g><title>__fsnotify_parent (4,287,965 samples, 0.02%)</title><rect x="21.2647%" y="1813" width="0.0160%" height="15" fill="rgb(205,35,43)" fg:x="5715638319" fg:w="4287965"/><text x="21.5147%" y="1823.50"></text></g><g><title>fsnotify (4,287,965 samples, 0.02%)</title><rect x="21.2647%" y="1797" width="0.0160%" height="15" fill="rgb(228,201,21)" fg:x="5715638319" fg:w="4287965"/><text x="21.5147%" y="1807.50"></text></g><g><title>send_to_group (3,329,897 samples, 0.01%)</title><rect x="21.2683%" y="1781" width="0.0124%" height="15" fill="rgb(237,118,16)" fg:x="5716596387" fg:w="3329897"/><text x="21.5183%" y="1791.50"></text></g><g><title>fsnotify_handle_inode_event (2,908,080 samples, 0.01%)</title><rect x="21.2699%" y="1765" width="0.0108%" height="15" fill="rgb(241,17,19)" fg:x="5717018204" fg:w="2908080"/><text x="21.5199%" y="1775.50"></text></g><g><title>inotify_handle_inode_event (2,908,080 samples, 0.01%)</title><rect x="21.2699%" y="1749" width="0.0108%" height="15" fill="rgb(214,10,25)" fg:x="5717018204" fg:w="2908080"/><text x="21.5199%" y="1759.50"></text></g><g><title>clear_page_rep (2,949,038 samples, 0.01%)</title><rect x="21.2996%" y="1653" width="0.0110%" height="15" fill="rgb(238,37,29)" fg:x="5725014824" fg:w="2949038"/><text x="21.5496%" y="1663.50"></text></g><g><title>filemap_alloc_folio (4,508,711 samples, 0.02%)</title><rect x="21.2996%" y="1733" width="0.0168%" height="15" fill="rgb(253,83,25)" fg:x="5725014824" fg:w="4508711"/><text x="21.5496%" y="1743.50"></text></g><g><title>folio_alloc (4,508,711 samples, 0.02%)</title><rect x="21.2996%" y="1717" width="0.0168%" height="15" fill="rgb(234,192,12)" fg:x="5725014824" fg:w="4508711"/><text x="21.5496%" y="1727.50"></text></g><g><title>alloc_pages (4,508,711 samples, 0.02%)</title><rect x="21.2996%" y="1701" width="0.0168%" height="15" fill="rgb(241,216,45)" fg:x="5725014824" fg:w="4508711"/><text x="21.5496%" y="1711.50"></text></g><g><title>__alloc_pages (4,508,711 samples, 0.02%)</title><rect x="21.2996%" y="1685" width="0.0168%" height="15" fill="rgb(242,22,33)" fg:x="5725014824" fg:w="4508711"/><text x="21.5496%" y="1695.50"></text></g><g><title>get_page_from_freelist (4,508,711 samples, 0.02%)</title><rect x="21.2996%" y="1669" width="0.0168%" height="15" fill="rgb(231,105,49)" fg:x="5725014824" fg:w="4508711"/><text x="21.5496%" y="1679.50"></text></g><g><title>__filemap_get_folio (7,611,852 samples, 0.03%)</title><rect x="21.2938%" y="1749" width="0.0283%" height="15" fill="rgb(218,204,15)" fg:x="5723457158" fg:w="7611852"/><text x="21.5438%" y="1759.50"></text></g><g><title>ext4_da_write_begin (11,832,289 samples, 0.04%)</title><rect x="21.2913%" y="1765" width="0.0440%" height="15" fill="rgb(235,138,41)" fg:x="5722784596" fg:w="11832289"/><text x="21.5413%" y="1775.50"></text></g><g><title>ext4_block_write_begin (3,547,875 samples, 0.01%)</title><rect x="21.3222%" y="1749" width="0.0132%" height="15" fill="rgb(246,0,9)" fg:x="5731069010" fg:w="3547875"/><text x="21.5722%" y="1759.50"></text></g><g><title>fault_in_iov_iter_readable (3,768,322 samples, 0.01%)</title><rect x="21.3440%" y="1765" width="0.0140%" height="15" fill="rgb(210,74,4)" fg:x="5736929124" fg:w="3768322"/><text x="21.5940%" y="1775.50"></text></g><g><title>fault_in_readable (3,560,673 samples, 0.01%)</title><rect x="21.3447%" y="1749" width="0.0132%" height="15" fill="rgb(250,60,41)" fg:x="5737136773" fg:w="3560673"/><text x="21.5947%" y="1759.50"></text></g><g><title>generic_perform_write (22,194,636 samples, 0.08%)</title><rect x="21.2867%" y="1781" width="0.0826%" height="15" fill="rgb(220,115,12)" fg:x="5721530154" fg:w="22194636"/><text x="21.5367%" y="1791.50"></text></g><g><title>rep_movs_alternative (3,027,344 samples, 0.01%)</title><rect x="21.3580%" y="1765" width="0.0113%" height="15" fill="rgb(237,100,13)" fg:x="5740697446" fg:w="3027344"/><text x="21.6080%" y="1775.50"></text></g><g><title>entry_SYSCALL_64 (29,980,171 samples, 0.11%)</title><rect x="21.2582%" y="1893" width="0.1115%" height="15" fill="rgb(213,55,26)" fg:x="5713883701" fg:w="29980171"/><text x="21.5082%" y="1903.50"></text></g><g><title>do_syscall_64 (29,980,171 samples, 0.11%)</title><rect x="21.2582%" y="1877" width="0.1115%" height="15" fill="rgb(216,17,4)" fg:x="5713883701" fg:w="29980171"/><text x="21.5082%" y="1887.50"></text></g><g><title>__x64_sys_write (29,980,171 samples, 0.11%)</title><rect x="21.2582%" y="1861" width="0.1115%" height="15" fill="rgb(220,153,47)" fg:x="5713883701" fg:w="29980171"/><text x="21.5082%" y="1871.50"></text></g><g><title>ksys_write (29,929,414 samples, 0.11%)</title><rect x="21.2584%" y="1845" width="0.1114%" height="15" fill="rgb(215,131,9)" fg:x="5713934458" fg:w="29929414"/><text x="21.5084%" y="1855.50"></text></g><g><title>vfs_write (28,533,766 samples, 0.11%)</title><rect x="21.2636%" y="1829" width="0.1062%" height="15" fill="rgb(233,46,42)" fg:x="5715330106" fg:w="28533766"/><text x="21.5136%" y="1839.50"></text></g><g><title>ext4_file_write_iter (23,937,588 samples, 0.09%)</title><rect x="21.2807%" y="1813" width="0.0891%" height="15" fill="rgb(226,86,7)" fg:x="5719926284" fg:w="23937588"/><text x="21.5307%" y="1823.50"></text></g><g><title>ext4_buffered_write_iter (23,937,588 samples, 0.09%)</title><rect x="21.2807%" y="1797" width="0.0891%" height="15" fill="rgb(239,226,21)" fg:x="5719926284" fg:w="23937588"/><text x="21.5307%" y="1807.50"></text></g><g><title>__GI___libc_write (31,235,578 samples, 0.12%)</title><rect x="21.2582%" y="1909" width="0.1162%" height="15" fill="rgb(244,137,22)" fg:x="5713883701" fg:w="31235578"/><text x="21.5082%" y="1919.50"></text></g><g><title>perf_mmap__push (32,827,165 samples, 0.12%)</title><rect x="21.2531%" y="1957" width="0.1221%" height="15" fill="rgb(211,139,35)" fg:x="5712514896" fg:w="32827165"/><text x="21.5031%" y="1967.50"></text></g><g><title>record__pushfn (31,770,055 samples, 0.12%)</title><rect x="21.2571%" y="1941" width="0.1182%" height="15" fill="rgb(214,62,50)" fg:x="5713572006" fg:w="31770055"/><text x="21.5071%" y="1951.50"></text></g><g><title>writen (31,770,055 samples, 0.12%)</title><rect x="21.2571%" y="1925" width="0.1182%" height="15" fill="rgb(212,113,44)" fg:x="5713572006" fg:w="31770055"/><text x="21.5071%" y="1935.50"></text></g><g><title>__cmd_record.constprop.0 (37,216,272 samples, 0.14%)</title><rect x="21.2395%" y="1989" width="0.1385%" height="15" fill="rgb(226,150,43)" fg:x="5708846190" fg:w="37216272"/><text x="21.4895%" y="1999.50"></text></g><g><title>record__mmap_read_evlist (34,497,577 samples, 0.13%)</title><rect x="21.2496%" y="1973" width="0.1283%" height="15" fill="rgb(250,71,37)" fg:x="5711564885" fg:w="34497577"/><text x="21.4996%" y="1983.50"></text></g><g><title>__libc_start_call_main (37,312,045 samples, 0.14%)</title><rect x="21.2395%" y="2053" width="0.1388%" height="15" fill="rgb(219,76,19)" fg:x="5708846190" fg:w="37312045"/><text x="21.4895%" y="2063.50"></text></g><g><title>main (37,312,045 samples, 0.14%)</title><rect x="21.2395%" y="2037" width="0.1388%" height="15" fill="rgb(250,39,11)" fg:x="5708846190" fg:w="37312045"/><text x="21.4895%" y="2047.50"></text></g><g><title>run_builtin (37,312,045 samples, 0.14%)</title><rect x="21.2395%" y="2021" width="0.1388%" height="15" fill="rgb(230,64,31)" fg:x="5708846190" fg:w="37312045"/><text x="21.4895%" y="2031.50"></text></g><g><title>cmd_record (37,312,045 samples, 0.14%)</title><rect x="21.2395%" y="2005" width="0.1388%" height="15" fill="rgb(208,222,23)" fg:x="5708846190" fg:w="37312045"/><text x="21.4895%" y="2015.50"></text></g><g><title>perf (37,447,193 samples, 0.14%)</title><rect x="21.2394%" y="2069" width="0.1393%" height="15" fill="rgb(227,125,18)" fg:x="5708818856" fg:w="37447193"/><text x="21.4894%" y="2079.50"></text></g><g><title>[libprocps.so.8.0.3] (6,840,627 samples, 0.03%)</title><rect x="21.3787%" y="2053" width="0.0255%" height="15" fill="rgb(234,210,9)" fg:x="5746266049" fg:w="6840627"/><text x="21.6287%" y="2063.50"></text></g><g><title>path_init (3,722,016 samples, 0.01%)</title><rect x="21.4458%" y="1877" width="0.0138%" height="15" fill="rgb(217,127,24)" fg:x="5764303567" fg:w="3722016"/><text x="21.6958%" y="1887.50"></text></g><g><title>filename_lookup (7,813,493 samples, 0.03%)</title><rect x="21.4329%" y="1909" width="0.0291%" height="15" fill="rgb(239,141,48)" fg:x="5760843900" fg:w="7813493"/><text x="21.6829%" y="1919.50"></text></g><g><title>path_lookupat (6,458,549 samples, 0.02%)</title><rect x="21.4380%" y="1893" width="0.0240%" height="15" fill="rgb(227,109,8)" fg:x="5762198844" fg:w="6458549"/><text x="21.6880%" y="1903.50"></text></g><g><title>__x64_sys_newfstatat (12,920,168 samples, 0.05%)</title><rect x="21.4222%" y="1973" width="0.0481%" height="15" fill="rgb(235,184,23)" fg:x="5757950109" fg:w="12920168"/><text x="21.6722%" y="1983.50"></text></g><g><title>__se_sys_newfstatat (12,920,168 samples, 0.05%)</title><rect x="21.4222%" y="1957" width="0.0481%" height="15" fill="rgb(227,226,48)" fg:x="5757950109" fg:w="12920168"/><text x="21.6722%" y="1967.50"></text></g><g><title>vfs_fstatat (12,920,168 samples, 0.05%)</title><rect x="21.4222%" y="1941" width="0.0481%" height="15" fill="rgb(206,150,11)" fg:x="5757950109" fg:w="12920168"/><text x="21.6722%" y="1951.50"></text></g><g><title>vfs_statx (10,026,377 samples, 0.04%)</title><rect x="21.4329%" y="1925" width="0.0373%" height="15" fill="rgb(254,2,33)" fg:x="5760843900" fg:w="10026377"/><text x="21.6829%" y="1935.50"></text></g><g><title>entry_SYSCALL_64 (13,626,116 samples, 0.05%)</title><rect x="21.4222%" y="2005" width="0.0507%" height="15" fill="rgb(243,160,20)" fg:x="5757950109" fg:w="13626116"/><text x="21.6722%" y="2015.50"></text></g><g><title>do_syscall_64 (13,626,116 samples, 0.05%)</title><rect x="21.4222%" y="1989" width="0.0507%" height="15" fill="rgb(218,208,30)" fg:x="5757950109" fg:w="13626116"/><text x="21.6722%" y="1999.50"></text></g><g><title>__GI___fstatat64 (15,058,885 samples, 0.06%)</title><rect x="21.4222%" y="2021" width="0.0560%" height="15" fill="rgb(224,120,49)" fg:x="5757950109" fg:w="15058885"/><text x="21.6722%" y="2031.50"></text></g><g><title>[unknown] (18,604,516 samples, 0.07%)</title><rect x="21.4141%" y="2037" width="0.0692%" height="15" fill="rgb(246,12,2)" fg:x="5755774107" fg:w="18604516"/><text x="21.6641%" y="2047.50"></text></g><g><title>__GI___fstatat64 (3,032,268 samples, 0.01%)</title><rect x="21.4961%" y="2037" width="0.0113%" height="15" fill="rgb(236,117,3)" fg:x="5777813690" fg:w="3032268"/><text x="21.7461%" y="2047.50"></text></g><g><title>entry_SYSCALL_64 (3,032,268 samples, 0.01%)</title><rect x="21.4961%" y="2021" width="0.0113%" height="15" fill="rgb(216,128,52)" fg:x="5777813690" fg:w="3032268"/><text x="21.7461%" y="2031.50"></text></g><g><title>do_syscall_64 (3,032,268 samples, 0.01%)</title><rect x="21.4961%" y="2005" width="0.0113%" height="15" fill="rgb(246,145,19)" fg:x="5777813690" fg:w="3032268"/><text x="21.7461%" y="2015.50"></text></g><g><title>__x64_sys_newfstatat (3,032,268 samples, 0.01%)</title><rect x="21.4961%" y="1989" width="0.0113%" height="15" fill="rgb(222,11,46)" fg:x="5777813690" fg:w="3032268"/><text x="21.7461%" y="1999.50"></text></g><g><title>__se_sys_newfstatat (3,032,268 samples, 0.01%)</title><rect x="21.4961%" y="1973" width="0.0113%" height="15" fill="rgb(245,82,36)" fg:x="5777813690" fg:w="3032268"/><text x="21.7461%" y="1983.50"></text></g><g><title>__GI___getdents64 (3,594,823 samples, 0.01%)</title><rect x="21.5073%" y="2037" width="0.0134%" height="15" fill="rgb(250,73,51)" fg:x="5780845958" fg:w="3594823"/><text x="21.7573%" y="2047.50"></text></g><g><title>entry_SYSCALL_64 (3,594,823 samples, 0.01%)</title><rect x="21.5073%" y="2021" width="0.0134%" height="15" fill="rgb(221,189,23)" fg:x="5780845958" fg:w="3594823"/><text x="21.7573%" y="2031.50"></text></g><g><title>do_syscall_64 (3,594,823 samples, 0.01%)</title><rect x="21.5073%" y="2005" width="0.0134%" height="15" fill="rgb(210,33,7)" fg:x="5780845958" fg:w="3594823"/><text x="21.7573%" y="2015.50"></text></g><g><title>__x64_sys_getdents64 (3,594,823 samples, 0.01%)</title><rect x="21.5073%" y="1989" width="0.0134%" height="15" fill="rgb(210,107,22)" fg:x="5780845958" fg:w="3594823"/><text x="21.7573%" y="1999.50"></text></g><g><title>__se_sys_getdents64 (3,594,823 samples, 0.01%)</title><rect x="21.5073%" y="1973" width="0.0134%" height="15" fill="rgb(222,116,37)" fg:x="5780845958" fg:w="3594823"/><text x="21.7573%" y="1983.50"></text></g><g><title>iterate_dir (3,594,823 samples, 0.01%)</title><rect x="21.5073%" y="1957" width="0.0134%" height="15" fill="rgb(254,17,48)" fg:x="5780845958" fg:w="3594823"/><text x="21.7573%" y="1967.50"></text></g><g><title>proc_root_readdir (3,594,823 samples, 0.01%)</title><rect x="21.5073%" y="1941" width="0.0134%" height="15" fill="rgb(224,36,32)" fg:x="5780845958" fg:w="3594823"/><text x="21.7573%" y="1951.50"></text></g><g><title>proc_pid_readdir (3,594,823 samples, 0.01%)</title><rect x="21.5073%" y="1925" width="0.0134%" height="15" fill="rgb(232,90,46)" fg:x="5780845958" fg:w="3594823"/><text x="21.7573%" y="1935.50"></text></g><g><title>proc_fill_cache (2,874,704 samples, 0.01%)</title><rect x="21.5100%" y="1909" width="0.0107%" height="15" fill="rgb(241,66,40)" fg:x="5781566077" fg:w="2874704"/><text x="21.7600%" y="1919.50"></text></g><g><title>kmem_cache_alloc (8,773,125 samples, 0.03%)</title><rect x="21.5482%" y="1909" width="0.0326%" height="15" fill="rgb(249,184,29)" fg:x="5791821669" fg:w="8773125"/><text x="21.7982%" y="1919.50"></text></g><g><title>alloc_empty_file (11,695,842 samples, 0.04%)</title><rect x="21.5482%" y="1925" width="0.0435%" height="15" fill="rgb(231,181,1)" fg:x="5791821669" fg:w="11695842"/><text x="21.7982%" y="1935.50"></text></g><g><title>proc_pid_permission (3,807,063 samples, 0.01%)</title><rect x="21.6106%" y="1893" width="0.0142%" height="15" fill="rgb(224,94,2)" fg:x="5808606377" fg:w="3807063"/><text x="21.8606%" y="1903.50"></text></g><g><title>inode_permission (5,989,252 samples, 0.02%)</title><rect x="21.6053%" y="1909" width="0.0223%" height="15" fill="rgb(229,170,15)" fg:x="5807185968" fg:w="5989252"/><text x="21.8553%" y="1919.50"></text></g><g><title>lookup_fast (3,500,657 samples, 0.01%)</title><rect x="21.6276%" y="1909" width="0.0130%" height="15" fill="rgb(240,127,35)" fg:x="5813175220" fg:w="3500657"/><text x="21.8776%" y="1919.50"></text></g><g><title>step_into (2,831,097 samples, 0.01%)</title><rect x="21.6433%" y="1909" width="0.0105%" height="15" fill="rgb(248,196,34)" fg:x="5817383426" fg:w="2831097"/><text x="21.8933%" y="1919.50"></text></g><g><title>link_path_walk (14,507,292 samples, 0.05%)</title><rect x="21.6025%" y="1925" width="0.0540%" height="15" fill="rgb(236,137,7)" fg:x="5806412362" fg:w="14507292"/><text x="21.8525%" y="1935.50"></text></g><g><title>__d_lookup_rcu (2,858,293 samples, 0.01%)</title><rect x="21.6564%" y="1909" width="0.0106%" height="15" fill="rgb(235,127,16)" fg:x="5820919654" fg:w="2858293"/><text x="21.9064%" y="1919.50"></text></g><g><title>lookup_fast (3,590,899 samples, 0.01%)</title><rect x="21.6564%" y="1925" width="0.0134%" height="15" fill="rgb(250,192,54)" fg:x="5820919654" fg:w="3590899"/><text x="21.9064%" y="1935.50"></text></g><g><title>do_filp_open (48,616,792 samples, 0.18%)</title><rect x="21.5317%" y="1957" width="0.1809%" height="15" fill="rgb(218,98,20)" fg:x="5787381692" fg:w="48616792"/><text x="21.7817%" y="1967.50"></text></g><g><title>path_openat (48,616,792 samples, 0.18%)</title><rect x="21.5317%" y="1941" width="0.1809%" height="15" fill="rgb(230,176,47)" fg:x="5787381692" fg:w="48616792"/><text x="21.7817%" y="1951.50"></text></g><g><title>vfs_open (6,551,433 samples, 0.02%)</title><rect x="21.6882%" y="1925" width="0.0244%" height="15" fill="rgb(244,2,33)" fg:x="5829447051" fg:w="6551433"/><text x="21.9382%" y="1935.50"></text></g><g><title>do_dentry_open (6,551,433 samples, 0.02%)</title><rect x="21.6882%" y="1909" width="0.0244%" height="15" fill="rgb(231,100,17)" fg:x="5829447051" fg:w="6551433"/><text x="21.9382%" y="1919.50"></text></g><g><title>memset_orig (2,924,766 samples, 0.01%)</title><rect x="21.7151%" y="1925" width="0.0109%" height="15" fill="rgb(245,23,12)" fg:x="5836676259" fg:w="2924766"/><text x="21.9651%" y="1935.50"></text></g><g><title>getname (6,235,958 samples, 0.02%)</title><rect x="21.7125%" y="1957" width="0.0232%" height="15" fill="rgb(249,55,22)" fg:x="5835998484" fg:w="6235958"/><text x="21.9625%" y="1967.50"></text></g><g><title>getname_flags (6,235,958 samples, 0.02%)</title><rect x="21.7125%" y="1941" width="0.0232%" height="15" fill="rgb(207,134,9)" fg:x="5835998484" fg:w="6235958"/><text x="21.9625%" y="1951.50"></text></g><g><title>do_sys_openat2 (57,070,419 samples, 0.21%)</title><rect x="21.5261%" y="1973" width="0.2123%" height="15" fill="rgb(218,134,0)" fg:x="5785883951" fg:w="57070419"/><text x="21.7761%" y="1983.50"></text></g><g><title>__x64_sys_openat (57,857,966 samples, 0.22%)</title><rect x="21.5261%" y="1989" width="0.2153%" height="15" fill="rgb(213,212,33)" fg:x="5785883951" fg:w="57857966"/><text x="21.7761%" y="1999.50"></text></g><g><title>entry_SYSCALL_64 (61,476,585 samples, 0.23%)</title><rect x="21.5207%" y="2021" width="0.2287%" height="15" fill="rgb(252,106,18)" fg:x="5784440781" fg:w="61476585"/><text x="21.7707%" y="2031.50"></text></g><g><title>do_syscall_64 (61,476,585 samples, 0.23%)</title><rect x="21.5207%" y="2005" width="0.2287%" height="15" fill="rgb(208,126,42)" fg:x="5784440781" fg:w="61476585"/><text x="21.7707%" y="2015.50"></text></g><g><title>__GI___libc_open (64,308,731 samples, 0.24%)</title><rect x="21.5207%" y="2037" width="0.2393%" height="15" fill="rgb(246,175,29)" fg:x="5784440781" fg:w="64308731"/><text x="21.7707%" y="2047.50"></text></g><g><title>entry_ibpb (2,832,146 samples, 0.01%)</title><rect x="21.7494%" y="2021" width="0.0105%" height="15" fill="rgb(215,13,50)" fg:x="5845917366" fg:w="2832146"/><text x="21.9994%" y="2031.50"></text></g><g><title>__close (3,595,478 samples, 0.01%)</title><rect x="21.7628%" y="2037" width="0.0134%" height="15" fill="rgb(216,172,15)" fg:x="5849512432" fg:w="3595478"/><text x="22.0128%" y="2047.50"></text></g><g><title>__isoc99_sscanf (10,039,349 samples, 0.04%)</title><rect x="21.7866%" y="2037" width="0.0374%" height="15" fill="rgb(212,103,13)" fg:x="5855912721" fg:w="10039349"/><text x="22.0366%" y="2047.50"></text></g><g><title>__vfscanf_internal (7,238,135 samples, 0.03%)</title><rect x="21.7970%" y="2021" width="0.0269%" height="15" fill="rgb(231,171,36)" fg:x="5858713935" fg:w="7238135"/><text x="22.0470%" y="2031.50"></text></g><g><title>__mbrtowc (5,056,452 samples, 0.02%)</title><rect x="21.8240%" y="2037" width="0.0188%" height="15" fill="rgb(250,123,20)" fg:x="5865952070" fg:w="5056452"/><text x="22.0740%" y="2047.50"></text></g><g><title>__vfprintf_internal (4,971,193 samples, 0.02%)</title><rect x="21.8648%" y="2037" width="0.0185%" height="15" fill="rgb(212,53,50)" fg:x="5876916767" fg:w="4971193"/><text x="22.1148%" y="2047.50"></text></g><g><title>_dl_sysdep_start (3,810,171 samples, 0.01%)</title><rect x="21.8857%" y="2037" width="0.0142%" height="15" fill="rgb(243,54,12)" fg:x="5882551039" fg:w="3810171"/><text x="22.1357%" y="2047.50"></text></g><g><title>dl_main (3,134,554 samples, 0.01%)</title><rect x="21.8882%" y="2021" width="0.0117%" height="15" fill="rgb(234,101,34)" fg:x="5883226656" fg:w="3134554"/><text x="22.1382%" y="2031.50"></text></g><g><title>proc_pid_cmdline_read (3,425,191 samples, 0.01%)</title><rect x="21.9240%" y="1941" width="0.0127%" height="15" fill="rgb(254,67,22)" fg:x="5892832817" fg:w="3425191"/><text x="22.1740%" y="1951.50"></text></g><g><title>__x64_sys_read (7,750,845 samples, 0.03%)</title><rect x="21.9160%" y="1989" width="0.0288%" height="15" fill="rgb(250,35,47)" fg:x="5890683407" fg:w="7750845"/><text x="22.1660%" y="1999.50"></text></g><g><title>ksys_read (7,750,845 samples, 0.03%)</title><rect x="21.9160%" y="1973" width="0.0288%" height="15" fill="rgb(226,126,38)" fg:x="5890683407" fg:w="7750845"/><text x="22.1660%" y="1983.50"></text></g><g><title>vfs_read (6,269,684 samples, 0.02%)</title><rect x="21.9215%" y="1957" width="0.0233%" height="15" fill="rgb(216,138,53)" fg:x="5892164568" fg:w="6269684"/><text x="22.1715%" y="1967.50"></text></g><g><title>entry_SYSCALL_64 (9,090,350 samples, 0.03%)</title><rect x="21.9135%" y="2021" width="0.0338%" height="15" fill="rgb(246,199,43)" fg:x="5890003313" fg:w="9090350"/><text x="22.1635%" y="2031.50"></text></g><g><title>do_syscall_64 (8,410,256 samples, 0.03%)</title><rect x="21.9160%" y="2005" width="0.0313%" height="15" fill="rgb(232,125,11)" fg:x="5890683407" fg:w="8410256"/><text x="22.1660%" y="2015.50"></text></g><g><title>read (11,843,447 samples, 0.04%)</title><rect x="21.9109%" y="2037" width="0.0441%" height="15" fill="rgb(218,219,45)" fg:x="5889317112" fg:w="11843447"/><text x="22.1609%" y="2047.50"></text></g><g><title>[unknown] (147,383,920 samples, 0.55%)</title><rect x="21.4116%" y="2053" width="0.5483%" height="15" fill="rgb(216,102,54)" fg:x="5755102277" fg:w="147383920"/><text x="21.6616%" y="2063.50"></text></g><g><title>__fput_sync (12,229,203 samples, 0.05%)</title><rect x="21.9972%" y="1973" width="0.0455%" height="15" fill="rgb(250,228,7)" fg:x="5912513594" fg:w="12229203"/><text x="22.2472%" y="1983.50"></text></g><g><title>__fput (12,229,203 samples, 0.05%)</title><rect x="21.9972%" y="1957" width="0.0455%" height="15" fill="rgb(226,125,25)" fg:x="5912513594" fg:w="12229203"/><text x="22.2472%" y="1967.50"></text></g><g><title>single_release (7,219,672 samples, 0.03%)</title><rect x="22.0158%" y="1941" width="0.0269%" height="15" fill="rgb(224,165,27)" fg:x="5917523125" fg:w="7219672"/><text x="22.2658%" y="1951.50"></text></g><g><title>kvfree (3,646,028 samples, 0.01%)</title><rect x="22.0291%" y="1925" width="0.0136%" height="15" fill="rgb(233,86,3)" fg:x="5921096769" fg:w="3646028"/><text x="22.2791%" y="1935.50"></text></g><g><title>kfree (3,646,028 samples, 0.01%)</title><rect x="22.0291%" y="1909" width="0.0136%" height="15" fill="rgb(228,116,20)" fg:x="5921096769" fg:w="3646028"/><text x="22.2791%" y="1919.50"></text></g><g><title>__kmem_cache_free (3,646,028 samples, 0.01%)</title><rect x="22.0291%" y="1893" width="0.0136%" height="15" fill="rgb(209,192,17)" fg:x="5921096769" fg:w="3646028"/><text x="22.2791%" y="1903.50"></text></g><g><title>memcg_slab_free_hook (3,646,028 samples, 0.01%)</title><rect x="22.0291%" y="1877" width="0.0136%" height="15" fill="rgb(224,88,34)" fg:x="5921096769" fg:w="3646028"/><text x="22.2791%" y="1887.50"></text></g><g><title>obj_cgroup_uncharge (2,849,311 samples, 0.01%)</title><rect x="22.0321%" y="1861" width="0.0106%" height="15" fill="rgb(233,38,6)" fg:x="5921893486" fg:w="2849311"/><text x="22.2821%" y="1871.50"></text></g><g><title>refill_obj_stock (2,849,311 samples, 0.01%)</title><rect x="22.0321%" y="1845" width="0.0106%" height="15" fill="rgb(212,59,30)" fg:x="5921893486" fg:w="2849311"/><text x="22.2821%" y="1855.50"></text></g><g><title>entry_SYSCALL_64 (13,762,631 samples, 0.05%)</title><rect x="21.9944%" y="2037" width="0.0512%" height="15" fill="rgb(213,80,3)" fg:x="5911750167" fg:w="13762631"/><text x="22.2444%" y="2047.50"></text></g><g><title>do_syscall_64 (13,762,631 samples, 0.05%)</title><rect x="21.9944%" y="2021" width="0.0512%" height="15" fill="rgb(251,178,7)" fg:x="5911750167" fg:w="13762631"/><text x="22.2444%" y="2031.50"></text></g><g><title>__x64_sys_close (13,762,631 samples, 0.05%)</title><rect x="21.9944%" y="2005" width="0.0512%" height="15" fill="rgb(213,154,26)" fg:x="5911750167" fg:w="13762631"/><text x="22.2444%" y="2015.50"></text></g><g><title>__se_sys_close (13,762,631 samples, 0.05%)</title><rect x="21.9944%" y="1989" width="0.0512%" height="15" fill="rgb(238,165,49)" fg:x="5911750167" fg:w="13762631"/><text x="22.2444%" y="1999.50"></text></g><g><title>entry_ibpb (8,800,686 samples, 0.03%)</title><rect x="22.0456%" y="2037" width="0.0327%" height="15" fill="rgb(248,91,46)" fg:x="5925512798" fg:w="8800686"/><text x="22.2956%" y="2047.50"></text></g><g><title>__close (23,256,439 samples, 0.09%)</title><rect x="21.9944%" y="2053" width="0.0865%" height="15" fill="rgb(244,21,52)" fg:x="5911750167" fg:w="23256439"/><text x="22.2444%" y="2063.50"></text></g><g><title>_dl_map_object (5,566,221 samples, 0.02%)</title><rect x="22.1084%" y="2053" width="0.0207%" height="15" fill="rgb(247,122,20)" fg:x="5942407492" fg:w="5566221"/><text x="22.3584%" y="2063.50"></text></g><g><title>obj_cgroup_charge_pages (2,850,905 samples, 0.01%)</title><rect x="22.2067%" y="1861" width="0.0106%" height="15" fill="rgb(218,27,9)" fg:x="5968810499" fg:w="2850905"/><text x="22.4567%" y="1871.50"></text></g><g><title>obj_cgroup_charge (4,325,997 samples, 0.02%)</title><rect x="22.2067%" y="1877" width="0.0161%" height="15" fill="rgb(246,7,6)" fg:x="5968810499" fg:w="4325997"/><text x="22.4567%" y="1887.50"></text></g><g><title>__kmem_cache_alloc_node (8,697,424 samples, 0.03%)</title><rect x="22.1932%" y="1893" width="0.0324%" height="15" fill="rgb(227,135,54)" fg:x="5965191044" fg:w="8697424"/><text x="22.4432%" y="1903.50"></text></g><g><title>kvmalloc_node (10,804,627 samples, 0.04%)</title><rect x="22.1908%" y="1925" width="0.0402%" height="15" fill="rgb(247,14,11)" fg:x="5964537693" fg:w="10804627"/><text x="22.4408%" y="1935.50"></text></g><g><title>__kmalloc_node (10,151,276 samples, 0.04%)</title><rect x="22.1932%" y="1909" width="0.0378%" height="15" fill="rgb(206,149,34)" fg:x="5965191044" fg:w="10151276"/><text x="22.4432%" y="1919.50"></text></g><g><title>cpuset_task_status_allowed (3,594,801 samples, 0.01%)</title><rect x="22.2523%" y="1893" width="0.0134%" height="15" fill="rgb(227,228,4)" fg:x="5981068561" fg:w="3594801"/><text x="22.5023%" y="1903.50"></text></g><g><title>seq_printf (3,594,801 samples, 0.01%)</title><rect x="22.2523%" y="1877" width="0.0134%" height="15" fill="rgb(238,218,28)" fg:x="5981068561" fg:w="3594801"/><text x="22.5023%" y="1887.50"></text></g><g><title>vsnprintf (3,594,801 samples, 0.01%)</title><rect x="22.2523%" y="1861" width="0.0134%" height="15" fill="rgb(252,86,40)" fg:x="5981068561" fg:w="3594801"/><text x="22.5023%" y="1871.50"></text></g><g><title>pointer (2,850,215 samples, 0.01%)</title><rect x="22.2550%" y="1845" width="0.0106%" height="15" fill="rgb(251,225,11)" fg:x="5981813147" fg:w="2850215"/><text x="22.5050%" y="1855.50"></text></g><g><title>proc_task_name (2,983,132 samples, 0.01%)</title><rect x="22.2656%" y="1893" width="0.0111%" height="15" fill="rgb(206,46,49)" fg:x="5984663362" fg:w="2983132"/><text x="22.5156%" y="1903.50"></text></g><g><title>seq_printf (4,913,920 samples, 0.02%)</title><rect x="22.2767%" y="1893" width="0.0183%" height="15" fill="rgb(245,128,24)" fg:x="5987646494" fg:w="4913920"/><text x="22.5267%" y="1903.50"></text></g><g><title>vsnprintf (4,191,493 samples, 0.02%)</title><rect x="22.2794%" y="1877" width="0.0156%" height="15" fill="rgb(219,177,34)" fg:x="5988368921" fg:w="4191493"/><text x="22.5294%" y="1887.50"></text></g><g><title>proc_pid_status (18,555,844 samples, 0.07%)</title><rect x="22.2338%" y="1909" width="0.0690%" height="15" fill="rgb(218,60,48)" fg:x="5976098082" fg:w="18555844"/><text x="22.4838%" y="1919.50"></text></g><g><title>do_task_stat (13,408,637 samples, 0.05%)</title><rect x="22.3028%" y="1893" width="0.0499%" height="15" fill="rgb(221,11,5)" fg:x="5994653926" fg:w="13408637"/><text x="22.5528%" y="1903.50"></text></g><g><title>proc_tgid_stat (14,796,029 samples, 0.06%)</title><rect x="22.3028%" y="1909" width="0.0550%" height="15" fill="rgb(220,148,13)" fg:x="5994653926" fg:w="14796029"/><text x="22.5528%" y="1919.50"></text></g><g><title>proc_single_show (36,265,164 samples, 0.13%)</title><rect x="22.2310%" y="1925" width="0.1349%" height="15" fill="rgb(210,16,3)" fg:x="5975342320" fg:w="36265164"/><text x="22.4810%" y="1935.50"></text></g><g><title>seq_read_iter (51,306,939 samples, 0.19%)</title><rect x="22.1805%" y="1941" width="0.1909%" height="15" fill="rgb(236,80,2)" fg:x="5961775545" fg:w="51306939"/><text x="22.4305%" y="1951.50"></text></g><g><title>__x64_sys_read (60,703,089 samples, 0.23%)</title><rect x="22.1537%" y="2005" width="0.2258%" height="15" fill="rgb(239,129,19)" fg:x="5954571371" fg:w="60703089"/><text x="22.4037%" y="2015.50"></text></g><g><title>ksys_read (60,703,089 samples, 0.23%)</title><rect x="22.1537%" y="1989" width="0.2258%" height="15" fill="rgb(220,106,35)" fg:x="5954571371" fg:w="60703089"/><text x="22.4037%" y="1999.50"></text></g><g><title>vfs_read (60,703,089 samples, 0.23%)</title><rect x="22.1537%" y="1973" width="0.2258%" height="15" fill="rgb(252,139,45)" fg:x="5954571371" fg:w="60703089"/><text x="22.4037%" y="1983.50"></text></g><g><title>seq_read (56,399,420 samples, 0.21%)</title><rect x="22.1697%" y="1957" width="0.2098%" height="15" fill="rgb(229,8,36)" fg:x="5958875040" fg:w="56399420"/><text x="22.4197%" y="1967.50"></text></g><g><title>entry_SYSCALL_64 (63,574,846 samples, 0.24%)</title><rect x="22.1457%" y="2037" width="0.2365%" height="15" fill="rgb(230,126,33)" fg:x="5952426359" fg:w="63574846"/><text x="22.3957%" y="2047.50"></text></g><g><title>do_syscall_64 (61,429,834 samples, 0.23%)</title><rect x="22.1537%" y="2021" width="0.2285%" height="15" fill="rgb(239,140,21)" fg:x="5954571371" fg:w="61429834"/><text x="22.4037%" y="2031.50"></text></g><g><title>read (65,080,417 samples, 0.24%)</title><rect x="22.1428%" y="2053" width="0.2421%" height="15" fill="rgb(254,104,9)" fg:x="5951651931" fg:w="65080417"/><text x="22.3928%" y="2063.50"></text></g><g><title>ps (271,875,450 samples, 1.01%)</title><rect x="21.3787%" y="2069" width="1.0115%" height="15" fill="rgb(239,52,14)" fg:x="5746266049" fg:w="271875450"/><text x="21.6287%" y="2079.50"></text></g><g><title>__vdso_clock_gettime (4,070,809 samples, 0.02%)</title><rect x="22.4165%" y="1925" width="0.0151%" height="15" fill="rgb(208,227,44)" fg:x="6025211842" fg:w="4070809"/><text x="22.6665%" y="1935.50"></text></g><g><title>std::chrono::_V2::steady_clock::now (6,725,243 samples, 0.03%)</title><rect x="22.4080%" y="1957" width="0.0250%" height="15" fill="rgb(246,18,19)" fg:x="6022929295" fg:w="6725243"/><text x="22.6580%" y="1967.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (5,245,988 samples, 0.02%)</title><rect x="22.4135%" y="1941" width="0.0195%" height="15" fill="rgb(235,228,25)" fg:x="6024408550" fg:w="5245988"/><text x="22.6635%" y="1951.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (7,164,899 samples, 0.03%)</title><rect x="22.5040%" y="1861" width="0.0267%" height="15" fill="rgb(240,156,20)" fg:x="6048736074" fg:w="7164899"/><text x="22.7540%" y="1871.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (7,164,899 samples, 0.03%)</title><rect x="22.5040%" y="1845" width="0.0267%" height="15" fill="rgb(224,8,20)" fg:x="6048736074" fg:w="7164899"/><text x="22.7540%" y="1855.50"></text></g><g><title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (4,012,135 samples, 0.01%)</title><rect x="22.5157%" y="1829" width="0.0149%" height="15" fill="rgb(214,12,52)" fg:x="6051888838" fg:w="4012135"/><text x="22.7657%" y="1839.50"></text></g><g><title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (2,786,245 samples, 0.01%)</title><rect x="22.5203%" y="1813" width="0.0104%" height="15" fill="rgb(211,220,47)" fg:x="6053114728" fg:w="2786245"/><text x="22.7703%" y="1823.50"></text></g><g><title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; &gt; &gt;::find (11,058,792 samples, 0.04%)</title><rect x="22.4997%" y="1893" width="0.0411%" height="15" fill="rgb(250,173,5)" fg:x="6047578175" fg:w="11058792"/><text x="22.7497%" y="1903.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (11,058,792 samples, 0.04%)</title><rect x="22.4997%" y="1877" width="0.0411%" height="15" fill="rgb(250,125,52)" fg:x="6047578175" fg:w="11058792"/><text x="22.7497%" y="1887.50"></text></g><g><title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (2,735,994 samples, 0.01%)</title><rect x="22.5307%" y="1861" width="0.0102%" height="15" fill="rgb(209,133,18)" fg:x="6055900973" fg:w="2735994"/><text x="22.7807%" y="1871.50"></text></g><g><title>FileDescriptorCache::get_file_descriptor (15,404,524 samples, 0.06%)</title><rect x="22.4881%" y="1909" width="0.0573%" height="15" fill="rgb(216,173,22)" fg:x="6044471938" fg:w="15404524"/><text x="22.7381%" y="1919.50"></text></g><g><title>__fdget (3,608,289 samples, 0.01%)</title><rect x="22.5773%" y="1845" width="0.0134%" height="15" fill="rgb(205,3,22)" fg:x="6068421309" fg:w="3608289"/><text x="22.8273%" y="1855.50"></text></g><g><title>obj_cgroup_charge_pages (4,439,067 samples, 0.02%)</title><rect x="22.6282%" y="1701" width="0.0165%" height="15" fill="rgb(248,22,20)" fg:x="6082125814" fg:w="4439067"/><text x="22.8782%" y="1711.50"></text></g><g><title>__kmem_cache_alloc_node (7,045,304 samples, 0.03%)</title><rect x="22.6200%" y="1733" width="0.0262%" height="15" fill="rgb(233,6,29)" fg:x="6079920547" fg:w="7045304"/><text x="22.8700%" y="1743.50"></text></g><g><title>obj_cgroup_charge (4,840,037 samples, 0.02%)</title><rect x="22.6282%" y="1717" width="0.0180%" height="15" fill="rgb(240,22,54)" fg:x="6082125814" fg:w="4840037"/><text x="22.8782%" y="1727.50"></text></g><g><title>__kmalloc (8,640,825 samples, 0.03%)</title><rect x="22.6167%" y="1749" width="0.0321%" height="15" fill="rgb(231,133,32)" fg:x="6079028913" fg:w="8640825"/><text x="22.8667%" y="1759.50"></text></g><g><title>fsnotify_insert_event (3,232,050 samples, 0.01%)</title><rect x="22.6511%" y="1749" width="0.0120%" height="15" fill="rgb(248,193,4)" fg:x="6088260096" fg:w="3232050"/><text x="22.9011%" y="1759.50"></text></g><g><title>inotify_handle_inode_event (12,710,729 samples, 0.05%)</title><rect x="22.6167%" y="1765" width="0.0473%" height="15" fill="rgb(211,178,46)" fg:x="6079028913" fg:w="12710729"/><text x="22.8667%" y="1775.50"></text></g><g><title>fsnotify (16,569,863 samples, 0.06%)</title><rect x="22.6075%" y="1813" width="0.0616%" height="15" fill="rgb(224,5,42)" fg:x="6076564159" fg:w="16569863"/><text x="22.8575%" y="1823.50"></text></g><g><title>send_to_group (15,897,039 samples, 0.06%)</title><rect x="22.6101%" y="1797" width="0.0591%" height="15" fill="rgb(239,176,25)" fg:x="6077236983" fg:w="15897039"/><text x="22.8601%" y="1807.50"></text></g><g><title>fsnotify_handle_inode_event (14,556,731 samples, 0.05%)</title><rect x="22.6150%" y="1781" width="0.0542%" height="15" fill="rgb(245,187,50)" fg:x="6078577291" fg:w="14556731"/><text x="22.8650%" y="1791.50"></text></g><g><title>__fsnotify_parent (21,583,724 samples, 0.08%)</title><rect x="22.6006%" y="1829" width="0.0803%" height="15" fill="rgb(248,24,15)" fg:x="6074693324" fg:w="21583724"/><text x="22.8506%" y="1839.50"></text></g><g><title>take_dentry_name_snapshot (3,143,026 samples, 0.01%)</title><rect x="22.6692%" y="1813" width="0.0117%" height="15" fill="rgb(205,166,13)" fg:x="6093134022" fg:w="3143026"/><text x="22.9192%" y="1823.50"></text></g><g><title>osq_lock (43,634,043 samples, 0.16%)</title><rect x="22.7088%" y="1765" width="0.1623%" height="15" fill="rgb(208,114,23)" fg:x="6103791570" fg:w="43634043"/><text x="22.9588%" y="1775.50"></text></g><g><title>rwsem_spin_on_owner (211,890,550 samples, 0.79%)</title><rect x="22.8712%" y="1765" width="0.7883%" height="15" fill="rgb(239,127,18)" fg:x="6147425613" fg:w="211890550"/><text x="23.1212%" y="1775.50"></text></g><g><title>dequeue_task (2,895,424 samples, 0.01%)</title><rect x="23.6674%" y="1717" width="0.0108%" height="15" fill="rgb(219,154,28)" fg:x="6361434321" fg:w="2895424"/><text x="23.9174%" y="1727.50"></text></g><g><title>dequeue_task_fair (2,832,651 samples, 0.01%)</title><rect x="23.6676%" y="1701" width="0.0105%" height="15" fill="rgb(225,157,23)" fg:x="6361497094" fg:w="2832651"/><text x="23.9176%" y="1711.50"></text></g><g><title>dequeue_entity (2,832,651 samples, 0.01%)</title><rect x="23.6676%" y="1685" width="0.0105%" height="15" fill="rgb(219,8,6)" fg:x="6361497094" fg:w="2832651"/><text x="23.9176%" y="1695.50"></text></g><g><title>pick_next_task_fair (4,231,820 samples, 0.02%)</title><rect x="23.6803%" y="1701" width="0.0157%" height="15" fill="rgb(212,47,6)" fg:x="6364890430" fg:w="4231820"/><text x="23.9303%" y="1711.50"></text></g><g><title>newidle_balance (4,231,820 samples, 0.02%)</title><rect x="23.6803%" y="1685" width="0.0157%" height="15" fill="rgb(224,190,4)" fg:x="6364890430" fg:w="4231820"/><text x="23.9303%" y="1695.50"></text></g><g><title>pick_next_task (5,249,313 samples, 0.02%)</title><rect x="23.6782%" y="1717" width="0.0195%" height="15" fill="rgb(239,183,29)" fg:x="6364329745" fg:w="5249313"/><text x="23.9282%" y="1727.50"></text></g><g><title>__sched_text_start (11,921,451 samples, 0.04%)</title><rect x="23.6595%" y="1733" width="0.0444%" height="15" fill="rgb(213,57,7)" fg:x="6359316163" fg:w="11921451"/><text x="23.9095%" y="1743.50"></text></g><g><title>down_write (270,900,730 samples, 1.01%)</title><rect x="22.6967%" y="1797" width="1.0079%" height="15" fill="rgb(216,148,1)" fg:x="6100521407" fg:w="270900730"/><text x="22.9467%" y="1807.50"></text></g><g><title>rwsem_down_write_slowpath (268,108,788 samples, 1.00%)</title><rect x="22.7071%" y="1781" width="0.9975%" height="15" fill="rgb(236,182,29)" fg:x="6103313349" fg:w="268108788"/><text x="22.9571%" y="1791.50"></text></g><g><title>schedule_preempt_disabled (12,105,974 samples, 0.05%)</title><rect x="23.6595%" y="1765" width="0.0450%" height="15" fill="rgb(244,120,48)" fg:x="6359316163" fg:w="12105974"/><text x="23.9095%" y="1775.50"></text></g><g><title>schedule (12,105,974 samples, 0.05%)</title><rect x="23.6595%" y="1749" width="0.0450%" height="15" fill="rgb(206,71,34)" fg:x="6359316163" fg:w="12105974"/><text x="23.9095%" y="1759.50"></text></g><g><title>ext4_da_write_begin (12,020,351 samples, 0.04%)</title><rect x="23.7046%" y="1797" width="0.0447%" height="15" fill="rgb(242,32,6)" fg:x="6371422137" fg:w="12020351"/><text x="23.9546%" y="1807.50"></text></g><g><title>ext4_da_write_end (7,044,511 samples, 0.03%)</title><rect x="23.7493%" y="1797" width="0.0262%" height="15" fill="rgb(241,35,3)" fg:x="6383442488" fg:w="7044511"/><text x="23.9993%" y="1807.50"></text></g><g><title>jbd2__journal_start (3,755,924 samples, 0.01%)</title><rect x="23.7783%" y="1717" width="0.0140%" height="15" fill="rgb(222,62,19)" fg:x="6391248730" fg:w="3755924"/><text x="24.0283%" y="1727.50"></text></g><g><title>__ext4_journal_start_sb (4,299,144 samples, 0.02%)</title><rect x="23.7783%" y="1733" width="0.0160%" height="15" fill="rgb(223,110,41)" fg:x="6391248730" fg:w="4299144"/><text x="24.0283%" y="1743.50"></text></g><g><title>ext4_mark_iloc_dirty (4,530,746 samples, 0.02%)</title><rect x="23.8045%" y="1717" width="0.0169%" height="15" fill="rgb(208,224,4)" fg:x="6398298155" fg:w="4530746"/><text x="24.0545%" y="1727.50"></text></g><g><title>__ext4_get_inode_loc (4,886,913 samples, 0.02%)</title><rect x="23.8214%" y="1701" width="0.0182%" height="15" fill="rgb(241,137,19)" fg:x="6402828901" fg:w="4886913"/><text x="24.0714%" y="1711.50"></text></g><g><title>__getblk_gfp (3,974,983 samples, 0.01%)</title><rect x="23.8248%" y="1685" width="0.0148%" height="15" fill="rgb(244,24,17)" fg:x="6403740831" fg:w="3974983"/><text x="24.0748%" y="1695.50"></text></g><g><title>__find_get_block (3,974,983 samples, 0.01%)</title><rect x="23.8248%" y="1669" width="0.0148%" height="15" fill="rgb(245,178,49)" fg:x="6403740831" fg:w="3974983"/><text x="24.0748%" y="1679.50"></text></g><g><title>__mark_inode_dirty (18,069,651 samples, 0.07%)</title><rect x="23.7774%" y="1765" width="0.0672%" height="15" fill="rgb(219,160,38)" fg:x="6391012331" fg:w="18069651"/><text x="24.0274%" y="1775.50"></text></g><g><title>ext4_dirty_inode (17,833,252 samples, 0.07%)</title><rect x="23.7783%" y="1749" width="0.0663%" height="15" fill="rgb(228,137,14)" fg:x="6391248730" fg:w="17833252"/><text x="24.0283%" y="1759.50"></text></g><g><title>__ext4_mark_inode_dirty (11,179,495 samples, 0.04%)</title><rect x="23.8031%" y="1733" width="0.0416%" height="15" fill="rgb(237,134,11)" fg:x="6397902487" fg:w="11179495"/><text x="24.0531%" y="1743.50"></text></g><g><title>ext4_reserve_inode_write (6,253,081 samples, 0.02%)</title><rect x="23.8214%" y="1717" width="0.0233%" height="15" fill="rgb(211,126,44)" fg:x="6402828901" fg:w="6253081"/><text x="24.0714%" y="1727.50"></text></g><g><title>file_modified (20,026,492 samples, 0.07%)</title><rect x="23.7769%" y="1797" width="0.0745%" height="15" fill="rgb(226,171,33)" fg:x="6390858073" fg:w="20026492"/><text x="24.0269%" y="1807.50"></text></g><g><title>file_modified_flags (19,872,234 samples, 0.07%)</title><rect x="23.7774%" y="1781" width="0.0739%" height="15" fill="rgb(253,99,13)" fg:x="6391012331" fg:w="19872234"/><text x="24.0274%" y="1791.50"></text></g><g><title>blkcg_rstat_flush (3,307,978 samples, 0.01%)</title><rect x="24.0276%" y="1685" width="0.0123%" height="15" fill="rgb(244,48,7)" fg:x="6458265750" fg:w="3307978"/><text x="24.2776%" y="1695.50"></text></g><g><title>__blkcg_rstat_flush (3,307,978 samples, 0.01%)</title><rect x="24.0276%" y="1669" width="0.0123%" height="15" fill="rgb(244,217,54)" fg:x="6458265750" fg:w="3307978"/><text x="24.2776%" y="1679.50"></text></g><g><title>cgroup_rstat_flush_locked (25,641,477 samples, 0.10%)</title><rect x="23.9999%" y="1701" width="0.0954%" height="15" fill="rgb(224,15,18)" fg:x="6450802425" fg:w="25641477"/><text x="24.2499%" y="1711.50"></text></g><g><title>mem_cgroup_css_rstat_flush (14,870,174 samples, 0.06%)</title><rect x="24.0400%" y="1685" width="0.0553%" height="15" fill="rgb(244,99,12)" fg:x="6461573728" fg:w="14870174"/><text x="24.2900%" y="1695.50"></text></g><g><title>mem_cgroup_wb_stats (26,589,692 samples, 0.10%)</title><rect x="23.9983%" y="1733" width="0.0989%" height="15" fill="rgb(233,226,8)" fg:x="6450385484" fg:w="26589692"/><text x="24.2483%" y="1743.50"></text></g><g><title>cgroup_rstat_flush (26,589,692 samples, 0.10%)</title><rect x="23.9983%" y="1717" width="0.0989%" height="15" fill="rgb(229,211,3)" fg:x="6450385484" fg:w="26589692"/><text x="24.2483%" y="1727.50"></text></g><g><title>balance_dirty_pages (31,406,068 samples, 0.12%)</title><rect x="23.9918%" y="1749" width="0.1168%" height="15" fill="rgb(216,140,21)" fg:x="6448619729" fg:w="31406068"/><text x="24.2418%" y="1759.50"></text></g><g><title>inode_to_bdi (2,767,491 samples, 0.01%)</title><rect x="24.1086%" y="1749" width="0.0103%" height="15" fill="rgb(234,122,30)" fg:x="6480025797" fg:w="2767491"/><text x="24.3586%" y="1759.50"></text></g><g><title>balance_dirty_pages_ratelimited_flags (73,358,839 samples, 0.27%)</title><rect x="23.9023%" y="1765" width="0.2729%" height="15" fill="rgb(236,25,46)" fg:x="6424568429" fg:w="73358839"/><text x="24.1523%" y="1775.50"></text></g><g><title>radix_tree_lookup (15,133,980 samples, 0.06%)</title><rect x="24.1189%" y="1749" width="0.0563%" height="15" fill="rgb(217,52,54)" fg:x="6482793288" fg:w="15133980"/><text x="24.3689%" y="1759.50"></text></g><g><title>balance_dirty_pages_ratelimited (76,809,562 samples, 0.29%)</title><rect x="23.8995%" y="1781" width="0.2858%" height="15" fill="rgb(222,29,26)" fg:x="6423820581" fg:w="76809562"/><text x="24.1495%" y="1791.50"></text></g><g><title>copy_page_from_iter_atomic (25,167,874 samples, 0.09%)</title><rect x="24.1936%" y="1781" width="0.0936%" height="15" fill="rgb(216,177,29)" fg:x="6502879551" fg:w="25167874"/><text x="24.4436%" y="1791.50"></text></g><g><title>__rcu_read_lock (3,813,304 samples, 0.01%)</title><rect x="24.5376%" y="1717" width="0.0142%" height="15" fill="rgb(247,136,51)" fg:x="6595337974" fg:w="3813304"/><text x="24.7876%" y="1727.50"></text></g><g><title>__rcu_read_unlock (3,272,180 samples, 0.01%)</title><rect x="24.5518%" y="1717" width="0.0122%" height="15" fill="rgb(231,47,47)" fg:x="6599151278" fg:w="3272180"/><text x="24.8018%" y="1727.50"></text></g><g><title>__count_memcg_events (10,396,307 samples, 0.04%)</title><rect x="24.6086%" y="1701" width="0.0387%" height="15" fill="rgb(211,192,36)" fg:x="6614403509" fg:w="10396307"/><text x="24.8586%" y="1711.50"></text></g><g><title>cgroup_rstat_updated (3,199,392 samples, 0.01%)</title><rect x="24.6353%" y="1685" width="0.0119%" height="15" fill="rgb(229,156,32)" fg:x="6621600424" fg:w="3199392"/><text x="24.8853%" y="1695.50"></text></g><g><title>__rcu_read_unlock (2,774,027 samples, 0.01%)</title><rect x="24.6510%" y="1701" width="0.0103%" height="15" fill="rgb(248,213,20)" fg:x="6625822397" fg:w="2774027"/><text x="24.9010%" y="1711.50"></text></g><g><title>charge_memcg (42,411,054 samples, 0.16%)</title><rect x="24.5663%" y="1717" width="0.1578%" height="15" fill="rgb(217,64,7)" fg:x="6603037154" fg:w="42411054"/><text x="24.8163%" y="1727.50"></text></g><g><title>try_charge_memcg (15,985,113 samples, 0.06%)</title><rect x="24.6646%" y="1701" width="0.0595%" height="15" fill="rgb(232,142,8)" fg:x="6629463095" fg:w="15985113"/><text x="24.9146%" y="1711.50"></text></g><g><title>page_counter_try_charge (3,270,009 samples, 0.01%)</title><rect x="24.7119%" y="1685" width="0.0122%" height="15" fill="rgb(224,92,44)" fg:x="6642178199" fg:w="3270009"/><text x="24.9619%" y="1695.50"></text></g><g><title>__mem_cgroup_charge (72,760,705 samples, 0.27%)</title><rect x="24.5272%" y="1733" width="0.2707%" height="15" fill="rgb(214,169,17)" fg:x="6592534530" fg:w="72760705"/><text x="24.7772%" y="1743.50"></text></g><g><title>get_mem_cgroup_from_mm (19,847,027 samples, 0.07%)</title><rect x="24.7241%" y="1717" width="0.0738%" height="15" fill="rgb(210,59,37)" fg:x="6645448208" fg:w="19847027"/><text x="24.9741%" y="1727.50"></text></g><g><title>__mod_memcg_lruvec_state (9,329,710 samples, 0.03%)</title><rect x="24.8353%" y="1717" width="0.0347%" height="15" fill="rgb(214,116,48)" fg:x="6675341673" fg:w="9329710"/><text x="25.0853%" y="1727.50"></text></g><g><title>cgroup_rstat_updated (3,866,569 samples, 0.01%)</title><rect x="24.8556%" y="1701" width="0.0144%" height="15" fill="rgb(244,191,6)" fg:x="6680804814" fg:w="3866569"/><text x="25.1056%" y="1711.50"></text></g><g><title>__mod_node_page_state (6,515,225 samples, 0.02%)</title><rect x="24.8700%" y="1717" width="0.0242%" height="15" fill="rgb(241,50,52)" fg:x="6684671383" fg:w="6515225"/><text x="25.1200%" y="1727.50"></text></g><g><title>__rcu_read_unlock (3,581,107 samples, 0.01%)</title><rect x="24.8980%" y="1717" width="0.0133%" height="15" fill="rgb(236,75,39)" fg:x="6692208115" fg:w="3581107"/><text x="25.1480%" y="1727.50"></text></g><g><title>__mod_lruvec_page_state (31,476,102 samples, 0.12%)</title><rect x="24.7979%" y="1733" width="0.1171%" height="15" fill="rgb(236,99,0)" fg:x="6665295235" fg:w="31476102"/><text x="25.0479%" y="1743.50"></text></g><g><title>_raw_spin_lock_irq (7,140,684 samples, 0.03%)</title><rect x="24.9229%" y="1733" width="0.0266%" height="15" fill="rgb(207,202,15)" fg:x="6698894541" fg:w="7140684"/><text x="25.1729%" y="1743.50"></text></g><g><title>_raw_spin_unlock_irq (6,736,533 samples, 0.03%)</title><rect x="24.9495%" y="1733" width="0.0251%" height="15" fill="rgb(233,207,14)" fg:x="6706035225" fg:w="6736533"/><text x="25.1995%" y="1743.50"></text></g><g><title>get_page_cache_ext_ops (3,750,350 samples, 0.01%)</title><rect x="24.9794%" y="1733" width="0.0140%" height="15" fill="rgb(226,27,51)" fg:x="6714090075" fg:w="3750350"/><text x="25.2294%" y="1743.50"></text></g><g><title>workingset_update_node (9,639,611 samples, 0.04%)</title><rect x="24.9934%" y="1733" width="0.0359%" height="15" fill="rgb(206,104,42)" fg:x="6717840425" fg:w="9639611"/><text x="25.2434%" y="1743.50"></text></g><g><title>xas_load (16,848,870 samples, 0.06%)</title><rect x="25.0384%" y="1717" width="0.0627%" height="15" fill="rgb(212,225,4)" fg:x="6729941062" fg:w="16848870"/><text x="25.2884%" y="1727.50"></text></g><g><title>xas_start (3,708,095 samples, 0.01%)</title><rect x="25.0873%" y="1701" width="0.0138%" height="15" fill="rgb(233,96,42)" fg:x="6743081837" fg:w="3708095"/><text x="25.3373%" y="1711.50"></text></g><g><title>xa_get_order (20,484,856 samples, 0.08%)</title><rect x="25.0292%" y="1733" width="0.0762%" height="15" fill="rgb(229,21,32)" fg:x="6727480036" fg:w="20484856"/><text x="25.2792%" y="1743.50"></text></g><g><title>xas_find_conflict (17,952,298 samples, 0.07%)</title><rect x="25.1139%" y="1733" width="0.0668%" height="15" fill="rgb(226,216,24)" fg:x="6750227923" fg:w="17952298"/><text x="25.3639%" y="1743.50"></text></g><g><title>xas_start (4,676,763 samples, 0.02%)</title><rect x="25.1633%" y="1717" width="0.0174%" height="15" fill="rgb(221,163,17)" fg:x="6763503458" fg:w="4676763"/><text x="25.4133%" y="1727.50"></text></g><g><title>xas_nomem (3,096,825 samples, 0.01%)</title><rect x="25.1807%" y="1733" width="0.0115%" height="15" fill="rgb(216,216,42)" fg:x="6768180221" fg:w="3096825"/><text x="25.4307%" y="1743.50"></text></g><g><title>workingset_update_node (6,732,315 samples, 0.03%)</title><rect x="25.2801%" y="1717" width="0.0250%" height="15" fill="rgb(240,118,7)" fg:x="6794904641" fg:w="6732315"/><text x="25.5301%" y="1727.50"></text></g><g><title>memcg_slab_post_alloc_hook (3,149,083 samples, 0.01%)</title><rect x="25.3513%" y="1685" width="0.0117%" height="15" fill="rgb(221,67,37)" fg:x="6814036323" fg:w="3149083"/><text x="25.6013%" y="1695.50"></text></g><g><title>kmem_cache_alloc_lru (7,809,213 samples, 0.03%)</title><rect x="25.3406%" y="1701" width="0.0291%" height="15" fill="rgb(241,32,44)" fg:x="6811170501" fg:w="7809213"/><text x="25.5906%" y="1711.50"></text></g><g><title>__filemap_add_folio (252,697,869 samples, 0.94%)</title><rect x="24.4321%" y="1749" width="0.9401%" height="15" fill="rgb(235,204,43)" fg:x="6566973130" fg:w="252697869"/><text x="24.6821%" y="1759.50"></text></g><g><title>xas_store (47,290,381 samples, 0.18%)</title><rect x="25.1963%" y="1733" width="0.1759%" height="15" fill="rgb(213,116,10)" fg:x="6772380618" fg:w="47290381"/><text x="25.4463%" y="1743.50"></text></g><g><title>xas_create (18,034,043 samples, 0.07%)</title><rect x="25.3051%" y="1717" width="0.0671%" height="15" fill="rgb(239,15,48)" fg:x="6801636956" fg:w="18034043"/><text x="25.5551%" y="1727.50"></text></g><g><title>__cond_resched (4,949,344 samples, 0.02%)</title><rect x="25.5193%" y="1685" width="0.0184%" height="15" fill="rgb(207,123,36)" fg:x="6859197448" fg:w="4949344"/><text x="25.7693%" y="1695.50"></text></g><g><title>__next_zones_zonelist (12,794,522 samples, 0.05%)</title><rect x="25.5377%" y="1685" width="0.0476%" height="15" fill="rgb(209,103,30)" fg:x="6864146792" fg:w="12794522"/><text x="25.7877%" y="1695.50"></text></g><g><title>clear_page_rep (423,682,041 samples, 1.58%)</title><rect x="25.6523%" y="1669" width="1.5763%" height="15" fill="rgb(238,100,19)" fg:x="6894953502" fg:w="423682041"/><text x="25.9023%" y="1679.50"></text></g><g><title>node_dirty_ok (42,899,591 samples, 0.16%)</title><rect x="27.2286%" y="1669" width="0.1596%" height="15" fill="rgb(244,30,14)" fg:x="7318635543" fg:w="42899591"/><text x="27.4786%" y="1679.50"></text></g><g><title>node_page_state (17,475,379 samples, 0.07%)</title><rect x="27.3232%" y="1653" width="0.0650%" height="15" fill="rgb(249,174,6)" fg:x="7344059755" fg:w="17475379"/><text x="27.5732%" y="1663.50"></text></g><g><title>post_alloc_hook (3,194,542 samples, 0.01%)</title><rect x="27.3917%" y="1669" width="0.0119%" height="15" fill="rgb(235,213,41)" fg:x="7362462142" fg:w="3194542"/><text x="27.6417%" y="1679.50"></text></g><g><title>__rmqueue_pcplist (47,680,940 samples, 0.18%)</title><rect x="27.4750%" y="1637" width="0.1774%" height="15" fill="rgb(213,118,6)" fg:x="7384866357" fg:w="47680940"/><text x="27.7250%" y="1647.50"></text></g><g><title>rmqueue_bulk (34,708,779 samples, 0.13%)</title><rect x="27.5233%" y="1621" width="0.1291%" height="15" fill="rgb(235,44,51)" fg:x="7397838518" fg:w="34708779"/><text x="27.7733%" y="1631.50"></text></g><g><title>_raw_spin_trylock (7,289,352 samples, 0.03%)</title><rect x="27.6524%" y="1637" width="0.0271%" height="15" fill="rgb(217,9,53)" fg:x="7432547297" fg:w="7289352"/><text x="27.9024%" y="1647.50"></text></g><g><title>rmqueue (75,966,080 samples, 0.28%)</title><rect x="27.4036%" y="1669" width="0.2826%" height="15" fill="rgb(237,172,34)" fg:x="7365656684" fg:w="75966080"/><text x="27.6536%" y="1679.50"></text></g><g><title>rmqueue_pcplist (65,855,292 samples, 0.25%)</title><rect x="27.4412%" y="1653" width="0.2450%" height="15" fill="rgb(206,206,11)" fg:x="7375767472" fg:w="65855292"/><text x="27.6912%" y="1663.50"></text></g><g><title>get_page_from_freelist (566,628,455 samples, 2.11%)</title><rect x="25.5865%" y="1685" width="2.1081%" height="15" fill="rgb(214,149,29)" fg:x="6877253432" fg:w="566628455"/><text x="25.8365%" y="1695.50">g..</text></g><g><title>__alloc_pages (598,311,614 samples, 2.23%)</title><rect x="25.4782%" y="1701" width="2.2260%" height="15" fill="rgb(208,123,3)" fg:x="6848154365" fg:w="598311614"/><text x="25.7282%" y="1711.50">_..</text></g><g><title>__cond_resched (2,718,565 samples, 0.01%)</title><rect x="27.7042%" y="1701" width="0.0101%" height="15" fill="rgb(229,126,4)" fg:x="7446465979" fg:w="2718565"/><text x="27.9542%" y="1711.50"></text></g><g><title>filemap_alloc_folio (627,734,695 samples, 2.34%)</title><rect x="25.3884%" y="1749" width="2.3355%" height="15" fill="rgb(222,92,36)" fg:x="6824018542" fg:w="627734695"/><text x="25.6384%" y="1759.50">f..</text></g><g><title>folio_alloc (622,859,679 samples, 2.32%)</title><rect x="25.4066%" y="1733" width="2.3173%" height="15" fill="rgb(216,39,41)" fg:x="6828893558" fg:w="622859679"/><text x="25.6566%" y="1743.50">f..</text></g><g><title>alloc_pages (618,402,705 samples, 2.30%)</title><rect x="25.4231%" y="1717" width="2.3007%" height="15" fill="rgb(253,127,28)" fg:x="6833350532" fg:w="618402705"/><text x="25.6731%" y="1727.50">a..</text></g><g><title>__rcu_read_unlock (3,037,449 samples, 0.01%)</title><rect x="27.7628%" y="1733" width="0.0113%" height="15" fill="rgb(249,152,51)" fg:x="7462218014" fg:w="3037449"/><text x="28.0128%" y="1743.50"></text></g><g><title>xas_load (20,168,461 samples, 0.08%)</title><rect x="27.7741%" y="1733" width="0.0750%" height="15" fill="rgb(209,123,42)" fg:x="7465255463" fg:w="20168461"/><text x="28.0241%" y="1743.50"></text></g><g><title>xas_start (4,961,990 samples, 0.02%)</title><rect x="27.8307%" y="1717" width="0.0185%" height="15" fill="rgb(241,118,22)" fg:x="7480461934" fg:w="4961990"/><text x="28.0807%" y="1727.50"></text></g><g><title>filemap_get_entry (34,000,975 samples, 0.13%)</title><rect x="27.7239%" y="1749" width="0.1265%" height="15" fill="rgb(208,25,7)" fg:x="7451753237" fg:w="34000975"/><text x="27.9739%" y="1759.50"></text></g><g><title>folio_lruvec_lock_irqsave (11,991,449 samples, 0.04%)</title><rect x="27.9136%" y="1717" width="0.0446%" height="15" fill="rgb(243,144,39)" fg:x="7502738617" fg:w="11991449"/><text x="28.1636%" y="1727.50"></text></g><g><title>_raw_spin_lock_irqsave (8,590,742 samples, 0.03%)</title><rect x="27.9262%" y="1701" width="0.0320%" height="15" fill="rgb(250,50,5)" fg:x="7506139324" fg:w="8590742"/><text x="28.1762%" y="1711.50"></text></g><g><title>native_queued_spin_lock_slowpath (4,001,936 samples, 0.01%)</title><rect x="27.9433%" y="1685" width="0.0149%" height="15" fill="rgb(207,67,11)" fg:x="7510728130" fg:w="4001936"/><text x="28.1933%" y="1695.50"></text></g><g><title>__mod_memcg_lruvec_state (18,267,819 samples, 0.07%)</title><rect x="28.0709%" y="1685" width="0.0680%" height="15" fill="rgb(245,204,40)" fg:x="7545033945" fg:w="18267819"/><text x="28.3209%" y="1695.50"></text></g><g><title>cgroup_rstat_updated (10,310,177 samples, 0.04%)</title><rect x="28.1005%" y="1669" width="0.0384%" height="15" fill="rgb(238,228,24)" fg:x="7552991587" fg:w="10310177"/><text x="28.3505%" y="1679.50"></text></g><g><title>__mod_node_page_state (5,852,341 samples, 0.02%)</title><rect x="28.1389%" y="1685" width="0.0218%" height="15" fill="rgb(217,116,22)" fg:x="7563301764" fg:w="5852341"/><text x="28.3889%" y="1695.50"></text></g><g><title>__mod_lruvec_state (28,045,076 samples, 0.10%)</title><rect x="28.0591%" y="1701" width="0.1043%" height="15" fill="rgb(234,98,12)" fg:x="7541858893" fg:w="28045076"/><text x="28.3091%" y="1711.50"></text></g><g><title>__mod_zone_page_state (3,947,632 samples, 0.01%)</title><rect x="28.1675%" y="1701" width="0.0147%" height="15" fill="rgb(242,170,50)" fg:x="7570982641" fg:w="3947632"/><text x="28.4175%" y="1711.50"></text></g><g><title>lru_add_fn (67,658,588 samples, 0.25%)</title><rect x="27.9582%" y="1717" width="0.2517%" height="15" fill="rgb(235,7,5)" fg:x="7514730066" fg:w="67658588"/><text x="28.2082%" y="1727.50"></text></g><g><title>mem_cgroup_update_lru_size (6,014,629 samples, 0.02%)</title><rect x="28.1875%" y="1701" width="0.0224%" height="15" fill="rgb(241,114,28)" fg:x="7576374025" fg:w="6014629"/><text x="28.4375%" y="1711.50"></text></g><g><title>folio_batch_move_lru (95,628,165 samples, 0.36%)</title><rect x="27.8836%" y="1733" width="0.3558%" height="15" fill="rgb(246,112,42)" fg:x="7494685457" fg:w="95628165"/><text x="28.1336%" y="1743.50"></text></g><g><title>release_pages (7,516,554 samples, 0.03%)</title><rect x="28.2114%" y="1717" width="0.0280%" height="15" fill="rgb(248,228,14)" fg:x="7582797068" fg:w="7516554"/><text x="28.4614%" y="1727.50"></text></g><g><title>lru_add_fn (5,855,927 samples, 0.02%)</title><rect x="28.2394%" y="1733" width="0.0218%" height="15" fill="rgb(208,133,18)" fg:x="7590313622" fg:w="5855927"/><text x="28.4894%" y="1743.50"></text></g><g><title>folio_add_lru (111,376,883 samples, 0.41%)</title><rect x="27.8504%" y="1749" width="0.4144%" height="15" fill="rgb(207,35,49)" fg:x="7485754212" fg:w="111376883"/><text x="28.1004%" y="1759.50"></text></g><g><title>inode_to_bdi (3,403,011 samples, 0.01%)</title><rect x="28.2722%" y="1749" width="0.0127%" height="15" fill="rgb(205,68,36)" fg:x="7599131240" fg:w="3403011"/><text x="28.5222%" y="1759.50"></text></g><g><title>__filemap_get_folio (1,056,527,130 samples, 3.93%)</title><rect x="24.3599%" y="1765" width="3.9308%" height="15" fill="rgb(245,62,40)" fg:x="6547562705" fg:w="1056527130"/><text x="24.6099%" y="1775.50">__fi..</text></g><g><title>dequeue_task (4,504,304 samples, 0.02%)</title><rect x="28.3614%" y="1637" width="0.0168%" height="15" fill="rgb(228,27,24)" fg:x="7623122011" fg:w="4504304"/><text x="28.6114%" y="1647.50"></text></g><g><title>dequeue_task_fair (4,504,304 samples, 0.02%)</title><rect x="28.3614%" y="1621" width="0.0168%" height="15" fill="rgb(253,19,12)" fg:x="7623122011" fg:w="4504304"/><text x="28.6114%" y="1631.50"></text></g><g><title>dequeue_entity (4,044,698 samples, 0.02%)</title><rect x="28.3631%" y="1605" width="0.0150%" height="15" fill="rgb(232,28,20)" fg:x="7623581617" fg:w="4044698"/><text x="28.6131%" y="1615.50"></text></g><g><title>newidle_balance (3,218,401 samples, 0.01%)</title><rect x="28.3809%" y="1605" width="0.0120%" height="15" fill="rgb(218,35,51)" fg:x="7628360770" fg:w="3218401"/><text x="28.6309%" y="1615.50"></text></g><g><title>pick_next_task (4,616,054 samples, 0.02%)</title><rect x="28.3796%" y="1637" width="0.0172%" height="15" fill="rgb(212,90,40)" fg:x="7628009301" fg:w="4616054"/><text x="28.6296%" y="1647.50"></text></g><g><title>pick_next_task_fair (4,616,054 samples, 0.02%)</title><rect x="28.3796%" y="1621" width="0.0172%" height="15" fill="rgb(220,172,12)" fg:x="7628009301" fg:w="4616054"/><text x="28.6296%" y="1631.50"></text></g><g><title>__sched_text_start (14,216,299 samples, 0.05%)</title><rect x="28.3553%" y="1653" width="0.0529%" height="15" fill="rgb(226,159,20)" fg:x="7621484917" fg:w="14216299"/><text x="28.6053%" y="1663.50"></text></g><g><title>__wait_on_buffer (17,257,738 samples, 0.06%)</title><rect x="28.3455%" y="1749" width="0.0642%" height="15" fill="rgb(234,205,16)" fg:x="7618837158" fg:w="17257738"/><text x="28.5955%" y="1759.50"></text></g><g><title>out_of_line_wait_on_bit (17,257,738 samples, 0.06%)</title><rect x="28.3455%" y="1733" width="0.0642%" height="15" fill="rgb(207,9,39)" fg:x="7618837158" fg:w="17257738"/><text x="28.5955%" y="1743.50"></text></g><g><title>__wait_on_bit (17,257,738 samples, 0.06%)</title><rect x="28.3455%" y="1717" width="0.0642%" height="15" fill="rgb(249,143,15)" fg:x="7618837158" fg:w="17257738"/><text x="28.5955%" y="1727.50"></text></g><g><title>bit_wait_io (15,144,861 samples, 0.06%)</title><rect x="28.3534%" y="1701" width="0.0563%" height="15" fill="rgb(253,133,29)" fg:x="7620950035" fg:w="15144861"/><text x="28.6034%" y="1711.50"></text></g><g><title>io_schedule (15,144,861 samples, 0.06%)</title><rect x="28.3534%" y="1685" width="0.0563%" height="15" fill="rgb(221,187,0)" fg:x="7620950035" fg:w="15144861"/><text x="28.6034%" y="1695.50"></text></g><g><title>schedule (15,144,861 samples, 0.06%)</title><rect x="28.3534%" y="1669" width="0.0563%" height="15" fill="rgb(205,204,26)" fg:x="7620950035" fg:w="15144861"/><text x="28.6034%" y="1679.50"></text></g><g><title>_raw_spin_lock (4,163,243 samples, 0.02%)</title><rect x="28.5043%" y="1717" width="0.0155%" height="15" fill="rgb(224,68,54)" fg:x="7661526676" fg:w="4163243"/><text x="28.7543%" y="1727.50"></text></g><g><title>clear_page_rep (12,196,694 samples, 0.05%)</title><rect x="28.6967%" y="1605" width="0.0454%" height="15" fill="rgb(209,67,4)" fg:x="7713237601" fg:w="12196694"/><text x="28.9467%" y="1615.50"></text></g><g><title>alloc_pages (15,189,500 samples, 0.06%)</title><rect x="28.6932%" y="1653" width="0.0565%" height="15" fill="rgb(228,229,18)" fg:x="7712287279" fg:w="15189500"/><text x="28.9432%" y="1663.50"></text></g><g><title>__alloc_pages (14,415,643 samples, 0.05%)</title><rect x="28.6961%" y="1637" width="0.0536%" height="15" fill="rgb(231,89,13)" fg:x="7713061136" fg:w="14415643"/><text x="28.9461%" y="1647.50"></text></g><g><title>get_page_from_freelist (14,239,178 samples, 0.05%)</title><rect x="28.6967%" y="1621" width="0.0530%" height="15" fill="rgb(210,182,18)" fg:x="7713237601" fg:w="14239178"/><text x="28.9467%" y="1631.50"></text></g><g><title>allocate_slab (21,890,056 samples, 0.08%)</title><rect x="28.6914%" y="1669" width="0.0814%" height="15" fill="rgb(240,105,2)" fg:x="7711823879" fg:w="21890056"/><text x="28.9414%" y="1679.50"></text></g><g><title>shuffle_freelist (6,121,162 samples, 0.02%)</title><rect x="28.7501%" y="1653" width="0.0228%" height="15" fill="rgb(207,170,50)" fg:x="7727592773" fg:w="6121162"/><text x="29.0001%" y="1663.50"></text></g><g><title>___slab_alloc (27,192,651 samples, 0.10%)</title><rect x="28.6868%" y="1685" width="0.1012%" height="15" fill="rgb(232,133,24)" fg:x="7710562499" fg:w="27192651"/><text x="28.9368%" y="1695.50"></text></g><g><title>__cond_resched (3,459,619 samples, 0.01%)</title><rect x="28.7879%" y="1685" width="0.0129%" height="15" fill="rgb(235,166,27)" fg:x="7737755150" fg:w="3459619"/><text x="29.0379%" y="1695.50"></text></g><g><title>__rcu_read_lock (2,865,618 samples, 0.01%)</title><rect x="28.8008%" y="1685" width="0.0107%" height="15" fill="rgb(209,19,13)" fg:x="7741214769" fg:w="2865618"/><text x="29.0508%" y="1695.50"></text></g><g><title>__get_obj_cgroup_from_memcg (6,734,624 samples, 0.03%)</title><rect x="28.8571%" y="1669" width="0.0251%" height="15" fill="rgb(226,79,39)" fg:x="7756351201" fg:w="6734624"/><text x="29.1071%" y="1679.50"></text></g><g><title>__rcu_read_lock (4,397,439 samples, 0.02%)</title><rect x="28.8822%" y="1669" width="0.0164%" height="15" fill="rgb(222,163,10)" fg:x="7763085825" fg:w="4397439"/><text x="29.1322%" y="1679.50"></text></g><g><title>get_obj_cgroup_from_current (25,781,119 samples, 0.10%)</title><rect x="28.8224%" y="1685" width="0.0959%" height="15" fill="rgb(214,44,19)" fg:x="7747008681" fg:w="25781119"/><text x="29.0724%" y="1695.50"></text></g><g><title>__rcu_read_unlock (5,306,536 samples, 0.02%)</title><rect x="28.8985%" y="1669" width="0.0197%" height="15" fill="rgb(210,217,13)" fg:x="7767483264" fg:w="5306536"/><text x="29.1485%" y="1679.50"></text></g><g><title>__rcu_read_unlock (3,154,123 samples, 0.01%)</title><rect x="28.9967%" y="1669" width="0.0117%" height="15" fill="rgb(237,61,54)" fg:x="7793882981" fg:w="3154123"/><text x="29.2467%" y="1679.50"></text></g><g><title>__kmem_cache_alloc_node (3,868,377 samples, 0.01%)</title><rect x="29.0114%" y="1637" width="0.0144%" height="15" fill="rgb(226,184,24)" fg:x="7797828939" fg:w="3868377"/><text x="29.2614%" y="1647.50"></text></g><g><title>memcg_alloc_slab_cgroups (5,454,396 samples, 0.02%)</title><rect x="29.0085%" y="1669" width="0.0203%" height="15" fill="rgb(223,226,4)" fg:x="7797037104" fg:w="5454396"/><text x="29.2585%" y="1679.50"></text></g><g><title>__kmalloc_node (5,020,074 samples, 0.02%)</title><rect x="29.0101%" y="1653" width="0.0187%" height="15" fill="rgb(210,26,41)" fg:x="7797471426" fg:w="5020074"/><text x="29.2601%" y="1663.50"></text></g><g><title>memcg_slab_post_alloc_hook (41,241,045 samples, 0.15%)</title><rect x="28.9206%" y="1685" width="0.1534%" height="15" fill="rgb(220,221,6)" fg:x="7773414143" fg:w="41241045"/><text x="29.1706%" y="1695.50"></text></g><g><title>mod_objcg_state (12,163,688 samples, 0.05%)</title><rect x="29.0288%" y="1669" width="0.0453%" height="15" fill="rgb(225,89,49)" fg:x="7802491500" fg:w="12163688"/><text x="29.2788%" y="1679.50"></text></g><g><title>kmem_cache_alloc (151,944,149 samples, 0.57%)</title><rect x="28.5650%" y="1701" width="0.5653%" height="15" fill="rgb(218,70,45)" fg:x="7677823689" fg:w="151944149"/><text x="28.8150%" y="1711.50"></text></g><g><title>obj_cgroup_charge (15,112,650 samples, 0.06%)</title><rect x="29.0740%" y="1685" width="0.0562%" height="15" fill="rgb(238,166,21)" fg:x="7814655188" fg:w="15112650"/><text x="29.3240%" y="1695.50"></text></g><g><title>recalc_bh_state (3,665,945 samples, 0.01%)</title><rect x="29.1496%" y="1701" width="0.0136%" height="15" fill="rgb(224,141,44)" fg:x="7834965945" fg:w="3665945"/><text x="29.3996%" y="1711.50"></text></g><g><title>folio_alloc_buffers (173,877,890 samples, 0.65%)</title><rect x="28.5210%" y="1717" width="0.6469%" height="15" fill="rgb(230,12,49)" fg:x="7666002403" fg:w="173877890"/><text x="28.7710%" y="1727.50"></text></g><g><title>create_empty_buffers (204,151,597 samples, 0.76%)</title><rect x="28.4097%" y="1749" width="0.7595%" height="15" fill="rgb(212,174,12)" fg:x="7636094896" fg:w="204151597"/><text x="28.6597%" y="1759.50"></text></g><g><title>folio_create_empty_buffers (201,929,388 samples, 0.75%)</title><rect x="28.4180%" y="1733" width="0.7513%" height="15" fill="rgb(246,67,9)" fg:x="7638317105" fg:w="201929388"/><text x="28.6680%" y="1743.50"></text></g><g><title>_raw_read_lock (3,173,088 samples, 0.01%)</title><rect x="29.3647%" y="1717" width="0.0118%" height="15" fill="rgb(239,35,23)" fg:x="7892784116" fg:w="3173088"/><text x="29.6147%" y="1727.50"></text></g><g><title>ext4_da_get_block_prep (70,212,182 samples, 0.26%)</title><rect x="29.1692%" y="1749" width="0.2612%" height="15" fill="rgb(211,167,0)" fg:x="7840246493" fg:w="70212182"/><text x="29.4192%" y="1759.50"></text></g><g><title>ext4_es_lookup_extent (25,817,696 samples, 0.10%)</title><rect x="29.3344%" y="1733" width="0.0961%" height="15" fill="rgb(225,119,45)" fg:x="7884640979" fg:w="25817696"/><text x="29.5844%" y="1743.50"></text></g><g><title>percpu_counter_add_batch (11,560,005 samples, 0.04%)</title><rect x="29.3874%" y="1717" width="0.0430%" height="15" fill="rgb(210,162,6)" fg:x="7898898670" fg:w="11560005"/><text x="29.6374%" y="1727.50"></text></g><g><title>bio_alloc_bioset (3,622,086 samples, 0.01%)</title><rect x="29.4392%" y="1685" width="0.0135%" height="15" fill="rgb(208,118,35)" fg:x="7912796619" fg:w="3622086"/><text x="29.6892%" y="1695.50"></text></g><g><title>ttwu_do_activate (3,311,506 samples, 0.01%)</title><rect x="29.5080%" y="1445" width="0.0123%" height="15" fill="rgb(239,4,53)" fg:x="7931299641" fg:w="3311506"/><text x="29.7580%" y="1455.50"></text></g><g><title>__queue_work (10,077,916 samples, 0.04%)</title><rect x="29.4880%" y="1525" width="0.0375%" height="15" fill="rgb(213,130,21)" fg:x="7925934459" fg:w="10077916"/><text x="29.7380%" y="1535.50"></text></g><g><title>kick_pool (8,099,719 samples, 0.03%)</title><rect x="29.4954%" y="1509" width="0.0301%" height="15" fill="rgb(235,148,0)" fg:x="7927912656" fg:w="8099719"/><text x="29.7454%" y="1519.50"></text></g><g><title>wake_up_process (8,099,719 samples, 0.03%)</title><rect x="29.4954%" y="1493" width="0.0301%" height="15" fill="rgb(244,224,18)" fg:x="7927912656" fg:w="8099719"/><text x="29.7454%" y="1503.50"></text></g><g><title>try_to_wake_up (7,614,457 samples, 0.03%)</title><rect x="29.4972%" y="1477" width="0.0283%" height="15" fill="rgb(211,214,4)" fg:x="7928397918" fg:w="7614457"/><text x="29.7472%" y="1487.50"></text></g><g><title>ttwu_queue (5,271,231 samples, 0.02%)</title><rect x="29.5059%" y="1461" width="0.0196%" height="15" fill="rgb(206,119,25)" fg:x="7930741144" fg:w="5271231"/><text x="29.7559%" y="1471.50"></text></g><g><title>__queue_delayed_work (10,489,748 samples, 0.04%)</title><rect x="29.4880%" y="1541" width="0.0390%" height="15" fill="rgb(243,93,47)" fg:x="7925934459" fg:w="10489748"/><text x="29.7380%" y="1551.50"></text></g><g><title>blk_mq_delay_run_hw_queue (11,354,365 samples, 0.04%)</title><rect x="29.4880%" y="1589" width="0.0422%" height="15" fill="rgb(224,194,6)" fg:x="7925934459" fg:w="11354365"/><text x="29.7380%" y="1599.50"></text></g><g><title>kblockd_mod_delayed_work_on (11,354,365 samples, 0.04%)</title><rect x="29.4880%" y="1573" width="0.0422%" height="15" fill="rgb(243,229,6)" fg:x="7925934459" fg:w="11354365"/><text x="29.7380%" y="1583.50"></text></g><g><title>mod_delayed_work_on (11,354,365 samples, 0.04%)</title><rect x="29.4880%" y="1557" width="0.0422%" height="15" fill="rgb(207,23,50)" fg:x="7925934459" fg:w="11354365"/><text x="29.7380%" y="1567.50"></text></g><g><title>blk_mq_run_hw_queue (13,769,485 samples, 0.05%)</title><rect x="29.4851%" y="1605" width="0.0512%" height="15" fill="rgb(253,192,32)" fg:x="7925132620" fg:w="13769485"/><text x="29.7351%" y="1615.50"></text></g><g><title>__submit_bio (21,728,935 samples, 0.08%)</title><rect x="29.4594%" y="1637" width="0.0808%" height="15" fill="rgb(213,21,6)" fg:x="7918250273" fg:w="21728935"/><text x="29.7094%" y="1647.50"></text></g><g><title>blk_mq_submit_bio (21,433,670 samples, 0.08%)</title><rect x="29.4605%" y="1621" width="0.0797%" height="15" fill="rgb(243,151,13)" fg:x="7918545538" fg:w="21433670"/><text x="29.7105%" y="1631.50"></text></g><g><title>submit_bio_noacct (24,195,864 samples, 0.09%)</title><rect x="29.4568%" y="1669" width="0.0900%" height="15" fill="rgb(233,165,41)" fg:x="7917541938" fg:w="24195864"/><text x="29.7068%" y="1679.50"></text></g><g><title>submit_bio_noacct_nocheck (24,195,864 samples, 0.09%)</title><rect x="29.4568%" y="1653" width="0.0900%" height="15" fill="rgb(246,176,45)" fg:x="7917541938" fg:w="24195864"/><text x="29.7068%" y="1663.50"></text></g><g><title>submit_bh_wbc (30,496,751 samples, 0.11%)</title><rect x="29.4356%" y="1701" width="0.1135%" height="15" fill="rgb(217,170,52)" fg:x="7911845473" fg:w="30496751"/><text x="29.6856%" y="1711.50"></text></g><g><title>submit_bio (25,567,601 samples, 0.10%)</title><rect x="29.4540%" y="1685" width="0.0951%" height="15" fill="rgb(214,203,54)" fg:x="7916774623" fg:w="25567601"/><text x="29.7040%" y="1695.50"></text></g><g><title>submit_bh (31,446,536 samples, 0.12%)</title><rect x="29.4322%" y="1717" width="0.1170%" height="15" fill="rgb(248,215,49)" fg:x="7910929570" fg:w="31446536"/><text x="29.6822%" y="1727.50"></text></g><g><title>ext4_read_bh_lock (32,453,742 samples, 0.12%)</title><rect x="29.4305%" y="1749" width="0.1207%" height="15" fill="rgb(208,46,10)" fg:x="7910458675" fg:w="32453742"/><text x="29.6805%" y="1759.50"></text></g><g><title>ext4_read_bh_nowait (32,453,742 samples, 0.12%)</title><rect x="29.4305%" y="1733" width="0.1207%" height="15" fill="rgb(254,5,31)" fg:x="7910458675" fg:w="32453742"/><text x="29.6805%" y="1743.50"></text></g><g><title>ext4_block_write_begin (339,523,476 samples, 1.26%)</title><rect x="28.2906%" y="1765" width="1.2632%" height="15" fill="rgb(222,104,33)" fg:x="7604089835" fg:w="339523476"/><text x="28.5406%" y="1775.50"></text></g><g><title>folio_add_lru (4,851,937 samples, 0.02%)</title><rect x="29.5695%" y="1765" width="0.0181%" height="15" fill="rgb(248,49,16)" fg:x="7947818223" fg:w="4851937"/><text x="29.8195%" y="1775.50"></text></g><g><title>ext4_da_write_begin (1,426,649,005 samples, 5.31%)</title><rect x="24.2917%" y="1781" width="5.3078%" height="15" fill="rgb(232,198,41)" fg:x="6529240299" fg:w="1426649005"/><text x="24.5417%" y="1791.50">ext4_d..</text></g><g><title>xas_load (13,122,421 samples, 0.05%)</title><rect x="29.8037%" y="1669" width="0.0488%" height="15" fill="rgb(214,125,3)" fg:x="8010770013" fg:w="13122421"/><text x="30.0537%" y="1679.50"></text></g><g><title>xas_start (4,053,068 samples, 0.02%)</title><rect x="29.8374%" y="1653" width="0.0151%" height="15" fill="rgb(229,220,28)" fg:x="8019839366" fg:w="4053068"/><text x="30.0874%" y="1663.50"></text></g><g><title>__xa_set_mark (23,453,828 samples, 0.09%)</title><rect x="29.7964%" y="1685" width="0.0873%" height="15" fill="rgb(222,64,37)" fg:x="8008823552" fg:w="23453828"/><text x="30.0464%" y="1695.50"></text></g><g><title>xas_set_mark (8,384,946 samples, 0.03%)</title><rect x="29.8525%" y="1669" width="0.0312%" height="15" fill="rgb(249,184,13)" fg:x="8023892434" fg:w="8384946"/><text x="30.1025%" y="1679.50"></text></g><g><title>_raw_spin_lock_irqsave (6,220,711 samples, 0.02%)</title><rect x="29.8837%" y="1685" width="0.0231%" height="15" fill="rgb(252,176,6)" fg:x="8032277380" fg:w="6220711"/><text x="30.1337%" y="1695.50"></text></g><g><title>_raw_spin_unlock_irqrestore (3,402,929 samples, 0.01%)</title><rect x="29.9068%" y="1685" width="0.0127%" height="15" fill="rgb(228,153,7)" fg:x="8038498091" fg:w="3402929"/><text x="30.1568%" y="1695.50"></text></g><g><title>__mod_memcg_lruvec_state (6,285,801 samples, 0.02%)</title><rect x="29.9748%" y="1653" width="0.0234%" height="15" fill="rgb(242,193,5)" fg:x="8056756039" fg:w="6285801"/><text x="30.2248%" y="1663.50"></text></g><g><title>__mod_node_page_state (3,194,196 samples, 0.01%)</title><rect x="29.9981%" y="1653" width="0.0119%" height="15" fill="rgb(232,140,9)" fg:x="8063041840" fg:w="3194196"/><text x="30.2481%" y="1663.50"></text></g><g><title>__mod_lruvec_page_state (13,843,248 samples, 0.05%)</title><rect x="29.9612%" y="1669" width="0.0515%" height="15" fill="rgb(213,222,16)" fg:x="8053125021" fg:w="13843248"/><text x="30.2112%" y="1679.50"></text></g><g><title>__mod_node_page_state (3,518,195 samples, 0.01%)</title><rect x="30.0139%" y="1669" width="0.0131%" height="15" fill="rgb(222,75,50)" fg:x="8067282128" fg:w="3518195"/><text x="30.2639%" y="1679.50"></text></g><g><title>mem_cgroup_track_foreign_dirty_slowpath (5,480,551 samples, 0.02%)</title><rect x="30.0412%" y="1669" width="0.0204%" height="15" fill="rgb(205,180,2)" fg:x="8074608070" fg:w="5480551"/><text x="30.2912%" y="1679.50"></text></g><g><title>folio_account_dirtied (57,169,574 samples, 0.21%)</title><rect x="29.9195%" y="1685" width="0.2127%" height="15" fill="rgb(216,34,7)" fg:x="8041901020" fg:w="57169574"/><text x="30.1695%" y="1695.50"></text></g><g><title>percpu_counter_add_batch (18,981,973 samples, 0.07%)</title><rect x="30.0616%" y="1669" width="0.0706%" height="15" fill="rgb(253,16,32)" fg:x="8080088621" fg:w="18981973"/><text x="30.3116%" y="1679.50"></text></g><g><title>_raw_spin_lock (4,450,369 samples, 0.02%)</title><rect x="30.1156%" y="1653" width="0.0166%" height="15" fill="rgb(208,97,28)" fg:x="8094620225" fg:w="4450369"/><text x="30.3656%" y="1663.50"></text></g><g><title>__folio_mark_dirty (93,144,275 samples, 0.35%)</title><rect x="29.7907%" y="1701" width="0.3465%" height="15" fill="rgb(225,92,11)" fg:x="8007277311" fg:w="93144275"/><text x="30.0407%" y="1711.50"></text></g><g><title>__mark_inode_dirty (3,340,630 samples, 0.01%)</title><rect x="30.1372%" y="1701" width="0.0124%" height="15" fill="rgb(243,38,12)" fg:x="8100421586" fg:w="3340630"/><text x="30.3872%" y="1711.50"></text></g><g><title>block_write_end (133,290,942 samples, 0.50%)</title><rect x="29.6790%" y="1749" width="0.4959%" height="15" fill="rgb(208,139,16)" fg:x="7977270914" fg:w="133290942"/><text x="29.9290%" y="1759.50"></text></g><g><title>__block_commit_write (130,819,942 samples, 0.49%)</title><rect x="29.6882%" y="1733" width="0.4867%" height="15" fill="rgb(227,24,9)" fg:x="7979741914" fg:w="130819942"/><text x="29.9382%" y="1743.50"></text></g><g><title>mark_buffer_dirty (117,578,573 samples, 0.44%)</title><rect x="29.7375%" y="1717" width="0.4374%" height="15" fill="rgb(206,62,11)" fg:x="7992983283" fg:w="117578573"/><text x="29.9875%" y="1727.50"></text></g><g><title>folio_memcg_unlock (3,581,607 samples, 0.01%)</title><rect x="30.1616%" y="1701" width="0.0133%" height="15" fill="rgb(228,134,27)" fg:x="8106980249" fg:w="3581607"/><text x="30.4116%" y="1711.50"></text></g><g><title>folio_unlock (3,437,921 samples, 0.01%)</title><rect x="30.1749%" y="1749" width="0.0128%" height="15" fill="rgb(205,55,33)" fg:x="8110561856" fg:w="3437921"/><text x="30.4249%" y="1759.50"></text></g><g><title>ext4_da_do_write_end (156,631,671 samples, 0.58%)</title><rect x="29.6270%" y="1765" width="0.5827%" height="15" fill="rgb(243,75,43)" fg:x="7963277696" fg:w="156631671"/><text x="29.8770%" y="1775.50"></text></g><g><title>unlock_page (5,909,590 samples, 0.02%)</title><rect x="30.1877%" y="1749" width="0.0220%" height="15" fill="rgb(223,27,42)" fg:x="8113999777" fg:w="5909590"/><text x="30.4377%" y="1759.50"></text></g><g><title>folio_unlock (5,909,590 samples, 0.02%)</title><rect x="30.1877%" y="1733" width="0.0220%" height="15" fill="rgb(232,189,33)" fg:x="8113999777" fg:w="5909590"/><text x="30.4377%" y="1743.50"></text></g><g><title>ext4_da_write_end (165,210,452 samples, 0.61%)</title><rect x="29.5995%" y="1781" width="0.6147%" height="15" fill="rgb(210,9,39)" fg:x="7955889304" fg:w="165210452"/><text x="29.8495%" y="1791.50"></text></g><g><title>fault_in_iov_iter_readable (56,346,676 samples, 0.21%)</title><rect x="30.2141%" y="1781" width="0.2096%" height="15" fill="rgb(242,85,26)" fg:x="8121099756" fg:w="56346676"/><text x="30.4641%" y="1791.50"></text></g><g><title>fault_in_readable (53,599,713 samples, 0.20%)</title><rect x="30.2244%" y="1765" width="0.1994%" height="15" fill="rgb(248,44,4)" fg:x="8123846719" fg:w="53599713"/><text x="30.4744%" y="1775.50"></text></g><g><title>generic_perform_write (1,907,712,620 samples, 7.10%)</title><rect x="23.8514%" y="1797" width="7.0975%" height="15" fill="rgb(250,96,46)" fg:x="6410884565" fg:w="1907712620"/><text x="24.1014%" y="1807.50">generic_pe..</text></g><g><title>rep_movs_alternative (137,867,598 samples, 0.51%)</title><rect x="30.4360%" y="1781" width="0.5129%" height="15" fill="rgb(229,116,26)" fg:x="8180729587" fg:w="137867598"/><text x="30.6860%" y="1791.50"></text></g><g><title>ext4_buffered_write_iter (2,224,185,181 samples, 8.27%)</title><rect x="22.6840%" y="1813" width="8.2750%" height="15" fill="rgb(246,94,34)" fg:x="6097101758" fg:w="2224185181"/><text x="22.9340%" y="1823.50">ext4_buffere..</text></g><g><title>ext4_file_write_iter (2,225,385,433 samples, 8.28%)</title><rect x="22.6809%" y="1829" width="8.2794%" height="15" fill="rgb(251,73,21)" fg:x="6096277048" fg:w="2225385433"/><text x="22.9309%" y="1839.50">ext4_file_wr..</text></g><g><title>__x64_sys_pwrite64 (2,259,909,156 samples, 8.41%)</title><rect x="22.5765%" y="1861" width="8.4079%" height="15" fill="rgb(254,121,25)" fg:x="6068206751" fg:w="2259909156"/><text x="22.8265%" y="1871.50">__x64_sys_pw..</text></g><g><title>vfs_write (2,254,531,778 samples, 8.39%)</title><rect x="22.5965%" y="1845" width="8.3879%" height="15" fill="rgb(215,161,49)" fg:x="6073584129" fg:w="2254531778"/><text x="22.8465%" y="1855.50">vfs_write</text></g><g><title>security_file_permission (6,214,935 samples, 0.02%)</title><rect x="30.9612%" y="1829" width="0.0231%" height="15" fill="rgb(221,43,13)" fg:x="8321900972" fg:w="6214935"/><text x="31.2112%" y="1839.50"></text></g><g><title>apparmor_file_permission (6,214,935 samples, 0.02%)</title><rect x="30.9612%" y="1813" width="0.0231%" height="15" fill="rgb(249,5,37)" fg:x="8321900972" fg:w="6214935"/><text x="31.2112%" y="1823.50"></text></g><g><title>common_file_perm (5,395,579 samples, 0.02%)</title><rect x="30.9643%" y="1797" width="0.0201%" height="15" fill="rgb(226,25,44)" fg:x="8322720328" fg:w="5395579"/><text x="31.2143%" y="1807.50"></text></g><g><title>aa_file_perm (3,228,695 samples, 0.01%)</title><rect x="30.9723%" y="1781" width="0.0120%" height="15" fill="rgb(238,189,16)" fg:x="8324887212" fg:w="3228695"/><text x="31.2223%" y="1791.50"></text></g><g><title>entry_SYSCALL_64 (2,265,188,786 samples, 8.43%)</title><rect x="22.5744%" y="1893" width="8.4275%" height="15" fill="rgb(251,186,8)" fg:x="6067662808" fg:w="2265188786"/><text x="22.8244%" y="1903.50">entry_SYSCAL..</text></g><g><title>do_syscall_64 (2,264,644,843 samples, 8.43%)</title><rect x="22.5765%" y="1877" width="8.4255%" height="15" fill="rgb(254,34,31)" fg:x="6068206751" fg:w="2264644843"/><text x="22.8265%" y="1887.50">do_syscall_64</text></g><g><title>syscall_exit_to_user_mode (4,222,754 samples, 0.02%)</title><rect x="30.9862%" y="1861" width="0.0157%" height="15" fill="rgb(225,215,27)" fg:x="8328628840" fg:w="4222754"/><text x="31.2362%" y="1871.50"></text></g><g><title>exit_to_user_mode_prepare (3,905,302 samples, 0.01%)</title><rect x="30.9874%" y="1845" width="0.0145%" height="15" fill="rgb(221,192,48)" fg:x="8328946292" fg:w="3905302"/><text x="31.2374%" y="1855.50"></text></g><g><title>entry_ibpb (6,241,129 samples, 0.02%)</title><rect x="31.0019%" y="1893" width="0.0232%" height="15" fill="rgb(219,137,20)" fg:x="8332851594" fg:w="6241129"/><text x="31.2519%" y="1903.50"></text></g><g><title>__libc_pwrite (2,276,268,600 samples, 8.47%)</title><rect x="22.5657%" y="1909" width="8.4687%" height="15" fill="rgb(219,84,11)" fg:x="6065323518" fg:w="2276268600"/><text x="22.8157%" y="1919.50">__libc_pwrite</text></g><g><title>__memmove_sse2_unaligned_erms (364,805,010 samples, 1.36%)</title><rect x="31.0345%" y="1909" width="1.3572%" height="15" fill="rgb(224,10,23)" fg:x="8341592118" fg:w="364805010"/><text x="31.2845%" y="1919.50"></text></g><g><title>__sanitizer::mem_is_zero (26,734,527 samples, 0.10%)</title><rect x="32.3917%" y="1909" width="0.0995%" height="15" fill="rgb(248,22,39)" fg:x="8706397128" fg:w="26734527"/><text x="32.6417%" y="1919.50"></text></g><g><title>__sanitizer::mem_is_zero (61,937,840 samples, 0.23%)</title><rect x="32.4987%" y="1893" width="0.2304%" height="15" fill="rgb(212,154,20)" fg:x="8735168627" fg:w="61937840"/><text x="32.7487%" y="1903.50"></text></g><g><title>generate_random_string (64,309,833 samples, 0.24%)</title><rect x="32.4912%" y="1909" width="0.2393%" height="15" fill="rgb(236,199,50)" fg:x="8733131655" fg:w="64309833"/><text x="32.7412%" y="1919.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_check_len (4,180,653 samples, 0.02%)</title><rect x="32.7652%" y="1845" width="0.0156%" height="15" fill="rgb(211,9,17)" fg:x="8806774700" fg:w="4180653"/><text x="33.0152%" y="1855.50"></text></g><g><title>split (14,269,337 samples, 0.05%)</title><rect x="32.7388%" y="1893" width="0.0531%" height="15" fill="rgb(243,216,36)" fg:x="8799689842" fg:w="14269337"/><text x="32.9888%" y="1903.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (12,074,215 samples, 0.04%)</title><rect x="32.7470%" y="1877" width="0.0449%" height="15" fill="rgb(250,2,10)" fg:x="8801884964" fg:w="12074215"/><text x="32.9970%" y="1887.50"></text></g><g><title>void std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (10,571,477 samples, 0.04%)</title><rect x="32.7526%" y="1861" width="0.0393%" height="15" fill="rgb(226,50,48)" fg:x="8803387702" fg:w="10571477"/><text x="33.0026%" y="1871.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (4,988,026 samples, 0.02%)</title><rect x="32.7928%" y="1893" width="0.0186%" height="15" fill="rgb(243,81,16)" fg:x="8814203171" fg:w="4988026"/><text x="33.0428%" y="1903.50"></text></g><g><title>get_file_and_offset_and_size_from_key (26,773,089 samples, 0.10%)</title><rect x="32.7304%" y="1909" width="0.0996%" height="15" fill="rgb(250,14,2)" fg:x="8797441488" fg:w="26773089"/><text x="32.9804%" y="1919.50"></text></g><g><title>IOTraceClient::do_insert (2,783,537,735 samples, 10.36%)</title><rect x="22.4874%" y="1925" width="10.3560%" height="15" fill="rgb(233,135,29)" fg:x="6044279257" fg:w="2783537735"/><text x="22.7374%" y="1935.50">IOTraceClient::..</text></g><g><title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_S_equals (3,808,462 samples, 0.01%)</title><rect x="32.9184%" y="1813" width="0.0142%" height="15" fill="rgb(224,64,43)" fg:x="8847956178" fg:w="3808462"/><text x="33.1684%" y="1823.50"></text></g><g><title>__interceptor_memcmp (3,944,955 samples, 0.01%)</title><rect x="32.9336%" y="1781" width="0.0147%" height="15" fill="rgb(238,84,13)" fg:x="8852049312" fg:w="3944955"/><text x="33.1836%" y="1791.50"></text></g><g><title>__gnu_cxx::__enable_if&lt;std::__is_char&lt;char&gt;::__value, bool&gt;::__type std::operator==&lt;char&gt; (4,939,145 samples, 0.02%)</title><rect x="32.9325%" y="1797" width="0.0184%" height="15" fill="rgb(253,48,26)" fg:x="8851764640" fg:w="4939145"/><text x="33.1825%" y="1807.50"></text></g><g><title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (10,818,331 samples, 0.04%)</title><rect x="32.9145%" y="1829" width="0.0402%" height="15" fill="rgb(205,223,31)" fg:x="8846909984" fg:w="10818331"/><text x="33.1645%" y="1839.50"></text></g><g><title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (5,963,675 samples, 0.02%)</title><rect x="32.9325%" y="1813" width="0.0222%" height="15" fill="rgb(221,41,32)" fg:x="8851764640" fg:w="5963675"/><text x="33.1825%" y="1823.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (17,054,453 samples, 0.06%)</title><rect x="32.8927%" y="1861" width="0.0635%" height="15" fill="rgb(213,158,31)" fg:x="8841068646" fg:w="17054453"/><text x="33.1427%" y="1871.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (17,054,453 samples, 0.06%)</title><rect x="32.8927%" y="1845" width="0.0635%" height="15" fill="rgb(245,126,43)" fg:x="8841068646" fg:w="17054453"/><text x="33.1427%" y="1855.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (22,704,912 samples, 0.08%)</title><rect x="32.8852%" y="1877" width="0.0845%" height="15" fill="rgb(227,7,22)" fg:x="8839030735" fg:w="22704912"/><text x="33.1352%" y="1887.50"></text></g><g><title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (3,612,548 samples, 0.01%)</title><rect x="32.9562%" y="1861" width="0.0134%" height="15" fill="rgb(252,90,44)" fg:x="8858123099" fg:w="3612548"/><text x="33.2062%" y="1871.50"></text></g><g><title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; &gt; &gt;::find (23,863,230 samples, 0.09%)</title><rect x="32.8852%" y="1893" width="0.0888%" height="15" fill="rgb(253,91,0)" fg:x="8839030735" fg:w="23863230"/><text x="33.1352%" y="1903.50"></text></g><g><title>FileDescriptorCache::get_file_descriptor (32,461,214 samples, 0.12%)</title><rect x="32.8608%" y="1909" width="0.1208%" height="15" fill="rgb(252,175,49)" fg:x="8832482070" fg:w="32461214"/><text x="33.1108%" y="1919.50"></text></g><g><title>__fdget (6,100,803 samples, 0.02%)</title><rect x="33.0168%" y="1845" width="0.0227%" height="15" fill="rgb(246,150,1)" fg:x="8874399705" fg:w="6100803"/><text x="33.2668%" y="1855.50"></text></g><g><title>__fget_files (5,274,263 samples, 0.02%)</title><rect x="33.0198%" y="1829" width="0.0196%" height="15" fill="rgb(241,192,25)" fg:x="8875226245" fg:w="5274263"/><text x="33.2698%" y="1839.50"></text></g><g><title>dget_parent (2,787,678 samples, 0.01%)</title><rect x="33.0444%" y="1813" width="0.0104%" height="15" fill="rgb(239,187,11)" fg:x="8881841424" fg:w="2787678"/><text x="33.2944%" y="1823.50"></text></g><g><title>__fsnotify_parent (4,058,414 samples, 0.02%)</title><rect x="33.0428%" y="1829" width="0.0151%" height="15" fill="rgb(218,202,51)" fg:x="8881402011" fg:w="4058414"/><text x="33.2928%" y="1839.50"></text></g><g><title>_copy_to_iter (31,699,922 samples, 0.12%)</title><rect x="33.2003%" y="1765" width="0.1179%" height="15" fill="rgb(225,176,8)" fg:x="8923735491" fg:w="31699922"/><text x="33.4503%" y="1775.50"></text></g><g><title>copy_page_to_iter (711,756,307 samples, 2.65%)</title><rect x="33.1772%" y="1781" width="2.6481%" height="15" fill="rgb(219,122,41)" fg:x="8917519931" fg:w="711756307"/><text x="33.4272%" y="1791.50">co..</text></g><g><title>rep_movs_alternative (672,873,048 samples, 2.50%)</title><rect x="33.3218%" y="1765" width="2.5034%" height="15" fill="rgb(248,140,20)" fg:x="8956403190" fg:w="672873048"/><text x="33.5718%" y="1775.50">re..</text></g><g><title>__xas_next (3,232,909 samples, 0.01%)</title><rect x="35.9723%" y="1749" width="0.0120%" height="15" fill="rgb(245,41,37)" fg:x="9668808451" fg:w="3232909"/><text x="36.2223%" y="1759.50"></text></g><g><title>filemap_get_read_batch (47,849,769 samples, 0.18%)</title><rect x="35.8401%" y="1765" width="0.1780%" height="15" fill="rgb(235,82,39)" fg:x="9633265003" fg:w="47849769"/><text x="36.0901%" y="1775.50"></text></g><g><title>xas_load (9,073,412 samples, 0.03%)</title><rect x="35.9843%" y="1749" width="0.0338%" height="15" fill="rgb(230,108,42)" fg:x="9672041360" fg:w="9073412"/><text x="36.2343%" y="1759.50"></text></g><g><title>xas_start (3,765,700 samples, 0.01%)</title><rect x="36.0041%" y="1733" width="0.0140%" height="15" fill="rgb(215,150,50)" fg:x="9677349072" fg:w="3765700"/><text x="36.2541%" y="1743.50"></text></g><g><title>update_curr (3,357,952 samples, 0.01%)</title><rect x="36.0968%" y="1653" width="0.0125%" height="15" fill="rgb(233,212,5)" fg:x="9702281463" fg:w="3357952"/><text x="36.3468%" y="1663.50"></text></g><g><title>dequeue_entity (18,607,072 samples, 0.07%)</title><rect x="36.0679%" y="1669" width="0.0692%" height="15" fill="rgb(245,80,22)" fg:x="9694511809" fg:w="18607072"/><text x="36.3179%" y="1679.50"></text></g><g><title>update_load_avg (7,479,466 samples, 0.03%)</title><rect x="36.1093%" y="1653" width="0.0278%" height="15" fill="rgb(238,129,16)" fg:x="9705639415" fg:w="7479466"/><text x="36.3593%" y="1663.50"></text></g><g><title>update_cfs_rq_load_avg (2,903,441 samples, 0.01%)</title><rect x="36.1264%" y="1637" width="0.0108%" height="15" fill="rgb(240,19,0)" fg:x="9710215440" fg:w="2903441"/><text x="36.3764%" y="1647.50"></text></g><g><title>__update_load_avg_cfs_rq (2,903,441 samples, 0.01%)</title><rect x="36.1264%" y="1621" width="0.0108%" height="15" fill="rgb(232,42,35)" fg:x="9710215440" fg:w="2903441"/><text x="36.3764%" y="1631.50"></text></g><g><title>dequeue_task_fair (22,541,005 samples, 0.08%)</title><rect x="36.0562%" y="1685" width="0.0839%" height="15" fill="rgb(223,130,24)" fg:x="9691363086" fg:w="22541005"/><text x="36.3062%" y="1695.50"></text></g><g><title>dequeue_task (22,821,204 samples, 0.08%)</title><rect x="36.0562%" y="1701" width="0.0849%" height="15" fill="rgb(237,16,22)" fg:x="9691363086" fg:w="22821204"/><text x="36.3062%" y="1711.50"></text></g><g><title>find_busiest_group (2,718,266 samples, 0.01%)</title><rect x="36.1677%" y="1637" width="0.0101%" height="15" fill="rgb(248,192,20)" fg:x="9721330892" fg:w="2718266"/><text x="36.4177%" y="1647.50"></text></g><g><title>load_balance (5,361,200 samples, 0.02%)</title><rect x="36.1617%" y="1653" width="0.0199%" height="15" fill="rgb(233,167,2)" fg:x="9719724981" fg:w="5361200"/><text x="36.4117%" y="1663.50"></text></g><g><title>pick_next_task_fair (9,820,280 samples, 0.04%)</title><rect x="36.1484%" y="1685" width="0.0365%" height="15" fill="rgb(252,71,44)" fg:x="9716130245" fg:w="9820280"/><text x="36.3984%" y="1695.50"></text></g><g><title>newidle_balance (9,155,177 samples, 0.03%)</title><rect x="36.1508%" y="1669" width="0.0341%" height="15" fill="rgb(238,37,47)" fg:x="9716795348" fg:w="9155177"/><text x="36.4008%" y="1679.50"></text></g><g><title>pick_next_task (12,734,141 samples, 0.05%)</title><rect x="36.1448%" y="1701" width="0.0474%" height="15" fill="rgb(214,202,54)" fg:x="9715165138" fg:w="12734141"/><text x="36.3948%" y="1711.50"></text></g><g><title>psi_task_switch (2,723,893 samples, 0.01%)</title><rect x="36.1956%" y="1701" width="0.0101%" height="15" fill="rgb(254,165,40)" fg:x="9728838521" fg:w="2723893"/><text x="36.4456%" y="1711.50"></text></g><g><title>folio_wait_bit_common (54,602,699 samples, 0.20%)</title><rect x="36.0196%" y="1765" width="0.2031%" height="15" fill="rgb(246,173,38)" fg:x="9681512273" fg:w="54602699"/><text x="36.2696%" y="1775.50"></text></g><g><title>io_schedule (50,314,606 samples, 0.19%)</title><rect x="36.0355%" y="1749" width="0.1872%" height="15" fill="rgb(215,3,27)" fg:x="9685800366" fg:w="50314606"/><text x="36.2855%" y="1759.50"></text></g><g><title>schedule (50,314,606 samples, 0.19%)</title><rect x="36.0355%" y="1733" width="0.1872%" height="15" fill="rgb(239,169,51)" fg:x="9685800366" fg:w="50314606"/><text x="36.2855%" y="1743.50"></text></g><g><title>__sched_text_start (49,975,283 samples, 0.19%)</title><rect x="36.0368%" y="1717" width="0.1859%" height="15" fill="rgb(212,5,25)" fg:x="9686139689" fg:w="49975283"/><text x="36.2868%" y="1727.50"></text></g><g><title>update_rq_clock (4,377,688 samples, 0.02%)</title><rect x="36.2064%" y="1701" width="0.0163%" height="15" fill="rgb(243,45,17)" fg:x="9731737284" fg:w="4377688"/><text x="36.4564%" y="1711.50"></text></g><g><title>update_rq_clock_task (2,757,348 samples, 0.01%)</title><rect x="36.2125%" y="1685" width="0.0103%" height="15" fill="rgb(242,97,9)" fg:x="9733357624" fg:w="2757348"/><text x="36.4625%" y="1695.50"></text></g><g><title>__count_memcg_events (2,833,925 samples, 0.01%)</title><rect x="36.3009%" y="1637" width="0.0105%" height="15" fill="rgb(228,71,31)" fg:x="9757135373" fg:w="2833925"/><text x="36.5509%" y="1647.50"></text></g><g><title>charge_memcg (13,019,982 samples, 0.05%)</title><rect x="36.2869%" y="1653" width="0.0484%" height="15" fill="rgb(252,184,16)" fg:x="9753362476" fg:w="13019982"/><text x="36.5369%" y="1663.50"></text></g><g><title>try_charge_memcg (3,812,057 samples, 0.01%)</title><rect x="36.3211%" y="1637" width="0.0142%" height="15" fill="rgb(236,169,46)" fg:x="9762570401" fg:w="3812057"/><text x="36.5711%" y="1647.50"></text></g><g><title>__mem_cgroup_charge (23,679,337 samples, 0.09%)</title><rect x="36.2753%" y="1669" width="0.0881%" height="15" fill="rgb(207,17,47)" fg:x="9750260125" fg:w="23679337"/><text x="36.5253%" y="1679.50"></text></g><g><title>get_mem_cgroup_from_mm (7,557,004 samples, 0.03%)</title><rect x="36.3353%" y="1653" width="0.0281%" height="15" fill="rgb(206,201,28)" fg:x="9766382458" fg:w="7557004"/><text x="36.5853%" y="1663.50"></text></g><g><title>__mod_memcg_lruvec_state (6,372,815 samples, 0.02%)</title><rect x="36.3794%" y="1653" width="0.0237%" height="15" fill="rgb(224,184,23)" fg:x="9778221496" fg:w="6372815"/><text x="36.6294%" y="1663.50"></text></g><g><title>__mod_lruvec_page_state (13,675,341 samples, 0.05%)</title><rect x="36.3634%" y="1669" width="0.0509%" height="15" fill="rgb(208,139,48)" fg:x="9773939462" fg:w="13675341"/><text x="36.6134%" y="1679.50"></text></g><g><title>_raw_spin_unlock_irq (5,084,648 samples, 0.02%)</title><rect x="36.4239%" y="1669" width="0.0189%" height="15" fill="rgb(208,130,10)" fg:x="9790202303" fg:w="5084648"/><text x="36.6739%" y="1679.50"></text></g><g><title>workingset_update_node (2,998,411 samples, 0.01%)</title><rect x="36.4516%" y="1669" width="0.0112%" height="15" fill="rgb(211,213,45)" fg:x="9797639815" fg:w="2998411"/><text x="36.7016%" y="1679.50"></text></g><g><title>xas_load (6,090,749 samples, 0.02%)</title><rect x="36.4710%" y="1653" width="0.0227%" height="15" fill="rgb(235,100,30)" fg:x="9802852750" fg:w="6090749"/><text x="36.7210%" y="1663.50"></text></g><g><title>xa_get_order (8,499,230 samples, 0.03%)</title><rect x="36.4628%" y="1669" width="0.0316%" height="15" fill="rgb(206,144,31)" fg:x="9800638226" fg:w="8499230"/><text x="36.7128%" y="1679.50"></text></g><g><title>xas_find_conflict (7,335,577 samples, 0.03%)</title><rect x="36.4944%" y="1669" width="0.0273%" height="15" fill="rgb(224,200,26)" fg:x="9809137456" fg:w="7335577"/><text x="36.7444%" y="1679.50"></text></g><g><title>kmem_cache_alloc_lru (5,976,592 samples, 0.02%)</title><rect x="36.5775%" y="1637" width="0.0222%" height="15" fill="rgb(247,104,53)" fg:x="9831470552" fg:w="5976592"/><text x="36.8275%" y="1647.50"></text></g><g><title>memcg_slab_pre_alloc_hook (3,563,554 samples, 0.01%)</title><rect x="36.5865%" y="1621" width="0.0133%" height="15" fill="rgb(220,14,17)" fg:x="9833883590" fg:w="3563554"/><text x="36.8365%" y="1631.50"></text></g><g><title>__filemap_add_folio (95,720,803 samples, 0.36%)</title><rect x="36.2458%" y="1685" width="0.3561%" height="15" fill="rgb(230,140,40)" fg:x="9742324580" fg:w="95720803"/><text x="36.4958%" y="1695.50"></text></g><g><title>xas_store (19,886,076 samples, 0.07%)</title><rect x="36.5280%" y="1669" width="0.0740%" height="15" fill="rgb(229,2,41)" fg:x="9818159307" fg:w="19886076"/><text x="36.7780%" y="1679.50"></text></g><g><title>xas_create (9,807,121 samples, 0.04%)</title><rect x="36.5655%" y="1653" width="0.0365%" height="15" fill="rgb(232,89,16)" fg:x="9828238262" fg:w="9807121"/><text x="36.8155%" y="1663.50"></text></g><g><title>folio_lruvec_lock_irqsave (5,321,691 samples, 0.02%)</title><rect x="36.6302%" y="1653" width="0.0198%" height="15" fill="rgb(247,59,52)" fg:x="9845630225" fg:w="5321691"/><text x="36.8802%" y="1663.50"></text></g><g><title>_raw_spin_lock_irqsave (3,824,498 samples, 0.01%)</title><rect x="36.6357%" y="1637" width="0.0142%" height="15" fill="rgb(226,110,21)" fg:x="9847127418" fg:w="3824498"/><text x="36.8857%" y="1647.50"></text></g><g><title>__mod_memcg_lruvec_state (7,299,629 samples, 0.03%)</title><rect x="36.6778%" y="1621" width="0.0272%" height="15" fill="rgb(224,176,43)" fg:x="9858446410" fg:w="7299629"/><text x="36.9278%" y="1631.50"></text></g><g><title>cgroup_rstat_updated (3,794,984 samples, 0.01%)</title><rect x="36.6909%" y="1605" width="0.0141%" height="15" fill="rgb(221,73,6)" fg:x="9861951055" fg:w="3794984"/><text x="36.9409%" y="1615.50"></text></g><g><title>__mod_lruvec_state (10,651,786 samples, 0.04%)</title><rect x="36.6732%" y="1637" width="0.0396%" height="15" fill="rgb(232,78,19)" fg:x="9857191794" fg:w="10651786"/><text x="36.9232%" y="1647.50"></text></g><g><title>lru_add_fn (22,332,317 samples, 0.08%)</title><rect x="36.6512%" y="1653" width="0.0831%" height="15" fill="rgb(233,112,48)" fg:x="9851283735" fg:w="22332317"/><text x="36.9012%" y="1663.50"></text></g><g><title>mem_cgroup_update_lru_size (3,638,663 samples, 0.01%)</title><rect x="36.7207%" y="1637" width="0.0135%" height="15" fill="rgb(243,131,47)" fg:x="9869977389" fg:w="3638663"/><text x="36.9707%" y="1647.50"></text></g><g><title>folio_batch_move_lru (34,271,506 samples, 0.13%)</title><rect x="36.6193%" y="1669" width="0.1275%" height="15" fill="rgb(226,51,1)" fg:x="9842716499" fg:w="34271506"/><text x="36.8693%" y="1679.50"></text></g><g><title>release_pages (3,371,953 samples, 0.01%)</title><rect x="36.7343%" y="1653" width="0.0125%" height="15" fill="rgb(247,58,7)" fg:x="9873616052" fg:w="3371953"/><text x="36.9843%" y="1663.50"></text></g><g><title>folio_add_lru (40,571,190 samples, 0.15%)</title><rect x="36.6036%" y="1685" width="0.1509%" height="15" fill="rgb(209,7,32)" fg:x="9838485800" fg:w="40571190"/><text x="36.8536%" y="1695.50"></text></g><g><title>filemap_add_folio (139,950,492 samples, 0.52%)</title><rect x="36.2413%" y="1701" width="0.5207%" height="15" fill="rgb(209,39,41)" fg:x="9741107016" fg:w="139950492"/><text x="36.4913%" y="1711.50"></text></g><g><title>__cond_resched (4,075,983 samples, 0.02%)</title><rect x="36.8414%" y="1637" width="0.0152%" height="15" fill="rgb(226,182,46)" fg:x="9902418046" fg:w="4075983"/><text x="37.0914%" y="1647.50"></text></g><g><title>__next_zones_zonelist (5,366,202 samples, 0.02%)</title><rect x="36.8566%" y="1637" width="0.0200%" height="15" fill="rgb(230,219,10)" fg:x="9906494029" fg:w="5366202"/><text x="37.1066%" y="1647.50"></text></g><g><title>clear_page_rep (166,595,002 samples, 0.62%)</title><rect x="36.8980%" y="1621" width="0.6198%" height="15" fill="rgb(227,175,30)" fg:x="9917630452" fg:w="166595002"/><text x="37.1480%" y="1631.50"></text></g><g><title>__rmqueue_pcplist (19,360,382 samples, 0.07%)</title><rect x="37.5596%" y="1589" width="0.0720%" height="15" fill="rgb(217,2,50)" fg:x="10095434727" fg:w="19360382"/><text x="37.8096%" y="1599.50"></text></g><g><title>rmqueue_bulk (13,887,114 samples, 0.05%)</title><rect x="37.5799%" y="1573" width="0.0517%" height="15" fill="rgb(229,160,0)" fg:x="10100907995" fg:w="13887114"/><text x="37.8299%" y="1583.50"></text></g><g><title>rmqueue (31,562,405 samples, 0.12%)</title><rect x="37.5271%" y="1621" width="0.1174%" height="15" fill="rgb(207,78,37)" fg:x="10086721824" fg:w="31562405"/><text x="37.7771%" y="1631.50"></text></g><g><title>rmqueue_pcplist (27,131,824 samples, 0.10%)</title><rect x="37.5436%" y="1605" width="0.1009%" height="15" fill="rgb(225,57,0)" fg:x="10091152405" fg:w="27131824"/><text x="37.7936%" y="1615.50"></text></g><g><title>__alloc_pages (224,080,765 samples, 0.83%)</title><rect x="36.8140%" y="1653" width="0.8337%" height="15" fill="rgb(232,154,2)" fg:x="9895049767" fg:w="224080765"/><text x="37.0640%" y="1663.50"></text></g><g><title>get_page_from_freelist (207,270,301 samples, 0.77%)</title><rect x="36.8766%" y="1637" width="0.7711%" height="15" fill="rgb(241,212,25)" fg:x="9911860231" fg:w="207270301"/><text x="37.1266%" y="1647.50"></text></g><g><title>filemap_alloc_folio (239,345,375 samples, 0.89%)</title><rect x="36.7620%" y="1701" width="0.8905%" height="15" fill="rgb(226,69,20)" fg:x="9881057508" fg:w="239345375"/><text x="37.0120%" y="1711.50"></text></g><g><title>folio_alloc (237,155,529 samples, 0.88%)</title><rect x="36.7701%" y="1685" width="0.8823%" height="15" fill="rgb(247,184,54)" fg:x="9883247354" fg:w="237155529"/><text x="37.0201%" y="1695.50"></text></g><g><title>alloc_pages (236,075,332 samples, 0.88%)</title><rect x="36.7741%" y="1669" width="0.8783%" height="15" fill="rgb(210,145,0)" fg:x="9884327551" fg:w="236075332"/><text x="37.0241%" y="1679.50"></text></g><g><title>iommu_dma_alloc_iova (3,160,063 samples, 0.01%)</title><rect x="37.6913%" y="1429" width="0.0118%" height="15" fill="rgb(253,82,12)" fg:x="10130841584" fg:w="3160063"/><text x="37.9413%" y="1439.50"></text></g><g><title>alloc_iova_fast (2,707,674 samples, 0.01%)</title><rect x="37.6930%" y="1413" width="0.0101%" height="15" fill="rgb(245,42,11)" fg:x="10131293973" fg:w="2707674"/><text x="37.9430%" y="1423.50"></text></g><g><title>alloc_iova (2,707,674 samples, 0.01%)</title><rect x="37.6930%" y="1397" width="0.0101%" height="15" fill="rgb(219,147,32)" fg:x="10131293973" fg:w="2707674"/><text x="37.9430%" y="1407.50"></text></g><g><title>amd_iommu_map_pages (16,329,805 samples, 0.06%)</title><rect x="37.7074%" y="1381" width="0.0608%" height="15" fill="rgb(246,12,7)" fg:x="10135165585" fg:w="16329805"/><text x="37.9574%" y="1391.50"></text></g><g><title>iommu_v1_map_pages (16,329,805 samples, 0.06%)</title><rect x="37.7074%" y="1365" width="0.0608%" height="15" fill="rgb(243,50,9)" fg:x="10135165585" fg:w="16329805"/><text x="37.9574%" y="1375.50"></text></g><g><title>iommu_map_sg (18,258,067 samples, 0.07%)</title><rect x="37.7047%" y="1429" width="0.0679%" height="15" fill="rgb(219,149,6)" fg:x="10134449740" fg:w="18258067"/><text x="37.9547%" y="1439.50"></text></g><g><title>__iommu_map (18,258,067 samples, 0.07%)</title><rect x="37.7047%" y="1413" width="0.0679%" height="15" fill="rgb(241,51,42)" fg:x="10134449740" fg:w="18258067"/><text x="37.9547%" y="1423.50"></text></g><g><title>__iommu_map_pages (18,258,067 samples, 0.07%)</title><rect x="37.7047%" y="1397" width="0.0679%" height="15" fill="rgb(226,128,27)" fg:x="10134449740" fg:w="18258067"/><text x="37.9547%" y="1407.50"></text></g><g><title>iommu_dma_map_sg (22,828,619 samples, 0.08%)</title><rect x="37.6902%" y="1445" width="0.0849%" height="15" fill="rgb(244,144,4)" fg:x="10130539368" fg:w="22828619"/><text x="37.9402%" y="1455.50"></text></g><g><title>ata_qc_issue (24,581,174 samples, 0.09%)</title><rect x="37.6844%" y="1493" width="0.0915%" height="15" fill="rgb(221,4,13)" fg:x="10128985238" fg:w="24581174"/><text x="37.9344%" y="1503.50"></text></g><g><title>dma_map_sg_attrs (23,027,044 samples, 0.09%)</title><rect x="37.6902%" y="1477" width="0.0857%" height="15" fill="rgb(208,170,28)" fg:x="10130539368" fg:w="23027044"/><text x="37.9402%" y="1487.50"></text></g><g><title>__dma_map_sg_attrs (23,027,044 samples, 0.09%)</title><rect x="37.6902%" y="1461" width="0.0857%" height="15" fill="rgb(226,131,13)" fg:x="10130539368" fg:w="23027044"/><text x="37.9402%" y="1471.50"></text></g><g><title>__ata_scsi_queuecmd (25,650,291 samples, 0.10%)</title><rect x="37.6844%" y="1509" width="0.0954%" height="15" fill="rgb(215,72,41)" fg:x="10128985238" fg:w="25650291"/><text x="37.9344%" y="1519.50"></text></g><g><title>scsi_dispatch_cmd (27,828,954 samples, 0.10%)</title><rect x="37.6827%" y="1541" width="0.1035%" height="15" fill="rgb(243,108,20)" fg:x="10128538632" fg:w="27828954"/><text x="37.9327%" y="1551.50"></text></g><g><title>ata_scsi_queuecmd (27,382,348 samples, 0.10%)</title><rect x="37.6844%" y="1525" width="0.1019%" height="15" fill="rgb(230,189,17)" fg:x="10128985238" fg:w="27382348"/><text x="37.9344%" y="1535.50"></text></g><g><title>blk_mq_dispatch_rq_list (36,389,909 samples, 0.14%)</title><rect x="37.6642%" y="1573" width="0.1354%" height="15" fill="rgb(220,50,17)" fg:x="10123560508" fg:w="36389909"/><text x="37.9142%" y="1583.50"></text></g><g><title>scsi_queue_rq (36,201,594 samples, 0.13%)</title><rect x="37.6649%" y="1557" width="0.1347%" height="15" fill="rgb(248,152,48)" fg:x="10123748823" fg:w="36201594"/><text x="37.9149%" y="1567.50"></text></g><g><title>sd_init_command (3,582,831 samples, 0.01%)</title><rect x="37.7862%" y="1541" width="0.0133%" height="15" fill="rgb(244,91,11)" fg:x="10156367586" fg:w="3582831"/><text x="38.0362%" y="1551.50"></text></g><g><title>scsi_alloc_sgtables (3,177,388 samples, 0.01%)</title><rect x="37.7878%" y="1525" width="0.0118%" height="15" fill="rgb(220,157,5)" fg:x="10156773029" fg:w="3177388"/><text x="38.0378%" y="1535.50"></text></g><g><title>blk_mq_sched_dispatch_requests (40,364,774 samples, 0.15%)</title><rect x="37.6559%" y="1605" width="0.1502%" height="15" fill="rgb(253,137,8)" fg:x="10121344851" fg:w="40364774"/><text x="37.9059%" y="1615.50"></text></g><g><title>__blk_mq_sched_dispatch_requests (40,364,774 samples, 0.15%)</title><rect x="37.6559%" y="1589" width="0.1502%" height="15" fill="rgb(217,137,51)" fg:x="10121344851" fg:w="40364774"/><text x="37.9059%" y="1599.50"></text></g><g><title>blk_mq_run_hw_queue (41,132,233 samples, 0.15%)</title><rect x="37.6542%" y="1621" width="0.1530%" height="15" fill="rgb(218,209,53)" fg:x="10120878761" fg:w="41132233"/><text x="37.9042%" y="1631.50"></text></g><g><title>blk_finish_plug (42,075,566 samples, 0.16%)</title><rect x="37.6536%" y="1685" width="0.1565%" height="15" fill="rgb(249,137,25)" fg:x="10120706731" fg:w="42075566"/><text x="37.9036%" y="1695.50"></text></g><g><title>__blk_flush_plug (42,075,566 samples, 0.16%)</title><rect x="37.6536%" y="1669" width="0.1565%" height="15" fill="rgb(239,155,26)" fg:x="10120706731" fg:w="42075566"/><text x="37.9036%" y="1679.50"></text></g><g><title>blk_mq_flush_plug_list (42,075,566 samples, 0.16%)</title><rect x="37.6536%" y="1653" width="0.1565%" height="15" fill="rgb(227,85,46)" fg:x="10120706731" fg:w="42075566"/><text x="37.9036%" y="1663.50"></text></g><g><title>blk_mq_dispatch_plug_list (41,903,536 samples, 0.16%)</title><rect x="37.6542%" y="1637" width="0.1559%" height="15" fill="rgb(251,107,43)" fg:x="10120878761" fg:w="41903536"/><text x="37.9042%" y="1647.50"></text></g><g><title>bio_add_folio (8,691,318 samples, 0.03%)</title><rect x="37.8738%" y="1653" width="0.0323%" height="15" fill="rgb(234,170,33)" fg:x="10179900351" fg:w="8691318"/><text x="38.1238%" y="1663.50"></text></g><g><title>bio_add_page (8,239,242 samples, 0.03%)</title><rect x="37.8755%" y="1637" width="0.0307%" height="15" fill="rgb(206,29,35)" fg:x="10180352427" fg:w="8239242"/><text x="38.1255%" y="1647.50"></text></g><g><title>bio_alloc_bioset (3,763,497 samples, 0.01%)</title><rect x="37.9082%" y="1653" width="0.0140%" height="15" fill="rgb(227,138,25)" fg:x="10189151910" fg:w="3763497"/><text x="38.1582%" y="1663.50"></text></g><g><title>fscrypt_mergeable_bio (2,693,158 samples, 0.01%)</title><rect x="37.9284%" y="1653" width="0.0100%" height="15" fill="rgb(249,131,35)" fg:x="10194570779" fg:w="2693158"/><text x="38.1784%" y="1663.50"></text></g><g><title>__submit_bio (6,487,116 samples, 0.02%)</title><rect x="37.9441%" y="1605" width="0.0241%" height="15" fill="rgb(239,6,40)" fg:x="10198806889" fg:w="6487116"/><text x="38.1941%" y="1615.50"></text></g><g><title>blk_mq_submit_bio (6,141,781 samples, 0.02%)</title><rect x="37.9454%" y="1589" width="0.0229%" height="15" fill="rgb(246,136,47)" fg:x="10199152224" fg:w="6141781"/><text x="38.1954%" y="1599.50"></text></g><g><title>submit_bio_noacct (9,063,405 samples, 0.03%)</title><rect x="37.9411%" y="1637" width="0.0337%" height="15" fill="rgb(253,58,26)" fg:x="10198000062" fg:w="9063405"/><text x="38.1911%" y="1647.50"></text></g><g><title>submit_bio_noacct_nocheck (8,256,578 samples, 0.03%)</title><rect x="37.9441%" y="1621" width="0.0307%" height="15" fill="rgb(237,141,10)" fg:x="10198806889" fg:w="8256578"/><text x="38.1941%" y="1631.50"></text></g><g><title>submit_bio (9,928,535 samples, 0.04%)</title><rect x="37.9396%" y="1653" width="0.0369%" height="15" fill="rgb(234,156,12)" fg:x="10197577654" fg:w="9928535"/><text x="38.1896%" y="1663.50"></text></g><g><title>xas_load (8,833,611 samples, 0.03%)</title><rect x="37.9953%" y="1637" width="0.0329%" height="15" fill="rgb(243,224,36)" fg:x="10212568146" fg:w="8833611"/><text x="38.2453%" y="1647.50"></text></g><g><title>ext4_mpage_readpages (57,340,031 samples, 0.21%)</title><rect x="37.8175%" y="1669" width="0.2133%" height="15" fill="rgb(205,229,51)" fg:x="10164755042" fg:w="57340031"/><text x="38.0675%" y="1679.50"></text></g><g><title>xa_load (14,588,884 samples, 0.05%)</title><rect x="37.9765%" y="1653" width="0.0543%" height="15" fill="rgb(223,189,4)" fg:x="10207506189" fg:w="14588884"/><text x="38.2265%" y="1663.50"></text></g><g><title>read_pages (102,514,668 samples, 0.38%)</title><rect x="37.6536%" y="1701" width="0.3814%" height="15" fill="rgb(249,167,54)" fg:x="10120706731" fg:w="102514668"/><text x="37.9036%" y="1711.50"></text></g><g><title>ext4_readahead (59,131,112 samples, 0.22%)</title><rect x="37.8150%" y="1685" width="0.2200%" height="15" fill="rgb(218,34,28)" fg:x="10164090287" fg:w="59131112"/><text x="38.0650%" y="1695.50"></text></g><g><title>page_cache_async_ra (499,480,442 samples, 1.86%)</title><rect x="36.2227%" y="1765" width="1.8583%" height="15" fill="rgb(232,109,42)" fg:x="9736114972" fg:w="499480442"/><text x="36.4727%" y="1775.50">p..</text></g><g><title>ondemand_readahead (499,090,315 samples, 1.86%)</title><rect x="36.2242%" y="1749" width="1.8568%" height="15" fill="rgb(248,214,46)" fg:x="9736505099" fg:w="499090315"/><text x="36.4742%" y="1759.50">o..</text></g><g><title>page_cache_ra_order (499,090,315 samples, 1.86%)</title><rect x="36.2242%" y="1733" width="1.8568%" height="15" fill="rgb(244,216,40)" fg:x="9736505099" fg:w="499090315"/><text x="36.4742%" y="1743.50">p..</text></g><g><title>page_cache_ra_unbounded (499,090,315 samples, 1.86%)</title><rect x="36.2242%" y="1717" width="1.8568%" height="15" fill="rgb(231,226,31)" fg:x="9736505099" fg:w="499090315"/><text x="36.4742%" y="1727.50">p..</text></g><g><title>xa_load (12,230,543 samples, 0.05%)</title><rect x="38.0355%" y="1701" width="0.0455%" height="15" fill="rgb(238,38,43)" fg:x="10223364871" fg:w="12230543"/><text x="38.2855%" y="1711.50"></text></g><g><title>xas_load (10,135,599 samples, 0.04%)</title><rect x="38.0433%" y="1685" width="0.0377%" height="15" fill="rgb(208,88,43)" fg:x="10225459815" fg:w="10135599"/><text x="38.2933%" y="1695.50"></text></g><g><title>charge_memcg (11,122,340 samples, 0.04%)</title><rect x="38.1685%" y="1653" width="0.0414%" height="15" fill="rgb(205,136,37)" fg:x="10259121924" fg:w="11122340"/><text x="38.4185%" y="1663.50"></text></g><g><title>try_charge_memcg (5,036,115 samples, 0.02%)</title><rect x="38.1912%" y="1637" width="0.0187%" height="15" fill="rgb(237,34,14)" fg:x="10265208149" fg:w="5036115"/><text x="38.4412%" y="1647.50"></text></g><g><title>__mem_cgroup_charge (16,847,208 samples, 0.06%)</title><rect x="38.1638%" y="1669" width="0.0627%" height="15" fill="rgb(236,193,44)" fg:x="10257838448" fg:w="16847208"/><text x="38.4138%" y="1679.50"></text></g><g><title>get_mem_cgroup_from_mm (4,441,392 samples, 0.02%)</title><rect x="38.2099%" y="1653" width="0.0165%" height="15" fill="rgb(231,48,10)" fg:x="10270244264" fg:w="4441392"/><text x="38.4599%" y="1663.50"></text></g><g><title>__mod_memcg_lruvec_state (2,874,050 samples, 0.01%)</title><rect x="38.2391%" y="1653" width="0.0107%" height="15" fill="rgb(213,141,34)" fg:x="10278093651" fg:w="2874050"/><text x="38.4891%" y="1663.50"></text></g><g><title>__mod_lruvec_page_state (8,344,348 samples, 0.03%)</title><rect x="38.2264%" y="1669" width="0.0310%" height="15" fill="rgb(249,130,34)" fg:x="10274685656" fg:w="8344348"/><text x="38.4764%" y="1679.50"></text></g><g><title>_raw_spin_lock_irq (7,383,020 samples, 0.03%)</title><rect x="38.2697%" y="1669" width="0.0275%" height="15" fill="rgb(219,42,41)" fg:x="10286299532" fg:w="7383020"/><text x="38.5197%" y="1679.50"></text></g><g><title>native_queued_spin_lock_slowpath (4,581,816 samples, 0.02%)</title><rect x="38.2801%" y="1653" width="0.0170%" height="15" fill="rgb(224,100,54)" fg:x="10289100736" fg:w="4581816"/><text x="38.5301%" y="1663.50"></text></g><g><title>_raw_spin_unlock_irq (3,676,649 samples, 0.01%)</title><rect x="38.2971%" y="1669" width="0.0137%" height="15" fill="rgb(229,200,27)" fg:x="10293682552" fg:w="3676649"/><text x="38.5471%" y="1679.50"></text></g><g><title>workingset_update_node (3,507,829 samples, 0.01%)</title><rect x="38.3118%" y="1669" width="0.0131%" height="15" fill="rgb(217,118,10)" fg:x="10297639919" fg:w="3507829"/><text x="38.5618%" y="1679.50"></text></g><g><title>xas_load (6,488,217 samples, 0.02%)</title><rect x="38.3253%" y="1653" width="0.0241%" height="15" fill="rgb(206,22,3)" fg:x="10301253858" fg:w="6488217"/><text x="38.5753%" y="1663.50"></text></g><g><title>xa_get_order (6,722,124 samples, 0.03%)</title><rect x="38.3249%" y="1669" width="0.0250%" height="15" fill="rgb(232,163,46)" fg:x="10301147748" fg:w="6722124"/><text x="38.5749%" y="1679.50"></text></g><g><title>xas_find_conflict (3,715,518 samples, 0.01%)</title><rect x="38.3517%" y="1669" width="0.0138%" height="15" fill="rgb(206,95,13)" fg:x="10308362623" fg:w="3715518"/><text x="38.6017%" y="1679.50"></text></g><g><title>kmem_cache_alloc_lru (8,154,347 samples, 0.03%)</title><rect x="38.3927%" y="1637" width="0.0303%" height="15" fill="rgb(253,154,18)" fg:x="10319367475" fg:w="8154347"/><text x="38.6427%" y="1647.50"></text></g><g><title>memcg_slab_pre_alloc_hook (4,237,118 samples, 0.02%)</title><rect x="38.4073%" y="1621" width="0.0158%" height="15" fill="rgb(219,32,23)" fg:x="10323284704" fg:w="4237118"/><text x="38.6573%" y="1631.50"></text></g><g><title>__filemap_add_folio (83,580,802 samples, 0.31%)</title><rect x="38.1145%" y="1685" width="0.3110%" height="15" fill="rgb(230,191,45)" fg:x="10244586353" fg:w="83580802"/><text x="38.3645%" y="1695.50"></text></g><g><title>xas_store (15,610,507 samples, 0.06%)</title><rect x="38.3673%" y="1669" width="0.0581%" height="15" fill="rgb(229,64,36)" fg:x="10312556648" fg:w="15610507"/><text x="38.6173%" y="1679.50"></text></g><g><title>xas_create (10,144,537 samples, 0.04%)</title><rect x="38.3877%" y="1653" width="0.0377%" height="15" fill="rgb(205,129,25)" fg:x="10318022618" fg:w="10144537"/><text x="38.6377%" y="1663.50"></text></g><g><title>folio_lruvec_lock_irqsave (5,184,869 samples, 0.02%)</title><rect x="38.4485%" y="1653" width="0.0193%" height="15" fill="rgb(254,112,7)" fg:x="10334383098" fg:w="5184869"/><text x="38.6985%" y="1663.50"></text></g><g><title>_raw_spin_lock_irqsave (3,666,254 samples, 0.01%)</title><rect x="38.4542%" y="1637" width="0.0136%" height="15" fill="rgb(226,53,48)" fg:x="10335901713" fg:w="3666254"/><text x="38.7042%" y="1647.50"></text></g><g><title>__mod_lruvec_state (7,506,687 samples, 0.03%)</title><rect x="38.4858%" y="1637" width="0.0279%" height="15" fill="rgb(214,153,38)" fg:x="10344392324" fg:w="7506687"/><text x="38.7358%" y="1647.50"></text></g><g><title>__mod_node_page_state (3,351,741 samples, 0.01%)</title><rect x="38.5012%" y="1621" width="0.0125%" height="15" fill="rgb(243,101,7)" fg:x="10348547270" fg:w="3351741"/><text x="38.7512%" y="1631.50"></text></g><g><title>lru_add_fn (18,095,817 samples, 0.07%)</title><rect x="38.4678%" y="1653" width="0.0673%" height="15" fill="rgb(240,140,22)" fg:x="10339567967" fg:w="18095817"/><text x="38.7178%" y="1663.50"></text></g><g><title>mem_cgroup_update_lru_size (2,835,668 samples, 0.01%)</title><rect x="38.5246%" y="1637" width="0.0105%" height="15" fill="rgb(235,114,2)" fg:x="10354828116" fg:w="2835668"/><text x="38.7746%" y="1647.50"></text></g><g><title>folio_batch_move_lru (26,613,217 samples, 0.10%)</title><rect x="38.4403%" y="1669" width="0.0990%" height="15" fill="rgb(242,59,12)" fg:x="10332155837" fg:w="26613217"/><text x="38.6903%" y="1679.50"></text></g><g><title>folio_add_lru (32,304,978 samples, 0.12%)</title><rect x="38.4281%" y="1685" width="0.1202%" height="15" fill="rgb(252,134,9)" fg:x="10328890025" fg:w="32304978"/><text x="38.6781%" y="1695.50"></text></g><g><title>filemap_add_folio (119,010,198 samples, 0.44%)</title><rect x="38.1071%" y="1701" width="0.4428%" height="15" fill="rgb(236,4,44)" fg:x="10242608339" fg:w="119010198"/><text x="38.3571%" y="1711.50"></text></g><g><title>__next_zones_zonelist (2,890,756 samples, 0.01%)</title><rect x="38.6066%" y="1637" width="0.0108%" height="15" fill="rgb(254,172,41)" fg:x="10376862308" fg:w="2890756"/><text x="38.8566%" y="1647.50"></text></g><g><title>clear_page_rep (117,996,716 samples, 0.44%)</title><rect x="38.6383%" y="1621" width="0.4390%" height="15" fill="rgb(244,63,20)" fg:x="10385375969" fg:w="117996716"/><text x="38.8883%" y="1631.50"></text></g><g><title>__rmqueue_pcplist (14,559,553 samples, 0.05%)</title><rect x="39.1060%" y="1589" width="0.0542%" height="15" fill="rgb(250,73,31)" fg:x="10511090332" fg:w="14559553"/><text x="39.3560%" y="1599.50"></text></g><g><title>rmqueue_bulk (11,315,983 samples, 0.04%)</title><rect x="39.1180%" y="1573" width="0.0421%" height="15" fill="rgb(241,38,36)" fg:x="10514333902" fg:w="11315983"/><text x="39.3680%" y="1583.50"></text></g><g><title>rmqueue (24,186,471 samples, 0.09%)</title><rect x="39.0831%" y="1621" width="0.0900%" height="15" fill="rgb(245,211,2)" fg:x="10504937875" fg:w="24186471"/><text x="39.3331%" y="1631.50"></text></g><g><title>rmqueue_pcplist (21,271,182 samples, 0.08%)</title><rect x="39.0939%" y="1605" width="0.0791%" height="15" fill="rgb(206,120,28)" fg:x="10507853164" fg:w="21271182"/><text x="39.3439%" y="1615.50"></text></g><g><title>get_page_from_freelist (150,713,491 samples, 0.56%)</title><rect x="38.6173%" y="1637" width="0.5607%" height="15" fill="rgb(211,59,34)" fg:x="10379753064" fg:w="150713491"/><text x="38.8673%" y="1647.50"></text></g><g><title>__alloc_pages (159,511,266 samples, 0.59%)</title><rect x="38.5863%" y="1653" width="0.5935%" height="15" fill="rgb(233,168,5)" fg:x="10371406210" fg:w="159511266"/><text x="38.8363%" y="1663.50"></text></g><g><title>filemap_alloc_folio (169,889,158 samples, 0.63%)</title><rect x="38.5499%" y="1701" width="0.6321%" height="15" fill="rgb(234,33,13)" fg:x="10361618537" fg:w="169889158"/><text x="38.7999%" y="1711.50"></text></g><g><title>folio_alloc (166,106,896 samples, 0.62%)</title><rect x="38.5639%" y="1685" width="0.6180%" height="15" fill="rgb(231,150,26)" fg:x="10365400799" fg:w="166106896"/><text x="38.8139%" y="1695.50"></text></g><g><title>alloc_pages (163,929,258 samples, 0.61%)</title><rect x="38.5720%" y="1669" width="0.6099%" height="15" fill="rgb(217,191,4)" fg:x="10367578437" fg:w="163929258"/><text x="38.8220%" y="1679.50"></text></g><g><title>iommu_dma_alloc_iova (3,974,096 samples, 0.01%)</title><rect x="39.2616%" y="1429" width="0.0148%" height="15" fill="rgb(246,198,38)" fg:x="10552911910" fg:w="3974096"/><text x="39.5116%" y="1439.50"></text></g><g><title>alloc_iova_fast (3,974,096 samples, 0.01%)</title><rect x="39.2616%" y="1413" width="0.0148%" height="15" fill="rgb(245,64,37)" fg:x="10552911910" fg:w="3974096"/><text x="39.5116%" y="1423.50"></text></g><g><title>alloc_iova (3,146,637 samples, 0.01%)</title><rect x="39.2646%" y="1397" width="0.0117%" height="15" fill="rgb(250,30,36)" fg:x="10553739369" fg:w="3146637"/><text x="39.5146%" y="1407.50"></text></g><g><title>iommu_v1_map_pages (9,443,745 samples, 0.04%)</title><rect x="39.2800%" y="1365" width="0.0351%" height="15" fill="rgb(217,86,53)" fg:x="10557868400" fg:w="9443745"/><text x="39.5300%" y="1375.50"></text></g><g><title>amd_iommu_map_pages (9,770,843 samples, 0.04%)</title><rect x="39.2800%" y="1381" width="0.0364%" height="15" fill="rgb(228,157,16)" fg:x="10557868400" fg:w="9770843"/><text x="39.5300%" y="1391.50"></text></g><g><title>iommu_map_sg (10,817,265 samples, 0.04%)</title><rect x="39.2772%" y="1429" width="0.0402%" height="15" fill="rgb(217,59,31)" fg:x="10557108632" fg:w="10817265"/><text x="39.5272%" y="1439.50"></text></g><g><title>__iommu_map (10,258,053 samples, 0.04%)</title><rect x="39.2793%" y="1413" width="0.0382%" height="15" fill="rgb(237,138,41)" fg:x="10557667844" fg:w="10258053"/><text x="39.5293%" y="1423.50"></text></g><g><title>__iommu_map_pages (10,057,497 samples, 0.04%)</title><rect x="39.2800%" y="1397" width="0.0374%" height="15" fill="rgb(227,91,49)" fg:x="10557868400" fg:w="10057497"/><text x="39.5300%" y="1407.50"></text></g><g><title>ata_qc_issue (20,938,699 samples, 0.08%)</title><rect x="39.2402%" y="1493" width="0.0779%" height="15" fill="rgb(247,21,44)" fg:x="10547176318" fg:w="20938699"/><text x="39.4902%" y="1503.50"></text></g><g><title>dma_map_sg_attrs (16,755,857 samples, 0.06%)</title><rect x="39.2558%" y="1477" width="0.0623%" height="15" fill="rgb(219,210,51)" fg:x="10551359160" fg:w="16755857"/><text x="39.5058%" y="1487.50"></text></g><g><title>__dma_map_sg_attrs (16,755,857 samples, 0.06%)</title><rect x="39.2558%" y="1461" width="0.0623%" height="15" fill="rgb(209,140,6)" fg:x="10551359160" fg:w="16755857"/><text x="39.5058%" y="1471.50"></text></g><g><title>iommu_dma_map_sg (16,473,665 samples, 0.06%)</title><rect x="39.2568%" y="1445" width="0.0613%" height="15" fill="rgb(221,188,24)" fg:x="10551641352" fg:w="16473665"/><text x="39.5068%" y="1455.50"></text></g><g><title>__ata_scsi_queuecmd (23,762,159 samples, 0.09%)</title><rect x="39.2355%" y="1509" width="0.0884%" height="15" fill="rgb(232,154,20)" fg:x="10545901476" fg:w="23762159"/><text x="39.4855%" y="1519.50"></text></g><g><title>_raw_spin_lock_irqsave (2,698,727 samples, 0.01%)</title><rect x="39.3239%" y="1509" width="0.0100%" height="15" fill="rgb(244,137,50)" fg:x="10569663635" fg:w="2698727"/><text x="39.5739%" y="1519.50"></text></g><g><title>scsi_dispatch_cmd (29,145,535 samples, 0.11%)</title><rect x="39.2319%" y="1541" width="0.1084%" height="15" fill="rgb(225,185,43)" fg:x="10544946604" fg:w="29145535"/><text x="39.4819%" y="1551.50"></text></g><g><title>ata_scsi_queuecmd (28,384,309 samples, 0.11%)</title><rect x="39.2348%" y="1525" width="0.1056%" height="15" fill="rgb(213,205,38)" fg:x="10545707830" fg:w="28384309"/><text x="39.4848%" y="1535.50"></text></g><g><title>blk_mq_dispatch_rq_list (39,876,242 samples, 0.15%)</title><rect x="39.2065%" y="1573" width="0.1484%" height="15" fill="rgb(236,73,12)" fg:x="10538099654" fg:w="39876242"/><text x="39.4565%" y="1583.50"></text></g><g><title>scsi_queue_rq (38,435,690 samples, 0.14%)</title><rect x="39.2118%" y="1557" width="0.1430%" height="15" fill="rgb(235,219,13)" fg:x="10539540206" fg:w="38435690"/><text x="39.4618%" y="1567.50"></text></g><g><title>sd_init_command (3,883,757 samples, 0.01%)</title><rect x="39.3404%" y="1541" width="0.0144%" height="15" fill="rgb(218,59,36)" fg:x="10574092139" fg:w="3883757"/><text x="39.5904%" y="1551.50"></text></g><g><title>scsi_alloc_sgtables (3,322,403 samples, 0.01%)</title><rect x="39.3425%" y="1525" width="0.0124%" height="15" fill="rgb(205,110,39)" fg:x="10574653493" fg:w="3322403"/><text x="39.5925%" y="1535.50"></text></g><g><title>blk_mq_sched_dispatch_requests (46,696,478 samples, 0.17%)</title><rect x="39.1961%" y="1605" width="0.1737%" height="15" fill="rgb(218,206,42)" fg:x="10535305846" fg:w="46696478"/><text x="39.4461%" y="1615.50"></text></g><g><title>__blk_mq_sched_dispatch_requests (45,954,890 samples, 0.17%)</title><rect x="39.1988%" y="1589" width="0.1710%" height="15" fill="rgb(248,125,24)" fg:x="10536047434" fg:w="45954890"/><text x="39.4488%" y="1599.50"></text></g><g><title>blk_mq_run_hw_queue (51,097,129 samples, 0.19%)</title><rect x="39.1882%" y="1621" width="0.1901%" height="15" fill="rgb(242,28,27)" fg:x="10533197489" fg:w="51097129"/><text x="39.4382%" y="1631.50"></text></g><g><title>blk_finish_plug (53,923,038 samples, 0.20%)</title><rect x="39.1840%" y="1685" width="0.2006%" height="15" fill="rgb(216,228,15)" fg:x="10532051814" fg:w="53923038"/><text x="39.4340%" y="1695.50"></text></g><g><title>__blk_flush_plug (53,923,038 samples, 0.20%)</title><rect x="39.1840%" y="1669" width="0.2006%" height="15" fill="rgb(235,116,46)" fg:x="10532051814" fg:w="53923038"/><text x="39.4340%" y="1679.50"></text></g><g><title>blk_mq_flush_plug_list (53,507,547 samples, 0.20%)</title><rect x="39.1855%" y="1653" width="0.1991%" height="15" fill="rgb(224,18,32)" fg:x="10532467305" fg:w="53507547"/><text x="39.4355%" y="1663.50"></text></g><g><title>blk_mq_dispatch_plug_list (53,063,431 samples, 0.20%)</title><rect x="39.1872%" y="1637" width="0.1974%" height="15" fill="rgb(252,5,12)" fg:x="10532911421" fg:w="53063431"/><text x="39.4372%" y="1647.50"></text></g><g><title>bio_add_folio (2,688,484 samples, 0.01%)</title><rect x="39.4318%" y="1653" width="0.0100%" height="15" fill="rgb(251,36,5)" fg:x="10598669808" fg:w="2688484"/><text x="39.6818%" y="1663.50"></text></g><g><title>bio_alloc_bioset (4,245,431 samples, 0.02%)</title><rect x="39.4418%" y="1653" width="0.0158%" height="15" fill="rgb(217,53,14)" fg:x="10601358292" fg:w="4245431"/><text x="39.6918%" y="1663.50"></text></g><g><title>ext4_map_blocks (5,368,023 samples, 0.02%)</title><rect x="39.4606%" y="1653" width="0.0200%" height="15" fill="rgb(215,86,45)" fg:x="10606414770" fg:w="5368023"/><text x="39.7106%" y="1663.50"></text></g><g><title>ext4_inode_block_valid (2,769,783 samples, 0.01%)</title><rect x="39.4703%" y="1637" width="0.0103%" height="15" fill="rgb(242,169,11)" fg:x="10609013010" fg:w="2769783"/><text x="39.7203%" y="1647.50"></text></g><g><title>blk_mq_get_tag (2,884,562 samples, 0.01%)</title><rect x="39.5055%" y="1557" width="0.0107%" height="15" fill="rgb(211,213,45)" fg:x="10618469475" fg:w="2884562"/><text x="39.7555%" y="1567.50"></text></g><g><title>__blk_mq_alloc_requests (5,995,382 samples, 0.02%)</title><rect x="39.5019%" y="1573" width="0.0223%" height="15" fill="rgb(205,88,11)" fg:x="10617502262" fg:w="5995382"/><text x="39.7519%" y="1583.50"></text></g><g><title>blk_mq_sched_bio_merge (3,172,555 samples, 0.01%)</title><rect x="39.5325%" y="1573" width="0.0118%" height="15" fill="rgb(252,69,26)" fg:x="10625734009" fg:w="3172555"/><text x="39.7825%" y="1583.50"></text></g><g><title>blk_mq_submit_bio (15,771,726 samples, 0.06%)</title><rect x="39.4942%" y="1589" width="0.0587%" height="15" fill="rgb(246,123,37)" fg:x="10615440605" fg:w="15771726"/><text x="39.7442%" y="1599.50"></text></g><g><title>__submit_bio (18,106,809 samples, 0.07%)</title><rect x="39.4896%" y="1605" width="0.0674%" height="15" fill="rgb(212,205,5)" fg:x="10614196592" fg:w="18106809"/><text x="39.7396%" y="1615.50"></text></g><g><title>submit_bio (21,530,100 samples, 0.08%)</title><rect x="39.4826%" y="1653" width="0.0801%" height="15" fill="rgb(253,148,0)" fg:x="10612326268" fg:w="21530100"/><text x="39.7326%" y="1663.50"></text></g><g><title>submit_bio_noacct (21,530,100 samples, 0.08%)</title><rect x="39.4826%" y="1637" width="0.0801%" height="15" fill="rgb(239,22,4)" fg:x="10612326268" fg:w="21530100"/><text x="39.7326%" y="1647.50"></text></g><g><title>submit_bio_noacct_nocheck (19,659,776 samples, 0.07%)</title><rect x="39.4896%" y="1621" width="0.0731%" height="15" fill="rgb(226,26,53)" fg:x="10614196592" fg:w="19659776"/><text x="39.7396%" y="1631.50"></text></g><g><title>ext4_mpage_readpages (53,666,914 samples, 0.20%)</title><rect x="39.3879%" y="1669" width="0.1997%" height="15" fill="rgb(225,229,45)" fg:x="10586862838" fg:w="53666914"/><text x="39.6379%" y="1679.50"></text></g><g><title>xa_load (6,673,384 samples, 0.02%)</title><rect x="39.5627%" y="1653" width="0.0248%" height="15" fill="rgb(220,60,37)" fg:x="10633856368" fg:w="6673384"/><text x="39.8127%" y="1663.50"></text></g><g><title>xas_load (5,009,743 samples, 0.02%)</title><rect x="39.5689%" y="1637" width="0.0186%" height="15" fill="rgb(217,180,35)" fg:x="10635520009" fg:w="5009743"/><text x="39.8189%" y="1647.50"></text></g><g><title>read_pages (109,338,309 samples, 0.41%)</title><rect x="39.1824%" y="1701" width="0.4068%" height="15" fill="rgb(229,7,53)" fg:x="10531637360" fg:w="109338309"/><text x="39.4324%" y="1711.50"></text></g><g><title>ext4_readahead (54,630,743 samples, 0.20%)</title><rect x="39.3860%" y="1685" width="0.2033%" height="15" fill="rgb(254,137,3)" fg:x="10586344926" fg:w="54630743"/><text x="39.6360%" y="1695.50"></text></g><g><title>xas_load (6,165,987 samples, 0.02%)</title><rect x="39.5937%" y="1685" width="0.0229%" height="15" fill="rgb(215,140,41)" fg:x="10642187458" fg:w="6165987"/><text x="39.8437%" y="1695.50"></text></g><g><title>xa_load (8,337,740 samples, 0.03%)</title><rect x="39.5892%" y="1701" width="0.0310%" height="15" fill="rgb(250,80,15)" fg:x="10640975669" fg:w="8337740"/><text x="39.8392%" y="1711.50"></text></g><g><title>page_cache_ra_unbounded (411,287,646 samples, 1.53%)</title><rect x="38.0914%" y="1717" width="1.5302%" height="15" fill="rgb(252,191,6)" fg:x="10238397246" fg:w="411287646"/><text x="38.3414%" y="1727.50"></text></g><g><title>do_page_cache_ra (411,588,395 samples, 1.53%)</title><rect x="38.0914%" y="1733" width="1.5313%" height="15" fill="rgb(246,217,18)" fg:x="10238397246" fg:w="411588395"/><text x="38.3414%" y="1743.50"></text></g><g><title>charge_memcg (6,213,955 samples, 0.02%)</title><rect x="39.6430%" y="1653" width="0.0231%" height="15" fill="rgb(223,93,7)" fg:x="10655445446" fg:w="6213955"/><text x="39.8930%" y="1663.50"></text></g><g><title>__mem_cgroup_charge (8,177,669 samples, 0.03%)</title><rect x="39.6422%" y="1669" width="0.0304%" height="15" fill="rgb(225,55,52)" fg:x="10655225509" fg:w="8177669"/><text x="39.8922%" y="1679.50"></text></g><g><title>xas_find_conflict (3,631,276 samples, 0.01%)</title><rect x="39.7178%" y="1669" width="0.0135%" height="15" fill="rgb(240,31,24)" fg:x="10675552430" fg:w="3631276"/><text x="39.9678%" y="1679.50"></text></g><g><title>__filemap_add_folio (34,021,167 samples, 0.13%)</title><rect x="39.6297%" y="1685" width="0.1266%" height="15" fill="rgb(205,56,52)" fg:x="10651871104" fg:w="34021167"/><text x="39.8797%" y="1695.50"></text></g><g><title>xas_store (6,295,891 samples, 0.02%)</title><rect x="39.7329%" y="1669" width="0.0234%" height="15" fill="rgb(246,146,12)" fg:x="10679596380" fg:w="6295891"/><text x="39.9829%" y="1679.50"></text></g><g><title>__mod_lruvec_state (5,331,812 samples, 0.02%)</title><rect x="39.7869%" y="1637" width="0.0198%" height="15" fill="rgb(239,84,36)" fg:x="10694120963" fg:w="5331812"/><text x="40.0369%" y="1647.50"></text></g><g><title>lru_add_fn (10,572,806 samples, 0.04%)</title><rect x="39.7732%" y="1653" width="0.0393%" height="15" fill="rgb(207,41,40)" fg:x="10690426548" fg:w="10572806"/><text x="40.0232%" y="1663.50"></text></g><g><title>folio_batch_move_lru (14,843,567 samples, 0.06%)</title><rect x="39.7613%" y="1669" width="0.0552%" height="15" fill="rgb(241,179,25)" fg:x="10687231127" fg:w="14843567"/><text x="40.0113%" y="1679.50"></text></g><g><title>folio_add_lru (17,970,193 samples, 0.07%)</title><rect x="39.7563%" y="1685" width="0.0669%" height="15" fill="rgb(210,0,34)" fg:x="10685892271" fg:w="17970193"/><text x="40.0063%" y="1695.50"></text></g><g><title>filemap_add_folio (52,943,420 samples, 0.20%)</title><rect x="39.6297%" y="1701" width="0.1970%" height="15" fill="rgb(225,217,29)" fg:x="10651871104" fg:w="52943420"/><text x="39.8797%" y="1711.50"></text></g><g><title>clear_page_rep (70,763,120 samples, 0.26%)</title><rect x="39.8834%" y="1621" width="0.2633%" height="15" fill="rgb(216,191,38)" fg:x="10720052922" fg:w="70763120"/><text x="40.1334%" y="1631.50"></text></g><g><title>__rmqueue_pcplist (5,236,130 samples, 0.02%)</title><rect x="40.1696%" y="1589" width="0.0195%" height="15" fill="rgb(232,140,52)" fg:x="10796963535" fg:w="5236130"/><text x="40.4196%" y="1599.50"></text></g><g><title>rmqueue_bulk (4,574,836 samples, 0.02%)</title><rect x="40.1720%" y="1573" width="0.0170%" height="15" fill="rgb(223,158,51)" fg:x="10797624829" fg:w="4574836"/><text x="40.4220%" y="1583.50"></text></g><g><title>rmqueue (9,842,614 samples, 0.04%)</title><rect x="40.1543%" y="1621" width="0.0366%" height="15" fill="rgb(235,29,51)" fg:x="10792873393" fg:w="9842614"/><text x="40.4043%" y="1631.50"></text></g><g><title>rmqueue_pcplist (8,427,684 samples, 0.03%)</title><rect x="40.1596%" y="1605" width="0.0314%" height="15" fill="rgb(215,181,18)" fg:x="10794288323" fg:w="8427684"/><text x="40.4096%" y="1615.50"></text></g><g><title>__alloc_pages (94,017,578 samples, 0.35%)</title><rect x="39.8442%" y="1653" width="0.3498%" height="15" fill="rgb(227,125,34)" fg:x="10709506723" fg:w="94017578"/><text x="40.0942%" y="1663.50"></text></g><g><title>get_page_from_freelist (87,478,523 samples, 0.33%)</title><rect x="39.8685%" y="1637" width="0.3255%" height="15" fill="rgb(230,197,49)" fg:x="10716045778" fg:w="87478523"/><text x="40.1185%" y="1647.50"></text></g><g><title>filemap_alloc_folio (99,582,099 samples, 0.37%)</title><rect x="39.8267%" y="1701" width="0.3705%" height="15" fill="rgb(239,141,16)" fg:x="10704814524" fg:w="99582099"/><text x="40.0767%" y="1711.50"></text></g><g><title>folio_alloc (98,128,302 samples, 0.37%)</title><rect x="39.8321%" y="1685" width="0.3651%" height="15" fill="rgb(225,105,43)" fg:x="10706268321" fg:w="98128302"/><text x="40.0821%" y="1695.50"></text></g><g><title>alloc_pages (98,128,302 samples, 0.37%)</title><rect x="39.8321%" y="1669" width="0.3651%" height="15" fill="rgb(214,131,14)" fg:x="10706268321" fg:w="98128302"/><text x="40.0821%" y="1679.50"></text></g><g><title>amd_iommu_map_pages (4,228,216 samples, 0.02%)</title><rect x="40.2235%" y="1381" width="0.0157%" height="15" fill="rgb(229,177,11)" fg:x="10811468003" fg:w="4228216"/><text x="40.4735%" y="1391.50"></text></g><g><title>iommu_v1_map_pages (3,672,731 samples, 0.01%)</title><rect x="40.2256%" y="1365" width="0.0137%" height="15" fill="rgb(231,180,14)" fg:x="10812023488" fg:w="3672731"/><text x="40.4756%" y="1375.50"></text></g><g><title>__iommu_map_pages (4,994,155 samples, 0.02%)</title><rect x="40.2217%" y="1397" width="0.0186%" height="15" fill="rgb(232,88,2)" fg:x="10810979564" fg:w="4994155"/><text x="40.4717%" y="1407.50"></text></g><g><title>iommu_map_sg (5,380,988 samples, 0.02%)</title><rect x="40.2217%" y="1429" width="0.0200%" height="15" fill="rgb(205,220,8)" fg:x="10810979564" fg:w="5380988"/><text x="40.4717%" y="1439.50"></text></g><g><title>__iommu_map (5,380,988 samples, 0.02%)</title><rect x="40.2217%" y="1413" width="0.0200%" height="15" fill="rgb(225,23,53)" fg:x="10810979564" fg:w="5380988"/><text x="40.4717%" y="1423.50"></text></g><g><title>ata_qc_issue (8,677,348 samples, 0.03%)</title><rect x="40.2116%" y="1493" width="0.0323%" height="15" fill="rgb(213,62,29)" fg:x="10808260947" fg:w="8677348"/><text x="40.4616%" y="1503.50"></text></g><g><title>dma_map_sg_attrs (8,362,603 samples, 0.03%)</title><rect x="40.2128%" y="1477" width="0.0311%" height="15" fill="rgb(227,75,7)" fg:x="10808575692" fg:w="8362603"/><text x="40.4628%" y="1487.50"></text></g><g><title>__dma_map_sg_attrs (8,362,603 samples, 0.03%)</title><rect x="40.2128%" y="1461" width="0.0311%" height="15" fill="rgb(207,105,14)" fg:x="10808575692" fg:w="8362603"/><text x="40.4628%" y="1471.50"></text></g><g><title>iommu_dma_map_sg (7,758,840 samples, 0.03%)</title><rect x="40.2150%" y="1445" width="0.0289%" height="15" fill="rgb(245,62,29)" fg:x="10809179455" fg:w="7758840"/><text x="40.4650%" y="1455.50"></text></g><g><title>__ata_scsi_queuecmd (9,838,003 samples, 0.04%)</title><rect x="40.2083%" y="1509" width="0.0366%" height="15" fill="rgb(236,202,4)" fg:x="10807369849" fg:w="9838003"/><text x="40.4583%" y="1519.50"></text></g><g><title>scsi_dispatch_cmd (11,688,119 samples, 0.04%)</title><rect x="40.2083%" y="1541" width="0.0435%" height="15" fill="rgb(250,67,1)" fg:x="10807369849" fg:w="11688119"/><text x="40.4583%" y="1551.50"></text></g><g><title>ata_scsi_queuecmd (11,688,119 samples, 0.04%)</title><rect x="40.2083%" y="1525" width="0.0435%" height="15" fill="rgb(253,115,44)" fg:x="10807369849" fg:w="11688119"/><text x="40.4583%" y="1535.50"></text></g><g><title>blk_mq_dispatch_rq_list (15,065,069 samples, 0.06%)</title><rect x="40.2019%" y="1573" width="0.0560%" height="15" fill="rgb(251,139,18)" fg:x="10805655759" fg:w="15065069"/><text x="40.4519%" y="1583.50"></text></g><g><title>scsi_queue_rq (14,737,424 samples, 0.05%)</title><rect x="40.2031%" y="1557" width="0.0548%" height="15" fill="rgb(218,22,32)" fg:x="10805983404" fg:w="14737424"/><text x="40.4531%" y="1567.50"></text></g><g><title>blk_mq_sched_dispatch_requests (15,758,436 samples, 0.06%)</title><rect x="40.2008%" y="1605" width="0.0586%" height="15" fill="rgb(243,53,5)" fg:x="10805373404" fg:w="15758436"/><text x="40.4508%" y="1615.50"></text></g><g><title>__blk_mq_sched_dispatch_requests (15,758,436 samples, 0.06%)</title><rect x="40.2008%" y="1589" width="0.0586%" height="15" fill="rgb(227,56,16)" fg:x="10805373404" fg:w="15758436"/><text x="40.4508%" y="1599.50"></text></g><g><title>blk_finish_plug (16,806,436 samples, 0.06%)</title><rect x="40.1988%" y="1685" width="0.0625%" height="15" fill="rgb(245,53,0)" fg:x="10804835616" fg:w="16806436"/><text x="40.4488%" y="1695.50"></text></g><g><title>__blk_flush_plug (16,806,436 samples, 0.06%)</title><rect x="40.1988%" y="1669" width="0.0625%" height="15" fill="rgb(216,170,35)" fg:x="10804835616" fg:w="16806436"/><text x="40.4488%" y="1679.50"></text></g><g><title>blk_mq_flush_plug_list (16,806,436 samples, 0.06%)</title><rect x="40.1988%" y="1653" width="0.0625%" height="15" fill="rgb(211,200,8)" fg:x="10804835616" fg:w="16806436"/><text x="40.4488%" y="1663.50"></text></g><g><title>blk_mq_dispatch_plug_list (16,519,946 samples, 0.06%)</title><rect x="40.1999%" y="1637" width="0.0615%" height="15" fill="rgb(228,204,44)" fg:x="10805122106" fg:w="16519946"/><text x="40.4499%" y="1647.50"></text></g><g><title>blk_mq_run_hw_queue (16,519,946 samples, 0.06%)</title><rect x="40.1999%" y="1621" width="0.0615%" height="15" fill="rgb(214,121,17)" fg:x="10805122106" fg:w="16519946"/><text x="40.4499%" y="1631.50"></text></g><g><title>blk_mq_submit_bio (5,236,439 samples, 0.02%)</title><rect x="40.3140%" y="1589" width="0.0195%" height="15" fill="rgb(233,64,38)" fg:x="10835796852" fg:w="5236439"/><text x="40.5640%" y="1599.50"></text></g><g><title>__submit_bio (5,749,962 samples, 0.02%)</title><rect x="40.3133%" y="1605" width="0.0214%" height="15" fill="rgb(253,54,19)" fg:x="10835587784" fg:w="5749962"/><text x="40.5633%" y="1615.50"></text></g><g><title>submit_bio (6,636,811 samples, 0.02%)</title><rect x="40.3113%" y="1653" width="0.0247%" height="15" fill="rgb(253,94,18)" fg:x="10835067527" fg:w="6636811"/><text x="40.5613%" y="1663.50"></text></g><g><title>submit_bio_noacct (6,636,811 samples, 0.02%)</title><rect x="40.3113%" y="1637" width="0.0247%" height="15" fill="rgb(227,57,52)" fg:x="10835067527" fg:w="6636811"/><text x="40.5613%" y="1647.50"></text></g><g><title>submit_bio_noacct_nocheck (6,636,811 samples, 0.02%)</title><rect x="40.3113%" y="1621" width="0.0247%" height="15" fill="rgb(230,228,50)" fg:x="10835067527" fg:w="6636811"/><text x="40.5613%" y="1631.50"></text></g><g><title>xas_load (2,847,147 samples, 0.01%)</title><rect x="40.3419%" y="1637" width="0.0106%" height="15" fill="rgb(217,205,27)" fg:x="10843292925" fg:w="2847147"/><text x="40.5919%" y="1647.50"></text></g><g><title>ext4_mpage_readpages (24,293,211 samples, 0.09%)</title><rect x="40.2628%" y="1669" width="0.0904%" height="15" fill="rgb(252,71,50)" fg:x="10822018458" fg:w="24293211"/><text x="40.5128%" y="1679.50"></text></g><g><title>xa_load (4,607,331 samples, 0.02%)</title><rect x="40.3360%" y="1653" width="0.0171%" height="15" fill="rgb(209,86,4)" fg:x="10841704338" fg:w="4607331"/><text x="40.5860%" y="1663.50"></text></g><g><title>read_pages (41,885,597 samples, 0.16%)</title><rect x="40.1988%" y="1701" width="0.1558%" height="15" fill="rgb(229,94,0)" fg:x="10804835616" fg:w="41885597"/><text x="40.4488%" y="1711.50"></text></g><g><title>ext4_readahead (25,079,161 samples, 0.09%)</title><rect x="40.2614%" y="1685" width="0.0933%" height="15" fill="rgb(252,223,21)" fg:x="10821642052" fg:w="25079161"/><text x="40.5114%" y="1695.50"></text></g><g><title>xas_load (3,255,806 samples, 0.01%)</title><rect x="40.3600%" y="1685" width="0.0121%" height="15" fill="rgb(230,210,4)" fg:x="10848145835" fg:w="3255806"/><text x="40.6100%" y="1695.50"></text></g><g><title>xa_load (5,970,678 samples, 0.02%)</title><rect x="40.3547%" y="1701" width="0.0222%" height="15" fill="rgb(240,149,38)" fg:x="10846721213" fg:w="5970678"/><text x="40.6047%" y="1711.50"></text></g><g><title>page_cache_ra_order (202,920,400 samples, 0.75%)</title><rect x="39.6234%" y="1733" width="0.7550%" height="15" fill="rgb(254,105,20)" fg:x="10650158929" fg:w="202920400"/><text x="39.8734%" y="1743.50"></text></g><g><title>page_cache_ra_unbounded (202,543,368 samples, 0.75%)</title><rect x="39.6248%" y="1717" width="0.7536%" height="15" fill="rgb(253,87,46)" fg:x="10650535961" fg:w="202543368"/><text x="39.8748%" y="1727.50"></text></g><g><title>page_cache_sync_ra (618,510,699 samples, 2.30%)</title><rect x="38.0810%" y="1765" width="2.3011%" height="15" fill="rgb(253,116,33)" fg:x="10235595414" fg:w="618510699"/><text x="38.3310%" y="1775.50">p..</text></g><g><title>ondemand_readahead (616,760,859 samples, 2.29%)</title><rect x="38.0875%" y="1749" width="2.2946%" height="15" fill="rgb(229,198,5)" fg:x="10237345254" fg:w="616760859"/><text x="38.3375%" y="1759.50">o..</text></g><g><title>filemap_get_pages (1,225,315,978 samples, 4.56%)</title><rect x="35.8252%" y="1781" width="4.5587%" height="15" fill="rgb(242,38,37)" fg:x="9629276238" fg:w="1225315978"/><text x="36.0752%" y="1791.50">filem..</text></g><g><title>__count_memcg_events (2,755,935 samples, 0.01%)</title><rect x="40.4802%" y="1717" width="0.0103%" height="15" fill="rgb(242,69,53)" fg:x="10880455856" fg:w="2755935"/><text x="40.7302%" y="1727.50"></text></g><g><title>__mod_memcg_lruvec_state (4,825,766 samples, 0.02%)</title><rect x="40.4904%" y="1701" width="0.0180%" height="15" fill="rgb(249,80,16)" fg:x="10883211791" fg:w="4825766"/><text x="40.7404%" y="1711.50"></text></g><g><title>__mod_lruvec_state (6,896,802 samples, 0.03%)</title><rect x="40.4904%" y="1717" width="0.0257%" height="15" fill="rgb(206,128,11)" fg:x="10883211791" fg:w="6896802"/><text x="40.7404%" y="1727.50"></text></g><g><title>folio_activate_fn (23,209,768 samples, 0.09%)</title><rect x="40.4498%" y="1733" width="0.0864%" height="15" fill="rgb(212,35,20)" fg:x="10872296162" fg:w="23209768"/><text x="40.6998%" y="1743.50"></text></g><g><title>mem_cgroup_update_lru_size (2,748,912 samples, 0.01%)</title><rect x="40.5259%" y="1717" width="0.0102%" height="15" fill="rgb(236,79,13)" fg:x="10892757018" fg:w="2748912"/><text x="40.7759%" y="1727.50"></text></g><g><title>folio_activate (32,384,461 samples, 0.12%)</title><rect x="40.4355%" y="1765" width="0.1205%" height="15" fill="rgb(233,123,3)" fg:x="10868448686" fg:w="32384461"/><text x="40.6855%" y="1775.50"></text></g><g><title>folio_batch_move_lru (31,655,923 samples, 0.12%)</title><rect x="40.4382%" y="1749" width="0.1178%" height="15" fill="rgb(214,93,52)" fg:x="10869177224" fg:w="31655923"/><text x="40.6882%" y="1759.50"></text></g><g><title>release_pages (2,939,078 samples, 0.01%)</title><rect x="40.5451%" y="1733" width="0.0109%" height="15" fill="rgb(251,37,40)" fg:x="10897894069" fg:w="2939078"/><text x="40.7951%" y="1743.50"></text></g><g><title>folio_mark_accessed (60,461,209 samples, 0.22%)</title><rect x="40.3840%" y="1781" width="0.2249%" height="15" fill="rgb(227,80,54)" fg:x="10854592216" fg:w="60461209"/><text x="40.6340%" y="1791.50"></text></g><g><title>workingset_activation (13,475,951 samples, 0.05%)</title><rect x="40.5588%" y="1765" width="0.0501%" height="15" fill="rgb(254,48,11)" fg:x="10901577474" fg:w="13475951"/><text x="40.8088%" y="1775.50"></text></g><g><title>filemap_read (2,032,898,075 samples, 7.56%)</title><rect x="33.0618%" y="1797" width="7.5633%" height="15" fill="rgb(235,193,26)" fg:x="8886517477" fg:w="2032898075"/><text x="33.3118%" y="1807.50">filemap_re..</text></g><g><title>touch_atime (4,013,008 samples, 0.01%)</title><rect x="40.6102%" y="1781" width="0.0149%" height="15" fill="rgb(229,99,21)" fg:x="10915402544" fg:w="4013008"/><text x="40.8602%" y="1791.50"></text></g><g><title>ext4_file_read_iter (2,033,924,860 samples, 7.57%)</title><rect x="33.0607%" y="1829" width="7.5671%" height="15" fill="rgb(211,140,41)" fg:x="8886216070" fg:w="2033924860"/><text x="33.3107%" y="1839.50">ext4_file_..</text></g><g><title>generic_file_read_iter (2,033,623,453 samples, 7.57%)</title><rect x="33.0618%" y="1813" width="7.5660%" height="15" fill="rgb(240,227,30)" fg:x="8886517477" fg:w="2033623453"/><text x="33.3118%" y="1823.50">generic_fi..</text></g><g><title>__x64_sys_pread64 (2,053,497,246 samples, 7.64%)</title><rect x="33.0130%" y="1861" width="7.6399%" height="15" fill="rgb(215,224,45)" fg:x="8873396535" fg:w="2053497246"/><text x="33.2630%" y="1871.50">__x64_sys_..</text></g><g><title>vfs_read (2,045,873,415 samples, 7.61%)</title><rect x="33.0414%" y="1845" width="7.6116%" height="15" fill="rgb(206,123,31)" fg:x="8881020366" fg:w="2045873415"/><text x="33.2914%" y="1855.50">vfs_read</text></g><g><title>security_file_permission (6,752,851 samples, 0.03%)</title><rect x="40.6278%" y="1829" width="0.0251%" height="15" fill="rgb(210,138,16)" fg:x="10920140930" fg:w="6752851"/><text x="40.8778%" y="1839.50"></text></g><g><title>fsnotify_perm (4,244,928 samples, 0.02%)</title><rect x="40.6372%" y="1813" width="0.0158%" height="15" fill="rgb(228,57,28)" fg:x="10922648853" fg:w="4244928"/><text x="40.8872%" y="1823.50"></text></g><g><title>__fsnotify_parent (3,105,285 samples, 0.01%)</title><rect x="40.6414%" y="1797" width="0.0116%" height="15" fill="rgb(242,170,10)" fg:x="10923788496" fg:w="3105285"/><text x="40.8914%" y="1807.50"></text></g><g><title>syscall_exit_to_user_mode (2,757,345 samples, 0.01%)</title><rect x="40.6540%" y="1861" width="0.0103%" height="15" fill="rgb(228,214,39)" fg:x="10927170852" fg:w="2757345"/><text x="40.9040%" y="1871.50"></text></g><g><title>exit_to_user_mode_prepare (2,757,345 samples, 0.01%)</title><rect x="40.6540%" y="1845" width="0.0103%" height="15" fill="rgb(218,179,33)" fg:x="10927170852" fg:w="2757345"/><text x="40.9040%" y="1855.50"></text></g><g><title>entry_SYSCALL_64 (2,058,878,409 samples, 7.66%)</title><rect x="33.0056%" y="1893" width="7.6600%" height="15" fill="rgb(235,193,39)" fg:x="8871412087" fg:w="2058878409"/><text x="33.2556%" y="1903.50">entry_SYSC..</text></g><g><title>do_syscall_64 (2,057,866,482 samples, 7.66%)</title><rect x="33.0094%" y="1877" width="7.6562%" height="15" fill="rgb(219,221,36)" fg:x="8872424014" fg:w="2057866482"/><text x="33.2594%" y="1887.50">do_syscall..</text></g><g><title>entry_ibpb (11,045,806 samples, 0.04%)</title><rect x="40.6656%" y="1893" width="0.0411%" height="15" fill="rgb(248,218,19)" fg:x="10930290496" fg:w="11045806"/><text x="40.9156%" y="1903.50"></text></g><g><title>__libc_pread (2,075,948,504 samples, 7.72%)</title><rect x="32.9946%" y="1909" width="7.7235%" height="15" fill="rgb(205,50,9)" fg:x="8868433566" fg:w="2075948504"/><text x="33.2446%" y="1919.50">__libc_pread</text></g><g><title>__sanitizer::mem_is_zero (51,501,233 samples, 0.19%)</title><rect x="40.7199%" y="1909" width="0.1916%" height="15" fill="rgb(238,81,28)" fg:x="10944894764" fg:w="51501233"/><text x="40.9699%" y="1919.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::max_size (2,713,736 samples, 0.01%)</title><rect x="40.9666%" y="1829" width="0.0101%" height="15" fill="rgb(235,110,19)" fg:x="11011204090" fg:w="2713736"/><text x="41.2166%" y="1839.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_check_len (4,754,362 samples, 0.02%)</title><rect x="40.9600%" y="1845" width="0.0177%" height="15" fill="rgb(214,7,14)" fg:x="11009426532" fg:w="4754362"/><text x="41.2100%" y="1855.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;* std::__relocate_a&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (4,724,950 samples, 0.02%)</title><rect x="40.9817%" y="1813" width="0.0176%" height="15" fill="rgb(211,77,3)" fg:x="11015265437" fg:w="4724950"/><text x="41.2317%" y="1823.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;* std::__relocate_a_1&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (3,980,467 samples, 0.01%)</title><rect x="40.9845%" y="1797" width="0.0148%" height="15" fill="rgb(229,5,9)" fg:x="11016009920" fg:w="3980467"/><text x="41.2345%" y="1807.50"></text></g><g><title>void std::__relocate_object_a&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (2,771,045 samples, 0.01%)</title><rect x="40.9890%" y="1781" width="0.0103%" height="15" fill="rgb(225,90,11)" fg:x="11017219342" fg:w="2771045"/><text x="41.2390%" y="1791.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_S_relocate (6,298,483 samples, 0.02%)</title><rect x="40.9777%" y="1845" width="0.0234%" height="15" fill="rgb(242,56,8)" fg:x="11014180894" fg:w="6298483"/><text x="41.2277%" y="1855.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_S_do_relocate (6,170,055 samples, 0.02%)</title><rect x="40.9782%" y="1829" width="0.0230%" height="15" fill="rgb(249,212,39)" fg:x="11014309322" fg:w="6170055"/><text x="41.2282%" y="1839.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (20,308,911 samples, 0.08%)</title><rect x="40.9397%" y="1877" width="0.0756%" height="15" fill="rgb(236,90,9)" fg:x="11003974415" fg:w="20308911"/><text x="41.1897%" y="1887.50"></text></g><g><title>void std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (18,768,326 samples, 0.07%)</title><rect x="40.9455%" y="1861" width="0.0698%" height="15" fill="rgb(206,88,35)" fg:x="11005515000" fg:w="18768326"/><text x="41.1955%" y="1871.50"></text></g><g><title>void std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (3,513,411 samples, 0.01%)</title><rect x="41.0022%" y="1845" width="0.0131%" height="15" fill="rgb(205,126,30)" fg:x="11020769915" fg:w="3513411"/><text x="41.2522%" y="1855.50"></text></g><g><title>split (22,862,006 samples, 0.09%)</title><rect x="40.9316%" y="1893" width="0.0851%" height="15" fill="rgb(230,176,12)" fg:x="11001780730" fg:w="22862006"/><text x="41.1816%" y="1903.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (9,323,333 samples, 0.03%)</title><rect x="41.0219%" y="1893" width="0.0347%" height="15" fill="rgb(243,19,9)" fg:x="11026062122" fg:w="9323333"/><text x="41.2719%" y="1903.50"></text></g><g><title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (5,160,969 samples, 0.02%)</title><rect x="41.0374%" y="1877" width="0.0192%" height="15" fill="rgb(245,171,17)" fg:x="11030224486" fg:w="5160969"/><text x="41.2874%" y="1887.50"></text></g><g><title>std::__cxx11::stoi (4,930,607 samples, 0.02%)</title><rect x="41.0583%" y="1893" width="0.0183%" height="15" fill="rgb(227,52,21)" fg:x="11035856877" fg:w="4930607"/><text x="41.3083%" y="1903.50"></text></g><g><title>int __gnu_cxx::__stoa&lt;long, int, char, int&gt; (4,930,607 samples, 0.02%)</title><rect x="41.0583%" y="1877" width="0.0183%" height="15" fill="rgb(238,69,14)" fg:x="11035856877" fg:w="4930607"/><text x="41.3083%" y="1887.50"></text></g><g><title>get_file_and_offset_and_size_from_key (46,308,622 samples, 0.17%)</title><rect x="40.9115%" y="1909" width="0.1723%" height="15" fill="rgb(241,156,39)" fg:x="10996395997" fg:w="46308622"/><text x="41.1615%" y="1919.50"></text></g><g><title>IOTraceClient::do_read (2,222,375,001 samples, 8.27%)</title><rect x="32.8434%" y="1925" width="8.2682%" height="15" fill="rgb(212,227,28)" fg:x="8827816992" fg:w="2222375001"/><text x="33.0934%" y="1935.50">IOTraceClien..</text></g><g><title>IOTraceClient::do_operation (5,017,164,344 samples, 18.67%)</title><rect x="22.4788%" y="1941" width="18.6661%" height="15" fill="rgb(209,118,27)" fg:x="6041958392" fg:w="5017164344"/><text x="22.7288%" y="1951.50">IOTraceClient::do_operation</text></g><g><title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; [5]&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (2,695,225 samples, 0.01%)</title><rect x="41.1933%" y="1861" width="0.0100%" height="15" fill="rgb(226,102,5)" fg:x="11072140507" fg:w="2695225"/><text x="41.4433%" y="1871.50"></text></g><g><title>std::_Hashtable&lt;int, std::pair&lt;int const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; [5]&gt;, std::allocator&lt;std::pair&lt;int const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; [5]&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (7,169,191 samples, 0.03%)</title><rect x="41.1804%" y="1893" width="0.0267%" height="15" fill="rgb(223,34,3)" fg:x="11068651462" fg:w="7169191"/><text x="41.4304%" y="1903.50"></text></g><g><title>std::_Hashtable&lt;int, std::pair&lt;int const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; [5]&gt;, std::allocator&lt;std::pair&lt;int const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; [5]&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (6,839,489 samples, 0.03%)</title><rect x="41.1816%" y="1877" width="0.0254%" height="15" fill="rgb(221,81,38)" fg:x="11068981164" fg:w="6839489"/><text x="41.4316%" y="1887.50"></text></g><g><title>std::unordered_map&lt;int, std::vector&lt;double, std::allocator&lt;double&gt; &gt; [5], std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; [5]&gt; &gt; &gt;::operator[] (12,213,112 samples, 0.05%)</title><rect x="41.1721%" y="1925" width="0.0454%" height="15" fill="rgb(236,219,28)" fg:x="11066430644" fg:w="12213112"/><text x="41.4221%" y="1935.50"></text></g><g><title>std::__detail::_Map_base&lt;int, std::pair&lt;int const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; [5]&gt;, std::allocator&lt;std::pair&lt;int const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; [5]&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (12,213,112 samples, 0.05%)</title><rect x="41.1721%" y="1909" width="0.0454%" height="15" fill="rgb(213,200,14)" fg:x="11066430644" fg:w="12213112"/><text x="41.4221%" y="1919.50"></text></g><g><title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::vector&lt;long, std::allocator&lt;long&gt; &gt; [5]&gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (2,919,931 samples, 0.01%)</title><rect x="41.2459%" y="1861" width="0.0109%" height="15" fill="rgb(240,33,19)" fg:x="11086259041" fg:w="2919931"/><text x="41.4959%" y="1871.50"></text></g><g><title>std::_Hashtable&lt;int, std::pair&lt;int const, std::vector&lt;long, std::allocator&lt;long&gt; &gt; [5]&gt;, std::allocator&lt;std::pair&lt;int const, std::vector&lt;long, std::allocator&lt;long&gt; &gt; [5]&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (6,564,998 samples, 0.02%)</title><rect x="41.2386%" y="1877" width="0.0244%" height="15" fill="rgb(233,113,27)" fg:x="11084319102" fg:w="6564998"/><text x="41.4886%" y="1887.50"></text></g><g><title>std::_Hashtable&lt;int, std::pair&lt;int const, std::vector&lt;long, std::allocator&lt;long&gt; &gt; [5]&gt;, std::allocator&lt;std::pair&lt;int const, std::vector&lt;long, std::allocator&lt;long&gt; &gt; [5]&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (7,077,729 samples, 0.03%)</title><rect x="41.2381%" y="1893" width="0.0263%" height="15" fill="rgb(220,221,18)" fg:x="11084165192" fg:w="7077729"/><text x="41.4881%" y="1903.50"></text></g><g><title>std::unordered_map&lt;int, std::vector&lt;long, std::allocator&lt;long&gt; &gt; [5], std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::vector&lt;long, std::allocator&lt;long&gt; &gt; [5]&gt; &gt; &gt;::operator[] (11,353,765 samples, 0.04%)</title><rect x="41.2245%" y="1925" width="0.0422%" height="15" fill="rgb(238,92,8)" fg:x="11080528148" fg:w="11353765"/><text x="41.4745%" y="1935.50"></text></g><g><title>std::__detail::_Map_base&lt;int, std::pair&lt;int const, std::vector&lt;long, std::allocator&lt;long&gt; &gt; [5]&gt;, std::allocator&lt;std::pair&lt;int const, std::vector&lt;long, std::allocator&lt;long&gt; &gt; [5]&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (10,804,495 samples, 0.04%)</title><rect x="41.2266%" y="1909" width="0.0402%" height="15" fill="rgb(222,164,16)" fg:x="11081077418" fg:w="10804495"/><text x="41.4766%" y="1919.50"></text></g><g><title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::push_back (3,000,676 samples, 0.01%)</title><rect x="41.2668%" y="1925" width="0.0112%" height="15" fill="rgb(241,119,3)" fg:x="11091881913" fg:w="3000676"/><text x="41.5168%" y="1935.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::push_back (3,694,285 samples, 0.01%)</title><rect x="41.2779%" y="1925" width="0.0137%" height="15" fill="rgb(241,44,8)" fg:x="11094882589" fg:w="3694285"/><text x="41.5279%" y="1935.50"></text></g><g><title>OpMeasurement::record_op (39,462,281 samples, 0.15%)</title><rect x="41.1463%" y="1941" width="0.1468%" height="15" fill="rgb(230,36,40)" fg:x="11059500011" fg:w="39462281"/><text x="41.3963%" y="1951.50"></text></g><g><title>__asan::QuickCheckForUnpoisonedRegion (2,878,284 samples, 0.01%)</title><rect x="41.3629%" y="1893" width="0.0107%" height="15" fill="rgb(243,16,36)" fg:x="11117728701" fg:w="2878284"/><text x="41.6129%" y="1903.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (5,924,117 samples, 0.02%)</title><rect x="41.3611%" y="1909" width="0.0220%" height="15" fill="rgb(231,4,26)" fg:x="11117245436" fg:w="5924117"/><text x="41.6111%" y="1919.50"></text></g><g><title>__sched_text_start (5,932,188 samples, 0.02%)</title><rect x="41.3904%" y="1749" width="0.0221%" height="15" fill="rgb(240,9,31)" fg:x="11125110897" fg:w="5932188"/><text x="41.6404%" y="1759.50"></text></g><g><title>__se_sys_futex (7,338,494 samples, 0.03%)</title><rect x="41.3869%" y="1813" width="0.0273%" height="15" fill="rgb(207,173,15)" fg:x="11124155948" fg:w="7338494"/><text x="41.6369%" y="1823.50"></text></g><g><title>do_futex (7,094,330 samples, 0.03%)</title><rect x="41.3878%" y="1797" width="0.0264%" height="15" fill="rgb(224,192,53)" fg:x="11124400112" fg:w="7094330"/><text x="41.6378%" y="1807.50"></text></g><g><title>futex_wait (7,094,330 samples, 0.03%)</title><rect x="41.3878%" y="1781" width="0.0264%" height="15" fill="rgb(223,67,28)" fg:x="11124400112" fg:w="7094330"/><text x="41.6378%" y="1791.50"></text></g><g><title>schedule (6,723,003 samples, 0.03%)</title><rect x="41.3891%" y="1765" width="0.0250%" height="15" fill="rgb(211,20,47)" fg:x="11124771439" fg:w="6723003"/><text x="41.6391%" y="1775.50"></text></g><g><title>__x64_sys_futex (7,495,575 samples, 0.03%)</title><rect x="41.3869%" y="1829" width="0.0279%" height="15" fill="rgb(240,228,2)" fg:x="11124155948" fg:w="7495575"/><text x="41.6369%" y="1839.50"></text></g><g><title>do_syscall_64 (8,496,631 samples, 0.03%)</title><rect x="41.3869%" y="1845" width="0.0316%" height="15" fill="rgb(248,151,12)" fg:x="11124155948" fg:w="8496631"/><text x="41.6369%" y="1855.50"></text></g><g><title>entry_SYSCALL_64 (8,802,625 samples, 0.03%)</title><rect x="41.3869%" y="1861" width="0.0327%" height="15" fill="rgb(244,8,39)" fg:x="11124155948" fg:w="8802625"/><text x="41.6369%" y="1871.50"></text></g><g><title>__GI___lll_lock_wait (10,103,043 samples, 0.04%)</title><rect x="41.3853%" y="1877" width="0.0376%" height="15" fill="rgb(222,26,8)" fg:x="11123739786" fg:w="10103043"/><text x="41.6353%" y="1887.50"></text></g><g><title>std::lock_guard&lt;std::mutex&gt;::lock_guard (14,788,571 samples, 0.06%)</title><rect x="41.3832%" y="1909" width="0.0550%" height="15" fill="rgb(213,106,44)" fg:x="11123169553" fg:w="14788571"/><text x="41.6332%" y="1919.50"></text></g><g><title>std::mutex::lock (14,218,338 samples, 0.05%)</title><rect x="41.3853%" y="1893" width="0.0529%" height="15" fill="rgb(214,129,20)" fg:x="11123739786" fg:w="14218338"/><text x="41.6353%" y="1903.50"></text></g><g><title>__x64_sys_futex (4,883,354 samples, 0.02%)</title><rect x="41.4395%" y="1829" width="0.0182%" height="15" fill="rgb(212,32,13)" fg:x="11138311524" fg:w="4883354"/><text x="41.6895%" y="1839.50"></text></g><g><title>__se_sys_futex (4,883,354 samples, 0.02%)</title><rect x="41.4395%" y="1813" width="0.0182%" height="15" fill="rgb(208,168,33)" fg:x="11138311524" fg:w="4883354"/><text x="41.6895%" y="1823.50"></text></g><g><title>do_futex (4,883,354 samples, 0.02%)</title><rect x="41.4395%" y="1797" width="0.0182%" height="15" fill="rgb(231,207,8)" fg:x="11138311524" fg:w="4883354"/><text x="41.6895%" y="1807.50"></text></g><g><title>futex_wake (4,450,479 samples, 0.02%)</title><rect x="41.4411%" y="1781" width="0.0166%" height="15" fill="rgb(235,219,23)" fg:x="11138744399" fg:w="4450479"/><text x="41.6911%" y="1791.50"></text></g><g><title>entry_SYSCALL_64 (5,288,554 samples, 0.02%)</title><rect x="41.4387%" y="1861" width="0.0197%" height="15" fill="rgb(226,216,26)" fg:x="11138102863" fg:w="5288554"/><text x="41.6887%" y="1871.50"></text></g><g><title>do_syscall_64 (5,079,893 samples, 0.02%)</title><rect x="41.4395%" y="1845" width="0.0189%" height="15" fill="rgb(239,137,16)" fg:x="11138311524" fg:w="5079893"/><text x="41.6895%" y="1855.50"></text></g><g><title>__GI___lll_lock_wake (8,356,525 samples, 0.03%)</title><rect x="41.4387%" y="1877" width="0.0311%" height="15" fill="rgb(207,12,36)" fg:x="11138102863" fg:w="8356525"/><text x="41.6887%" y="1887.50"></text></g><g><title>entry_ibpb (3,067,971 samples, 0.01%)</title><rect x="41.4584%" y="1861" width="0.0114%" height="15" fill="rgb(210,214,24)" fg:x="11143391417" fg:w="3067971"/><text x="41.7084%" y="1871.50"></text></g><g><title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (10,329,928 samples, 0.04%)</title><rect x="41.4382%" y="1909" width="0.0384%" height="15" fill="rgb(206,56,30)" fg:x="11137958124" fg:w="10329928"/><text x="41.6882%" y="1919.50"></text></g><g><title>std::mutex::unlock (10,185,189 samples, 0.04%)</title><rect x="41.4387%" y="1893" width="0.0379%" height="15" fill="rgb(228,143,26)" fg:x="11138102863" fg:w="10185189"/><text x="41.6887%" y="1903.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_S_max_size (3,663,586 samples, 0.01%)</title><rect x="41.5396%" y="1845" width="0.0136%" height="15" fill="rgb(216,218,46)" fg:x="11165213550" fg:w="3663586"/><text x="41.7896%" y="1855.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::max_size (4,955,317 samples, 0.02%)</title><rect x="41.5369%" y="1861" width="0.0184%" height="15" fill="rgb(206,6,19)" fg:x="11164496870" fg:w="4955317"/><text x="41.7869%" y="1871.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_check_len (9,416,130 samples, 0.04%)</title><rect x="41.5273%" y="1877" width="0.0350%" height="15" fill="rgb(239,177,51)" fg:x="11161894791" fg:w="9416130"/><text x="41.7773%" y="1887.50"></text></g><g><title>void std::__relocate_object_a&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (4,040,375 samples, 0.02%)</title><rect x="41.5948%" y="1813" width="0.0150%" height="15" fill="rgb(216,55,25)" fg:x="11180042535" fg:w="4040375"/><text x="41.8448%" y="1823.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_S_relocate (11,629,920 samples, 0.04%)</title><rect x="41.5671%" y="1877" width="0.0433%" height="15" fill="rgb(231,163,29)" fg:x="11172598149" fg:w="11629920"/><text x="41.8171%" y="1887.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_S_do_relocate (10,197,949 samples, 0.04%)</title><rect x="41.5724%" y="1861" width="0.0379%" height="15" fill="rgb(232,149,50)" fg:x="11174030120" fg:w="10197949"/><text x="41.8224%" y="1871.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;* std::__relocate_a&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (8,981,189 samples, 0.03%)</title><rect x="41.5769%" y="1845" width="0.0334%" height="15" fill="rgb(223,142,48)" fg:x="11175246880" fg:w="8981189"/><text x="41.8269%" y="1855.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;* std::__relocate_a_1&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (5,548,254 samples, 0.02%)</title><rect x="41.5897%" y="1829" width="0.0206%" height="15" fill="rgb(245,83,23)" fg:x="11178679815" fg:w="5548254"/><text x="41.8397%" y="1839.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (42,518,048 samples, 0.16%)</title><rect x="41.4817%" y="1909" width="0.1582%" height="15" fill="rgb(224,63,2)" fg:x="11149656428" fg:w="42518048"/><text x="41.7317%" y="1919.50"></text></g><g><title>void std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (40,721,255 samples, 0.15%)</title><rect x="41.4884%" y="1893" width="0.1515%" height="15" fill="rgb(218,65,53)" fg:x="11151453221" fg:w="40721255"/><text x="41.7384%" y="1903.50"></text></g><g><title>void std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (4,107,341 samples, 0.02%)</title><rect x="41.6246%" y="1877" width="0.0153%" height="15" fill="rgb(221,84,29)" fg:x="11188067135" fg:w="4107341"/><text x="41.8746%" y="1887.50"></text></g><g><title>TraceIterator::next_op (96,625,195 samples, 0.36%)</title><rect x="41.3095%" y="1925" width="0.3595%" height="15" fill="rgb(234,0,32)" fg:x="11103354242" fg:w="96625195"/><text x="41.5595%" y="1935.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector (6,026,142 samples, 0.02%)</title><rect x="41.6465%" y="1909" width="0.0224%" height="15" fill="rgb(206,20,16)" fg:x="11193953295" fg:w="6026142"/><text x="41.8965%" y="1919.50"></text></g><g><title>TraceWorkload::next_op (120,186,719 samples, 0.45%)</title><rect x="41.2980%" y="1941" width="0.4471%" height="15" fill="rgb(244,172,18)" fg:x="11100262955" fg:w="120186719"/><text x="41.5480%" y="1951.50"></text></g><g><title>bool std::chrono::operator&lt; &lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;(std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; const&amp;, std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; const&amp;) (4,233,177 samples, 0.02%)</title><rect x="41.7451%" y="1941" width="0.0157%" height="15" fill="rgb(254,133,1)" fg:x="11220449674" fg:w="4233177"/><text x="41.9951%" y="1951.50"></text></g><g><title>std::common_type&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::type std::chrono::operator-&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (4,799,605 samples, 0.02%)</title><rect x="41.7716%" y="1941" width="0.0179%" height="15" fill="rgb(222,206,41)" fg:x="11227582357" fg:w="4799605"/><text x="42.0216%" y="1951.50"></text></g><g><title>[libstdc++.so.6.0.30] (5,215,187,630 samples, 19.40%)</title><rect x="22.4011%" y="2053" width="19.4028%" height="15" fill="rgb(212,3,42)" fg:x="6021064341" fg:w="5215187630"/><text x="22.6511%" y="2063.50">[libstdc++.so.6.0.30]</text></g><g><title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void (*)(Client*, Workload*, OpMeasurement*, long), Client*, Workload*, OpMeasurement*, long&gt; &gt; &gt;::_M_run (5,215,187,630 samples, 19.40%)</title><rect x="22.4011%" y="2037" width="19.4028%" height="15" fill="rgb(241,11,4)" fg:x="6021064341" fg:w="5215187630"/><text x="22.6511%" y="2047.50">std::thread::_State_impl&lt;std::..</text></g><g><title>std::thread::_Invoker&lt;std::tuple&lt;void (*)(Client*, Workload*, OpMeasurement*, long), Client*, Workload*, OpMeasurement*, long&gt; &gt;::operator (5,215,187,630 samples, 19.40%)</title><rect x="22.4011%" y="2021" width="19.4028%" height="15" fill="rgb(205,19,26)" fg:x="6021064341" fg:w="5215187630"/><text x="22.6511%" y="2031.50">std::thread::_Invoker&lt;std::tup..</text></g><g><title>void std::thread::_Invoker&lt;std::tuple&lt;void (*)(Client*, Workload*, OpMeasurement*, long), Client*, Workload*, OpMeasurement*, long&gt; &gt;::_M_invoke&lt;0ul, 1ul, 2ul, 3ul, 4ul&gt; (5,215,187,630 samples, 19.40%)</title><rect x="22.4011%" y="2005" width="19.4028%" height="15" fill="rgb(210,179,32)" fg:x="6021064341" fg:w="5215187630"/><text x="22.6511%" y="2015.50">void std::thread::_Invoker&lt;std..</text></g><g><title>std::__invoke_result&lt;void (*)(Client*, Workload*, OpMeasurement*, long), Client*, Workload*, OpMeasurement*, long&gt;::type std::__invoke&lt;void (*)(Client*, Workload*, OpMeasurement*, long), Client*, Workload*, OpMeasurement*, long&gt; (5,215,187,630 samples, 19.40%)</title><rect x="22.4011%" y="1989" width="19.4028%" height="15" fill="rgb(227,116,49)" fg:x="6021064341" fg:w="5215187630"/><text x="22.6511%" y="1999.50">std::__invoke_result&lt;void (*)(..</text></g><g><title>void std::__invoke_impl&lt;void, void (*)(Client*, Workload*, OpMeasurement*, long), Client*, Workload*, OpMeasurement*, long&gt; (5,215,187,630 samples, 19.40%)</title><rect x="22.4011%" y="1973" width="19.4028%" height="15" fill="rgb(211,146,6)" fg:x="6021064341" fg:w="5215187630"/><text x="22.6511%" y="1983.50">void std::__invoke_impl&lt;void, ..</text></g><g><title>worker_thread_fn (5,204,746,105 samples, 19.36%)</title><rect x="22.4399%" y="1957" width="19.3640%" height="15" fill="rgb(219,44,39)" fg:x="6031505866" fg:w="5204746105"/><text x="22.6899%" y="1967.50">worker_thread_fn</text></g><g><title>__GI___lll_lock_wake (2,843,281 samples, 0.01%)</title><rect x="41.8118%" y="2021" width="0.0106%" height="15" fill="rgb(234,128,11)" fg:x="11238369206" fg:w="2843281"/><text x="42.0618%" y="2031.50"></text></g><g><title>bool std::has_facet&lt;std::ctype&lt;char&gt; &gt; (2,838,894 samples, 0.01%)</title><rect x="41.8466%" y="2021" width="0.0106%" height="15" fill="rgb(220,183,53)" fg:x="11247722312" fg:w="2838894"/><text x="42.0966%" y="2031.50"></text></g><g><title>memcpy@GLIBC_2.2.5 (3,818,261 samples, 0.01%)</title><rect x="41.8627%" y="2021" width="0.0142%" height="15" fill="rgb(213,219,32)" fg:x="11252051928" fg:w="3818261"/><text x="42.1127%" y="2031.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (5,831,814 samples, 0.02%)</title><rect x="41.8828%" y="2021" width="0.0217%" height="15" fill="rgb(232,156,16)" fg:x="11257447353" fg:w="5831814"/><text x="42.1328%" y="2031.50"></text></g><g><title>std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;) (4,362,791 samples, 0.02%)</title><rect x="41.9313%" y="2021" width="0.0162%" height="15" fill="rgb(246,135,34)" fg:x="11270491130" fg:w="4362791"/><text x="42.1813%" y="2031.50"></text></g><g><title>__asan_region_is_poisoned (4,029,937 samples, 0.01%)</title><rect x="41.9817%" y="2005" width="0.0150%" height="15" fill="rgb(241,99,0)" fg:x="11284043925" fg:w="4029937"/><text x="42.2317%" y="2015.50"></text></g><g><title>__sanitizer::mem_is_zero (3,075,741 samples, 0.01%)</title><rect x="42.0008%" y="2005" width="0.0114%" height="15" fill="rgb(222,103,45)" fg:x="11289174070" fg:w="3075741"/><text x="42.2508%" y="2015.50"></text></g><g><title>[unknown] (56,211,501 samples, 0.21%)</title><rect x="41.8047%" y="2037" width="0.2091%" height="15" fill="rgb(212,57,4)" fg:x="11236465271" fg:w="56211501"/><text x="42.0547%" y="2047.50"></text></g><g><title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (10,890,380 samples, 0.04%)</title><rect x="41.9733%" y="2021" width="0.0405%" height="15" fill="rgb(215,68,47)" fg:x="11281786392" fg:w="10890380"/><text x="42.2233%" y="2031.50"></text></g><g><title>link_path_walk (3,122,478 samples, 0.01%)</title><rect x="42.0401%" y="1925" width="0.0116%" height="15" fill="rgb(230,84,2)" fg:x="11299738148" fg:w="3122478"/><text x="42.2901%" y="1935.50"></text></g><g><title>may_open (3,820,217 samples, 0.01%)</title><rect x="42.0541%" y="1925" width="0.0142%" height="15" fill="rgb(220,102,14)" fg:x="11303491371" fg:w="3820217"/><text x="42.3041%" y="1935.50"></text></g><g><title>do_dentry_open (2,939,370 samples, 0.01%)</title><rect x="42.0705%" y="1909" width="0.0109%" height="15" fill="rgb(240,10,32)" fg:x="11307904139" fg:w="2939370"/><text x="42.3205%" y="1919.50"></text></g><g><title>do_filp_open (15,714,158 samples, 0.06%)</title><rect x="42.0235%" y="1957" width="0.0585%" height="15" fill="rgb(215,47,27)" fg:x="11295288467" fg:w="15714158"/><text x="42.2735%" y="1967.50"></text></g><g><title>path_openat (14,595,844 samples, 0.05%)</title><rect x="42.0277%" y="1941" width="0.0543%" height="15" fill="rgb(233,188,43)" fg:x="11296406781" fg:w="14595844"/><text x="42.2777%" y="1951.50"></text></g><g><title>vfs_open (3,098,486 samples, 0.01%)</title><rect x="42.0705%" y="1925" width="0.0115%" height="15" fill="rgb(253,190,1)" fg:x="11307904139" fg:w="3098486"/><text x="42.3205%" y="1935.50"></text></g><g><title>getname (2,735,779 samples, 0.01%)</title><rect x="42.0880%" y="1957" width="0.0102%" height="15" fill="rgb(206,114,52)" fg:x="11312604289" fg:w="2735779"/><text x="42.3380%" y="1967.50"></text></g><g><title>getname_flags (2,735,779 samples, 0.01%)</title><rect x="42.0880%" y="1941" width="0.0102%" height="15" fill="rgb(233,120,37)" fg:x="11312604289" fg:w="2735779"/><text x="42.3380%" y="1951.50"></text></g><g><title>do_sys_openat2 (21,037,433 samples, 0.08%)</title><rect x="42.0235%" y="1973" width="0.0783%" height="15" fill="rgb(214,52,39)" fg:x="11295288467" fg:w="21037433"/><text x="42.2735%" y="1983.50"></text></g><g><title>entry_SYSCALL_64 (22,842,124 samples, 0.08%)</title><rect x="42.0215%" y="2021" width="0.0850%" height="15" fill="rgb(223,80,29)" fg:x="11294738096" fg:w="22842124"/><text x="42.2715%" y="2031.50"></text></g><g><title>do_syscall_64 (22,603,603 samples, 0.08%)</title><rect x="42.0224%" y="2005" width="0.0841%" height="15" fill="rgb(230,101,40)" fg:x="11294976617" fg:w="22603603"/><text x="42.2724%" y="2015.50"></text></g><g><title>__x64_sys_openat (22,291,753 samples, 0.08%)</title><rect x="42.0235%" y="1989" width="0.0829%" height="15" fill="rgb(219,211,8)" fg:x="11295288467" fg:w="22291753"/><text x="42.2735%" y="1999.50"></text></g><g><title>__GI___libc_open (24,302,234 samples, 0.09%)</title><rect x="42.0209%" y="2037" width="0.0904%" height="15" fill="rgb(252,126,28)" fg:x="11294573891" fg:w="24302234"/><text x="42.2709%" y="2047.50"></text></g><g><title>charge_memcg (2,751,032 samples, 0.01%)</title><rect x="42.1947%" y="1877" width="0.0102%" height="15" fill="rgb(215,56,38)" fg:x="11341297560" fg:w="2751032"/><text x="42.4447%" y="1887.50"></text></g><g><title>__mem_cgroup_charge (3,646,353 samples, 0.01%)</title><rect x="42.1947%" y="1893" width="0.0136%" height="15" fill="rgb(249,55,44)" fg:x="11341297560" fg:w="3646353"/><text x="42.4447%" y="1903.50"></text></g><g><title>__alloc_pages (4,322,952 samples, 0.02%)</title><rect x="42.2097%" y="1861" width="0.0161%" height="15" fill="rgb(220,221,32)" fg:x="11345326634" fg:w="4322952"/><text x="42.4597%" y="1871.50"></text></g><g><title>get_page_from_freelist (4,322,952 samples, 0.02%)</title><rect x="42.2097%" y="1845" width="0.0161%" height="15" fill="rgb(212,216,41)" fg:x="11345326634" fg:w="4322952"/><text x="42.4597%" y="1855.50"></text></g><g><title>__handle_mm_fault (13,583,281 samples, 0.05%)</title><rect x="42.1770%" y="1957" width="0.0505%" height="15" fill="rgb(228,213,43)" fg:x="11336523241" fg:w="13583281"/><text x="42.4270%" y="1967.50"></text></g><g><title>handle_pte_fault (13,073,064 samples, 0.05%)</title><rect x="42.1789%" y="1941" width="0.0486%" height="15" fill="rgb(211,31,26)" fg:x="11337033458" fg:w="13073064"/><text x="42.4289%" y="1951.50"></text></g><g><title>do_wp_page (12,805,624 samples, 0.05%)</title><rect x="42.1799%" y="1925" width="0.0476%" height="15" fill="rgb(229,202,19)" fg:x="11337300898" fg:w="12805624"/><text x="42.4299%" y="1935.50"></text></g><g><title>wp_page_copy (10,890,654 samples, 0.04%)</title><rect x="42.1870%" y="1909" width="0.0405%" height="15" fill="rgb(229,105,46)" fg:x="11339215868" fg:w="10890654"/><text x="42.4370%" y="1919.50"></text></g><g><title>vma_alloc_folio (5,162,609 samples, 0.02%)</title><rect x="42.2083%" y="1893" width="0.0192%" height="15" fill="rgb(235,108,1)" fg:x="11344943913" fg:w="5162609"/><text x="42.4583%" y="1903.50"></text></g><g><title>__folio_alloc (4,779,888 samples, 0.02%)</title><rect x="42.2097%" y="1877" width="0.0178%" height="15" fill="rgb(245,111,35)" fg:x="11345326634" fg:w="4779888"/><text x="42.4597%" y="1887.50"></text></g><g><title>handle_mm_fault (16,375,844 samples, 0.06%)</title><rect x="42.1733%" y="1973" width="0.0609%" height="15" fill="rgb(219,185,31)" fg:x="11335545243" fg:w="16375844"/><text x="42.4233%" y="1983.50"></text></g><g><title>do_user_addr_fault (20,783,576 samples, 0.08%)</title><rect x="42.1664%" y="1989" width="0.0773%" height="15" fill="rgb(214,4,43)" fg:x="11333697259" fg:w="20783576"/><text x="42.4164%" y="1999.50"></text></g><g><title>exc_page_fault (22,593,230 samples, 0.08%)</title><rect x="42.1652%" y="2005" width="0.0841%" height="15" fill="rgb(235,227,40)" fg:x="11333374827" fg:w="22593230"/><text x="42.4152%" y="2015.50"></text></g><g><title>asm_exc_page_fault (23,709,980 samples, 0.09%)</title><rect x="42.1617%" y="2021" width="0.0882%" height="15" fill="rgb(230,88,30)" fg:x="11332408969" fg:w="23709980"/><text x="42.4117%" y="2031.50"></text></g><g><title>__asan::Allocator::Allocate (38,638,618 samples, 0.14%)</title><rect x="42.1192%" y="2037" width="0.1438%" height="15" fill="rgb(216,217,1)" fg:x="11320989514" fg:w="38638618"/><text x="42.3692%" y="2047.50"></text></g><g><title>entry_ibpb (3,368,369 samples, 0.01%)</title><rect x="42.2504%" y="2021" width="0.0125%" height="15" fill="rgb(248,139,50)" fg:x="11356259763" fg:w="3368369"/><text x="42.5004%" y="2031.50"></text></g><g><title>__asan::Allocator::Deallocate (6,443,303 samples, 0.02%)</title><rect x="42.2629%" y="2037" width="0.0240%" height="15" fill="rgb(233,1,21)" fg:x="11359628132" fg:w="6443303"/><text x="42.5129%" y="2047.50"></text></g><g><title>do_user_addr_fault (3,503,297 samples, 0.01%)</title><rect x="42.3047%" y="1989" width="0.0130%" height="15" fill="rgb(215,183,12)" fg:x="11370857787" fg:w="3503297"/><text x="42.5547%" y="1999.50"></text></g><g><title>__asan::Allocator::QuarantineChunk (8,488,645 samples, 0.03%)</title><rect x="42.2869%" y="2037" width="0.0316%" height="15" fill="rgb(229,104,42)" fg:x="11366071435" fg:w="8488645"/><text x="42.5369%" y="2047.50"></text></g><g><title>asm_exc_page_fault (3,702,293 samples, 0.01%)</title><rect x="42.3047%" y="2021" width="0.0138%" height="15" fill="rgb(243,34,48)" fg:x="11370857787" fg:w="3702293"/><text x="42.5547%" y="2031.50"></text></g><g><title>exc_page_fault (3,702,293 samples, 0.01%)</title><rect x="42.3047%" y="2005" width="0.0138%" height="15" fill="rgb(239,11,44)" fg:x="11370857787" fg:w="3702293"/><text x="42.5547%" y="2015.50"></text></g><g><title>__asan::GetCurrentThread (3,067,985 samples, 0.01%)</title><rect x="42.3282%" y="2037" width="0.0114%" height="15" fill="rgb(231,98,35)" fg:x="11377166421" fg:w="3067985"/><text x="42.5782%" y="2047.50"></text></g><g><title>__asan::PoisonShadow (3,173,406 samples, 0.01%)</title><rect x="42.3453%" y="2037" width="0.0118%" height="15" fill="rgb(233,28,25)" fg:x="11381773723" fg:w="3173406"/><text x="42.5953%" y="2047.50"></text></g><g><title>__memset_avx2_unaligned (5,029,250 samples, 0.02%)</title><rect x="42.3728%" y="2037" width="0.0187%" height="15" fill="rgb(234,123,11)" fg:x="11389162838" fg:w="5029250"/><text x="42.6228%" y="2047.50"></text></g><g><title>__handle_mm_fault (12,015,811 samples, 0.04%)</title><rect x="42.4210%" y="1957" width="0.0447%" height="15" fill="rgb(220,69,3)" fg:x="11402120073" fg:w="12015811"/><text x="42.6710%" y="1967.50"></text></g><g><title>handle_pte_fault (11,378,246 samples, 0.04%)</title><rect x="42.4234%" y="1941" width="0.0423%" height="15" fill="rgb(214,64,36)" fg:x="11402757638" fg:w="11378246"/><text x="42.6734%" y="1951.50"></text></g><g><title>do_pte_missing (11,205,522 samples, 0.04%)</title><rect x="42.4240%" y="1925" width="0.0417%" height="15" fill="rgb(211,138,32)" fg:x="11402930362" fg:w="11205522"/><text x="42.6740%" y="1935.50"></text></g><g><title>do_anonymous_page (10,559,232 samples, 0.04%)</title><rect x="42.4264%" y="1909" width="0.0393%" height="15" fill="rgb(213,118,47)" fg:x="11403576652" fg:w="10559232"/><text x="42.6764%" y="1919.50"></text></g><g><title>vma_alloc_folio (4,820,170 samples, 0.02%)</title><rect x="42.4478%" y="1893" width="0.0179%" height="15" fill="rgb(243,124,49)" fg:x="11409315714" fg:w="4820170"/><text x="42.6978%" y="1903.50"></text></g><g><title>__folio_alloc (3,478,137 samples, 0.01%)</title><rect x="42.4528%" y="1877" width="0.0129%" height="15" fill="rgb(221,30,28)" fg:x="11410657747" fg:w="3478137"/><text x="42.7028%" y="1887.50"></text></g><g><title>__alloc_pages (3,478,137 samples, 0.01%)</title><rect x="42.4528%" y="1861" width="0.0129%" height="15" fill="rgb(246,37,13)" fg:x="11410657747" fg:w="3478137"/><text x="42.7028%" y="1871.50"></text></g><g><title>get_page_from_freelist (2,855,239 samples, 0.01%)</title><rect x="42.4551%" y="1845" width="0.0106%" height="15" fill="rgb(249,66,14)" fg:x="11411280645" fg:w="2855239"/><text x="42.7051%" y="1855.50"></text></g><g><title>handle_mm_fault (12,664,568 samples, 0.05%)</title><rect x="42.4194%" y="1973" width="0.0471%" height="15" fill="rgb(213,166,5)" fg:x="11401681071" fg:w="12664568"/><text x="42.6694%" y="1983.50"></text></g><g><title>do_user_addr_fault (17,158,925 samples, 0.06%)</title><rect x="42.4164%" y="1989" width="0.0638%" height="15" fill="rgb(221,66,24)" fg:x="11400893159" fg:w="17158925"/><text x="42.6664%" y="1999.50"></text></g><g><title>lock_vma_under_rcu (3,706,445 samples, 0.01%)</title><rect x="42.4665%" y="1973" width="0.0138%" height="15" fill="rgb(210,132,17)" fg:x="11414345639" fg:w="3706445"/><text x="42.7165%" y="1983.50"></text></g><g><title>exc_page_fault (18,135,283 samples, 0.07%)</title><rect x="42.4149%" y="2005" width="0.0675%" height="15" fill="rgb(243,202,5)" fg:x="11400471338" fg:w="18135283"/><text x="42.6649%" y="2015.50"></text></g><g><title>asm_exc_page_fault (19,198,091 samples, 0.07%)</title><rect x="42.4115%" y="2021" width="0.0714%" height="15" fill="rgb(233,70,48)" fg:x="11399569958" fg:w="19198091"/><text x="42.6615%" y="2031.50"></text></g><g><title>__memset_avx2_unaligned_erms (25,745,402 samples, 0.10%)</title><rect x="42.3915%" y="2037" width="0.0958%" height="15" fill="rgb(238,41,26)" fg:x="11394192088" fg:w="25745402"/><text x="42.6415%" y="2047.50"></text></g><g><title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (8,414,549 samples, 0.03%)</title><rect x="42.4933%" y="2037" width="0.0313%" height="15" fill="rgb(241,19,31)" fg:x="11421540496" fg:w="8414549"/><text x="42.7433%" y="2047.50"></text></g><g><title>__strpbrk_sse42 (3,128,276 samples, 0.01%)</title><rect x="42.5591%" y="2037" width="0.0116%" height="15" fill="rgb(214,76,10)" fg:x="11439244532" fg:w="3128276"/><text x="42.8091%" y="2047.50"></text></g><g><title>__asan::PoisonShadow (3,128,276 samples, 0.01%)</title><rect x="42.5591%" y="2021" width="0.0116%" height="15" fill="rgb(254,202,22)" fg:x="11439244532" fg:w="3128276"/><text x="42.8091%" y="2031.50"></text></g><g><title>pthread_getspecific@@GLIBC_2.34 (3,655,910 samples, 0.01%)</title><rect x="42.5708%" y="2037" width="0.0136%" height="15" fill="rgb(214,72,24)" fg:x="11442372808" fg:w="3655910"/><text x="42.8208%" y="2047.50"></text></g><g><title>std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (5,008,371 samples, 0.02%)</title><rect x="42.6002%" y="2005" width="0.0186%" height="15" fill="rgb(221,92,46)" fg:x="11450292047" fg:w="5008371"/><text x="42.8502%" y="2015.50"></text></g><g><title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringbuf (6,969,403 samples, 0.03%)</title><rect x="42.5942%" y="2037" width="0.0259%" height="15" fill="rgb(246,13,50)" fg:x="11448676349" fg:w="6969403"/><text x="42.8442%" y="2047.50"></text></g><g><title>[unknown] (6,969,403 samples, 0.03%)</title><rect x="42.5942%" y="2021" width="0.0259%" height="15" fill="rgb(240,165,38)" fg:x="11448676349" fg:w="6969403"/><text x="42.8442%" y="2031.50"></text></g><g><title>[unknown] (224,612,975 samples, 0.84%)</title><rect x="41.8039%" y="2053" width="0.8357%" height="15" fill="rgb(241,24,51)" fg:x="11236251971" fg:w="224612975"/><text x="42.0539%" y="2063.50"></text></g><g><title>smp_call_function_many_cond (13,114,965 samples, 0.05%)</title><rect x="42.7363%" y="1845" width="0.0488%" height="15" fill="rgb(227,51,44)" fg:x="11486859856" fg:w="13114965"/><text x="42.9863%" y="1855.50"></text></g><g><title>ptep_clear_flush (14,915,404 samples, 0.06%)</title><rect x="42.7313%" y="1909" width="0.0555%" height="15" fill="rgb(231,121,3)" fg:x="11485526028" fg:w="14915404"/><text x="42.9813%" y="1919.50"></text></g><g><title>flush_tlb_mm_range (14,915,404 samples, 0.06%)</title><rect x="42.7313%" y="1893" width="0.0555%" height="15" fill="rgb(245,3,41)" fg:x="11485526028" fg:w="14915404"/><text x="42.9813%" y="1903.50"></text></g><g><title>native_flush_tlb_multi (14,507,809 samples, 0.05%)</title><rect x="42.7328%" y="1877" width="0.0540%" height="15" fill="rgb(214,13,26)" fg:x="11485933623" fg:w="14507809"/><text x="42.9828%" y="1887.50"></text></g><g><title>on_each_cpu_cond_mask (13,676,466 samples, 0.05%)</title><rect x="42.7359%" y="1861" width="0.0509%" height="15" fill="rgb(252,75,11)" fg:x="11486764966" fg:w="13676466"/><text x="42.9859%" y="1871.50"></text></g><g><title>do_wp_page (16,285,547 samples, 0.06%)</title><rect x="42.7276%" y="1941" width="0.0606%" height="15" fill="rgb(218,226,17)" fg:x="11484526888" fg:w="16285547"/><text x="42.9776%" y="1951.50"></text></g><g><title>wp_page_copy (16,285,547 samples, 0.06%)</title><rect x="42.7276%" y="1925" width="0.0606%" height="15" fill="rgb(248,89,38)" fg:x="11484526888" fg:w="16285547"/><text x="42.9776%" y="1935.50"></text></g><g><title>__handle_mm_fault (17,586,421 samples, 0.07%)</title><rect x="42.7239%" y="1973" width="0.0654%" height="15" fill="rgb(237,73,46)" fg:x="11483519957" fg:w="17586421"/><text x="42.9739%" y="1983.50"></text></g><g><title>handle_pte_fault (16,693,753 samples, 0.06%)</title><rect x="42.7272%" y="1957" width="0.0621%" height="15" fill="rgb(242,78,33)" fg:x="11484412625" fg:w="16693753"/><text x="42.9772%" y="1967.50"></text></g><g><title>handle_mm_fault (18,156,305 samples, 0.07%)</title><rect x="42.7239%" y="1989" width="0.0675%" height="15" fill="rgb(235,60,3)" fg:x="11483519957" fg:w="18156305"/><text x="42.9739%" y="1999.50"></text></g><g><title>__asan::Allocator::Allocate (40,624,691 samples, 0.15%)</title><rect x="42.6488%" y="2053" width="0.1511%" height="15" fill="rgb(216,172,19)" fg:x="11463338016" fg:w="40624691"/><text x="42.8988%" y="2063.50"></text></g><g><title>asm_exc_page_fault (21,861,494 samples, 0.08%)</title><rect x="42.7186%" y="2037" width="0.0813%" height="15" fill="rgb(227,6,42)" fg:x="11482101213" fg:w="21861494"/><text x="42.9686%" y="2047.50"></text></g><g><title>exc_page_fault (21,861,494 samples, 0.08%)</title><rect x="42.7186%" y="2021" width="0.0813%" height="15" fill="rgb(223,207,42)" fg:x="11482101213" fg:w="21861494"/><text x="42.9686%" y="2031.50"></text></g><g><title>do_user_addr_fault (21,861,494 samples, 0.08%)</title><rect x="42.7186%" y="2005" width="0.0813%" height="15" fill="rgb(246,138,30)" fg:x="11482101213" fg:w="21861494"/><text x="42.9686%" y="2015.50"></text></g><g><title>__asan::AsanThread::stack_top (3,003,653 samples, 0.01%)</title><rect x="42.8128%" y="2053" width="0.0112%" height="15" fill="rgb(251,199,47)" fg:x="11507427978" fg:w="3003653"/><text x="43.0628%" y="2063.50"></text></g><g><title>__asan::GetCurrentThread (2,972,367 samples, 0.01%)</title><rect x="42.8240%" y="2053" width="0.0111%" height="15" fill="rgb(228,218,44)" fg:x="11510431631" fg:w="2972367"/><text x="43.0740%" y="2063.50"></text></g><g><title>__interceptor_memcmp (2,767,180 samples, 0.01%)</title><rect x="42.8484%" y="2053" width="0.0103%" height="15" fill="rgb(220,68,6)" fg:x="11517000709" fg:w="2767180"/><text x="43.0984%" y="2063.50"></text></g><g><title>handle_mm_fault (4,104,558 samples, 0.02%)</title><rect x="42.8774%" y="1989" width="0.0153%" height="15" fill="rgb(240,60,26)" fg:x="11524801188" fg:w="4104558"/><text x="43.1274%" y="1999.50"></text></g><g><title>__handle_mm_fault (4,104,558 samples, 0.02%)</title><rect x="42.8774%" y="1973" width="0.0153%" height="15" fill="rgb(211,200,19)" fg:x="11524801188" fg:w="4104558"/><text x="43.1274%" y="1983.50"></text></g><g><title>handle_pte_fault (3,642,151 samples, 0.01%)</title><rect x="42.8792%" y="1957" width="0.0136%" height="15" fill="rgb(242,145,30)" fg:x="11525263595" fg:w="3642151"/><text x="43.1292%" y="1967.50"></text></g><g><title>do_pte_missing (3,642,151 samples, 0.01%)</title><rect x="42.8792%" y="1941" width="0.0136%" height="15" fill="rgb(225,64,13)" fg:x="11525263595" fg:w="3642151"/><text x="43.1292%" y="1951.50"></text></g><g><title>do_anonymous_page (3,642,151 samples, 0.01%)</title><rect x="42.8792%" y="1925" width="0.0136%" height="15" fill="rgb(218,103,35)" fg:x="11525263595" fg:w="3642151"/><text x="43.1292%" y="1935.50"></text></g><g><title>__memset_avx2_unaligned_erms (5,298,660 samples, 0.02%)</title><rect x="42.8756%" y="2053" width="0.0197%" height="15" fill="rgb(216,93,46)" fg:x="11524318439" fg:w="5298660"/><text x="43.1256%" y="2063.50"></text></g><g><title>asm_exc_page_fault (5,298,660 samples, 0.02%)</title><rect x="42.8756%" y="2037" width="0.0197%" height="15" fill="rgb(225,159,27)" fg:x="11524318439" fg:w="5298660"/><text x="43.1256%" y="2047.50"></text></g><g><title>exc_page_fault (5,298,660 samples, 0.02%)</title><rect x="42.8756%" y="2021" width="0.0197%" height="15" fill="rgb(225,204,11)" fg:x="11524318439" fg:w="5298660"/><text x="43.1256%" y="2031.50"></text></g><g><title>do_user_addr_fault (4,815,911 samples, 0.02%)</title><rect x="42.8774%" y="2005" width="0.0179%" height="15" fill="rgb(205,56,4)" fg:x="11524801188" fg:w="4815911"/><text x="43.1274%" y="2015.50"></text></g><g><title>__sanitizer::BufferedStackTrace::UnwindFast (19,885,340 samples, 0.07%)</title><rect x="42.9048%" y="2053" width="0.0740%" height="15" fill="rgb(206,6,35)" fg:x="11532149368" fg:w="19885340"/><text x="43.1548%" y="2063.50"></text></g><g><title>__sanitizer::BufferedStackTrace::UnwindImpl (2,936,318 samples, 0.01%)</title><rect x="42.9788%" y="2053" width="0.0109%" height="15" fill="rgb(247,73,52)" fg:x="11552034708" fg:w="2936318"/><text x="43.2288%" y="2063.50"></text></g><g><title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (34,985,734 samples, 0.13%)</title><rect x="42.9970%" y="2053" width="0.1302%" height="15" fill="rgb(246,97,4)" fg:x="11556946577" fg:w="34985734"/><text x="43.2470%" y="2063.50"></text></g><g><title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::find (10,318,389 samples, 0.04%)</title><rect x="43.1272%" y="2053" width="0.0384%" height="15" fill="rgb(212,37,15)" fg:x="11591932311" fg:w="10318389"/><text x="43.3772%" y="2063.50"></text></g><g><title>do_vmi_align_munmap (6,045,096 samples, 0.02%)</title><rect x="43.1702%" y="1909" width="0.0225%" height="15" fill="rgb(208,130,40)" fg:x="11603486081" fg:w="6045096"/><text x="43.4202%" y="1919.50"></text></g><g><title>do_vmi_munmap (7,054,999 samples, 0.03%)</title><rect x="43.1702%" y="1925" width="0.0262%" height="15" fill="rgb(236,55,29)" fg:x="11603486081" fg:w="7054999"/><text x="43.4202%" y="1935.50"></text></g><g><title>mmap_region (8,873,372 samples, 0.03%)</title><rect x="43.1702%" y="1941" width="0.0330%" height="15" fill="rgb(209,156,45)" fg:x="11603486081" fg:w="8873372"/><text x="43.4202%" y="1951.50"></text></g><g><title>__x64_sys_mmap (10,508,737 samples, 0.04%)</title><rect x="43.1656%" y="2005" width="0.0391%" height="15" fill="rgb(249,107,4)" fg:x="11602250700" fg:w="10508737"/><text x="43.4156%" y="2015.50"></text></g><g><title>ksys_mmap_pgoff (10,508,737 samples, 0.04%)</title><rect x="43.1656%" y="1989" width="0.0391%" height="15" fill="rgb(227,7,13)" fg:x="11602250700" fg:w="10508737"/><text x="43.4156%" y="1999.50"></text></g><g><title>vm_mmap_pgoff (10,508,737 samples, 0.04%)</title><rect x="43.1656%" y="1973" width="0.0391%" height="15" fill="rgb(250,129,14)" fg:x="11602250700" fg:w="10508737"/><text x="43.4156%" y="1983.50"></text></g><g><title>do_mmap (10,021,691 samples, 0.04%)</title><rect x="43.1674%" y="1957" width="0.0373%" height="15" fill="rgb(229,92,13)" fg:x="11602737746" fg:w="10021691"/><text x="43.4174%" y="1967.50"></text></g><g><title>entry_SYSCALL_64 (11,057,350 samples, 0.04%)</title><rect x="43.1656%" y="2037" width="0.0411%" height="15" fill="rgb(245,98,39)" fg:x="11602250700" fg:w="11057350"/><text x="43.4156%" y="2047.50"></text></g><g><title>do_syscall_64 (11,057,350 samples, 0.04%)</title><rect x="43.1656%" y="2021" width="0.0411%" height="15" fill="rgb(234,135,48)" fg:x="11602250700" fg:w="11057350"/><text x="43.4156%" y="2031.50"></text></g><g><title>__sanitizer::internal_mmap (11,360,230 samples, 0.04%)</title><rect x="43.1656%" y="2053" width="0.0423%" height="15" fill="rgb(230,98,28)" fg:x="11602250700" fg:w="11360230"/><text x="43.4156%" y="2063.50"></text></g><g><title>pthread_getspecific@@GLIBC_2.34 (4,295,160 samples, 0.02%)</title><rect x="43.2187%" y="2053" width="0.0160%" height="15" fill="rgb(223,121,0)" fg:x="11616526934" fg:w="4295160"/><text x="43.4687%" y="2063.50"></text></g><g><title>std::__cxx11::basic_istringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_istringstream (4,353,555 samples, 0.02%)</title><rect x="43.2362%" y="2053" width="0.0162%" height="15" fill="rgb(234,173,33)" fg:x="11621241160" fg:w="4353555"/><text x="43.4862%" y="2063.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (4,675,272 samples, 0.02%)</title><rect x="43.2524%" y="2053" width="0.0174%" height="15" fill="rgb(245,47,8)" fg:x="11625594715" fg:w="4675272"/><text x="43.5024%" y="2063.50"></text></g><g><title>__sanitizer::mem_is_zero (2,796,533 samples, 0.01%)</title><rect x="43.3013%" y="2037" width="0.0104%" height="15" fill="rgb(205,17,20)" fg:x="11638729090" fg:w="2796533"/><text x="43.5513%" y="2047.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (10,119,494 samples, 0.04%)</title><rect x="43.2772%" y="2053" width="0.0376%" height="15" fill="rgb(232,151,16)" fg:x="11632251319" fg:w="10119494"/><text x="43.5272%" y="2063.50"></text></g><g><title>run_io_trace (5,625,836,501 samples, 20.93%)</title><rect x="22.4011%" y="2069" width="20.9306%" height="15" fill="rgb(208,30,32)" fg:x="6021064341" fg:w="5625836501"/><text x="22.6511%" y="2079.50">run_io_trace</text></g><g><title>__GI___execve (2,742,951 samples, 0.01%)</title><rect x="43.3423%" y="2037" width="0.0102%" height="15" fill="rgb(254,26,3)" fg:x="11649756686" fg:w="2742951"/><text x="43.5923%" y="2047.50"></text></g><g><title>entry_SYSCALL_64 (2,742,951 samples, 0.01%)</title><rect x="43.3423%" y="2021" width="0.0102%" height="15" fill="rgb(240,177,30)" fg:x="11649756686" fg:w="2742951"/><text x="43.5923%" y="2031.50"></text></g><g><title>do_syscall_64 (2,742,951 samples, 0.01%)</title><rect x="43.3423%" y="2005" width="0.0102%" height="15" fill="rgb(248,76,44)" fg:x="11649756686" fg:w="2742951"/><text x="43.5923%" y="2015.50"></text></g><g><title>__x64_sys_execve (2,742,951 samples, 0.01%)</title><rect x="43.3423%" y="1989" width="0.0102%" height="15" fill="rgb(241,186,54)" fg:x="11649756686" fg:w="2742951"/><text x="43.5923%" y="1999.50"></text></g><g><title>do_execveat_common (2,742,951 samples, 0.01%)</title><rect x="43.3423%" y="1973" width="0.0102%" height="15" fill="rgb(249,171,29)" fg:x="11649756686" fg:w="2742951"/><text x="43.5923%" y="1983.50"></text></g><g><title>proc_readfd (5,989,973 samples, 0.02%)</title><rect x="43.3525%" y="1941" width="0.0223%" height="15" fill="rgb(237,151,44)" fg:x="11652499637" fg:w="5989973"/><text x="43.6025%" y="1951.50"></text></g><g><title>proc_readfd_common (5,989,973 samples, 0.02%)</title><rect x="43.3525%" y="1925" width="0.0223%" height="15" fill="rgb(228,174,30)" fg:x="11652499637" fg:w="5989973"/><text x="43.6025%" y="1935.50"></text></g><g><title>proc_fill_cache (4,616,720 samples, 0.02%)</title><rect x="43.3576%" y="1909" width="0.0172%" height="15" fill="rgb(252,14,37)" fg:x="11653872890" fg:w="4616720"/><text x="43.6076%" y="1919.50"></text></g><g><title>__GI___getdents64 (8,622,096 samples, 0.03%)</title><rect x="43.3525%" y="2037" width="0.0321%" height="15" fill="rgb(207,111,40)" fg:x="11652499637" fg:w="8622096"/><text x="43.6025%" y="2047.50"></text></g><g><title>entry_SYSCALL_64 (8,622,096 samples, 0.03%)</title><rect x="43.3525%" y="2021" width="0.0321%" height="15" fill="rgb(248,171,54)" fg:x="11652499637" fg:w="8622096"/><text x="43.6025%" y="2031.50"></text></g><g><title>do_syscall_64 (8,622,096 samples, 0.03%)</title><rect x="43.3525%" y="2005" width="0.0321%" height="15" fill="rgb(211,127,2)" fg:x="11652499637" fg:w="8622096"/><text x="43.6025%" y="2015.50"></text></g><g><title>__x64_sys_getdents64 (8,622,096 samples, 0.03%)</title><rect x="43.3525%" y="1989" width="0.0321%" height="15" fill="rgb(236,87,47)" fg:x="11652499637" fg:w="8622096"/><text x="43.6025%" y="1999.50"></text></g><g><title>__se_sys_getdents64 (8,622,096 samples, 0.03%)</title><rect x="43.3525%" y="1973" width="0.0321%" height="15" fill="rgb(223,190,45)" fg:x="11652499637" fg:w="8622096"/><text x="43.6025%" y="1983.50"></text></g><g><title>iterate_dir (8,622,096 samples, 0.03%)</title><rect x="43.3525%" y="1957" width="0.0321%" height="15" fill="rgb(215,5,16)" fg:x="11652499637" fg:w="8622096"/><text x="43.6025%" y="1967.50"></text></g><g><title>alloc_empty_file (2,991,214 samples, 0.01%)</title><rect x="43.4037%" y="1925" width="0.0111%" height="15" fill="rgb(252,82,33)" fg:x="11666251647" fg:w="2991214"/><text x="43.6537%" y="1935.50"></text></g><g><title>link_path_walk (2,812,976 samples, 0.01%)</title><rect x="43.4148%" y="1925" width="0.0105%" height="15" fill="rgb(247,213,44)" fg:x="11669242861" fg:w="2812976"/><text x="43.6648%" y="1935.50"></text></g><g><title>do_filp_open (7,491,981 samples, 0.03%)</title><rect x="43.4037%" y="1957" width="0.0279%" height="15" fill="rgb(205,196,44)" fg:x="11666251647" fg:w="7491981"/><text x="43.6537%" y="1967.50"></text></g><g><title>path_openat (7,491,981 samples, 0.03%)</title><rect x="43.4037%" y="1941" width="0.0279%" height="15" fill="rgb(237,96,54)" fg:x="11666251647" fg:w="7491981"/><text x="43.6537%" y="1951.50"></text></g><g><title>do_sys_openat2 (13,914,711 samples, 0.05%)</title><rect x="43.3966%" y="1973" width="0.0518%" height="15" fill="rgb(230,113,34)" fg:x="11664333430" fg:w="13914711"/><text x="43.6466%" y="1983.50"></text></g><g><title>__x64_sys_openat (14,404,543 samples, 0.05%)</title><rect x="43.3966%" y="1989" width="0.0536%" height="15" fill="rgb(221,224,12)" fg:x="11664333430" fg:w="14404543"/><text x="43.6466%" y="1999.50"></text></g><g><title>entry_SYSCALL_64 (16,964,557 samples, 0.06%)</title><rect x="43.3943%" y="2021" width="0.0631%" height="15" fill="rgb(219,112,44)" fg:x="11663715405" fg:w="16964557"/><text x="43.6443%" y="2031.50"></text></g><g><title>do_syscall_64 (16,346,532 samples, 0.06%)</title><rect x="43.3966%" y="2005" width="0.0608%" height="15" fill="rgb(210,31,13)" fg:x="11664333430" fg:w="16346532"/><text x="43.6466%" y="2015.50"></text></g><g><title>__open64_nocancel (19,416,213 samples, 0.07%)</title><rect x="43.3901%" y="2037" width="0.0722%" height="15" fill="rgb(230,25,16)" fg:x="11662591244" fg:w="19416213"/><text x="43.6401%" y="2047.50"></text></g><g><title>_dl_sysdep_start (3,954,208 samples, 0.01%)</title><rect x="43.4703%" y="2037" width="0.0147%" height="15" fill="rgb(246,108,53)" fg:x="11684152095" fg:w="3954208"/><text x="43.7203%" y="2047.50"></text></g><g><title>[unknown] (42,609,662 samples, 0.16%)</title><rect x="43.3320%" y="2053" width="0.1585%" height="15" fill="rgb(241,172,50)" fg:x="11646981907" fg:w="42609662"/><text x="43.5820%" y="2063.50"></text></g><g><title>_Fork (3,452,764 samples, 0.01%)</title><rect x="43.4905%" y="2053" width="0.0128%" height="15" fill="rgb(235,141,10)" fg:x="11689591569" fg:w="3452764"/><text x="43.7405%" y="2063.50"></text></g><g><title>__GI___execve (5,360,150 samples, 0.02%)</title><rect x="43.5034%" y="2053" width="0.0199%" height="15" fill="rgb(220,174,43)" fg:x="11693044333" fg:w="5360150"/><text x="43.7534%" y="2063.50"></text></g><g><title>entry_SYSCALL_64 (5,360,150 samples, 0.02%)</title><rect x="43.5034%" y="2037" width="0.0199%" height="15" fill="rgb(215,181,40)" fg:x="11693044333" fg:w="5360150"/><text x="43.7534%" y="2047.50"></text></g><g><title>do_syscall_64 (5,360,150 samples, 0.02%)</title><rect x="43.5034%" y="2021" width="0.0199%" height="15" fill="rgb(230,97,2)" fg:x="11693044333" fg:w="5360150"/><text x="43.7534%" y="2031.50"></text></g><g><title>__x64_sys_execve (5,360,150 samples, 0.02%)</title><rect x="43.5034%" y="2005" width="0.0199%" height="15" fill="rgb(211,25,27)" fg:x="11693044333" fg:w="5360150"/><text x="43.7534%" y="2015.50"></text></g><g><title>do_execveat_common (5,360,150 samples, 0.02%)</title><rect x="43.5034%" y="1989" width="0.0199%" height="15" fill="rgb(230,87,26)" fg:x="11693044333" fg:w="5360150"/><text x="43.7534%" y="1999.50"></text></g><g><title>bprm_execve (5,360,150 samples, 0.02%)</title><rect x="43.5034%" y="1973" width="0.0199%" height="15" fill="rgb(227,160,17)" fg:x="11693044333" fg:w="5360150"/><text x="43.7534%" y="1983.50"></text></g><g><title>exec_binprm (5,360,150 samples, 0.02%)</title><rect x="43.5034%" y="1957" width="0.0199%" height="15" fill="rgb(244,85,34)" fg:x="11693044333" fg:w="5360150"/><text x="43.7534%" y="1967.50"></text></g><g><title>load_elf_binary (5,360,150 samples, 0.02%)</title><rect x="43.5034%" y="1941" width="0.0199%" height="15" fill="rgb(207,70,0)" fg:x="11693044333" fg:w="5360150"/><text x="43.7534%" y="1951.50"></text></g><g><title>_dl_map_object (3,148,087 samples, 0.01%)</title><rect x="43.5387%" y="2053" width="0.0117%" height="15" fill="rgb(223,129,7)" fg:x="11702526194" fg:w="3148087"/><text x="43.7887%" y="2063.50"></text></g><g><title>sh (61,654,945 samples, 0.23%)</title><rect x="43.3317%" y="2069" width="0.2294%" height="15" fill="rgb(246,105,7)" fg:x="11646900842" fg:w="61654945"/><text x="43.5817%" y="2079.50"></text></g><g><title>__GI___libc_write (3,926,642 samples, 0.01%)</title><rect x="43.5758%" y="2037" width="0.0146%" height="15" fill="rgb(215,154,42)" fg:x="11712512039" fg:w="3926642"/><text x="43.8258%" y="2047.50"></text></g><g><title>entry_SYSCALL_64 (3,926,642 samples, 0.01%)</title><rect x="43.5758%" y="2021" width="0.0146%" height="15" fill="rgb(220,215,30)" fg:x="11712512039" fg:w="3926642"/><text x="43.8258%" y="2031.50"></text></g><g><title>do_syscall_64 (3,926,642 samples, 0.01%)</title><rect x="43.5758%" y="2005" width="0.0146%" height="15" fill="rgb(228,81,51)" fg:x="11712512039" fg:w="3926642"/><text x="43.8258%" y="2015.50"></text></g><g><title>__x64_sys_write (3,926,642 samples, 0.01%)</title><rect x="43.5758%" y="1989" width="0.0146%" height="15" fill="rgb(247,71,54)" fg:x="11712512039" fg:w="3926642"/><text x="43.8258%" y="1999.50"></text></g><g><title>ksys_write (3,926,642 samples, 0.01%)</title><rect x="43.5758%" y="1973" width="0.0146%" height="15" fill="rgb(234,176,34)" fg:x="11712512039" fg:w="3926642"/><text x="43.8258%" y="1983.50"></text></g><g><title>vfs_write (3,926,642 samples, 0.01%)</title><rect x="43.5758%" y="1957" width="0.0146%" height="15" fill="rgb(241,103,54)" fg:x="11712512039" fg:w="3926642"/><text x="43.8258%" y="1967.50"></text></g><g><title>sock_write_iter (3,521,459 samples, 0.01%)</title><rect x="43.5773%" y="1941" width="0.0131%" height="15" fill="rgb(228,22,34)" fg:x="11712917222" fg:w="3521459"/><text x="43.8273%" y="1951.50"></text></g><g><title>__sock_sendmsg (3,239,582 samples, 0.01%)</title><rect x="43.5784%" y="1925" width="0.0121%" height="15" fill="rgb(241,179,48)" fg:x="11713199099" fg:w="3239582"/><text x="43.8284%" y="1935.50"></text></g><g><title>inet_sendmsg (3,239,582 samples, 0.01%)</title><rect x="43.5784%" y="1909" width="0.0121%" height="15" fill="rgb(235,167,37)" fg:x="11713199099" fg:w="3239582"/><text x="43.8284%" y="1919.50"></text></g><g><title>tcp_sendmsg (3,239,582 samples, 0.01%)</title><rect x="43.5784%" y="1893" width="0.0121%" height="15" fill="rgb(213,109,30)" fg:x="11713199099" fg:w="3239582"/><text x="43.8284%" y="1903.50"></text></g><g><title>tcp_sendmsg_locked (3,239,582 samples, 0.01%)</title><rect x="43.5784%" y="1877" width="0.0121%" height="15" fill="rgb(222,172,16)" fg:x="11713199099" fg:w="3239582"/><text x="43.8284%" y="1887.50"></text></g><g><title>[unknown] (5,234,093 samples, 0.02%)</title><rect x="43.5719%" y="2053" width="0.0195%" height="15" fill="rgb(233,192,5)" fg:x="11711463910" fg:w="5234093"/><text x="43.8219%" y="2063.50"></text></g><g><title>sshd (12,555,821 samples, 0.05%)</title><rect x="43.5671%" y="2069" width="0.0467%" height="15" fill="rgb(247,189,41)" fg:x="11710167064" fg:w="12555821"/><text x="43.8171%" y="2079.50"></text></g><g><title>__common_interrupt (23,413,806 samples, 0.09%)</title><rect x="43.6138%" y="2053" width="0.0871%" height="15" fill="rgb(218,134,47)" fg:x="11722722885" fg:w="23413806"/><text x="43.8638%" y="2063.50"></text></g><g><title>__kprobes_text_end (8,737,131 samples, 0.03%)</title><rect x="43.7009%" y="2053" width="0.0325%" height="15" fill="rgb(216,29,3)" fg:x="11746136691" fg:w="8737131"/><text x="43.9509%" y="2063.50"></text></g><g><title>__switch_to (2,852,742 samples, 0.01%)</title><rect x="43.7371%" y="2053" width="0.0106%" height="15" fill="rgb(246,140,12)" fg:x="11755878372" fg:w="2852742"/><text x="43.9871%" y="2063.50"></text></g><g><title>__switch_to_asm (3,036,544 samples, 0.01%)</title><rect x="43.7478%" y="2053" width="0.0113%" height="15" fill="rgb(230,136,11)" fg:x="11758731114" fg:w="3036544"/><text x="43.9978%" y="2063.50"></text></g><g><title>__sysvec_apic_timer_interrupt (50,607,873 samples, 0.19%)</title><rect x="43.7591%" y="2053" width="0.1883%" height="15" fill="rgb(247,22,47)" fg:x="11761767658" fg:w="50607873"/><text x="44.0091%" y="2063.50"></text></g><g><title>common_interrupt (7,936,632 samples, 0.03%)</title><rect x="43.9505%" y="2053" width="0.0295%" height="15" fill="rgb(218,84,22)" fg:x="11813236726" fg:w="7936632"/><text x="44.2005%" y="2063.50"></text></g><g><title>error_entry (6,243,716 samples, 0.02%)</title><rect x="43.9801%" y="2053" width="0.0232%" height="15" fill="rgb(216,87,39)" fg:x="11821173358" fg:w="6243716"/><text x="44.2301%" y="2063.50"></text></g><g><title>irq_enter_rcu (21,247,114 samples, 0.08%)</title><rect x="44.0033%" y="2053" width="0.0790%" height="15" fill="rgb(221,178,8)" fg:x="11827417074" fg:w="21247114"/><text x="44.2533%" y="2063.50"></text></g><g><title>__flush_smp_call_function_queue (5,337,601 samples, 0.02%)</title><rect x="44.2728%" y="1989" width="0.0199%" height="15" fill="rgb(230,42,11)" fg:x="11899865829" fg:w="5337601"/><text x="44.5228%" y="1999.50"></text></g><g><title>asm_common_interrupt (20,370,370 samples, 0.08%)</title><rect x="44.3102%" y="1973" width="0.0758%" height="15" fill="rgb(237,229,4)" fg:x="11909911344" fg:w="20370370"/><text x="44.5602%" y="1983.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (229,769,518 samples, 0.85%)</title><rect x="44.3860%" y="1973" width="0.8548%" height="15" fill="rgb(222,31,33)" fg:x="11930281714" fg:w="229769518"/><text x="44.6360%" y="1983.50"></text></g><g><title>asm_sysvec_call_function_single (1,449,997,079 samples, 5.39%)</title><rect x="45.2409%" y="1973" width="5.3946%" height="15" fill="rgb(210,17,39)" fg:x="12160051232" fg:w="1449997079"/><text x="45.4909%" y="1983.50">asm_sys..</text></g><g><title>asm_sysvec_reschedule_ipi (8,404,435 samples, 0.03%)</title><rect x="50.6355%" y="1973" width="0.0313%" height="15" fill="rgb(244,93,20)" fg:x="13610048311" fg:w="8404435"/><text x="50.8855%" y="1983.50"></text></g><g><title>common_interrupt (6,206,693 samples, 0.02%)</title><rect x="50.6668%" y="1973" width="0.0231%" height="15" fill="rgb(210,40,47)" fg:x="13618452746" fg:w="6206693"/><text x="50.9168%" y="1983.50"></text></g><g><title>acpi_processor_ffh_cstate_enter (94,117,302 samples, 0.35%)</title><rect x="51.4286%" y="1925" width="0.3502%" height="15" fill="rgb(239,211,47)" fg:x="13823215505" fg:w="94117302"/><text x="51.6786%" y="1935.50"></text></g><g><title>acpi_idle_do_entry (205,295,127 samples, 0.76%)</title><rect x="51.4264%" y="1941" width="0.7638%" height="15" fill="rgb(251,223,49)" fg:x="13822629160" fg:w="205295127"/><text x="51.6764%" y="1951.50"></text></g><g><title>io_idle (110,591,480 samples, 0.41%)</title><rect x="51.7787%" y="1925" width="0.4114%" height="15" fill="rgb(221,149,5)" fg:x="13917332807" fg:w="110591480"/><text x="52.0287%" y="1935.50"></text></g><g><title>acpi_idle_enter (209,148,892 samples, 0.78%)</title><rect x="51.4137%" y="1957" width="0.7781%" height="15" fill="rgb(219,224,51)" fg:x="13819227157" fg:w="209148892"/><text x="51.6637%" y="1967.50"></text></g><g><title>_raw_spin_lock (9,692,096 samples, 0.04%)</title><rect x="52.5194%" y="1909" width="0.0361%" height="15" fill="rgb(223,7,8)" fg:x="14116422725" fg:w="9692096"/><text x="52.7694%" y="1919.50"></text></g><g><title>__handle_irq_event_percpu (3,533,508 samples, 0.01%)</title><rect x="52.8722%" y="1893" width="0.0131%" height="15" fill="rgb(241,217,22)" fg:x="14211252098" fg:w="3533508"/><text x="53.1222%" y="1903.50"></text></g><g><title>__x86_indirect_thunk_r11 (3,685,096 samples, 0.01%)</title><rect x="52.8854%" y="1893" width="0.0137%" height="15" fill="rgb(248,209,0)" fg:x="14214785606" fg:w="3685096"/><text x="53.1354%" y="1903.50"></text></g><g><title>_raw_spin_lock (19,805,257 samples, 0.07%)</title><rect x="52.8991%" y="1893" width="0.0737%" height="15" fill="rgb(217,205,4)" fg:x="14218470702" fg:w="19805257"/><text x="53.1491%" y="1903.50"></text></g><g><title>apic_ack_irq (67,949,212 samples, 0.25%)</title><rect x="52.9817%" y="1893" width="0.2528%" height="15" fill="rgb(228,124,39)" fg:x="14240670684" fg:w="67949212"/><text x="53.2317%" y="1903.50"></text></g><g><title>cpus_share_cache (3,269,674 samples, 0.01%)</title><rect x="55.6770%" y="1685" width="0.0122%" height="15" fill="rgb(250,116,42)" fg:x="14965122955" fg:w="3269674"/><text x="55.9270%" y="1695.50"></text></g><g><title>call_function_single_prep_ipi (3,032,422 samples, 0.01%)</title><rect x="55.6922%" y="1637" width="0.0113%" height="15" fill="rgb(223,202,9)" fg:x="14969203478" fg:w="3032422"/><text x="55.9422%" y="1647.50"></text></g><g><title>blk_mq_complete_request_remote (11,819,808 samples, 0.04%)</title><rect x="55.6665%" y="1701" width="0.0440%" height="15" fill="rgb(242,222,40)" fg:x="14962301432" fg:w="11819808"/><text x="55.9165%" y="1711.50"></text></g><g><title>smp_call_function_single_async (4,917,762 samples, 0.02%)</title><rect x="55.6922%" y="1685" width="0.0183%" height="15" fill="rgb(229,99,46)" fg:x="14969203478" fg:w="4917762"/><text x="55.9422%" y="1695.50"></text></g><g><title>generic_exec_single (4,917,762 samples, 0.02%)</title><rect x="55.6922%" y="1669" width="0.0183%" height="15" fill="rgb(225,56,46)" fg:x="14969203478" fg:w="4917762"/><text x="55.9422%" y="1679.50"></text></g><g><title>__smp_call_single_queue (4,917,762 samples, 0.02%)</title><rect x="55.6922%" y="1653" width="0.0183%" height="15" fill="rgb(227,94,5)" fg:x="14969203478" fg:w="4917762"/><text x="55.9422%" y="1663.50"></text></g><g><title>scsi_done (13,426,677 samples, 0.05%)</title><rect x="55.6609%" y="1749" width="0.0500%" height="15" fill="rgb(205,112,38)" fg:x="14960806683" fg:w="13426677"/><text x="55.9109%" y="1759.50"></text></g><g><title>scsi_done_internal (13,426,677 samples, 0.05%)</title><rect x="55.6609%" y="1733" width="0.0500%" height="15" fill="rgb(231,133,46)" fg:x="14960806683" fg:w="13426677"/><text x="55.9109%" y="1743.50"></text></g><g><title>blk_mq_complete_request (11,931,928 samples, 0.04%)</title><rect x="55.6665%" y="1717" width="0.0444%" height="15" fill="rgb(217,16,9)" fg:x="14962301432" fg:w="11931928"/><text x="55.9165%" y="1727.50"></text></g><g><title>ata_scsi_qc_complete (13,879,085 samples, 0.05%)</title><rect x="55.6598%" y="1765" width="0.0516%" height="15" fill="rgb(249,173,9)" fg:x="14960516102" fg:w="13879085"/><text x="55.9098%" y="1775.50"></text></g><g><title>iommu_v1_unmap_pages (9,555,576 samples, 0.04%)</title><rect x="55.7150%" y="1669" width="0.0356%" height="15" fill="rgb(205,163,53)" fg:x="14975340572" fg:w="9555576"/><text x="55.9650%" y="1679.50"></text></g><g><title>fetch_pte (8,461,539 samples, 0.03%)</title><rect x="55.7191%" y="1653" width="0.0315%" height="15" fill="rgb(217,54,41)" fg:x="14976434609" fg:w="8461539"/><text x="55.9691%" y="1663.50"></text></g><g><title>amd_iommu_unmap_pages (10,078,734 samples, 0.04%)</title><rect x="55.7142%" y="1685" width="0.0375%" height="15" fill="rgb(228,216,12)" fg:x="14975120637" fg:w="10078734"/><text x="55.9642%" y="1695.50"></text></g><g><title>__iommu_unmap (10,479,606 samples, 0.04%)</title><rect x="55.7142%" y="1701" width="0.0390%" height="15" fill="rgb(244,228,15)" fg:x="14975120637" fg:w="10479606"/><text x="55.9642%" y="1711.50"></text></g><g><title>dma_unmap_sg_attrs (11,687,177 samples, 0.04%)</title><rect x="55.7115%" y="1765" width="0.0435%" height="15" fill="rgb(221,176,53)" fg:x="14974395187" fg:w="11687177"/><text x="55.9615%" y="1775.50"></text></g><g><title>iommu_dma_unmap_sg (11,687,177 samples, 0.04%)</title><rect x="55.7115%" y="1749" width="0.0435%" height="15" fill="rgb(205,94,34)" fg:x="14974395187" fg:w="11687177"/><text x="55.9615%" y="1759.50"></text></g><g><title>__iommu_dma_unmap (11,272,089 samples, 0.04%)</title><rect x="55.7130%" y="1733" width="0.0419%" height="15" fill="rgb(213,110,48)" fg:x="14974810275" fg:w="11272089"/><text x="55.9630%" y="1743.50"></text></g><g><title>iommu_unmap_fast (10,961,727 samples, 0.04%)</title><rect x="55.7142%" y="1717" width="0.0408%" height="15" fill="rgb(236,142,28)" fg:x="14975120637" fg:w="10961727"/><text x="55.9642%" y="1727.50"></text></g><g><title>ahci_qc_complete (37,643,077 samples, 0.14%)</title><rect x="55.6193%" y="1829" width="0.1400%" height="15" fill="rgb(225,135,29)" fg:x="14949608284" fg:w="37643077"/><text x="55.8693%" y="1839.50"></text></g><g><title>ata_qc_complete_multiple (28,008,793 samples, 0.10%)</title><rect x="55.6551%" y="1813" width="0.1042%" height="15" fill="rgb(252,45,31)" fg:x="14959242568" fg:w="28008793"/><text x="55.9051%" y="1823.50"></text></g><g><title>ata_qc_complete (28,008,793 samples, 0.10%)</title><rect x="55.6551%" y="1797" width="0.1042%" height="15" fill="rgb(211,187,50)" fg:x="14959242568" fg:w="28008793"/><text x="55.9051%" y="1807.50"></text></g><g><title>__ata_qc_complete (28,008,793 samples, 0.10%)</title><rect x="55.6551%" y="1781" width="0.1042%" height="15" fill="rgb(229,109,7)" fg:x="14959242568" fg:w="28008793"/><text x="55.9051%" y="1791.50"></text></g><g><title>ahci_multi_irqs_intr_hard (662,748,289 samples, 2.47%)</title><rect x="53.2975%" y="1861" width="2.4657%" height="15" fill="rgb(251,131,51)" fg:x="14325567456" fg:w="662748289"/><text x="53.5475%" y="1871.50">ah..</text></g><g><title>ahci_handle_port_interrupt (38,707,461 samples, 0.14%)</title><rect x="55.6193%" y="1845" width="0.1440%" height="15" fill="rgb(251,180,35)" fg:x="14949608284" fg:w="38707461"/><text x="55.8693%" y="1855.50"></text></g><g><title>__handle_irq_event_percpu (712,589,403 samples, 2.65%)</title><rect x="53.2659%" y="1877" width="2.6512%" height="15" fill="rgb(211,46,32)" fg:x="14317052758" fg:w="712589403"/><text x="53.5159%" y="1887.50">__..</text></g><g><title>irq_int_handler (40,934,380 samples, 0.15%)</title><rect x="55.7647%" y="1861" width="0.1523%" height="15" fill="rgb(248,123,17)" fg:x="14988707781" fg:w="40934380"/><text x="56.0147%" y="1871.50"></text></g><g><title>atomic_notifier_call_chain (40,585,876 samples, 0.15%)</title><rect x="55.7660%" y="1845" width="0.1510%" height="15" fill="rgb(227,141,18)" fg:x="14989056285" fg:w="40585876"/><text x="56.0160%" y="1855.50"></text></g><g><title>notifier_call_chain (40,069,538 samples, 0.15%)</title><rect x="55.7679%" y="1829" width="0.1491%" height="15" fill="rgb(216,102,9)" fg:x="14989572623" fg:w="40069538"/><text x="56.0179%" y="1839.50"></text></g><g><title>mlx5_eq_comp_int (38,147,344 samples, 0.14%)</title><rect x="55.7751%" y="1813" width="0.1419%" height="15" fill="rgb(253,47,13)" fg:x="14991494817" fg:w="38147344"/><text x="56.0251%" y="1823.50"></text></g><g><title>_raw_spin_unlock (12,383,779 samples, 0.05%)</title><rect x="55.9226%" y="1877" width="0.0461%" height="15" fill="rgb(226,93,23)" fg:x="15031154824" fg:w="12383779"/><text x="56.1726%" y="1887.50"></text></g><g><title>ahci_multi_irqs_intr_hard (32,240,478 samples, 0.12%)</title><rect x="55.9687%" y="1877" width="0.1199%" height="15" fill="rgb(247,104,17)" fg:x="15043538603" fg:w="32240478"/><text x="56.2187%" y="1887.50"></text></g><g><title>handle_irq_event (768,809,854 samples, 2.86%)</title><rect x="53.2345%" y="1893" width="2.8603%" height="15" fill="rgb(233,203,26)" fg:x="14308619896" fg:w="768809854"/><text x="53.4845%" y="1903.50">ha..</text></g><g><title>apic_ack_irq (21,560,061 samples, 0.08%)</title><rect x="56.3471%" y="1877" width="0.0802%" height="15" fill="rgb(244,98,49)" fg:x="15145230038" fg:w="21560061"/><text x="56.5971%" y="1887.50"></text></g><g><title>native_apic_mem_eoi (5,213,374 samples, 0.02%)</title><rect x="56.4079%" y="1861" width="0.0194%" height="15" fill="rgb(235,134,22)" fg:x="15161576725" fg:w="5213374"/><text x="56.6579%" y="1871.50"></text></g><g><title>handle_edge_irq (1,068,581,940 samples, 3.98%)</title><rect x="52.5555%" y="1909" width="3.9756%" height="15" fill="rgb(221,70,32)" fg:x="14126114821" fg:w="1068581940"/><text x="52.8055%" y="1919.50">hand..</text></g><g><title>irq_chip_ack_parent (117,267,011 samples, 0.44%)</title><rect x="56.0948%" y="1893" width="0.4363%" height="15" fill="rgb(238,15,50)" fg:x="15077429750" fg:w="117267011"/><text x="56.3448%" y="1903.50"></text></g><g><title>native_apic_mem_eoi (27,906,662 samples, 0.10%)</title><rect x="56.4273%" y="1877" width="0.1038%" height="15" fill="rgb(215,221,48)" fg:x="15166790099" fg:w="27906662"/><text x="56.6773%" y="1887.50"></text></g><g><title>handle_irq_event (9,692,466 samples, 0.04%)</title><rect x="56.5311%" y="1909" width="0.0361%" height="15" fill="rgb(236,73,3)" fg:x="15194696761" fg:w="9692466"/><text x="56.7811%" y="1919.50"></text></g><g><title>__common_interrupt (1,191,852,710 samples, 4.43%)</title><rect x="52.3688%" y="1925" width="4.4342%" height="15" fill="rgb(250,107,11)" fg:x="14075925581" fg:w="1191852710"/><text x="52.6188%" y="1935.50">__com..</text></g><g><title>irq_chip_ack_parent (63,389,064 samples, 0.24%)</title><rect x="56.5672%" y="1909" width="0.2358%" height="15" fill="rgb(242,39,14)" fg:x="15204389227" fg:w="63389064"/><text x="56.8172%" y="1919.50"></text></g><g><title>ct_irq_enter (15,109,588 samples, 0.06%)</title><rect x="56.8081%" y="1925" width="0.0562%" height="15" fill="rgb(248,164,37)" fg:x="15269150320" fg:w="15109588"/><text x="57.0581%" y="1935.50"></text></g><g><title>handle_edge_irq (28,507,243 samples, 0.11%)</title><rect x="56.8643%" y="1925" width="0.1061%" height="15" fill="rgb(217,60,12)" fg:x="15284259908" fg:w="28507243"/><text x="57.1143%" y="1935.50"></text></g><g><title>sched_clock (76,569,099 samples, 0.28%)</title><rect x="59.6953%" y="1877" width="0.2849%" height="15" fill="rgb(240,125,29)" fg:x="16045178130" fg:w="76569099"/><text x="59.9453%" y="1887.50"></text></g><g><title>sched_clock_noinstr (72,392,496 samples, 0.27%)</title><rect x="59.7108%" y="1861" width="0.2693%" height="15" fill="rgb(208,207,28)" fg:x="16049354733" fg:w="72392496"/><text x="59.9608%" y="1871.50"></text></g><g><title>native_sched_clock (72,392,496 samples, 0.27%)</title><rect x="59.7108%" y="1845" width="0.2693%" height="15" fill="rgb(209,159,27)" fg:x="16049354733" fg:w="72392496"/><text x="59.9608%" y="1855.50"></text></g><g><title>irqtime_account_irq (769,071,752 samples, 2.86%)</title><rect x="57.1270%" y="1909" width="2.8613%" height="15" fill="rgb(251,176,53)" fg:x="15354854216" fg:w="769071752"/><text x="57.3770%" y="1919.50">ir..</text></g><g><title>sched_clock_cpu (80,396,453 samples, 0.30%)</title><rect x="59.6891%" y="1893" width="0.2991%" height="15" fill="rgb(211,85,7)" fg:x="16043529515" fg:w="80396453"/><text x="59.9391%" y="1903.50"></text></g><g><title>ktime_get (10,769,690 samples, 0.04%)</title><rect x="59.9882%" y="1909" width="0.0401%" height="15" fill="rgb(216,64,54)" fg:x="16123925968" fg:w="10769690"/><text x="60.2382%" y="1919.50"></text></g><g><title>nr_iowait_cpu (14,608,756 samples, 0.05%)</title><rect x="60.0283%" y="1909" width="0.0544%" height="15" fill="rgb(217,54,24)" fg:x="16134695658" fg:w="14608756"/><text x="60.2783%" y="1919.50"></text></g><g><title>sched_clock_cpu (8,884,937 samples, 0.03%)</title><rect x="60.0827%" y="1909" width="0.0331%" height="15" fill="rgb(208,206,53)" fg:x="16149304414" fg:w="8884937"/><text x="60.3327%" y="1919.50"></text></g><g><title>sched_clock_idle_wakeup_event (6,156,957 samples, 0.02%)</title><rect x="60.1157%" y="1909" width="0.0229%" height="15" fill="rgb(251,74,39)" fg:x="16158189351" fg:w="6156957"/><text x="60.3657%" y="1919.50"></text></g><g><title>tick_check_oneshot_broadcast_this_cpu (31,782,211 samples, 0.12%)</title><rect x="60.1386%" y="1909" width="0.1182%" height="15" fill="rgb(226,47,5)" fg:x="16164346308" fg:w="31782211"/><text x="60.3886%" y="1919.50"></text></g><g><title>ktime_get (175,361,457 samples, 0.65%)</title><rect x="60.5658%" y="1893" width="0.6524%" height="15" fill="rgb(234,111,33)" fg:x="16279163929" fg:w="175361457"/><text x="60.8158%" y="1903.50"></text></g><g><title>read_tsc (138,040,190 samples, 0.51%)</title><rect x="60.7047%" y="1877" width="0.5136%" height="15" fill="rgb(251,14,10)" fg:x="16316485196" fg:w="138040190"/><text x="60.9547%" y="1887.50"></text></g><g><title>nr_iowait_cpu (50,056,017 samples, 0.19%)</title><rect x="61.2182%" y="1893" width="0.1862%" height="15" fill="rgb(232,43,0)" fg:x="16454525386" fg:w="50056017"/><text x="61.4682%" y="1903.50"></text></g><g><title>read_tsc (36,439,469 samples, 0.14%)</title><rect x="61.4045%" y="1893" width="0.1356%" height="15" fill="rgb(222,68,43)" fg:x="16504581403" fg:w="36439469"/><text x="61.6545%" y="1903.50"></text></g><g><title>sched_clock_idle_wakeup_event (6,459,054 samples, 0.02%)</title><rect x="61.5400%" y="1893" width="0.0240%" height="15" fill="rgb(217,24,23)" fg:x="16541020872" fg:w="6459054"/><text x="61.7900%" y="1903.50"></text></g><g><title>tick_check_oneshot_broadcast_this_cpu (322,502,479 samples, 1.20%)</title><rect x="61.5641%" y="1893" width="1.1999%" height="15" fill="rgb(229,209,14)" fg:x="16547479926" fg:w="322502479"/><text x="61.8141%" y="1903.50"></text></g><g><title>tick_do_update_jiffies64 (25,339,218 samples, 0.09%)</title><rect x="62.7639%" y="1893" width="0.0943%" height="15" fill="rgb(250,149,48)" fg:x="16869982405" fg:w="25339218"/><text x="63.0139%" y="1903.50"></text></g><g><title>tick_irq_enter (700,707,065 samples, 2.61%)</title><rect x="60.2599%" y="1909" width="2.6069%" height="15" fill="rgb(210,120,37)" fg:x="16196930882" fg:w="700707065"/><text x="60.5099%" y="1919.50">ti..</text></g><g><title>irq_enter_rcu (1,589,011,615 samples, 5.91%)</title><rect x="56.9704%" y="1925" width="5.9118%" height="15" fill="rgb(210,21,8)" fg:x="15312767151" fg:w="1589011615"/><text x="57.2204%" y="1935.50">irq_ente..</text></g><g><title>touch_softlockup_watchdog_sched (4,140,819 samples, 0.02%)</title><rect x="62.8668%" y="1909" width="0.0154%" height="15" fill="rgb(243,145,7)" fg:x="16897637947" fg:w="4140819"/><text x="63.1168%" y="1919.50"></text></g><g><title>__blk_mq_end_request (2,881,986 samples, 0.01%)</title><rect x="62.8924%" y="1797" width="0.0107%" height="15" fill="rgb(238,178,32)" fg:x="16904522836" fg:w="2881986"/><text x="63.1424%" y="1807.50"></text></g><g><title>__mod_lruvec_page_state (6,457,047 samples, 0.02%)</title><rect x="62.9761%" y="1701" width="0.0240%" height="15" fill="rgb(222,4,10)" fg:x="16927026521" fg:w="6457047"/><text x="63.2261%" y="1711.50"></text></g><g><title>__fprop_add_percpu_max (15,204,523 samples, 0.06%)</title><rect x="63.0069%" y="1685" width="0.0566%" height="15" fill="rgb(239,7,37)" fg:x="16935288454" fg:w="15204523"/><text x="63.2569%" y="1695.50"></text></g><g><title>percpu_counter_add_batch (10,527,570 samples, 0.04%)</title><rect x="63.0243%" y="1669" width="0.0392%" height="15" fill="rgb(215,31,37)" fg:x="16939965407" fg:w="10527570"/><text x="63.2743%" y="1679.50"></text></g><g><title>__wb_writeout_add (17,984,001 samples, 0.07%)</title><rect x="63.0032%" y="1701" width="0.0669%" height="15" fill="rgb(224,83,33)" fg:x="16934310338" fg:w="17984001"/><text x="63.2532%" y="1711.50"></text></g><g><title>xas_clear_mark (3,460,595 samples, 0.01%)</title><rect x="63.0701%" y="1685" width="0.0129%" height="15" fill="rgb(239,55,3)" fg:x="16952294339" fg:w="3460595"/><text x="63.3201%" y="1695.50"></text></g><g><title>__xa_clear_mark (5,942,650 samples, 0.02%)</title><rect x="63.0701%" y="1701" width="0.0221%" height="15" fill="rgb(247,92,11)" fg:x="16952294339" fg:w="5942650"/><text x="63.3201%" y="1711.50"></text></g><g><title>_raw_spin_lock_irqsave (3,472,478 samples, 0.01%)</title><rect x="63.0923%" y="1701" width="0.0129%" height="15" fill="rgb(239,200,7)" fg:x="16958236989" fg:w="3472478"/><text x="63.3423%" y="1711.50"></text></g><g><title>__folio_end_writeback (50,751,286 samples, 0.19%)</title><rect x="62.9569%" y="1717" width="0.1888%" height="15" fill="rgb(227,115,8)" fg:x="16921866427" fg:w="50751286"/><text x="63.2069%" y="1727.50"></text></g><g><title>ext4_end_bio (63,218,720 samples, 0.24%)</title><rect x="62.9121%" y="1765" width="0.2352%" height="15" fill="rgb(215,189,27)" fg:x="16909825903" fg:w="63218720"/><text x="63.1621%" y="1775.50"></text></g><g><title>ext4_finish_bio (62,403,802 samples, 0.23%)</title><rect x="62.9152%" y="1749" width="0.2322%" height="15" fill="rgb(251,216,39)" fg:x="16910640821" fg:w="62403802"/><text x="63.1652%" y="1759.50"></text></g><g><title>folio_end_writeback (53,830,686 samples, 0.20%)</title><rect x="62.9471%" y="1733" width="0.2003%" height="15" fill="rgb(207,29,47)" fg:x="16919213937" fg:w="53830686"/><text x="63.1971%" y="1743.50"></text></g><g><title>bio_endio (68,668,461 samples, 0.26%)</title><rect x="62.9049%" y="1781" width="0.2555%" height="15" fill="rgb(210,71,34)" fg:x="16907868995" fg:w="68668461"/><text x="63.1549%" y="1791.50"></text></g><g><title>mpage_end_io (3,492,833 samples, 0.01%)</title><rect x="63.1473%" y="1765" width="0.0130%" height="15" fill="rgb(253,217,51)" fg:x="16973044623" fg:w="3492833"/><text x="63.3973%" y="1775.50"></text></g><g><title>__read_end_io (3,492,833 samples, 0.01%)</title><rect x="63.1473%" y="1749" width="0.0130%" height="15" fill="rgb(222,117,46)" fg:x="16973044623" fg:w="3492833"/><text x="63.3973%" y="1759.50"></text></g><g><title>scsi_end_request (72,238,678 samples, 0.27%)</title><rect x="62.8924%" y="1813" width="0.2688%" height="15" fill="rgb(226,132,6)" fg:x="16904522836" fg:w="72238678"/><text x="63.1424%" y="1823.50"></text></g><g><title>blk_update_request (68,892,519 samples, 0.26%)</title><rect x="62.9049%" y="1797" width="0.2563%" height="15" fill="rgb(254,145,51)" fg:x="16907868995" fg:w="68892519"/><text x="63.1549%" y="1807.50"></text></g><g><title>blk_done_softirq (74,696,995 samples, 0.28%)</title><rect x="62.8836%" y="1877" width="0.2779%" height="15" fill="rgb(231,199,27)" fg:x="16902140649" fg:w="74696995"/><text x="63.1336%" y="1887.50"></text></g><g><title>scsi_complete (74,696,995 samples, 0.28%)</title><rect x="62.8836%" y="1861" width="0.2779%" height="15" fill="rgb(245,158,14)" fg:x="16902140649" fg:w="74696995"/><text x="63.1336%" y="1871.50"></text></g><g><title>scsi_finish_command (73,542,022 samples, 0.27%)</title><rect x="62.8878%" y="1845" width="0.2736%" height="15" fill="rgb(240,113,14)" fg:x="16903295622" fg:w="73542022"/><text x="63.1378%" y="1855.50"></text></g><g><title>scsi_io_completion (72,314,808 samples, 0.27%)</title><rect x="62.8924%" y="1829" width="0.2690%" height="15" fill="rgb(210,20,13)" fg:x="16904522836" fg:w="72314808"/><text x="63.1424%" y="1839.50"></text></g><g><title>__kprobes_text_end (78,807,615 samples, 0.29%)</title><rect x="62.8822%" y="1893" width="0.2932%" height="15" fill="rgb(241,144,13)" fg:x="16901778766" fg:w="78807615"/><text x="63.1322%" y="1903.50"></text></g><g><title>__irq_exit_rcu (80,389,038 samples, 0.30%)</title><rect x="62.8822%" y="1909" width="0.2991%" height="15" fill="rgb(235,43,34)" fg:x="16901778766" fg:w="80389038"/><text x="63.1322%" y="1919.50"></text></g><g><title>irq_exit_rcu (80,451,242 samples, 0.30%)</title><rect x="62.8822%" y="1925" width="0.2993%" height="15" fill="rgb(208,36,20)" fg:x="16901778766" fg:w="80451242"/><text x="63.1322%" y="1935.50"></text></g><g><title>ct_irq_enter (11,505,035 samples, 0.04%)</title><rect x="63.3560%" y="1909" width="0.0428%" height="15" fill="rgb(239,204,10)" fg:x="17029131841" fg:w="11505035"/><text x="63.6060%" y="1919.50"></text></g><g><title>ct_nmi_enter (10,352,639 samples, 0.04%)</title><rect x="63.3603%" y="1893" width="0.0385%" height="15" fill="rgb(217,84,43)" fg:x="17030284237" fg:w="10352639"/><text x="63.6103%" y="1903.50"></text></g><g><title>irqentry_enter (63,511,866 samples, 0.24%)</title><rect x="63.1815%" y="1925" width="0.2363%" height="15" fill="rgb(241,170,50)" fg:x="16982230008" fg:w="63511866"/><text x="63.4315%" y="1935.50"></text></g><g><title>ct_nmi_enter (5,104,998 samples, 0.02%)</title><rect x="63.3988%" y="1909" width="0.0190%" height="15" fill="rgb(226,205,29)" fg:x="17040636876" fg:w="5104998"/><text x="63.6488%" y="1919.50"></text></g><g><title>irqtime_account_irq (36,332,629 samples, 0.14%)</title><rect x="63.4193%" y="1925" width="0.1352%" height="15" fill="rgb(233,113,1)" fg:x="17046133123" fg:w="36332629"/><text x="63.6693%" y="1935.50"></text></g><g><title>common_interrupt (3,059,928,834 samples, 11.38%)</title><rect x="52.1919%" y="1941" width="11.3843%" height="15" fill="rgb(253,98,13)" fg:x="14028376049" fg:w="3059928834"/><text x="52.4419%" y="1951.50">common_interrupt</text></g><g><title>tick_irq_enter (5,839,131 samples, 0.02%)</title><rect x="63.5544%" y="1925" width="0.0217%" height="15" fill="rgb(211,115,12)" fg:x="17082465752" fg:w="5839131"/><text x="63.8044%" y="1935.50"></text></g><g><title>asm_common_interrupt (3,070,748,878 samples, 11.42%)</title><rect x="52.1919%" y="1957" width="11.4246%" height="15" fill="rgb(208,12,16)" fg:x="14028376049" fg:w="3070748878"/><text x="52.4419%" y="1967.50">asm_common_interr..</text></g><g><title>irqentry_enter (10,820,044 samples, 0.04%)</title><rect x="63.5762%" y="1941" width="0.0403%" height="15" fill="rgb(237,193,54)" fg:x="17088304883" fg:w="10820044"/><text x="63.8262%" y="1951.50"></text></g><g><title>irqentry_enter (37,648,009 samples, 0.14%)</title><rect x="63.6171%" y="1941" width="0.1401%" height="15" fill="rgb(243,22,42)" fg:x="17099295487" fg:w="37648009"/><text x="63.8671%" y="1951.50"></text></g><g><title>_raw_spin_lock_irqsave (15,868,531 samples, 0.06%)</title><rect x="64.1917%" y="1909" width="0.0590%" height="15" fill="rgb(233,151,36)" fg:x="17253760223" fg:w="15868531"/><text x="64.4417%" y="1919.50"></text></g><g><title>ktime_get (3,634,152 samples, 0.01%)</title><rect x="64.4088%" y="1845" width="0.0135%" height="15" fill="rgb(237,57,45)" fg:x="17312098847" fg:w="3634152"/><text x="64.6588%" y="1855.50"></text></g><g><title>tick_sched_timer (18,106,240 samples, 0.07%)</title><rect x="64.3984%" y="1861" width="0.0674%" height="15" fill="rgb(221,88,17)" fg:x="17309295238" fg:w="18106240"/><text x="64.6484%" y="1871.50"></text></g><g><title>update_process_times (9,294,597 samples, 0.03%)</title><rect x="64.4311%" y="1845" width="0.0346%" height="15" fill="rgb(230,79,15)" fg:x="17318106881" fg:w="9294597"/><text x="64.6811%" y="1855.50"></text></g><g><title>scheduler_tick (4,490,210 samples, 0.02%)</title><rect x="64.4490%" y="1829" width="0.0167%" height="15" fill="rgb(213,57,13)" fg:x="17322911268" fg:w="4490210"/><text x="64.6990%" y="1839.50"></text></g><g><title>rb_erase (3,792,386 samples, 0.01%)</title><rect x="64.4725%" y="1845" width="0.0141%" height="15" fill="rgb(222,116,39)" fg:x="17329213823" fg:w="3792386"/><text x="64.7225%" y="1855.50"></text></g><g><title>__run_hrtimer (35,168,667 samples, 0.13%)</title><rect x="64.3718%" y="1877" width="0.1308%" height="15" fill="rgb(245,107,2)" fg:x="17302154194" fg:w="35168667"/><text x="64.6218%" y="1887.50"></text></g><g><title>timerqueue_del (9,921,383 samples, 0.04%)</title><rect x="64.4657%" y="1861" width="0.0369%" height="15" fill="rgb(238,1,10)" fg:x="17327401478" fg:w="9921383"/><text x="64.7157%" y="1871.50"></text></g><g><title>rb_next (4,316,652 samples, 0.02%)</title><rect x="64.4866%" y="1845" width="0.0161%" height="15" fill="rgb(249,4,48)" fg:x="17333006209" fg:w="4316652"/><text x="64.7366%" y="1855.50"></text></g><g><title>__hrtimer_run_queues (48,991,051 samples, 0.18%)</title><rect x="64.3511%" y="1893" width="0.1823%" height="15" fill="rgb(223,151,18)" fg:x="17296588355" fg:w="48991051"/><text x="64.6011%" y="1903.50"></text></g><g><title>timerqueue_del (3,267,806 samples, 0.01%)</title><rect x="64.5212%" y="1877" width="0.0122%" height="15" fill="rgb(227,65,43)" fg:x="17342311600" fg:w="3267806"/><text x="64.7712%" y="1887.50"></text></g><g><title>__run_hrtimer (3,025,326 samples, 0.01%)</title><rect x="64.5333%" y="1893" width="0.0113%" height="15" fill="rgb(218,40,45)" fg:x="17345579406" fg:w="3025326"/><text x="64.7833%" y="1903.50"></text></g><g><title>__x86_indirect_thunk_r11 (10,680,852 samples, 0.04%)</title><rect x="64.5446%" y="1893" width="0.0397%" height="15" fill="rgb(252,121,31)" fg:x="17348604732" fg:w="10680852"/><text x="64.7946%" y="1903.50"></text></g><g><title>_raw_spin_lock_irqsave (25,407,659 samples, 0.09%)</title><rect x="64.5843%" y="1893" width="0.0945%" height="15" fill="rgb(219,158,43)" fg:x="17359285584" fg:w="25407659"/><text x="64.8343%" y="1903.50"></text></g><g><title>ktime_get_update_offsets_now (242,969,929 samples, 0.90%)</title><rect x="64.6789%" y="1893" width="0.9040%" height="15" fill="rgb(231,162,42)" fg:x="17384693243" fg:w="242969929"/><text x="64.9289%" y="1903.50"></text></g><g><title>read_tsc (187,067,200 samples, 0.70%)</title><rect x="64.8868%" y="1877" width="0.6960%" height="15" fill="rgb(217,179,25)" fg:x="17440595972" fg:w="187067200"/><text x="65.1368%" y="1887.50"></text></g><g><title>read_tsc (15,131,472 samples, 0.06%)</title><rect x="65.5828%" y="1893" width="0.0563%" height="15" fill="rgb(206,212,31)" fg:x="17627663172" fg:w="15131472"/><text x="65.8328%" y="1903.50"></text></g><g><title>hrtimer_interrupt (374,097,392 samples, 1.39%)</title><rect x="64.2508%" y="1909" width="1.3918%" height="15" fill="rgb(235,144,12)" fg:x="17269628754" fg:w="374097392"/><text x="64.5008%" y="1919.50"></text></g><g><title>ktime_get_update_offsets_now (36,539,639 samples, 0.14%)</title><rect x="65.6426%" y="1909" width="0.1359%" height="15" fill="rgb(213,51,10)" fg:x="17643726146" fg:w="36539639"/><text x="65.8926%" y="1919.50"></text></g><g><title>__sysvec_apic_timer_interrupt (468,892,776 samples, 1.74%)</title><rect x="64.0440%" y="1925" width="1.7445%" height="15" fill="rgb(231,145,14)" fg:x="17214047263" fg:w="468892776"/><text x="64.2940%" y="1935.50"></text></g><g><title>__x86_indirect_thunk_r11 (12,922,177 samples, 0.05%)</title><rect x="65.7885%" y="1925" width="0.0481%" height="15" fill="rgb(235,15,28)" fg:x="17682940039" fg:w="12922177"/><text x="66.0385%" y="1935.50"></text></g><g><title>ct_irq_enter (28,748,430 samples, 0.11%)</title><rect x="65.8366%" y="1925" width="0.1070%" height="15" fill="rgb(237,206,10)" fg:x="17695862216" fg:w="28748430"/><text x="66.0866%" y="1935.50"></text></g><g><title>hrtimer_interrupt (24,792,832 samples, 0.09%)</title><rect x="65.9435%" y="1925" width="0.0922%" height="15" fill="rgb(236,227,27)" fg:x="17724610646" fg:w="24792832"/><text x="66.1935%" y="1935.50"></text></g><g><title>sched_clock (50,333,126 samples, 0.19%)</title><rect x="67.6210%" y="1877" width="0.1873%" height="15" fill="rgb(246,83,35)" fg:x="18175502047" fg:w="50333126"/><text x="67.8710%" y="1887.50"></text></g><g><title>sched_clock_noinstr (46,726,059 samples, 0.17%)</title><rect x="67.6344%" y="1861" width="0.1738%" height="15" fill="rgb(220,136,24)" fg:x="18179109114" fg:w="46726059"/><text x="67.8844%" y="1871.50"></text></g><g><title>native_sched_clock (46,726,059 samples, 0.17%)</title><rect x="67.6344%" y="1845" width="0.1738%" height="15" fill="rgb(217,3,25)" fg:x="18179109114" fg:w="46726059"/><text x="67.8844%" y="1855.50"></text></g><g><title>irqtime_account_irq (434,655,545 samples, 1.62%)</title><rect x="66.1971%" y="1909" width="1.6171%" height="15" fill="rgb(239,24,14)" fg:x="17792780308" fg:w="434655545"/><text x="66.4471%" y="1919.50"></text></g><g><title>sched_clock_cpu (55,993,860 samples, 0.21%)</title><rect x="67.6059%" y="1893" width="0.2083%" height="15" fill="rgb(244,16,53)" fg:x="18171441993" fg:w="55993860"/><text x="67.8559%" y="1903.50"></text></g><g><title>ktime_get (24,628,147 samples, 0.09%)</title><rect x="67.8142%" y="1909" width="0.0916%" height="15" fill="rgb(208,175,44)" fg:x="18227435853" fg:w="24628147"/><text x="68.0642%" y="1919.50"></text></g><g><title>nr_iowait_cpu (27,479,397 samples, 0.10%)</title><rect x="67.9059%" y="1909" width="0.1022%" height="15" fill="rgb(252,18,48)" fg:x="18252064000" fg:w="27479397"/><text x="68.1559%" y="1919.50"></text></g><g><title>sched_clock_idle_wakeup_event (3,417,666 samples, 0.01%)</title><rect x="68.0178%" y="1909" width="0.0127%" height="15" fill="rgb(234,199,32)" fg:x="18282144806" fg:w="3417666"/><text x="68.2678%" y="1919.50"></text></g><g><title>tick_check_oneshot_broadcast_this_cpu (54,260,575 samples, 0.20%)</title><rect x="68.0305%" y="1909" width="0.2019%" height="15" fill="rgb(225,77,54)" fg:x="18285562472" fg:w="54260575"/><text x="68.2805%" y="1919.50"></text></g><g><title>__x86_indirect_thunk_r11 (4,884,049 samples, 0.02%)</title><rect x="68.7511%" y="1893" width="0.0182%" height="15" fill="rgb(225,42,25)" fg:x="18479238439" fg:w="4884049"/><text x="69.0011%" y="1903.50"></text></g><g><title>ktime_get (209,227,681 samples, 0.78%)</title><rect x="68.7738%" y="1893" width="0.7784%" height="15" fill="rgb(242,227,46)" fg:x="18485346877" fg:w="209227681"/><text x="69.0238%" y="1903.50"></text></g><g><title>read_tsc (151,628,889 samples, 0.56%)</title><rect x="68.9881%" y="1877" width="0.5641%" height="15" fill="rgb(246,197,35)" fg:x="18542945669" fg:w="151628889"/><text x="69.2381%" y="1887.50"></text></g><g><title>nr_iowait_cpu (90,922,877 samples, 0.34%)</title><rect x="69.5522%" y="1893" width="0.3383%" height="15" fill="rgb(215,159,26)" fg:x="18694574558" fg:w="90922877"/><text x="69.8022%" y="1903.50"></text></g><g><title>read_tsc (63,362,795 samples, 0.24%)</title><rect x="69.8905%" y="1893" width="0.2357%" height="15" fill="rgb(212,194,50)" fg:x="18785497435" fg:w="63362795"/><text x="70.1405%" y="1903.50"></text></g><g><title>sched_clock_idle_wakeup_event (3,920,785 samples, 0.01%)</title><rect x="70.1262%" y="1893" width="0.0146%" height="15" fill="rgb(246,132,1)" fg:x="18848860230" fg:w="3920785"/><text x="70.3762%" y="1903.50"></text></g><g><title>tick_check_oneshot_broadcast_this_cpu (353,883,472 samples, 1.32%)</title><rect x="70.1408%" y="1893" width="1.3166%" height="15" fill="rgb(217,71,7)" fg:x="18852781015" fg:w="353883472"/><text x="70.3908%" y="1903.50"></text></g><g><title>tick_do_update_jiffies64 (5,091,988 samples, 0.02%)</title><rect x="71.4574%" y="1893" width="0.0189%" height="15" fill="rgb(252,59,32)" fg:x="19206664487" fg:w="5091988"/><text x="71.7074%" y="1903.50"></text></g><g><title>irq_enter_rcu (1,463,361,117 samples, 5.44%)</title><rect x="66.0358%" y="1925" width="5.4444%" height="15" fill="rgb(253,204,25)" fg:x="17749403478" fg:w="1463361117"/><text x="66.2858%" y="1935.50">irq_ent..</text></g><g><title>tick_irq_enter (872,941,548 samples, 3.25%)</title><rect x="68.2324%" y="1909" width="3.2477%" height="15" fill="rgb(232,21,16)" fg:x="18339823047" fg:w="872941548"/><text x="68.4824%" y="1919.50">tic..</text></g><g><title>rcu_core_si (6,024,634 samples, 0.02%)</title><rect x="71.4815%" y="1877" width="0.0224%" height="15" fill="rgb(248,90,29)" fg:x="19213137072" fg:w="6024634"/><text x="71.7315%" y="1887.50"></text></g><g><title>rcu_core (6,024,634 samples, 0.02%)</title><rect x="71.4815%" y="1861" width="0.0224%" height="15" fill="rgb(249,223,7)" fg:x="19213137072" fg:w="6024634"/><text x="71.7315%" y="1871.50"></text></g><g><title>rebalance_domains (5,238,592 samples, 0.02%)</title><rect x="71.5039%" y="1861" width="0.0195%" height="15" fill="rgb(231,119,42)" fg:x="19219161706" fg:w="5238592"/><text x="71.7539%" y="1871.50"></text></g><g><title>load_balance (4,520,540 samples, 0.02%)</title><rect x="71.5066%" y="1845" width="0.0168%" height="15" fill="rgb(215,41,35)" fg:x="19219879758" fg:w="4520540"/><text x="71.7566%" y="1855.50"></text></g><g><title>run_rebalance_domains (5,733,434 samples, 0.02%)</title><rect x="71.5039%" y="1877" width="0.0213%" height="15" fill="rgb(220,44,45)" fg:x="19219161706" fg:w="5733434"/><text x="71.7539%" y="1887.50"></text></g><g><title>irq_exit_rcu (14,693,409 samples, 0.05%)</title><rect x="71.4801%" y="1925" width="0.0547%" height="15" fill="rgb(253,197,36)" fg:x="19212764595" fg:w="14693409"/><text x="71.7301%" y="1935.50"></text></g><g><title>__irq_exit_rcu (14,693,409 samples, 0.05%)</title><rect x="71.4801%" y="1909" width="0.0547%" height="15" fill="rgb(245,225,54)" fg:x="19212764595" fg:w="14693409"/><text x="71.7301%" y="1919.50"></text></g><g><title>__kprobes_text_end (14,693,409 samples, 0.05%)</title><rect x="71.4801%" y="1893" width="0.0547%" height="15" fill="rgb(239,94,37)" fg:x="19212764595" fg:w="14693409"/><text x="71.7301%" y="1903.50"></text></g><g><title>ct_irq_enter (30,862,679 samples, 0.11%)</title><rect x="71.7081%" y="1909" width="0.1148%" height="15" fill="rgb(242,217,10)" fg:x="19274035454" fg:w="30862679"/><text x="71.9581%" y="1919.50"></text></g><g><title>ct_nmi_enter (25,580,924 samples, 0.10%)</title><rect x="71.7277%" y="1893" width="0.0952%" height="15" fill="rgb(250,193,7)" fg:x="19279317209" fg:w="25580924"/><text x="71.9777%" y="1903.50"></text></g><g><title>irqentry_enter (88,944,577 samples, 0.33%)</title><rect x="71.5348%" y="1925" width="0.3309%" height="15" fill="rgb(230,104,19)" fg:x="19227458004" fg:w="88944577"/><text x="71.7848%" y="1935.50"></text></g><g><title>ct_nmi_enter (11,504,448 samples, 0.04%)</title><rect x="71.8229%" y="1909" width="0.0428%" height="15" fill="rgb(230,181,4)" fg:x="19304898133" fg:w="11504448"/><text x="72.0729%" y="1919.50"></text></g><g><title>irqtime_account_irq (36,961,383 samples, 0.14%)</title><rect x="71.8657%" y="1925" width="0.1375%" height="15" fill="rgb(216,219,49)" fg:x="19316402581" fg:w="36961383"/><text x="72.1157%" y="1935.50"></text></g><g><title>native_apic_mem_eoi (13,619,052 samples, 0.05%)</title><rect x="72.0032%" y="1925" width="0.0507%" height="15" fill="rgb(254,144,0)" fg:x="19353363964" fg:w="13619052"/><text x="72.2532%" y="1935.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2,271,864,626 samples, 8.45%)</title><rect x="63.6164%" y="1957" width="8.4524%" height="15" fill="rgb(205,209,38)" fg:x="17099124927" fg:w="2271864626"/><text x="63.8664%" y="1967.50">asm_sysvec_a..</text></g><g><title>sysvec_apic_timer_interrupt (2,234,046,057 samples, 8.31%)</title><rect x="63.7571%" y="1941" width="8.3117%" height="15" fill="rgb(240,21,42)" fg:x="17136943496" fg:w="2234046057"/><text x="64.0071%" y="1951.50">sysvec_apic_..</text></g><g><title>tick_irq_enter (4,006,537 samples, 0.01%)</title><rect x="72.0539%" y="1925" width="0.0149%" height="15" fill="rgb(241,132,3)" fg:x="19366983016" fg:w="4006537"/><text x="72.3039%" y="1935.50"></text></g><g><title>irqentry_enter (101,961,872 samples, 0.38%)</title><rect x="72.0710%" y="1941" width="0.3793%" height="15" fill="rgb(225,14,2)" fg:x="19371586265" fg:w="101961872"/><text x="72.3210%" y="1951.50"></text></g><g><title>llist_reverse_order (5,134,594 samples, 0.02%)</title><rect x="72.6732%" y="1877" width="0.0191%" height="15" fill="rgb(210,141,35)" fg:x="19533438521" fg:w="5134594"/><text x="72.9232%" y="1887.50"></text></g><g><title>rq_lock_irqsave (4,737,873 samples, 0.02%)</title><rect x="72.6961%" y="1861" width="0.0176%" height="15" fill="rgb(251,14,44)" fg:x="19539598576" fg:w="4737873"/><text x="72.9461%" y="1871.50"></text></g><g><title>_raw_spin_lock (4,737,873 samples, 0.02%)</title><rect x="72.6961%" y="1845" width="0.0176%" height="15" fill="rgb(247,48,18)" fg:x="19539598576" fg:w="4737873"/><text x="72.9461%" y="1855.50"></text></g><g><title>enqueue_task_fair (3,458,933 samples, 0.01%)</title><rect x="72.7162%" y="1829" width="0.0129%" height="15" fill="rgb(225,0,40)" fg:x="19545018607" fg:w="3458933"/><text x="72.9662%" y="1839.50"></text></g><g><title>enqueue_task (5,180,759 samples, 0.02%)</title><rect x="72.7162%" y="1845" width="0.0193%" height="15" fill="rgb(221,31,33)" fg:x="19545018607" fg:w="5180759"/><text x="72.9662%" y="1855.50"></text></g><g><title>ttwu_do_activate (6,025,844 samples, 0.02%)</title><rect x="72.7137%" y="1861" width="0.0224%" height="15" fill="rgb(237,42,40)" fg:x="19544336449" fg:w="6025844"/><text x="72.9637%" y="1871.50"></text></g><g><title>__sysvec_call_function_single (27,862,085 samples, 0.10%)</title><rect x="72.6361%" y="1925" width="0.1037%" height="15" fill="rgb(233,51,29)" fg:x="19523484164" fg:w="27862085"/><text x="72.8861%" y="1935.50"></text></g><g><title>generic_smp_call_function_single_interrupt (25,527,058 samples, 0.09%)</title><rect x="72.6448%" y="1909" width="0.0950%" height="15" fill="rgb(226,58,20)" fg:x="19525819191" fg:w="25527058"/><text x="72.8948%" y="1919.50"></text></g><g><title>__flush_smp_call_function_queue (25,527,058 samples, 0.09%)</title><rect x="72.6448%" y="1893" width="0.0950%" height="15" fill="rgb(208,98,7)" fg:x="19525819191" fg:w="25527058"/><text x="72.8948%" y="1903.50"></text></g><g><title>sched_ttwu_pending (12,773,134 samples, 0.05%)</title><rect x="72.6923%" y="1877" width="0.0475%" height="15" fill="rgb(228,143,44)" fg:x="19538573115" fg:w="12773134"/><text x="72.9423%" y="1887.50"></text></g><g><title>ct_irq_enter (53,153,184 samples, 0.20%)</title><rect x="72.7398%" y="1925" width="0.1978%" height="15" fill="rgb(246,55,38)" fg:x="19551346249" fg:w="53153184"/><text x="72.9898%" y="1935.50"></text></g><g><title>irqtime_account_irq (16,565,707 samples, 0.06%)</title><rect x="72.9869%" y="1909" width="0.0616%" height="15" fill="rgb(247,87,16)" fg:x="19617768057" fg:w="16565707"/><text x="73.2369%" y="1919.50"></text></g><g><title>sched_clock_cpu (4,439,595 samples, 0.02%)</title><rect x="73.0320%" y="1893" width="0.0165%" height="15" fill="rgb(234,129,42)" fg:x="19629894169" fg:w="4439595"/><text x="73.2820%" y="1903.50"></text></g><g><title>sched_clock (4,091,925 samples, 0.02%)</title><rect x="73.0333%" y="1877" width="0.0152%" height="15" fill="rgb(220,82,16)" fg:x="19630241839" fg:w="4091925"/><text x="73.2833%" y="1887.50"></text></g><g><title>sched_clock_noinstr (4,091,925 samples, 0.02%)</title><rect x="73.0333%" y="1861" width="0.0152%" height="15" fill="rgb(211,88,4)" fg:x="19630241839" fg:w="4091925"/><text x="73.2833%" y="1871.50"></text></g><g><title>native_sched_clock (4,091,925 samples, 0.02%)</title><rect x="73.0333%" y="1845" width="0.0152%" height="15" fill="rgb(248,151,21)" fg:x="19630241839" fg:w="4091925"/><text x="73.2833%" y="1855.50"></text></g><g><title>ktime_get (14,803,995 samples, 0.06%)</title><rect x="73.0485%" y="1909" width="0.0551%" height="15" fill="rgb(238,163,6)" fg:x="19634333764" fg:w="14803995"/><text x="73.2985%" y="1919.50"></text></g><g><title>tick_check_oneshot_broadcast_this_cpu (18,776,234 samples, 0.07%)</title><rect x="73.1104%" y="1909" width="0.0699%" height="15" fill="rgb(209,183,11)" fg:x="19650969665" fg:w="18776234"/><text x="73.3604%" y="1919.50"></text></g><g><title>ktime_get (70,818,465 samples, 0.26%)</title><rect x="73.4054%" y="1893" width="0.2635%" height="15" fill="rgb(219,37,20)" fg:x="19730255684" fg:w="70818465"/><text x="73.6554%" y="1903.50"></text></g><g><title>read_tsc (44,108,454 samples, 0.16%)</title><rect x="73.5048%" y="1877" width="0.1641%" height="15" fill="rgb(210,158,4)" fg:x="19756965695" fg:w="44108454"/><text x="73.7548%" y="1887.50"></text></g><g><title>nr_iowait_cpu (15,144,153 samples, 0.06%)</title><rect x="73.6689%" y="1893" width="0.0563%" height="15" fill="rgb(221,167,53)" fg:x="19801074149" fg:w="15144153"/><text x="73.9189%" y="1903.50"></text></g><g><title>read_tsc (5,418,385 samples, 0.02%)</title><rect x="73.7252%" y="1893" width="0.0202%" height="15" fill="rgb(237,151,45)" fg:x="19816218302" fg:w="5418385"/><text x="73.9752%" y="1903.50"></text></g><g><title>tick_check_oneshot_broadcast_this_cpu (138,304,848 samples, 0.51%)</title><rect x="73.7454%" y="1893" width="0.5146%" height="15" fill="rgb(231,39,3)" fg:x="19821636687" fg:w="138304848"/><text x="73.9954%" y="1903.50"></text></g><g><title>tick_irq_enter (301,450,427 samples, 1.12%)</title><rect x="73.1818%" y="1909" width="1.1215%" height="15" fill="rgb(212,167,28)" fg:x="19670141277" fg:w="301450427"/><text x="73.4318%" y="1919.50"></text></g><g><title>tick_do_update_jiffies64 (11,650,169 samples, 0.04%)</title><rect x="74.2599%" y="1893" width="0.0433%" height="15" fill="rgb(232,178,8)" fg:x="19959941535" fg:w="11650169"/><text x="74.5099%" y="1903.50"></text></g><g><title>irq_enter_rcu (368,422,185 samples, 1.37%)</title><rect x="72.9375%" y="1925" width="1.3707%" height="15" fill="rgb(225,151,20)" fg:x="19604499433" fg:w="368422185"/><text x="73.1875%" y="1935.50"></text></g><g><title>__blk_mq_end_request (2,859,979 samples, 0.01%)</title><rect x="74.3132%" y="1797" width="0.0106%" height="15" fill="rgb(238,3,37)" fg:x="19974256502" fg:w="2859979"/><text x="74.5632%" y="1807.50"></text></g><g><title>_raw_spin_lock_irqsave (3,938,681 samples, 0.01%)</title><rect x="74.3495%" y="1733" width="0.0147%" height="15" fill="rgb(251,147,42)" fg:x="19984012424" fg:w="3938681"/><text x="74.5995%" y="1743.50"></text></g><g><title>__mod_lruvec_page_state (4,285,653 samples, 0.02%)</title><rect x="74.4322%" y="1701" width="0.0159%" height="15" fill="rgb(208,173,10)" fg:x="20006235679" fg:w="4285653"/><text x="74.6822%" y="1711.50"></text></g><g><title>__fprop_add_percpu_max (12,421,142 samples, 0.05%)</title><rect x="74.4581%" y="1685" width="0.0462%" height="15" fill="rgb(246,225,4)" fg:x="20013202520" fg:w="12421142"/><text x="74.7081%" y="1695.50"></text></g><g><title>percpu_counter_add_batch (8,025,941 samples, 0.03%)</title><rect x="74.4745%" y="1669" width="0.0299%" height="15" fill="rgb(248,102,6)" fg:x="20017597721" fg:w="8025941"/><text x="74.7245%" y="1679.50"></text></g><g><title>__wb_writeout_add (16,065,473 samples, 0.06%)</title><rect x="74.4528%" y="1701" width="0.0598%" height="15" fill="rgb(232,6,21)" fg:x="20011776882" fg:w="16065473"/><text x="74.7028%" y="1711.50"></text></g><g><title>xas_clear_mark (2,773,921 samples, 0.01%)</title><rect x="74.5126%" y="1685" width="0.0103%" height="15" fill="rgb(221,179,22)" fg:x="20027842355" fg:w="2773921"/><text x="74.7626%" y="1695.50"></text></g><g><title>__xa_clear_mark (6,089,610 samples, 0.02%)</title><rect x="74.5126%" y="1701" width="0.0227%" height="15" fill="rgb(252,50,20)" fg:x="20027842355" fg:w="6089610"/><text x="74.7626%" y="1711.50"></text></g><g><title>xas_load (3,315,689 samples, 0.01%)</title><rect x="74.5229%" y="1685" width="0.0123%" height="15" fill="rgb(222,56,38)" fg:x="20030616276" fg:w="3315689"/><text x="74.7729%" y="1695.50"></text></g><g><title>_raw_spin_lock_irqsave (4,431,544 samples, 0.02%)</title><rect x="74.5352%" y="1701" width="0.0165%" height="15" fill="rgb(206,193,29)" fg:x="20033931965" fg:w="4431544"/><text x="74.7852%" y="1711.50"></text></g><g><title>mod_node_page_state (3,008,235 samples, 0.01%)</title><rect x="74.5670%" y="1701" width="0.0112%" height="15" fill="rgb(239,192,45)" fg:x="20042484139" fg:w="3008235"/><text x="74.8170%" y="1711.50"></text></g><g><title>mod_zone_page_state (2,745,311 samples, 0.01%)</title><rect x="74.5782%" y="1701" width="0.0102%" height="15" fill="rgb(254,18,36)" fg:x="20045492374" fg:w="2745311"/><text x="74.8282%" y="1711.50"></text></g><g><title>percpu_counter_add_batch (3,152,696 samples, 0.01%)</title><rect x="74.5884%" y="1701" width="0.0117%" height="15" fill="rgb(221,127,11)" fg:x="20048237685" fg:w="3152696"/><text x="74.8384%" y="1711.50"></text></g><g><title>__folio_end_writeback (58,499,199 samples, 0.22%)</title><rect x="74.3853%" y="1717" width="0.2176%" height="15" fill="rgb(234,146,35)" fg:x="19993639309" fg:w="58499199"/><text x="74.6353%" y="1727.50"></text></g><g><title>ext4_end_bio (74,544,796 samples, 0.28%)</title><rect x="74.3269%" y="1765" width="0.2773%" height="15" fill="rgb(254,201,37)" fg:x="19977931359" fg:w="74544796"/><text x="74.5769%" y="1775.50"></text></g><g><title>ext4_finish_bio (74,018,616 samples, 0.28%)</title><rect x="74.3288%" y="1749" width="0.2754%" height="15" fill="rgb(211,202,23)" fg:x="19978457539" fg:w="74018616"/><text x="74.5788%" y="1759.50"></text></g><g><title>folio_end_writeback (63,426,307 samples, 0.24%)</title><rect x="74.3682%" y="1733" width="0.2360%" height="15" fill="rgb(237,91,2)" fg:x="19989049848" fg:w="63426307"/><text x="74.6182%" y="1743.50"></text></g><g><title>blk_update_request (76,579,599 samples, 0.28%)</title><rect x="74.3238%" y="1797" width="0.2849%" height="15" fill="rgb(226,228,36)" fg:x="19977116481" fg:w="76579599"/><text x="74.5738%" y="1807.50"></text></g><g><title>bio_endio (76,579,599 samples, 0.28%)</title><rect x="74.3238%" y="1781" width="0.2849%" height="15" fill="rgb(213,63,50)" fg:x="19977116481" fg:w="76579599"/><text x="74.5738%" y="1791.50"></text></g><g><title>blk_done_softirq (81,481,821 samples, 0.30%)</title><rect x="74.3082%" y="1877" width="0.3031%" height="15" fill="rgb(235,194,19)" fg:x="19972921618" fg:w="81481821"/><text x="74.5582%" y="1887.50"></text></g><g><title>scsi_complete (80,146,937 samples, 0.30%)</title><rect x="74.3132%" y="1861" width="0.2982%" height="15" fill="rgb(207,204,18)" fg:x="19974256502" fg:w="80146937"/><text x="74.5632%" y="1871.50"></text></g><g><title>scsi_finish_command (80,146,937 samples, 0.30%)</title><rect x="74.3132%" y="1845" width="0.2982%" height="15" fill="rgb(248,8,7)" fg:x="19974256502" fg:w="80146937"/><text x="74.5632%" y="1855.50"></text></g><g><title>scsi_io_completion (80,146,937 samples, 0.30%)</title><rect x="74.3132%" y="1829" width="0.2982%" height="15" fill="rgb(223,145,47)" fg:x="19974256502" fg:w="80146937"/><text x="74.5632%" y="1839.50"></text></g><g><title>scsi_end_request (80,146,937 samples, 0.30%)</title><rect x="74.3132%" y="1813" width="0.2982%" height="15" fill="rgb(228,84,11)" fg:x="19974256502" fg:w="80146937"/><text x="74.5632%" y="1823.50"></text></g><g><title>__kprobes_text_end (81,867,749 samples, 0.30%)</title><rect x="74.3082%" y="1893" width="0.3046%" height="15" fill="rgb(218,76,45)" fg:x="19972921618" fg:w="81867749"/><text x="74.5582%" y="1903.50"></text></g><g><title>irq_exit_rcu (82,296,095 samples, 0.31%)</title><rect x="74.3082%" y="1925" width="0.3062%" height="15" fill="rgb(223,80,15)" fg:x="19972921618" fg:w="82296095"/><text x="74.5582%" y="1935.50"></text></g><g><title>__irq_exit_rcu (82,296,095 samples, 0.31%)</title><rect x="74.3082%" y="1909" width="0.3062%" height="15" fill="rgb(219,218,33)" fg:x="19972921618" fg:w="82296095"/><text x="74.5582%" y="1919.50"></text></g><g><title>ct_irq_enter (128,464,150 samples, 0.48%)</title><rect x="80.9287%" y="1909" width="0.4779%" height="15" fill="rgb(208,51,11)" fg:x="21752411485" fg:w="128464150"/><text x="81.1787%" y="1919.50"></text></g><g><title>ct_nmi_enter (101,338,413 samples, 0.38%)</title><rect x="81.0297%" y="1893" width="0.3770%" height="15" fill="rgb(229,165,39)" fg:x="21779537222" fg:w="101338413"/><text x="81.2797%" y="1903.50"></text></g><g><title>irqentry_enter (1,858,161,507 samples, 6.91%)</title><rect x="74.6144%" y="1925" width="6.9132%" height="15" fill="rgb(241,100,24)" fg:x="20055217713" fg:w="1858161507"/><text x="74.8644%" y="1935.50">irqentry_..</text></g><g><title>ct_nmi_enter (32,503,585 samples, 0.12%)</title><rect x="81.4067%" y="1909" width="0.1209%" height="15" fill="rgb(228,14,23)" fg:x="21880875635" fg:w="32503585"/><text x="81.6567%" y="1919.50"></text></g><g><title>asm_sysvec_call_function_single (2,546,253,683 samples, 9.47%)</title><rect x="72.0710%" y="1957" width="9.4732%" height="15" fill="rgb(247,116,52)" fg:x="19371586265" fg:w="2546253683"/><text x="72.3210%" y="1967.50">asm_sysvec_cal..</text></g><g><title>sysvec_call_function_single (2,444,291,811 samples, 9.09%)</title><rect x="72.4503%" y="1941" width="9.0939%" height="15" fill="rgb(216,149,33)" fg:x="19473548137" fg:w="2444291811"/><text x="72.7003%" y="1951.50">sysvec_call_f..</text></g><g><title>ct_idle_enter (3,566,460 samples, 0.01%)</title><rect x="81.5505%" y="1957" width="0.0133%" height="15" fill="rgb(238,142,29)" fg:x="21919540511" fg:w="3566460"/><text x="81.8005%" y="1967.50"></text></g><g><title>ct_kernel_exit (3,178,175 samples, 0.01%)</title><rect x="81.5520%" y="1941" width="0.0118%" height="15" fill="rgb(224,83,40)" fg:x="21919928796" fg:w="3178175"/><text x="81.8020%" y="1951.50"></text></g><g><title>ct_kernel_enter (74,894,095 samples, 0.28%)</title><rect x="81.5638%" y="1941" width="0.2786%" height="15" fill="rgb(234,165,11)" fg:x="21923106971" fg:w="74894095"/><text x="81.8138%" y="1951.50"></text></g><g><title>ct_kernel_enter_state (64,994,244 samples, 0.24%)</title><rect x="81.6006%" y="1925" width="0.2418%" height="15" fill="rgb(215,96,23)" fg:x="21933006822" fg:w="64994244"/><text x="81.8506%" y="1935.50"></text></g><g><title>ct_idle_exit (75,437,964 samples, 0.28%)</title><rect x="81.5638%" y="1957" width="0.2807%" height="15" fill="rgb(233,179,26)" fg:x="21923106971" fg:w="75437964"/><text x="81.8138%" y="1967.50"></text></g><g><title>local_clock_noinstr (39,130,700 samples, 0.15%)</title><rect x="81.8469%" y="1957" width="0.1456%" height="15" fill="rgb(225,129,33)" fg:x="21999209924" fg:w="39130700"/><text x="82.0969%" y="1967.50"></text></g><g><title>sched_clock_noinstr (33,764,080 samples, 0.13%)</title><rect x="81.8669%" y="1941" width="0.1256%" height="15" fill="rgb(237,49,13)" fg:x="22004576544" fg:w="33764080"/><text x="82.1169%" y="1951.50"></text></g><g><title>native_sched_clock (33,764,080 samples, 0.13%)</title><rect x="81.8669%" y="1925" width="0.1256%" height="15" fill="rgb(211,3,31)" fg:x="22004576544" fg:w="33764080"/><text x="82.1169%" y="1935.50"></text></g><g><title>poll_idle (91,745,322 samples, 0.34%)</title><rect x="81.9925%" y="1957" width="0.3413%" height="15" fill="rgb(216,152,19)" fg:x="22038340624" fg:w="91745322"/><text x="82.2425%" y="1967.50"></text></g><g><title>sched_clock_noinstr (4,885,847 samples, 0.02%)</title><rect x="82.3380%" y="1957" width="0.0182%" height="15" fill="rgb(251,121,35)" fg:x="22131196574" fg:w="4885847"/><text x="82.5880%" y="1967.50"></text></g><g><title>sched_idle_set_state (5,036,319 samples, 0.02%)</title><rect x="82.3562%" y="1957" width="0.0187%" height="15" fill="rgb(210,217,47)" fg:x="22136082421" fg:w="5036319"/><text x="82.6062%" y="1967.50"></text></g><g><title>cpuidle_enter_state (8,517,671,062 samples, 31.69%)</title><rect x="50.6899%" y="1973" width="31.6896%" height="15" fill="rgb(244,116,22)" fg:x="13624659439" fg:w="8517671062"/><text x="50.9399%" y="1983.50">cpuidle_enter_state</text></g><g><title>error_entry (582,343,757 samples, 2.17%)</title><rect x="82.3794%" y="1973" width="2.1666%" height="15" fill="rgb(228,17,21)" fg:x="22142330501" fg:w="582343757"/><text x="82.6294%" y="1983.50">e..</text></g><g><title>irq_entries_start (71,631,871 samples, 0.27%)</title><rect x="84.5460%" y="1973" width="0.2665%" height="15" fill="rgb(240,149,34)" fg:x="22724674258" fg:w="71631871"/><text x="84.7960%" y="1983.50"></text></g><g><title>sysvec_apic_timer_interrupt (32,607,632 samples, 0.12%)</title><rect x="84.8253%" y="1973" width="0.1213%" height="15" fill="rgb(208,125,47)" fg:x="22799747531" fg:w="32607632"/><text x="85.0753%" y="1983.50"></text></g><g><title>sysvec_call_function_single (177,170,191 samples, 0.66%)</title><rect x="84.9475%" y="1973" width="0.6592%" height="15" fill="rgb(249,186,39)" fg:x="22832592669" fg:w="177170191"/><text x="85.1975%" y="1983.50"></text></g><g><title>cpuidle_enter (11,103,308,165 samples, 41.31%)</title><rect x="44.3024%" y="1989" width="41.3093%" height="15" fill="rgb(240,220,33)" fg:x="11907801482" fg:w="11103308165"/><text x="44.5524%" y="1999.50">cpuidle_enter</text></g><g><title>cpuidle_governor_latency_req (4,164,737 samples, 0.02%)</title><rect x="85.9277%" y="1957" width="0.0155%" height="15" fill="rgb(243,110,23)" fg:x="23096067607" fg:w="4164737"/><text x="86.1777%" y="1967.50"></text></g><g><title>nr_iowait_cpu (16,586,734 samples, 0.06%)</title><rect x="85.9432%" y="1957" width="0.0617%" height="15" fill="rgb(219,163,46)" fg:x="23100232344" fg:w="16586734"/><text x="86.1932%" y="1967.50"></text></g><g><title>__hrtimer_next_event_base (6,536,900 samples, 0.02%)</title><rect x="86.0400%" y="1925" width="0.0243%" height="15" fill="rgb(216,126,30)" fg:x="23126254041" fg:w="6536900"/><text x="86.2900%" y="1935.50"></text></g><g><title>hrtimer_next_event_without (9,546,767 samples, 0.04%)</title><rect x="86.0400%" y="1941" width="0.0355%" height="15" fill="rgb(208,139,11)" fg:x="23126254041" fg:w="9546767"/><text x="86.2900%" y="1951.50"></text></g><g><title>_raw_spin_lock (3,953,187 samples, 0.01%)</title><rect x="86.2265%" y="1909" width="0.0147%" height="15" fill="rgb(213,118,36)" fg:x="23176382159" fg:w="3953187"/><text x="86.4765%" y="1919.50"></text></g><g><title>get_next_timer_interrupt (9,606,010 samples, 0.04%)</title><rect x="86.2231%" y="1925" width="0.0357%" height="15" fill="rgb(226,43,17)" fg:x="23175444966" fg:w="9606010"/><text x="86.4731%" y="1935.50"></text></g><g><title>hrtimer_get_next_event (3,432,444 samples, 0.01%)</title><rect x="86.2460%" y="1909" width="0.0128%" height="15" fill="rgb(254,217,4)" fg:x="23181618532" fg:w="3432444"/><text x="86.4960%" y="1919.50"></text></g><g><title>tick_nohz_next_event (54,851,132 samples, 0.20%)</title><rect x="86.0777%" y="1941" width="0.2041%" height="15" fill="rgb(210,134,47)" fg:x="23136366644" fg:w="54851132"/><text x="86.3277%" y="1951.50"></text></g><g><title>tick_nohz_get_sleep_length (76,463,184 samples, 0.28%)</title><rect x="86.0061%" y="1957" width="0.2845%" height="15" fill="rgb(237,24,49)" fg:x="23117119073" fg:w="76463184"/><text x="86.2561%" y="1967.50"></text></g><g><title>menu_select (176,804,929 samples, 0.66%)</title><rect x="85.6353%" y="1973" width="0.6578%" height="15" fill="rgb(251,39,46)" fg:x="23017470878" fg:w="176804929"/><text x="85.8853%" y="1983.50"></text></g><g><title>cpuidle_select (179,677,128 samples, 0.67%)</title><rect x="85.6292%" y="1989" width="0.6685%" height="15" fill="rgb(251,220,3)" fg:x="23015821335" fg:w="179677128"/><text x="85.8792%" y="1999.50"></text></g><g><title>__blk_mq_complete_request_remote (25,242,943 samples, 0.09%)</title><rect x="86.8742%" y="1973" width="0.0939%" height="15" fill="rgb(228,105,12)" fg:x="23350456660" fg:w="25242943"/><text x="87.1242%" y="1983.50"></text></g><g><title>__blk_mq_complete_request_remote (15,904,930 samples, 0.06%)</title><rect x="87.3326%" y="1957" width="0.0592%" height="15" fill="rgb(215,196,1)" fg:x="23473683875" fg:w="15904930"/><text x="87.5826%" y="1967.50"></text></g><g><title>__raise_softirq_irqoff (9,402,747 samples, 0.03%)</title><rect x="87.3568%" y="1941" width="0.0350%" height="15" fill="rgb(214,33,39)" fg:x="23480186058" fg:w="9402747"/><text x="87.6068%" y="1951.50"></text></g><g><title>__raise_softirq_irqoff (37,497,302 samples, 0.14%)</title><rect x="87.3918%" y="1957" width="0.1395%" height="15" fill="rgb(220,19,52)" fg:x="23489588805" fg:w="37497302"/><text x="87.6418%" y="1967.50"></text></g><g><title>llist_reverse_order (623,215,784 samples, 2.32%)</title><rect x="87.5313%" y="1957" width="2.3186%" height="15" fill="rgb(221,78,38)" fg:x="23527086107" fg:w="623215784"/><text x="87.7813%" y="1967.50">l..</text></g><g><title>_raw_spin_lock (6,135,472 samples, 0.02%)</title><rect x="89.9007%" y="1941" width="0.0228%" height="15" fill="rgb(253,30,16)" fg:x="24163944561" fg:w="6135472"/><text x="90.1507%" y="1951.50"></text></g><g><title>rq_lock_irqsave (64,154,045 samples, 0.24%)</title><rect x="89.9299%" y="1941" width="0.2387%" height="15" fill="rgb(242,65,0)" fg:x="24171799128" fg:w="64154045"/><text x="90.1799%" y="1951.50"></text></g><g><title>_raw_spin_lock (55,794,149 samples, 0.21%)</title><rect x="89.9610%" y="1925" width="0.2076%" height="15" fill="rgb(235,201,12)" fg:x="24180159024" fg:w="55794149"/><text x="90.2110%" y="1935.50"></text></g><g><title>__update_load_avg_se (3,009,224 samples, 0.01%)</title><rect x="90.2717%" y="1861" width="0.0112%" height="15" fill="rgb(233,161,9)" fg:x="24263645341" fg:w="3009224"/><text x="90.5217%" y="1871.50"></text></g><g><title>enqueue_entity (14,909,667 samples, 0.06%)</title><rect x="90.2440%" y="1893" width="0.0555%" height="15" fill="rgb(241,207,41)" fg:x="24256215815" fg:w="14909667"/><text x="90.4940%" y="1903.50"></text></g><g><title>update_load_avg (8,911,111 samples, 0.03%)</title><rect x="90.2663%" y="1877" width="0.0332%" height="15" fill="rgb(212,69,46)" fg:x="24262214371" fg:w="8911111"/><text x="90.5163%" y="1887.50"></text></g><g><title>update_cfs_rq_load_avg (3,624,144 samples, 0.01%)</title><rect x="90.2860%" y="1861" width="0.0135%" height="15" fill="rgb(239,69,45)" fg:x="24267501338" fg:w="3624144"/><text x="90.5360%" y="1871.50"></text></g><g><title>__update_load_avg_cfs_rq (3,139,660 samples, 0.01%)</title><rect x="90.2878%" y="1845" width="0.0117%" height="15" fill="rgb(242,117,48)" fg:x="24267985822" fg:w="3139660"/><text x="90.5378%" y="1855.50"></text></g><g><title>enqueue_task_fair (22,731,563 samples, 0.08%)</title><rect x="90.2303%" y="1909" width="0.0846%" height="15" fill="rgb(228,41,36)" fg:x="24252538375" fg:w="22731563"/><text x="90.4803%" y="1919.50"></text></g><g><title>psi_group_change (208,918,597 samples, 0.78%)</title><rect x="90.4915%" y="1893" width="0.7773%" height="15" fill="rgb(212,3,32)" fg:x="24322724770" fg:w="208918597"/><text x="90.7415%" y="1903.50"></text></g><g><title>sched_clock (114,134,290 samples, 0.42%)</title><rect x="91.3133%" y="1877" width="0.4246%" height="15" fill="rgb(233,41,49)" fg:x="24543621771" fg:w="114134290"/><text x="91.5633%" y="1887.50"></text></g><g><title>sched_clock_noinstr (109,884,627 samples, 0.41%)</title><rect x="91.3291%" y="1861" width="0.4088%" height="15" fill="rgb(252,170,49)" fg:x="24547871434" fg:w="109884627"/><text x="91.5791%" y="1871.50"></text></g><g><title>native_sched_clock (109,884,627 samples, 0.41%)</title><rect x="91.3291%" y="1845" width="0.4088%" height="15" fill="rgb(229,53,26)" fg:x="24547871434" fg:w="109884627"/><text x="91.5791%" y="1855.50"></text></g><g><title>psi_task_change (382,808,243 samples, 1.42%)</title><rect x="90.3246%" y="1909" width="1.4242%" height="15" fill="rgb(217,157,12)" fg:x="24277878806" fg:w="382808243"/><text x="90.5746%" y="1919.50"></text></g><g><title>sched_clock_cpu (129,043,682 samples, 0.48%)</title><rect x="91.2687%" y="1893" width="0.4801%" height="15" fill="rgb(227,17,9)" fg:x="24531643367" fg:w="129043682"/><text x="91.5187%" y="1903.50"></text></g><g><title>sched_clock_noinstr (2,930,988 samples, 0.01%)</title><rect x="91.7379%" y="1877" width="0.0109%" height="15" fill="rgb(218,84,12)" fg:x="24657756061" fg:w="2930988"/><text x="91.9879%" y="1887.50"></text></g><g><title>enqueue_task (429,502,227 samples, 1.60%)</title><rect x="90.1859%" y="1925" width="1.5979%" height="15" fill="rgb(212,79,24)" fg:x="24240595304" fg:w="429502227"/><text x="90.4359%" y="1935.50"></text></g><g><title>sched_clock_cpu (9,410,482 samples, 0.04%)</title><rect x="91.7488%" y="1909" width="0.0350%" height="15" fill="rgb(217,222,37)" fg:x="24660687049" fg:w="9410482"/><text x="91.9988%" y="1919.50"></text></g><g><title>enqueue_task_fair (3,182,344 samples, 0.01%)</title><rect x="91.7838%" y="1925" width="0.0118%" height="15" fill="rgb(246,208,8)" fg:x="24670097531" fg:w="3182344"/><text x="92.0338%" y="1935.50"></text></g><g><title>psi_task_change (15,175,485 samples, 0.06%)</title><rect x="91.7957%" y="1925" width="0.0565%" height="15" fill="rgb(244,133,10)" fg:x="24673279875" fg:w="15175485"/><text x="92.0457%" y="1935.50"></text></g><g><title>ttwu_do_activate (459,300,540 samples, 1.71%)</title><rect x="90.1686%" y="1941" width="1.7088%" height="15" fill="rgb(209,219,41)" fg:x="24235953173" fg:w="459300540"/><text x="90.4186%" y="1951.50"></text></g><g><title>sched_mm_cid_migrate_to (6,798,353 samples, 0.03%)</title><rect x="91.8521%" y="1925" width="0.0253%" height="15" fill="rgb(253,175,45)" fg:x="24688455360" fg:w="6798353"/><text x="92.1021%" y="1935.50"></text></g><g><title>sched_clock (6,435,374 samples, 0.02%)</title><rect x="91.8849%" y="1909" width="0.0239%" height="15" fill="rgb(235,100,37)" fg:x="24697252191" fg:w="6435374"/><text x="92.1349%" y="1919.50"></text></g><g><title>sched_clock_noinstr (5,867,832 samples, 0.02%)</title><rect x="91.8870%" y="1893" width="0.0218%" height="15" fill="rgb(225,87,19)" fg:x="24697819733" fg:w="5867832"/><text x="92.1370%" y="1903.50"></text></g><g><title>native_sched_clock (5,867,832 samples, 0.02%)</title><rect x="91.8870%" y="1877" width="0.0218%" height="15" fill="rgb(217,152,17)" fg:x="24697819733" fg:w="5867832"/><text x="92.1370%" y="1887.50"></text></g><g><title>sched_clock_cpu (8,882,832 samples, 0.03%)</title><rect x="91.8849%" y="1925" width="0.0330%" height="15" fill="rgb(235,72,13)" fg:x="24697252191" fg:w="8882832"/><text x="92.1349%" y="1935.50"></text></g><g><title>psi_account_irqtime (7,223,121 samples, 0.03%)</title><rect x="92.0537%" y="1909" width="0.0269%" height="15" fill="rgb(233,140,18)" fg:x="24742637183" fg:w="7223121"/><text x="92.3037%" y="1919.50"></text></g><g><title>sched_ttwu_pending (603,278,695 samples, 2.24%)</title><rect x="89.8572%" y="1957" width="2.2445%" height="15" fill="rgb(207,212,28)" fg:x="24152237224" fg:w="603278695"/><text x="90.1072%" y="1967.50">s..</text></g><g><title>update_rq_clock (60,262,206 samples, 0.22%)</title><rect x="91.8774%" y="1941" width="0.2242%" height="15" fill="rgb(220,130,25)" fg:x="24695253713" fg:w="60262206"/><text x="92.1274%" y="1951.50"></text></g><g><title>update_rq_clock_task (49,380,896 samples, 0.18%)</title><rect x="91.9179%" y="1925" width="0.1837%" height="15" fill="rgb(205,55,34)" fg:x="24706135023" fg:w="49380896"/><text x="92.1679%" y="1935.50"></text></g><g><title>update_irq_load_avg (5,655,615 samples, 0.02%)</title><rect x="92.0806%" y="1909" width="0.0210%" height="15" fill="rgb(237,54,35)" fg:x="24749860304" fg:w="5655615"/><text x="92.3306%" y="1919.50"></text></g><g><title>__flush_smp_call_function_queue (1,380,926,533 samples, 5.14%)</title><rect x="86.9681%" y="1973" width="5.1377%" height="15" fill="rgb(208,67,23)" fg:x="23375699603" fg:w="1380926533"/><text x="87.2181%" y="1983.50">__flus..</text></g><g><title>__x86_indirect_thunk_r11 (2,709,416 samples, 0.01%)</title><rect x="92.1058%" y="1973" width="0.0101%" height="15" fill="rgb(206,207,50)" fg:x="24756626136" fg:w="2709416"/><text x="92.3558%" y="1983.50"></text></g><g><title>llist_reverse_order (10,144,233 samples, 0.04%)</title><rect x="92.1717%" y="1925" width="0.0377%" height="15" fill="rgb(213,211,42)" fg:x="24774357123" fg:w="10144233"/><text x="92.4217%" y="1935.50"></text></g><g><title>_raw_spin_lock_irqsave (3,959,949 samples, 0.01%)</title><rect x="92.2353%" y="1797" width="0.0147%" height="15" fill="rgb(252,197,50)" fg:x="24791456300" fg:w="3959949"/><text x="92.4853%" y="1807.50"></text></g><g><title>__mod_lruvec_page_state (3,479,329 samples, 0.01%)</title><rect x="92.2796%" y="1765" width="0.0129%" height="15" fill="rgb(251,211,41)" fg:x="24803352038" fg:w="3479329"/><text x="92.5296%" y="1775.50"></text></g><g><title>__fprop_add_percpu_max (6,000,969 samples, 0.02%)</title><rect x="92.2993%" y="1749" width="0.0223%" height="15" fill="rgb(229,211,5)" fg:x="24808654177" fg:w="6000969"/><text x="92.5493%" y="1759.50"></text></g><g><title>percpu_counter_add_batch (4,273,430 samples, 0.02%)</title><rect x="92.3058%" y="1733" width="0.0159%" height="15" fill="rgb(239,36,31)" fg:x="24810381716" fg:w="4273430"/><text x="92.5558%" y="1743.50"></text></g><g><title>__wb_writeout_add (7,572,677 samples, 0.03%)</title><rect x="92.2950%" y="1765" width="0.0282%" height="15" fill="rgb(248,67,31)" fg:x="24807496257" fg:w="7572677"/><text x="92.5450%" y="1775.50"></text></g><g><title>ext4_end_bio (35,318,623 samples, 0.13%)</title><rect x="92.2303%" y="1829" width="0.1314%" height="15" fill="rgb(249,55,44)" fg:x="24790089129" fg:w="35318623"/><text x="92.4803%" y="1839.50"></text></g><g><title>ext4_finish_bio (34,988,063 samples, 0.13%)</title><rect x="92.2315%" y="1813" width="0.1302%" height="15" fill="rgb(216,82,12)" fg:x="24790419689" fg:w="34988063"/><text x="92.4815%" y="1823.50"></text></g><g><title>folio_end_writeback (29,519,000 samples, 0.11%)</title><rect x="92.2518%" y="1797" width="0.1098%" height="15" fill="rgb(242,174,1)" fg:x="24795888752" fg:w="29519000"/><text x="92.5018%" y="1807.50"></text></g><g><title>__folio_end_writeback (27,364,390 samples, 0.10%)</title><rect x="92.2599%" y="1781" width="0.1018%" height="15" fill="rgb(208,120,29)" fg:x="24798043362" fg:w="27364390"/><text x="92.5099%" y="1791.50"></text></g><g><title>blk_done_softirq (54,573,916 samples, 0.20%)</title><rect x="92.1677%" y="1941" width="0.2030%" height="15" fill="rgb(221,105,43)" fg:x="24773272351" fg:w="54573916"/><text x="92.4177%" y="1951.50"></text></g><g><title>scsi_complete (43,344,911 samples, 0.16%)</title><rect x="92.2095%" y="1925" width="0.1613%" height="15" fill="rgb(234,124,22)" fg:x="24784501356" fg:w="43344911"/><text x="92.4595%" y="1935.50"></text></g><g><title>scsi_finish_command (41,156,796 samples, 0.15%)</title><rect x="92.2176%" y="1909" width="0.1531%" height="15" fill="rgb(212,23,30)" fg:x="24786689471" fg:w="41156796"/><text x="92.4676%" y="1919.50"></text></g><g><title>scsi_io_completion (40,637,383 samples, 0.15%)</title><rect x="92.2195%" y="1893" width="0.1512%" height="15" fill="rgb(219,122,53)" fg:x="24787208884" fg:w="40637383"/><text x="92.4695%" y="1903.50"></text></g><g><title>scsi_end_request (40,637,383 samples, 0.15%)</title><rect x="92.2195%" y="1877" width="0.1512%" height="15" fill="rgb(248,84,24)" fg:x="24787208884" fg:w="40637383"/><text x="92.4695%" y="1887.50"></text></g><g><title>blk_update_request (40,025,306 samples, 0.15%)</title><rect x="92.2218%" y="1861" width="0.1489%" height="15" fill="rgb(245,115,18)" fg:x="24787820961" fg:w="40025306"/><text x="92.4718%" y="1871.50"></text></g><g><title>bio_endio (40,025,306 samples, 0.15%)</title><rect x="92.2218%" y="1845" width="0.1489%" height="15" fill="rgb(227,176,51)" fg:x="24787820961" fg:w="40025306"/><text x="92.4718%" y="1855.50"></text></g><g><title>sched_clock (7,442,372 samples, 0.03%)</title><rect x="92.4759%" y="1909" width="0.0277%" height="15" fill="rgb(229,63,42)" fg:x="24856114466" fg:w="7442372"/><text x="92.7259%" y="1919.50"></text></g><g><title>sched_clock_noinstr (6,511,315 samples, 0.02%)</title><rect x="92.4794%" y="1893" width="0.0242%" height="15" fill="rgb(247,202,24)" fg:x="24857045523" fg:w="6511315"/><text x="92.7294%" y="1903.50"></text></g><g><title>native_sched_clock (6,511,315 samples, 0.02%)</title><rect x="92.4794%" y="1877" width="0.0242%" height="15" fill="rgb(244,173,20)" fg:x="24857045523" fg:w="6511315"/><text x="92.7294%" y="1887.50"></text></g><g><title>irqtime_account_irq (36,195,629 samples, 0.13%)</title><rect x="92.3707%" y="1941" width="0.1347%" height="15" fill="rgb(242,81,47)" fg:x="24827846267" fg:w="36195629"/><text x="92.6207%" y="1951.50"></text></g><g><title>sched_clock_cpu (7,927,430 samples, 0.03%)</title><rect x="92.4759%" y="1925" width="0.0295%" height="15" fill="rgb(231,185,54)" fg:x="24856114466" fg:w="7927430"/><text x="92.7259%" y="1935.50"></text></g><g><title>__kprobes_text_end (98,420,005 samples, 0.37%)</title><rect x="92.1430%" y="1957" width="0.3662%" height="15" fill="rgb(243,55,32)" fg:x="24766628791" fg:w="98420005"/><text x="92.3930%" y="1967.50"></text></g><g><title>do_softirq (105,937,405 samples, 0.39%)</title><rect x="92.1158%" y="1973" width="0.3941%" height="15" fill="rgb(208,167,19)" fg:x="24759335552" fg:w="105937405"/><text x="92.3658%" y="1983.50"></text></g><g><title>llist_reverse_order (4,411,706 samples, 0.02%)</title><rect x="92.5100%" y="1973" width="0.0164%" height="15" fill="rgb(231,72,35)" fg:x="24865272957" fg:w="4411706"/><text x="92.7600%" y="1983.50"></text></g><g><title>flush_smp_call_function_queue (1,684,363,818 samples, 6.27%)</title><rect x="86.3072%" y="1989" width="6.2666%" height="15" fill="rgb(250,173,51)" fg:x="23198071575" fg:w="1684363818"/><text x="86.5572%" y="1999.50">flush_sm..</text></g><g><title>sched_ttwu_pending (12,750,730 samples, 0.05%)</title><rect x="92.5264%" y="1973" width="0.0474%" height="15" fill="rgb(209,5,22)" fg:x="24869684663" fg:w="12750730"/><text x="92.7764%" y="1983.50"></text></g><g><title>nohz_run_idle_balance (6,412,633 samples, 0.02%)</title><rect x="92.5792%" y="1989" width="0.0239%" height="15" fill="rgb(250,174,19)" fg:x="24883876540" fg:w="6412633"/><text x="92.8292%" y="1999.50"></text></g><g><title>_nohz_idle_balance (3,832,348 samples, 0.01%)</title><rect x="92.5888%" y="1973" width="0.0143%" height="15" fill="rgb(217,3,49)" fg:x="24886456825" fg:w="3832348"/><text x="92.8388%" y="1983.50"></text></g><g><title>nr_iowait_cpu (4,317,799 samples, 0.02%)</title><rect x="92.6031%" y="1989" width="0.0161%" height="15" fill="rgb(218,225,5)" fg:x="24890289173" fg:w="4317799"/><text x="92.8531%" y="1999.50"></text></g><g><title>enqueue_task (3,247,415 samples, 0.01%)</title><rect x="92.6714%" y="1829" width="0.0121%" height="15" fill="rgb(236,89,11)" fg:x="24908651718" fg:w="3247415"/><text x="92.9214%" y="1839.50"></text></g><g><title>__sysvec_call_function_single (4,988,689 samples, 0.02%)</title><rect x="92.6701%" y="1909" width="0.0186%" height="15" fill="rgb(206,33,28)" fg:x="24908302893" fg:w="4988689"/><text x="92.9201%" y="1919.50"></text></g><g><title>generic_smp_call_function_single_interrupt (4,988,689 samples, 0.02%)</title><rect x="92.6701%" y="1893" width="0.0186%" height="15" fill="rgb(241,56,42)" fg:x="24908302893" fg:w="4988689"/><text x="92.9201%" y="1903.50"></text></g><g><title>__flush_smp_call_function_queue (4,988,689 samples, 0.02%)</title><rect x="92.6701%" y="1877" width="0.0186%" height="15" fill="rgb(222,44,11)" fg:x="24908302893" fg:w="4988689"/><text x="92.9201%" y="1887.50"></text></g><g><title>sched_ttwu_pending (4,639,864 samples, 0.02%)</title><rect x="92.6714%" y="1861" width="0.0173%" height="15" fill="rgb(234,111,20)" fg:x="24908651718" fg:w="4639864"/><text x="92.9214%" y="1871.50"></text></g><g><title>ttwu_do_activate (4,639,864 samples, 0.02%)</title><rect x="92.6714%" y="1845" width="0.0173%" height="15" fill="rgb(237,77,6)" fg:x="24908651718" fg:w="4639864"/><text x="92.9214%" y="1855.50"></text></g><g><title>finish_task_switch (8,661,387 samples, 0.03%)</title><rect x="92.6637%" y="1957" width="0.0322%" height="15" fill="rgb(235,111,23)" fg:x="24906594139" fg:w="8661387"/><text x="92.9137%" y="1967.50"></text></g><g><title>asm_sysvec_call_function_single (6,952,633 samples, 0.03%)</title><rect x="92.6701%" y="1941" width="0.0259%" height="15" fill="rgb(251,135,29)" fg:x="24908302893" fg:w="6952633"/><text x="92.9201%" y="1951.50"></text></g><g><title>sysvec_call_function_single (6,952,633 samples, 0.03%)</title><rect x="92.6701%" y="1925" width="0.0259%" height="15" fill="rgb(217,57,1)" fg:x="24908302893" fg:w="6952633"/><text x="92.9201%" y="1935.50"></text></g><g><title>set_next_entity (4,840,173 samples, 0.02%)</title><rect x="92.7061%" y="1925" width="0.0180%" height="15" fill="rgb(249,119,31)" fg:x="24917974496" fg:w="4840173"/><text x="92.9561%" y="1935.50"></text></g><g><title>pick_next_task_fair (7,643,139 samples, 0.03%)</title><rect x="92.6980%" y="1941" width="0.0284%" height="15" fill="rgb(233,164,33)" fg:x="24915796783" fg:w="7643139"/><text x="92.9480%" y="1951.50"></text></g><g><title>pick_next_task (9,585,052 samples, 0.04%)</title><rect x="92.6972%" y="1957" width="0.0357%" height="15" fill="rgb(250,217,43)" fg:x="24915605838" fg:w="9585052"/><text x="92.9472%" y="1967.50"></text></g><g><title>prepare_task_switch (3,033,740 samples, 0.01%)</title><rect x="92.7329%" y="1957" width="0.0113%" height="15" fill="rgb(232,154,50)" fg:x="24925190890" fg:w="3033740"/><text x="92.9829%" y="1967.50"></text></g><g><title>psi_task_switch (6,997,840 samples, 0.03%)</title><rect x="92.7442%" y="1957" width="0.0260%" height="15" fill="rgb(227,190,8)" fg:x="24928224630" fg:w="6997840"/><text x="92.9942%" y="1967.50"></text></g><g><title>psi_group_change (4,449,025 samples, 0.02%)</title><rect x="92.7537%" y="1941" width="0.0166%" height="15" fill="rgb(209,217,32)" fg:x="24930773445" fg:w="4449025"/><text x="93.0037%" y="1951.50"></text></g><g><title>__sched_text_start (39,134,196 samples, 0.15%)</title><rect x="92.6340%" y="1973" width="0.1456%" height="15" fill="rgb(243,203,50)" fg:x="24898615359" fg:w="39134196"/><text x="92.8840%" y="1983.50"></text></g><g><title>schedule_idle (42,702,105 samples, 0.16%)</title><rect x="92.6314%" y="1989" width="0.1589%" height="15" fill="rgb(232,152,27)" fg:x="24897915576" fg:w="42702105"/><text x="92.8814%" y="1999.50"></text></g><g><title>tick_check_broadcast_expired (7,214,244 samples, 0.03%)</title><rect x="92.7903%" y="1989" width="0.0268%" height="15" fill="rgb(240,34,29)" fg:x="24940617681" fg:w="7214244"/><text x="93.0403%" y="1999.50"></text></g><g><title>ktime_get (2,766,052 samples, 0.01%)</title><rect x="92.8201%" y="1973" width="0.0103%" height="15" fill="rgb(215,185,52)" fg:x="24948634856" fg:w="2766052"/><text x="93.0701%" y="1983.50"></text></g><g><title>tick_nohz_idle_enter (5,204,739 samples, 0.02%)</title><rect x="92.8180%" y="1989" width="0.0194%" height="15" fill="rgb(240,89,49)" fg:x="24948067764" fg:w="5204739"/><text x="93.0680%" y="1999.50"></text></g><g><title>account_idle_ticks (2,716,800 samples, 0.01%)</title><rect x="92.9191%" y="1973" width="0.0101%" height="15" fill="rgb(225,12,52)" fg:x="24975231415" fg:w="2716800"/><text x="93.1691%" y="1983.50"></text></g><g><title>hrtimer_forward (21,278,501 samples, 0.08%)</title><rect x="92.9360%" y="1973" width="0.0792%" height="15" fill="rgb(239,128,45)" fg:x="24979780572" fg:w="21278501"/><text x="93.1860%" y="1983.50"></text></g><g><title>ktime_get (62,317,494 samples, 0.23%)</title><rect x="93.0230%" y="1973" width="0.2318%" height="15" fill="rgb(211,78,47)" fg:x="25003153381" fg:w="62317494"/><text x="93.2730%" y="1983.50"></text></g><g><title>read_tsc (27,789,476 samples, 0.10%)</title><rect x="93.1514%" y="1957" width="0.1034%" height="15" fill="rgb(232,31,21)" fg:x="25037681399" fg:w="27789476"/><text x="93.4014%" y="1967.50"></text></g><g><title>nr_iowait_cpu (36,427,629 samples, 0.14%)</title><rect x="93.2548%" y="1973" width="0.1355%" height="15" fill="rgb(222,168,14)" fg:x="25065470875" fg:w="36427629"/><text x="93.5048%" y="1983.50"></text></g><g><title>calc_load_nohz_stop (11,274,197 samples, 0.04%)</title><rect x="93.4803%" y="1957" width="0.0419%" height="15" fill="rgb(209,128,24)" fg:x="25126092078" fg:w="11274197"/><text x="93.7303%" y="1967.50"></text></g><g><title>_raw_spin_unlock_irqrestore (5,826,665 samples, 0.02%)</title><rect x="93.5872%" y="1941" width="0.0217%" height="15" fill="rgb(249,35,13)" fg:x="25154801019" fg:w="5826665"/><text x="93.8372%" y="1951.50"></text></g><g><title>__remove_hrtimer (5,179,278 samples, 0.02%)</title><rect x="93.6333%" y="1925" width="0.0193%" height="15" fill="rgb(218,7,2)" fg:x="25167207592" fg:w="5179278"/><text x="93.8833%" y="1935.50"></text></g><g><title>_raw_spin_lock_irqsave (4,540,777 samples, 0.02%)</title><rect x="93.6526%" y="1925" width="0.0169%" height="15" fill="rgb(238,107,27)" fg:x="25172386870" fg:w="4540777"/><text x="93.9026%" y="1935.50"></text></g><g><title>ktime_get (9,510,671 samples, 0.04%)</title><rect x="93.8189%" y="1861" width="0.0354%" height="15" fill="rgb(217,88,38)" fg:x="25217086697" fg:w="9510671"/><text x="94.0689%" y="1871.50"></text></g><g><title>read_tsc (6,548,790 samples, 0.02%)</title><rect x="93.8299%" y="1845" width="0.0244%" height="15" fill="rgb(230,207,0)" fg:x="25220048578" fg:w="6548790"/><text x="94.0799%" y="1855.50"></text></g><g><title>native_apic_mem_write (3,335,048 samples, 0.01%)</title><rect x="93.8543%" y="1861" width="0.0124%" height="15" fill="rgb(249,64,54)" fg:x="25226597368" fg:w="3335048"/><text x="94.1043%" y="1871.50"></text></g><g><title>clockevents_program_event (16,819,707 samples, 0.06%)</title><rect x="93.8106%" y="1877" width="0.0626%" height="15" fill="rgb(231,7,11)" fg:x="25214854731" fg:w="16819707"/><text x="94.0606%" y="1887.50"></text></g><g><title>tick_program_event (18,010,206 samples, 0.07%)</title><rect x="93.8075%" y="1893" width="0.0670%" height="15" fill="rgb(205,149,21)" fg:x="25214017773" fg:w="18010206"/><text x="94.0575%" y="1903.50"></text></g><g><title>rb_erase (5,392,435 samples, 0.02%)</title><rect x="93.8847%" y="1877" width="0.0201%" height="15" fill="rgb(215,126,34)" fg:x="25234764885" fg:w="5392435"/><text x="94.1347%" y="1887.50"></text></g><g><title>__remove_hrtimer (53,450,776 samples, 0.20%)</title><rect x="93.7109%" y="1909" width="0.1989%" height="15" fill="rgb(241,132,45)" fg:x="25188058905" fg:w="53450776"/><text x="93.9609%" y="1919.50"></text></g><g><title>timerqueue_del (9,481,702 samples, 0.04%)</title><rect x="93.8745%" y="1893" width="0.0353%" height="15" fill="rgb(252,69,32)" fg:x="25232027979" fg:w="9481702"/><text x="94.1245%" y="1903.50"></text></g><g><title>hrtimer_cancel (103,996,023 samples, 0.39%)</title><rect x="93.5285%" y="1957" width="0.3869%" height="15" fill="rgb(232,204,19)" fg:x="25139034700" fg:w="103996023"/><text x="93.7785%" y="1967.50"></text></g><g><title>hrtimer_try_to_cancel (82,403,039 samples, 0.31%)</title><rect x="93.6088%" y="1941" width="0.3066%" height="15" fill="rgb(249,15,47)" fg:x="25160627684" fg:w="82403039"/><text x="93.8588%" y="1951.50"></text></g><g><title>remove_hrtimer (63,425,049 samples, 0.24%)</title><rect x="93.6794%" y="1925" width="0.2360%" height="15" fill="rgb(209,227,23)" fg:x="25179605674" fg:w="63425049"/><text x="93.9294%" y="1935.50"></text></g><g><title>hrtimer_forward (6,963,014 samples, 0.03%)</title><rect x="93.9154%" y="1957" width="0.0259%" height="15" fill="rgb(248,92,24)" fg:x="25243030723" fg:w="6963014"/><text x="94.1654%" y="1967.50"></text></g><g><title>_raw_spin_lock_irqsave (25,108,730 samples, 0.09%)</title><rect x="93.9800%" y="1941" width="0.0934%" height="15" fill="rgb(247,59,2)" fg:x="25260391766" fg:w="25108730"/><text x="94.2300%" y="1951.50"></text></g><g><title>enqueue_hrtimer (11,893,792 samples, 0.04%)</title><rect x="94.0751%" y="1941" width="0.0443%" height="15" fill="rgb(221,30,5)" fg:x="25285961126" fg:w="11893792"/><text x="94.3251%" y="1951.50"></text></g><g><title>timerqueue_add (8,683,363 samples, 0.03%)</title><rect x="94.0871%" y="1925" width="0.0323%" height="15" fill="rgb(208,108,53)" fg:x="25289171555" fg:w="8683363"/><text x="94.3371%" y="1935.50"></text></g><g><title>ktime_get (10,309,343 samples, 0.04%)</title><rect x="94.1390%" y="1893" width="0.0384%" height="15" fill="rgb(211,183,26)" fg:x="25303126498" fg:w="10309343"/><text x="94.3890%" y="1903.50"></text></g><g><title>read_tsc (7,580,519 samples, 0.03%)</title><rect x="94.1491%" y="1877" width="0.0282%" height="15" fill="rgb(232,132,4)" fg:x="25305855322" fg:w="7580519"/><text x="94.3991%" y="1887.50"></text></g><g><title>clockevents_program_event (13,841,029 samples, 0.05%)</title><rect x="94.1379%" y="1909" width="0.0515%" height="15" fill="rgb(253,128,37)" fg:x="25302833421" fg:w="13841029"/><text x="94.3879%" y="1919.50"></text></g><g><title>hrtimer_reprogram (19,326,770 samples, 0.07%)</title><rect x="94.1194%" y="1941" width="0.0719%" height="15" fill="rgb(221,58,24)" fg:x="25297854918" fg:w="19326770"/><text x="94.3694%" y="1951.50"></text></g><g><title>tick_program_event (15,519,687 samples, 0.06%)</title><rect x="94.1335%" y="1925" width="0.0577%" height="15" fill="rgb(230,54,45)" fg:x="25301662001" fg:w="15519687"/><text x="94.3835%" y="1935.50"></text></g><g><title>switch_hrtimer_base (8,942,512 samples, 0.03%)</title><rect x="94.1994%" y="1941" width="0.0333%" height="15" fill="rgb(254,21,18)" fg:x="25319363684" fg:w="8942512"/><text x="94.4494%" y="1951.50"></text></g><g><title>hrtimer_start_range_ns (79,393,041 samples, 0.30%)</title><rect x="93.9455%" y="1957" width="0.2954%" height="15" fill="rgb(221,108,0)" fg:x="25251107490" fg:w="79393041"/><text x="94.1955%" y="1967.50"></text></g><g><title>switch_hrtimer_base (6,527,829 samples, 0.02%)</title><rect x="94.2441%" y="1957" width="0.0243%" height="15" fill="rgb(206,95,1)" fg:x="25331378573" fg:w="6527829"/><text x="94.4941%" y="1967.50"></text></g><g><title>tick_do_update_jiffies64 (44,559,617 samples, 0.17%)</title><rect x="94.2684%" y="1957" width="0.1658%" height="15" fill="rgb(237,52,5)" fg:x="25337906402" fg:w="44559617"/><text x="94.5184%" y="1967.50"></text></g><g><title>tick_nohz_restart_sched_tick (278,142,862 samples, 1.03%)</title><rect x="93.4057%" y="1973" width="1.0348%" height="15" fill="rgb(218,150,34)" fg:x="25106037095" fg:w="278142862"/><text x="93.6557%" y="1983.50"></text></g><g><title>tick_nohz_idle_exit (434,957,002 samples, 1.62%)</title><rect x="92.8374%" y="1989" width="1.6182%" height="15" fill="rgb(235,194,28)" fg:x="24953272503" fg:w="434957002"/><text x="93.0874%" y="1999.50"></text></g><g><title>hrtimer_start_range_ns (9,187,818 samples, 0.03%)</title><rect x="94.4900%" y="1957" width="0.0342%" height="15" fill="rgb(245,92,18)" fg:x="25397468995" fg:w="9187818"/><text x="94.7400%" y="1967.50"></text></g><g><title>need_update (5,465,373 samples, 0.02%)</title><rect x="94.5295%" y="1941" width="0.0203%" height="15" fill="rgb(253,203,53)" fg:x="25408101892" fg:w="5465373"/><text x="94.7795%" y="1951.50"></text></g><g><title>tick_nohz_idle_stop_tick (38,836,542 samples, 0.14%)</title><rect x="94.4576%" y="1989" width="0.1445%" height="15" fill="rgb(249,185,47)" fg:x="25388751461" fg:w="38836542"/><text x="94.7076%" y="1999.50"></text></g><g><title>tick_nohz_stop_tick (33,648,845 samples, 0.13%)</title><rect x="94.4769%" y="1973" width="0.1252%" height="15" fill="rgb(252,194,52)" fg:x="25393939158" fg:w="33648845"/><text x="94.7269%" y="1983.50"></text></g><g><title>quiet_vmstat (20,931,190 samples, 0.08%)</title><rect x="94.5242%" y="1957" width="0.0779%" height="15" fill="rgb(210,53,36)" fg:x="25406656813" fg:w="20931190"/><text x="94.7742%" y="1967.50"></text></g><g><title>refresh_cpu_vm_stats (13,002,553 samples, 0.05%)</title><rect x="94.5537%" y="1941" width="0.0484%" height="15" fill="rgb(237,37,25)" fg:x="25414585450" fg:w="13002553"/><text x="94.8037%" y="1951.50"></text></g><g><title>do_idle (13,568,434,810 samples, 50.48%)</title><rect x="44.1329%" y="2005" width="50.4807%" height="15" fill="rgb(242,116,27)" fg:x="11862252119" fg:w="13568434810"/><text x="44.3829%" y="2015.50">do_idle</text></g><g><title>flush_smp_call_function_queue (19,243,745 samples, 0.07%)</title><rect x="94.6136%" y="2005" width="0.0716%" height="15" fill="rgb(213,185,26)" fg:x="25430686929" fg:w="19243745"/><text x="94.8636%" y="2015.50"></text></g><g><title>cpu_startup_entry (13,606,382,825 samples, 50.62%)</title><rect x="44.0884%" y="2021" width="50.6219%" height="15" fill="rgb(225,204,8)" fg:x="11850295046" fg:w="13606382825"/><text x="44.3384%" y="2031.50">cpu_startup_entry</text></g><g><title>[vmlinux] (13,609,005,165 samples, 50.63%)</title><rect x="44.0884%" y="2037" width="50.6316%" height="15" fill="rgb(254,111,37)" fg:x="11850295046" fg:w="13609005165"/><text x="44.3384%" y="2047.50">[vmlinux]</text></g><g><title>asm_sysvec_apic_timer_interrupt (6,565,609 samples, 0.02%)</title><rect x="94.7354%" y="1909" width="0.0244%" height="15" fill="rgb(242,35,9)" fg:x="25463424676" fg:w="6565609"/><text x="94.9854%" y="1919.50"></text></g><g><title>asm_sysvec_call_function_single (85,459,893 samples, 0.32%)</title><rect x="94.7598%" y="1909" width="0.3179%" height="15" fill="rgb(232,138,49)" fg:x="25469990285" fg:w="85459893"/><text x="95.0098%" y="1919.50"></text></g><g><title>acpi_processor_ffh_cstate_enter (5,656,046 samples, 0.02%)</title><rect x="95.0820%" y="1861" width="0.0210%" height="15" fill="rgb(247,56,4)" fg:x="25556580646" fg:w="5656046"/><text x="95.3320%" y="1871.50"></text></g><g><title>acpi_idle_enter (9,708,081 samples, 0.04%)</title><rect x="95.0790%" y="1893" width="0.0361%" height="15" fill="rgb(226,179,17)" fg:x="25555794435" fg:w="9708081"/><text x="95.3290%" y="1903.50"></text></g><g><title>acpi_idle_do_entry (8,921,870 samples, 0.03%)</title><rect x="95.0820%" y="1877" width="0.0332%" height="15" fill="rgb(216,163,45)" fg:x="25556580646" fg:w="8921870"/><text x="95.3320%" y="1887.50"></text></g><g><title>io_idle (3,265,824 samples, 0.01%)</title><rect x="95.1030%" y="1861" width="0.0122%" height="15" fill="rgb(211,157,3)" fg:x="25562236692" fg:w="3265824"/><text x="95.3530%" y="1871.50"></text></g><g><title>__run_hrtimer (3,168,061 samples, 0.01%)</title><rect x="95.1929%" y="1813" width="0.0118%" height="15" fill="rgb(234,44,20)" fg:x="25586399184" fg:w="3168061"/><text x="95.4429%" y="1823.50"></text></g><g><title>__hrtimer_run_queues (4,497,050 samples, 0.02%)</title><rect x="95.1904%" y="1829" width="0.0167%" height="15" fill="rgb(254,138,23)" fg:x="25585730635" fg:w="4497050"/><text x="95.4404%" y="1839.50"></text></g><g><title>_raw_spin_lock_irqsave (5,869,141 samples, 0.02%)</title><rect x="95.2190%" y="1829" width="0.0218%" height="15" fill="rgb(206,119,39)" fg:x="25593410200" fg:w="5869141"/><text x="95.4690%" y="1839.50"></text></g><g><title>ktime_get_update_offsets_now (34,992,825 samples, 0.13%)</title><rect x="95.2408%" y="1829" width="0.1302%" height="15" fill="rgb(231,105,52)" fg:x="25599279341" fg:w="34992825"/><text x="95.4908%" y="1839.50"></text></g><g><title>read_tsc (25,624,102 samples, 0.10%)</title><rect x="95.2757%" y="1813" width="0.0953%" height="15" fill="rgb(250,20,5)" fg:x="25608648064" fg:w="25624102"/><text x="95.5257%" y="1823.50"></text></g><g><title>hrtimer_interrupt (56,801,475 samples, 0.21%)</title><rect x="95.1683%" y="1845" width="0.2113%" height="15" fill="rgb(215,198,30)" fg:x="25579785071" fg:w="56801475"/><text x="95.4183%" y="1855.50"></text></g><g><title>__sysvec_apic_timer_interrupt (74,923,620 samples, 0.28%)</title><rect x="95.1313%" y="1861" width="0.2787%" height="15" fill="rgb(246,142,8)" fg:x="25569855780" fg:w="74923620"/><text x="95.3813%" y="1871.50"></text></g><g><title>ktime_get_update_offsets_now (8,192,854 samples, 0.03%)</title><rect x="95.3796%" y="1845" width="0.0305%" height="15" fill="rgb(243,26,38)" fg:x="25636586546" fg:w="8192854"/><text x="95.6296%" y="1855.50"></text></g><g><title>hrtimer_interrupt (4,853,881 samples, 0.02%)</title><rect x="95.4221%" y="1861" width="0.0181%" height="15" fill="rgb(205,133,28)" fg:x="25648002586" fg:w="4853881"/><text x="95.6721%" y="1871.50"></text></g><g><title>sched_clock (5,860,113 samples, 0.02%)</title><rect x="95.6577%" y="1813" width="0.0218%" height="15" fill="rgb(212,34,0)" fg:x="25711342341" fg:w="5860113"/><text x="95.9077%" y="1823.50"></text></g><g><title>sched_clock_noinstr (5,433,190 samples, 0.02%)</title><rect x="95.6593%" y="1797" width="0.0202%" height="15" fill="rgb(251,226,22)" fg:x="25711769264" fg:w="5433190"/><text x="95.9093%" y="1807.50"></text></g><g><title>native_sched_clock (5,433,190 samples, 0.02%)</title><rect x="95.6593%" y="1781" width="0.0202%" height="15" fill="rgb(252,119,9)" fg:x="25711769264" fg:w="5433190"/><text x="95.9093%" y="1791.50"></text></g><g><title>irqtime_account_irq (62,987,298 samples, 0.23%)</title><rect x="95.4493%" y="1845" width="0.2343%" height="15" fill="rgb(213,150,50)" fg:x="25655311467" fg:w="62987298"/><text x="95.6993%" y="1855.50"></text></g><g><title>sched_clock_cpu (7,399,016 samples, 0.03%)</title><rect x="95.6561%" y="1829" width="0.0275%" height="15" fill="rgb(212,24,39)" fg:x="25710899749" fg:w="7399016"/><text x="95.9061%" y="1839.50"></text></g><g><title>nr_iowait_cpu (5,247,281 samples, 0.02%)</title><rect x="95.6863%" y="1845" width="0.0195%" height="15" fill="rgb(213,46,39)" fg:x="25719029185" fg:w="5247281"/><text x="95.9363%" y="1855.50"></text></g><g><title>ktime_get (18,685,071 samples, 0.07%)</title><rect x="95.7819%" y="1829" width="0.0695%" height="15" fill="rgb(239,106,12)" fg:x="25744705423" fg:w="18685071"/><text x="96.0319%" y="1839.50"></text></g><g><title>read_tsc (13,942,679 samples, 0.05%)</title><rect x="95.7995%" y="1813" width="0.0519%" height="15" fill="rgb(249,229,21)" fg:x="25749447815" fg:w="13942679"/><text x="96.0495%" y="1823.50"></text></g><g><title>nr_iowait_cpu (6,126,451 samples, 0.02%)</title><rect x="95.8514%" y="1829" width="0.0228%" height="15" fill="rgb(212,158,3)" fg:x="25763390494" fg:w="6126451"/><text x="96.1014%" y="1839.50"></text></g><g><title>read_tsc (4,598,225 samples, 0.02%)</title><rect x="95.8742%" y="1829" width="0.0171%" height="15" fill="rgb(253,26,48)" fg:x="25769516945" fg:w="4598225"/><text x="96.1242%" y="1839.50"></text></g><g><title>irq_enter_rcu (137,502,746 samples, 0.51%)</title><rect x="95.4401%" y="1861" width="0.5116%" height="15" fill="rgb(238,178,20)" fg:x="25652856467" fg:w="137502746"/><text x="95.6901%" y="1871.50"></text></g><g><title>tick_irq_enter (62,955,432 samples, 0.23%)</title><rect x="95.7175%" y="1845" width="0.2342%" height="15" fill="rgb(208,86,15)" fg:x="25727403781" fg:w="62955432"/><text x="95.9675%" y="1855.50"></text></g><g><title>tick_check_oneshot_broadcast_this_cpu (15,423,340 samples, 0.06%)</title><rect x="95.8943%" y="1829" width="0.0574%" height="15" fill="rgb(239,42,53)" fg:x="25774935873" fg:w="15423340"/><text x="96.1443%" y="1839.50"></text></g><g><title>irqentry_enter (3,257,407 samples, 0.01%)</title><rect x="95.9517%" y="1861" width="0.0121%" height="15" fill="rgb(245,226,8)" fg:x="25790359213" fg:w="3257407"/><text x="96.2017%" y="1871.50"></text></g><g><title>irqtime_account_irq (5,072,780 samples, 0.02%)</title><rect x="95.9638%" y="1861" width="0.0189%" height="15" fill="rgb(216,176,32)" fg:x="25793616620" fg:w="5072780"/><text x="96.2138%" y="1871.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (236,581,202 samples, 0.88%)</title><rect x="95.1166%" y="1893" width="0.8802%" height="15" fill="rgb(231,186,21)" fg:x="25565892373" fg:w="236581202"/><text x="95.3666%" y="1903.50"></text></g><g><title>sysvec_apic_timer_interrupt (235,226,145 samples, 0.88%)</title><rect x="95.1216%" y="1877" width="0.8751%" height="15" fill="rgb(205,95,49)" fg:x="25567247430" fg:w="235226145"/><text x="95.3716%" y="1887.50"></text></g><g><title>irqentry_enter (7,418,850 samples, 0.03%)</title><rect x="95.9968%" y="1877" width="0.0276%" height="15" fill="rgb(217,145,8)" fg:x="25802473575" fg:w="7418850"/><text x="96.2468%" y="1887.50"></text></g><g><title>__sysvec_call_function_single (5,763,996 samples, 0.02%)</title><rect x="96.0808%" y="1861" width="0.0214%" height="15" fill="rgb(239,144,48)" fg:x="25825050804" fg:w="5763996"/><text x="96.3308%" y="1871.50"></text></g><g><title>generic_smp_call_function_single_interrupt (5,474,531 samples, 0.02%)</title><rect x="96.0819%" y="1845" width="0.0204%" height="15" fill="rgb(214,189,23)" fg:x="25825340269" fg:w="5474531"/><text x="96.3319%" y="1855.50"></text></g><g><title>__flush_smp_call_function_queue (5,474,531 samples, 0.02%)</title><rect x="96.0819%" y="1829" width="0.0204%" height="15" fill="rgb(229,157,17)" fg:x="25825340269" fg:w="5474531"/><text x="96.3319%" y="1839.50"></text></g><g><title>ct_irq_enter (54,264,241 samples, 0.20%)</title><rect x="96.1022%" y="1861" width="0.2019%" height="15" fill="rgb(230,5,48)" fg:x="25830814800" fg:w="54264241"/><text x="96.3522%" y="1871.50"></text></g><g><title>irqtime_account_irq (6,651,180 samples, 0.02%)</title><rect x="96.3221%" y="1845" width="0.0247%" height="15" fill="rgb(224,156,48)" fg:x="25889911973" fg:w="6651180"/><text x="96.5721%" y="1855.50"></text></g><g><title>ktime_get (16,688,698 samples, 0.06%)</title><rect x="96.4083%" y="1829" width="0.0621%" height="15" fill="rgb(223,14,29)" fg:x="25913077995" fg:w="16688698"/><text x="96.6583%" y="1839.50"></text></g><g><title>read_tsc (13,418,723 samples, 0.05%)</title><rect x="96.4205%" y="1813" width="0.0499%" height="15" fill="rgb(229,96,36)" fg:x="25916347970" fg:w="13418723"/><text x="96.6705%" y="1823.50"></text></g><g><title>nr_iowait_cpu (7,474,351 samples, 0.03%)</title><rect x="96.4704%" y="1829" width="0.0278%" height="15" fill="rgb(231,102,53)" fg:x="25929766693" fg:w="7474351"/><text x="96.7204%" y="1839.50"></text></g><g><title>tick_check_oneshot_broadcast_this_cpu (35,999,884 samples, 0.13%)</title><rect x="96.5073%" y="1829" width="0.1339%" height="15" fill="rgb(210,77,38)" fg:x="25939693096" fg:w="35999884"/><text x="96.7573%" y="1839.50"></text></g><g><title>tick_irq_enter (82,907,481 samples, 0.31%)</title><rect x="96.3636%" y="1845" width="0.3085%" height="15" fill="rgb(235,131,6)" fg:x="25901070035" fg:w="82907481"/><text x="96.6136%" y="1855.50"></text></g><g><title>tick_do_update_jiffies64 (8,284,536 samples, 0.03%)</title><rect x="96.6412%" y="1829" width="0.0308%" height="15" fill="rgb(252,55,38)" fg:x="25975692980" fg:w="8284536"/><text x="96.8912%" y="1839.50"></text></g><g><title>irq_enter_rcu (99,742,792 samples, 0.37%)</title><rect x="96.3041%" y="1861" width="0.3711%" height="15" fill="rgb(246,38,14)" fg:x="25885079041" fg:w="99742792"/><text x="96.5541%" y="1871.50"></text></g><g><title>_raw_spin_lock_irqsave (6,639,550 samples, 0.02%)</title><rect x="96.7007%" y="1669" width="0.0247%" height="15" fill="rgb(242,27,5)" fg:x="25991674531" fg:w="6639550"/><text x="96.9507%" y="1679.50"></text></g><g><title>__mod_lruvec_page_state (5,644,214 samples, 0.02%)</title><rect x="96.7704%" y="1637" width="0.0210%" height="15" fill="rgb(228,65,35)" fg:x="26010422120" fg:w="5644214"/><text x="97.0204%" y="1647.50"></text></g><g><title>__fprop_add_percpu_max (11,754,787 samples, 0.04%)</title><rect x="96.8035%" y="1621" width="0.0437%" height="15" fill="rgb(245,93,11)" fg:x="26019295604" fg:w="11754787"/><text x="97.0535%" y="1631.50"></text></g><g><title>percpu_counter_add_batch (7,414,418 samples, 0.03%)</title><rect x="96.8196%" y="1605" width="0.0276%" height="15" fill="rgb(213,1,31)" fg:x="26023635973" fg:w="7414418"/><text x="97.0696%" y="1615.50"></text></g><g><title>__wb_writeout_add (15,375,895 samples, 0.06%)</title><rect x="96.7995%" y="1637" width="0.0572%" height="15" fill="rgb(237,205,14)" fg:x="26018230677" fg:w="15375895"/><text x="97.0495%" y="1647.50"></text></g><g><title>_raw_spin_lock_irqsave (2,748,127 samples, 0.01%)</title><rect x="96.8645%" y="1637" width="0.0102%" height="15" fill="rgb(232,118,45)" fg:x="26035704605" fg:w="2748127"/><text x="97.1145%" y="1647.50"></text></g><g><title>__folio_end_writeback (41,107,456 samples, 0.15%)</title><rect x="96.7455%" y="1653" width="0.1529%" height="15" fill="rgb(218,5,6)" fg:x="26003716212" fg:w="41107456"/><text x="96.9955%" y="1663.50"></text></g><g><title>ext4_end_bio (60,355,300 samples, 0.22%)</title><rect x="96.6790%" y="1701" width="0.2245%" height="15" fill="rgb(251,87,51)" fg:x="25985831961" fg:w="60355300"/><text x="96.9290%" y="1711.50"></text></g><g><title>ext4_finish_bio (59,856,357 samples, 0.22%)</title><rect x="96.6808%" y="1685" width="0.2227%" height="15" fill="rgb(207,225,20)" fg:x="25986330904" fg:w="59856357"/><text x="96.9308%" y="1695.50"></text></g><g><title>folio_end_writeback (47,117,188 samples, 0.18%)</title><rect x="96.7282%" y="1669" width="0.1753%" height="15" fill="rgb(222,78,54)" fg:x="25999070073" fg:w="47117188"/><text x="96.9782%" y="1679.50"></text></g><g><title>blk_done_softirq (61,301,485 samples, 0.23%)</title><rect x="96.6772%" y="1813" width="0.2281%" height="15" fill="rgb(232,85,16)" fg:x="25985363800" fg:w="61301485"/><text x="96.9272%" y="1823.50"></text></g><g><title>scsi_complete (61,301,485 samples, 0.23%)</title><rect x="96.6772%" y="1797" width="0.2281%" height="15" fill="rgb(244,25,33)" fg:x="25985363800" fg:w="61301485"/><text x="96.9272%" y="1807.50"></text></g><g><title>scsi_finish_command (61,301,485 samples, 0.23%)</title><rect x="96.6772%" y="1781" width="0.2281%" height="15" fill="rgb(233,24,36)" fg:x="25985363800" fg:w="61301485"/><text x="96.9272%" y="1791.50"></text></g><g><title>scsi_io_completion (61,301,485 samples, 0.23%)</title><rect x="96.6772%" y="1765" width="0.2281%" height="15" fill="rgb(253,49,54)" fg:x="25985363800" fg:w="61301485"/><text x="96.9272%" y="1775.50"></text></g><g><title>scsi_end_request (61,301,485 samples, 0.23%)</title><rect x="96.6772%" y="1749" width="0.2281%" height="15" fill="rgb(245,12,22)" fg:x="25985363800" fg:w="61301485"/><text x="96.9272%" y="1759.50"></text></g><g><title>blk_update_request (60,833,324 samples, 0.23%)</title><rect x="96.6790%" y="1733" width="0.2263%" height="15" fill="rgb(253,141,28)" fg:x="25985831961" fg:w="60833324"/><text x="96.9290%" y="1743.50"></text></g><g><title>bio_endio (60,833,324 samples, 0.23%)</title><rect x="96.6790%" y="1717" width="0.2263%" height="15" fill="rgb(225,207,27)" fg:x="25985831961" fg:w="60833324"/><text x="96.9290%" y="1727.50"></text></g><g><title>__kprobes_text_end (62,166,333 samples, 0.23%)</title><rect x="96.6752%" y="1829" width="0.2313%" height="15" fill="rgb(220,84,2)" fg:x="25984821833" fg:w="62166333"/><text x="96.9252%" y="1839.50"></text></g><g><title>irq_exit_rcu (62,526,665 samples, 0.23%)</title><rect x="96.6752%" y="1861" width="0.2326%" height="15" fill="rgb(224,37,37)" fg:x="25984821833" fg:w="62526665"/><text x="96.9252%" y="1871.50"></text></g><g><title>__irq_exit_rcu (62,526,665 samples, 0.23%)</title><rect x="96.6752%" y="1845" width="0.2326%" height="15" fill="rgb(220,143,18)" fg:x="25984821833" fg:w="62526665"/><text x="96.9252%" y="1855.50"></text></g><g><title>ct_irq_enter (19,430,372 samples, 0.07%)</title><rect x="98.4014%" y="1845" width="0.0723%" height="15" fill="rgb(210,88,33)" fg:x="26448802568" fg:w="19430372"/><text x="98.6514%" y="1855.50"></text></g><g><title>ct_nmi_enter (19,146,516 samples, 0.07%)</title><rect x="98.4025%" y="1829" width="0.0712%" height="15" fill="rgb(219,87,51)" fg:x="26449086424" fg:w="19146516"/><text x="98.6525%" y="1839.50"></text></g><g><title>irqentry_enter (430,825,255 samples, 1.60%)</title><rect x="96.9078%" y="1861" width="1.6029%" height="15" fill="rgb(211,7,35)" fg:x="26047348498" fg:w="430825255"/><text x="97.1578%" y="1871.50"></text></g><g><title>ct_nmi_enter (9,940,813 samples, 0.04%)</title><rect x="98.4737%" y="1845" width="0.0370%" height="15" fill="rgb(232,77,2)" fg:x="26468232940" fg:w="9940813"/><text x="98.7237%" y="1855.50"></text></g><g><title>asm_sysvec_call_function_single (677,077,518 samples, 2.52%)</title><rect x="95.9968%" y="1893" width="2.5190%" height="15" fill="rgb(249,94,25)" fg:x="25802473575" fg:w="677077518"/><text x="96.2468%" y="1903.50">as..</text></g><g><title>sysvec_call_function_single (669,658,668 samples, 2.49%)</title><rect x="96.0244%" y="1877" width="2.4914%" height="15" fill="rgb(215,112,2)" fg:x="25809892425" fg:w="669658668"/><text x="96.2744%" y="1887.50">sy..</text></g><g><title>cpuidle_enter_state (962,450,248 samples, 3.58%)</title><rect x="95.0790%" y="1909" width="3.5807%" height="15" fill="rgb(226,115,48)" fg:x="25555794435" fg:w="962450248"/><text x="95.3290%" y="1919.50">cpui..</text></g><g><title>poll_idle (37,571,459 samples, 0.14%)</title><rect x="98.5200%" y="1893" width="0.1398%" height="15" fill="rgb(249,196,10)" fg:x="26480673224" fg:w="37571459"/><text x="98.7700%" y="1903.50"></text></g><g><title>error_entry (12,063,919 samples, 0.04%)</title><rect x="98.6598%" y="1909" width="0.0449%" height="15" fill="rgb(237,109,14)" fg:x="26518244683" fg:w="12063919"/><text x="98.9098%" y="1919.50"></text></g><g><title>cpuidle_enter (1,077,587,910 samples, 4.01%)</title><rect x="94.7354%" y="1925" width="4.0091%" height="15" fill="rgb(217,103,53)" fg:x="25463424676" fg:w="1077587910"/><text x="94.9854%" y="1935.50">cpui..</text></g><g><title>sysvec_call_function_single (9,197,762 samples, 0.03%)</title><rect x="98.7103%" y="1909" width="0.0342%" height="15" fill="rgb(244,137,9)" fg:x="26531814824" fg:w="9197762"/><text x="98.9603%" y="1919.50"></text></g><g><title>cpuidle_select (10,662,215 samples, 0.04%)</title><rect x="98.7445%" y="1925" width="0.0397%" height="15" fill="rgb(227,201,3)" fg:x="26541012586" fg:w="10662215"/><text x="98.9945%" y="1935.50"></text></g><g><title>menu_select (10,662,215 samples, 0.04%)</title><rect x="98.7445%" y="1909" width="0.0397%" height="15" fill="rgb(243,94,6)" fg:x="26541012586" fg:w="10662215"/><text x="98.9945%" y="1919.50"></text></g><g><title>tick_nohz_get_sleep_length (6,422,856 samples, 0.02%)</title><rect x="98.7603%" y="1893" width="0.0239%" height="15" fill="rgb(235,118,5)" fg:x="26545251945" fg:w="6422856"/><text x="99.0103%" y="1903.50"></text></g><g><title>tick_nohz_next_event (5,142,801 samples, 0.02%)</title><rect x="98.7650%" y="1877" width="0.0191%" height="15" fill="rgb(247,10,30)" fg:x="26546532000" fg:w="5142801"/><text x="99.0150%" y="1887.50"></text></g><g><title>__blk_mq_complete_request_remote (10,780,005 samples, 0.04%)</title><rect x="98.8208%" y="1909" width="0.0401%" height="15" fill="rgb(205,26,28)" fg:x="26561528446" fg:w="10780005"/><text x="99.0708%" y="1919.50"></text></g><g><title>__blk_mq_complete_request_remote (12,057,022 samples, 0.04%)</title><rect x="98.9426%" y="1893" width="0.0449%" height="15" fill="rgb(206,99,35)" fg:x="26594271457" fg:w="12057022"/><text x="99.1926%" y="1903.50"></text></g><g><title>__raise_softirq_irqoff (6,959,199 samples, 0.03%)</title><rect x="98.9616%" y="1877" width="0.0259%" height="15" fill="rgb(238,130,40)" fg:x="26599369280" fg:w="6959199"/><text x="99.2116%" y="1887.50"></text></g><g><title>__raise_softirq_irqoff (30,490,809 samples, 0.11%)</title><rect x="98.9875%" y="1893" width="0.1134%" height="15" fill="rgb(224,126,31)" fg:x="26606328479" fg:w="30490809"/><text x="99.2375%" y="1903.50"></text></g><g><title>llist_reverse_order (16,375,652 samples, 0.06%)</title><rect x="99.1009%" y="1893" width="0.0609%" height="15" fill="rgb(254,105,17)" fg:x="26636819288" fg:w="16375652"/><text x="99.3509%" y="1903.50"></text></g><g><title>rq_lock_irqsave (9,394,886 samples, 0.03%)</title><rect x="99.1732%" y="1877" width="0.0350%" height="15" fill="rgb(216,87,36)" fg:x="26656239089" fg:w="9394886"/><text x="99.4232%" y="1887.50"></text></g><g><title>_raw_spin_lock (8,602,231 samples, 0.03%)</title><rect x="99.1761%" y="1861" width="0.0320%" height="15" fill="rgb(240,21,12)" fg:x="26657031744" fg:w="8602231"/><text x="99.4261%" y="1871.50"></text></g><g><title>psi_task_change (2,917,742 samples, 0.01%)</title><rect x="99.2210%" y="1845" width="0.0109%" height="15" fill="rgb(245,192,34)" fg:x="26669091644" fg:w="2917742"/><text x="99.4710%" y="1855.50"></text></g><g><title>enqueue_task (5,477,808 samples, 0.02%)</title><rect x="99.2123%" y="1861" width="0.0204%" height="15" fill="rgb(226,100,49)" fg:x="26666762591" fg:w="5477808"/><text x="99.4623%" y="1871.50"></text></g><g><title>ttwu_do_activate (8,074,403 samples, 0.03%)</title><rect x="99.2081%" y="1877" width="0.0300%" height="15" fill="rgb(245,188,27)" fg:x="26665633975" fg:w="8074403"/><text x="99.4581%" y="1887.50"></text></g><g><title>__flush_smp_call_function_queue (104,210,671 samples, 0.39%)</title><rect x="98.8609%" y="1909" width="0.3877%" height="15" fill="rgb(212,170,8)" fg:x="26572308451" fg:w="104210671"/><text x="99.1109%" y="1919.50"></text></g><g><title>sched_ttwu_pending (21,149,661 samples, 0.08%)</title><rect x="99.1699%" y="1893" width="0.0787%" height="15" fill="rgb(217,113,29)" fg:x="26655369461" fg:w="21149661"/><text x="99.4199%" y="1903.50"></text></g><g><title>update_rq_clock (2,810,744 samples, 0.01%)</title><rect x="99.2382%" y="1877" width="0.0105%" height="15" fill="rgb(237,30,3)" fg:x="26673708378" fg:w="2810744"/><text x="99.4882%" y="1887.50"></text></g><g><title>update_rq_clock_task (2,810,744 samples, 0.01%)</title><rect x="99.2382%" y="1861" width="0.0105%" height="15" fill="rgb(227,19,28)" fg:x="26673708378" fg:w="2810744"/><text x="99.4882%" y="1871.50"></text></g><g><title>llist_reverse_order (11,231,627 samples, 0.04%)</title><rect x="99.2871%" y="1861" width="0.0418%" height="15" fill="rgb(239,172,45)" fg:x="26686851978" fg:w="11231627"/><text x="99.5371%" y="1871.50"></text></g><g><title>__fprop_add_percpu_max (2,699,832 samples, 0.01%)</title><rect x="99.3567%" y="1685" width="0.0100%" height="15" fill="rgb(254,55,39)" fg:x="26705557242" fg:w="2699832"/><text x="99.6067%" y="1695.50"></text></g><g><title>__wb_writeout_add (3,463,309 samples, 0.01%)</title><rect x="99.3567%" y="1701" width="0.0129%" height="15" fill="rgb(249,208,12)" fg:x="26705557242" fg:w="3463309"/><text x="99.6067%" y="1711.50"></text></g><g><title>ext4_end_bio (14,137,981 samples, 0.05%)</title><rect x="99.3349%" y="1765" width="0.0526%" height="15" fill="rgb(240,52,13)" fg:x="26699718077" fg:w="14137981"/><text x="99.5849%" y="1775.50"></text></g><g><title>ext4_finish_bio (14,137,981 samples, 0.05%)</title><rect x="99.3349%" y="1749" width="0.0526%" height="15" fill="rgb(252,149,13)" fg:x="26699718077" fg:w="14137981"/><text x="99.5849%" y="1759.50"></text></g><g><title>folio_end_writeback (11,673,069 samples, 0.04%)</title><rect x="99.3441%" y="1733" width="0.0434%" height="15" fill="rgb(232,81,48)" fg:x="26702182989" fg:w="11673069"/><text x="99.5941%" y="1743.50"></text></g><g><title>__folio_end_writeback (11,390,195 samples, 0.04%)</title><rect x="99.3452%" y="1717" width="0.0424%" height="15" fill="rgb(222,144,2)" fg:x="26702465863" fg:w="11390195"/><text x="99.5952%" y="1727.50"></text></g><g><title>blk_done_softirq (29,815,753 samples, 0.11%)</title><rect x="99.2779%" y="1877" width="0.1109%" height="15" fill="rgb(216,81,32)" fg:x="26684373969" fg:w="29815753"/><text x="99.5279%" y="1887.50"></text></g><g><title>scsi_complete (16,106,117 samples, 0.06%)</title><rect x="99.3289%" y="1861" width="0.0599%" height="15" fill="rgb(244,78,51)" fg:x="26698083605" fg:w="16106117"/><text x="99.5789%" y="1871.50"></text></g><g><title>scsi_finish_command (14,819,011 samples, 0.06%)</title><rect x="99.3336%" y="1845" width="0.0551%" height="15" fill="rgb(217,66,21)" fg:x="26699370711" fg:w="14819011"/><text x="99.5836%" y="1855.50"></text></g><g><title>scsi_io_completion (14,819,011 samples, 0.06%)</title><rect x="99.3336%" y="1829" width="0.0551%" height="15" fill="rgb(247,101,42)" fg:x="26699370711" fg:w="14819011"/><text x="99.5836%" y="1839.50"></text></g><g><title>scsi_end_request (14,819,011 samples, 0.06%)</title><rect x="99.3336%" y="1813" width="0.0551%" height="15" fill="rgb(227,81,39)" fg:x="26699370711" fg:w="14819011"/><text x="99.5836%" y="1823.50"></text></g><g><title>blk_update_request (14,471,645 samples, 0.05%)</title><rect x="99.3349%" y="1797" width="0.0538%" height="15" fill="rgb(220,223,44)" fg:x="26699718077" fg:w="14471645"/><text x="99.5849%" y="1807.50"></text></g><g><title>bio_endio (14,471,645 samples, 0.05%)</title><rect x="99.3349%" y="1781" width="0.0538%" height="15" fill="rgb(205,218,2)" fg:x="26699718077" fg:w="14471645"/><text x="99.5849%" y="1791.50"></text></g><g><title>sched_clock (5,741,977 samples, 0.02%)</title><rect x="99.5123%" y="1845" width="0.0214%" height="15" fill="rgb(212,207,28)" fg:x="26747377128" fg:w="5741977"/><text x="99.7623%" y="1855.50"></text></g><g><title>sched_clock_noinstr (4,907,433 samples, 0.02%)</title><rect x="99.5154%" y="1829" width="0.0183%" height="15" fill="rgb(224,12,41)" fg:x="26748211672" fg:w="4907433"/><text x="99.7654%" y="1839.50"></text></g><g><title>native_sched_clock (4,907,433 samples, 0.02%)</title><rect x="99.5154%" y="1813" width="0.0183%" height="15" fill="rgb(216,118,12)" fg:x="26748211672" fg:w="4907433"/><text x="99.7654%" y="1823.50"></text></g><g><title>irqtime_account_irq (39,298,777 samples, 0.15%)</title><rect x="99.3888%" y="1877" width="0.1462%" height="15" fill="rgb(252,97,46)" fg:x="26714189722" fg:w="39298777"/><text x="99.6388%" y="1887.50"></text></g><g><title>sched_clock_cpu (6,111,371 samples, 0.02%)</title><rect x="99.5123%" y="1861" width="0.0227%" height="15" fill="rgb(244,206,19)" fg:x="26747377128" fg:w="6111371"/><text x="99.7623%" y="1871.50"></text></g><g><title>__kprobes_text_end (74,889,515 samples, 0.28%)</title><rect x="99.2610%" y="1893" width="0.2786%" height="15" fill="rgb(231,84,31)" fg:x="26679847657" fg:w="74889515"/><text x="99.5110%" y="1903.50"></text></g><g><title>do_softirq (78,480,050 samples, 0.29%)</title><rect x="99.2533%" y="1909" width="0.2920%" height="15" fill="rgb(244,133,0)" fg:x="26677784615" fg:w="78480050"/><text x="99.5033%" y="1919.50"></text></g><g><title>flush_smp_call_function_queue (209,180,619 samples, 0.78%)</title><rect x="98.7909%" y="1925" width="0.7782%" height="15" fill="rgb(223,15,50)" fg:x="26553475643" fg:w="209180619"/><text x="99.0409%" y="1935.50"></text></g><g><title>sched_ttwu_pending (6,391,597 samples, 0.02%)</title><rect x="99.5453%" y="1909" width="0.0238%" height="15" fill="rgb(250,118,49)" fg:x="26756264665" fg:w="6391597"/><text x="99.7953%" y="1919.50"></text></g><g><title>hrtimer_forward (3,915,827 samples, 0.01%)</title><rect x="99.6004%" y="1909" width="0.0146%" height="15" fill="rgb(248,25,38)" fg:x="26771062332" fg:w="3915827"/><text x="99.8504%" y="1919.50"></text></g><g><title>nr_iowait_cpu (2,778,024 samples, 0.01%)</title><rect x="99.6293%" y="1909" width="0.0103%" height="15" fill="rgb(215,70,14)" fg:x="26778829896" fg:w="2778024"/><text x="99.8793%" y="1919.50"></text></g><g><title>calc_load_nohz_stop (4,106,616 samples, 0.02%)</title><rect x="99.6630%" y="1893" width="0.0153%" height="15" fill="rgb(215,28,15)" fg:x="26787904503" fg:w="4106616"/><text x="99.9130%" y="1903.50"></text></g><g><title>_raw_spin_lock_irqsave (3,135,441 samples, 0.01%)</title><rect x="99.6964%" y="1861" width="0.0117%" height="15" fill="rgb(243,6,28)" fg:x="26796869342" fg:w="3135441"/><text x="99.9464%" y="1871.50"></text></g><g><title>hrtimer_try_to_cancel (10,715,219 samples, 0.04%)</title><rect x="99.6932%" y="1877" width="0.0399%" height="15" fill="rgb(222,130,1)" fg:x="26796013261" fg:w="10715219"/><text x="99.9432%" y="1887.50"></text></g><g><title>remove_hrtimer (6,299,182 samples, 0.02%)</title><rect x="99.7096%" y="1861" width="0.0234%" height="15" fill="rgb(236,166,44)" fg:x="26800429298" fg:w="6299182"/><text x="99.9596%" y="1871.50"></text></g><g><title>__remove_hrtimer (5,792,245 samples, 0.02%)</title><rect x="99.7115%" y="1845" width="0.0215%" height="15" fill="rgb(221,108,14)" fg:x="26800936235" fg:w="5792245"/><text x="99.9615%" y="1855.50"></text></g><g><title>hrtimer_cancel (14,357,035 samples, 0.05%)</title><rect x="99.6812%" y="1893" width="0.0534%" height="15" fill="rgb(252,3,45)" fg:x="26792784044" fg:w="14357035"/><text x="99.9312%" y="1903.50"></text></g><g><title>_raw_spin_lock_irqsave (10,296,885 samples, 0.04%)</title><rect x="99.7471%" y="1877" width="0.0383%" height="15" fill="rgb(237,68,30)" fg:x="26810500620" fg:w="10296885"/><text x="99.9971%" y="1887.50"></text></g><g><title>ktime_get (3,512,524 samples, 0.01%)</title><rect x="99.7954%" y="1829" width="0.0131%" height="15" fill="rgb(211,79,22)" fg:x="26823469784" fg:w="3512524"/><text x="100.0454%" y="1839.50"></text></g><g><title>read_tsc (3,512,524 samples, 0.01%)</title><rect x="99.7954%" y="1813" width="0.0131%" height="15" fill="rgb(252,185,21)" fg:x="26823469784" fg:w="3512524"/><text x="100.0454%" y="1823.50"></text></g><g><title>hrtimer_reprogram (6,360,647 samples, 0.02%)</title><rect x="99.7906%" y="1877" width="0.0237%" height="15" fill="rgb(225,189,26)" fg:x="26822198351" fg:w="6360647"/><text x="100.0406%" y="1887.50"></text></g><g><title>tick_program_event (5,507,370 samples, 0.02%)</title><rect x="99.7938%" y="1861" width="0.0205%" height="15" fill="rgb(241,30,40)" fg:x="26823051628" fg:w="5507370"/><text x="100.0438%" y="1871.50"></text></g><g><title>clockevents_program_event (5,507,370 samples, 0.02%)</title><rect x="99.7938%" y="1845" width="0.0205%" height="15" fill="rgb(235,215,44)" fg:x="26823051628" fg:w="5507370"/><text x="100.0438%" y="1855.50"></text></g><g><title>hrtimer_start_range_ns (21,879,470 samples, 0.08%)</title><rect x="99.7418%" y="1893" width="0.0814%" height="15" fill="rgb(205,8,29)" fg:x="26809063327" fg:w="21879470"/><text x="99.9918%" y="1903.50"></text></g><g><title>tick_do_update_jiffies64 (5,373,967 samples, 0.02%)</title><rect x="99.8309%" y="1893" width="0.0200%" height="15" fill="rgb(241,137,42)" fg:x="26833020575" fg:w="5373967"/><text x="100.0809%" y="1903.50"></text></g><g><title>tick_nohz_restart_sched_tick (57,042,903 samples, 0.21%)</title><rect x="99.6409%" y="1909" width="0.2122%" height="15" fill="rgb(237,155,2)" fg:x="26781967260" fg:w="57042903"/><text x="99.8909%" y="1919.50"></text></g><g><title>tick_nohz_idle_exit (76,009,076 samples, 0.28%)</title><rect x="99.5803%" y="1925" width="0.2828%" height="15" fill="rgb(245,29,42)" fg:x="26765658050" fg:w="76009076"/><text x="99.8303%" y="1935.50"></text></g><g><title>do_idle (1,384,308,903 samples, 5.15%)</title><rect x="94.7246%" y="1941" width="5.1503%" height="15" fill="rgb(234,101,35)" fg:x="25460517884" fg:w="1384308903"/><text x="94.9746%" y="1951.50">do_idle</text></g><g><title>secondary_startup_64_no_verify (14,994,920,249 samples, 55.79%)</title><rect x="44.0884%" y="2053" width="55.7878%" height="15" fill="rgb(228,64,37)" fg:x="11850295046" fg:w="14994920249"/><text x="44.3384%" y="2063.50">secondary_startup_64_no_verify</text></g><g><title>x86_64_start_kernel (1,385,915,084 samples, 5.16%)</title><rect x="94.7200%" y="2037" width="5.1562%" height="15" fill="rgb(217,214,36)" fg:x="25459300211" fg:w="1385915084"/><text x="94.9700%" y="2047.50">x86_64..</text></g><g><title>[[kernel.vmlinux].init.text] (1,385,915,084 samples, 5.16%)</title><rect x="94.7200%" y="2021" width="5.1562%" height="15" fill="rgb(243,70,3)" fg:x="25459300211" fg:w="1385915084"/><text x="94.9700%" y="2031.50">[[kern..</text></g><g><title>start_kernel (1,385,915,084 samples, 5.16%)</title><rect x="94.7200%" y="2005" width="5.1562%" height="15" fill="rgb(253,158,52)" fg:x="25459300211" fg:w="1385915084"/><text x="94.9700%" y="2015.50">start_..</text></g><g><title>[[kernel.vmlinux].init.text] (1,385,915,084 samples, 5.16%)</title><rect x="94.7200%" y="1989" width="5.1562%" height="15" fill="rgb(234,111,54)" fg:x="25459300211" fg:w="1385915084"/><text x="94.9700%" y="1999.50">[[kern..</text></g><g><title>[vmlinux] (1,385,915,084 samples, 5.16%)</title><rect x="94.7200%" y="1973" width="5.1562%" height="15" fill="rgb(217,70,32)" fg:x="25459300211" fg:w="1385915084"/><text x="94.9700%" y="1983.50">[vmlin..</text></g><g><title>cpu_startup_entry (1,385,915,084 samples, 5.16%)</title><rect x="94.7200%" y="1957" width="5.1562%" height="15" fill="rgb(234,18,33)" fg:x="25459300211" fg:w="1385915084"/><text x="94.9700%" y="1967.50">cpu_st..</text></g><g><title>swapper (15,131,520,890 samples, 56.30%)</title><rect x="43.6138%" y="2069" width="56.2961%" height="15" fill="rgb(234,12,49)" fg:x="11722722885" fg:w="15131520890"/><text x="43.8638%" y="2079.50">swapper</text></g><g><title>sysvec_apic_timer_interrupt (9,028,480 samples, 0.03%)</title><rect x="99.8763%" y="2053" width="0.0336%" height="15" fill="rgb(236,10,21)" fg:x="26845215295" fg:w="9028480"/><text x="100.1263%" y="2063.50"></text></g><g><title>[unknown] (4,060,283 samples, 0.02%)</title><rect x="99.9280%" y="2037" width="0.0151%" height="15" fill="rgb(248,182,45)" fg:x="26859126402" fg:w="4060283"/><text x="100.1780%" y="2047.50"></text></g><g><title>[unknown] (6,359,378 samples, 0.02%)</title><rect x="99.9220%" y="2053" width="0.0237%" height="15" fill="rgb(217,95,36)" fg:x="26857506758" fg:w="6359378"/><text x="100.1720%" y="2063.50"></text></g><g><title>tmux:_server (16,003,583 samples, 0.06%)</title><rect x="99.9116%" y="2069" width="0.0595%" height="15" fill="rgb(212,110,31)" fg:x="26854716277" fg:w="16003583"/><text x="100.1616%" y="2079.50"></text></g><g><title>[cursor-297991d169fa3a11975c5aa95adc69be73250c70] (4,705,751 samples, 0.02%)</title><rect x="99.9711%" y="2053" width="0.0175%" height="15" fill="rgb(206,32,53)" fg:x="26870719860" fg:w="4705751"/><text x="100.2211%" y="2063.50"></text></g><g><title>all (26,878,475,948 samples, 100%)</title><rect x="0.0000%" y="2085" width="100.0000%" height="15" fill="rgb(246,141,37)" fg:x="0" fg:w="26878475948"/><text x="0.2500%" y="2095.50"></text></g><g><title>tokio-runtime-w (7,756,088 samples, 0.03%)</title><rect x="99.9711%" y="2069" width="0.0289%" height="15" fill="rgb(219,16,7)" fg:x="26870719860" fg:w="7756088"/><text x="100.2211%" y="2079.50"></text></g><g><title>[unknown] (3,050,337 samples, 0.01%)</title><rect x="99.9887%" y="2053" width="0.0113%" height="15" fill="rgb(230,205,45)" fg:x="26875425611" fg:w="3050337"/><text x="100.2387%" y="2063.50"></text></g></svg></svg>