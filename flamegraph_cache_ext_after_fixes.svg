<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2134" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="2117.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="2117.00"> </text><svg id="frames" x="10" width="1180" total_samples="80387223282"><g><title>do_cow_fault (17,058,767 samples, 0.02%)</title><rect x="0.0369%" y="1877" width="0.0212%" height="15" fill="rgb(227,0,7)" fg:x="29681659" fg:w="17058767"/><text x="0.2869%" y="1887.50"></text></g><g><title>do_pte_missing (20,780,028 samples, 0.03%)</title><rect x="0.0351%" y="1893" width="0.0258%" height="15" fill="rgb(217,0,24)" fg:x="28207198" fg:w="20780028"/><text x="0.2851%" y="1903.50"></text></g><g><title>handle_pte_fault (23,031,639 samples, 0.03%)</title><rect x="0.0351%" y="1909" width="0.0287%" height="15" fill="rgb(221,193,54)" fg:x="28207198" fg:w="23031639"/><text x="0.2851%" y="1919.50"></text></g><g><title>__handle_mm_fault (24,550,341 samples, 0.03%)</title><rect x="0.0341%" y="1925" width="0.0305%" height="15" fill="rgb(248,212,6)" fg:x="27416578" fg:w="24550341"/><text x="0.2841%" y="1935.50"></text></g><g><title>handle_mm_fault (28,172,810 samples, 0.04%)</title><rect x="0.0323%" y="1941" width="0.0350%" height="15" fill="rgb(208,68,35)" fg:x="25947707" fg:w="28172810"/><text x="0.2823%" y="1951.50"></text></g><g><title>do_user_addr_fault (36,289,912 samples, 0.05%)</title><rect x="0.0295%" y="1957" width="0.0451%" height="15" fill="rgb(232,128,0)" fg:x="23705036" fg:w="36289912"/><text x="0.2795%" y="1967.50"></text></g><g><title>asm_exc_page_fault (37,637,606 samples, 0.05%)</title><rect x="0.0287%" y="1989" width="0.0468%" height="15" fill="rgb(207,160,47)" fg:x="23070358" fg:w="37637606"/><text x="0.2787%" y="1999.50"></text></g><g><title>exc_page_fault (37,002,928 samples, 0.05%)</title><rect x="0.0295%" y="1973" width="0.0460%" height="15" fill="rgb(228,23,34)" fg:x="23705036" fg:w="37002928"/><text x="0.2795%" y="1983.50"></text></g><g><title>_dl_sysdep_start (44,499,363 samples, 0.06%)</title><rect x="0.0239%" y="2037" width="0.0554%" height="15" fill="rgb(218,30,26)" fg:x="19237558" fg:w="44499363"/><text x="0.2739%" y="2047.50"></text></g><g><title>dl_main (43,989,741 samples, 0.05%)</title><rect x="0.0246%" y="2021" width="0.0547%" height="15" fill="rgb(220,122,19)" fg:x="19747180" fg:w="43989741"/><text x="0.2746%" y="2031.50"></text></g><g><title>_dl_relocate_object (43,989,741 samples, 0.05%)</title><rect x="0.0246%" y="2005" width="0.0547%" height="15" fill="rgb(250,228,42)" fg:x="19747180" fg:w="43989741"/><text x="0.2746%" y="2015.50"></text></g><g><title>[unknown] (60,375,477 samples, 0.08%)</title><rect x="0.0076%" y="2053" width="0.0751%" height="15" fill="rgb(240,193,28)" fg:x="6091306" fg:w="60375477"/><text x="0.2576%" y="2063.50"></text></g><g><title>bpftool (80,889,670 samples, 0.10%)</title><rect x="0.0003%" y="2069" width="0.1006%" height="15" fill="rgb(216,20,37)" fg:x="230826" fg:w="80889670"/><text x="0.2503%" y="2079.50"></text></g><g><title>cat (10,482,503 samples, 0.01%)</title><rect x="0.1009%" y="2069" width="0.0130%" height="15" fill="rgb(206,188,39)" fg:x="81120496" fg:w="10482503"/><text x="0.3509%" y="2079.50"></text></g><g><title>[unknown] (14,112,507 samples, 0.02%)</title><rect x="0.1144%" y="2053" width="0.0176%" height="15" fill="rgb(217,207,13)" fg:x="91958588" fg:w="14112507"/><text x="0.3644%" y="2063.50"></text></g><g><title>cpuUsage.sh (30,563,540 samples, 0.04%)</title><rect x="0.1144%" y="2069" width="0.0380%" height="15" fill="rgb(231,73,38)" fg:x="91958588" fg:w="30563540"/><text x="0.3644%" y="2079.50"></text></g><g><title>grep (10,746,412 samples, 0.01%)</title><rect x="0.1546%" y="2069" width="0.0134%" height="15" fill="rgb(225,20,46)" fg:x="124248981" fg:w="10746412"/><text x="0.4046%" y="2079.50"></text></g><g><title>proc_root_readdir (8,538,153 samples, 0.01%)</title><rect x="0.2001%" y="1941" width="0.0106%" height="15" fill="rgb(210,31,41)" fg:x="160816636" fg:w="8538153"/><text x="0.4501%" y="1951.50"></text></g><g><title>proc_pid_readdir (8,538,153 samples, 0.01%)</title><rect x="0.2001%" y="1925" width="0.0106%" height="15" fill="rgb(221,200,47)" fg:x="160816636" fg:w="8538153"/><text x="0.4501%" y="1935.50"></text></g><g><title>proc_task_readdir (9,368,048 samples, 0.01%)</title><rect x="0.2107%" y="1941" width="0.0117%" height="15" fill="rgb(226,26,5)" fg:x="169354789" fg:w="9368048"/><text x="0.4607%" y="1951.50"></text></g><g><title>iterate_dir (27,132,144 samples, 0.03%)</title><rect x="0.1930%" y="1957" width="0.0338%" height="15" fill="rgb(249,33,26)" fg:x="155134100" fg:w="27132144"/><text x="0.4430%" y="1967.50"></text></g><g><title>__x64_sys_getdents64 (30,934,322 samples, 0.04%)</title><rect x="0.1911%" y="1989" width="0.0385%" height="15" fill="rgb(235,183,28)" fg:x="153640017" fg:w="30934322"/><text x="0.4411%" y="1999.50"></text></g><g><title>__se_sys_getdents64 (30,934,322 samples, 0.04%)</title><rect x="0.1911%" y="1973" width="0.0385%" height="15" fill="rgb(221,5,38)" fg:x="153640017" fg:w="30934322"/><text x="0.4411%" y="1983.50"></text></g><g><title>entry_SYSCALL_64 (39,117,843 samples, 0.05%)</title><rect x="0.1902%" y="2021" width="0.0487%" height="15" fill="rgb(247,18,42)" fg:x="152915674" fg:w="39117843"/><text x="0.4402%" y="2031.50"></text></g><g><title>do_syscall_64 (38,393,500 samples, 0.05%)</title><rect x="0.1911%" y="2005" width="0.0478%" height="15" fill="rgb(241,131,45)" fg:x="153640017" fg:w="38393500"/><text x="0.4411%" y="2015.50"></text></g><g><title>__GI___getdents64 (42,747,371 samples, 0.05%)</title><rect x="0.1902%" y="2037" width="0.0532%" height="15" fill="rgb(249,31,29)" fg:x="152915674" fg:w="42747371"/><text x="0.4402%" y="2047.50"></text></g><g><title>__x64_sys_close (15,701,053 samples, 0.02%)</title><rect x="0.2509%" y="1989" width="0.0195%" height="15" fill="rgb(225,111,53)" fg:x="201706761" fg:w="15701053"/><text x="0.5009%" y="1999.50"></text></g><g><title>__se_sys_close (15,701,053 samples, 0.02%)</title><rect x="0.2509%" y="1973" width="0.0195%" height="15" fill="rgb(238,160,17)" fg:x="201706761" fg:w="15701053"/><text x="0.5009%" y="1983.50"></text></g><g><title>__fput_sync (14,969,985 samples, 0.02%)</title><rect x="0.2518%" y="1957" width="0.0186%" height="15" fill="rgb(214,148,48)" fg:x="202437829" fg:w="14969985"/><text x="0.5018%" y="1967.50"></text></g><g><title>__fput (14,969,985 samples, 0.02%)</title><rect x="0.2518%" y="1941" width="0.0186%" height="15" fill="rgb(232,36,49)" fg:x="202437829" fg:w="14969985"/><text x="0.5018%" y="1951.50"></text></g><g><title>entry_SYSCALL_64 (24,493,790 samples, 0.03%)</title><rect x="0.2482%" y="2021" width="0.0305%" height="15" fill="rgb(209,103,24)" fg:x="199555284" fg:w="24493790"/><text x="0.4982%" y="2031.50"></text></g><g><title>do_syscall_64 (23,781,935 samples, 0.03%)</title><rect x="0.2491%" y="2005" width="0.0296%" height="15" fill="rgb(229,88,8)" fg:x="200267139" fg:w="23781935"/><text x="0.4991%" y="2015.50"></text></g><g><title>__close (28,072,634 samples, 0.03%)</title><rect x="0.2482%" y="2037" width="0.0349%" height="15" fill="rgb(213,181,19)" fg:x="199555284" fg:w="28072634"/><text x="0.4982%" y="2047.50"></text></g><g><title>__x64_sys_close (8,061,922 samples, 0.01%)</title><rect x="0.2860%" y="1989" width="0.0100%" height="15" fill="rgb(254,191,54)" fg:x="229923242" fg:w="8061922"/><text x="0.5360%" y="1999.50"></text></g><g><title>__se_sys_close (8,061,922 samples, 0.01%)</title><rect x="0.2860%" y="1973" width="0.0100%" height="15" fill="rgb(241,83,37)" fg:x="229923242" fg:w="8061922"/><text x="0.5360%" y="1983.50"></text></g><g><title>entry_SYSCALL_64 (12,504,093 samples, 0.02%)</title><rect x="0.2841%" y="2021" width="0.0156%" height="15" fill="rgb(233,36,39)" fg:x="228355457" fg:w="12504093"/><text x="0.5341%" y="2031.50"></text></g><g><title>do_syscall_64 (10,936,308 samples, 0.01%)</title><rect x="0.2860%" y="2005" width="0.0136%" height="15" fill="rgb(226,3,54)" fg:x="229923242" fg:w="10936308"/><text x="0.5360%" y="2015.50"></text></g><g><title>__close_nocancel (14,713,571 samples, 0.02%)</title><rect x="0.2832%" y="2037" width="0.0183%" height="15" fill="rgb(245,192,40)" fg:x="227627918" fg:w="14713571"/><text x="0.5332%" y="2047.50"></text></g><g><title>init_file (9,916,593 samples, 0.01%)</title><rect x="0.3129%" y="1909" width="0.0123%" height="15" fill="rgb(238,167,29)" fg:x="251506135" fg:w="9916593"/><text x="0.5629%" y="1919.50"></text></g><g><title>alloc_empty_file (28,528,342 samples, 0.04%)</title><rect x="0.3119%" y="1925" width="0.0355%" height="15" fill="rgb(232,182,51)" fg:x="250766642" fg:w="28528342"/><text x="0.5619%" y="1935.50"></text></g><g><title>kmem_cache_alloc (17,872,256 samples, 0.02%)</title><rect x="0.3252%" y="1909" width="0.0222%" height="15" fill="rgb(231,60,39)" fg:x="261422728" fg:w="17872256"/><text x="0.5752%" y="1919.50"></text></g><g><title>do_o_path (15,350,055 samples, 0.02%)</title><rect x="0.3538%" y="1925" width="0.0191%" height="15" fill="rgb(208,69,12)" fg:x="284444911" fg:w="15350055"/><text x="0.6038%" y="1935.50"></text></g><g><title>path_lookupat (11,046,001 samples, 0.01%)</title><rect x="0.3592%" y="1909" width="0.0137%" height="15" fill="rgb(235,93,37)" fg:x="288748965" fg:w="11046001"/><text x="0.6092%" y="1919.50"></text></g><g><title>path_openat (84,135,226 samples, 0.10%)</title><rect x="0.3092%" y="1941" width="0.1047%" height="15" fill="rgb(213,116,39)" fg:x="248593373" fg:w="84135226"/><text x="0.5592%" y="1951.50"></text></g><g><title>do_filp_open (97,927,976 samples, 0.12%)</title><rect x="0.3083%" y="1957" width="0.1218%" height="15" fill="rgb(222,207,29)" fg:x="247851829" fg:w="97927976"/><text x="0.5583%" y="1967.50"></text></g><g><title>vfs_open (12,264,258 samples, 0.02%)</title><rect x="0.4149%" y="1941" width="0.0153%" height="15" fill="rgb(206,96,30)" fg:x="333515547" fg:w="12264258"/><text x="0.6649%" y="1951.50"></text></g><g><title>bpf_trampoline_6442477086 (11,512,141 samples, 0.01%)</title><rect x="0.4158%" y="1925" width="0.0143%" height="15" fill="rgb(218,138,4)" fg:x="334267664" fg:w="11512141"/><text x="0.6658%" y="1935.50"></text></g><g><title>getname (22,667,840 samples, 0.03%)</title><rect x="0.4363%" y="1957" width="0.0282%" height="15" fill="rgb(250,191,14)" fg:x="350747225" fg:w="22667840"/><text x="0.6863%" y="1967.50"></text></g><g><title>getname_flags (22,667,840 samples, 0.03%)</title><rect x="0.4363%" y="1941" width="0.0282%" height="15" fill="rgb(239,60,40)" fg:x="350747225" fg:w="22667840"/><text x="0.6863%" y="1951.50"></text></g><g><title>__x64_sys_openat (131,865,154 samples, 0.16%)</title><rect x="0.3033%" y="1989" width="0.1640%" height="15" fill="rgb(206,27,48)" fg:x="243786861" fg:w="131865154"/><text x="0.5533%" y="1999.50"></text></g><g><title>do_sys_openat2 (130,478,453 samples, 0.16%)</title><rect x="0.3050%" y="1973" width="0.1623%" height="15" fill="rgb(225,35,8)" fg:x="245173562" fg:w="130478453"/><text x="0.5550%" y="1983.50"></text></g><g><title>entry_SYSCALL_64 (146,733,383 samples, 0.18%)</title><rect x="0.3015%" y="2021" width="0.1825%" height="15" fill="rgb(250,213,24)" fg:x="242341489" fg:w="146733383"/><text x="0.5515%" y="2031.50"></text></g><g><title>do_syscall_64 (145,288,011 samples, 0.18%)</title><rect x="0.3033%" y="2005" width="0.1807%" height="15" fill="rgb(247,123,22)" fg:x="243786861" fg:w="145288011"/><text x="0.5533%" y="2015.50"></text></g><g><title>__libc_openat64 (154,146,913 samples, 0.19%)</title><rect x="0.3015%" y="2037" width="0.1918%" height="15" fill="rgb(231,138,38)" fg:x="242341489" fg:w="154146913"/><text x="0.5515%" y="2047.50"></text></g><g><title>__kmem_cache_alloc_node (12,582,962 samples, 0.02%)</title><rect x="0.5089%" y="1877" width="0.0157%" height="15" fill="rgb(231,145,46)" fg:x="409064455" fg:w="12582962"/><text x="0.7589%" y="1887.50"></text></g><g><title>__kmalloc_node (14,058,407 samples, 0.02%)</title><rect x="0.5089%" y="1893" width="0.0175%" height="15" fill="rgb(251,118,11)" fg:x="409064455" fg:w="14058407"/><text x="0.7589%" y="1903.50"></text></g><g><title>kvmalloc_node (15,484,893 samples, 0.02%)</title><rect x="0.5089%" y="1909" width="0.0193%" height="15" fill="rgb(217,147,25)" fg:x="409064455" fg:w="15484893"/><text x="0.7589%" y="1919.50"></text></g><g><title>seq_read_iter (39,089,339 samples, 0.05%)</title><rect x="0.5071%" y="1925" width="0.0486%" height="15" fill="rgb(247,81,37)" fg:x="407618532" fg:w="39089339"/><text x="0.7571%" y="1935.50"></text></g><g><title>proc_single_show (19,878,434 samples, 0.02%)</title><rect x="0.5310%" y="1909" width="0.0247%" height="15" fill="rgb(209,12,38)" fg:x="426829437" fg:w="19878434"/><text x="0.7810%" y="1919.50"></text></g><g><title>proc_tid_stat (9,426,484 samples, 0.01%)</title><rect x="0.5440%" y="1893" width="0.0117%" height="15" fill="rgb(227,1,9)" fg:x="437281387" fg:w="9426484"/><text x="0.7940%" y="1903.50"></text></g><g><title>do_task_stat (9,426,484 samples, 0.01%)</title><rect x="0.5440%" y="1877" width="0.0117%" height="15" fill="rgb(248,47,43)" fg:x="437281387" fg:w="9426484"/><text x="0.7940%" y="1887.50"></text></g><g><title>__x64_sys_read (47,245,992 samples, 0.06%)</title><rect x="0.4978%" y="1989" width="0.0588%" height="15" fill="rgb(221,10,30)" fg:x="400196655" fg:w="47245992"/><text x="0.7478%" y="1999.50"></text></g><g><title>ksys_read (47,245,992 samples, 0.06%)</title><rect x="0.4978%" y="1973" width="0.0588%" height="15" fill="rgb(210,229,1)" fg:x="400196655" fg:w="47245992"/><text x="0.7478%" y="1983.50"></text></g><g><title>vfs_read (46,480,695 samples, 0.06%)</title><rect x="0.4988%" y="1957" width="0.0578%" height="15" fill="rgb(222,148,37)" fg:x="400961952" fg:w="46480695"/><text x="0.7488%" y="1967.50"></text></g><g><title>seq_read (39,824,115 samples, 0.05%)</title><rect x="0.5071%" y="1941" width="0.0495%" height="15" fill="rgb(234,67,33)" fg:x="407618532" fg:w="39824115"/><text x="0.7571%" y="1951.50"></text></g><g><title>entry_SYSCALL_64 (53,313,261 samples, 0.07%)</title><rect x="0.4969%" y="2021" width="0.0663%" height="15" fill="rgb(247,98,35)" fg:x="399436210" fg:w="53313261"/><text x="0.7469%" y="2031.50"></text></g><g><title>do_syscall_64 (52,552,816 samples, 0.07%)</title><rect x="0.4978%" y="2005" width="0.0654%" height="15" fill="rgb(247,138,52)" fg:x="400196655" fg:w="52552816"/><text x="0.7478%" y="2015.50"></text></g><g><title>[unknown] (318,508,291 samples, 0.40%)</title><rect x="0.1708%" y="2053" width="0.3962%" height="15" fill="rgb(213,79,30)" fg:x="137305934" fg:w="318508291"/><text x="0.4208%" y="2063.50"></text></g><g><title>read (57,150,794 samples, 0.07%)</title><rect x="0.4959%" y="2037" width="0.0711%" height="15" fill="rgb(246,177,23)" fg:x="398663431" fg:w="57150794"/><text x="0.7459%" y="2047.50"></text></g><g><title>entry_SYSCALL_64 (9,365,145 samples, 0.01%)</title><rect x="0.5698%" y="2037" width="0.0117%" height="15" fill="rgb(230,62,27)" fg:x="458015108" fg:w="9365145"/><text x="0.8198%" y="2047.50"></text></g><g><title>do_syscall_64 (8,755,719 samples, 0.01%)</title><rect x="0.5705%" y="2021" width="0.0109%" height="15" fill="rgb(216,154,8)" fg:x="458624534" fg:w="8755719"/><text x="0.8205%" y="2031.50"></text></g><g><title>__GI___fcntl64_nocancel (15,226,050 samples, 0.02%)</title><rect x="0.5698%" y="2053" width="0.0189%" height="15" fill="rgb(244,35,45)" fg:x="458015108" fg:w="15226050"/><text x="0.8198%" y="2063.50"></text></g><g><title>entry_SYSCALL_64 (10,998,231 samples, 0.01%)</title><rect x="0.5897%" y="2037" width="0.0137%" height="15" fill="rgb(251,115,12)" fg:x="474010700" fg:w="10998231"/><text x="0.8397%" y="2047.50"></text></g><g><title>do_syscall_64 (10,209,796 samples, 0.01%)</title><rect x="0.5906%" y="2021" width="0.0127%" height="15" fill="rgb(240,54,50)" fg:x="474799135" fg:w="10209796"/><text x="0.8406%" y="2031.50"></text></g><g><title>__GI___fstatat64 (15,479,757 samples, 0.02%)</title><rect x="0.5887%" y="2053" width="0.0193%" height="15" fill="rgb(233,84,52)" fg:x="473241158" fg:w="15479757"/><text x="0.8387%" y="2063.50"></text></g><g><title>entry_SYSCALL_64 (10,994,168 samples, 0.01%)</title><rect x="0.6165%" y="2037" width="0.0137%" height="15" fill="rgb(207,117,47)" fg:x="495553224" fg:w="10994168"/><text x="0.8665%" y="2047.50"></text></g><g><title>do_syscall_64 (9,598,743 samples, 0.01%)</title><rect x="0.6182%" y="2021" width="0.0119%" height="15" fill="rgb(249,43,39)" fg:x="496948649" fg:w="9598743"/><text x="0.8682%" y="2031.50"></text></g><g><title>__close_nocancel (11,790,235 samples, 0.01%)</title><rect x="0.6165%" y="2053" width="0.0147%" height="15" fill="rgb(209,38,44)" fg:x="495553224" fg:w="11790235"/><text x="0.8665%" y="2063.50"></text></g><g><title>do_filp_open (12,663,253 samples, 0.02%)</title><rect x="0.6459%" y="1973" width="0.0158%" height="15" fill="rgb(236,212,23)" fg:x="519243993" fg:w="12663253"/><text x="0.8959%" y="1983.50"></text></g><g><title>__x64_sys_openat (17,967,047 samples, 0.02%)</title><rect x="0.6440%" y="2005" width="0.0224%" height="15" fill="rgb(242,79,21)" fg:x="517688305" fg:w="17967047"/><text x="0.8940%" y="2015.50"></text></g><g><title>do_sys_openat2 (17,195,914 samples, 0.02%)</title><rect x="0.6450%" y="1989" width="0.0214%" height="15" fill="rgb(211,96,35)" fg:x="518459438" fg:w="17195914"/><text x="0.8950%" y="1999.50"></text></g><g><title>entry_SYSCALL_64 (20,187,136 samples, 0.03%)</title><rect x="0.6431%" y="2037" width="0.0251%" height="15" fill="rgb(253,215,40)" fg:x="516962114" fg:w="20187136"/><text x="0.8931%" y="2047.50"></text></g><g><title>do_syscall_64 (20,187,136 samples, 0.03%)</title><rect x="0.6431%" y="2021" width="0.0251%" height="15" fill="rgb(211,81,21)" fg:x="516962114" fg:w="20187136"/><text x="0.8931%" y="2031.50"></text></g><g><title>__libc_openat64 (22,368,125 samples, 0.03%)</title><rect x="0.6431%" y="2053" width="0.0278%" height="15" fill="rgb(208,190,38)" fg:x="516962114" fg:w="22368125"/><text x="0.8931%" y="2063.50"></text></g><g><title>htop (407,254,889 samples, 0.51%)</title><rect x="0.1679%" y="2069" width="0.5066%" height="15" fill="rgb(235,213,38)" fg:x="134995393" fg:w="407254889"/><text x="0.4179%" y="2079.50"></text></g><g><title>[unknown] (14,193,507 samples, 0.02%)</title><rect x="0.6745%" y="2053" width="0.0177%" height="15" fill="rgb(237,122,38)" fg:x="542250282" fg:w="14193507"/><text x="0.9245%" y="2063.50"></text></g><g><title>iostat (17,932,753 samples, 0.02%)</title><rect x="0.6745%" y="2069" width="0.0223%" height="15" fill="rgb(244,218,35)" fg:x="542250282" fg:w="17932753"/><text x="0.9245%" y="2079.50"></text></g><g><title>kworker/1:1H-kb (8,189,925 samples, 0.01%)</title><rect x="0.7430%" y="2069" width="0.0102%" height="15" fill="rgb(240,68,47)" fg:x="597300197" fg:w="8189925"/><text x="0.9930%" y="2079.50"></text></g><g><title>ret_from_fork_asm (8,189,925 samples, 0.01%)</title><rect x="0.7430%" y="2053" width="0.0102%" height="15" fill="rgb(210,16,53)" fg:x="597300197" fg:w="8189925"/><text x="0.9930%" y="2063.50"></text></g><g><title>ret_from_fork (8,189,925 samples, 0.01%)</title><rect x="0.7430%" y="2037" width="0.0102%" height="15" fill="rgb(235,124,12)" fg:x="597300197" fg:w="8189925"/><text x="0.9930%" y="2047.50"></text></g><g><title>kthread (8,189,925 samples, 0.01%)</title><rect x="0.7430%" y="2021" width="0.0102%" height="15" fill="rgb(224,169,11)" fg:x="597300197" fg:w="8189925"/><text x="0.9930%" y="2031.50"></text></g><g><title>worker_thread (8,189,925 samples, 0.01%)</title><rect x="0.7430%" y="2005" width="0.0102%" height="15" fill="rgb(250,166,2)" fg:x="597300197" fg:w="8189925"/><text x="0.9930%" y="2015.50"></text></g><g><title>ext4_bio_write_folio (8,979,434 samples, 0.01%)</title><rect x="0.8164%" y="1797" width="0.0112%" height="15" fill="rgb(242,216,29)" fg:x="656266313" fg:w="8979434"/><text x="1.0664%" y="1807.50"></text></g><g><title>kworker/u65:1-f (17,765,695 samples, 0.02%)</title><rect x="0.8083%" y="2069" width="0.0221%" height="15" fill="rgb(230,116,27)" fg:x="649796751" fg:w="17765695"/><text x="1.0583%" y="2079.50"></text></g><g><title>ret_from_fork_asm (17,765,695 samples, 0.02%)</title><rect x="0.8083%" y="2053" width="0.0221%" height="15" fill="rgb(228,99,48)" fg:x="649796751" fg:w="17765695"/><text x="1.0583%" y="2063.50"></text></g><g><title>ret_from_fork (17,765,695 samples, 0.02%)</title><rect x="0.8083%" y="2037" width="0.0221%" height="15" fill="rgb(253,11,6)" fg:x="649796751" fg:w="17765695"/><text x="1.0583%" y="2047.50"></text></g><g><title>kthread (17,765,695 samples, 0.02%)</title><rect x="0.8083%" y="2021" width="0.0221%" height="15" fill="rgb(247,143,39)" fg:x="649796751" fg:w="17765695"/><text x="1.0583%" y="2031.50"></text></g><g><title>worker_thread (17,765,695 samples, 0.02%)</title><rect x="0.8083%" y="2005" width="0.0221%" height="15" fill="rgb(236,97,10)" fg:x="649796751" fg:w="17765695"/><text x="1.0583%" y="2015.50"></text></g><g><title>process_scheduled_works (17,765,695 samples, 0.02%)</title><rect x="0.8083%" y="1989" width="0.0221%" height="15" fill="rgb(233,208,19)" fg:x="649796751" fg:w="17765695"/><text x="1.0583%" y="1999.50"></text></g><g><title>wb_workfn (17,765,695 samples, 0.02%)</title><rect x="0.8083%" y="1973" width="0.0221%" height="15" fill="rgb(216,164,2)" fg:x="649796751" fg:w="17765695"/><text x="1.0583%" y="1983.50"></text></g><g><title>wb_writeback (17,373,642 samples, 0.02%)</title><rect x="0.8088%" y="1957" width="0.0216%" height="15" fill="rgb(220,129,5)" fg:x="650188804" fg:w="17373642"/><text x="1.0588%" y="1967.50"></text></g><g><title>__writeback_inodes_wb (17,373,642 samples, 0.02%)</title><rect x="0.8088%" y="1941" width="0.0216%" height="15" fill="rgb(242,17,10)" fg:x="650188804" fg:w="17373642"/><text x="1.0588%" y="1951.50"></text></g><g><title>writeback_sb_inodes (17,373,642 samples, 0.02%)</title><rect x="0.8088%" y="1925" width="0.0216%" height="15" fill="rgb(242,107,0)" fg:x="650188804" fg:w="17373642"/><text x="1.0588%" y="1935.50"></text></g><g><title>__writeback_single_inode (17,373,642 samples, 0.02%)</title><rect x="0.8088%" y="1909" width="0.0216%" height="15" fill="rgb(251,28,31)" fg:x="650188804" fg:w="17373642"/><text x="1.0588%" y="1919.50"></text></g><g><title>do_writepages (17,373,642 samples, 0.02%)</title><rect x="0.8088%" y="1893" width="0.0216%" height="15" fill="rgb(233,223,10)" fg:x="650188804" fg:w="17373642"/><text x="1.0588%" y="1903.50"></text></g><g><title>ext4_writepages (17,373,642 samples, 0.02%)</title><rect x="0.8088%" y="1877" width="0.0216%" height="15" fill="rgb(215,21,27)" fg:x="650188804" fg:w="17373642"/><text x="1.0588%" y="1887.50"></text></g><g><title>ext4_do_writepages (17,373,642 samples, 0.02%)</title><rect x="0.8088%" y="1861" width="0.0216%" height="15" fill="rgb(232,23,21)" fg:x="650188804" fg:w="17373642"/><text x="1.0588%" y="1871.50"></text></g><g><title>mpage_prepare_extent_to_map (16,914,677 samples, 0.02%)</title><rect x="0.8094%" y="1845" width="0.0210%" height="15" fill="rgb(244,5,23)" fg:x="650647769" fg:w="16914677"/><text x="1.0594%" y="1855.50"></text></g><g><title>mpage_process_page_bufs (12,994,608 samples, 0.02%)</title><rect x="0.8143%" y="1829" width="0.0162%" height="15" fill="rgb(226,81,46)" fg:x="654567838" fg:w="12994608"/><text x="1.0643%" y="1839.50"></text></g><g><title>mpage_submit_folio (11,296,133 samples, 0.01%)</title><rect x="0.8164%" y="1813" width="0.0141%" height="15" fill="rgb(247,70,30)" fg:x="656266313" fg:w="11296133"/><text x="1.0664%" y="1823.50"></text></g><g><title>__folio_start_writeback (23,574,347 samples, 0.03%)</title><rect x="0.8498%" y="1781" width="0.0293%" height="15" fill="rgb(212,68,19)" fg:x="683160213" fg:w="23574347"/><text x="1.0998%" y="1791.50"></text></g><g><title>ext4_bio_write_folio (33,642,735 samples, 0.04%)</title><rect x="0.8485%" y="1797" width="0.0419%" height="15" fill="rgb(240,187,13)" fg:x="682119691" fg:w="33642735"/><text x="1.0985%" y="1807.50"></text></g><g><title>__writeback_single_inode (52,507,454 samples, 0.07%)</title><rect x="0.8310%" y="1909" width="0.0653%" height="15" fill="rgb(223,113,26)" fg:x="668007393" fg:w="52507454"/><text x="1.0810%" y="1919.50"></text></g><g><title>do_writepages (52,507,454 samples, 0.07%)</title><rect x="0.8310%" y="1893" width="0.0653%" height="15" fill="rgb(206,192,2)" fg:x="668007393" fg:w="52507454"/><text x="1.0810%" y="1903.50"></text></g><g><title>ext4_writepages (52,507,454 samples, 0.07%)</title><rect x="0.8310%" y="1877" width="0.0653%" height="15" fill="rgb(241,108,4)" fg:x="668007393" fg:w="52507454"/><text x="1.0810%" y="1887.50"></text></g><g><title>ext4_do_writepages (52,507,454 samples, 0.07%)</title><rect x="0.8310%" y="1861" width="0.0653%" height="15" fill="rgb(247,173,49)" fg:x="668007393" fg:w="52507454"/><text x="1.0810%" y="1871.50"></text></g><g><title>mpage_prepare_extent_to_map (51,614,441 samples, 0.06%)</title><rect x="0.8321%" y="1845" width="0.0642%" height="15" fill="rgb(224,114,35)" fg:x="668900406" fg:w="51614441"/><text x="1.0821%" y="1855.50"></text></g><g><title>mpage_process_page_bufs (45,126,766 samples, 0.06%)</title><rect x="0.8402%" y="1829" width="0.0561%" height="15" fill="rgb(245,159,27)" fg:x="675388081" fg:w="45126766"/><text x="1.0902%" y="1839.50"></text></g><g><title>mpage_submit_folio (38,395,156 samples, 0.05%)</title><rect x="0.8485%" y="1813" width="0.0478%" height="15" fill="rgb(245,172,44)" fg:x="682119691" fg:w="38395156"/><text x="1.0985%" y="1823.50"></text></g><g><title>kworker/u65:3-w (53,028,562 samples, 0.07%)</title><rect x="0.8304%" y="2069" width="0.0660%" height="15" fill="rgb(236,23,11)" fg:x="667562446" fg:w="53028562"/><text x="1.0804%" y="2079.50"></text></g><g><title>ret_from_fork_asm (53,028,562 samples, 0.07%)</title><rect x="0.8304%" y="2053" width="0.0660%" height="15" fill="rgb(205,117,38)" fg:x="667562446" fg:w="53028562"/><text x="1.0804%" y="2063.50"></text></g><g><title>ret_from_fork (53,028,562 samples, 0.07%)</title><rect x="0.8304%" y="2037" width="0.0660%" height="15" fill="rgb(237,72,25)" fg:x="667562446" fg:w="53028562"/><text x="1.0804%" y="2047.50"></text></g><g><title>kthread (53,028,562 samples, 0.07%)</title><rect x="0.8304%" y="2021" width="0.0660%" height="15" fill="rgb(244,70,9)" fg:x="667562446" fg:w="53028562"/><text x="1.0804%" y="2031.50"></text></g><g><title>worker_thread (53,028,562 samples, 0.07%)</title><rect x="0.8304%" y="2005" width="0.0660%" height="15" fill="rgb(217,125,39)" fg:x="667562446" fg:w="53028562"/><text x="1.0804%" y="2015.50"></text></g><g><title>process_scheduled_works (53,028,562 samples, 0.07%)</title><rect x="0.8304%" y="1989" width="0.0660%" height="15" fill="rgb(235,36,10)" fg:x="667562446" fg:w="53028562"/><text x="1.0804%" y="1999.50"></text></g><g><title>wb_workfn (52,957,309 samples, 0.07%)</title><rect x="0.8305%" y="1973" width="0.0659%" height="15" fill="rgb(251,123,47)" fg:x="667633699" fg:w="52957309"/><text x="1.0805%" y="1983.50"></text></g><g><title>wb_writeback (52,583,615 samples, 0.07%)</title><rect x="0.8310%" y="1957" width="0.0654%" height="15" fill="rgb(221,13,13)" fg:x="668007393" fg:w="52583615"/><text x="1.0810%" y="1967.50"></text></g><g><title>__writeback_inodes_wb (52,583,615 samples, 0.07%)</title><rect x="0.8310%" y="1941" width="0.0654%" height="15" fill="rgb(238,131,9)" fg:x="668007393" fg:w="52583615"/><text x="1.0810%" y="1951.50"></text></g><g><title>writeback_sb_inodes (52,583,615 samples, 0.07%)</title><rect x="0.8310%" y="1925" width="0.0654%" height="15" fill="rgb(211,50,8)" fg:x="668007393" fg:w="52583615"/><text x="1.0810%" y="1935.50"></text></g><g><title>__folio_start_writeback (12,429,086 samples, 0.02%)</title><rect x="0.9080%" y="1781" width="0.0155%" height="15" fill="rgb(245,182,24)" fg:x="729940804" fg:w="12429086"/><text x="1.1580%" y="1791.50"></text></g><g><title>ext4_bio_write_folio (19,025,359 samples, 0.02%)</title><rect x="0.9080%" y="1797" width="0.0237%" height="15" fill="rgb(242,14,37)" fg:x="729940804" fg:w="19025359"/><text x="1.1580%" y="1807.50"></text></g><g><title>__writeback_inodes_wb (31,122,428 samples, 0.04%)</title><rect x="0.8981%" y="1941" width="0.0387%" height="15" fill="rgb(246,228,12)" fg:x="721989277" fg:w="31122428"/><text x="1.1481%" y="1951.50"></text></g><g><title>writeback_sb_inodes (31,122,428 samples, 0.04%)</title><rect x="0.8981%" y="1925" width="0.0387%" height="15" fill="rgb(213,55,15)" fg:x="721989277" fg:w="31122428"/><text x="1.1481%" y="1935.50"></text></g><g><title>__writeback_single_inode (31,122,428 samples, 0.04%)</title><rect x="0.8981%" y="1909" width="0.0387%" height="15" fill="rgb(209,9,3)" fg:x="721989277" fg:w="31122428"/><text x="1.1481%" y="1919.50"></text></g><g><title>do_writepages (31,122,428 samples, 0.04%)</title><rect x="0.8981%" y="1893" width="0.0387%" height="15" fill="rgb(230,59,30)" fg:x="721989277" fg:w="31122428"/><text x="1.1481%" y="1903.50"></text></g><g><title>ext4_writepages (31,122,428 samples, 0.04%)</title><rect x="0.8981%" y="1877" width="0.0387%" height="15" fill="rgb(209,121,21)" fg:x="721989277" fg:w="31122428"/><text x="1.1481%" y="1887.50"></text></g><g><title>ext4_do_writepages (31,122,428 samples, 0.04%)</title><rect x="0.8981%" y="1861" width="0.0387%" height="15" fill="rgb(220,109,13)" fg:x="721989277" fg:w="31122428"/><text x="1.1481%" y="1871.50"></text></g><g><title>mpage_prepare_extent_to_map (29,553,780 samples, 0.04%)</title><rect x="0.9001%" y="1845" width="0.0368%" height="15" fill="rgb(232,18,1)" fg:x="723557925" fg:w="29553780"/><text x="1.1501%" y="1855.50"></text></g><g><title>mpage_process_page_bufs (27,688,465 samples, 0.03%)</title><rect x="0.9024%" y="1829" width="0.0344%" height="15" fill="rgb(215,41,42)" fg:x="725423240" fg:w="27688465"/><text x="1.1524%" y="1839.50"></text></g><g><title>mpage_submit_folio (24,240,689 samples, 0.03%)</title><rect x="0.9067%" y="1813" width="0.0302%" height="15" fill="rgb(224,123,36)" fg:x="728871016" fg:w="24240689"/><text x="1.1567%" y="1823.50"></text></g><g><title>kworker/u66:1-f (33,216,815 samples, 0.04%)</title><rect x="0.8964%" y="2069" width="0.0413%" height="15" fill="rgb(240,125,3)" fg:x="720591008" fg:w="33216815"/><text x="1.1464%" y="2079.50"></text></g><g><title>ret_from_fork_asm (33,216,815 samples, 0.04%)</title><rect x="0.8964%" y="2053" width="0.0413%" height="15" fill="rgb(205,98,50)" fg:x="720591008" fg:w="33216815"/><text x="1.1464%" y="2063.50"></text></g><g><title>ret_from_fork (33,216,815 samples, 0.04%)</title><rect x="0.8964%" y="2037" width="0.0413%" height="15" fill="rgb(205,185,37)" fg:x="720591008" fg:w="33216815"/><text x="1.1464%" y="2047.50"></text></g><g><title>kthread (33,216,815 samples, 0.04%)</title><rect x="0.8964%" y="2021" width="0.0413%" height="15" fill="rgb(238,207,15)" fg:x="720591008" fg:w="33216815"/><text x="1.1464%" y="2031.50"></text></g><g><title>worker_thread (33,216,815 samples, 0.04%)</title><rect x="0.8964%" y="2005" width="0.0413%" height="15" fill="rgb(213,199,42)" fg:x="720591008" fg:w="33216815"/><text x="1.1464%" y="2015.50"></text></g><g><title>process_scheduled_works (33,216,815 samples, 0.04%)</title><rect x="0.8964%" y="1989" width="0.0413%" height="15" fill="rgb(235,201,11)" fg:x="720591008" fg:w="33216815"/><text x="1.1464%" y="1999.50"></text></g><g><title>wb_workfn (32,417,884 samples, 0.04%)</title><rect x="0.8974%" y="1973" width="0.0403%" height="15" fill="rgb(207,46,11)" fg:x="721389939" fg:w="32417884"/><text x="1.1474%" y="1983.50"></text></g><g><title>wb_writeback (31,818,546 samples, 0.04%)</title><rect x="0.8981%" y="1957" width="0.0396%" height="15" fill="rgb(241,35,35)" fg:x="721989277" fg:w="31818546"/><text x="1.1481%" y="1967.50"></text></g><g><title>_raw_spin_lock_irqsave (9,640,058 samples, 0.01%)</title><rect x="0.9739%" y="1765" width="0.0120%" height="15" fill="rgb(243,32,47)" fg:x="782866452" fg:w="9640058"/><text x="1.2239%" y="1775.50"></text></g><g><title>__folio_start_writeback (29,025,238 samples, 0.04%)</title><rect x="0.9651%" y="1781" width="0.0361%" height="15" fill="rgb(247,202,23)" fg:x="775846329" fg:w="29025238"/><text x="1.2151%" y="1791.50"></text></g><g><title>ext4_bio_write_folio (38,888,576 samples, 0.05%)</title><rect x="0.9630%" y="1797" width="0.0484%" height="15" fill="rgb(219,102,11)" fg:x="774111497" fg:w="38888576"/><text x="1.2130%" y="1807.50"></text></g><g><title>__mod_lruvec_page_state (8,219,752 samples, 0.01%)</title><rect x="1.0130%" y="1781" width="0.0102%" height="15" fill="rgb(243,110,44)" fg:x="814346546" fg:w="8219752"/><text x="1.2630%" y="1791.50"></text></g><g><title>kworker/u66:2-f (73,660,161 samples, 0.09%)</title><rect x="0.9377%" y="2069" width="0.0916%" height="15" fill="rgb(222,74,54)" fg:x="753807823" fg:w="73660161"/><text x="1.1877%" y="2079.50"></text></g><g><title>ret_from_fork_asm (73,660,161 samples, 0.09%)</title><rect x="0.9377%" y="2053" width="0.0916%" height="15" fill="rgb(216,99,12)" fg:x="753807823" fg:w="73660161"/><text x="1.1877%" y="2063.50"></text></g><g><title>ret_from_fork (73,660,161 samples, 0.09%)</title><rect x="0.9377%" y="2037" width="0.0916%" height="15" fill="rgb(226,22,26)" fg:x="753807823" fg:w="73660161"/><text x="1.1877%" y="2047.50"></text></g><g><title>kthread (73,660,161 samples, 0.09%)</title><rect x="0.9377%" y="2021" width="0.0916%" height="15" fill="rgb(217,163,10)" fg:x="753807823" fg:w="73660161"/><text x="1.1877%" y="2031.50"></text></g><g><title>worker_thread (73,660,161 samples, 0.09%)</title><rect x="0.9377%" y="2005" width="0.0916%" height="15" fill="rgb(213,25,53)" fg:x="753807823" fg:w="73660161"/><text x="1.1877%" y="2015.50"></text></g><g><title>process_scheduled_works (73,660,161 samples, 0.09%)</title><rect x="0.9377%" y="1989" width="0.0916%" height="15" fill="rgb(252,105,26)" fg:x="753807823" fg:w="73660161"/><text x="1.1877%" y="1999.50"></text></g><g><title>wb_workfn (73,660,161 samples, 0.09%)</title><rect x="0.9377%" y="1973" width="0.0916%" height="15" fill="rgb(220,39,43)" fg:x="753807823" fg:w="73660161"/><text x="1.1877%" y="1983.50"></text></g><g><title>wb_writeback (73,460,289 samples, 0.09%)</title><rect x="0.9380%" y="1957" width="0.0914%" height="15" fill="rgb(229,68,48)" fg:x="754007695" fg:w="73460289"/><text x="1.1880%" y="1967.50"></text></g><g><title>__writeback_inodes_wb (73,460,289 samples, 0.09%)</title><rect x="0.9380%" y="1941" width="0.0914%" height="15" fill="rgb(252,8,32)" fg:x="754007695" fg:w="73460289"/><text x="1.1880%" y="1951.50"></text></g><g><title>writeback_sb_inodes (73,460,289 samples, 0.09%)</title><rect x="0.9380%" y="1925" width="0.0914%" height="15" fill="rgb(223,20,43)" fg:x="754007695" fg:w="73460289"/><text x="1.1880%" y="1935.50"></text></g><g><title>__writeback_single_inode (73,460,289 samples, 0.09%)</title><rect x="0.9380%" y="1909" width="0.0914%" height="15" fill="rgb(229,81,49)" fg:x="754007695" fg:w="73460289"/><text x="1.1880%" y="1919.50"></text></g><g><title>do_writepages (72,673,733 samples, 0.09%)</title><rect x="0.9389%" y="1893" width="0.0904%" height="15" fill="rgb(236,28,36)" fg:x="754794251" fg:w="72673733"/><text x="1.1889%" y="1903.50"></text></g><g><title>ext4_writepages (72,673,733 samples, 0.09%)</title><rect x="0.9389%" y="1877" width="0.0904%" height="15" fill="rgb(249,185,26)" fg:x="754794251" fg:w="72673733"/><text x="1.1889%" y="1887.50"></text></g><g><title>ext4_do_writepages (72,673,733 samples, 0.09%)</title><rect x="0.9389%" y="1861" width="0.0904%" height="15" fill="rgb(249,174,33)" fg:x="754794251" fg:w="72673733"/><text x="1.1889%" y="1871.50"></text></g><g><title>mpage_prepare_extent_to_map (72,673,733 samples, 0.09%)</title><rect x="0.9389%" y="1845" width="0.0904%" height="15" fill="rgb(233,201,37)" fg:x="754794251" fg:w="72673733"/><text x="1.1889%" y="1855.50"></text></g><g><title>mpage_process_page_bufs (65,146,466 samples, 0.08%)</title><rect x="0.9483%" y="1829" width="0.0810%" height="15" fill="rgb(221,78,26)" fg:x="762321518" fg:w="65146466"/><text x="1.1983%" y="1839.50"></text></g><g><title>mpage_submit_folio (53,804,834 samples, 0.07%)</title><rect x="0.9624%" y="1813" width="0.0669%" height="15" fill="rgb(250,127,30)" fg:x="773663150" fg:w="53804834"/><text x="1.2124%" y="1823.50"></text></g><g><title>folio_clear_dirty_for_io (14,467,911 samples, 0.02%)</title><rect x="1.0114%" y="1797" width="0.0180%" height="15" fill="rgb(230,49,44)" fg:x="813000073" fg:w="14467911"/><text x="1.2614%" y="1807.50"></text></g><g><title>__folio_start_writeback (15,354,702 samples, 0.02%)</title><rect x="1.0395%" y="1781" width="0.0191%" height="15" fill="rgb(229,67,23)" fg:x="835594671" fg:w="15354702"/><text x="1.2895%" y="1791.50"></text></g><g><title>ext4_bio_write_folio (16,666,159 samples, 0.02%)</title><rect x="1.0395%" y="1797" width="0.0207%" height="15" fill="rgb(249,83,47)" fg:x="835594671" fg:w="16666159"/><text x="1.2895%" y="1807.50"></text></g><g><title>kworker/u67:5-f (24,081,622 samples, 0.03%)</title><rect x="1.0324%" y="2069" width="0.0300%" height="15" fill="rgb(215,43,3)" fg:x="829943655" fg:w="24081622"/><text x="1.2824%" y="2079.50"></text></g><g><title>ret_from_fork_asm (24,081,622 samples, 0.03%)</title><rect x="1.0324%" y="2053" width="0.0300%" height="15" fill="rgb(238,154,13)" fg:x="829943655" fg:w="24081622"/><text x="1.2824%" y="2063.50"></text></g><g><title>ret_from_fork (24,081,622 samples, 0.03%)</title><rect x="1.0324%" y="2037" width="0.0300%" height="15" fill="rgb(219,56,2)" fg:x="829943655" fg:w="24081622"/><text x="1.2824%" y="2047.50"></text></g><g><title>kthread (24,081,622 samples, 0.03%)</title><rect x="1.0324%" y="2021" width="0.0300%" height="15" fill="rgb(233,0,4)" fg:x="829943655" fg:w="24081622"/><text x="1.2824%" y="2031.50"></text></g><g><title>worker_thread (24,081,622 samples, 0.03%)</title><rect x="1.0324%" y="2005" width="0.0300%" height="15" fill="rgb(235,30,7)" fg:x="829943655" fg:w="24081622"/><text x="1.2824%" y="2015.50"></text></g><g><title>process_scheduled_works (24,081,622 samples, 0.03%)</title><rect x="1.0324%" y="1989" width="0.0300%" height="15" fill="rgb(250,79,13)" fg:x="829943655" fg:w="24081622"/><text x="1.2824%" y="1999.50"></text></g><g><title>wb_workfn (24,081,622 samples, 0.03%)</title><rect x="1.0324%" y="1973" width="0.0300%" height="15" fill="rgb(211,146,34)" fg:x="829943655" fg:w="24081622"/><text x="1.2824%" y="1983.50"></text></g><g><title>wb_writeback (23,661,842 samples, 0.03%)</title><rect x="1.0330%" y="1957" width="0.0294%" height="15" fill="rgb(228,22,38)" fg:x="830363435" fg:w="23661842"/><text x="1.2830%" y="1967.50"></text></g><g><title>__writeback_inodes_wb (23,661,842 samples, 0.03%)</title><rect x="1.0330%" y="1941" width="0.0294%" height="15" fill="rgb(235,168,5)" fg:x="830363435" fg:w="23661842"/><text x="1.2830%" y="1951.50"></text></g><g><title>writeback_sb_inodes (23,661,842 samples, 0.03%)</title><rect x="1.0330%" y="1925" width="0.0294%" height="15" fill="rgb(221,155,16)" fg:x="830363435" fg:w="23661842"/><text x="1.2830%" y="1935.50"></text></g><g><title>__writeback_single_inode (23,661,842 samples, 0.03%)</title><rect x="1.0330%" y="1909" width="0.0294%" height="15" fill="rgb(215,215,53)" fg:x="830363435" fg:w="23661842"/><text x="1.2830%" y="1919.50"></text></g><g><title>do_writepages (23,661,842 samples, 0.03%)</title><rect x="1.0330%" y="1893" width="0.0294%" height="15" fill="rgb(223,4,10)" fg:x="830363435" fg:w="23661842"/><text x="1.2830%" y="1903.50"></text></g><g><title>ext4_writepages (23,661,842 samples, 0.03%)</title><rect x="1.0330%" y="1877" width="0.0294%" height="15" fill="rgb(234,103,6)" fg:x="830363435" fg:w="23661842"/><text x="1.2830%" y="1887.50"></text></g><g><title>ext4_do_writepages (23,661,842 samples, 0.03%)</title><rect x="1.0330%" y="1861" width="0.0294%" height="15" fill="rgb(227,97,0)" fg:x="830363435" fg:w="23661842"/><text x="1.2830%" y="1871.50"></text></g><g><title>mpage_prepare_extent_to_map (23,010,218 samples, 0.03%)</title><rect x="1.0338%" y="1845" width="0.0286%" height="15" fill="rgb(234,150,53)" fg:x="831015059" fg:w="23010218"/><text x="1.2838%" y="1855.50"></text></g><g><title>mpage_process_page_bufs (20,353,892 samples, 0.03%)</title><rect x="1.0371%" y="1829" width="0.0253%" height="15" fill="rgb(228,201,54)" fg:x="833671385" fg:w="20353892"/><text x="1.2871%" y="1839.50"></text></g><g><title>mpage_submit_folio (18,430,606 samples, 0.02%)</title><rect x="1.0395%" y="1813" width="0.0229%" height="15" fill="rgb(222,22,37)" fg:x="835594671" fg:w="18430606"/><text x="1.2895%" y="1823.50"></text></g><g><title>find_get_entry (9,233,596 samples, 0.01%)</title><rect x="1.0677%" y="1813" width="0.0115%" height="15" fill="rgb(237,53,32)" fg:x="858326629" fg:w="9233596"/><text x="1.3177%" y="1823.50"></text></g><g><title>filemap_get_folios_tag (9,863,590 samples, 0.01%)</title><rect x="1.0677%" y="1829" width="0.0123%" height="15" fill="rgb(233,25,53)" fg:x="858326629" fg:w="9863590"/><text x="1.3177%" y="1839.50"></text></g><g><title>__mod_lruvec_page_state (9,477,733 samples, 0.01%)</title><rect x="1.1013%" y="1765" width="0.0118%" height="15" fill="rgb(210,40,34)" fg:x="885293592" fg:w="9477733"/><text x="1.3513%" y="1775.50"></text></g><g><title>_raw_spin_lock_irqsave (8,635,156 samples, 0.01%)</title><rect x="1.1131%" y="1765" width="0.0107%" height="15" fill="rgb(241,220,44)" fg:x="894771325" fg:w="8635156"/><text x="1.3631%" y="1775.50"></text></g><g><title>__folio_start_writeback (38,218,193 samples, 0.05%)</title><rect x="1.1005%" y="1781" width="0.0475%" height="15" fill="rgb(235,28,35)" fg:x="884660360" fg:w="38218193"/><text x="1.3505%" y="1791.50"></text></g><g><title>ext4_bio_write_folio (52,678,369 samples, 0.07%)</title><rect x="1.0977%" y="1797" width="0.0655%" height="15" fill="rgb(210,56,17)" fg:x="882446818" fg:w="52678369"/><text x="1.3477%" y="1807.50"></text></g><g><title>lock_acquire (8,484,453 samples, 0.01%)</title><rect x="1.1672%" y="1765" width="0.0106%" height="15" fill="rgb(224,130,29)" fg:x="938302655" fg:w="8484453"/><text x="1.4172%" y="1775.50"></text></g><g><title>__mod_lruvec_page_state (9,736,614 samples, 0.01%)</title><rect x="1.1668%" y="1781" width="0.0121%" height="15" fill="rgb(235,212,8)" fg:x="937934492" fg:w="9736614"/><text x="1.4168%" y="1791.50"></text></g><g><title>folio_clear_dirty_for_io (18,358,659 samples, 0.02%)</title><rect x="1.1633%" y="1797" width="0.0228%" height="15" fill="rgb(223,33,50)" fg:x="935125187" fg:w="18358659"/><text x="1.4133%" y="1807.50"></text></g><g><title>mpage_process_page_bufs (84,869,536 samples, 0.11%)</title><rect x="1.0811%" y="1829" width="0.1056%" height="15" fill="rgb(219,149,13)" fg:x="869058060" fg:w="84869536"/><text x="1.3311%" y="1839.50"></text></g><g><title>mpage_submit_folio (72,288,975 samples, 0.09%)</title><rect x="1.0967%" y="1813" width="0.0899%" height="15" fill="rgb(250,156,29)" fg:x="881638621" fg:w="72288975"/><text x="1.3467%" y="1823.50"></text></g><g><title>__writeback_inodes_wb (99,639,949 samples, 0.12%)</title><rect x="1.0633%" y="1941" width="0.1239%" height="15" fill="rgb(216,193,19)" fg:x="854780301" fg:w="99639949"/><text x="1.3133%" y="1951.50"></text></g><g><title>writeback_sb_inodes (99,639,949 samples, 0.12%)</title><rect x="1.0633%" y="1925" width="0.1239%" height="15" fill="rgb(216,135,14)" fg:x="854780301" fg:w="99639949"/><text x="1.3133%" y="1935.50"></text></g><g><title>__writeback_single_inode (99,639,949 samples, 0.12%)</title><rect x="1.0633%" y="1909" width="0.1239%" height="15" fill="rgb(241,47,5)" fg:x="854780301" fg:w="99639949"/><text x="1.3133%" y="1919.50"></text></g><g><title>do_writepages (99,639,949 samples, 0.12%)</title><rect x="1.0633%" y="1893" width="0.1239%" height="15" fill="rgb(233,42,35)" fg:x="854780301" fg:w="99639949"/><text x="1.3133%" y="1903.50"></text></g><g><title>ext4_writepages (99,336,517 samples, 0.12%)</title><rect x="1.0637%" y="1877" width="0.1236%" height="15" fill="rgb(231,13,6)" fg:x="855083733" fg:w="99336517"/><text x="1.3137%" y="1887.50"></text></g><g><title>ext4_do_writepages (99,336,517 samples, 0.12%)</title><rect x="1.0637%" y="1861" width="0.1236%" height="15" fill="rgb(207,181,40)" fg:x="855083733" fg:w="99336517"/><text x="1.3137%" y="1871.50"></text></g><g><title>mpage_prepare_extent_to_map (98,776,435 samples, 0.12%)</title><rect x="1.0644%" y="1845" width="0.1229%" height="15" fill="rgb(254,173,49)" fg:x="855643815" fg:w="98776435"/><text x="1.3144%" y="1855.50"></text></g><g><title>kworker/u68:1-f (100,791,638 samples, 0.13%)</title><rect x="1.0624%" y="2069" width="0.1254%" height="15" fill="rgb(221,1,38)" fg:x="854025277" fg:w="100791638"/><text x="1.3124%" y="2079.50"></text></g><g><title>ret_from_fork_asm (100,791,638 samples, 0.13%)</title><rect x="1.0624%" y="2053" width="0.1254%" height="15" fill="rgb(206,124,46)" fg:x="854025277" fg:w="100791638"/><text x="1.3124%" y="2063.50"></text></g><g><title>ret_from_fork (100,791,638 samples, 0.13%)</title><rect x="1.0624%" y="2037" width="0.1254%" height="15" fill="rgb(249,21,11)" fg:x="854025277" fg:w="100791638"/><text x="1.3124%" y="2047.50"></text></g><g><title>kthread (100,791,638 samples, 0.13%)</title><rect x="1.0624%" y="2021" width="0.1254%" height="15" fill="rgb(222,201,40)" fg:x="854025277" fg:w="100791638"/><text x="1.3124%" y="2031.50"></text></g><g><title>worker_thread (100,791,638 samples, 0.13%)</title><rect x="1.0624%" y="2005" width="0.1254%" height="15" fill="rgb(235,61,29)" fg:x="854025277" fg:w="100791638"/><text x="1.3124%" y="2015.50"></text></g><g><title>process_scheduled_works (100,791,638 samples, 0.13%)</title><rect x="1.0624%" y="1989" width="0.1254%" height="15" fill="rgb(219,207,3)" fg:x="854025277" fg:w="100791638"/><text x="1.3124%" y="1999.50"></text></g><g><title>wb_workfn (100,791,638 samples, 0.13%)</title><rect x="1.0624%" y="1973" width="0.1254%" height="15" fill="rgb(222,56,46)" fg:x="854025277" fg:w="100791638"/><text x="1.3124%" y="1983.50"></text></g><g><title>wb_writeback (100,036,614 samples, 0.12%)</title><rect x="1.0633%" y="1957" width="0.1244%" height="15" fill="rgb(239,76,54)" fg:x="854780301" fg:w="100036614"/><text x="1.3133%" y="1967.50"></text></g><g><title>do_raw_spin_lock (8,555,929 samples, 0.01%)</title><rect x="1.2371%" y="1749" width="0.0106%" height="15" fill="rgb(231,124,27)" fg:x="994477670" fg:w="8555929"/><text x="1.4871%" y="1759.50"></text></g><g><title>native_queued_spin_lock_slowpath (8,555,929 samples, 0.01%)</title><rect x="1.2371%" y="1733" width="0.0106%" height="15" fill="rgb(249,195,6)" fg:x="994477670" fg:w="8555929"/><text x="1.4871%" y="1743.50"></text></g><g><title>_raw_spin_lock_irqsave (13,292,343 samples, 0.02%)</title><rect x="1.2365%" y="1765" width="0.0165%" height="15" fill="rgb(237,174,47)" fg:x="993995935" fg:w="13292343"/><text x="1.4865%" y="1775.50"></text></g><g><title>__folio_start_writeback (39,538,077 samples, 0.05%)</title><rect x="1.2246%" y="1781" width="0.0492%" height="15" fill="rgb(206,201,31)" fg:x="984438096" fg:w="39538077"/><text x="1.4746%" y="1791.50"></text></g><g><title>ext4_bio_write_folio (51,261,628 samples, 0.06%)</title><rect x="1.2209%" y="1797" width="0.0638%" height="15" fill="rgb(231,57,52)" fg:x="981453377" fg:w="51261628"/><text x="1.4709%" y="1807.50"></text></g><g><title>folio_clear_dirty_for_io (11,319,136 samples, 0.01%)</title><rect x="1.2847%" y="1797" width="0.0141%" height="15" fill="rgb(248,177,22)" fg:x="1032715005" fg:w="11319136"/><text x="1.5347%" y="1807.50"></text></g><g><title>__writeback_single_inode (89,420,852 samples, 0.11%)</title><rect x="1.1883%" y="1909" width="0.1112%" height="15" fill="rgb(215,211,37)" fg:x="955253765" fg:w="89420852"/><text x="1.4383%" y="1919.50"></text></g><g><title>do_writepages (87,915,486 samples, 0.11%)</title><rect x="1.1902%" y="1893" width="0.1094%" height="15" fill="rgb(241,128,51)" fg:x="956759131" fg:w="87915486"/><text x="1.4402%" y="1903.50"></text></g><g><title>ext4_writepages (87,915,486 samples, 0.11%)</title><rect x="1.1902%" y="1877" width="0.1094%" height="15" fill="rgb(227,165,31)" fg:x="956759131" fg:w="87915486"/><text x="1.4402%" y="1887.50"></text></g><g><title>ext4_do_writepages (87,915,486 samples, 0.11%)</title><rect x="1.1902%" y="1861" width="0.1094%" height="15" fill="rgb(228,167,24)" fg:x="956759131" fg:w="87915486"/><text x="1.4402%" y="1871.50"></text></g><g><title>mpage_prepare_extent_to_map (82,230,457 samples, 0.10%)</title><rect x="1.1973%" y="1845" width="0.1023%" height="15" fill="rgb(228,143,12)" fg:x="962444160" fg:w="82230457"/><text x="1.4473%" y="1855.50"></text></g><g><title>mpage_process_page_bufs (74,216,441 samples, 0.09%)</title><rect x="1.2072%" y="1829" width="0.0923%" height="15" fill="rgb(249,149,8)" fg:x="970458176" fg:w="74216441"/><text x="1.4572%" y="1839.50"></text></g><g><title>mpage_submit_folio (63,665,526 samples, 0.08%)</title><rect x="1.2204%" y="1813" width="0.0792%" height="15" fill="rgb(243,35,44)" fg:x="981009091" fg:w="63665526"/><text x="1.4704%" y="1823.50"></text></g><g><title>__writeback_inodes_wb (89,498,722 samples, 0.11%)</title><rect x="1.1883%" y="1941" width="0.1113%" height="15" fill="rgb(246,89,9)" fg:x="955253765" fg:w="89498722"/><text x="1.4383%" y="1951.50"></text></g><g><title>writeback_sb_inodes (89,498,722 samples, 0.11%)</title><rect x="1.1883%" y="1925" width="0.1113%" height="15" fill="rgb(233,213,13)" fg:x="955253765" fg:w="89498722"/><text x="1.4383%" y="1935.50"></text></g><g><title>kworker/u68:2-f (90,663,163 samples, 0.11%)</title><rect x="1.1878%" y="2069" width="0.1128%" height="15" fill="rgb(233,141,41)" fg:x="954816915" fg:w="90663163"/><text x="1.4378%" y="2079.50"></text></g><g><title>ret_from_fork_asm (90,226,313 samples, 0.11%)</title><rect x="1.1883%" y="2053" width="0.1122%" height="15" fill="rgb(239,167,4)" fg:x="955253765" fg:w="90226313"/><text x="1.4383%" y="2063.50"></text></g><g><title>ret_from_fork (90,226,313 samples, 0.11%)</title><rect x="1.1883%" y="2037" width="0.1122%" height="15" fill="rgb(209,217,16)" fg:x="955253765" fg:w="90226313"/><text x="1.4383%" y="2047.50"></text></g><g><title>kthread (90,226,313 samples, 0.11%)</title><rect x="1.1883%" y="2021" width="0.1122%" height="15" fill="rgb(219,88,35)" fg:x="955253765" fg:w="90226313"/><text x="1.4383%" y="2031.50"></text></g><g><title>worker_thread (90,226,313 samples, 0.11%)</title><rect x="1.1883%" y="2005" width="0.1122%" height="15" fill="rgb(220,193,23)" fg:x="955253765" fg:w="90226313"/><text x="1.4383%" y="2015.50"></text></g><g><title>process_scheduled_works (90,226,313 samples, 0.11%)</title><rect x="1.1883%" y="1989" width="0.1122%" height="15" fill="rgb(230,90,52)" fg:x="955253765" fg:w="90226313"/><text x="1.4383%" y="1999.50"></text></g><g><title>wb_workfn (90,226,313 samples, 0.11%)</title><rect x="1.1883%" y="1973" width="0.1122%" height="15" fill="rgb(252,106,19)" fg:x="955253765" fg:w="90226313"/><text x="1.4383%" y="1983.50"></text></g><g><title>wb_writeback (90,226,313 samples, 0.11%)</title><rect x="1.1883%" y="1957" width="0.1122%" height="15" fill="rgb(206,74,20)" fg:x="955253765" fg:w="90226313"/><text x="1.4383%" y="1967.50"></text></g><g><title>__lock_acquire (11,004,420 samples, 0.01%)</title><rect x="1.3170%" y="1941" width="0.0137%" height="15" fill="rgb(230,138,44)" fg:x="1058674296" fg:w="11004420"/><text x="1.5670%" y="1951.50"></text></g><g><title>lock_acquire (22,001,516 samples, 0.03%)</title><rect x="1.3082%" y="1957" width="0.0274%" height="15" fill="rgb(235,182,43)" fg:x="1051658333" fg:w="22001516"/><text x="1.5582%" y="1967.50"></text></g><g><title>lock_release (19,698,244 samples, 0.02%)</title><rect x="1.3356%" y="1957" width="0.0245%" height="15" fill="rgb(242,16,51)" fg:x="1073659849" fg:w="19698244"/><text x="1.5856%" y="1967.50"></text></g><g><title>__lock_acquire (8,809,812 samples, 0.01%)</title><rect x="1.3798%" y="1925" width="0.0110%" height="15" fill="rgb(248,9,4)" fg:x="1109177030" fg:w="8809812"/><text x="1.6298%" y="1935.50"></text></g><g><title>lock_acquire (23,674,889 samples, 0.03%)</title><rect x="1.3660%" y="1941" width="0.0295%" height="15" fill="rgb(210,31,22)" fg:x="1098121474" fg:w="23674889"/><text x="1.6160%" y="1951.50"></text></g><g><title>nf_conntrack_get_ht (43,411,997 samples, 0.05%)</title><rect x="1.3601%" y="1957" width="0.0540%" height="15" fill="rgb(239,54,39)" fg:x="1093358093" fg:w="43411997"/><text x="1.6101%" y="1967.50"></text></g><g><title>lock_release (14,973,727 samples, 0.02%)</title><rect x="1.3955%" y="1941" width="0.0186%" height="15" fill="rgb(230,99,41)" fg:x="1121796363" fg:w="14973727"/><text x="1.6455%" y="1951.50"></text></g><g><title>gc_worker (90,725,700 samples, 0.11%)</title><rect x="1.3032%" y="1973" width="0.1129%" height="15" fill="rgb(253,106,12)" fg:x="1047641503" fg:w="90725700"/><text x="1.5532%" y="1983.50"></text></g><g><title>process_scheduled_works (93,944,166 samples, 0.12%)</title><rect x="1.3023%" y="1989" width="0.1169%" height="15" fill="rgb(213,46,41)" fg:x="1046895912" fg:w="93944166"/><text x="1.5523%" y="1999.50"></text></g><g><title>kworker/u70:0-e (94,362,700 samples, 0.12%)</title><rect x="1.3023%" y="2069" width="0.1174%" height="15" fill="rgb(215,133,35)" fg:x="1046895912" fg:w="94362700"/><text x="1.5523%" y="2079.50"></text></g><g><title>ret_from_fork_asm (94,362,700 samples, 0.12%)</title><rect x="1.3023%" y="2053" width="0.1174%" height="15" fill="rgb(213,28,5)" fg:x="1046895912" fg:w="94362700"/><text x="1.5523%" y="2063.50"></text></g><g><title>ret_from_fork (94,362,700 samples, 0.12%)</title><rect x="1.3023%" y="2037" width="0.1174%" height="15" fill="rgb(215,77,49)" fg:x="1046895912" fg:w="94362700"/><text x="1.5523%" y="2047.50"></text></g><g><title>kthread (94,362,700 samples, 0.12%)</title><rect x="1.3023%" y="2021" width="0.1174%" height="15" fill="rgb(248,100,22)" fg:x="1046895912" fg:w="94362700"/><text x="1.5523%" y="2031.50"></text></g><g><title>worker_thread (94,362,700 samples, 0.12%)</title><rect x="1.3023%" y="2005" width="0.1174%" height="15" fill="rgb(208,67,9)" fg:x="1046895912" fg:w="94362700"/><text x="1.5523%" y="2015.50"></text></g><g><title>filename_lookup (11,089,224 samples, 0.01%)</title><rect x="1.4331%" y="1941" width="0.0138%" height="15" fill="rgb(219,133,21)" fg:x="1152019905" fg:w="11089224"/><text x="1.6831%" y="1951.50"></text></g><g><title>path_lookupat (10,391,165 samples, 0.01%)</title><rect x="1.4340%" y="1925" width="0.0129%" height="15" fill="rgb(246,46,29)" fg:x="1152717964" fg:w="10391165"/><text x="1.6840%" y="1935.50"></text></g><g><title>user_path_at_empty (14,736,053 samples, 0.02%)</title><rect x="1.4331%" y="1957" width="0.0183%" height="15" fill="rgb(246,185,52)" fg:x="1152019905" fg:w="14736053"/><text x="1.6831%" y="1967.50"></text></g><g><title>__x64_sys_readlink (24,359,305 samples, 0.03%)</title><rect x="1.4312%" y="1989" width="0.0303%" height="15" fill="rgb(252,136,11)" fg:x="1150536809" fg:w="24359305"/><text x="1.6812%" y="1999.50"></text></g><g><title>do_readlinkat (24,359,305 samples, 0.03%)</title><rect x="1.4312%" y="1973" width="0.0303%" height="15" fill="rgb(219,138,53)" fg:x="1150536809" fg:w="24359305"/><text x="1.6812%" y="1983.50"></text></g><g><title>vfs_readlink (8,140,156 samples, 0.01%)</title><rect x="1.4514%" y="1957" width="0.0101%" height="15" fill="rgb(211,51,23)" fg:x="1166755958" fg:w="8140156"/><text x="1.7014%" y="1967.50"></text></g><g><title>proc_pid_readlink (8,140,156 samples, 0.01%)</title><rect x="1.4514%" y="1941" width="0.0101%" height="15" fill="rgb(247,221,28)" fg:x="1166755958" fg:w="8140156"/><text x="1.7014%" y="1951.50"></text></g><g><title>entry_SYSCALL_64 (25,154,120 samples, 0.03%)</title><rect x="1.4312%" y="2021" width="0.0313%" height="15" fill="rgb(251,222,45)" fg:x="1150536809" fg:w="25154120"/><text x="1.6812%" y="2031.50"></text></g><g><title>do_syscall_64 (25,154,120 samples, 0.03%)</title><rect x="1.4312%" y="2005" width="0.0313%" height="15" fill="rgb(217,162,53)" fg:x="1150536809" fg:w="25154120"/><text x="1.6812%" y="2015.50"></text></g><g><title>__GI___readlink (27,496,780 samples, 0.03%)</title><rect x="1.4312%" y="2037" width="0.0342%" height="15" fill="rgb(229,93,14)" fg:x="1150536809" fg:w="27496780"/><text x="1.6812%" y="2047.50"></text></g><g><title>[unknown] (34,283,749 samples, 0.04%)</title><rect x="1.4285%" y="2053" width="0.0426%" height="15" fill="rgb(209,67,49)" fg:x="1148317669" fg:w="34283749"/><text x="1.6785%" y="2063.50"></text></g><g><title>__x64_sys_statx (9,130,843 samples, 0.01%)</title><rect x="1.4796%" y="2005" width="0.0114%" height="15" fill="rgb(213,87,29)" fg:x="1189425795" fg:w="9130843"/><text x="1.7296%" y="2015.50"></text></g><g><title>entry_SYSCALL_64 (12,253,228 samples, 0.02%)</title><rect x="1.4787%" y="2037" width="0.0152%" height="15" fill="rgb(205,151,52)" fg:x="1188651775" fg:w="12253228"/><text x="1.7287%" y="2047.50"></text></g><g><title>do_syscall_64 (11,479,208 samples, 0.01%)</title><rect x="1.4796%" y="2021" width="0.0143%" height="15" fill="rgb(253,215,39)" fg:x="1189425795" fg:w="11479208"/><text x="1.7296%" y="2031.50"></text></g><g><title>ls (54,798,587 samples, 0.07%)</title><rect x="1.4266%" y="2069" width="0.0682%" height="15" fill="rgb(221,220,41)" fg:x="1146803008" fg:w="54798587"/><text x="1.6766%" y="2079.50"></text></g><g><title>statx (12,949,820 samples, 0.02%)</title><rect x="1.4787%" y="2053" width="0.0161%" height="15" fill="rgb(218,133,21)" fg:x="1188651775" fg:w="12949820"/><text x="1.7287%" y="2063.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,779,322 samples, 0.01%)</title><rect x="1.5299%" y="533" width="0.0109%" height="15" fill="rgb(221,193,43)" fg:x="1229824766" fg:w="8779322"/><text x="1.7799%" y="543.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,779,322 samples, 0.01%)</title><rect x="1.5299%" y="517" width="0.0109%" height="15" fill="rgb(240,128,52)" fg:x="1229824766" fg:w="8779322"/><text x="1.7799%" y="527.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,779,322 samples, 0.01%)</title><rect x="1.5299%" y="501" width="0.0109%" height="15" fill="rgb(253,114,12)" fg:x="1229824766" fg:w="8779322"/><text x="1.7799%" y="511.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,779,322 samples, 0.01%)</title><rect x="1.5299%" y="485" width="0.0109%" height="15" fill="rgb(215,223,47)" fg:x="1229824766" fg:w="8779322"/><text x="1.7799%" y="495.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,194,955 samples, 0.01%)</title><rect x="1.5299%" y="581" width="0.0114%" height="15" fill="rgb(248,225,23)" fg:x="1229824766" fg:w="9194955"/><text x="1.7799%" y="591.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,194,955 samples, 0.01%)</title><rect x="1.5299%" y="565" width="0.0114%" height="15" fill="rgb(250,108,0)" fg:x="1229824766" fg:w="9194955"/><text x="1.7799%" y="575.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,194,955 samples, 0.01%)</title><rect x="1.5299%" y="549" width="0.0114%" height="15" fill="rgb(228,208,7)" fg:x="1229824766" fg:w="9194955"/><text x="1.7799%" y="559.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,505,285 samples, 0.01%)</title><rect x="1.5299%" y="597" width="0.0118%" height="15" fill="rgb(244,45,10)" fg:x="1229824766" fg:w="9505285"/><text x="1.7799%" y="607.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,889,479 samples, 0.01%)</title><rect x="1.5287%" y="725" width="0.0135%" height="15" fill="rgb(207,125,25)" fg:x="1228866154" fg:w="10889479"/><text x="1.7787%" y="735.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,889,479 samples, 0.01%)</title><rect x="1.5287%" y="709" width="0.0135%" height="15" fill="rgb(210,195,18)" fg:x="1228866154" fg:w="10889479"/><text x="1.7787%" y="719.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,453,288 samples, 0.01%)</title><rect x="1.5292%" y="693" width="0.0130%" height="15" fill="rgb(249,80,12)" fg:x="1229302345" fg:w="10453288"/><text x="1.7792%" y="703.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,453,288 samples, 0.01%)</title><rect x="1.5292%" y="677" width="0.0130%" height="15" fill="rgb(221,65,9)" fg:x="1229302345" fg:w="10453288"/><text x="1.7792%" y="687.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,453,288 samples, 0.01%)</title><rect x="1.5292%" y="661" width="0.0130%" height="15" fill="rgb(235,49,36)" fg:x="1229302345" fg:w="10453288"/><text x="1.7792%" y="671.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,453,288 samples, 0.01%)</title><rect x="1.5292%" y="645" width="0.0130%" height="15" fill="rgb(225,32,20)" fg:x="1229302345" fg:w="10453288"/><text x="1.7792%" y="655.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (10,453,288 samples, 0.01%)</title><rect x="1.5292%" y="629" width="0.0130%" height="15" fill="rgb(215,141,46)" fg:x="1229302345" fg:w="10453288"/><text x="1.7792%" y="639.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,930,867 samples, 0.01%)</title><rect x="1.5299%" y="613" width="0.0124%" height="15" fill="rgb(250,160,47)" fg:x="1229824766" fg:w="9930867"/><text x="1.7799%" y="623.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,644,867 samples, 0.01%)</title><rect x="1.5282%" y="789" width="0.0145%" height="15" fill="rgb(216,222,40)" fg:x="1228449896" fg:w="11644867"/><text x="1.7782%" y="799.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,644,867 samples, 0.01%)</title><rect x="1.5282%" y="773" width="0.0145%" height="15" fill="rgb(234,217,39)" fg:x="1228449896" fg:w="11644867"/><text x="1.7782%" y="783.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11,644,867 samples, 0.01%)</title><rect x="1.5282%" y="757" width="0.0145%" height="15" fill="rgb(207,178,40)" fg:x="1228449896" fg:w="11644867"/><text x="1.7782%" y="767.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,228,609 samples, 0.01%)</title><rect x="1.5287%" y="741" width="0.0140%" height="15" fill="rgb(221,136,13)" fg:x="1228866154" fg:w="11228609"/><text x="1.7787%" y="751.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,430,857 samples, 0.02%)</title><rect x="1.5275%" y="853" width="0.0167%" height="15" fill="rgb(249,199,10)" fg:x="1227923569" fg:w="13430857"/><text x="1.7775%" y="863.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,430,857 samples, 0.02%)</title><rect x="1.5275%" y="837" width="0.0167%" height="15" fill="rgb(249,222,13)" fg:x="1227923569" fg:w="13430857"/><text x="1.7775%" y="847.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (13,430,857 samples, 0.02%)</title><rect x="1.5275%" y="821" width="0.0167%" height="15" fill="rgb(244,185,38)" fg:x="1227923569" fg:w="13430857"/><text x="1.7775%" y="831.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12,904,530 samples, 0.02%)</title><rect x="1.5282%" y="805" width="0.0161%" height="15" fill="rgb(236,202,9)" fg:x="1228449896" fg:w="12904530"/><text x="1.7782%" y="815.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (16,850,192 samples, 0.02%)</title><rect x="1.5257%" y="917" width="0.0210%" height="15" fill="rgb(250,229,37)" fg:x="1226439758" fg:w="16850192"/><text x="1.7757%" y="927.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (16,850,192 samples, 0.02%)</title><rect x="1.5257%" y="901" width="0.0210%" height="15" fill="rgb(206,174,23)" fg:x="1226439758" fg:w="16850192"/><text x="1.7757%" y="911.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (16,850,192 samples, 0.02%)</title><rect x="1.5257%" y="885" width="0.0210%" height="15" fill="rgb(211,33,43)" fg:x="1226439758" fg:w="16850192"/><text x="1.7757%" y="895.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (16,317,804 samples, 0.02%)</title><rect x="1.5263%" y="869" width="0.0203%" height="15" fill="rgb(245,58,50)" fg:x="1226972146" fg:w="16317804"/><text x="1.7763%" y="879.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (19,614,447 samples, 0.02%)</title><rect x="1.5257%" y="981" width="0.0244%" height="15" fill="rgb(244,68,36)" fg:x="1226439758" fg:w="19614447"/><text x="1.7757%" y="991.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (19,614,447 samples, 0.02%)</title><rect x="1.5257%" y="965" width="0.0244%" height="15" fill="rgb(232,229,15)" fg:x="1226439758" fg:w="19614447"/><text x="1.7757%" y="975.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (19,614,447 samples, 0.02%)</title><rect x="1.5257%" y="949" width="0.0244%" height="15" fill="rgb(254,30,23)" fg:x="1226439758" fg:w="19614447"/><text x="1.7757%" y="959.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (19,614,447 samples, 0.02%)</title><rect x="1.5257%" y="933" width="0.0244%" height="15" fill="rgb(235,160,14)" fg:x="1226439758" fg:w="19614447"/><text x="1.7757%" y="943.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (21,583,136 samples, 0.03%)</title><rect x="1.5251%" y="1045" width="0.0268%" height="15" fill="rgb(212,155,44)" fg:x="1225948857" fg:w="21583136"/><text x="1.7751%" y="1055.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (21,583,136 samples, 0.03%)</title><rect x="1.5251%" y="1029" width="0.0268%" height="15" fill="rgb(226,2,50)" fg:x="1225948857" fg:w="21583136"/><text x="1.7751%" y="1039.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (21,583,136 samples, 0.03%)</title><rect x="1.5251%" y="1013" width="0.0268%" height="15" fill="rgb(234,177,6)" fg:x="1225948857" fg:w="21583136"/><text x="1.7751%" y="1023.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (21,583,136 samples, 0.03%)</title><rect x="1.5251%" y="997" width="0.0268%" height="15" fill="rgb(217,24,9)" fg:x="1225948857" fg:w="21583136"/><text x="1.7751%" y="1007.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,672,500 samples, 0.03%)</title><rect x="1.5251%" y="1093" width="0.0319%" height="15" fill="rgb(220,13,46)" fg:x="1225948857" fg:w="25672500"/><text x="1.7751%" y="1103.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,672,500 samples, 0.03%)</title><rect x="1.5251%" y="1077" width="0.0319%" height="15" fill="rgb(239,221,27)" fg:x="1225948857" fg:w="25672500"/><text x="1.7751%" y="1087.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,672,500 samples, 0.03%)</title><rect x="1.5251%" y="1061" width="0.0319%" height="15" fill="rgb(222,198,25)" fg:x="1225948857" fg:w="25672500"/><text x="1.7751%" y="1071.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (26,561,072 samples, 0.03%)</title><rect x="1.5246%" y="1109" width="0.0330%" height="15" fill="rgb(211,99,13)" fg:x="1225580208" fg:w="26561072"/><text x="1.7746%" y="1119.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (30,312,835 samples, 0.04%)</title><rect x="1.5227%" y="1173" width="0.0377%" height="15" fill="rgb(232,111,31)" fg:x="1224075022" fg:w="30312835"/><text x="1.7727%" y="1183.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (30,312,835 samples, 0.04%)</title><rect x="1.5227%" y="1157" width="0.0377%" height="15" fill="rgb(245,82,37)" fg:x="1224075022" fg:w="30312835"/><text x="1.7727%" y="1167.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (29,330,603 samples, 0.04%)</title><rect x="1.5239%" y="1141" width="0.0365%" height="15" fill="rgb(227,149,46)" fg:x="1225057254" fg:w="29330603"/><text x="1.7739%" y="1151.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (28,807,649 samples, 0.04%)</title><rect x="1.5246%" y="1125" width="0.0358%" height="15" fill="rgb(218,36,50)" fg:x="1225580208" fg:w="28807649"/><text x="1.7746%" y="1135.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,138,503 samples, 0.04%)</title><rect x="1.5222%" y="1237" width="0.0412%" height="15" fill="rgb(226,80,48)" fg:x="1223642074" fg:w="33138503"/><text x="1.7722%" y="1247.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,138,503 samples, 0.04%)</title><rect x="1.5222%" y="1221" width="0.0412%" height="15" fill="rgb(238,224,15)" fg:x="1223642074" fg:w="33138503"/><text x="1.7722%" y="1231.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (33,138,503 samples, 0.04%)</title><rect x="1.5222%" y="1205" width="0.0412%" height="15" fill="rgb(241,136,10)" fg:x="1223642074" fg:w="33138503"/><text x="1.7722%" y="1215.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,138,503 samples, 0.04%)</title><rect x="1.5222%" y="1189" width="0.0412%" height="15" fill="rgb(208,32,45)" fg:x="1223642074" fg:w="33138503"/><text x="1.7722%" y="1199.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (35,237,768 samples, 0.04%)</title><rect x="1.5217%" y="1301" width="0.0438%" height="15" fill="rgb(207,135,9)" fg:x="1223262336" fg:w="35237768"/><text x="1.7717%" y="1311.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (35,237,768 samples, 0.04%)</title><rect x="1.5217%" y="1285" width="0.0438%" height="15" fill="rgb(206,86,44)" fg:x="1223262336" fg:w="35237768"/><text x="1.7717%" y="1295.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (34,858,030 samples, 0.04%)</title><rect x="1.5222%" y="1269" width="0.0434%" height="15" fill="rgb(245,177,15)" fg:x="1223642074" fg:w="34858030"/><text x="1.7722%" y="1279.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (34,858,030 samples, 0.04%)</title><rect x="1.5222%" y="1253" width="0.0434%" height="15" fill="rgb(206,64,50)" fg:x="1223642074" fg:w="34858030"/><text x="1.7722%" y="1263.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (38,115,259 samples, 0.05%)</title><rect x="1.5194%" y="1365" width="0.0474%" height="15" fill="rgb(234,36,40)" fg:x="1221387855" fg:w="38115259"/><text x="1.7694%" y="1375.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (37,653,287 samples, 0.05%)</title><rect x="1.5200%" y="1349" width="0.0468%" height="15" fill="rgb(213,64,8)" fg:x="1221849827" fg:w="37653287"/><text x="1.7700%" y="1359.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (37,653,287 samples, 0.05%)</title><rect x="1.5200%" y="1333" width="0.0468%" height="15" fill="rgb(210,75,36)" fg:x="1221849827" fg:w="37653287"/><text x="1.7700%" y="1343.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (36,997,746 samples, 0.05%)</title><rect x="1.5208%" y="1317" width="0.0460%" height="15" fill="rgb(229,88,21)" fg:x="1222505368" fg:w="36997746"/><text x="1.7708%" y="1327.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (40,795,937 samples, 0.05%)</title><rect x="1.5191%" y="1429" width="0.0507%" height="15" fill="rgb(252,204,47)" fg:x="1221148361" fg:w="40795937"/><text x="1.7691%" y="1439.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (40,795,937 samples, 0.05%)</title><rect x="1.5191%" y="1413" width="0.0507%" height="15" fill="rgb(208,77,27)" fg:x="1221148361" fg:w="40795937"/><text x="1.7691%" y="1423.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (40,795,937 samples, 0.05%)</title><rect x="1.5191%" y="1397" width="0.0507%" height="15" fill="rgb(221,76,26)" fg:x="1221148361" fg:w="40795937"/><text x="1.7691%" y="1407.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (40,795,937 samples, 0.05%)</title><rect x="1.5191%" y="1381" width="0.0507%" height="15" fill="rgb(225,139,18)" fg:x="1221148361" fg:w="40795937"/><text x="1.7691%" y="1391.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (46,168,888 samples, 0.06%)</title><rect x="1.5175%" y="1493" width="0.0574%" height="15" fill="rgb(230,137,11)" fg:x="1219840845" fg:w="46168888"/><text x="1.7675%" y="1503.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,272,711 samples, 0.06%)</title><rect x="1.5186%" y="1477" width="0.0563%" height="15" fill="rgb(212,28,1)" fg:x="1220737022" fg:w="45272711"/><text x="1.7686%" y="1487.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (45,272,711 samples, 0.06%)</title><rect x="1.5186%" y="1461" width="0.0563%" height="15" fill="rgb(248,164,17)" fg:x="1220737022" fg:w="45272711"/><text x="1.7686%" y="1471.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,272,711 samples, 0.06%)</title><rect x="1.5186%" y="1445" width="0.0563%" height="15" fill="rgb(222,171,42)" fg:x="1220737022" fg:w="45272711"/><text x="1.7686%" y="1455.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,718,167 samples, 0.06%)</title><rect x="1.5148%" y="1557" width="0.0631%" height="15" fill="rgb(243,84,45)" fg:x="1217683924" fg:w="50718167"/><text x="1.7648%" y="1567.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (49,857,969 samples, 0.06%)</title><rect x="1.5158%" y="1541" width="0.0620%" height="15" fill="rgb(252,49,23)" fg:x="1218544122" fg:w="49857969"/><text x="1.7658%" y="1551.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (49,857,969 samples, 0.06%)</title><rect x="1.5158%" y="1525" width="0.0620%" height="15" fill="rgb(215,19,7)" fg:x="1218544122" fg:w="49857969"/><text x="1.7658%" y="1535.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (48,983,380 samples, 0.06%)</title><rect x="1.5169%" y="1509" width="0.0609%" height="15" fill="rgb(238,81,41)" fg:x="1219418711" fg:w="48983380"/><text x="1.7669%" y="1519.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (52,278,837 samples, 0.07%)</title><rect x="1.5142%" y="1621" width="0.0650%" height="15" fill="rgb(210,199,37)" fg:x="1217206238" fg:w="52278837"/><text x="1.7642%" y="1631.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (52,278,837 samples, 0.07%)</title><rect x="1.5142%" y="1605" width="0.0650%" height="15" fill="rgb(244,192,49)" fg:x="1217206238" fg:w="52278837"/><text x="1.7642%" y="1615.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (52,278,837 samples, 0.07%)</title><rect x="1.5142%" y="1589" width="0.0650%" height="15" fill="rgb(226,211,11)" fg:x="1217206238" fg:w="52278837"/><text x="1.7642%" y="1599.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (52,278,837 samples, 0.07%)</title><rect x="1.5142%" y="1573" width="0.0650%" height="15" fill="rgb(236,162,54)" fg:x="1217206238" fg:w="52278837"/><text x="1.7642%" y="1583.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (53,608,528 samples, 0.07%)</title><rect x="1.5141%" y="1685" width="0.0667%" height="15" fill="rgb(220,229,9)" fg:x="1217160171" fg:w="53608528"/><text x="1.7641%" y="1695.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (53,608,528 samples, 0.07%)</title><rect x="1.5141%" y="1669" width="0.0667%" height="15" fill="rgb(250,87,22)" fg:x="1217160171" fg:w="53608528"/><text x="1.7641%" y="1679.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (53,608,528 samples, 0.07%)</title><rect x="1.5141%" y="1653" width="0.0667%" height="15" fill="rgb(239,43,17)" fg:x="1217160171" fg:w="53608528"/><text x="1.7641%" y="1663.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (53,608,528 samples, 0.07%)</title><rect x="1.5141%" y="1637" width="0.0667%" height="15" fill="rgb(231,177,25)" fg:x="1217160171" fg:w="53608528"/><text x="1.7641%" y="1647.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,451,444 samples, 0.07%)</title><rect x="1.5130%" y="1749" width="0.0702%" height="15" fill="rgb(219,179,1)" fg:x="1216292408" fg:w="56451444"/><text x="1.7630%" y="1759.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (56,451,444 samples, 0.07%)</title><rect x="1.5130%" y="1733" width="0.0702%" height="15" fill="rgb(238,219,53)" fg:x="1216292408" fg:w="56451444"/><text x="1.7630%" y="1743.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (55,939,070 samples, 0.07%)</title><rect x="1.5137%" y="1717" width="0.0696%" height="15" fill="rgb(232,167,36)" fg:x="1216804782" fg:w="55939070"/><text x="1.7637%" y="1727.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (55,939,070 samples, 0.07%)</title><rect x="1.5137%" y="1701" width="0.0696%" height="15" fill="rgb(244,19,51)" fg:x="1216804782" fg:w="55939070"/><text x="1.7637%" y="1711.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (60,559,541 samples, 0.08%)</title><rect x="1.5125%" y="1813" width="0.0753%" height="15" fill="rgb(224,6,22)" fg:x="1215856244" fg:w="60559541"/><text x="1.7625%" y="1823.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (60,559,541 samples, 0.08%)</title><rect x="1.5125%" y="1797" width="0.0753%" height="15" fill="rgb(224,145,5)" fg:x="1215856244" fg:w="60559541"/><text x="1.7625%" y="1807.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (60,123,377 samples, 0.07%)</title><rect x="1.5130%" y="1781" width="0.0748%" height="15" fill="rgb(234,130,49)" fg:x="1216292408" fg:w="60123377"/><text x="1.7630%" y="1791.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (60,123,377 samples, 0.07%)</title><rect x="1.5130%" y="1765" width="0.0748%" height="15" fill="rgb(254,6,2)" fg:x="1216292408" fg:w="60123377"/><text x="1.7630%" y="1775.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,270,048 samples, 0.08%)</title><rect x="1.5085%" y="1909" width="0.0812%" height="15" fill="rgb(208,96,46)" fg:x="1212609271" fg:w="65270048"/><text x="1.7585%" y="1919.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (64,480,047 samples, 0.08%)</title><rect x="1.5094%" y="1893" width="0.0802%" height="15" fill="rgb(239,3,39)" fg:x="1213399272" fg:w="64480047"/><text x="1.7594%" y="1903.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (64,480,047 samples, 0.08%)</title><rect x="1.5094%" y="1877" width="0.0802%" height="15" fill="rgb(233,210,1)" fg:x="1213399272" fg:w="64480047"/><text x="1.7594%" y="1887.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,604,339 samples, 0.08%)</title><rect x="1.5105%" y="1861" width="0.0791%" height="15" fill="rgb(244,137,37)" fg:x="1214274980" fg:w="63604339"/><text x="1.7605%" y="1871.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (62,467,885 samples, 0.08%)</title><rect x="1.5119%" y="1845" width="0.0777%" height="15" fill="rgb(240,136,2)" fg:x="1215411434" fg:w="62467885"/><text x="1.7619%" y="1855.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (62,023,075 samples, 0.08%)</title><rect x="1.5125%" y="1829" width="0.0772%" height="15" fill="rgb(239,18,37)" fg:x="1215856244" fg:w="62023075"/><text x="1.7625%" y="1839.50"></text></g><g><title>bool std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;, (std::__detail::_RegexExecutorPolicy)0, true&gt; (67,967,977 samples, 0.08%)</title><rect x="1.5062%" y="1925" width="0.0846%" height="15" fill="rgb(218,185,22)" fg:x="1210759571" fg:w="67967977"/><text x="1.7562%" y="1935.50"></text></g><g><title>Watcher::isIgnored (69,102,748 samples, 0.09%)</title><rect x="1.5059%" y="1957" width="0.0860%" height="15" fill="rgb(225,218,4)" fg:x="1210527851" fg:w="69102748"/><text x="1.7559%" y="1967.50"></text></g><g><title>Glob::isIgnored (68,871,028 samples, 0.09%)</title><rect x="1.5062%" y="1941" width="0.0857%" height="15" fill="rgb(230,182,32)" fg:x="1210759571" fg:w="68871028"/><text x="1.7562%" y="1951.50"></text></g><g><title>InotifyBackend::handleSubscription (75,775,932 samples, 0.09%)</title><rect x="1.5001%" y="1973" width="0.0943%" height="15" fill="rgb(242,56,43)" fg:x="1205864417" fg:w="75775932"/><text x="1.7501%" y="1983.50"></text></g><g><title>filename_lookup (11,384,012 samples, 0.01%)</title><rect x="1.6085%" y="1877" width="0.0142%" height="15" fill="rgb(233,99,24)" fg:x="1293037197" fg:w="11384012"/><text x="1.8585%" y="1887.50"></text></g><g><title>path_lookupat (11,384,012 samples, 0.01%)</title><rect x="1.6085%" y="1861" width="0.0142%" height="15" fill="rgb(234,209,42)" fg:x="1293037197" fg:w="11384012"/><text x="1.8585%" y="1871.50"></text></g><g><title>__x64_sys_newstat (25,137,102 samples, 0.03%)</title><rect x="1.5972%" y="1925" width="0.0313%" height="15" fill="rgb(227,7,12)" fg:x="1283975342" fg:w="25137102"/><text x="1.8472%" y="1935.50"></text></g><g><title>__se_sys_newstat (25,137,102 samples, 0.03%)</title><rect x="1.5972%" y="1909" width="0.0313%" height="15" fill="rgb(245,203,43)" fg:x="1283975342" fg:w="25137102"/><text x="1.8472%" y="1919.50"></text></g><g><title>vfs_statx (16,620,954 samples, 0.02%)</title><rect x="1.6078%" y="1893" width="0.0207%" height="15" fill="rgb(238,205,33)" fg:x="1292491490" fg:w="16620954"/><text x="1.8578%" y="1903.50"></text></g><g><title>do_syscall_64 (30,386,027 samples, 0.04%)</title><rect x="1.5966%" y="1941" width="0.0378%" height="15" fill="rgb(231,56,7)" fg:x="1283455561" fg:w="30386027"/><text x="1.8466%" y="1951.50"></text></g><g><title>entry_SYSCALL_64 (32,382,870 samples, 0.04%)</title><rect x="1.5952%" y="1957" width="0.0403%" height="15" fill="rgb(244,186,29)" fg:x="1282375802" fg:w="32382870"/><text x="1.8452%" y="1967.50"></text></g><g><title>__xstat64 (33,787,369 samples, 0.04%)</title><rect x="1.5952%" y="1973" width="0.0420%" height="15" fill="rgb(234,111,31)" fg:x="1282375802" fg:w="33787369"/><text x="1.8452%" y="1983.50"></text></g><g><title>InotifyBackend::handleEvent (114,100,827 samples, 0.14%)</title><rect x="1.4987%" y="1989" width="0.1419%" height="15" fill="rgb(241,149,10)" fg:x="1204776672" fg:w="114100827"/><text x="1.7487%" y="1999.50"></text></g><g><title>InotifyBackend::handleEvents (118,359,158 samples, 0.15%)</title><rect x="1.4987%" y="2005" width="0.1472%" height="15" fill="rgb(249,206,44)" fg:x="1204776672" fg:w="118359158"/><text x="1.7487%" y="2015.50"></text></g><g><title>inotify_read (8,254,075 samples, 0.01%)</title><rect x="1.6531%" y="1909" width="0.0103%" height="15" fill="rgb(251,153,30)" fg:x="1328892793" fg:w="8254075"/><text x="1.9031%" y="1919.50"></text></g><g><title>__x64_sys_read (15,046,597 samples, 0.02%)</title><rect x="1.6485%" y="1957" width="0.0187%" height="15" fill="rgb(239,152,38)" fg:x="1325189750" fg:w="15046597"/><text x="1.8985%" y="1967.50"></text></g><g><title>ksys_read (14,500,229 samples, 0.02%)</title><rect x="1.6492%" y="1941" width="0.0180%" height="15" fill="rgb(249,139,47)" fg:x="1325736118" fg:w="14500229"/><text x="1.8992%" y="1951.50"></text></g><g><title>vfs_read (12,528,237 samples, 0.02%)</title><rect x="1.6516%" y="1925" width="0.0156%" height="15" fill="rgb(244,64,35)" fg:x="1327708110" fg:w="12528237"/><text x="1.9016%" y="1935.50"></text></g><g><title>do_syscall_64 (18,380,693 samples, 0.02%)</title><rect x="1.6485%" y="1973" width="0.0229%" height="15" fill="rgb(216,46,15)" fg:x="1325189750" fg:w="18380693"/><text x="1.8985%" y="1983.50"></text></g><g><title>entry_SYSCALL_64 (19,813,170 samples, 0.02%)</title><rect x="1.6474%" y="1989" width="0.0246%" height="15" fill="rgb(250,74,19)" fg:x="1324310936" fg:w="19813170"/><text x="1.8974%" y="1999.50"></text></g><g><title>InotifyBackend::start (142,732,864 samples, 0.18%)</title><rect x="1.4987%" y="2021" width="0.1776%" height="15" fill="rgb(249,42,33)" fg:x="1204776672" fg:w="142732864"/><text x="1.7487%" y="2031.50"></text></g><g><title>read (23,637,713 samples, 0.03%)</title><rect x="1.6469%" y="2005" width="0.0294%" height="15" fill="rgb(242,149,17)" fg:x="1323871823" fg:w="23637713"/><text x="1.8969%" y="2015.50"></text></g><g><title>__sched_text_start (16,602,057 samples, 0.02%)</title><rect x="1.6837%" y="1877" width="0.0207%" height="15" fill="rgb(244,29,21)" fg:x="1353451177" fg:w="16602057"/><text x="1.9337%" y="1887.50"></text></g><g><title>do_sys_poll (20,999,322 samples, 0.03%)</title><rect x="1.6785%" y="1941" width="0.0261%" height="15" fill="rgb(220,130,37)" fg:x="1349327509" fg:w="20999322"/><text x="1.9285%" y="1951.50"></text></g><g><title>schedule_hrtimeout_range (17,988,578 samples, 0.02%)</title><rect x="1.6823%" y="1925" width="0.0224%" height="15" fill="rgb(211,67,2)" fg:x="1352338253" fg:w="17988578"/><text x="1.9323%" y="1935.50"></text></g><g><title>schedule_hrtimeout_range_clock (17,988,578 samples, 0.02%)</title><rect x="1.6823%" y="1909" width="0.0224%" height="15" fill="rgb(235,68,52)" fg:x="1352338253" fg:w="17988578"/><text x="1.9323%" y="1919.50"></text></g><g><title>schedule (16,875,654 samples, 0.02%)</title><rect x="1.6837%" y="1893" width="0.0210%" height="15" fill="rgb(246,142,3)" fg:x="1353451177" fg:w="16875654"/><text x="1.9337%" y="1903.50"></text></g><g><title>__se_sys_poll (21,397,188 samples, 0.03%)</title><rect x="1.6785%" y="1957" width="0.0266%" height="15" fill="rgb(241,25,7)" fg:x="1349327509" fg:w="21397188"/><text x="1.9285%" y="1967.50"></text></g><g><title>__x64_sys_poll (21,783,840 samples, 0.03%)</title><rect x="1.6785%" y="1973" width="0.0271%" height="15" fill="rgb(242,119,39)" fg:x="1349327509" fg:w="21783840"/><text x="1.9285%" y="1983.50"></text></g><g><title>entry_SYSCALL_64 (22,931,077 samples, 0.03%)</title><rect x="1.6778%" y="2005" width="0.0285%" height="15" fill="rgb(241,98,45)" fg:x="1348752483" fg:w="22931077"/><text x="1.9278%" y="2015.50"></text></g><g><title>do_syscall_64 (22,931,077 samples, 0.03%)</title><rect x="1.6778%" y="1989" width="0.0285%" height="15" fill="rgb(254,28,30)" fg:x="1348752483" fg:w="22931077"/><text x="1.9278%" y="1999.50"></text></g><g><title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Backend::run()::{lambda()#1}&gt; &gt; &gt;::_M_run (167,750,414 samples, 0.21%)</title><rect x="1.4987%" y="2037" width="0.2087%" height="15" fill="rgb(241,142,54)" fg:x="1204776672" fg:w="167750414"/><text x="1.7487%" y="2047.50"></text></g><g><title>__poll (24,965,886 samples, 0.03%)</title><rect x="1.6763%" y="2021" width="0.0311%" height="15" fill="rgb(222,85,15)" fg:x="1347561200" fg:w="24965886"/><text x="1.9263%" y="2031.50"></text></g><g><title>[libstdc++.so.6.0.30] (169,575,715 samples, 0.21%)</title><rect x="1.4968%" y="2053" width="0.2109%" height="15" fill="rgb(210,85,47)" fg:x="1203261082" fg:w="169575715"/><text x="1.7468%" y="2063.50"></text></g><g><title>[unknown] (11,006,313 samples, 0.01%)</title><rect x="1.7136%" y="2037" width="0.0137%" height="15" fill="rgb(224,206,25)" fg:x="1377495966" fg:w="11006313"/><text x="1.9636%" y="2047.50"></text></g><g><title>__se_sys_futex (11,064,296 samples, 0.01%)</title><rect x="1.7301%" y="1973" width="0.0138%" height="15" fill="rgb(243,201,19)" fg:x="1390756313" fg:w="11064296"/><text x="1.9801%" y="1983.50"></text></g><g><title>do_futex (11,064,296 samples, 0.01%)</title><rect x="1.7301%" y="1957" width="0.0138%" height="15" fill="rgb(236,59,4)" fg:x="1390756313" fg:w="11064296"/><text x="1.9801%" y="1967.50"></text></g><g><title>futex_wait (11,064,296 samples, 0.01%)</title><rect x="1.7301%" y="1941" width="0.0138%" height="15" fill="rgb(254,179,45)" fg:x="1390756313" fg:w="11064296"/><text x="1.9801%" y="1951.50"></text></g><g><title>__x64_sys_futex (11,818,017 samples, 0.01%)</title><rect x="1.7301%" y="1989" width="0.0147%" height="15" fill="rgb(226,14,10)" fg:x="1390756313" fg:w="11818017"/><text x="1.9801%" y="1999.50"></text></g><g><title>entry_SYSCALL_64 (15,543,926 samples, 0.02%)</title><rect x="1.7301%" y="2021" width="0.0193%" height="15" fill="rgb(244,27,41)" fg:x="1390756313" fg:w="15543926"/><text x="1.9801%" y="2031.50"></text></g><g><title>do_syscall_64 (15,543,926 samples, 0.02%)</title><rect x="1.7301%" y="2005" width="0.0193%" height="15" fill="rgb(235,35,32)" fg:x="1390756313" fg:w="15543926"/><text x="1.9801%" y="2015.50"></text></g><g><title>__GI___futex_abstimed_wait_cancelable64 (19,223,600 samples, 0.02%)</title><rect x="1.7290%" y="2037" width="0.0239%" height="15" fill="rgb(218,68,31)" fg:x="1389931913" fg:w="19223600"/><text x="1.9790%" y="2047.50"></text></g><g><title>path_lookupat (9,412,281 samples, 0.01%)</title><rect x="1.7686%" y="1925" width="0.0117%" height="15" fill="rgb(207,120,37)" fg:x="1421721810" fg:w="9412281"/><text x="2.0186%" y="1935.50"></text></g><g><title>filename_lookup (10,618,849 samples, 0.01%)</title><rect x="1.7677%" y="1941" width="0.0132%" height="15" fill="rgb(227,98,0)" fg:x="1421001772" fg:w="10618849"/><text x="2.0177%" y="1951.50"></text></g><g><title>__x64_sys_readlink (16,660,042 samples, 0.02%)</title><rect x="1.7660%" y="1989" width="0.0207%" height="15" fill="rgb(207,7,3)" fg:x="1419647814" fg:w="16660042"/><text x="2.0160%" y="1999.50"></text></g><g><title>do_readlinkat (16,660,042 samples, 0.02%)</title><rect x="1.7660%" y="1973" width="0.0207%" height="15" fill="rgb(206,98,19)" fg:x="1419647814" fg:w="16660042"/><text x="2.0160%" y="1983.50"></text></g><g><title>user_path_at_empty (15,306,084 samples, 0.02%)</title><rect x="1.7677%" y="1957" width="0.0190%" height="15" fill="rgb(217,5,26)" fg:x="1421001772" fg:w="15306084"/><text x="2.0177%" y="1967.50"></text></g><g><title>entry_SYSCALL_64 (22,700,768 samples, 0.03%)</title><rect x="1.7636%" y="2021" width="0.0282%" height="15" fill="rgb(235,190,38)" fg:x="1417736775" fg:w="22700768"/><text x="2.0136%" y="2031.50"></text></g><g><title>do_syscall_64 (21,475,608 samples, 0.03%)</title><rect x="1.7652%" y="2005" width="0.0267%" height="15" fill="rgb(247,86,24)" fg:x="1418961935" fg:w="21475608"/><text x="2.0152%" y="2015.50"></text></g><g><title>__GI___readlink (28,806,821 samples, 0.04%)</title><rect x="1.7623%" y="2037" width="0.0358%" height="15" fill="rgb(205,101,16)" fg:x="1416662106" fg:w="28806821"/><text x="2.0123%" y="2047.50"></text></g><g><title>_int_free (30,061,315 samples, 0.04%)</title><rect x="1.8036%" y="2037" width="0.0374%" height="15" fill="rgb(246,168,33)" fg:x="1449902886" fg:w="30061315"/><text x="2.0536%" y="2047.50"></text></g><g><title>[unknown] (113,894,029 samples, 0.14%)</title><rect x="1.7078%" y="2053" width="0.1417%" height="15" fill="rgb(231,114,1)" fg:x="1372836797" fg:w="113894029"/><text x="1.9578%" y="2063.50"></text></g><g><title>copy_present_pte (87,844,987 samples, 0.11%)</title><rect x="1.8762%" y="1877" width="0.1093%" height="15" fill="rgb(207,184,53)" fg:x="1508197847" fg:w="87844987"/><text x="2.1262%" y="1887.50"></text></g><g><title>copy_page_range (104,146,025 samples, 0.13%)</title><rect x="1.8569%" y="1925" width="0.1296%" height="15" fill="rgb(224,95,51)" fg:x="1492692119" fg:w="104146025"/><text x="2.1069%" y="1935.50"></text></g><g><title>copy_p4d_range (104,146,025 samples, 0.13%)</title><rect x="1.8569%" y="1909" width="0.1296%" height="15" fill="rgb(212,188,45)" fg:x="1492692119" fg:w="104146025"/><text x="2.1069%" y="1919.50"></text></g><g><title>copy_pte_range (104,146,025 samples, 0.13%)</title><rect x="1.8569%" y="1893" width="0.1296%" height="15" fill="rgb(223,154,38)" fg:x="1492692119" fg:w="104146025"/><text x="2.1069%" y="1903.50"></text></g><g><title>_Fork (119,272,237 samples, 0.15%)</title><rect x="1.8495%" y="2053" width="0.1484%" height="15" fill="rgb(251,22,52)" fg:x="1486730826" fg:w="119272237"/><text x="2.0995%" y="2063.50"></text></g><g><title>entry_SYSCALL_64 (119,272,237 samples, 0.15%)</title><rect x="1.8495%" y="2037" width="0.1484%" height="15" fill="rgb(229,209,22)" fg:x="1486730826" fg:w="119272237"/><text x="2.0995%" y="2047.50"></text></g><g><title>do_syscall_64 (119,272,237 samples, 0.15%)</title><rect x="1.8495%" y="2021" width="0.1484%" height="15" fill="rgb(234,138,34)" fg:x="1486730826" fg:w="119272237"/><text x="2.0995%" y="2031.50"></text></g><g><title>__x64_sys_clone (119,272,237 samples, 0.15%)</title><rect x="1.8495%" y="2005" width="0.1484%" height="15" fill="rgb(212,95,11)" fg:x="1486730826" fg:w="119272237"/><text x="2.0995%" y="2015.50"></text></g><g><title>kernel_clone (119,272,237 samples, 0.15%)</title><rect x="1.8495%" y="1989" width="0.1484%" height="15" fill="rgb(240,179,47)" fg:x="1486730826" fg:w="119272237"/><text x="2.0995%" y="1999.50"></text></g><g><title>copy_process (119,272,237 samples, 0.15%)</title><rect x="1.8495%" y="1973" width="0.1484%" height="15" fill="rgb(240,163,11)" fg:x="1486730826" fg:w="119272237"/><text x="2.0995%" y="1983.50"></text></g><g><title>copy_mm (118,666,021 samples, 0.15%)</title><rect x="1.8502%" y="1957" width="0.1476%" height="15" fill="rgb(236,37,12)" fg:x="1487337042" fg:w="118666021"/><text x="2.1002%" y="1967.50"></text></g><g><title>dup_mmap (118,666,021 samples, 0.15%)</title><rect x="1.8502%" y="1941" width="0.1476%" height="15" fill="rgb(232,164,16)" fg:x="1487337042" fg:w="118666021"/><text x="2.1002%" y="1951.50"></text></g><g><title>page_remove_rmap (20,464,224 samples, 0.03%)</title><rect x="2.1138%" y="1781" width="0.0255%" height="15" fill="rgb(244,205,15)" fg:x="1699251487" fg:w="20464224"/><text x="2.3638%" y="1791.50"></text></g><g><title>tlb_flush_mmu (12,089,005 samples, 0.02%)</title><rect x="2.1393%" y="1781" width="0.0150%" height="15" fill="rgb(223,117,47)" fg:x="1719715711" fg:w="12089005"/><text x="2.3893%" y="1791.50"></text></g><g><title>free_pages_and_swap_cache (12,089,005 samples, 0.02%)</title><rect x="2.1393%" y="1765" width="0.0150%" height="15" fill="rgb(244,107,35)" fg:x="1719715711" fg:w="12089005"/><text x="2.3893%" y="1775.50"></text></g><g><title>release_pages (8,235,169 samples, 0.01%)</title><rect x="2.1441%" y="1749" width="0.0102%" height="15" fill="rgb(205,140,8)" fg:x="1723569547" fg:w="8235169"/><text x="2.3941%" y="1759.50"></text></g><g><title>__GI___execve (131,559,607 samples, 0.16%)</title><rect x="1.9982%" y="2053" width="0.1637%" height="15" fill="rgb(228,84,46)" fg:x="1606303110" fg:w="131559607"/><text x="2.2482%" y="2063.50"></text></g><g><title>entry_SYSCALL_64 (131,559,607 samples, 0.16%)</title><rect x="1.9982%" y="2037" width="0.1637%" height="15" fill="rgb(254,188,9)" fg:x="1606303110" fg:w="131559607"/><text x="2.2482%" y="2047.50"></text></g><g><title>do_syscall_64 (131,559,607 samples, 0.16%)</title><rect x="1.9982%" y="2021" width="0.1637%" height="15" fill="rgb(206,112,54)" fg:x="1606303110" fg:w="131559607"/><text x="2.2482%" y="2031.50"></text></g><g><title>__x64_sys_execve (131,559,607 samples, 0.16%)</title><rect x="1.9982%" y="2005" width="0.1637%" height="15" fill="rgb(216,84,49)" fg:x="1606303110" fg:w="131559607"/><text x="2.2482%" y="2015.50"></text></g><g><title>do_execveat_common (131,559,607 samples, 0.16%)</title><rect x="1.9982%" y="1989" width="0.1637%" height="15" fill="rgb(214,194,35)" fg:x="1606303110" fg:w="131559607"/><text x="2.2482%" y="1999.50"></text></g><g><title>bprm_execve (131,559,607 samples, 0.16%)</title><rect x="1.9982%" y="1973" width="0.1637%" height="15" fill="rgb(249,28,3)" fg:x="1606303110" fg:w="131559607"/><text x="2.2482%" y="1983.50"></text></g><g><title>load_elf_binary (131,559,607 samples, 0.16%)</title><rect x="1.9982%" y="1957" width="0.1637%" height="15" fill="rgb(222,56,52)" fg:x="1606303110" fg:w="131559607"/><text x="2.2482%" y="1967.50"></text></g><g><title>begin_new_exec (131,559,607 samples, 0.16%)</title><rect x="1.9982%" y="1941" width="0.1637%" height="15" fill="rgb(245,217,50)" fg:x="1606303110" fg:w="131559607"/><text x="2.2482%" y="1951.50"></text></g><g><title>exec_mmap (131,559,607 samples, 0.16%)</title><rect x="1.9982%" y="1925" width="0.1637%" height="15" fill="rgb(213,201,24)" fg:x="1606303110" fg:w="131559607"/><text x="2.2482%" y="1935.50"></text></g><g><title>mmput (131,559,607 samples, 0.16%)</title><rect x="1.9982%" y="1909" width="0.1637%" height="15" fill="rgb(248,116,28)" fg:x="1606303110" fg:w="131559607"/><text x="2.2482%" y="1919.50"></text></g><g><title>__mmput (131,559,607 samples, 0.16%)</title><rect x="1.9982%" y="1893" width="0.1637%" height="15" fill="rgb(219,72,43)" fg:x="1606303110" fg:w="131559607"/><text x="2.2482%" y="1903.50"></text></g><g><title>exit_mmap (130,762,870 samples, 0.16%)</title><rect x="1.9992%" y="1877" width="0.1627%" height="15" fill="rgb(209,138,14)" fg:x="1607099847" fg:w="130762870"/><text x="2.2492%" y="1887.50"></text></g><g><title>unmap_vmas (121,724,016 samples, 0.15%)</title><rect x="2.0104%" y="1861" width="0.1514%" height="15" fill="rgb(222,18,33)" fg:x="1616138701" fg:w="121724016"/><text x="2.2604%" y="1871.50"></text></g><g><title>unmap_single_vma (121,724,016 samples, 0.15%)</title><rect x="2.0104%" y="1845" width="0.1514%" height="15" fill="rgb(213,199,7)" fg:x="1616138701" fg:w="121724016"/><text x="2.2604%" y="1855.50"></text></g><g><title>unmap_page_range (121,724,016 samples, 0.15%)</title><rect x="2.0104%" y="1829" width="0.1514%" height="15" fill="rgb(250,110,10)" fg:x="1616138701" fg:w="121724016"/><text x="2.2604%" y="1839.50"></text></g><g><title>zap_p4d_range (121,002,254 samples, 0.15%)</title><rect x="2.0113%" y="1813" width="0.1505%" height="15" fill="rgb(248,123,6)" fg:x="1616860463" fg:w="121002254"/><text x="2.2613%" y="1823.50"></text></g><g><title>zap_pte_range (119,472,382 samples, 0.15%)</title><rect x="2.0132%" y="1797" width="0.1486%" height="15" fill="rgb(206,91,31)" fg:x="1618390335" fg:w="119472382"/><text x="2.2632%" y="1807.50"></text></g><g><title>schedule_hrtimeout_range (15,660,529 samples, 0.02%)</title><rect x="2.1884%" y="1861" width="0.0195%" height="15" fill="rgb(211,154,13)" fg:x="1759154225" fg:w="15660529"/><text x="2.4384%" y="1871.50"></text></g><g><title>schedule_hrtimeout_range_clock (14,322,895 samples, 0.02%)</title><rect x="2.1900%" y="1845" width="0.0178%" height="15" fill="rgb(225,148,7)" fg:x="1760491859" fg:w="14322895"/><text x="2.4400%" y="1855.50"></text></g><g><title>schedule (13,209,900 samples, 0.02%)</title><rect x="2.1914%" y="1829" width="0.0164%" height="15" fill="rgb(220,160,43)" fg:x="1761604854" fg:w="13209900"/><text x="2.4414%" y="1839.50"></text></g><g><title>__sched_text_start (13,209,900 samples, 0.02%)</title><rect x="2.1914%" y="1813" width="0.0164%" height="15" fill="rgb(213,52,39)" fg:x="1761604854" fg:w="13209900"/><text x="2.4414%" y="1823.50"></text></g><g><title>do_epoll_wait (27,636,848 samples, 0.03%)</title><rect x="2.1751%" y="1877" width="0.0344%" height="15" fill="rgb(243,137,7)" fg:x="1748518853" fg:w="27636848"/><text x="2.4251%" y="1887.50"></text></g><g><title>__se_sys_epoll_pwait (29,674,419 samples, 0.04%)</title><rect x="2.1740%" y="1893" width="0.0369%" height="15" fill="rgb(230,79,13)" fg:x="1747613930" fg:w="29674419"/><text x="2.4240%" y="1903.50"></text></g><g><title>__x64_sys_epoll_pwait (30,238,318 samples, 0.04%)</title><rect x="2.1740%" y="1909" width="0.0376%" height="15" fill="rgb(247,105,23)" fg:x="1747613930" fg:w="30238318"/><text x="2.4240%" y="1919.50"></text></g><g><title>entry_SYSCALL_64 (35,317,846 samples, 0.04%)</title><rect x="2.1739%" y="1941" width="0.0439%" height="15" fill="rgb(223,179,41)" fg:x="1747516982" fg:w="35317846"/><text x="2.4239%" y="1951.50"></text></g><g><title>do_syscall_64 (35,220,898 samples, 0.04%)</title><rect x="2.1740%" y="1925" width="0.0438%" height="15" fill="rgb(218,9,34)" fg:x="1747613930" fg:w="35220898"/><text x="2.4240%" y="1935.50"></text></g><g><title>epoll_pwait (41,441,918 samples, 0.05%)</title><rect x="2.1726%" y="1957" width="0.0516%" height="15" fill="rgb(222,106,8)" fg:x="1746521677" fg:w="41441918"/><text x="2.4226%" y="1967.50"></text></g><g><title>entry_SYSCALL_64 (8,298,067 samples, 0.01%)</title><rect x="2.2290%" y="1925" width="0.0103%" height="15" fill="rgb(211,220,0)" fg:x="1791810766" fg:w="8298067"/><text x="2.4790%" y="1935.50"></text></g><g><title>read (13,103,870 samples, 0.02%)</title><rect x="2.2264%" y="1941" width="0.0163%" height="15" fill="rgb(229,52,16)" fg:x="1789749551" fg:w="13103870"/><text x="2.4764%" y="1951.50"></text></g><g><title>node::PerIsolatePlatformData::FlushForegroundTasksInternal (15,597,723 samples, 0.02%)</title><rect x="2.2450%" y="1925" width="0.0194%" height="15" fill="rgb(212,155,18)" fg:x="1804731867" fg:w="15597723"/><text x="2.4950%" y="1935.50"></text></g><g><title>node::PerIsolatePlatformData::RunForegroundTask (15,597,723 samples, 0.02%)</title><rect x="2.2450%" y="1909" width="0.0194%" height="15" fill="rgb(242,21,14)" fg:x="1804731867" fg:w="15597723"/><text x="2.4950%" y="1919.50"></text></g><g><title>v8::internal::MinorGCJob::Task::RunInternal (8,888,469 samples, 0.01%)</title><rect x="2.2534%" y="1893" width="0.0111%" height="15" fill="rgb(222,19,48)" fg:x="1811441121" fg:w="8888469"/><text x="2.5034%" y="1903.50"></text></g><g><title>v8::internal::Heap::CollectGarbage (8,888,469 samples, 0.01%)</title><rect x="2.2534%" y="1877" width="0.0111%" height="15" fill="rgb(232,45,27)" fg:x="1811441121" fg:w="8888469"/><text x="2.5034%" y="1887.50"></text></g><g><title>v8::internal::Heap::PerformGarbageCollection (8,888,469 samples, 0.01%)</title><rect x="2.2534%" y="1861" width="0.0111%" height="15" fill="rgb(249,103,42)" fg:x="1811441121" fg:w="8888469"/><text x="2.5034%" y="1871.50"></text></g><g><title>[perf-2034.map] (15,102,451 samples, 0.02%)</title><rect x="2.3032%" y="1525" width="0.0188%" height="15" fill="rgb(246,81,33)" fg:x="1851460509" fg:w="15102451"/><text x="2.5532%" y="1535.50"></text></g><g><title>Builtins_ArrayMap (36,881,882 samples, 0.05%)</title><rect x="2.2770%" y="1669" width="0.0459%" height="15" fill="rgb(252,33,42)" fg:x="1830394767" fg:w="36881882"/><text x="2.5270%" y="1679.50"></text></g><g><title>[perf-2034.map] (36,881,882 samples, 0.05%)</title><rect x="2.2770%" y="1653" width="0.0459%" height="15" fill="rgb(209,212,41)" fg:x="1830394767" fg:w="36881882"/><text x="2.5270%" y="1663.50"></text></g><g><title>[perf-2034.map] (36,881,882 samples, 0.05%)</title><rect x="2.2770%" y="1637" width="0.0459%" height="15" fill="rgb(207,154,6)" fg:x="1830394767" fg:w="36881882"/><text x="2.5270%" y="1647.50"></text></g><g><title>[perf-2034.map] (36,881,882 samples, 0.05%)</title><rect x="2.2770%" y="1621" width="0.0459%" height="15" fill="rgb(223,64,47)" fg:x="1830394767" fg:w="36881882"/><text x="2.5270%" y="1631.50"></text></g><g><title>[perf-2034.map] (36,881,882 samples, 0.05%)</title><rect x="2.2770%" y="1605" width="0.0459%" height="15" fill="rgb(211,161,38)" fg:x="1830394767" fg:w="36881882"/><text x="2.5270%" y="1615.50"></text></g><g><title>[perf-2034.map] (36,158,246 samples, 0.04%)</title><rect x="2.2779%" y="1589" width="0.0450%" height="15" fill="rgb(219,138,40)" fg:x="1831118403" fg:w="36158246"/><text x="2.5279%" y="1599.50"></text></g><g><title>[perf-2034.map] (35,423,857 samples, 0.04%)</title><rect x="2.2788%" y="1573" width="0.0441%" height="15" fill="rgb(241,228,46)" fg:x="1831852792" fg:w="35423857"/><text x="2.5288%" y="1583.50"></text></g><g><title>[perf-2034.map] (31,776,049 samples, 0.04%)</title><rect x="2.2833%" y="1557" width="0.0395%" height="15" fill="rgb(223,209,38)" fg:x="1835500600" fg:w="31776049"/><text x="2.5333%" y="1567.50"></text></g><g><title>[perf-2034.map] (28,180,446 samples, 0.04%)</title><rect x="2.2878%" y="1541" width="0.0351%" height="15" fill="rgb(236,164,45)" fg:x="1839096203" fg:w="28180446"/><text x="2.5378%" y="1551.50"></text></g><g><title>[perf-2034.map] (45,068,191 samples, 0.06%)</title><rect x="2.2762%" y="1685" width="0.0561%" height="15" fill="rgb(231,15,5)" fg:x="1829738888" fg:w="45068191"/><text x="2.5262%" y="1695.50"></text></g><g><title>Builtins_AsyncFunctionAwaitResolveClosure (46,262,956 samples, 0.06%)</title><rect x="2.2753%" y="1701" width="0.0576%" height="15" fill="rgb(252,35,15)" fg:x="1829087455" fg:w="46262956"/><text x="2.5253%" y="1711.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (10,553,024 samples, 0.01%)</title><rect x="2.3339%" y="1461" width="0.0131%" height="15" fill="rgb(248,181,18)" fg:x="1876130720" fg:w="10553024"/><text x="2.5839%" y="1471.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (10,553,024 samples, 0.01%)</title><rect x="2.3339%" y="1445" width="0.0131%" height="15" fill="rgb(233,39,42)" fg:x="1876130720" fg:w="10553024"/><text x="2.5839%" y="1455.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_BuiltinExit (16,332,707 samples, 0.02%)</title><rect x="2.3329%" y="1621" width="0.0203%" height="15" fill="rgb(238,110,33)" fg:x="1875350411" fg:w="16332707"/><text x="2.5829%" y="1631.50"></text></g><g><title>v8::internal::Builtin_JsonStringify (16,332,707 samples, 0.02%)</title><rect x="2.3329%" y="1605" width="0.0203%" height="15" fill="rgb(233,195,10)" fg:x="1875350411" fg:w="16332707"/><text x="2.5829%" y="1615.50"></text></g><g><title>v8::internal::JsonStringify (16,332,707 samples, 0.02%)</title><rect x="2.3329%" y="1589" width="0.0203%" height="15" fill="rgb(254,105,3)" fg:x="1875350411" fg:w="16332707"/><text x="2.5829%" y="1599.50"></text></g><g><title>v8::internal::JsonStringifier::Stringify (16,332,707 samples, 0.02%)</title><rect x="2.3329%" y="1573" width="0.0203%" height="15" fill="rgb(221,225,9)" fg:x="1875350411" fg:w="16332707"/><text x="2.5829%" y="1583.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;false&gt; (16,332,707 samples, 0.02%)</title><rect x="2.3329%" y="1557" width="0.0203%" height="15" fill="rgb(224,227,45)" fg:x="1875350411" fg:w="16332707"/><text x="2.5829%" y="1567.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeJSReceiverSlow (16,332,707 samples, 0.02%)</title><rect x="2.3329%" y="1541" width="0.0203%" height="15" fill="rgb(229,198,43)" fg:x="1875350411" fg:w="16332707"/><text x="2.5829%" y="1551.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (16,332,707 samples, 0.02%)</title><rect x="2.3329%" y="1525" width="0.0203%" height="15" fill="rgb(206,209,35)" fg:x="1875350411" fg:w="16332707"/><text x="2.5829%" y="1535.50"></text></g><g><title>v8::internal::JsonStringifier::SerializeJSReceiverSlow (15,552,398 samples, 0.02%)</title><rect x="2.3339%" y="1509" width="0.0193%" height="15" fill="rgb(245,195,53)" fg:x="1876130720" fg:w="15552398"/><text x="2.5839%" y="1519.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (15,552,398 samples, 0.02%)</title><rect x="2.3339%" y="1493" width="0.0193%" height="15" fill="rgb(240,92,26)" fg:x="1876130720" fg:w="15552398"/><text x="2.5839%" y="1503.50"></text></g><g><title>v8::internal::JsonStringifier::Result v8::internal::JsonStringifier::Serialize_&lt;true&gt; (15,552,398 samples, 0.02%)</title><rect x="2.3339%" y="1477" width="0.0193%" height="15" fill="rgb(207,40,23)" fg:x="1876130720" fg:w="15552398"/><text x="2.5839%" y="1487.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_BuiltinExit (9,973,572 samples, 0.01%)</title><rect x="2.3532%" y="1605" width="0.0124%" height="15" fill="rgb(223,111,35)" fg:x="1891683118" fg:w="9973572"/><text x="2.6032%" y="1615.50"></text></g><g><title>v8::internal::Builtin_HandleApiCall (9,973,572 samples, 0.01%)</title><rect x="2.3532%" y="1589" width="0.0124%" height="15" fill="rgb(229,147,28)" fg:x="1891683118" fg:w="9973572"/><text x="2.6032%" y="1599.50"></text></g><g><title>v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt; (9,973,572 samples, 0.01%)</title><rect x="2.3532%" y="1573" width="0.0124%" height="15" fill="rgb(211,29,28)" fg:x="1891683118" fg:w="9973572"/><text x="2.6032%" y="1583.50"></text></g><g><title>node::Buffer::(anonymous namespace)::SlowByteLengthUtf8 (9,973,572 samples, 0.01%)</title><rect x="2.3532%" y="1557" width="0.0124%" height="15" fill="rgb(228,72,33)" fg:x="1891683118" fg:w="9973572"/><text x="2.6032%" y="1567.50"></text></g><g><title>v8::String::Utf8Length (9,973,572 samples, 0.01%)</title><rect x="2.3532%" y="1541" width="0.0124%" height="15" fill="rgb(205,214,31)" fg:x="1891683118" fg:w="9973572"/><text x="2.6032%" y="1551.50"></text></g><g><title>node::fs::AfterScanDir (77,034,612 samples, 0.10%)</title><rect x="2.2745%" y="1893" width="0.0958%" height="15" fill="rgb(224,111,15)" fg:x="1828419881" fg:w="77034612"/><text x="2.5245%" y="1903.50"></text></g><g><title>node::fs::FSReqPromise&lt;node::AliasedBufferBase&lt;double, v8::Float64Array&gt; &gt;::Resolve (76,367,038 samples, 0.09%)</title><rect x="2.2753%" y="1877" width="0.0950%" height="15" fill="rgb(253,21,26)" fg:x="1829087455" fg:w="76367038"/><text x="2.5253%" y="1887.50"></text></g><g><title>node::InternalCallbackScope::~InternalCallbackScope (76,367,038 samples, 0.09%)</title><rect x="2.2753%" y="1861" width="0.0950%" height="15" fill="rgb(245,139,43)" fg:x="1829087455" fg:w="76367038"/><text x="2.5253%" y="1871.50"></text></g><g><title>node::InternalCallbackScope::Close (76,367,038 samples, 0.09%)</title><rect x="2.2753%" y="1845" width="0.0950%" height="15" fill="rgb(252,170,7)" fg:x="1829087455" fg:w="76367038"/><text x="2.5253%" y="1855.50"></text></g><g><title>v8::internal::MicrotaskQueue::PerformCheckpoint (76,367,038 samples, 0.09%)</title><rect x="2.2753%" y="1829" width="0.0950%" height="15" fill="rgb(231,118,14)" fg:x="1829087455" fg:w="76367038"/><text x="2.5253%" y="1839.50"></text></g><g><title>v8::internal::MicrotaskQueue::RunMicrotasks (76,367,038 samples, 0.09%)</title><rect x="2.2753%" y="1813" width="0.0950%" height="15" fill="rgb(238,83,0)" fg:x="1829087455" fg:w="76367038"/><text x="2.5253%" y="1823.50"></text></g><g><title>v8::internal::Execution::TryRunMicrotasks (76,367,038 samples, 0.09%)</title><rect x="2.2753%" y="1797" width="0.0950%" height="15" fill="rgb(221,39,39)" fg:x="1829087455" fg:w="76367038"/><text x="2.5253%" y="1807.50"></text></g><g><title>v8::internal::(anonymous namespace)::InvokeWithTryCatch (76,367,038 samples, 0.09%)</title><rect x="2.2753%" y="1781" width="0.0950%" height="15" fill="rgb(222,119,46)" fg:x="1829087455" fg:w="76367038"/><text x="2.5253%" y="1791.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (76,367,038 samples, 0.09%)</title><rect x="2.2753%" y="1765" width="0.0950%" height="15" fill="rgb(222,165,49)" fg:x="1829087455" fg:w="76367038"/><text x="2.5253%" y="1775.50"></text></g><g><title>Builtins_JSRunMicrotasksEntry (76,367,038 samples, 0.09%)</title><rect x="2.2753%" y="1749" width="0.0950%" height="15" fill="rgb(219,113,52)" fg:x="1829087455" fg:w="76367038"/><text x="2.5253%" y="1759.50"></text></g><g><title>Builtins_RunMicrotasks (76,367,038 samples, 0.09%)</title><rect x="2.2753%" y="1733" width="0.0950%" height="15" fill="rgb(214,7,15)" fg:x="1829087455" fg:w="76367038"/><text x="2.5253%" y="1743.50"></text></g><g><title>Builtins_PromiseFulfillReactionJob (76,367,038 samples, 0.09%)</title><rect x="2.2753%" y="1717" width="0.0950%" height="15" fill="rgb(235,32,4)" fg:x="1829087455" fg:w="76367038"/><text x="2.5253%" y="1727.50"></text></g><g><title>[perf-2034.map] (30,104,082 samples, 0.04%)</title><rect x="2.3329%" y="1701" width="0.0374%" height="15" fill="rgb(238,90,54)" fg:x="1875350411" fg:w="30104082"/><text x="2.5829%" y="1711.50"></text></g><g><title>[perf-2034.map] (30,104,082 samples, 0.04%)</title><rect x="2.3329%" y="1685" width="0.0374%" height="15" fill="rgb(213,208,19)" fg:x="1875350411" fg:w="30104082"/><text x="2.5829%" y="1695.50"></text></g><g><title>[perf-2034.map] (30,104,082 samples, 0.04%)</title><rect x="2.3329%" y="1669" width="0.0374%" height="15" fill="rgb(233,156,4)" fg:x="1875350411" fg:w="30104082"/><text x="2.5829%" y="1679.50"></text></g><g><title>[perf-2034.map] (30,104,082 samples, 0.04%)</title><rect x="2.3329%" y="1653" width="0.0374%" height="15" fill="rgb(207,194,5)" fg:x="1875350411" fg:w="30104082"/><text x="2.5829%" y="1663.50"></text></g><g><title>[perf-2034.map] (30,104,082 samples, 0.04%)</title><rect x="2.3329%" y="1637" width="0.0374%" height="15" fill="rgb(206,111,30)" fg:x="1875350411" fg:w="30104082"/><text x="2.5829%" y="1647.50"></text></g><g><title>[perf-2034.map] (13,771,375 samples, 0.02%)</title><rect x="2.3532%" y="1621" width="0.0171%" height="15" fill="rgb(243,70,54)" fg:x="1891683118" fg:w="13771375"/><text x="2.6032%" y="1631.50"></text></g><g><title>[perf-2034.map] (8,651,577 samples, 0.01%)</title><rect x="2.3785%" y="1685" width="0.0108%" height="15" fill="rgb(242,28,8)" fg:x="1912027539" fg:w="8651577"/><text x="2.6285%" y="1695.50"></text></g><g><title>node::fs::ReadLink (11,486,127 samples, 0.01%)</title><rect x="2.3928%" y="1637" width="0.0143%" height="15" fill="rgb(219,106,18)" fg:x="1923490421" fg:w="11486127"/><text x="2.6428%" y="1647.50"></text></g><g><title>Builtins_CallApiCallback (12,904,381 samples, 0.02%)</title><rect x="2.3928%" y="1653" width="0.0161%" height="15" fill="rgb(244,222,10)" fg:x="1923490421" fg:w="12904381"/><text x="2.6428%" y="1663.50"></text></g><g><title>Builtins_JSRunMicrotasksEntry (26,807,667 samples, 0.03%)</title><rect x="2.3770%" y="1749" width="0.0333%" height="15" fill="rgb(236,179,52)" fg:x="1910780135" fg:w="26807667"/><text x="2.6270%" y="1759.50"></text></g><g><title>Builtins_RunMicrotasks (26,807,667 samples, 0.03%)</title><rect x="2.3770%" y="1733" width="0.0333%" height="15" fill="rgb(213,23,39)" fg:x="1910780135" fg:w="26807667"/><text x="2.6270%" y="1743.50"></text></g><g><title>Builtins_PromiseFulfillReactionJob (26,126,504 samples, 0.03%)</title><rect x="2.3778%" y="1717" width="0.0325%" height="15" fill="rgb(238,48,10)" fg:x="1911461298" fg:w="26126504"/><text x="2.6278%" y="1727.50"></text></g><g><title>Builtins_AsyncFunctionAwaitResolveClosure (26,126,504 samples, 0.03%)</title><rect x="2.3778%" y="1701" width="0.0325%" height="15" fill="rgb(251,196,23)" fg:x="1911461298" fg:w="26126504"/><text x="2.6278%" y="1711.50"></text></g><g><title>[perf-86917.map] (16,908,686 samples, 0.02%)</title><rect x="2.3893%" y="1685" width="0.0210%" height="15" fill="rgb(250,152,24)" fg:x="1920679116" fg:w="16908686"/><text x="2.6393%" y="1695.50"></text></g><g><title>[perf-86917.map] (15,516,031 samples, 0.02%)</title><rect x="2.3910%" y="1669" width="0.0193%" height="15" fill="rgb(209,150,17)" fg:x="1922071771" fg:w="15516031"/><text x="2.6410%" y="1679.50"></text></g><g><title>node::InternalCallbackScope::~InternalCallbackScope (28,302,592 samples, 0.04%)</title><rect x="2.3761%" y="1861" width="0.0352%" height="15" fill="rgb(234,202,34)" fg:x="1910045189" fg:w="28302592"/><text x="2.6261%" y="1871.50"></text></g><g><title>node::InternalCallbackScope::Close (28,302,592 samples, 0.04%)</title><rect x="2.3761%" y="1845" width="0.0352%" height="15" fill="rgb(253,148,53)" fg:x="1910045189" fg:w="28302592"/><text x="2.6261%" y="1855.50"></text></g><g><title>v8::internal::MicrotaskQueue::PerformCheckpoint (27,567,646 samples, 0.03%)</title><rect x="2.3770%" y="1829" width="0.0343%" height="15" fill="rgb(218,129,16)" fg:x="1910780135" fg:w="27567646"/><text x="2.6270%" y="1839.50"></text></g><g><title>v8::internal::MicrotaskQueue::RunMicrotasks (27,567,646 samples, 0.03%)</title><rect x="2.3770%" y="1813" width="0.0343%" height="15" fill="rgb(216,85,19)" fg:x="1910780135" fg:w="27567646"/><text x="2.6270%" y="1823.50"></text></g><g><title>v8::internal::Execution::TryRunMicrotasks (27,567,646 samples, 0.03%)</title><rect x="2.3770%" y="1797" width="0.0343%" height="15" fill="rgb(235,228,7)" fg:x="1910780135" fg:w="27567646"/><text x="2.6270%" y="1807.50"></text></g><g><title>v8::internal::(anonymous namespace)::InvokeWithTryCatch (27,567,646 samples, 0.03%)</title><rect x="2.3770%" y="1781" width="0.0343%" height="15" fill="rgb(245,175,0)" fg:x="1910780135" fg:w="27567646"/><text x="2.6270%" y="1791.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (27,567,646 samples, 0.03%)</title><rect x="2.3770%" y="1765" width="0.0343%" height="15" fill="rgb(208,168,36)" fg:x="1910780135" fg:w="27567646"/><text x="2.6270%" y="1775.50"></text></g><g><title>node::fs::FSReqPromise&lt;node::AliasedBufferBase&lt;double, v8::Float64Array&gt; &gt;::ResolveStat (30,538,676 samples, 0.04%)</title><rect x="2.3751%" y="1877" width="0.0380%" height="15" fill="rgb(246,171,24)" fg:x="1909283663" fg:w="30538676"/><text x="2.6251%" y="1887.50"></text></g><g><title>node::fs::AfterStat (35,056,506 samples, 0.04%)</title><rect x="2.3703%" y="1893" width="0.0436%" height="15" fill="rgb(215,142,24)" fg:x="1905454493" fg:w="35056506"/><text x="2.6203%" y="1903.50"></text></g><g><title>node::UVException (8,354,960 samples, 0.01%)</title><rect x="2.4140%" y="1861" width="0.0104%" height="15" fill="rgb(250,187,7)" fg:x="1940510999" fg:w="8354960"/><text x="2.6640%" y="1871.50"></text></g><g><title>node::fs::GetReqWrap (9,304,514 samples, 0.01%)</title><rect x="2.4425%" y="1605" width="0.0116%" height="15" fill="rgb(228,66,33)" fg:x="1963422055" fg:w="9304514"/><text x="2.6925%" y="1615.50"></text></g><g><title>node::fs::FSReqPromise&lt;node::AliasedBufferBase&lt;double, v8::Float64Array&gt; &gt;::New (9,304,514 samples, 0.01%)</title><rect x="2.4425%" y="1589" width="0.0116%" height="15" fill="rgb(234,215,21)" fg:x="1963422055" fg:w="9304514"/><text x="2.6925%" y="1599.50"></text></g><g><title>Builtins_AsyncFunctionAwaitRejectClosure (22,370,684 samples, 0.03%)</title><rect x="2.4288%" y="1685" width="0.0278%" height="15" fill="rgb(222,191,20)" fg:x="1952432108" fg:w="22370684"/><text x="2.6788%" y="1695.50"></text></g><g><title>[perf-86917.map] (22,370,684 samples, 0.03%)</title><rect x="2.4288%" y="1669" width="0.0278%" height="15" fill="rgb(245,79,54)" fg:x="1952432108" fg:w="22370684"/><text x="2.6788%" y="1679.50"></text></g><g><title>[perf-86917.map] (16,280,603 samples, 0.02%)</title><rect x="2.4364%" y="1653" width="0.0203%" height="15" fill="rgb(240,10,37)" fg:x="1958522189" fg:w="16280603"/><text x="2.6864%" y="1663.50"></text></g><g><title>Builtins_CallApiCallback (13,544,558 samples, 0.02%)</title><rect x="2.4398%" y="1637" width="0.0168%" height="15" fill="rgb(214,192,32)" fg:x="1961258234" fg:w="13544558"/><text x="2.6898%" y="1647.50"></text></g><g><title>node::fs::Stat (13,544,558 samples, 0.02%)</title><rect x="2.4398%" y="1621" width="0.0168%" height="15" fill="rgb(209,36,54)" fg:x="1961258234" fg:w="13544558"/><text x="2.6898%" y="1631.50"></text></g><g><title>node::InternalCallbackScope::~InternalCallbackScope (25,872,057 samples, 0.03%)</title><rect x="2.4252%" y="1845" width="0.0322%" height="15" fill="rgb(220,10,11)" fg:x="1949550734" fg:w="25872057"/><text x="2.6752%" y="1855.50"></text></g><g><title>node::InternalCallbackScope::Close (25,135,841 samples, 0.03%)</title><rect x="2.4261%" y="1829" width="0.0313%" height="15" fill="rgb(221,106,17)" fg:x="1950286950" fg:w="25135841"/><text x="2.6761%" y="1839.50"></text></g><g><title>v8::internal::MicrotaskQueue::PerformCheckpoint (25,135,841 samples, 0.03%)</title><rect x="2.4261%" y="1813" width="0.0313%" height="15" fill="rgb(251,142,44)" fg:x="1950286950" fg:w="25135841"/><text x="2.6761%" y="1823.50"></text></g><g><title>v8::internal::MicrotaskQueue::RunMicrotasks (25,135,841 samples, 0.03%)</title><rect x="2.4261%" y="1797" width="0.0313%" height="15" fill="rgb(238,13,15)" fg:x="1950286950" fg:w="25135841"/><text x="2.6761%" y="1807.50"></text></g><g><title>v8::internal::Execution::TryRunMicrotasks (25,135,841 samples, 0.03%)</title><rect x="2.4261%" y="1781" width="0.0313%" height="15" fill="rgb(208,107,27)" fg:x="1950286950" fg:w="25135841"/><text x="2.6761%" y="1791.50"></text></g><g><title>v8::internal::(anonymous namespace)::InvokeWithTryCatch (25,135,841 samples, 0.03%)</title><rect x="2.4261%" y="1765" width="0.0313%" height="15" fill="rgb(205,136,37)" fg:x="1950286950" fg:w="25135841"/><text x="2.6761%" y="1775.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (24,386,951 samples, 0.03%)</title><rect x="2.4270%" y="1749" width="0.0303%" height="15" fill="rgb(250,205,27)" fg:x="1951035840" fg:w="24386951"/><text x="2.6770%" y="1759.50"></text></g><g><title>Builtins_JSRunMicrotasksEntry (24,386,951 samples, 0.03%)</title><rect x="2.4270%" y="1733" width="0.0303%" height="15" fill="rgb(210,80,43)" fg:x="1951035840" fg:w="24386951"/><text x="2.6770%" y="1743.50"></text></g><g><title>Builtins_RunMicrotasks (23,702,376 samples, 0.03%)</title><rect x="2.4279%" y="1717" width="0.0295%" height="15" fill="rgb(247,160,36)" fg:x="1951720415" fg:w="23702376"/><text x="2.6779%" y="1727.50"></text></g><g><title>Builtins_PromiseRejectReactionJob (22,990,683 samples, 0.03%)</title><rect x="2.4288%" y="1701" width="0.0286%" height="15" fill="rgb(234,13,49)" fg:x="1952432108" fg:w="22990683"/><text x="2.6788%" y="1711.50"></text></g><g><title>node::fs::FSReqPromise&lt;node::AliasedBufferBase&lt;double, v8::Float64Array&gt; &gt;::Reject (29,246,645 samples, 0.04%)</title><rect x="2.4243%" y="1861" width="0.0364%" height="15" fill="rgb(234,122,0)" fg:x="1948865959" fg:w="29246645"/><text x="2.6743%" y="1871.50"></text></g><g><title>node::fs::FSReqAfterScope::Reject (39,767,196 samples, 0.05%)</title><rect x="2.4140%" y="1877" width="0.0495%" height="15" fill="rgb(207,146,38)" fg:x="1940510999" fg:w="39767196"/><text x="2.6640%" y="1887.50"></text></g><g><title>node::fs::AfterStringPtr (42,650,201 samples, 0.05%)</title><rect x="2.4140%" y="1893" width="0.0531%" height="15" fill="rgb(207,177,25)" fg:x="1940510999" fg:w="42650201"/><text x="2.6640%" y="1903.50"></text></g><g><title>v8::internal::JsonParser&lt;unsigned char&gt;::ParseJson (12,145,883 samples, 0.02%)</title><rect x="2.4730%" y="1637" width="0.0151%" height="15" fill="rgb(211,178,42)" fg:x="1987995018" fg:w="12145883"/><text x="2.7230%" y="1647.50"></text></g><g><title>v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::JsonParser&lt;unsigned char&gt;::ParseJsonValue&lt;false&gt; (11,405,956 samples, 0.01%)</title><rect x="2.4739%" y="1621" width="0.0142%" height="15" fill="rgb(230,69,54)" fg:x="1988734945" fg:w="11405956"/><text x="2.7239%" y="1631.50"></text></g><g><title>v8::internal::JsonParser&lt;unsigned short&gt;::BuildJsonObject (11,802,651 samples, 0.01%)</title><rect x="2.4927%" y="1605" width="0.0147%" height="15" fill="rgb(214,135,41)" fg:x="2003847879" fg:w="11802651"/><text x="2.7427%" y="1615.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_BuiltinExit (35,962,758 samples, 0.04%)</title><rect x="2.4730%" y="1669" width="0.0447%" height="15" fill="rgb(237,67,25)" fg:x="1987995018" fg:w="35962758"/><text x="2.7230%" y="1679.50"></text></g><g><title>v8::internal::Builtin_JsonParse (35,962,758 samples, 0.04%)</title><rect x="2.4730%" y="1653" width="0.0447%" height="15" fill="rgb(222,189,50)" fg:x="1987995018" fg:w="35962758"/><text x="2.7230%" y="1663.50"></text></g><g><title>v8::internal::JsonParser&lt;unsigned short&gt;::ParseJson (23,816,875 samples, 0.03%)</title><rect x="2.4881%" y="1637" width="0.0296%" height="15" fill="rgb(245,148,34)" fg:x="2000140901" fg:w="23816875"/><text x="2.7381%" y="1647.50"></text></g><g><title>v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::JsonParser&lt;unsigned short&gt;::ParseJsonValue&lt;false&gt; (23,049,789 samples, 0.03%)</title><rect x="2.4891%" y="1621" width="0.0287%" height="15" fill="rgb(222,29,6)" fg:x="2000907987" fg:w="23049789"/><text x="2.7391%" y="1631.50"></text></g><g><title>Builtins_CallApiCallback (8,828,917 samples, 0.01%)</title><rect x="2.5220%" y="1653" width="0.0110%" height="15" fill="rgb(221,189,43)" fg:x="2027350880" fg:w="8828917"/><text x="2.7720%" y="1663.50"></text></g><g><title>void node::Buffer::(anonymous namespace)::StringSlice&lt;(node::encoding)1&gt; (8,828,917 samples, 0.01%)</title><rect x="2.5220%" y="1637" width="0.0110%" height="15" fill="rgb(207,36,27)" fg:x="2027350880" fg:w="8828917"/><text x="2.7720%" y="1647.50"></text></g><g><title>node::StringBytes::Encode (8,828,917 samples, 0.01%)</title><rect x="2.5220%" y="1621" width="0.0110%" height="15" fill="rgb(217,90,24)" fg:x="2027350880" fg:w="8828917"/><text x="2.7720%" y="1631.50"></text></g><g><title>v8::String::NewFromUtf8 (8,828,917 samples, 0.01%)</title><rect x="2.5220%" y="1605" width="0.0110%" height="15" fill="rgb(224,66,35)" fg:x="2027350880" fg:w="8828917"/><text x="2.7720%" y="1615.50"></text></g><g><title>v8::internal::Factory::NewStringFromUtf8 (8,828,917 samples, 0.01%)</title><rect x="2.5220%" y="1589" width="0.0110%" height="15" fill="rgb(221,13,50)" fg:x="2027350880" fg:w="8828917"/><text x="2.7720%" y="1599.50"></text></g><g><title>[perf-2034.map] (12,790,181 samples, 0.02%)</title><rect x="2.5455%" y="1589" width="0.0159%" height="15" fill="rgb(236,68,49)" fg:x="2046239353" fg:w="12790181"/><text x="2.7955%" y="1599.50"></text></g><g><title>[perf-2034.map] (11,316,280 samples, 0.01%)</title><rect x="2.5473%" y="1573" width="0.0141%" height="15" fill="rgb(229,146,28)" fg:x="2047713254" fg:w="11316280"/><text x="2.7973%" y="1583.50"></text></g><g><title>[perf-2034.map] (72,809,991 samples, 0.09%)</title><rect x="2.4717%" y="1685" width="0.0906%" height="15" fill="rgb(225,31,38)" fg:x="1986912167" fg:w="72809991"/><text x="2.7217%" y="1695.50"></text></g><g><title>[perf-2034.map] (33,831,817 samples, 0.04%)</title><rect x="2.5202%" y="1669" width="0.0421%" height="15" fill="rgb(250,208,3)" fg:x="2025890341" fg:w="33831817"/><text x="2.7702%" y="1679.50"></text></g><g><title>[perf-2034.map] (23,542,361 samples, 0.03%)</title><rect x="2.5330%" y="1653" width="0.0293%" height="15" fill="rgb(246,54,23)" fg:x="2036179797" fg:w="23542361"/><text x="2.7830%" y="1663.50"></text></g><g><title>[perf-2034.map] (21,464,239 samples, 0.03%)</title><rect x="2.5355%" y="1637" width="0.0267%" height="15" fill="rgb(243,76,11)" fg:x="2038257919" fg:w="21464239"/><text x="2.7855%" y="1647.50"></text></g><g><title>[perf-2034.map] (18,645,374 samples, 0.02%)</title><rect x="2.5391%" y="1621" width="0.0232%" height="15" fill="rgb(245,21,50)" fg:x="2041076784" fg:w="18645374"/><text x="2.7891%" y="1631.50"></text></g><g><title>[perf-2034.map] (13,482,805 samples, 0.02%)</title><rect x="2.5455%" y="1605" width="0.0168%" height="15" fill="rgb(228,9,43)" fg:x="2046239353" fg:w="13482805"/><text x="2.7955%" y="1615.50"></text></g><g><title>Builtins_AsyncFunctionAwaitResolveClosure (79,107,122 samples, 0.10%)</title><rect x="2.4717%" y="1701" width="0.0984%" height="15" fill="rgb(208,100,47)" fg:x="1986912167" fg:w="79107122"/><text x="2.7217%" y="1711.50"></text></g><g><title>Builtins_PromiseFulfillReactionJob (81,306,440 samples, 0.10%)</title><rect x="2.4707%" y="1717" width="0.1011%" height="15" fill="rgb(232,26,8)" fg:x="1986162059" fg:w="81306440"/><text x="2.7207%" y="1727.50"></text></g><g><title>node::InternalCallbackScope::~InternalCallbackScope (82,712,032 samples, 0.10%)</title><rect x="2.4699%" y="1861" width="0.1029%" height="15" fill="rgb(216,166,38)" fg:x="1985460150" fg:w="82712032"/><text x="2.7199%" y="1871.50"></text></g><g><title>node::InternalCallbackScope::Close (82,712,032 samples, 0.10%)</title><rect x="2.4699%" y="1845" width="0.1029%" height="15" fill="rgb(251,202,51)" fg:x="1985460150" fg:w="82712032"/><text x="2.7199%" y="1855.50"></text></g><g><title>v8::internal::MicrotaskQueue::PerformCheckpoint (82,712,032 samples, 0.10%)</title><rect x="2.4699%" y="1829" width="0.1029%" height="15" fill="rgb(254,216,34)" fg:x="1985460150" fg:w="82712032"/><text x="2.7199%" y="1839.50"></text></g><g><title>v8::internal::MicrotaskQueue::RunMicrotasks (82,712,032 samples, 0.10%)</title><rect x="2.4699%" y="1813" width="0.1029%" height="15" fill="rgb(251,32,27)" fg:x="1985460150" fg:w="82712032"/><text x="2.7199%" y="1823.50"></text></g><g><title>v8::internal::Execution::TryRunMicrotasks (82,712,032 samples, 0.10%)</title><rect x="2.4699%" y="1797" width="0.1029%" height="15" fill="rgb(208,127,28)" fg:x="1985460150" fg:w="82712032"/><text x="2.7199%" y="1807.50"></text></g><g><title>v8::internal::(anonymous namespace)::InvokeWithTryCatch (82,712,032 samples, 0.10%)</title><rect x="2.4699%" y="1781" width="0.1029%" height="15" fill="rgb(224,137,22)" fg:x="1985460150" fg:w="82712032"/><text x="2.7199%" y="1791.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (82,712,032 samples, 0.10%)</title><rect x="2.4699%" y="1765" width="0.1029%" height="15" fill="rgb(254,70,32)" fg:x="1985460150" fg:w="82712032"/><text x="2.7199%" y="1775.50"></text></g><g><title>Builtins_JSRunMicrotasksEntry (82,712,032 samples, 0.10%)</title><rect x="2.4699%" y="1749" width="0.1029%" height="15" fill="rgb(229,75,37)" fg:x="1985460150" fg:w="82712032"/><text x="2.7199%" y="1759.50"></text></g><g><title>Builtins_RunMicrotasks (82,712,032 samples, 0.10%)</title><rect x="2.4699%" y="1733" width="0.1029%" height="15" fill="rgb(252,64,23)" fg:x="1985460150" fg:w="82712032"/><text x="2.7199%" y="1743.50"></text></g><g><title>uv__work_done (248,043,968 samples, 0.31%)</title><rect x="2.2645%" y="1925" width="0.3086%" height="15" fill="rgb(232,162,48)" fg:x="1820329590" fg:w="248043968"/><text x="2.5145%" y="1935.50"></text></g><g><title>node::MakeLibuvRequestCallback&lt;uv_fs_s, void (*)(uv_fs_s*)&gt;::Wrapper (248,043,968 samples, 0.31%)</title><rect x="2.2645%" y="1909" width="0.3086%" height="15" fill="rgb(246,160,12)" fg:x="1820329590" fg:w="248043968"/><text x="2.5145%" y="1919.50"></text></g><g><title>node::fs::FileHandle::ClosePromise (82,913,408 samples, 0.10%)</title><rect x="2.4699%" y="1893" width="0.1031%" height="15" fill="rgb(247,166,0)" fg:x="1985460150" fg:w="82913408"/><text x="2.7199%" y="1903.50"></text></g><g><title>node::fs::FileHandle::CloseReq::Resolve (82,913,408 samples, 0.10%)</title><rect x="2.4699%" y="1877" width="0.1031%" height="15" fill="rgb(249,219,21)" fg:x="1985460150" fg:w="82913408"/><text x="2.7199%" y="1887.50"></text></g><g><title>uv__async_io.part.3 (268,217,604 samples, 0.33%)</title><rect x="2.2427%" y="1941" width="0.3337%" height="15" fill="rgb(205,209,3)" fg:x="1802853421" fg:w="268217604"/><text x="2.4927%" y="1951.50"></text></g><g><title>uv__signal_event (8,249,083 samples, 0.01%)</title><rect x="2.5764%" y="1941" width="0.0103%" height="15" fill="rgb(243,44,1)" fg:x="2071071025" fg:w="8249083"/><text x="2.8264%" y="1951.50"></text></g><g><title>node::InternalCallbackScope::Close (8,516,463 samples, 0.01%)</title><rect x="2.5901%" y="1813" width="0.0106%" height="15" fill="rgb(206,159,16)" fg:x="2082111844" fg:w="8516463"/><text x="2.8401%" y="1823.50"></text></g><g><title>v8::Function::Call (8,340,107 samples, 0.01%)</title><rect x="2.5903%" y="1797" width="0.0104%" height="15" fill="rgb(244,77,30)" fg:x="2082288200" fg:w="8340107"/><text x="2.8403%" y="1807.50"></text></g><g><title>Builtins_ObjectKeys (12,107,382 samples, 0.02%)</title><rect x="2.6387%" y="1381" width="0.0151%" height="15" fill="rgb(218,69,12)" fg:x="2121217733" fg:w="12107382"/><text x="2.8887%" y="1391.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_NoBuiltinExit (12,107,382 samples, 0.02%)</title><rect x="2.6387%" y="1365" width="0.0151%" height="15" fill="rgb(212,87,7)" fg:x="2121217733" fg:w="12107382"/><text x="2.8887%" y="1375.50"></text></g><g><title>v8::internal::Runtime_ObjectKeys (12,107,382 samples, 0.02%)</title><rect x="2.6387%" y="1349" width="0.0151%" height="15" fill="rgb(245,114,25)" fg:x="2121217733" fg:w="12107382"/><text x="2.8887%" y="1359.50"></text></g><g><title>v8::internal::KeyAccumulator::GetKeys (12,107,382 samples, 0.02%)</title><rect x="2.6387%" y="1333" width="0.0151%" height="15" fill="rgb(210,61,42)" fg:x="2121217733" fg:w="12107382"/><text x="2.8887%" y="1343.50"></text></g><g><title>v8::internal::KeyAccumulator::CollectKeys (12,107,382 samples, 0.02%)</title><rect x="2.6387%" y="1317" width="0.0151%" height="15" fill="rgb(211,52,33)" fg:x="2121217733" fg:w="12107382"/><text x="2.8887%" y="1327.50"></text></g><g><title>v8::internal::KeyAccumulator::CollectOwnJSProxyKeys (11,952,438 samples, 0.01%)</title><rect x="2.6389%" y="1301" width="0.0149%" height="15" fill="rgb(234,58,33)" fg:x="2121372677" fg:w="11952438"/><text x="2.8889%" y="1311.50"></text></g><g><title>v8::internal::KeyAccumulator::CollectOwnJSProxyTargetKeys (11,952,438 samples, 0.01%)</title><rect x="2.6389%" y="1285" width="0.0149%" height="15" fill="rgb(220,115,36)" fg:x="2121372677" fg:w="11952438"/><text x="2.8889%" y="1295.50"></text></g><g><title>[perf-86917.map] (35,657,440 samples, 0.04%)</title><rect x="2.6113%" y="1493" width="0.0444%" height="15" fill="rgb(243,153,54)" fg:x="2099173438" fg:w="35657440"/><text x="2.8613%" y="1503.50"></text></g><g><title>[perf-86917.map] (34,432,954 samples, 0.04%)</title><rect x="2.6129%" y="1477" width="0.0428%" height="15" fill="rgb(251,47,18)" fg:x="2100397924" fg:w="34432954"/><text x="2.8629%" y="1487.50"></text></g><g><title>[perf-86917.map] (31,357,227 samples, 0.04%)</title><rect x="2.6167%" y="1461" width="0.0390%" height="15" fill="rgb(242,102,42)" fg:x="2103473651" fg:w="31357227"/><text x="2.8667%" y="1471.50"></text></g><g><title>[perf-86917.map] (29,070,821 samples, 0.04%)</title><rect x="2.6195%" y="1445" width="0.0362%" height="15" fill="rgb(234,31,38)" fg:x="2105760057" fg:w="29070821"/><text x="2.8695%" y="1455.50"></text></g><g><title>[perf-86917.map] (26,315,778 samples, 0.03%)</title><rect x="2.6229%" y="1429" width="0.0327%" height="15" fill="rgb(221,117,51)" fg:x="2108515100" fg:w="26315778"/><text x="2.8729%" y="1439.50"></text></g><g><title>[perf-86917.map] (22,975,994 samples, 0.03%)</title><rect x="2.6271%" y="1413" width="0.0286%" height="15" fill="rgb(212,20,18)" fg:x="2111854884" fg:w="22975994"/><text x="2.8771%" y="1423.50"></text></g><g><title>[perf-86917.map] (21,578,527 samples, 0.03%)</title><rect x="2.6288%" y="1397" width="0.0268%" height="15" fill="rgb(245,133,36)" fg:x="2113252351" fg:w="21578527"/><text x="2.8788%" y="1407.50"></text></g><g><title>[perf-86917.map] (40,134,656 samples, 0.05%)</title><rect x="2.6061%" y="1733" width="0.0499%" height="15" fill="rgb(212,6,19)" fg:x="2094972515" fg:w="40134656"/><text x="2.8561%" y="1743.50"></text></g><g><title>[perf-86917.map] (40,134,656 samples, 0.05%)</title><rect x="2.6061%" y="1717" width="0.0499%" height="15" fill="rgb(218,1,36)" fg:x="2094972515" fg:w="40134656"/><text x="2.8561%" y="1727.50"></text></g><g><title>[perf-86917.map] (40,134,656 samples, 0.05%)</title><rect x="2.6061%" y="1701" width="0.0499%" height="15" fill="rgb(246,84,54)" fg:x="2094972515" fg:w="40134656"/><text x="2.8561%" y="1711.50"></text></g><g><title>[perf-86917.map] (39,775,559 samples, 0.05%)</title><rect x="2.6065%" y="1685" width="0.0495%" height="15" fill="rgb(242,110,6)" fg:x="2095331612" fg:w="39775559"/><text x="2.8565%" y="1695.50"></text></g><g><title>[perf-86917.map] (39,516,943 samples, 0.05%)</title><rect x="2.6069%" y="1669" width="0.0492%" height="15" fill="rgb(214,47,5)" fg:x="2095590228" fg:w="39516943"/><text x="2.8569%" y="1679.50"></text></g><g><title>[perf-86917.map] (39,516,943 samples, 0.05%)</title><rect x="2.6069%" y="1653" width="0.0492%" height="15" fill="rgb(218,159,25)" fg:x="2095590228" fg:w="39516943"/><text x="2.8569%" y="1663.50"></text></g><g><title>[perf-86917.map] (39,293,283 samples, 0.05%)</title><rect x="2.6071%" y="1637" width="0.0489%" height="15" fill="rgb(215,211,28)" fg:x="2095813888" fg:w="39293283"/><text x="2.8571%" y="1647.50"></text></g><g><title>[perf-86917.map] (39,208,663 samples, 0.05%)</title><rect x="2.6073%" y="1621" width="0.0488%" height="15" fill="rgb(238,59,32)" fg:x="2095898508" fg:w="39208663"/><text x="2.8573%" y="1631.50"></text></g><g><title>[perf-86917.map] (39,208,663 samples, 0.05%)</title><rect x="2.6073%" y="1605" width="0.0488%" height="15" fill="rgb(226,82,3)" fg:x="2095898508" fg:w="39208663"/><text x="2.8573%" y="1615.50"></text></g><g><title>[perf-86917.map] (39,208,663 samples, 0.05%)</title><rect x="2.6073%" y="1589" width="0.0488%" height="15" fill="rgb(240,164,32)" fg:x="2095898508" fg:w="39208663"/><text x="2.8573%" y="1599.50"></text></g><g><title>[perf-86917.map] (38,589,890 samples, 0.05%)</title><rect x="2.6080%" y="1573" width="0.0480%" height="15" fill="rgb(232,46,7)" fg:x="2096517281" fg:w="38589890"/><text x="2.8580%" y="1583.50"></text></g><g><title>[perf-86917.map] (38,268,268 samples, 0.05%)</title><rect x="2.6084%" y="1557" width="0.0476%" height="15" fill="rgb(229,129,53)" fg:x="2096838903" fg:w="38268268"/><text x="2.8584%" y="1567.50"></text></g><g><title>[perf-86917.map] (38,052,301 samples, 0.05%)</title><rect x="2.6087%" y="1541" width="0.0473%" height="15" fill="rgb(234,188,29)" fg:x="2097054870" fg:w="38052301"/><text x="2.8587%" y="1551.50"></text></g><g><title>[perf-86917.map] (37,842,122 samples, 0.05%)</title><rect x="2.6090%" y="1525" width="0.0471%" height="15" fill="rgb(246,141,4)" fg:x="2097265049" fg:w="37842122"/><text x="2.8590%" y="1535.50"></text></g><g><title>[perf-86917.map] (37,842,122 samples, 0.05%)</title><rect x="2.6090%" y="1509" width="0.0471%" height="15" fill="rgb(229,23,39)" fg:x="2097265049" fg:w="37842122"/><text x="2.8590%" y="1519.50"></text></g><g><title>v8::internal::Execution::Call (45,387,813 samples, 0.06%)</title><rect x="2.6007%" y="1797" width="0.0565%" height="15" fill="rgb(206,12,3)" fg:x="2090628307" fg:w="45387813"/><text x="2.8507%" y="1807.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (45,387,813 samples, 0.06%)</title><rect x="2.6007%" y="1781" width="0.0565%" height="15" fill="rgb(252,226,20)" fg:x="2090628307" fg:w="45387813"/><text x="2.8507%" y="1791.50"></text></g><g><title>Builtins_JSEntry (44,639,066 samples, 0.06%)</title><rect x="2.6016%" y="1765" width="0.0555%" height="15" fill="rgb(216,123,35)" fg:x="2091377054" fg:w="44639066"/><text x="2.8516%" y="1775.50"></text></g><g><title>Builtins_JSEntryTrampoline (44,639,066 samples, 0.06%)</title><rect x="2.6016%" y="1749" width="0.0555%" height="15" fill="rgb(212,68,40)" fg:x="2091377054" fg:w="44639066"/><text x="2.8516%" y="1759.50"></text></g><g><title>node::StreamBase::CallJSOnreadMethod (54,065,082 samples, 0.07%)</title><rect x="2.5901%" y="1861" width="0.0673%" height="15" fill="rgb(254,125,32)" fg:x="2082111844" fg:w="54065082"/><text x="2.8401%" y="1871.50"></text></g><g><title>node::AsyncWrap::MakeCallback (54,065,082 samples, 0.07%)</title><rect x="2.5901%" y="1845" width="0.0673%" height="15" fill="rgb(253,97,22)" fg:x="2082111844" fg:w="54065082"/><text x="2.8401%" y="1855.50"></text></g><g><title>node::InternalMakeCallback (54,065,082 samples, 0.07%)</title><rect x="2.5901%" y="1829" width="0.0673%" height="15" fill="rgb(241,101,14)" fg:x="2082111844" fg:w="54065082"/><text x="2.8401%" y="1839.50"></text></g><g><title>v8::Function::Call (45,548,619 samples, 0.06%)</title><rect x="2.6007%" y="1813" width="0.0567%" height="15" fill="rgb(238,103,29)" fg:x="2090628307" fg:w="45548619"/><text x="2.8507%" y="1823.50"></text></g><g><title>node::EmitToJSStreamListener::OnStreamRead (54,558,380 samples, 0.07%)</title><rect x="2.5898%" y="1877" width="0.0679%" height="15" fill="rgb(233,195,47)" fg:x="2081866592" fg:w="54558380"/><text x="2.8398%" y="1887.50"></text></g><g><title>uv__io_poll (349,599,388 samples, 0.43%)</title><rect x="2.2252%" y="1957" width="0.4349%" height="15" fill="rgb(246,218,30)" fg:x="1788769307" fg:w="349599388"/><text x="2.4752%" y="1967.50"></text></g><g><title>uv__stream_io (59,048,587 samples, 0.07%)</title><rect x="2.5866%" y="1941" width="0.0735%" height="15" fill="rgb(219,145,47)" fg:x="2079320108" fg:w="59048587"/><text x="2.8366%" y="1951.50"></text></g><g><title>uv__read (56,816,159 samples, 0.07%)</title><rect x="2.5894%" y="1925" width="0.0707%" height="15" fill="rgb(243,12,26)" fg:x="2081552536" fg:w="56816159"/><text x="2.8394%" y="1935.50"></text></g><g><title>node::LibuvStreamWrap::ReadStart (56,502,103 samples, 0.07%)</title><rect x="2.5898%" y="1909" width="0.0703%" height="15" fill="rgb(214,87,16)" fg:x="2081866592" fg:w="56502103"/><text x="2.8398%" y="1919.50"></text></g><g><title>node::LibuvStreamWrap::OnUvRead (56,502,103 samples, 0.07%)</title><rect x="2.5898%" y="1893" width="0.0703%" height="15" fill="rgb(208,99,42)" fg:x="2081866592" fg:w="56502103"/><text x="2.8398%" y="1903.50"></text></g><g><title>[perf-87609.map] (24,120,311 samples, 0.03%)</title><rect x="2.7198%" y="1621" width="0.0300%" height="15" fill="rgb(253,99,2)" fg:x="2186367278" fg:w="24120311"/><text x="2.9698%" y="1631.50"></text></g><g><title>[perf-87609.map] (8,662,876 samples, 0.01%)</title><rect x="2.7390%" y="1605" width="0.0108%" height="15" fill="rgb(220,168,23)" fg:x="2201824713" fg:w="8662876"/><text x="2.9890%" y="1615.50"></text></g><g><title>[perf-87609.map] (46,484,302 samples, 0.06%)</title><rect x="2.6928%" y="1653" width="0.0578%" height="15" fill="rgb(242,38,24)" fg:x="2164702499" fg:w="46484302"/><text x="2.9428%" y="1663.50"></text></g><g><title>[perf-87609.map] (35,297,474 samples, 0.04%)</title><rect x="2.7068%" y="1637" width="0.0439%" height="15" fill="rgb(225,182,9)" fg:x="2175889327" fg:w="35297474"/><text x="2.9568%" y="1647.50"></text></g><g><title>[perf-87609.map] (59,737,602 samples, 0.07%)</title><rect x="2.6772%" y="1669" width="0.0743%" height="15" fill="rgb(243,178,37)" fg:x="2152104167" fg:w="59737602"/><text x="2.9272%" y="1679.50"></text></g><g><title>node::MakeCallback (68,403,505 samples, 0.09%)</title><rect x="2.6681%" y="1925" width="0.0851%" height="15" fill="rgb(232,139,19)" fg:x="2144815942" fg:w="68403505"/><text x="2.9181%" y="1935.50"></text></g><g><title>node::InternalMakeCallback (68,403,505 samples, 0.09%)</title><rect x="2.6681%" y="1909" width="0.0851%" height="15" fill="rgb(225,201,24)" fg:x="2144815942" fg:w="68403505"/><text x="2.9181%" y="1919.50"></text></g><g><title>v8::Function::Call (68,403,505 samples, 0.09%)</title><rect x="2.6681%" y="1893" width="0.0851%" height="15" fill="rgb(221,47,46)" fg:x="2144815942" fg:w="68403505"/><text x="2.9181%" y="1903.50"></text></g><g><title>v8::internal::Execution::Call (68,403,505 samples, 0.09%)</title><rect x="2.6681%" y="1877" width="0.0851%" height="15" fill="rgb(249,23,13)" fg:x="2144815942" fg:w="68403505"/><text x="2.9181%" y="1887.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (68,403,505 samples, 0.09%)</title><rect x="2.6681%" y="1861" width="0.0851%" height="15" fill="rgb(219,9,5)" fg:x="2144815942" fg:w="68403505"/><text x="2.9181%" y="1871.50"></text></g><g><title>Builtins_JSEntry (68,403,505 samples, 0.09%)</title><rect x="2.6681%" y="1845" width="0.0851%" height="15" fill="rgb(254,171,16)" fg:x="2144815942" fg:w="68403505"/><text x="2.9181%" y="1855.50"></text></g><g><title>Builtins_JSEntryTrampoline (68,403,505 samples, 0.09%)</title><rect x="2.6681%" y="1829" width="0.0851%" height="15" fill="rgb(230,171,20)" fg:x="2144815942" fg:w="68403505"/><text x="2.9181%" y="1839.50"></text></g><g><title>[perf-87609.map] (68,403,505 samples, 0.09%)</title><rect x="2.6681%" y="1813" width="0.0851%" height="15" fill="rgb(210,71,41)" fg:x="2144815942" fg:w="68403505"/><text x="2.9181%" y="1823.50"></text></g><g><title>[perf-87609.map] (68,403,505 samples, 0.09%)</title><rect x="2.6681%" y="1797" width="0.0851%" height="15" fill="rgb(206,173,20)" fg:x="2144815942" fg:w="68403505"/><text x="2.9181%" y="1807.50"></text></g><g><title>[perf-87609.map] (68,255,104 samples, 0.08%)</title><rect x="2.6683%" y="1781" width="0.0849%" height="15" fill="rgb(233,88,34)" fg:x="2144964343" fg:w="68255104"/><text x="2.9183%" y="1791.50"></text></g><g><title>[perf-87609.map] (68,255,104 samples, 0.08%)</title><rect x="2.6683%" y="1765" width="0.0849%" height="15" fill="rgb(223,209,46)" fg:x="2144964343" fg:w="68255104"/><text x="2.9183%" y="1775.50"></text></g><g><title>[perf-87609.map] (68,255,104 samples, 0.08%)</title><rect x="2.6683%" y="1749" width="0.0849%" height="15" fill="rgb(250,43,18)" fg:x="2144964343" fg:w="68255104"/><text x="2.9183%" y="1759.50"></text></g><g><title>[perf-87609.map] (68,255,104 samples, 0.08%)</title><rect x="2.6683%" y="1733" width="0.0849%" height="15" fill="rgb(208,13,10)" fg:x="2144964343" fg:w="68255104"/><text x="2.9183%" y="1743.50"></text></g><g><title>Builtins_ArrayForEach (68,255,104 samples, 0.08%)</title><rect x="2.6683%" y="1717" width="0.0849%" height="15" fill="rgb(212,200,36)" fg:x="2144964343" fg:w="68255104"/><text x="2.9183%" y="1727.50"></text></g><g><title>[perf-87609.map] (67,662,330 samples, 0.08%)</title><rect x="2.6690%" y="1701" width="0.0842%" height="15" fill="rgb(225,90,30)" fg:x="2145557117" fg:w="67662330"/><text x="2.9190%" y="1711.50"></text></g><g><title>[perf-87609.map] (66,444,587 samples, 0.08%)</title><rect x="2.6705%" y="1685" width="0.0827%" height="15" fill="rgb(236,182,39)" fg:x="2146774860" fg:w="66444587"/><text x="2.9205%" y="1695.50"></text></g><g><title>uv__run_check (74,709,734 samples, 0.09%)</title><rect x="2.6611%" y="1957" width="0.0929%" height="15" fill="rgb(212,144,35)" fg:x="2139148700" fg:w="74709734"/><text x="2.9111%" y="1967.50"></text></g><g><title>node::Environment::CheckImmediate (74,656,176 samples, 0.09%)</title><rect x="2.6611%" y="1941" width="0.0929%" height="15" fill="rgb(228,63,44)" fg:x="2139202258" fg:w="74656176"/><text x="2.9111%" y="1951.50"></text></g><g><title>[perf-2077.map] (8,141,160 samples, 0.01%)</title><rect x="2.7568%" y="1797" width="0.0101%" height="15" fill="rgb(228,109,6)" fg:x="2216137391" fg:w="8141160"/><text x="3.0068%" y="1807.50"></text></g><g><title>[perf-2077.map] (8,233,238 samples, 0.01%)</title><rect x="2.7568%" y="1845" width="0.0102%" height="15" fill="rgb(238,117,24)" fg:x="2216137391" fg:w="8233238"/><text x="3.0068%" y="1855.50"></text></g><g><title>[perf-2077.map] (8,233,238 samples, 0.01%)</title><rect x="2.7568%" y="1829" width="0.0102%" height="15" fill="rgb(242,26,26)" fg:x="2216137391" fg:w="8233238"/><text x="3.0068%" y="1839.50"></text></g><g><title>[perf-2077.map] (8,233,238 samples, 0.01%)</title><rect x="2.7568%" y="1813" width="0.0102%" height="15" fill="rgb(221,92,48)" fg:x="2216137391" fg:w="8233238"/><text x="3.0068%" y="1823.50"></text></g><g><title>__libc_start_call_main (487,198,702 samples, 0.61%)</title><rect x="2.1669%" y="2053" width="0.6061%" height="15" fill="rgb(209,209,32)" fg:x="1741921132" fg:w="487198702"/><text x="2.4169%" y="2063.50"></text></g><g><title>node::Start (487,198,702 samples, 0.61%)</title><rect x="2.1669%" y="2037" width="0.6061%" height="15" fill="rgb(221,70,22)" fg:x="1741921132" fg:w="487198702"/><text x="2.4169%" y="2047.50"></text></g><g><title>node::NodeMainInstance::Run (487,198,702 samples, 0.61%)</title><rect x="2.1669%" y="2021" width="0.6061%" height="15" fill="rgb(248,145,5)" fg:x="1741921132" fg:w="487198702"/><text x="2.4169%" y="2031.50"></text></g><g><title>node::NodeMainInstance::Run (487,198,702 samples, 0.61%)</title><rect x="2.1669%" y="2005" width="0.6061%" height="15" fill="rgb(226,116,26)" fg:x="1741921132" fg:w="487198702"/><text x="2.4169%" y="2015.50"></text></g><g><title>node::SpinEventLoopInternal (487,198,702 samples, 0.61%)</title><rect x="2.1669%" y="1989" width="0.6061%" height="15" fill="rgb(244,5,17)" fg:x="1741921132" fg:w="487198702"/><text x="2.4169%" y="1999.50"></text></g><g><title>uv_run (485,828,460 samples, 0.60%)</title><rect x="2.1686%" y="1973" width="0.6044%" height="15" fill="rgb(252,159,33)" fg:x="1743291374" fg:w="485828460"/><text x="2.4186%" y="1983.50"></text></g><g><title>uv__run_timers (15,261,400 samples, 0.02%)</title><rect x="2.7540%" y="1957" width="0.0190%" height="15" fill="rgb(206,71,0)" fg:x="2213858434" fg:w="15261400"/><text x="3.0040%" y="1967.50"></text></g><g><title>node::Environment::RunTimers (15,261,400 samples, 0.02%)</title><rect x="2.7540%" y="1941" width="0.0190%" height="15" fill="rgb(233,118,54)" fg:x="2213858434" fg:w="15261400"/><text x="3.0040%" y="1951.50"></text></g><g><title>v8::Function::Call (13,040,275 samples, 0.02%)</title><rect x="2.7568%" y="1925" width="0.0162%" height="15" fill="rgb(234,83,48)" fg:x="2216079559" fg:w="13040275"/><text x="3.0068%" y="1935.50"></text></g><g><title>v8::internal::Execution::Call (13,040,275 samples, 0.02%)</title><rect x="2.7568%" y="1909" width="0.0162%" height="15" fill="rgb(228,3,54)" fg:x="2216079559" fg:w="13040275"/><text x="3.0068%" y="1919.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (12,982,443 samples, 0.02%)</title><rect x="2.7568%" y="1893" width="0.0161%" height="15" fill="rgb(226,155,13)" fg:x="2216137391" fg:w="12982443"/><text x="3.0068%" y="1903.50"></text></g><g><title>Builtins_JSEntry (12,982,443 samples, 0.02%)</title><rect x="2.7568%" y="1877" width="0.0161%" height="15" fill="rgb(241,28,37)" fg:x="2216137391" fg:w="12982443"/><text x="3.0068%" y="1887.50"></text></g><g><title>Builtins_JSEntryTrampoline (12,982,443 samples, 0.02%)</title><rect x="2.7568%" y="1861" width="0.0161%" height="15" fill="rgb(233,93,10)" fg:x="2216137391" fg:w="12982443"/><text x="3.0068%" y="1871.50"></text></g><g><title>_int_malloc (21,158,184 samples, 0.03%)</title><rect x="2.7855%" y="2053" width="0.0263%" height="15" fill="rgb(225,113,19)" fg:x="2239164370" fg:w="21158184"/><text x="3.0355%" y="2063.50"></text></g><g><title>cfree@GLIBC_2.2.5 (9,184,868 samples, 0.01%)</title><rect x="2.8118%" y="2053" width="0.0114%" height="15" fill="rgb(241,2,18)" fg:x="2260322554" fg:w="9184868"/><text x="3.0618%" y="2063.50"></text></g><g><title>malloc (34,441,884 samples, 0.04%)</title><rect x="2.8233%" y="2053" width="0.0428%" height="15" fill="rgb(228,207,21)" fg:x="2269550275" fg:w="34441884"/><text x="3.0733%" y="2063.50"></text></g><g><title>futex_wake (9,234,044 samples, 0.01%)</title><rect x="2.8680%" y="1957" width="0.0115%" height="15" fill="rgb(213,211,35)" fg:x="2305536694" fg:w="9234044"/><text x="3.1180%" y="1967.50"></text></g><g><title>__se_sys_futex (9,784,107 samples, 0.01%)</title><rect x="2.8680%" y="1989" width="0.0122%" height="15" fill="rgb(209,83,10)" fg:x="2305536694" fg:w="9784107"/><text x="3.1180%" y="1999.50"></text></g><g><title>do_futex (9,784,107 samples, 0.01%)</title><rect x="2.8680%" y="1973" width="0.0122%" height="15" fill="rgb(209,164,1)" fg:x="2305536694" fg:w="9784107"/><text x="3.1180%" y="1983.50"></text></g><g><title>__x64_sys_futex (10,346,376 samples, 0.01%)</title><rect x="2.8680%" y="2005" width="0.0129%" height="15" fill="rgb(213,184,43)" fg:x="2305536694" fg:w="10346376"/><text x="3.1180%" y="2015.50"></text></g><g><title>entry_SYSCALL_64 (13,158,394 samples, 0.02%)</title><rect x="2.8673%" y="2037" width="0.0164%" height="15" fill="rgb(231,61,34)" fg:x="2304980724" fg:w="13158394"/><text x="3.1173%" y="2047.50"></text></g><g><title>do_syscall_64 (13,158,394 samples, 0.02%)</title><rect x="2.8673%" y="2021" width="0.0164%" height="15" fill="rgb(235,75,3)" fg:x="2304980724" fg:w="13158394"/><text x="3.1173%" y="2031.50"></text></g><g><title>pthread_cond_broadcast@@GLIBC_2.3.2 (14,596,584 samples, 0.02%)</title><rect x="2.8673%" y="2053" width="0.0182%" height="15" fill="rgb(220,106,47)" fg:x="2304980724" fg:w="14596584"/><text x="3.1173%" y="2063.50"></text></g><g><title>entry_SYSCALL_64 (8,551,567 samples, 0.01%)</title><rect x="2.8855%" y="2037" width="0.0106%" height="15" fill="rgb(210,196,33)" fg:x="2319577308" fg:w="8551567"/><text x="3.1355%" y="2047.50"></text></g><g><title>pthread_cond_signal@@GLIBC_2.3.2 (10,841,676 samples, 0.01%)</title><rect x="2.8855%" y="2053" width="0.0135%" height="15" fill="rgb(229,154,42)" fg:x="2319577308" fg:w="10841676"/><text x="3.1355%" y="2063.50"></text></g><g><title>asm_exc_page_fault (8,252,340 samples, 0.01%)</title><rect x="2.9140%" y="1957" width="0.0103%" height="15" fill="rgb(228,114,26)" fg:x="2342466928" fg:w="8252340"/><text x="3.1640%" y="1967.50"></text></g><g><title>exc_page_fault (8,252,340 samples, 0.01%)</title><rect x="2.9140%" y="1941" width="0.0103%" height="15" fill="rgb(208,144,1)" fg:x="2342466928" fg:w="8252340"/><text x="3.1640%" y="1951.50"></text></g><g><title>do_user_addr_fault (8,252,340 samples, 0.01%)</title><rect x="2.9140%" y="1925" width="0.0103%" height="15" fill="rgb(239,112,37)" fg:x="2342466928" fg:w="8252340"/><text x="3.1640%" y="1935.50"></text></g><g><title>v8::internal::BackingStore::Clear (9,459,934 samples, 0.01%)</title><rect x="2.9132%" y="1973" width="0.0118%" height="15" fill="rgb(210,96,50)" fg:x="2341844346" fg:w="9459934"/><text x="3.1632%" y="1983.50"></text></g><g><title>std::_Function_handler&lt;void (), v8::internal::ArrayBufferSweeper::RequestSweep(v8::internal::ArrayBufferSweeper::SweepingType, v8::internal::ArrayBufferSweeper::TreatAllYoungAsPromoted)::{lambda()#1}&gt;::_M_invoke (21,525,709 samples, 0.03%)</title><rect x="2.8990%" y="2021" width="0.0268%" height="15" fill="rgb(222,178,2)" fg:x="2330457072" fg:w="21525709"/><text x="3.1490%" y="2031.50"></text></g><g><title>v8::internal::ArrayBufferSweeper::SweepingJob::SweepYoung (20,491,239 samples, 0.03%)</title><rect x="2.9003%" y="2005" width="0.0255%" height="15" fill="rgb(226,74,18)" fg:x="2331491542" fg:w="20491239"/><text x="3.1503%" y="2015.50"></text></g><g><title>std::_Sp_counted_deleter&lt;v8::internal::BackingStore*, std::default_delete&lt;v8::internal::BackingStore&gt;, std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (10,138,435 samples, 0.01%)</title><rect x="2.9132%" y="1989" width="0.0126%" height="15" fill="rgb(225,67,54)" fg:x="2341844346" fg:w="10138435"/><text x="3.1632%" y="1999.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::SelectInstructions (14,898,598 samples, 0.02%)</title><rect x="2.9712%" y="1941" width="0.0185%" height="15" fill="rgb(251,92,32)" fg:x="2388429314" fg:w="14898598"/><text x="3.2212%" y="1951.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::AllocateRegistersForTopTier (11,327,319 samples, 0.01%)</title><rect x="2.9756%" y="1925" width="0.0141%" height="15" fill="rgb(228,149,22)" fg:x="2392000593" fg:w="11327319"/><text x="3.2256%" y="1935.50"></text></g><g><title>v8::internal::OptimizingCompileDispatcher::CompileTask::RunInternal (56,585,876 samples, 0.07%)</title><rect x="2.9258%" y="2021" width="0.0704%" height="15" fill="rgb(243,54,13)" fg:x="2351982781" fg:w="56585876"/><text x="3.1758%" y="2031.50"></text></g><g><title>v8::internal::OptimizingCompileDispatcher::CompileNext (56,585,876 samples, 0.07%)</title><rect x="2.9258%" y="2005" width="0.0704%" height="15" fill="rgb(243,180,28)" fg:x="2351982781" fg:w="56585876"/><text x="3.1758%" y="2015.50"></text></g><g><title>v8::internal::OptimizedCompilationJob::ExecuteJob (56,585,876 samples, 0.07%)</title><rect x="2.9258%" y="1989" width="0.0704%" height="15" fill="rgb(208,167,24)" fg:x="2351982781" fg:w="56585876"/><text x="3.1758%" y="1999.50"></text></g><g><title>v8::internal::compiler::PipelineCompilationJob::ExecuteJobImpl (56,585,876 samples, 0.07%)</title><rect x="2.9258%" y="1973" width="0.0704%" height="15" fill="rgb(245,73,45)" fg:x="2351982781" fg:w="56585876"/><text x="3.1758%" y="1983.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::OptimizeGraph (46,864,461 samples, 0.06%)</title><rect x="2.9379%" y="1957" width="0.0583%" height="15" fill="rgb(237,203,48)" fg:x="2361704196" fg:w="46864461"/><text x="3.1879%" y="1967.50"></text></g><g><title>std::__detail::_Map_base&lt;v8::internal::MemoryChunk*, std::pair&lt;v8::internal::MemoryChunk* const, v8::internal::MemoryChunkData&gt;, std::allocator&lt;std::pair&lt;v8::internal::MemoryChunk* const, v8::internal::MemoryChunkData&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;v8::internal::MemoryChunk*&gt;, v8::internal::BasicMemoryChunk::Hasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (10,419,929 samples, 0.01%)</title><rect x="3.0357%" y="1973" width="0.0130%" height="15" fill="rgb(211,197,16)" fg:x="2440287736" fg:w="10419929"/><text x="3.2857%" y="1983.50"></text></g><g><title>void v8::internal::BodyDescriptorBase::IteratePointers&lt;v8::internal::ConcurrentMarkingVisitor&gt; (21,339,174 samples, 0.03%)</title><rect x="3.0524%" y="1973" width="0.0265%" height="15" fill="rgb(243,99,51)" fg:x="2453730624" fg:w="21339174"/><text x="3.3024%" y="1983.50"></text></g><g><title>void v8::internal::MarkingVisitorBase&lt;v8::internal::ConcurrentMarkingVisitor, v8::internal::ConcurrentMarkingState&gt;::ProcessStrongHeapObject&lt;v8::internal::FullHeapObjectSlot&gt; (16,560,342 samples, 0.02%)</title><rect x="3.0583%" y="1957" width="0.0206%" height="15" fill="rgb(215,123,29)" fg:x="2458509456" fg:w="16560342"/><text x="3.3083%" y="1967.50"></text></g><g><title>v8::internal::ConcurrentMarking::RunMajor (67,086,391 samples, 0.08%)</title><rect x="3.0001%" y="1989" width="0.0835%" height="15" fill="rgb(239,186,37)" fg:x="2411722182" fg:w="67086391"/><text x="3.2501%" y="1999.50"></text></g><g><title>v8::internal::ConcurrentMarkingVisitor::ShouldVisit (11,529,407 samples, 0.01%)</title><rect x="3.0836%" y="1989" width="0.0143%" height="15" fill="rgb(252,136,39)" fg:x="2478808573" fg:w="11529407"/><text x="3.3336%" y="1999.50"></text></g><g><title>v8::internal::ConcurrentMarking::JobTaskMajor::Run (83,654,327 samples, 0.10%)</title><rect x="2.9971%" y="2005" width="0.1041%" height="15" fill="rgb(223,213,32)" fg:x="2409271362" fg:w="83654327"/><text x="3.2471%" y="2015.50"></text></g><g><title>heap::base::SlotCallbackResult v8::internal::Scavenger::ScavengeObject&lt;v8::internal::FullHeapObjectSlot&gt; (9,230,046 samples, 0.01%)</title><rect x="3.1157%" y="1941" width="0.0115%" height="15" fill="rgb(233,115,5)" fg:x="2504637369" fg:w="9230046"/><text x="3.3657%" y="1951.50"></text></g><g><title>v8::internal::Scavenger::Process (18,389,944 samples, 0.02%)</title><rect x="3.1063%" y="1973" width="0.0229%" height="15" fill="rgb(207,226,44)" fg:x="2497029945" fg:w="18389944"/><text x="3.3563%" y="1983.50"></text></g><g><title>void v8::internal::BodyDescriptorBase::IteratePointers&lt;v8::internal::ScavengeVisitor&gt; (11,236,718 samples, 0.01%)</title><rect x="3.1152%" y="1957" width="0.0140%" height="15" fill="rgb(208,126,0)" fg:x="2504183171" fg:w="11236718"/><text x="3.3652%" y="1967.50"></text></g><g><title>v8::internal::ScavengerCollector::JobTask::Run (21,023,140 samples, 0.03%)</title><rect x="3.1063%" y="2005" width="0.0262%" height="15" fill="rgb(244,66,21)" fg:x="2497029945" fg:w="21023140"/><text x="3.3563%" y="2015.50"></text></g><g><title>v8::internal::ScavengerCollector::JobTask::ProcessItems (21,023,140 samples, 0.03%)</title><rect x="3.1063%" y="1989" width="0.0262%" height="15" fill="rgb(222,97,12)" fg:x="2497029945" fg:w="21023140"/><text x="3.3563%" y="1999.50"></text></g><g><title>node::(anonymous namespace)::PlatformWorkerThread (201,247,593 samples, 0.25%)</title><rect x="2.8990%" y="2037" width="0.2503%" height="15" fill="rgb(219,213,19)" fg:x="2330457072" fg:w="201247593"/><text x="3.1490%" y="2047.50"></text></g><g><title>v8::platform::DefaultJobWorker::Run (123,136,008 samples, 0.15%)</title><rect x="2.9962%" y="2021" width="0.1532%" height="15" fill="rgb(252,169,30)" fg:x="2408568657" fg:w="123136008"/><text x="3.2462%" y="2031.50"></text></g><g><title>v8::internal::Sweeper::SweeperJob::RunImpl (13,651,580 samples, 0.02%)</title><rect x="3.1324%" y="2005" width="0.0170%" height="15" fill="rgb(206,32,51)" fg:x="2518053085" fg:w="13651580"/><text x="3.3824%" y="2015.50"></text></g><g><title>v8::internal::Sweeper::SweeperJob::SweepNonNewSpaces (13,651,580 samples, 0.02%)</title><rect x="3.1324%" y="1989" width="0.0170%" height="15" fill="rgb(250,172,42)" fg:x="2518053085" fg:w="13651580"/><text x="3.3824%" y="1999.50"></text></g><g><title>v8::internal::Sweeper::LocalSweeper::ParallelSweepPage (13,651,580 samples, 0.02%)</title><rect x="3.1324%" y="1973" width="0.0170%" height="15" fill="rgb(209,34,43)" fg:x="2518053085" fg:w="13651580"/><text x="3.3824%" y="1983.50"></text></g><g><title>v8::internal::Sweeper::RawSweep (10,269,451 samples, 0.01%)</title><rect x="3.1366%" y="1957" width="0.0128%" height="15" fill="rgb(223,11,35)" fg:x="2521435214" fg:w="10269451"/><text x="3.3866%" y="1967.50"></text></g><g><title>__x64_sys_write (11,448,173 samples, 0.01%)</title><rect x="3.1517%" y="1973" width="0.0142%" height="15" fill="rgb(251,219,26)" fg:x="2533559576" fg:w="11448173"/><text x="3.4017%" y="1983.50"></text></g><g><title>ksys_write (11,448,173 samples, 0.01%)</title><rect x="3.1517%" y="1957" width="0.0142%" height="15" fill="rgb(231,119,3)" fg:x="2533559576" fg:w="11448173"/><text x="3.4017%" y="1967.50"></text></g><g><title>vfs_write (9,961,773 samples, 0.01%)</title><rect x="3.1535%" y="1941" width="0.0124%" height="15" fill="rgb(216,97,11)" fg:x="2535045976" fg:w="9961773"/><text x="3.4035%" y="1951.50"></text></g><g><title>eventfd_write (8,420,024 samples, 0.01%)</title><rect x="3.1555%" y="1925" width="0.0105%" height="15" fill="rgb(223,59,9)" fg:x="2536587725" fg:w="8420024"/><text x="3.4055%" y="1935.50"></text></g><g><title>entry_SYSCALL_64 (14,539,209 samples, 0.02%)</title><rect x="3.1507%" y="2005" width="0.0181%" height="15" fill="rgb(233,93,31)" fg:x="2532725169" fg:w="14539209"/><text x="3.4007%" y="2015.50"></text></g><g><title>do_syscall_64 (13,704,802 samples, 0.02%)</title><rect x="3.1517%" y="1989" width="0.0170%" height="15" fill="rgb(239,81,33)" fg:x="2533559576" fg:w="13704802"/><text x="3.4017%" y="1999.50"></text></g><g><title>__GI___libc_write (15,988,190 samples, 0.02%)</title><rect x="3.1507%" y="2021" width="0.0199%" height="15" fill="rgb(213,120,34)" fg:x="2532725169" fg:w="15988190"/><text x="3.4007%" y="2031.50"></text></g><g><title>read (14,995,607 samples, 0.02%)</title><rect x="3.1825%" y="2021" width="0.0187%" height="15" fill="rgb(243,49,53)" fg:x="2558287456" fg:w="14995607"/><text x="3.4325%" y="2031.50"></text></g><g><title>entry_SYSCALL_64 (14,995,607 samples, 0.02%)</title><rect x="3.1825%" y="2005" width="0.0187%" height="15" fill="rgb(247,216,33)" fg:x="2558287456" fg:w="14995607"/><text x="3.4325%" y="2015.50"></text></g><g><title>do_syscall_64 (14,995,607 samples, 0.02%)</title><rect x="3.1825%" y="1989" width="0.0187%" height="15" fill="rgb(226,26,14)" fg:x="2558287456" fg:w="14995607"/><text x="3.4325%" y="1999.50"></text></g><g><title>__x64_sys_read (14,995,607 samples, 0.02%)</title><rect x="3.1825%" y="1973" width="0.0187%" height="15" fill="rgb(215,49,53)" fg:x="2558287456" fg:w="14995607"/><text x="3.4325%" y="1983.50"></text></g><g><title>ksys_read (14,995,607 samples, 0.02%)</title><rect x="3.1825%" y="1957" width="0.0187%" height="15" fill="rgb(245,162,40)" fg:x="2558287456" fg:w="14995607"/><text x="3.4325%" y="1967.50"></text></g><g><title>vfs_read (14,995,607 samples, 0.02%)</title><rect x="3.1825%" y="1941" width="0.0187%" height="15" fill="rgb(229,68,17)" fg:x="2558287456" fg:w="14995607"/><text x="3.4325%" y="1951.50"></text></g><g><title>proc_reg_read (10,927,430 samples, 0.01%)</title><rect x="3.1875%" y="1925" width="0.0136%" height="15" fill="rgb(213,182,10)" fg:x="2562355633" fg:w="10927430"/><text x="3.4375%" y="1935.50"></text></g><g><title>seq_read (10,927,430 samples, 0.01%)</title><rect x="3.1875%" y="1909" width="0.0136%" height="15" fill="rgb(245,125,30)" fg:x="2562355633" fg:w="10927430"/><text x="3.4375%" y="1919.50"></text></g><g><title>seq_read_iter (10,927,430 samples, 0.01%)</title><rect x="3.1875%" y="1893" width="0.0136%" height="15" fill="rgb(232,202,2)" fg:x="2562355633" fg:w="10927430"/><text x="3.4375%" y="1903.50"></text></g><g><title>tcp_seq_next (10,927,430 samples, 0.01%)</title><rect x="3.1875%" y="1877" width="0.0136%" height="15" fill="rgb(237,140,51)" fg:x="2562355633" fg:w="10927430"/><text x="3.4375%" y="1887.50"></text></g><g><title>start_thread (251,418,883 samples, 0.31%)</title><rect x="2.8990%" y="2053" width="0.3128%" height="15" fill="rgb(236,157,25)" fg:x="2330418984" fg:w="251418883"/><text x="3.1490%" y="2063.50"></text></g><g><title>worker (49,368,324 samples, 0.06%)</title><rect x="3.1503%" y="2037" width="0.0614%" height="15" fill="rgb(219,209,0)" fg:x="2532469543" fg:w="49368324"/><text x="3.4003%" y="2047.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (35,115,569 samples, 0.04%)</title><rect x="3.2118%" y="2021" width="0.0437%" height="15" fill="rgb(240,116,54)" fg:x="2581837867" fg:w="35115569"/><text x="3.4618%" y="2031.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="2005" width="0.0406%" height="15" fill="rgb(216,10,36)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="2015.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1989" width="0.0406%" height="15" fill="rgb(222,72,44)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1999.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1973" width="0.0406%" height="15" fill="rgb(232,159,9)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1983.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1957" width="0.0406%" height="15" fill="rgb(210,39,32)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1967.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1941" width="0.0406%" height="15" fill="rgb(216,194,45)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1951.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1925" width="0.0406%" height="15" fill="rgb(218,18,35)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1935.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1909" width="0.0406%" height="15" fill="rgb(207,83,51)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1919.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1893" width="0.0406%" height="15" fill="rgb(225,63,43)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1903.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1877" width="0.0406%" height="15" fill="rgb(207,57,36)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1887.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1861" width="0.0406%" height="15" fill="rgb(216,99,33)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1871.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1845" width="0.0406%" height="15" fill="rgb(225,42,16)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1855.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1829" width="0.0406%" height="15" fill="rgb(220,201,45)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1839.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1813" width="0.0406%" height="15" fill="rgb(225,33,4)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1823.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1797" width="0.0406%" height="15" fill="rgb(224,33,50)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1807.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1781" width="0.0406%" height="15" fill="rgb(246,198,51)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1791.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1765" width="0.0406%" height="15" fill="rgb(205,22,4)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1775.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1749" width="0.0406%" height="15" fill="rgb(206,3,8)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1759.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1733" width="0.0406%" height="15" fill="rgb(251,23,15)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1743.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1717" width="0.0406%" height="15" fill="rgb(252,88,28)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1727.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1701" width="0.0406%" height="15" fill="rgb(212,127,14)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1711.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1685" width="0.0406%" height="15" fill="rgb(247,145,37)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1695.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1669" width="0.0406%" height="15" fill="rgb(209,117,53)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1679.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1653" width="0.0406%" height="15" fill="rgb(212,90,42)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1663.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1637" width="0.0406%" height="15" fill="rgb(218,164,37)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1647.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1621" width="0.0406%" height="15" fill="rgb(246,65,34)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1631.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1605" width="0.0406%" height="15" fill="rgb(231,100,33)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1615.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1589" width="0.0406%" height="15" fill="rgb(228,126,14)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1599.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1573" width="0.0406%" height="15" fill="rgb(215,173,21)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1583.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1557" width="0.0406%" height="15" fill="rgb(210,6,40)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1567.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1541" width="0.0406%" height="15" fill="rgb(212,48,18)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1551.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1525" width="0.0406%" height="15" fill="rgb(230,214,11)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1535.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1509" width="0.0406%" height="15" fill="rgb(254,105,39)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1519.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1493" width="0.0406%" height="15" fill="rgb(245,158,5)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1503.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1477" width="0.0406%" height="15" fill="rgb(249,208,11)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1487.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1461" width="0.0406%" height="15" fill="rgb(210,39,28)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1471.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1445" width="0.0406%" height="15" fill="rgb(211,56,53)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1455.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1429" width="0.0406%" height="15" fill="rgb(226,201,30)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1439.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1413" width="0.0406%" height="15" fill="rgb(239,101,34)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1423.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1397" width="0.0406%" height="15" fill="rgb(226,209,5)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1407.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1381" width="0.0406%" height="15" fill="rgb(250,105,47)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1391.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1365" width="0.0406%" height="15" fill="rgb(230,72,3)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1375.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1349" width="0.0406%" height="15" fill="rgb(232,218,39)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1359.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1333" width="0.0406%" height="15" fill="rgb(248,166,6)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1343.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1317" width="0.0406%" height="15" fill="rgb(247,89,20)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1327.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1301" width="0.0406%" height="15" fill="rgb(248,130,54)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1311.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1285" width="0.0406%" height="15" fill="rgb(234,196,4)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1295.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1269" width="0.0406%" height="15" fill="rgb(250,143,31)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1279.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1253" width="0.0406%" height="15" fill="rgb(211,110,34)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1263.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1237" width="0.0406%" height="15" fill="rgb(215,124,48)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1247.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1221" width="0.0406%" height="15" fill="rgb(216,46,13)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1231.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1205" width="0.0406%" height="15" fill="rgb(205,184,25)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1215.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1189" width="0.0406%" height="15" fill="rgb(228,1,10)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1199.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1173" width="0.0406%" height="15" fill="rgb(213,116,27)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1183.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1157" width="0.0406%" height="15" fill="rgb(241,95,50)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1167.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1141" width="0.0406%" height="15" fill="rgb(238,48,32)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1151.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1125" width="0.0406%" height="15" fill="rgb(235,113,49)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1135.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1109" width="0.0406%" height="15" fill="rgb(205,127,43)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1119.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1093" width="0.0406%" height="15" fill="rgb(250,162,2)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1103.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1077" width="0.0406%" height="15" fill="rgb(220,13,41)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1087.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1061" width="0.0406%" height="15" fill="rgb(249,221,25)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1071.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1045" width="0.0406%" height="15" fill="rgb(215,208,19)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1055.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1029" width="0.0406%" height="15" fill="rgb(236,175,2)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1039.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="1013" width="0.0406%" height="15" fill="rgb(241,52,2)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1023.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="997" width="0.0406%" height="15" fill="rgb(248,140,14)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="1007.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="981" width="0.0406%" height="15" fill="rgb(253,22,42)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="991.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="965" width="0.0406%" height="15" fill="rgb(234,61,47)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="975.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="949" width="0.0406%" height="15" fill="rgb(208,226,15)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="959.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="933" width="0.0406%" height="15" fill="rgb(217,221,4)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="943.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="917" width="0.0406%" height="15" fill="rgb(212,174,34)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="927.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="901" width="0.0406%" height="15" fill="rgb(253,83,4)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="911.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="885" width="0.0406%" height="15" fill="rgb(250,195,49)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="895.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="869" width="0.0406%" height="15" fill="rgb(241,192,25)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="879.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="853" width="0.0406%" height="15" fill="rgb(208,124,10)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="863.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="837" width="0.0406%" height="15" fill="rgb(222,33,0)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="847.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="821" width="0.0406%" height="15" fill="rgb(234,209,28)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="831.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="805" width="0.0406%" height="15" fill="rgb(224,11,23)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="815.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="789" width="0.0406%" height="15" fill="rgb(232,99,1)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="799.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="773" width="0.0406%" height="15" fill="rgb(237,95,45)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="783.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="757" width="0.0406%" height="15" fill="rgb(208,109,11)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="767.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="741" width="0.0406%" height="15" fill="rgb(216,190,48)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="751.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="725" width="0.0406%" height="15" fill="rgb(251,171,36)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="735.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="709" width="0.0406%" height="15" fill="rgb(230,62,22)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="719.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="693" width="0.0406%" height="15" fill="rgb(225,114,35)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="703.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="677" width="0.0406%" height="15" fill="rgb(215,118,42)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="687.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="661" width="0.0406%" height="15" fill="rgb(243,119,21)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="671.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="645" width="0.0406%" height="15" fill="rgb(252,177,53)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="655.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="629" width="0.0406%" height="15" fill="rgb(237,209,29)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="639.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="613" width="0.0406%" height="15" fill="rgb(212,65,23)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="623.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="597" width="0.0406%" height="15" fill="rgb(230,222,46)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="607.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="581" width="0.0406%" height="15" fill="rgb(215,135,32)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="591.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="565" width="0.0406%" height="15" fill="rgb(246,101,22)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="575.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="549" width="0.0406%" height="15" fill="rgb(206,107,13)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="559.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="533" width="0.0406%" height="15" fill="rgb(250,100,44)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="543.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="517" width="0.0406%" height="15" fill="rgb(231,147,38)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="527.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="501" width="0.0406%" height="15" fill="rgb(229,8,40)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="511.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="485" width="0.0406%" height="15" fill="rgb(221,135,30)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="495.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="469" width="0.0406%" height="15" fill="rgb(249,193,18)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="479.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="453" width="0.0406%" height="15" fill="rgb(209,133,39)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="463.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="437" width="0.0406%" height="15" fill="rgb(232,100,14)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="447.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="421" width="0.0406%" height="15" fill="rgb(224,185,1)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="431.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="405" width="0.0406%" height="15" fill="rgb(223,139,8)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="415.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="389" width="0.0406%" height="15" fill="rgb(232,213,38)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="399.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="373" width="0.0406%" height="15" fill="rgb(207,94,22)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="383.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="357" width="0.0406%" height="15" fill="rgb(219,183,54)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="367.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="341" width="0.0406%" height="15" fill="rgb(216,185,54)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="351.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="325" width="0.0406%" height="15" fill="rgb(254,217,39)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="335.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="309" width="0.0406%" height="15" fill="rgb(240,178,23)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="319.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="293" width="0.0406%" height="15" fill="rgb(218,11,47)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="303.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="277" width="0.0406%" height="15" fill="rgb(218,51,51)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="287.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="261" width="0.0406%" height="15" fill="rgb(238,126,27)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="271.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="245" width="0.0406%" height="15" fill="rgb(249,202,22)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="255.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="229" width="0.0406%" height="15" fill="rgb(254,195,49)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="239.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="213" width="0.0406%" height="15" fill="rgb(208,123,14)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="223.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="197" width="0.0406%" height="15" fill="rgb(224,200,8)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="207.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="181" width="0.0406%" height="15" fill="rgb(217,61,36)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="191.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="165" width="0.0406%" height="15" fill="rgb(206,35,45)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="175.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="149" width="0.0406%" height="15" fill="rgb(217,65,33)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="159.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="133" width="0.0406%" height="15" fill="rgb(222,158,48)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="143.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="117" width="0.0406%" height="15" fill="rgb(254,2,54)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="127.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="101" width="0.0406%" height="15" fill="rgb(250,143,38)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="111.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="85" width="0.0406%" height="15" fill="rgb(248,25,0)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="95.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,671,674 samples, 0.04%)</title><rect x="3.2148%" y="69" width="0.0406%" height="15" fill="rgb(206,152,27)" fg:x="2584281762" fg:w="32671674"/><text x="3.4648%" y="79.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (24,920,137 samples, 0.03%)</title><rect x="3.2244%" y="53" width="0.0310%" height="15" fill="rgb(240,77,30)" fg:x="2592033299" fg:w="24920137"/><text x="3.4744%" y="63.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12,240,358 samples, 0.02%)</title><rect x="3.2554%" y="69" width="0.0152%" height="15" fill="rgb(231,5,3)" fg:x="2616953436" fg:w="12240358"/><text x="3.5054%" y="79.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12,240,358 samples, 0.02%)</title><rect x="3.2554%" y="53" width="0.0152%" height="15" fill="rgb(207,226,32)" fg:x="2616953436" fg:w="12240358"/><text x="3.5054%" y="63.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,516,789 samples, 0.01%)</title><rect x="3.2601%" y="37" width="0.0106%" height="15" fill="rgb(222,207,47)" fg:x="2620677005" fg:w="8516789"/><text x="3.5101%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,550,431 samples, 0.03%)</title><rect x="3.2554%" y="261" width="0.0281%" height="15" fill="rgb(229,115,45)" fg:x="2616953436" fg:w="22550431"/><text x="3.5054%" y="271.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,550,431 samples, 0.03%)</title><rect x="3.2554%" y="245" width="0.0281%" height="15" fill="rgb(224,191,6)" fg:x="2616953436" fg:w="22550431"/><text x="3.5054%" y="255.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (22,550,431 samples, 0.03%)</title><rect x="3.2554%" y="229" width="0.0281%" height="15" fill="rgb(230,227,24)" fg:x="2616953436" fg:w="22550431"/><text x="3.5054%" y="239.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,550,431 samples, 0.03%)</title><rect x="3.2554%" y="213" width="0.0281%" height="15" fill="rgb(228,80,19)" fg:x="2616953436" fg:w="22550431"/><text x="3.5054%" y="223.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,550,431 samples, 0.03%)</title><rect x="3.2554%" y="197" width="0.0281%" height="15" fill="rgb(247,229,0)" fg:x="2616953436" fg:w="22550431"/><text x="3.5054%" y="207.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,550,431 samples, 0.03%)</title><rect x="3.2554%" y="181" width="0.0281%" height="15" fill="rgb(237,194,15)" fg:x="2616953436" fg:w="22550431"/><text x="3.5054%" y="191.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (22,550,431 samples, 0.03%)</title><rect x="3.2554%" y="165" width="0.0281%" height="15" fill="rgb(219,203,20)" fg:x="2616953436" fg:w="22550431"/><text x="3.5054%" y="175.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,550,431 samples, 0.03%)</title><rect x="3.2554%" y="149" width="0.0281%" height="15" fill="rgb(234,128,8)" fg:x="2616953436" fg:w="22550431"/><text x="3.5054%" y="159.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,550,431 samples, 0.03%)</title><rect x="3.2554%" y="133" width="0.0281%" height="15" fill="rgb(248,202,8)" fg:x="2616953436" fg:w="22550431"/><text x="3.5054%" y="143.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,550,431 samples, 0.03%)</title><rect x="3.2554%" y="117" width="0.0281%" height="15" fill="rgb(206,104,37)" fg:x="2616953436" fg:w="22550431"/><text x="3.5054%" y="127.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (22,550,431 samples, 0.03%)</title><rect x="3.2554%" y="101" width="0.0281%" height="15" fill="rgb(223,8,27)" fg:x="2616953436" fg:w="22550431"/><text x="3.5054%" y="111.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,550,431 samples, 0.03%)</title><rect x="3.2554%" y="85" width="0.0281%" height="15" fill="rgb(216,217,28)" fg:x="2616953436" fg:w="22550431"/><text x="3.5054%" y="95.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (10,310,073 samples, 0.01%)</title><rect x="3.2707%" y="69" width="0.0128%" height="15" fill="rgb(249,199,1)" fg:x="2629193794" fg:w="10310073"/><text x="3.5207%" y="79.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,310,073 samples, 0.01%)</title><rect x="3.2707%" y="53" width="0.0128%" height="15" fill="rgb(240,85,17)" fg:x="2629193794" fg:w="10310073"/><text x="3.5207%" y="63.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,310,073 samples, 0.01%)</title><rect x="3.2707%" y="37" width="0.0128%" height="15" fill="rgb(206,108,45)" fg:x="2629193794" fg:w="10310073"/><text x="3.5207%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (58,029,620 samples, 0.07%)</title><rect x="3.2118%" y="2037" width="0.0722%" height="15" fill="rgb(245,210,41)" fg:x="2581837867" fg:w="58029620"/><text x="3.4618%" y="2047.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="2021" width="0.0285%" height="15" fill="rgb(206,13,37)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="2031.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="2005" width="0.0285%" height="15" fill="rgb(250,61,18)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="2015.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1989" width="0.0285%" height="15" fill="rgb(235,172,48)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1999.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1973" width="0.0285%" height="15" fill="rgb(249,201,17)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1983.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1957" width="0.0285%" height="15" fill="rgb(219,208,6)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1967.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1941" width="0.0285%" height="15" fill="rgb(248,31,23)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1951.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1925" width="0.0285%" height="15" fill="rgb(245,15,42)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1935.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1909" width="0.0285%" height="15" fill="rgb(222,217,39)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1919.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1893" width="0.0285%" height="15" fill="rgb(210,219,27)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1903.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1877" width="0.0285%" height="15" fill="rgb(252,166,36)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1887.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1861" width="0.0285%" height="15" fill="rgb(245,132,34)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1871.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1845" width="0.0285%" height="15" fill="rgb(236,54,3)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1855.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1829" width="0.0285%" height="15" fill="rgb(241,173,43)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1839.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1813" width="0.0285%" height="15" fill="rgb(215,190,9)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1823.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1797" width="0.0285%" height="15" fill="rgb(242,101,16)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1807.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1781" width="0.0285%" height="15" fill="rgb(223,190,21)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1791.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1765" width="0.0285%" height="15" fill="rgb(215,228,25)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1775.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1749" width="0.0285%" height="15" fill="rgb(225,36,22)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1759.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1733" width="0.0285%" height="15" fill="rgb(251,106,46)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1743.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1717" width="0.0285%" height="15" fill="rgb(208,90,1)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1727.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1701" width="0.0285%" height="15" fill="rgb(243,10,4)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1711.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1685" width="0.0285%" height="15" fill="rgb(212,137,27)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1695.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1669" width="0.0285%" height="15" fill="rgb(231,220,49)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1679.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1653" width="0.0285%" height="15" fill="rgb(237,96,20)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1663.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1637" width="0.0285%" height="15" fill="rgb(239,229,30)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1647.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1621" width="0.0285%" height="15" fill="rgb(219,65,33)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1631.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1605" width="0.0285%" height="15" fill="rgb(243,134,7)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1615.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1589" width="0.0285%" height="15" fill="rgb(216,177,54)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1599.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1573" width="0.0285%" height="15" fill="rgb(211,160,20)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1583.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1557" width="0.0285%" height="15" fill="rgb(239,85,39)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1567.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1541" width="0.0285%" height="15" fill="rgb(232,125,22)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1551.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1525" width="0.0285%" height="15" fill="rgb(244,57,34)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1535.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1509" width="0.0285%" height="15" fill="rgb(214,203,32)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1519.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1493" width="0.0285%" height="15" fill="rgb(207,58,43)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1503.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1477" width="0.0285%" height="15" fill="rgb(215,193,15)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1487.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1461" width="0.0285%" height="15" fill="rgb(232,15,44)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1471.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1445" width="0.0285%" height="15" fill="rgb(212,3,48)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1455.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1429" width="0.0285%" height="15" fill="rgb(218,128,7)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1439.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1413" width="0.0285%" height="15" fill="rgb(226,216,39)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1423.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1397" width="0.0285%" height="15" fill="rgb(243,47,51)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1407.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1381" width="0.0285%" height="15" fill="rgb(241,183,40)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1391.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1365" width="0.0285%" height="15" fill="rgb(231,217,32)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1375.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1349" width="0.0285%" height="15" fill="rgb(229,61,38)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1359.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1333" width="0.0285%" height="15" fill="rgb(225,210,5)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1343.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1317" width="0.0285%" height="15" fill="rgb(231,79,45)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1327.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1301" width="0.0285%" height="15" fill="rgb(224,100,7)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1311.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1285" width="0.0285%" height="15" fill="rgb(241,198,18)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1295.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1269" width="0.0285%" height="15" fill="rgb(252,97,53)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1279.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1253" width="0.0285%" height="15" fill="rgb(220,88,7)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1263.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1237" width="0.0285%" height="15" fill="rgb(213,176,14)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1247.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1221" width="0.0285%" height="15" fill="rgb(246,73,7)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1231.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1205" width="0.0285%" height="15" fill="rgb(245,64,36)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1215.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1189" width="0.0285%" height="15" fill="rgb(245,80,10)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1199.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1173" width="0.0285%" height="15" fill="rgb(232,107,50)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1183.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1157" width="0.0285%" height="15" fill="rgb(253,3,0)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1167.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1141" width="0.0285%" height="15" fill="rgb(212,99,53)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1151.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1125" width="0.0285%" height="15" fill="rgb(249,111,54)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1135.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1109" width="0.0285%" height="15" fill="rgb(249,55,30)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1119.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1093" width="0.0285%" height="15" fill="rgb(237,47,42)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1103.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1077" width="0.0285%" height="15" fill="rgb(211,20,18)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1087.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1061" width="0.0285%" height="15" fill="rgb(231,203,46)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1071.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1045" width="0.0285%" height="15" fill="rgb(237,142,3)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1055.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1029" width="0.0285%" height="15" fill="rgb(241,107,1)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1039.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="1013" width="0.0285%" height="15" fill="rgb(229,83,13)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1023.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="997" width="0.0285%" height="15" fill="rgb(241,91,40)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="1007.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="981" width="0.0285%" height="15" fill="rgb(225,3,45)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="991.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="965" width="0.0285%" height="15" fill="rgb(244,223,14)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="975.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="949" width="0.0285%" height="15" fill="rgb(224,124,37)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="959.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="933" width="0.0285%" height="15" fill="rgb(251,171,30)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="943.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="917" width="0.0285%" height="15" fill="rgb(236,46,54)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="927.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="901" width="0.0285%" height="15" fill="rgb(245,213,5)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="911.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="885" width="0.0285%" height="15" fill="rgb(230,144,27)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="895.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="869" width="0.0285%" height="15" fill="rgb(220,86,6)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="879.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="853" width="0.0285%" height="15" fill="rgb(240,20,13)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="863.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="837" width="0.0285%" height="15" fill="rgb(217,89,34)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="847.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="821" width="0.0285%" height="15" fill="rgb(229,13,5)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="831.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="805" width="0.0285%" height="15" fill="rgb(244,67,35)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="815.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="789" width="0.0285%" height="15" fill="rgb(221,40,2)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="799.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="773" width="0.0285%" height="15" fill="rgb(237,157,21)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="783.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="757" width="0.0285%" height="15" fill="rgb(222,94,11)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="767.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="741" width="0.0285%" height="15" fill="rgb(249,113,6)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="751.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="725" width="0.0285%" height="15" fill="rgb(238,137,36)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="735.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="709" width="0.0285%" height="15" fill="rgb(210,102,26)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="719.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="693" width="0.0285%" height="15" fill="rgb(218,30,30)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="703.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="677" width="0.0285%" height="15" fill="rgb(214,67,26)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="687.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="661" width="0.0285%" height="15" fill="rgb(251,9,53)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="671.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="645" width="0.0285%" height="15" fill="rgb(228,204,25)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="655.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="629" width="0.0285%" height="15" fill="rgb(207,153,8)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="639.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="613" width="0.0285%" height="15" fill="rgb(242,9,16)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="623.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="597" width="0.0285%" height="15" fill="rgb(217,211,10)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="607.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="581" width="0.0285%" height="15" fill="rgb(219,228,52)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="591.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="565" width="0.0285%" height="15" fill="rgb(231,92,29)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="575.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="549" width="0.0285%" height="15" fill="rgb(232,8,23)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="559.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="533" width="0.0285%" height="15" fill="rgb(216,211,34)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="543.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="517" width="0.0285%" height="15" fill="rgb(236,151,0)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="527.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="501" width="0.0285%" height="15" fill="rgb(209,168,3)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="511.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="485" width="0.0285%" height="15" fill="rgb(208,129,28)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="495.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="469" width="0.0285%" height="15" fill="rgb(229,78,22)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="479.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="453" width="0.0285%" height="15" fill="rgb(228,187,13)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="463.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="437" width="0.0285%" height="15" fill="rgb(240,119,24)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="447.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="421" width="0.0285%" height="15" fill="rgb(209,194,42)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="431.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="405" width="0.0285%" height="15" fill="rgb(247,200,46)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="415.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="389" width="0.0285%" height="15" fill="rgb(218,76,16)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="399.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="373" width="0.0285%" height="15" fill="rgb(225,21,48)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="383.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="357" width="0.0285%" height="15" fill="rgb(239,223,50)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="367.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="341" width="0.0285%" height="15" fill="rgb(244,45,21)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="351.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="325" width="0.0285%" height="15" fill="rgb(232,33,43)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="335.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="309" width="0.0285%" height="15" fill="rgb(209,8,3)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="319.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="293" width="0.0285%" height="15" fill="rgb(214,25,53)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="303.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,914,051 samples, 0.03%)</title><rect x="3.2554%" y="277" width="0.0285%" height="15" fill="rgb(254,186,54)" fg:x="2616953436" fg:w="22914051"/><text x="3.5054%" y="287.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12,010,568 samples, 0.01%)</title><rect x="3.2839%" y="85" width="0.0149%" height="15" fill="rgb(208,174,49)" fg:x="2639867487" fg:w="12010568"/><text x="3.5339%" y="95.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12,010,568 samples, 0.01%)</title><rect x="3.2839%" y="69" width="0.0149%" height="15" fill="rgb(233,191,51)" fg:x="2639867487" fg:w="12010568"/><text x="3.5339%" y="79.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (12,010,568 samples, 0.01%)</title><rect x="3.2839%" y="53" width="0.0149%" height="15" fill="rgb(222,134,10)" fg:x="2639867487" fg:w="12010568"/><text x="3.5339%" y="63.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12,010,568 samples, 0.01%)</title><rect x="3.2839%" y="37" width="0.0149%" height="15" fill="rgb(230,226,20)" fg:x="2639867487" fg:w="12010568"/><text x="3.5339%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (76,907,489 samples, 0.10%)</title><rect x="3.2118%" y="2053" width="0.0957%" height="15" fill="rgb(251,111,25)" fg:x="2581837867" fg:w="76907489"/><text x="3.4618%" y="2063.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="2037" width="0.0235%" height="15" fill="rgb(224,40,46)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="2047.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="2021" width="0.0235%" height="15" fill="rgb(236,108,47)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="2031.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="2005" width="0.0235%" height="15" fill="rgb(234,93,0)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="2015.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1989" width="0.0235%" height="15" fill="rgb(224,213,32)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1999.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1973" width="0.0235%" height="15" fill="rgb(251,11,48)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1983.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1957" width="0.0235%" height="15" fill="rgb(236,173,5)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1967.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1941" width="0.0235%" height="15" fill="rgb(230,95,12)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1951.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1925" width="0.0235%" height="15" fill="rgb(232,209,1)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1935.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1909" width="0.0235%" height="15" fill="rgb(232,6,1)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1919.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1893" width="0.0235%" height="15" fill="rgb(210,224,50)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1903.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1877" width="0.0235%" height="15" fill="rgb(228,127,35)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1887.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1861" width="0.0235%" height="15" fill="rgb(245,102,45)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1871.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1845" width="0.0235%" height="15" fill="rgb(214,1,49)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1855.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1829" width="0.0235%" height="15" fill="rgb(226,163,40)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1839.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1813" width="0.0235%" height="15" fill="rgb(239,212,28)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1823.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1797" width="0.0235%" height="15" fill="rgb(220,20,13)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1807.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1781" width="0.0235%" height="15" fill="rgb(210,164,35)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1791.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1765" width="0.0235%" height="15" fill="rgb(248,109,41)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1775.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1749" width="0.0235%" height="15" fill="rgb(238,23,50)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1759.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1733" width="0.0235%" height="15" fill="rgb(211,48,49)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1743.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1717" width="0.0235%" height="15" fill="rgb(223,36,21)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1727.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1701" width="0.0235%" height="15" fill="rgb(207,123,46)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1711.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1685" width="0.0235%" height="15" fill="rgb(240,218,32)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1695.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1669" width="0.0235%" height="15" fill="rgb(252,5,43)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1679.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1653" width="0.0235%" height="15" fill="rgb(252,84,19)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1663.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1637" width="0.0235%" height="15" fill="rgb(243,152,39)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1647.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1621" width="0.0235%" height="15" fill="rgb(234,160,15)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1631.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1605" width="0.0235%" height="15" fill="rgb(237,34,20)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1615.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1589" width="0.0235%" height="15" fill="rgb(229,97,13)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1599.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1573" width="0.0235%" height="15" fill="rgb(234,71,50)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1583.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1557" width="0.0235%" height="15" fill="rgb(253,155,4)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1567.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1541" width="0.0235%" height="15" fill="rgb(222,185,37)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1551.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1525" width="0.0235%" height="15" fill="rgb(251,177,13)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1535.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1509" width="0.0235%" height="15" fill="rgb(250,179,40)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1519.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1493" width="0.0235%" height="15" fill="rgb(242,44,2)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1503.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1477" width="0.0235%" height="15" fill="rgb(216,177,13)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1487.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1461" width="0.0235%" height="15" fill="rgb(216,106,43)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1471.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1445" width="0.0235%" height="15" fill="rgb(216,183,2)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1455.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1429" width="0.0235%" height="15" fill="rgb(249,75,3)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1439.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1413" width="0.0235%" height="15" fill="rgb(219,67,39)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1423.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1397" width="0.0235%" height="15" fill="rgb(253,228,2)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1407.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1381" width="0.0235%" height="15" fill="rgb(235,138,27)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1391.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1365" width="0.0235%" height="15" fill="rgb(236,97,51)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1375.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1349" width="0.0235%" height="15" fill="rgb(240,80,30)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1359.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1333" width="0.0235%" height="15" fill="rgb(230,178,19)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1343.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1317" width="0.0235%" height="15" fill="rgb(210,190,27)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1327.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1301" width="0.0235%" height="15" fill="rgb(222,107,31)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1311.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1285" width="0.0235%" height="15" fill="rgb(216,127,34)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1295.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1269" width="0.0235%" height="15" fill="rgb(234,116,52)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1279.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1253" width="0.0235%" height="15" fill="rgb(222,124,15)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1263.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1237" width="0.0235%" height="15" fill="rgb(231,179,28)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1247.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1221" width="0.0235%" height="15" fill="rgb(226,93,45)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1231.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1205" width="0.0235%" height="15" fill="rgb(215,8,51)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1215.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1189" width="0.0235%" height="15" fill="rgb(223,106,5)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1199.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1173" width="0.0235%" height="15" fill="rgb(250,191,5)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1183.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1157" width="0.0235%" height="15" fill="rgb(242,132,44)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1167.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1141" width="0.0235%" height="15" fill="rgb(251,152,29)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1151.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1125" width="0.0235%" height="15" fill="rgb(218,179,5)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1135.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1109" width="0.0235%" height="15" fill="rgb(227,67,19)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1119.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1093" width="0.0235%" height="15" fill="rgb(233,119,31)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1103.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1077" width="0.0235%" height="15" fill="rgb(241,120,22)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1087.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1061" width="0.0235%" height="15" fill="rgb(224,102,30)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1071.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1045" width="0.0235%" height="15" fill="rgb(210,164,37)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1055.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1029" width="0.0235%" height="15" fill="rgb(226,191,16)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1039.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="1013" width="0.0235%" height="15" fill="rgb(214,40,45)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1023.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="997" width="0.0235%" height="15" fill="rgb(244,29,26)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="1007.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="981" width="0.0235%" height="15" fill="rgb(216,16,5)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="991.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="965" width="0.0235%" height="15" fill="rgb(249,76,35)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="975.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="949" width="0.0235%" height="15" fill="rgb(207,11,44)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="959.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="933" width="0.0235%" height="15" fill="rgb(228,190,49)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="943.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="917" width="0.0235%" height="15" fill="rgb(214,173,12)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="927.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="901" width="0.0235%" height="15" fill="rgb(218,26,35)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="911.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="885" width="0.0235%" height="15" fill="rgb(220,200,19)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="895.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="869" width="0.0235%" height="15" fill="rgb(239,95,49)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="879.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="853" width="0.0235%" height="15" fill="rgb(235,85,53)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="863.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="837" width="0.0235%" height="15" fill="rgb(233,133,31)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="847.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="821" width="0.0235%" height="15" fill="rgb(218,25,20)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="831.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="805" width="0.0235%" height="15" fill="rgb(252,210,38)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="815.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="789" width="0.0235%" height="15" fill="rgb(242,134,21)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="799.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="773" width="0.0235%" height="15" fill="rgb(213,28,48)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="783.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="757" width="0.0235%" height="15" fill="rgb(250,196,2)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="767.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="741" width="0.0235%" height="15" fill="rgb(227,5,17)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="751.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="725" width="0.0235%" height="15" fill="rgb(221,226,24)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="735.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="709" width="0.0235%" height="15" fill="rgb(211,5,48)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="719.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="693" width="0.0235%" height="15" fill="rgb(219,150,6)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="703.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="677" width="0.0235%" height="15" fill="rgb(251,46,16)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="687.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="661" width="0.0235%" height="15" fill="rgb(220,204,40)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="671.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="645" width="0.0235%" height="15" fill="rgb(211,85,2)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="655.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="629" width="0.0235%" height="15" fill="rgb(229,17,7)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="639.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="613" width="0.0235%" height="15" fill="rgb(239,72,28)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="623.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="597" width="0.0235%" height="15" fill="rgb(230,47,54)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="607.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="581" width="0.0235%" height="15" fill="rgb(214,50,8)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="591.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="565" width="0.0235%" height="15" fill="rgb(216,198,43)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="575.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="549" width="0.0235%" height="15" fill="rgb(234,20,35)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="559.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="533" width="0.0235%" height="15" fill="rgb(254,45,19)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="543.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="517" width="0.0235%" height="15" fill="rgb(219,14,44)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="527.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="501" width="0.0235%" height="15" fill="rgb(217,220,26)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="511.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="485" width="0.0235%" height="15" fill="rgb(213,158,28)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="495.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="469" width="0.0235%" height="15" fill="rgb(252,51,52)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="479.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="453" width="0.0235%" height="15" fill="rgb(246,89,16)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="463.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="437" width="0.0235%" height="15" fill="rgb(216,158,49)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="447.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="421" width="0.0235%" height="15" fill="rgb(236,107,19)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="431.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="405" width="0.0235%" height="15" fill="rgb(228,185,30)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="415.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="389" width="0.0235%" height="15" fill="rgb(246,134,8)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="399.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="373" width="0.0235%" height="15" fill="rgb(214,143,50)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="383.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="357" width="0.0235%" height="15" fill="rgb(228,75,8)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="367.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="341" width="0.0235%" height="15" fill="rgb(207,175,4)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="351.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="325" width="0.0235%" height="15" fill="rgb(205,108,24)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="335.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="309" width="0.0235%" height="15" fill="rgb(244,120,49)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="319.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="293" width="0.0235%" height="15" fill="rgb(223,47,38)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="303.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="277" width="0.0235%" height="15" fill="rgb(229,179,11)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="287.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="261" width="0.0235%" height="15" fill="rgb(231,122,1)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="271.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="245" width="0.0235%" height="15" fill="rgb(245,119,9)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="255.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="229" width="0.0235%" height="15" fill="rgb(241,163,25)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="239.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="213" width="0.0235%" height="15" fill="rgb(217,214,3)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="223.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="197" width="0.0235%" height="15" fill="rgb(240,86,28)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="207.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="181" width="0.0235%" height="15" fill="rgb(215,47,9)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="191.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="165" width="0.0235%" height="15" fill="rgb(252,25,45)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="175.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="149" width="0.0235%" height="15" fill="rgb(251,164,9)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="159.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="133" width="0.0235%" height="15" fill="rgb(233,194,0)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="143.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="117" width="0.0235%" height="15" fill="rgb(249,111,24)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="127.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,877,869 samples, 0.02%)</title><rect x="3.2839%" y="101" width="0.0235%" height="15" fill="rgb(250,223,3)" fg:x="2639867487" fg:w="18877869"/><text x="3.5339%" y="111.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,114,072 samples, 0.01%)</title><rect x="3.3119%" y="37" width="0.0113%" height="15" fill="rgb(236,178,37)" fg:x="2662307807" fg:w="9114072"/><text x="3.5619%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (82,746,205 samples, 0.10%)</title><rect x="3.3232%" y="37" width="0.1029%" height="15" fill="rgb(241,158,50)" fg:x="2671421879" fg:w="82746205"/><text x="3.5732%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,331,265 samples, 0.12%)</title><rect x="3.3074%" y="165" width="0.1198%" height="15" fill="rgb(213,121,41)" fg:x="2658745356" fg:w="96331265"/><text x="3.5574%" y="175.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,331,265 samples, 0.12%)</title><rect x="3.3074%" y="149" width="0.1198%" height="15" fill="rgb(240,92,3)" fg:x="2658745356" fg:w="96331265"/><text x="3.5574%" y="159.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (96,331,265 samples, 0.12%)</title><rect x="3.3074%" y="133" width="0.1198%" height="15" fill="rgb(205,123,3)" fg:x="2658745356" fg:w="96331265"/><text x="3.5574%" y="143.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,331,265 samples, 0.12%)</title><rect x="3.3074%" y="117" width="0.1198%" height="15" fill="rgb(205,97,47)" fg:x="2658745356" fg:w="96331265"/><text x="3.5574%" y="127.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,331,265 samples, 0.12%)</title><rect x="3.3074%" y="101" width="0.1198%" height="15" fill="rgb(247,152,14)" fg:x="2658745356" fg:w="96331265"/><text x="3.5574%" y="111.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,331,265 samples, 0.12%)</title><rect x="3.3074%" y="85" width="0.1198%" height="15" fill="rgb(248,195,53)" fg:x="2658745356" fg:w="96331265"/><text x="3.5574%" y="95.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (96,331,265 samples, 0.12%)</title><rect x="3.3074%" y="69" width="0.1198%" height="15" fill="rgb(226,201,16)" fg:x="2658745356" fg:w="96331265"/><text x="3.5574%" y="79.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,331,265 samples, 0.12%)</title><rect x="3.3074%" y="53" width="0.1198%" height="15" fill="rgb(205,98,0)" fg:x="2658745356" fg:w="96331265"/><text x="3.5574%" y="63.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="2053" width="0.1205%" height="15" fill="rgb(214,191,48)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="2063.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="2037" width="0.1205%" height="15" fill="rgb(237,112,39)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="2047.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="2021" width="0.1205%" height="15" fill="rgb(247,203,27)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="2031.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="2005" width="0.1205%" height="15" fill="rgb(235,124,28)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="2015.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1989" width="0.1205%" height="15" fill="rgb(208,207,46)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1999.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1973" width="0.1205%" height="15" fill="rgb(234,176,4)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1983.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1957" width="0.1205%" height="15" fill="rgb(230,133,28)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1967.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1941" width="0.1205%" height="15" fill="rgb(211,137,40)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1951.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1925" width="0.1205%" height="15" fill="rgb(254,35,13)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1935.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1909" width="0.1205%" height="15" fill="rgb(225,49,51)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1919.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1893" width="0.1205%" height="15" fill="rgb(251,10,15)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1903.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1877" width="0.1205%" height="15" fill="rgb(228,207,15)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1887.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1861" width="0.1205%" height="15" fill="rgb(241,99,19)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1871.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1845" width="0.1205%" height="15" fill="rgb(207,104,49)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1855.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1829" width="0.1205%" height="15" fill="rgb(234,99,18)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1839.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1813" width="0.1205%" height="15" fill="rgb(213,191,49)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1823.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1797" width="0.1205%" height="15" fill="rgb(210,226,19)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1807.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1781" width="0.1205%" height="15" fill="rgb(229,97,18)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1791.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1765" width="0.1205%" height="15" fill="rgb(211,167,15)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1775.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1749" width="0.1205%" height="15" fill="rgb(210,169,34)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1759.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1733" width="0.1205%" height="15" fill="rgb(241,121,31)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1743.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1717" width="0.1205%" height="15" fill="rgb(232,40,11)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1727.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1701" width="0.1205%" height="15" fill="rgb(205,86,26)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1711.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1685" width="0.1205%" height="15" fill="rgb(231,126,28)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1695.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1669" width="0.1205%" height="15" fill="rgb(219,221,18)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1679.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1653" width="0.1205%" height="15" fill="rgb(211,40,0)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1663.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1637" width="0.1205%" height="15" fill="rgb(239,85,43)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1647.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1621" width="0.1205%" height="15" fill="rgb(231,55,21)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1631.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1605" width="0.1205%" height="15" fill="rgb(225,184,43)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1615.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1589" width="0.1205%" height="15" fill="rgb(251,158,41)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1599.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1573" width="0.1205%" height="15" fill="rgb(234,159,37)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1583.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1557" width="0.1205%" height="15" fill="rgb(216,204,22)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1567.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1541" width="0.1205%" height="15" fill="rgb(214,17,3)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1551.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1525" width="0.1205%" height="15" fill="rgb(212,111,17)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1535.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1509" width="0.1205%" height="15" fill="rgb(221,157,24)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1519.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1493" width="0.1205%" height="15" fill="rgb(252,16,13)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1503.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1477" width="0.1205%" height="15" fill="rgb(221,62,2)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1487.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1461" width="0.1205%" height="15" fill="rgb(247,87,22)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1471.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1445" width="0.1205%" height="15" fill="rgb(215,73,9)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1455.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1429" width="0.1205%" height="15" fill="rgb(207,175,33)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1439.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1413" width="0.1205%" height="15" fill="rgb(243,129,54)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1423.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1397" width="0.1205%" height="15" fill="rgb(227,119,45)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1407.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1381" width="0.1205%" height="15" fill="rgb(205,109,36)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1391.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1365" width="0.1205%" height="15" fill="rgb(205,6,39)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1375.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1349" width="0.1205%" height="15" fill="rgb(221,32,16)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1359.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1333" width="0.1205%" height="15" fill="rgb(228,144,50)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1343.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1317" width="0.1205%" height="15" fill="rgb(229,201,53)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1327.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1301" width="0.1205%" height="15" fill="rgb(249,153,27)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1311.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1285" width="0.1205%" height="15" fill="rgb(227,106,25)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1295.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1269" width="0.1205%" height="15" fill="rgb(230,65,29)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1279.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1253" width="0.1205%" height="15" fill="rgb(221,57,46)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1263.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1237" width="0.1205%" height="15" fill="rgb(229,161,17)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1247.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1221" width="0.1205%" height="15" fill="rgb(222,213,11)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1231.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1205" width="0.1205%" height="15" fill="rgb(235,35,13)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1215.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1189" width="0.1205%" height="15" fill="rgb(233,158,34)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1199.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1173" width="0.1205%" height="15" fill="rgb(215,151,48)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1183.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1157" width="0.1205%" height="15" fill="rgb(229,84,14)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1167.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1141" width="0.1205%" height="15" fill="rgb(229,68,14)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1151.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1125" width="0.1205%" height="15" fill="rgb(243,106,26)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1135.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1109" width="0.1205%" height="15" fill="rgb(206,45,38)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1119.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1093" width="0.1205%" height="15" fill="rgb(226,6,15)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1103.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1077" width="0.1205%" height="15" fill="rgb(232,22,54)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1087.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1061" width="0.1205%" height="15" fill="rgb(229,222,32)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1071.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1045" width="0.1205%" height="15" fill="rgb(228,62,29)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1055.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1029" width="0.1205%" height="15" fill="rgb(251,103,34)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1039.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="1013" width="0.1205%" height="15" fill="rgb(233,12,30)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1023.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="997" width="0.1205%" height="15" fill="rgb(238,52,0)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="1007.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="981" width="0.1205%" height="15" fill="rgb(223,98,5)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="991.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="965" width="0.1205%" height="15" fill="rgb(228,75,37)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="975.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="949" width="0.1205%" height="15" fill="rgb(205,115,49)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="959.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="933" width="0.1205%" height="15" fill="rgb(250,154,43)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="943.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="917" width="0.1205%" height="15" fill="rgb(226,43,29)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="927.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="901" width="0.1205%" height="15" fill="rgb(249,228,39)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="911.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="885" width="0.1205%" height="15" fill="rgb(216,79,43)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="895.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="869" width="0.1205%" height="15" fill="rgb(228,95,12)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="879.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="853" width="0.1205%" height="15" fill="rgb(249,221,15)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="863.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="837" width="0.1205%" height="15" fill="rgb(233,34,13)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="847.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="821" width="0.1205%" height="15" fill="rgb(214,103,39)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="831.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="805" width="0.1205%" height="15" fill="rgb(251,126,39)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="815.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="789" width="0.1205%" height="15" fill="rgb(214,216,36)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="799.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="773" width="0.1205%" height="15" fill="rgb(220,221,8)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="783.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="757" width="0.1205%" height="15" fill="rgb(240,216,3)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="767.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="741" width="0.1205%" height="15" fill="rgb(232,218,17)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="751.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="725" width="0.1205%" height="15" fill="rgb(229,163,45)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="735.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="709" width="0.1205%" height="15" fill="rgb(231,110,42)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="719.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="693" width="0.1205%" height="15" fill="rgb(208,170,48)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="703.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="677" width="0.1205%" height="15" fill="rgb(239,116,25)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="687.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="661" width="0.1205%" height="15" fill="rgb(219,200,50)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="671.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="645" width="0.1205%" height="15" fill="rgb(245,200,0)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="655.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="629" width="0.1205%" height="15" fill="rgb(245,119,33)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="639.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="613" width="0.1205%" height="15" fill="rgb(231,125,12)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="623.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="597" width="0.1205%" height="15" fill="rgb(216,96,41)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="607.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="581" width="0.1205%" height="15" fill="rgb(248,43,45)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="591.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="565" width="0.1205%" height="15" fill="rgb(217,222,7)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="575.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="549" width="0.1205%" height="15" fill="rgb(233,28,6)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="559.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="533" width="0.1205%" height="15" fill="rgb(231,218,15)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="543.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="517" width="0.1205%" height="15" fill="rgb(226,171,48)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="527.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="501" width="0.1205%" height="15" fill="rgb(235,201,9)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="511.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="485" width="0.1205%" height="15" fill="rgb(217,80,15)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="495.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="469" width="0.1205%" height="15" fill="rgb(219,152,8)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="479.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="453" width="0.1205%" height="15" fill="rgb(243,107,38)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="463.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="437" width="0.1205%" height="15" fill="rgb(231,17,5)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="447.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="421" width="0.1205%" height="15" fill="rgb(209,25,54)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="431.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="405" width="0.1205%" height="15" fill="rgb(219,0,2)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="415.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="389" width="0.1205%" height="15" fill="rgb(246,9,5)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="399.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="373" width="0.1205%" height="15" fill="rgb(226,159,4)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="383.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="357" width="0.1205%" height="15" fill="rgb(219,175,34)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="367.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="341" width="0.1205%" height="15" fill="rgb(236,10,46)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="351.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="325" width="0.1205%" height="15" fill="rgb(240,211,16)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="335.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="309" width="0.1205%" height="15" fill="rgb(205,3,43)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="319.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="293" width="0.1205%" height="15" fill="rgb(245,7,22)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="303.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="277" width="0.1205%" height="15" fill="rgb(239,132,32)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="287.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="261" width="0.1205%" height="15" fill="rgb(228,202,34)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="271.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="245" width="0.1205%" height="15" fill="rgb(254,200,22)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="255.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="229" width="0.1205%" height="15" fill="rgb(219,10,39)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="239.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="213" width="0.1205%" height="15" fill="rgb(226,210,39)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="223.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="197" width="0.1205%" height="15" fill="rgb(208,219,16)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="207.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (96,837,706 samples, 0.12%)</title><rect x="3.3074%" y="181" width="0.1205%" height="15" fill="rgb(216,158,51)" fg:x="2658745356" fg:w="96837706"/><text x="3.5574%" y="191.50"></text></g><g><title>unlink_chunk.constprop.0 (10,330,202 samples, 0.01%)</title><rect x="3.4279%" y="2053" width="0.0129%" height="15" fill="rgb(233,14,44)" fg:x="2755583062" fg:w="10330202"/><text x="3.6779%" y="2063.50"></text></g><g><title>node (1,564,551,367 samples, 1.95%)</title><rect x="1.4954%" y="2069" width="1.9463%" height="15" fill="rgb(237,97,39)" fg:x="1202085282" fg:w="1564551367"/><text x="1.7454%" y="2079.50">n..</text></g><g><title>fsnotify (11,872,811 samples, 0.01%)</title><rect x="3.4705%" y="1797" width="0.0148%" height="15" fill="rgb(218,198,43)" fg:x="2789826822" fg:w="11872811"/><text x="3.7205%" y="1807.50"></text></g><g><title>send_to_group (9,907,034 samples, 0.01%)</title><rect x="3.4729%" y="1781" width="0.0123%" height="15" fill="rgb(231,104,20)" fg:x="2791792599" fg:w="9907034"/><text x="3.7229%" y="1791.50"></text></g><g><title>fsnotify_handle_inode_event (8,794,211 samples, 0.01%)</title><rect x="3.4743%" y="1765" width="0.0109%" height="15" fill="rgb(254,36,13)" fg:x="2792905422" fg:w="8794211"/><text x="3.7243%" y="1775.50"></text></g><g><title>inotify_handle_inode_event (8,177,465 samples, 0.01%)</title><rect x="3.4751%" y="1749" width="0.0102%" height="15" fill="rgb(248,14,50)" fg:x="2793522168" fg:w="8177465"/><text x="3.7251%" y="1759.50"></text></g><g><title>__fsnotify_parent (17,346,587 samples, 0.02%)</title><rect x="3.4665%" y="1813" width="0.0216%" height="15" fill="rgb(217,107,29)" fg:x="2786611788" fg:w="17346587"/><text x="3.7165%" y="1823.50"></text></g><g><title>__filemap_add_folio (14,493,721 samples, 0.02%)</title><rect x="3.4974%" y="1733" width="0.0180%" height="15" fill="rgb(251,169,33)" fg:x="2811454261" fg:w="14493721"/><text x="3.7474%" y="1743.50"></text></g><g><title>clear_page_rep (8,810,436 samples, 0.01%)</title><rect x="3.5185%" y="1653" width="0.0110%" height="15" fill="rgb(217,108,32)" fg:x="2828445290" fg:w="8810436"/><text x="3.7685%" y="1663.50"></text></g><g><title>get_page_from_freelist (14,481,624 samples, 0.02%)</title><rect x="3.5180%" y="1669" width="0.0180%" height="15" fill="rgb(219,66,42)" fg:x="2827994865" fg:w="14481624"/><text x="3.7680%" y="1679.50"></text></g><g><title>filemap_alloc_folio (17,542,917 samples, 0.02%)</title><rect x="3.5166%" y="1733" width="0.0218%" height="15" fill="rgb(206,180,7)" fg:x="2826860405" fg:w="17542917"/><text x="3.7666%" y="1743.50"></text></g><g><title>folio_alloc (17,542,917 samples, 0.02%)</title><rect x="3.5166%" y="1717" width="0.0218%" height="15" fill="rgb(208,226,31)" fg:x="2826860405" fg:w="17542917"/><text x="3.7666%" y="1727.50"></text></g><g><title>alloc_pages (17,111,573 samples, 0.02%)</title><rect x="3.5171%" y="1701" width="0.0213%" height="15" fill="rgb(218,26,49)" fg:x="2827291749" fg:w="17111573"/><text x="3.7671%" y="1711.50"></text></g><g><title>__alloc_pages (16,408,457 samples, 0.02%)</title><rect x="3.5180%" y="1685" width="0.0204%" height="15" fill="rgb(233,197,48)" fg:x="2827994865" fg:w="16408457"/><text x="3.7680%" y="1695.50"></text></g><g><title>__filemap_get_folio (41,146,880 samples, 0.05%)</title><rect x="3.4969%" y="1749" width="0.0512%" height="15" fill="rgb(252,181,51)" fg:x="2811028635" fg:w="41146880"/><text x="3.7469%" y="1759.50"></text></g><g><title>memcg_slab_post_alloc_hook (10,136,890 samples, 0.01%)</title><rect x="3.5564%" y="1653" width="0.0126%" height="15" fill="rgb(253,90,19)" fg:x="2858909789" fg:w="10136890"/><text x="3.8064%" y="1663.50"></text></g><g><title>create_empty_buffers (18,260,819 samples, 0.02%)</title><rect x="3.5496%" y="1733" width="0.0227%" height="15" fill="rgb(215,171,30)" fg:x="2853412354" fg:w="18260819"/><text x="3.7996%" y="1743.50"></text></g><g><title>folio_create_empty_buffers (18,260,819 samples, 0.02%)</title><rect x="3.5496%" y="1717" width="0.0227%" height="15" fill="rgb(214,222,9)" fg:x="2853412354" fg:w="18260819"/><text x="3.7996%" y="1727.50"></text></g><g><title>folio_alloc_buffers (17,748,889 samples, 0.02%)</title><rect x="3.5502%" y="1701" width="0.0221%" height="15" fill="rgb(223,3,22)" fg:x="2853924284" fg:w="17748889"/><text x="3.8002%" y="1711.50"></text></g><g><title>alloc_buffer_head (17,224,106 samples, 0.02%)</title><rect x="3.5509%" y="1685" width="0.0214%" height="15" fill="rgb(225,196,46)" fg:x="2854449067" fg:w="17224106"/><text x="3.8009%" y="1695.50"></text></g><g><title>kmem_cache_alloc (16,572,478 samples, 0.02%)</title><rect x="3.5517%" y="1669" width="0.0206%" height="15" fill="rgb(209,110,37)" fg:x="2855100695" fg:w="16572478"/><text x="3.8017%" y="1679.50"></text></g><g><title>ext4_block_write_begin (27,789,952 samples, 0.03%)</title><rect x="3.5480%" y="1749" width="0.0346%" height="15" fill="rgb(249,89,12)" fg:x="2852175515" fg:w="27789952"/><text x="3.7980%" y="1759.50"></text></g><g><title>ext4_da_get_block_prep (8,292,294 samples, 0.01%)</title><rect x="3.5723%" y="1733" width="0.0103%" height="15" fill="rgb(226,27,33)" fg:x="2871673173" fg:w="8292294"/><text x="3.8223%" y="1743.50"></text></g><g><title>ext4_da_write_begin (70,877,338 samples, 0.09%)</title><rect x="3.4960%" y="1765" width="0.0882%" height="15" fill="rgb(213,82,22)" fg:x="2810320339" fg:w="70877338"/><text x="3.7460%" y="1775.50"></text></g><g><title>fault_in_iov_iter_readable (10,515,360 samples, 0.01%)</title><rect x="3.5911%" y="1765" width="0.0131%" height="15" fill="rgb(248,140,0)" fg:x="2886756387" fg:w="10515360"/><text x="3.8411%" y="1775.50"></text></g><g><title>fault_in_readable (8,913,149 samples, 0.01%)</title><rect x="3.5931%" y="1749" width="0.0111%" height="15" fill="rgb(228,106,3)" fg:x="2888358598" fg:w="8913149"/><text x="3.8431%" y="1759.50"></text></g><g><title>ext4_file_write_iter (99,202,802 samples, 0.12%)</title><rect x="3.4894%" y="1813" width="0.1234%" height="15" fill="rgb(209,23,37)" fg:x="2805049637" fg:w="99202802"/><text x="3.7394%" y="1823.50"></text></g><g><title>ext4_buffered_write_iter (99,202,802 samples, 0.12%)</title><rect x="3.4894%" y="1797" width="0.1234%" height="15" fill="rgb(241,93,50)" fg:x="2805049637" fg:w="99202802"/><text x="3.7394%" y="1807.50"></text></g><g><title>generic_perform_write (98,551,359 samples, 0.12%)</title><rect x="3.4902%" y="1781" width="0.1226%" height="15" fill="rgb(253,46,43)" fg:x="2805701080" fg:w="98551359"/><text x="3.7402%" y="1791.50"></text></g><g><title>__x64_sys_write (124,476,600 samples, 0.15%)</title><rect x="3.4607%" y="1861" width="0.1548%" height="15" fill="rgb(226,206,43)" fg:x="2781982448" fg:w="124476600"/><text x="3.7107%" y="1871.50"></text></g><g><title>ksys_write (124,476,600 samples, 0.15%)</title><rect x="3.4607%" y="1845" width="0.1548%" height="15" fill="rgb(217,54,7)" fg:x="2781982448" fg:w="124476600"/><text x="3.7107%" y="1855.50"></text></g><g><title>vfs_write (121,241,957 samples, 0.15%)</title><rect x="3.4648%" y="1829" width="0.1508%" height="15" fill="rgb(223,5,52)" fg:x="2785217091" fg:w="121241957"/><text x="3.7148%" y="1839.50"></text></g><g><title>entry_SYSCALL_64 (128,275,243 samples, 0.16%)</title><rect x="3.4594%" y="1893" width="0.1596%" height="15" fill="rgb(206,52,46)" fg:x="2780936315" fg:w="128275243"/><text x="3.7094%" y="1903.50"></text></g><g><title>do_syscall_64 (127,898,794 samples, 0.16%)</title><rect x="3.4599%" y="1877" width="0.1591%" height="15" fill="rgb(253,136,11)" fg:x="2781312764" fg:w="127898794"/><text x="3.7099%" y="1887.50"></text></g><g><title>__GI___libc_write (131,199,066 samples, 0.16%)</title><rect x="3.4594%" y="1909" width="0.1632%" height="15" fill="rgb(208,106,33)" fg:x="2780936315" fg:w="131199066"/><text x="3.7094%" y="1919.50"></text></g><g><title>perf_mmap__push (136,687,107 samples, 0.17%)</title><rect x="3.4534%" y="1957" width="0.1700%" height="15" fill="rgb(206,54,4)" fg:x="2776119661" fg:w="136687107"/><text x="3.7034%" y="1967.50"></text></g><g><title>record__pushfn (132,649,670 samples, 0.17%)</title><rect x="3.4585%" y="1941" width="0.1650%" height="15" fill="rgb(213,3,15)" fg:x="2780157098" fg:w="132649670"/><text x="3.7085%" y="1951.50"></text></g><g><title>writen (131,870,453 samples, 0.16%)</title><rect x="3.4594%" y="1925" width="0.1640%" height="15" fill="rgb(252,211,39)" fg:x="2780936315" fg:w="131870453"/><text x="3.7094%" y="1935.50"></text></g><g><title>__libc_start_call_main (148,605,986 samples, 0.18%)</title><rect x="3.4456%" y="2053" width="0.1849%" height="15" fill="rgb(223,6,36)" fg:x="2769824233" fg:w="148605986"/><text x="3.6956%" y="2063.50"></text></g><g><title>main (148,605,986 samples, 0.18%)</title><rect x="3.4456%" y="2037" width="0.1849%" height="15" fill="rgb(252,169,45)" fg:x="2769824233" fg:w="148605986"/><text x="3.6956%" y="2047.50"></text></g><g><title>run_builtin (148,605,986 samples, 0.18%)</title><rect x="3.4456%" y="2021" width="0.1849%" height="15" fill="rgb(212,48,26)" fg:x="2769824233" fg:w="148605986"/><text x="3.6956%" y="2031.50"></text></g><g><title>cmd_record (148,605,986 samples, 0.18%)</title><rect x="3.4456%" y="2005" width="0.1849%" height="15" fill="rgb(251,102,48)" fg:x="2769824233" fg:w="148605986"/><text x="3.6956%" y="2015.50"></text></g><g><title>__cmd_record.constprop.0 (148,605,986 samples, 0.18%)</title><rect x="3.4456%" y="1989" width="0.1849%" height="15" fill="rgb(243,208,16)" fg:x="2769824233" fg:w="148605986"/><text x="3.6956%" y="1999.50"></text></g><g><title>record__mmap_read_evlist (142,806,957 samples, 0.18%)</title><rect x="3.4528%" y="1973" width="0.1776%" height="15" fill="rgb(219,96,24)" fg:x="2775623262" fg:w="142806957"/><text x="3.7028%" y="1983.50"></text></g><g><title>perf (149,200,311 samples, 0.19%)</title><rect x="3.4456%" y="2069" width="0.1856%" height="15" fill="rgb(219,33,29)" fg:x="2769824233" fg:w="149200311"/><text x="3.6956%" y="2079.50"></text></g><g><title>__x64_sys_newfstatat (11,243,968 samples, 0.01%)</title><rect x="3.6397%" y="1973" width="0.0140%" height="15" fill="rgb(223,176,5)" fg:x="2925827133" fg:w="11243968"/><text x="3.8897%" y="1983.50"></text></g><g><title>__se_sys_newfstatat (10,532,300 samples, 0.01%)</title><rect x="3.6406%" y="1957" width="0.0131%" height="15" fill="rgb(228,140,14)" fg:x="2926538801" fg:w="10532300"/><text x="3.8906%" y="1967.50"></text></g><g><title>vfs_fstatat (10,532,300 samples, 0.01%)</title><rect x="3.6406%" y="1941" width="0.0131%" height="15" fill="rgb(217,179,31)" fg:x="2926538801" fg:w="10532300"/><text x="3.8906%" y="1951.50"></text></g><g><title>__GI___fstatat64 (13,485,585 samples, 0.02%)</title><rect x="3.6388%" y="2021" width="0.0168%" height="15" fill="rgb(230,9,30)" fg:x="2925098453" fg:w="13485585"/><text x="3.8888%" y="2031.50"></text></g><g><title>entry_SYSCALL_64 (13,485,585 samples, 0.02%)</title><rect x="3.6388%" y="2005" width="0.0168%" height="15" fill="rgb(230,136,20)" fg:x="2925098453" fg:w="13485585"/><text x="3.8888%" y="2015.50"></text></g><g><title>do_syscall_64 (12,756,905 samples, 0.02%)</title><rect x="3.6397%" y="1989" width="0.0159%" height="15" fill="rgb(215,210,22)" fg:x="2925827133" fg:w="12756905"/><text x="3.8897%" y="1999.50"></text></g><g><title>[unknown] (14,959,090 samples, 0.02%)</title><rect x="3.6379%" y="2037" width="0.0186%" height="15" fill="rgb(218,43,5)" fg:x="2924385045" fg:w="14959090"/><text x="3.8879%" y="2047.50"></text></g><g><title>kmem_cache_alloc (14,842,286 samples, 0.02%)</title><rect x="3.6788%" y="1909" width="0.0185%" height="15" fill="rgb(216,11,5)" fg:x="2957291087" fg:w="14842286"/><text x="3.9288%" y="1919.50"></text></g><g><title>memcg_slab_pre_alloc_hook (8,127,027 samples, 0.01%)</title><rect x="3.6872%" y="1893" width="0.0101%" height="15" fill="rgb(209,82,29)" fg:x="2964006346" fg:w="8127027"/><text x="3.9372%" y="1903.50"></text></g><g><title>alloc_empty_file (18,395,094 samples, 0.02%)</title><rect x="3.6753%" y="1925" width="0.0229%" height="15" fill="rgb(244,115,12)" fg:x="2954471181" fg:w="18395094"/><text x="3.9253%" y="1935.50"></text></g><g><title>path_openat (43,194,001 samples, 0.05%)</title><rect x="3.6696%" y="1941" width="0.0537%" height="15" fill="rgb(222,82,18)" fg:x="2949888389" fg:w="43194001"/><text x="3.9196%" y="1951.50"></text></g><g><title>do_filp_open (63,273,132 samples, 0.08%)</title><rect x="3.6696%" y="1957" width="0.0787%" height="15" fill="rgb(249,227,8)" fg:x="2949888389" fg:w="63273132"/><text x="3.9196%" y="1967.50"></text></g><g><title>vfs_open (20,079,131 samples, 0.02%)</title><rect x="3.7233%" y="1941" width="0.0250%" height="15" fill="rgb(253,141,45)" fg:x="2993082390" fg:w="20079131"/><text x="3.9733%" y="1951.50"></text></g><g><title>bpf_trampoline_6442477086 (18,603,461 samples, 0.02%)</title><rect x="3.7252%" y="1925" width="0.0231%" height="15" fill="rgb(234,184,4)" fg:x="2994558060" fg:w="18603461"/><text x="3.9752%" y="1935.50"></text></g><g><title>vfs_open (15,596,785 samples, 0.02%)</title><rect x="3.7289%" y="1909" width="0.0194%" height="15" fill="rgb(218,194,23)" fg:x="2997564736" fg:w="15596785"/><text x="3.9789%" y="1919.50"></text></g><g><title>do_dentry_open (15,596,785 samples, 0.02%)</title><rect x="3.7289%" y="1893" width="0.0194%" height="15" fill="rgb(235,66,41)" fg:x="2997564736" fg:w="15596785"/><text x="3.9789%" y="1903.50"></text></g><g><title>getname (11,105,225 samples, 0.01%)</title><rect x="3.7502%" y="1957" width="0.0138%" height="15" fill="rgb(245,217,1)" fg:x="3014659466" fg:w="11105225"/><text x="4.0002%" y="1967.50"></text></g><g><title>getname_flags (11,105,225 samples, 0.01%)</title><rect x="3.7502%" y="1941" width="0.0138%" height="15" fill="rgb(229,91,1)" fg:x="3014659466" fg:w="11105225"/><text x="4.0002%" y="1951.50"></text></g><g><title>__x64_sys_openat (79,565,381 samples, 0.10%)</title><rect x="3.6687%" y="1989" width="0.0990%" height="15" fill="rgb(207,101,30)" fg:x="2949164375" fg:w="79565381"/><text x="3.9187%" y="1999.50"></text></g><g><title>do_sys_openat2 (78,841,367 samples, 0.10%)</title><rect x="3.6696%" y="1973" width="0.0981%" height="15" fill="rgb(223,82,49)" fg:x="2949888389" fg:w="78841367"/><text x="3.9196%" y="1983.50"></text></g><g><title>entry_SYSCALL_64 (88,754,407 samples, 0.11%)</title><rect x="3.6649%" y="2021" width="0.1104%" height="15" fill="rgb(218,167,17)" fg:x="2946071522" fg:w="88754407"/><text x="3.9149%" y="2031.50"></text></g><g><title>do_syscall_64 (86,424,019 samples, 0.11%)</title><rect x="3.6677%" y="2005" width="0.1075%" height="15" fill="rgb(208,103,14)" fg:x="2948401910" fg:w="86424019"/><text x="3.9177%" y="2015.50"></text></g><g><title>__GI___libc_open (92,498,361 samples, 0.12%)</title><rect x="3.6639%" y="2037" width="0.1151%" height="15" fill="rgb(238,20,8)" fg:x="2945302298" fg:w="92498361"/><text x="3.9139%" y="2047.50"></text></g><g><title>entry_SYSCALL_64 (8,320,988 samples, 0.01%)</title><rect x="3.7808%" y="2021" width="0.0104%" height="15" fill="rgb(218,80,54)" fg:x="3039314297" fg:w="8320988"/><text x="4.0308%" y="2031.50"></text></g><g><title>do_syscall_64 (8,320,988 samples, 0.01%)</title><rect x="3.7808%" y="2005" width="0.0104%" height="15" fill="rgb(240,144,17)" fg:x="3039314297" fg:w="8320988"/><text x="4.0308%" y="2015.50"></text></g><g><title>__close (11,408,595 samples, 0.01%)</title><rect x="3.7808%" y="2037" width="0.0142%" height="15" fill="rgb(245,27,50)" fg:x="3039314297" fg:w="11408595"/><text x="4.0308%" y="2047.50"></text></g><g><title>__isoc99_sscanf (8,943,907 samples, 0.01%)</title><rect x="3.7960%" y="2037" width="0.0111%" height="15" fill="rgb(251,51,7)" fg:x="3051488642" fg:w="8943907"/><text x="4.0460%" y="2047.50"></text></g><g><title>__vfscanf_internal (8,168,903 samples, 0.01%)</title><rect x="3.7970%" y="2021" width="0.0102%" height="15" fill="rgb(245,217,29)" fg:x="3052263646" fg:w="8168903"/><text x="4.0470%" y="2031.50"></text></g><g><title>read (8,381,436 samples, 0.01%)</title><rect x="3.8240%" y="2037" width="0.0104%" height="15" fill="rgb(221,176,29)" fg:x="3074032400" fg:w="8381436"/><text x="4.0740%" y="2047.50"></text></g><g><title>[unknown] (160,179,092 samples, 0.20%)</title><rect x="3.6369%" y="2053" width="0.1993%" height="15" fill="rgb(212,180,24)" fg:x="2923631196" fg:w="160179092"/><text x="3.8869%" y="2063.50"></text></g><g><title>__kmem_cache_free (8,098,306 samples, 0.01%)</title><rect x="3.8569%" y="1893" width="0.0101%" height="15" fill="rgb(254,24,2)" fg:x="3100480337" fg:w="8098306"/><text x="4.1069%" y="1903.50"></text></g><g><title>__fput_sync (15,515,542 samples, 0.02%)</title><rect x="3.8486%" y="1973" width="0.0193%" height="15" fill="rgb(230,100,2)" fg:x="3093792256" fg:w="15515542"/><text x="4.0986%" y="1983.50"></text></g><g><title>__fput (15,515,542 samples, 0.02%)</title><rect x="3.8486%" y="1957" width="0.0193%" height="15" fill="rgb(219,142,25)" fg:x="3093792256" fg:w="15515542"/><text x="4.0986%" y="1967.50"></text></g><g><title>single_release (12,455,110 samples, 0.02%)</title><rect x="3.8524%" y="1941" width="0.0155%" height="15" fill="rgb(240,73,43)" fg:x="3096852688" fg:w="12455110"/><text x="4.1024%" y="1951.50"></text></g><g><title>kvfree (9,563,593 samples, 0.01%)</title><rect x="3.8560%" y="1925" width="0.0119%" height="15" fill="rgb(214,114,15)" fg:x="3099744205" fg:w="9563593"/><text x="4.1060%" y="1935.50"></text></g><g><title>kfree (9,563,593 samples, 0.01%)</title><rect x="3.8560%" y="1909" width="0.0119%" height="15" fill="rgb(207,130,4)" fg:x="3099744205" fg:w="9563593"/><text x="4.1060%" y="1919.50"></text></g><g><title>__x64_sys_close (17,001,985 samples, 0.02%)</title><rect x="3.8486%" y="2005" width="0.0212%" height="15" fill="rgb(221,25,40)" fg:x="3093792256" fg:w="17001985"/><text x="4.0986%" y="2015.50"></text></g><g><title>__se_sys_close (17,001,985 samples, 0.02%)</title><rect x="3.8486%" y="1989" width="0.0212%" height="15" fill="rgb(241,184,7)" fg:x="3093792256" fg:w="17001985"/><text x="4.0986%" y="1999.50"></text></g><g><title>entry_SYSCALL_64 (24,494,663 samples, 0.03%)</title><rect x="3.8457%" y="2037" width="0.0305%" height="15" fill="rgb(235,159,4)" fg:x="3091457338" fg:w="24494663"/><text x="4.0957%" y="2047.50"></text></g><g><title>do_syscall_64 (22,159,745 samples, 0.03%)</title><rect x="3.8486%" y="2021" width="0.0276%" height="15" fill="rgb(214,87,48)" fg:x="3093792256" fg:w="22159745"/><text x="4.0986%" y="2031.50"></text></g><g><title>__close (26,753,686 samples, 0.03%)</title><rect x="3.8457%" y="2053" width="0.0333%" height="15" fill="rgb(246,198,24)" fg:x="3091457338" fg:w="26753686"/><text x="4.0957%" y="2063.50"></text></g><g><title>__kmem_cache_alloc_node (8,267,759 samples, 0.01%)</title><rect x="3.9056%" y="1893" width="0.0103%" height="15" fill="rgb(209,66,40)" fg:x="3139592252" fg:w="8267759"/><text x="4.1556%" y="1903.50"></text></g><g><title>__kmalloc_node (11,083,153 samples, 0.01%)</title><rect x="3.9047%" y="1909" width="0.0138%" height="15" fill="rgb(233,147,39)" fg:x="3138911762" fg:w="11083153"/><text x="4.1547%" y="1919.50"></text></g><g><title>kvmalloc_node (11,851,025 samples, 0.01%)</title><rect x="3.9047%" y="1925" width="0.0147%" height="15" fill="rgb(231,145,52)" fg:x="3138911762" fg:w="11851025"/><text x="4.1547%" y="1935.50"></text></g><g><title>proc_pid_status (25,658,578 samples, 0.03%)</title><rect x="3.9214%" y="1909" width="0.0319%" height="15" fill="rgb(206,20,26)" fg:x="3152300538" fg:w="25658578"/><text x="4.1714%" y="1919.50"></text></g><g><title>do_task_stat (12,723,280 samples, 0.02%)</title><rect x="3.9533%" y="1893" width="0.0158%" height="15" fill="rgb(238,220,4)" fg:x="3177959116" fg:w="12723280"/><text x="4.2033%" y="1903.50"></text></g><g><title>proc_tgid_stat (13,512,037 samples, 0.02%)</title><rect x="3.9533%" y="1909" width="0.0168%" height="15" fill="rgb(252,195,42)" fg:x="3177959116" fg:w="13512037"/><text x="4.2033%" y="1919.50"></text></g><g><title>__x64_sys_read (56,981,139 samples, 0.07%)</title><rect x="3.9001%" y="2005" width="0.0709%" height="15" fill="rgb(209,10,6)" fg:x="3135156128" fg:w="56981139"/><text x="4.1501%" y="2015.50"></text></g><g><title>ksys_read (56,981,139 samples, 0.07%)</title><rect x="3.9001%" y="1989" width="0.0709%" height="15" fill="rgb(229,3,52)" fg:x="3135156128" fg:w="56981139"/><text x="4.1501%" y="1999.50"></text></g><g><title>vfs_read (56,260,245 samples, 0.07%)</title><rect x="3.9010%" y="1973" width="0.0700%" height="15" fill="rgb(253,49,37)" fg:x="3135877022" fg:w="56260245"/><text x="4.1510%" y="1983.50"></text></g><g><title>seq_read (55,502,946 samples, 0.07%)</title><rect x="3.9019%" y="1957" width="0.0690%" height="15" fill="rgb(240,103,49)" fg:x="3136634321" fg:w="55502946"/><text x="4.1519%" y="1967.50"></text></g><g><title>seq_read_iter (55,502,946 samples, 0.07%)</title><rect x="3.9019%" y="1941" width="0.0690%" height="15" fill="rgb(250,182,30)" fg:x="3136634321" fg:w="55502946"/><text x="4.1519%" y="1951.50"></text></g><g><title>proc_single_show (39,836,729 samples, 0.05%)</title><rect x="3.9214%" y="1925" width="0.0496%" height="15" fill="rgb(248,8,30)" fg:x="3152300538" fg:w="39836729"/><text x="4.1714%" y="1935.50"></text></g><g><title>entry_SYSCALL_64 (63,680,751 samples, 0.08%)</title><rect x="3.9001%" y="2037" width="0.0792%" height="15" fill="rgb(237,120,30)" fg:x="3135156128" fg:w="63680751"/><text x="4.1501%" y="2047.50"></text></g><g><title>do_syscall_64 (63,680,751 samples, 0.08%)</title><rect x="3.9001%" y="2021" width="0.0792%" height="15" fill="rgb(221,146,34)" fg:x="3135156128" fg:w="63680751"/><text x="4.1501%" y="2031.50"></text></g><g><title>ps (282,090,605 samples, 0.35%)</title><rect x="3.6312%" y="2069" width="0.3509%" height="15" fill="rgb(242,55,13)" fg:x="2919024544" fg:w="282090605"/><text x="3.8812%" y="2079.50"></text></g><g><title>read (65,959,021 samples, 0.08%)</title><rect x="3.9001%" y="2053" width="0.0821%" height="15" fill="rgb(242,112,31)" fg:x="3135156128" fg:w="65959021"/><text x="4.1501%" y="2063.50"></text></g><g><title>__memmove_avx_unaligned_erms (43,713,363 samples, 0.05%)</title><rect x="3.9942%" y="1909" width="0.0544%" height="15" fill="rgb(249,192,27)" fg:x="3210798642" fg:w="43713363"/><text x="4.2442%" y="1919.50"></text></g><g><title>IOTraceClient::do_insert (48,144,683 samples, 0.06%)</title><rect x="3.9924%" y="1925" width="0.0599%" height="15" fill="rgb(208,204,44)" fg:x="3209369929" fg:w="48144683"/><text x="4.2424%" y="1935.50"></text></g><g><title>lock_acquire (15,909,942 samples, 0.02%)</title><rect x="4.0579%" y="1893" width="0.0198%" height="15" fill="rgb(208,93,54)" fg:x="3261995427" fg:w="15909942"/><text x="4.3079%" y="1903.50"></text></g><g><title>__bpf_prog_enter (19,738,438 samples, 0.02%)</title><rect x="4.0559%" y="1909" width="0.0246%" height="15" fill="rgb(242,1,31)" fg:x="3260405141" fg:w="19738438"/><text x="4.3059%" y="1919.50"></text></g><g><title>__bpf_prog_exit (11,804,142 samples, 0.01%)</title><rect x="4.0804%" y="1909" width="0.0147%" height="15" fill="rgb(241,83,25)" fg:x="3280143579" fg:w="11804142"/><text x="4.3304%" y="1919.50"></text></g><g><title>lock_release (11,082,754 samples, 0.01%)</title><rect x="4.0813%" y="1893" width="0.0138%" height="15" fill="rgb(205,169,50)" fg:x="3280864967" fg:w="11082754"/><text x="4.3313%" y="1903.50"></text></g><g><title>queued_write_lock_slowpath (1,034,313,866 samples, 1.29%)</title><rect x="4.1624%" y="1829" width="1.2867%" height="15" fill="rgb(239,186,37)" fg:x="3346027304" fg:w="1034313866"/><text x="4.4124%" y="1839.50"></text></g><g><title>native_queued_spin_lock_slowpath (552,355,509 samples, 0.69%)</title><rect x="4.7619%" y="1813" width="0.6871%" height="15" fill="rgb(205,221,10)" fg:x="3827985661" fg:w="552355509"/><text x="5.0119%" y="1823.50"></text></g><g><title>do_raw_write_lock (1,045,518,268 samples, 1.30%)</title><rect x="4.1493%" y="1845" width="1.3006%" height="15" fill="rgb(218,196,15)" fg:x="3335526140" fg:w="1045518268"/><text x="4.3993%" y="1855.50"></text></g><g><title>_raw_write_lock (1,053,804,573 samples, 1.31%)</title><rect x="4.1483%" y="1861" width="1.3109%" height="15" fill="rgb(218,196,35)" fg:x="3334731758" fg:w="1053804573"/><text x="4.3983%" y="1871.50"></text></g><g><title>__cache_ext_list_add_impl (1,082,539,547 samples, 1.35%)</title><rect x="4.1214%" y="1877" width="1.3467%" height="15" fill="rgb(233,63,24)" fg:x="3313118553" fg:w="1082539547"/><text x="4.3714%" y="1887.50"></text></g><g><title>native_queued_spin_lock_slowpath (4,225,816,124 samples, 5.26%)</title><rect x="6.9975%" y="1829" width="5.2568%" height="15" fill="rgb(225,8,4)" fg:x="5625064748" fg:w="4225816124"/><text x="7.2475%" y="1839.50">native..</text></g><g><title>do_raw_read_lock (5,454,575,281 samples, 6.79%)</title><rect x="5.4708%" y="1861" width="6.7854%" height="15" fill="rgb(234,105,35)" fg:x="4397804535" fg:w="5454575281"/><text x="5.7208%" y="1871.50">do_raw_re..</text></g><g><title>queued_read_lock_slowpath (5,448,504,937 samples, 6.78%)</title><rect x="5.4783%" y="1845" width="6.7778%" height="15" fill="rgb(236,21,32)" fg:x="4403874879" fg:w="5448504937"/><text x="5.7283%" y="1855.50">queued_re..</text></g><g><title>_raw_read_lock (5,475,195,843 samples, 6.81%)</title><rect x="5.4681%" y="1877" width="6.8110%" height="15" fill="rgb(228,109,6)" fg:x="4395658100" fg:w="5475195843"/><text x="5.7181%" y="1887.50">_raw_read..</text></g><g><title>lock_acquire (18,474,127 samples, 0.02%)</title><rect x="12.2562%" y="1861" width="0.0230%" height="15" fill="rgb(229,215,31)" fg:x="9852379816" fg:w="18474127"/><text x="12.5062%" y="1871.50"></text></g><g><title>__lock_acquire (16,960,188 samples, 0.02%)</title><rect x="12.2580%" y="1845" width="0.0211%" height="15" fill="rgb(221,52,54)" fg:x="9853893755" fg:w="16960188"/><text x="12.5080%" y="1855.50"></text></g><g><title>bpf_cache_ext_list_add_tail (6,568,985,274 samples, 8.17%)</title><rect x="4.1214%" y="1893" width="8.1717%" height="15" fill="rgb(252,129,43)" fg:x="3313118553" fg:w="6568985274"/><text x="4.3714%" y="1903.50">bpf_cache_e..</text></g><g><title>alloc_htab_elem (25,577,306 samples, 0.03%)</title><rect x="12.3262%" y="1877" width="0.0318%" height="15" fill="rgb(248,183,27)" fg:x="9908715809" fg:w="25577306"/><text x="12.5762%" y="1887.50"></text></g><g><title>__pcpu_freelist_pop (25,577,306 samples, 0.03%)</title><rect x="12.3262%" y="1861" width="0.0318%" height="15" fill="rgb(250,0,22)" fg:x="9908715809" fg:w="25577306"/><text x="12.5762%" y="1871.50"></text></g><g><title>htab_lock_bucket (16,799,950 samples, 0.02%)</title><rect x="12.3580%" y="1877" width="0.0209%" height="15" fill="rgb(213,166,10)" fg:x="9934293115" fg:w="16799950"/><text x="12.6080%" y="1887.50"></text></g><g><title>_raw_spin_lock (16,084,856 samples, 0.02%)</title><rect x="12.3589%" y="1861" width="0.0200%" height="15" fill="rgb(207,163,36)" fg:x="9935008209" fg:w="16084856"/><text x="12.6089%" y="1871.50"></text></g><g><title>lock_acquire (13,707,485 samples, 0.02%)</title><rect x="12.3619%" y="1845" width="0.0171%" height="15" fill="rgb(208,122,22)" fg:x="9937385580" fg:w="13707485"/><text x="12.6119%" y="1855.50"></text></g><g><title>__lock_acquire (12,151,205 samples, 0.02%)</title><rect x="12.3638%" y="1829" width="0.0151%" height="15" fill="rgb(207,104,49)" fg:x="9938941860" fg:w="12151205"/><text x="12.6138%" y="1839.50"></text></g><g><title>htab_map_update_elem (69,744,746 samples, 0.09%)</title><rect x="12.2951%" y="1893" width="0.0868%" height="15" fill="rgb(248,211,50)" fg:x="9883698445" fg:w="69744746"/><text x="12.5451%" y="1903.50"></text></g><g><title>bpf_prog_0ba38f2e803f3434_sampling_folio_added (6,659,968,206 samples, 8.28%)</title><rect x="4.0980%" y="1909" width="8.2849%" height="15" fill="rgb(217,13,45)" fg:x="3294257516" fg:w="6659968206"/><text x="4.3480%" y="1919.50">bpf_prog_0ba..</text></g><g><title>__htab_map_lookup_elem (51,223,268 samples, 0.06%)</title><rect x="12.3828%" y="1893" width="0.0637%" height="15" fill="rgb(211,216,49)" fg:x="9954225722" fg:w="51223268"/><text x="12.6328%" y="1903.50"></text></g><g><title>bpf_prog_790e9b214d9c9b97_sampling_folio_accessed (54,147,586 samples, 0.07%)</title><rect x="12.3828%" y="1909" width="0.0674%" height="15" fill="rgb(221,58,53)" fg:x="9954225722" fg:w="54147586"/><text x="12.6328%" y="1919.50"></text></g><g><title>__lock_acquire (20,801,246 samples, 0.03%)</title><rect x="12.4648%" y="1829" width="0.0259%" height="15" fill="rgb(220,112,41)" fg:x="10020072979" fg:w="20801246"/><text x="12.7148%" y="1839.50"></text></g><g><title>_raw_spin_lock (23,102,088 samples, 0.03%)</title><rect x="12.4638%" y="1861" width="0.0287%" height="15" fill="rgb(236,38,28)" fg:x="10019338317" fg:w="23102088"/><text x="12.7138%" y="1871.50"></text></g><g><title>lock_acquire (23,102,088 samples, 0.03%)</title><rect x="12.4638%" y="1845" width="0.0287%" height="15" fill="rgb(227,195,22)" fg:x="10019338317" fg:w="23102088"/><text x="12.7138%" y="1855.50"></text></g><g><title>native_queued_spin_lock_slowpath (7,409,995,473 samples, 9.22%)</title><rect x="14.6735%" y="1813" width="9.2179%" height="15" fill="rgb(214,55,33)" fg:x="11795583648" fg:w="7409995473"/><text x="14.9235%" y="1823.50">native_queued..</text></g><g><title>do_raw_write_lock (9,157,642,188 samples, 11.39%)</title><rect x="12.5003%" y="1845" width="11.3919%" height="15" fill="rgb(248,80,13)" fg:x="10048683658" fg:w="9157642188"/><text x="12.7503%" y="1855.50">do_raw_write_lock</text></g><g><title>queued_write_lock_slowpath (9,152,320,101 samples, 11.39%)</title><rect x="12.5070%" y="1829" width="11.3853%" height="15" fill="rgb(238,52,6)" fg:x="10054005745" fg:w="9152320101"/><text x="12.7570%" y="1839.50">queued_write_lock..</text></g><g><title>__lock_acquire (8,523,017 samples, 0.01%)</title><rect x="23.8923%" y="1829" width="0.0106%" height="15" fill="rgb(224,198,47)" fg:x="19206325846" fg:w="8523017"/><text x="24.1423%" y="1839.50"></text></g><g><title>_raw_write_lock (9,167,729,945 samples, 11.40%)</title><rect x="12.4994%" y="1861" width="11.4045%" height="15" fill="rgb(233,171,20)" fg:x="10047889941" fg:w="9167729945"/><text x="12.7494%" y="1871.50">_raw_write_lock</text></g><g><title>lock_acquire (9,294,040 samples, 0.01%)</title><rect x="23.8923%" y="1845" width="0.0116%" height="15" fill="rgb(241,30,25)" fg:x="19206325846" fg:w="9294040"/><text x="24.1423%" y="1855.50"></text></g><g><title>bpf_cache_ext_list_del (9,214,016,503 samples, 11.46%)</title><rect x="12.4599%" y="1893" width="11.4620%" height="15" fill="rgb(207,171,38)" fg:x="10016187673" fg:w="9214016503"/><text x="12.7099%" y="1903.50">bpf_cache_ext_lis..</text></g><g><title>cache_ext_list_del (9,213,224,360 samples, 11.46%)</title><rect x="12.4609%" y="1877" width="11.4611%" height="15" fill="rgb(234,70,1)" fg:x="10016979816" fg:w="9213224360"/><text x="12.7109%" y="1887.50">cache_ext_list_del</text></g><g><title>valid_folios_lookup (8,516,033 samples, 0.01%)</title><rect x="23.9114%" y="1861" width="0.0106%" height="15" fill="rgb(232,178,18)" fg:x="19221688143" fg:w="8516033"/><text x="24.1614%" y="1871.50"></text></g><g><title>_raw_spin_lock (16,350,371 samples, 0.02%)</title><rect x="23.9466%" y="1845" width="0.0203%" height="15" fill="rgb(241,78,40)" fg:x="19250034846" fg:w="16350371"/><text x="24.1966%" y="1855.50"></text></g><g><title>lock_acquire (15,562,210 samples, 0.02%)</title><rect x="23.9476%" y="1829" width="0.0194%" height="15" fill="rgb(222,35,25)" fg:x="19250823007" fg:w="15562210"/><text x="24.1976%" y="1839.50"></text></g><g><title>__pcpu_freelist_push (19,457,569 samples, 0.02%)</title><rect x="23.9456%" y="1861" width="0.0242%" height="15" fill="rgb(207,92,16)" fg:x="19249234569" fg:w="19457569"/><text x="24.1956%" y="1871.50"></text></g><g><title>free_htab_elem (22,432,016 samples, 0.03%)</title><rect x="23.9437%" y="1877" width="0.0279%" height="15" fill="rgb(216,59,51)" fg:x="19247703057" fg:w="22432016"/><text x="24.1937%" y="1887.50"></text></g><g><title>htab_lock_bucket (8,532,099 samples, 0.01%)</title><rect x="23.9716%" y="1877" width="0.0106%" height="15" fill="rgb(213,80,28)" fg:x="19270135073" fg:w="8532099"/><text x="24.2216%" y="1887.50"></text></g><g><title>bpf_prog_94714edc913e697a_sampling_folio_evicted (9,275,694,682 samples, 11.54%)</title><rect x="12.4502%" y="1909" width="11.5388%" height="15" fill="rgb(220,93,7)" fg:x="10008373308" fg:w="9275694682"/><text x="12.7002%" y="1919.50">bpf_prog_94714edc..</text></g><g><title>htab_map_delete_elem (53,108,665 samples, 0.07%)</title><rect x="23.9229%" y="1893" width="0.0661%" height="15" fill="rgb(225,24,44)" fg:x="19230959325" fg:w="53108665"/><text x="24.1729%" y="1903.50"></text></g><g><title>native_queued_spin_lock_slowpath (2,491,747,194 samples, 3.10%)</title><rect x="26.3604%" y="1829" width="3.0997%" height="15" fill="rgb(243,74,40)" fg:x="21190414410" fg:w="2491747194"/><text x="26.6104%" y="1839.50">nat..</text></g><g><title>do_raw_read_lock (2,898,987,207 samples, 3.61%)</title><rect x="25.8548%" y="1861" width="3.6063%" height="15" fill="rgb(228,39,7)" fg:x="20783957558" fg:w="2898987207"/><text x="26.1048%" y="1871.50">do_r..</text></g><g><title>queued_read_lock_slowpath (2,898,266,567 samples, 3.61%)</title><rect x="25.8557%" y="1845" width="3.6054%" height="15" fill="rgb(227,79,8)" fg:x="20784678198" fg:w="2898266567"/><text x="26.1057%" y="1855.50">queu..</text></g><g><title>_raw_read_lock (2,903,548,879 samples, 3.61%)</title><rect x="25.8548%" y="1877" width="3.6120%" height="15" fill="rgb(236,58,11)" fg:x="20783957558" fg:w="2903548879"/><text x="26.1048%" y="1887.50">_raw..</text></g><g><title>do_raw_write_lock (790,262,709 samples, 0.98%)</title><rect x="29.4686%" y="1861" width="0.9831%" height="15" fill="rgb(249,63,35)" fg:x="23689008396" fg:w="790262709"/><text x="29.7186%" y="1871.50"></text></g><g><title>queued_write_lock_slowpath (788,708,492 samples, 0.98%)</title><rect x="29.4706%" y="1845" width="0.9811%" height="15" fill="rgb(252,114,16)" fg:x="23690562613" fg:w="788708492"/><text x="29.7206%" y="1855.50"></text></g><g><title>native_queued_spin_lock_slowpath (491,928,160 samples, 0.61%)</title><rect x="29.8397%" y="1829" width="0.6119%" height="15" fill="rgb(254,151,24)" fg:x="23987342945" fg:w="491928160"/><text x="30.0897%" y="1839.50"></text></g><g><title>_raw_write_lock (790,890,444 samples, 0.98%)</title><rect x="29.4686%" y="1877" width="0.9839%" height="15" fill="rgb(253,54,39)" fg:x="23689008396" fg:w="790890444"/><text x="29.7186%" y="1887.50"></text></g><g><title>htab_map_hash (62,212,395 samples, 0.08%)</title><rect x="34.4779%" y="1845" width="0.0774%" height="15" fill="rgb(243,25,45)" fg:x="27715834112" fg:w="62212395"/><text x="34.7279%" y="1855.50"></text></g><g><title>lock_is_held_type (116,696,921 samples, 0.15%)</title><rect x="34.5820%" y="1829" width="0.1452%" height="15" fill="rgb(234,134,9)" fg:x="27799479047" fg:w="116696921"/><text x="34.8320%" y="1839.50"></text></g><g><title>match_held_lock (15,510,249 samples, 0.02%)</title><rect x="34.7078%" y="1813" width="0.0193%" height="15" fill="rgb(227,166,31)" fg:x="27900665719" fg:w="15510249"/><text x="34.9578%" y="1823.50"></text></g><g><title>__htab_map_lookup_elem (3,361,212,760 samples, 4.18%)</title><rect x="30.5813%" y="1861" width="4.1813%" height="15" fill="rgb(245,143,41)" fg:x="24583497718" fg:w="3361212760"/><text x="30.8313%" y="1871.50">__hta..</text></g><g><title>rcu_read_lock_held (165,886,149 samples, 0.21%)</title><rect x="34.5563%" y="1845" width="0.2064%" height="15" fill="rgb(238,181,32)" fg:x="27778824329" fg:w="165886149"/><text x="34.8063%" y="1855.50"></text></g><g><title>rcu_is_watching (24,605,719 samples, 0.03%)</title><rect x="34.7320%" y="1829" width="0.0306%" height="15" fill="rgb(224,113,18)" fg:x="27920104759" fg:w="24605719"/><text x="34.9820%" y="1839.50"></text></g><g><title>bpf_cache_ext_list_sample (8,662,096,463 samples, 10.78%)</title><rect x="23.9928%" y="1893" width="10.7755%" height="15" fill="rgb(240,229,28)" fg:x="19287122583" fg:w="8662096463"/><text x="24.2428%" y="1903.50">bpf_cache_ext_li..</text></g><g><title>bpf_prog_baff5aaf85fd2c96_bpf_lfu_score_fn (3,469,320,206 samples, 4.32%)</title><rect x="30.4525%" y="1877" width="4.3158%" height="15" fill="rgb(250,185,3)" fg:x="24479898840" fg:w="3469320206"/><text x="30.7025%" y="1887.50">bpf_p..</text></g><g><title>bpf_prog_b0d391925e3f79f7_sampling_evict_folios (8,678,224,915 samples, 10.80%)</title><rect x="23.9890%" y="1909" width="10.7955%" height="15" fill="rgb(212,59,25)" fg:x="19284067990" fg:w="8678224915"/><text x="24.2390%" y="1919.50">bpf_prog_b0d3919..</text></g><g><title>bpf_prog_baff5aaf85fd2c96_bpf_lfu_score_fn (13,073,859 samples, 0.02%)</title><rect x="34.7682%" y="1893" width="0.0163%" height="15" fill="rgb(221,87,20)" fg:x="27949219046" fg:w="13073859"/><text x="35.0182%" y="1903.50"></text></g><g><title>copy_page_to_iter (71,065,641 samples, 0.09%)</title><rect x="34.7913%" y="1797" width="0.0884%" height="15" fill="rgb(213,74,28)" fg:x="27967771312" fg:w="71065641"/><text x="35.0413%" y="1807.50"></text></g><g><title>rep_movs_alternative (71,065,641 samples, 0.09%)</title><rect x="34.7913%" y="1781" width="0.0884%" height="15" fill="rgb(224,132,34)" fg:x="27967771312" fg:w="71065641"/><text x="35.0413%" y="1791.50"></text></g><g><title>filemap_get_read_batch (15,776,511 samples, 0.02%)</title><rect x="34.8807%" y="1781" width="0.0196%" height="15" fill="rgb(222,101,24)" fg:x="28039635297" fg:w="15776511"/><text x="35.1307%" y="1791.50"></text></g><g><title>page_cache_next_miss (12,986,746 samples, 0.02%)</title><rect x="34.9172%" y="1749" width="0.0162%" height="15" fill="rgb(254,142,4)" fg:x="28068968663" fg:w="12986746"/><text x="35.1672%" y="1759.50"></text></g><g><title>prepare_scan_count (8,160,841 samples, 0.01%)</title><rect x="34.9786%" y="1573" width="0.0102%" height="15" fill="rgb(230,229,49)" fg:x="28118330736" fg:w="8160841"/><text x="35.2286%" y="1583.50"></text></g><g><title>mem_cgroup_flush_stats (8,160,841 samples, 0.01%)</title><rect x="34.9786%" y="1557" width="0.0102%" height="15" fill="rgb(238,70,47)" fg:x="28118330736" fg:w="8160841"/><text x="35.2286%" y="1567.50"></text></g><g><title>cgroup_rstat_flush (8,160,841 samples, 0.01%)</title><rect x="34.9786%" y="1541" width="0.0102%" height="15" fill="rgb(231,160,17)" fg:x="28118330736" fg:w="8160841"/><text x="35.2286%" y="1551.50"></text></g><g><title>__mod_memcg_lruvec_state (22,159,071 samples, 0.03%)</title><rect x="35.0135%" y="1477" width="0.0276%" height="15" fill="rgb(218,68,53)" fg:x="28146374982" fg:w="22159071"/><text x="35.2635%" y="1487.50"></text></g><g><title>__mod_lruvec_state (25,001,825 samples, 0.03%)</title><rect x="35.0135%" y="1493" width="0.0311%" height="15" fill="rgb(236,111,10)" fg:x="28146374982" fg:w="25001825"/><text x="35.2635%" y="1503.50"></text></g><g><title>do_raw_spin_lock (17,850,836 samples, 0.02%)</title><rect x="35.0569%" y="1461" width="0.0222%" height="15" fill="rgb(224,34,41)" fg:x="28181291177" fg:w="17850836"/><text x="35.3069%" y="1471.50"></text></g><g><title>native_queued_spin_lock_slowpath (17,058,645 samples, 0.02%)</title><rect x="35.0579%" y="1445" width="0.0212%" height="15" fill="rgb(241,118,19)" fg:x="28182083368" fg:w="17058645"/><text x="35.3079%" y="1455.50"></text></g><g><title>folio_lruvec_lock_irq (27,159,674 samples, 0.03%)</title><rect x="35.0551%" y="1493" width="0.0338%" height="15" fill="rgb(238,129,25)" fg:x="28179843249" fg:w="27159674"/><text x="35.3051%" y="1503.50"></text></g><g><title>_raw_spin_lock_irq (25,711,746 samples, 0.03%)</title><rect x="35.0569%" y="1477" width="0.0320%" height="15" fill="rgb(238,22,31)" fg:x="28181291177" fg:w="25711746"/><text x="35.3069%" y="1487.50"></text></g><g><title>page_cache_ext_isolate_folio (67,662,496 samples, 0.08%)</title><rect x="35.0096%" y="1509" width="0.0842%" height="15" fill="rgb(222,174,48)" fg:x="28143241695" fg:w="67662496"/><text x="35.2596%" y="1519.50"></text></g><g><title>do_raw_spin_lock (18,674,392 samples, 0.02%)</title><rect x="35.1093%" y="1413" width="0.0232%" height="15" fill="rgb(206,152,40)" fg:x="28223404948" fg:w="18674392"/><text x="35.3593%" y="1423.50"></text></g><g><title>native_queued_spin_lock_slowpath (17,885,551 samples, 0.02%)</title><rect x="35.1103%" y="1397" width="0.0222%" height="15" fill="rgb(218,99,54)" fg:x="28224193789" fg:w="17885551"/><text x="35.3603%" y="1407.50"></text></g><g><title>folio_lruvec_lock_irqsave (24,079,463 samples, 0.03%)</title><rect x="35.1083%" y="1445" width="0.0300%" height="15" fill="rgb(220,174,26)" fg:x="28222611563" fg:w="24079463"/><text x="35.3583%" y="1455.50"></text></g><g><title>_raw_spin_lock_irqsave (24,079,463 samples, 0.03%)</title><rect x="35.1083%" y="1429" width="0.0300%" height="15" fill="rgb(245,116,9)" fg:x="28222611563" fg:w="24079463"/><text x="35.3583%" y="1439.50"></text></g><g><title>lock_acquire (10,013,186 samples, 0.01%)</title><rect x="35.1538%" y="1429" width="0.0125%" height="15" fill="rgb(209,72,35)" fg:x="28259177883" fg:w="10013186"/><text x="35.4038%" y="1439.50"></text></g><g><title>lru_add_fn (31,060,240 samples, 0.04%)</title><rect x="35.1392%" y="1445" width="0.0386%" height="15" fill="rgb(226,126,21)" fg:x="28247449717" fg:w="31060240"/><text x="35.3892%" y="1455.50"></text></g><g><title>folio_batch_move_lru (63,710,587 samples, 0.08%)</title><rect x="35.1035%" y="1461" width="0.0793%" height="15" fill="rgb(227,192,1)" fg:x="28218724067" fg:w="63710587"/><text x="35.3535%" y="1471.50"></text></g><g><title>folio_add_lru (76,896,282 samples, 0.10%)</title><rect x="35.0996%" y="1477" width="0.0957%" height="15" fill="rgb(237,180,29)" fg:x="28215630794" fg:w="76896282"/><text x="35.3496%" y="1487.50"></text></g><g><title>do_raw_write_lock (1,218,027,333 samples, 1.52%)</title><rect x="35.2618%" y="1381" width="1.5152%" height="15" fill="rgb(230,197,35)" fg:x="28345968026" fg:w="1218027333"/><text x="35.5118%" y="1391.50"></text></g><g><title>queued_write_lock_slowpath (1,217,228,819 samples, 1.51%)</title><rect x="35.2628%" y="1365" width="1.5142%" height="15" fill="rgb(246,193,31)" fg:x="28346766540" fg:w="1217228819"/><text x="35.5128%" y="1375.50"></text></g><g><title>native_queued_spin_lock_slowpath (641,682,629 samples, 0.80%)</title><rect x="35.9787%" y="1349" width="0.7982%" height="15" fill="rgb(241,36,4)" fg:x="28922312730" fg:w="641682629"/><text x="36.2287%" y="1359.50"></text></g><g><title>_raw_write_lock (1,222,698,416 samples, 1.52%)</title><rect x="35.2618%" y="1397" width="1.5210%" height="15" fill="rgb(241,130,17)" fg:x="28345968026" fg:w="1222698416"/><text x="35.5118%" y="1407.50"></text></g><g><title>cache_ext_ds_registry_write_lock (1,223,480,177 samples, 1.52%)</title><rect x="35.2618%" y="1413" width="1.5220%" height="15" fill="rgb(206,137,32)" fg:x="28345968026" fg:w="1223480177"/><text x="35.5118%" y="1423.50"></text></g><g><title>__unfreeze_partials (12,530,759 samples, 0.02%)</title><rect x="36.7906%" y="1333" width="0.0156%" height="15" fill="rgb(237,228,51)" fg:x="29574973569" fg:w="12530759"/><text x="37.0406%" y="1343.50"></text></g><g><title>put_cpu_partial (13,327,507 samples, 0.02%)</title><rect x="36.7906%" y="1349" width="0.0166%" height="15" fill="rgb(243,6,42)" fg:x="29574973569" fg:w="13327507"/><text x="37.0406%" y="1359.50"></text></g><g><title>__slab_free (17,267,483 samples, 0.02%)</title><rect x="36.7886%" y="1365" width="0.0215%" height="15" fill="rgb(251,74,28)" fg:x="29573371714" fg:w="17267483"/><text x="37.0386%" y="1375.50"></text></g><g><title>cache_ext_list_node_free (21,200,874 samples, 0.03%)</title><rect x="36.7857%" y="1413" width="0.0264%" height="15" fill="rgb(218,20,49)" fg:x="29571035282" fg:w="21200874"/><text x="37.0357%" y="1423.50"></text></g><g><title>kfree (21,200,874 samples, 0.03%)</title><rect x="36.7857%" y="1397" width="0.0264%" height="15" fill="rgb(238,28,14)" fg:x="29571035282" fg:w="21200874"/><text x="37.0357%" y="1407.50"></text></g><g><title>__kmem_cache_free (18,864,442 samples, 0.02%)</title><rect x="36.7886%" y="1381" width="0.0235%" height="15" fill="rgb(229,40,46)" fg:x="29573371714" fg:w="18864442"/><text x="37.0386%" y="1391.50"></text></g><g><title>valid_folios_del (1,258,666,021 samples, 1.57%)</title><rect x="35.2483%" y="1429" width="1.5658%" height="15" fill="rgb(244,195,20)" fg:x="28335138180" fg:w="1258666021"/><text x="35.4983%" y="1439.50"></text></g><g><title>__filemap_remove_folio (1,290,393,773 samples, 1.61%)</title><rect x="35.2361%" y="1445" width="1.6052%" height="15" fill="rgb(253,56,35)" fg:x="28325309123" fg:w="1290393773"/><text x="35.4861%" y="1455.50"></text></g><g><title>xas_store (17,179,320 samples, 0.02%)</title><rect x="36.8199%" y="1429" width="0.0214%" height="15" fill="rgb(210,149,44)" fg:x="29598523576" fg:w="17179320"/><text x="37.0699%" y="1439.50"></text></g><g><title>xas_create (12,419,530 samples, 0.02%)</title><rect x="36.8259%" y="1413" width="0.0154%" height="15" fill="rgb(240,135,12)" fg:x="29603283366" fg:w="12419530"/><text x="37.0759%" y="1423.50"></text></g><g><title>do_raw_spin_lock (134,654,354 samples, 0.17%)</title><rect x="36.8413%" y="1429" width="0.1675%" height="15" fill="rgb(251,24,50)" fg:x="29615702896" fg:w="134654354"/><text x="37.0913%" y="1439.50"></text></g><g><title>native_queued_spin_lock_slowpath (128,588,330 samples, 0.16%)</title><rect x="36.8489%" y="1413" width="0.1600%" height="15" fill="rgb(243,200,47)" fg:x="29621768920" fg:w="128588330"/><text x="37.0989%" y="1423.50"></text></g><g><title>_raw_spin_lock (139,329,620 samples, 0.17%)</title><rect x="36.8413%" y="1445" width="0.1733%" height="15" fill="rgb(224,166,26)" fg:x="29615702896" fg:w="139329620"/><text x="37.0913%" y="1455.50"></text></g><g><title>_raw_spin_unlock_irq (10,837,570 samples, 0.01%)</title><rect x="37.0271%" y="1445" width="0.0135%" height="15" fill="rgb(233,0,47)" fg:x="29765074223" fg:w="10837570"/><text x="37.2771%" y="1455.50"></text></g><g><title>__remove_mapping (1,455,969,443 samples, 1.81%)</title><rect x="35.2342%" y="1461" width="1.8112%" height="15" fill="rgb(253,80,5)" fg:x="28323760225" fg:w="1455969443"/><text x="35.4842%" y="1471.50">_..</text></g><g><title>memcg_slab_free_hook (8,326,148 samples, 0.01%)</title><rect x="37.0580%" y="1365" width="0.0104%" height="15" fill="rgb(214,133,25)" fg:x="29789919511" fg:w="8326148"/><text x="37.3080%" y="1375.50"></text></g><g><title>kmem_cache_free (15,280,268 samples, 0.02%)</title><rect x="37.0531%" y="1381" width="0.0190%" height="15" fill="rgb(209,27,14)" fg:x="29785995579" fg:w="15280268"/><text x="37.3031%" y="1391.50"></text></g><g><title>filemap_release_folio (21,524,298 samples, 0.03%)</title><rect x="37.0463%" y="1461" width="0.0268%" height="15" fill="rgb(219,102,51)" fg:x="29780514127" fg:w="21524298"/><text x="37.2963%" y="1471.50"></text></g><g><title>ext4_release_folio (21,524,298 samples, 0.03%)</title><rect x="37.0463%" y="1445" width="0.0268%" height="15" fill="rgb(237,18,16)" fg:x="29780514127" fg:w="21524298"/><text x="37.2963%" y="1455.50"></text></g><g><title>jbd2_journal_try_to_free_buffers (20,727,312 samples, 0.03%)</title><rect x="37.0473%" y="1429" width="0.0258%" height="15" fill="rgb(241,85,17)" fg:x="29781311113" fg:w="20727312"/><text x="37.2973%" y="1439.50"></text></g><g><title>try_to_free_buffers (17,604,857 samples, 0.02%)</title><rect x="37.0512%" y="1413" width="0.0219%" height="15" fill="rgb(236,90,42)" fg:x="29784433568" fg:w="17604857"/><text x="37.3012%" y="1423.50"></text></g><g><title>free_buffer_head (16,841,581 samples, 0.02%)</title><rect x="37.0522%" y="1397" width="0.0210%" height="15" fill="rgb(249,57,21)" fg:x="29785196844" fg:w="16841581"/><text x="37.3022%" y="1407.50"></text></g><g><title>free_unref_page_list (11,484,626 samples, 0.01%)</title><rect x="37.0731%" y="1461" width="0.0143%" height="15" fill="rgb(243,12,36)" fg:x="29802038425" fg:w="11484626"/><text x="37.3231%" y="1471.50"></text></g><g><title>lock_acquire (10,637,880 samples, 0.01%)</title><rect x="37.0874%" y="1461" width="0.0132%" height="15" fill="rgb(253,128,47)" fg:x="29813523051" fg:w="10637880"/><text x="37.3374%" y="1471.50"></text></g><g><title>reclaim_pages (1,620,080,476 samples, 2.02%)</title><rect x="35.0938%" y="1509" width="2.0153%" height="15" fill="rgb(207,33,20)" fg:x="28210904191" fg:w="1620080476"/><text x="35.3438%" y="1519.50">r..</text></g><g><title>reclaim_folio_list (1,618,499,222 samples, 2.01%)</title><rect x="35.0957%" y="1493" width="2.0134%" height="15" fill="rgb(233,215,35)" fg:x="28212485445" fg:w="1618499222"/><text x="35.3457%" y="1503.50">r..</text></g><g><title>shrink_folio_list (1,537,671,914 samples, 1.91%)</title><rect x="35.1963%" y="1477" width="1.9128%" height="15" fill="rgb(249,188,52)" fg:x="28293312753" fg:w="1537671914"/><text x="35.4463%" y="1487.50">s..</text></g><g><title>__page_cache_ext_isolate_and_reclaim (1,796,463,084 samples, 2.23%)</title><rect x="34.9888%" y="1525" width="2.2348%" height="15" fill="rgb(225,12,32)" fg:x="28126491577" fg:w="1796463084"/><text x="35.2388%" y="1535.50">_..</text></g><g><title>valid_folios_exists_unlocked (91,969,994 samples, 0.11%)</title><rect x="37.1091%" y="1509" width="0.1144%" height="15" fill="rgb(247,98,14)" fg:x="29830984667" fg:w="91969994"/><text x="37.3591%" y="1519.50"></text></g><g><title>page_cache_ext_isolate_and_reclaim (1,799,440,713 samples, 2.24%)</title><rect x="34.9888%" y="1541" width="2.2385%" height="15" fill="rgb(247,219,48)" fg:x="28126491577" fg:w="1799440713"/><text x="35.2388%" y="1551.50">p..</text></g><g><title>do_raw_write_lock (147,469,343 samples, 0.18%)</title><rect x="37.2442%" y="1413" width="0.1834%" height="15" fill="rgb(253,60,48)" fg:x="29939596790" fg:w="147469343"/><text x="37.4942%" y="1423.50"></text></g><g><title>queued_write_lock_slowpath (147,469,343 samples, 0.18%)</title><rect x="37.2442%" y="1397" width="0.1834%" height="15" fill="rgb(245,15,52)" fg:x="29939596790" fg:w="147469343"/><text x="37.4942%" y="1407.50"></text></g><g><title>native_queued_spin_lock_slowpath (60,583,441 samples, 0.08%)</title><rect x="37.3523%" y="1381" width="0.0754%" height="15" fill="rgb(220,133,28)" fg:x="30026482692" fg:w="60583441"/><text x="37.6023%" y="1391.50"></text></g><g><title>cache_ext_ds_registry_write_lock (148,205,418 samples, 0.18%)</title><rect x="37.2442%" y="1445" width="0.1844%" height="15" fill="rgb(217,180,4)" fg:x="29939596790" fg:w="148205418"/><text x="37.4942%" y="1455.50"></text></g><g><title>_raw_write_lock (148,205,418 samples, 0.18%)</title><rect x="37.2442%" y="1429" width="0.1844%" height="15" fill="rgb(251,24,1)" fg:x="29939596790" fg:w="148205418"/><text x="37.4942%" y="1439.50"></text></g><g><title>valid_folios_del (157,341,228 samples, 0.20%)</title><rect x="37.2405%" y="1461" width="0.1957%" height="15" fill="rgb(212,185,49)" fg:x="29936598671" fg:w="157341228"/><text x="37.4905%" y="1471.50"></text></g><g><title>__filemap_remove_folio (165,019,015 samples, 0.21%)</title><rect x="37.2357%" y="1477" width="0.2053%" height="15" fill="rgb(215,175,22)" fg:x="29932755266" fg:w="165019015"/><text x="37.4857%" y="1487.50"></text></g><g><title>_raw_spin_lock (294,737,510 samples, 0.37%)</title><rect x="37.4410%" y="1477" width="0.3666%" height="15" fill="rgb(250,205,14)" fg:x="30097774281" fg:w="294737510"/><text x="37.6910%" y="1487.50"></text></g><g><title>do_raw_spin_lock (294,737,510 samples, 0.37%)</title><rect x="37.4410%" y="1461" width="0.3666%" height="15" fill="rgb(225,211,22)" fg:x="30097774281" fg:w="294737510"/><text x="37.6910%" y="1471.50"></text></g><g><title>native_queued_spin_lock_slowpath (294,737,510 samples, 0.37%)</title><rect x="37.4410%" y="1445" width="0.3666%" height="15" fill="rgb(251,179,42)" fg:x="30097774281" fg:w="294737510"/><text x="37.6910%" y="1455.50"></text></g><g><title>__remove_mapping (465,901,642 samples, 0.58%)</title><rect x="37.2338%" y="1493" width="0.5796%" height="15" fill="rgb(208,216,51)" fg:x="29931223533" fg:w="465901642"/><text x="37.4838%" y="1503.50"></text></g><g><title>filemap_release_folio (17,145,294 samples, 0.02%)</title><rect x="37.8143%" y="1493" width="0.0213%" height="15" fill="rgb(235,36,11)" fg:x="30397887695" fg:w="17145294"/><text x="38.0643%" y="1503.50"></text></g><g><title>ext4_release_folio (17,145,294 samples, 0.02%)</title><rect x="37.8143%" y="1477" width="0.0213%" height="15" fill="rgb(213,189,28)" fg:x="30397887695" fg:w="17145294"/><text x="38.0643%" y="1487.50"></text></g><g><title>jbd2_journal_try_to_free_buffers (16,350,314 samples, 0.02%)</title><rect x="37.8153%" y="1461" width="0.0203%" height="15" fill="rgb(227,203,42)" fg:x="30398682675" fg:w="16350314"/><text x="38.0653%" y="1471.50"></text></g><g><title>try_to_free_buffers (12,489,181 samples, 0.02%)</title><rect x="37.8201%" y="1445" width="0.0155%" height="15" fill="rgb(244,72,36)" fg:x="30402543808" fg:w="12489181"/><text x="38.0701%" y="1455.50"></text></g><g><title>free_buffer_head (9,314,420 samples, 0.01%)</title><rect x="37.8241%" y="1429" width="0.0116%" height="15" fill="rgb(213,53,17)" fg:x="30405718569" fg:w="9314420"/><text x="38.0741%" y="1439.50"></text></g><g><title>kmem_cache_free (8,517,873 samples, 0.01%)</title><rect x="37.8251%" y="1413" width="0.0106%" height="15" fill="rgb(207,167,3)" fg:x="30406515116" fg:w="8517873"/><text x="38.0751%" y="1423.50"></text></g><g><title>shrink_lruvec (2,289,324,778 samples, 2.85%)</title><rect x="34.9888%" y="1557" width="2.8479%" height="15" fill="rgb(216,98,30)" fg:x="28126491577" fg:w="2289324778"/><text x="35.2388%" y="1567.50">sh..</text></g><g><title>shrink_list (489,884,065 samples, 0.61%)</title><rect x="37.2272%" y="1541" width="0.6094%" height="15" fill="rgb(236,123,15)" fg:x="29925932290" fg:w="489884065"/><text x="37.4772%" y="1551.50"></text></g><g><title>shrink_inactive_list (489,884,065 samples, 0.61%)</title><rect x="37.2272%" y="1525" width="0.6094%" height="15" fill="rgb(248,81,50)" fg:x="29925932290" fg:w="489884065"/><text x="37.4772%" y="1535.50"></text></g><g><title>shrink_folio_list (486,010,492 samples, 0.60%)</title><rect x="37.2320%" y="1509" width="0.6046%" height="15" fill="rgb(214,120,4)" fg:x="29929805863" fg:w="486010492"/><text x="37.4820%" y="1519.50"></text></g><g><title>shrink_node_memcgs (2,296,281,089 samples, 2.86%)</title><rect x="34.9888%" y="1573" width="2.8565%" height="15" fill="rgb(208,179,34)" fg:x="28126491577" fg:w="2296281089"/><text x="35.2388%" y="1583.50">sh..</text></g><g><title>charge_memcg (2,325,514,279 samples, 2.89%)</title><rect x="34.9533%" y="1669" width="2.8929%" height="15" fill="rgb(227,140,7)" fg:x="28098025125" fg:w="2325514279"/><text x="35.2033%" y="1679.50">ch..</text></g><g><title>try_charge_memcg (2,315,871,334 samples, 2.88%)</title><rect x="34.9653%" y="1653" width="2.8809%" height="15" fill="rgb(214,22,6)" fg:x="28107668070" fg:w="2315871334"/><text x="35.2153%" y="1663.50">tr..</text></g><g><title>try_to_free_mem_cgroup_pages (2,305,208,668 samples, 2.87%)</title><rect x="34.9786%" y="1637" width="2.8676%" height="15" fill="rgb(207,137,27)" fg:x="28118330736" fg:w="2305208668"/><text x="35.2286%" y="1647.50">tr..</text></g><g><title>do_try_to_free_pages (2,305,208,668 samples, 2.87%)</title><rect x="34.9786%" y="1621" width="2.8676%" height="15" fill="rgb(210,8,46)" fg:x="28118330736" fg:w="2305208668"/><text x="35.2286%" y="1631.50">do..</text></g><g><title>shrink_zones (2,305,208,668 samples, 2.87%)</title><rect x="34.9786%" y="1605" width="2.8676%" height="15" fill="rgb(240,16,54)" fg:x="28118330736" fg:w="2305208668"/><text x="35.2286%" y="1615.50">sh..</text></g><g><title>shrink_node (2,305,208,668 samples, 2.87%)</title><rect x="34.9786%" y="1589" width="2.8676%" height="15" fill="rgb(211,209,29)" fg:x="28118330736" fg:w="2305208668"/><text x="35.2286%" y="1599.50">sh..</text></g><g><title>__mem_cgroup_charge (2,335,650,711 samples, 2.91%)</title><rect x="34.9533%" y="1685" width="2.9055%" height="15" fill="rgb(226,228,24)" fg:x="28098025125" fg:w="2335650711"/><text x="35.2033%" y="1695.50">__..</text></g><g><title>asm_sysvec_apic_timer_interrupt (10,983,563 samples, 0.01%)</title><rect x="37.8715%" y="1685" width="0.0137%" height="15" fill="rgb(222,84,9)" fg:x="30443826748" fg:w="10983563"/><text x="38.1215%" y="1695.50"></text></g><g><title>sysvec_apic_timer_interrupt (10,983,563 samples, 0.01%)</title><rect x="37.8715%" y="1669" width="0.0137%" height="15" fill="rgb(234,203,30)" fg:x="30443826748" fg:w="10983563"/><text x="38.1215%" y="1679.50"></text></g><g><title>get_partial_node (9,931,668 samples, 0.01%)</title><rect x="37.9015%" y="1637" width="0.0124%" height="15" fill="rgb(238,109,14)" fg:x="30467931501" fg:w="9931668"/><text x="38.1515%" y="1647.50"></text></g><g><title>___slab_alloc (23,752,903 samples, 0.03%)</title><rect x="37.8920%" y="1653" width="0.0295%" height="15" fill="rgb(233,206,34)" fg:x="30460296654" fg:w="23752903"/><text x="38.1420%" y="1663.50"></text></g><g><title>__kmem_cache_alloc_node (32,849,378 samples, 0.04%)</title><rect x="37.8871%" y="1669" width="0.0409%" height="15" fill="rgb(220,167,47)" fg:x="30456384425" fg:w="32849378"/><text x="38.1371%" y="1679.50"></text></g><g><title>kmalloc_trace (34,425,515 samples, 0.04%)</title><rect x="37.8871%" y="1685" width="0.0428%" height="15" fill="rgb(238,105,10)" fg:x="30456384425" fg:w="34425515"/><text x="38.1371%" y="1695.50"></text></g><g><title>_raw_spin_lock (8,076,317 samples, 0.01%)</title><rect x="37.9484%" y="1669" width="0.0100%" height="15" fill="rgb(213,227,17)" fg:x="30505677678" fg:w="8076317"/><text x="38.1984%" y="1679.50"></text></g><g><title>___slab_alloc (15,820,729 samples, 0.02%)</title><rect x="37.9654%" y="1621" width="0.0197%" height="15" fill="rgb(217,132,38)" fg:x="30519358097" fg:w="15820729"/><text x="38.2154%" y="1631.50"></text></g><g><title>cache_ext_list_node_alloc (23,101,595 samples, 0.03%)</title><rect x="37.9603%" y="1669" width="0.0287%" height="15" fill="rgb(242,146,4)" fg:x="30515216146" fg:w="23101595"/><text x="38.2103%" y="1679.50"></text></g><g><title>kmalloc_trace (23,101,595 samples, 0.03%)</title><rect x="37.9603%" y="1653" width="0.0287%" height="15" fill="rgb(212,61,9)" fg:x="30515216146" fg:w="23101595"/><text x="38.2103%" y="1663.50"></text></g><g><title>__kmem_cache_alloc_node (22,304,027 samples, 0.03%)</title><rect x="37.9613%" y="1637" width="0.0277%" height="15" fill="rgb(247,126,22)" fg:x="30516013714" fg:w="22304027"/><text x="38.2113%" y="1647.50"></text></g><g><title>valid_folios_add (47,466,100 samples, 0.06%)</title><rect x="37.9309%" y="1685" width="0.0590%" height="15" fill="rgb(220,196,2)" fg:x="30491612969" fg:w="47466100"/><text x="38.1809%" y="1695.50"></text></g><g><title>xa_get_order (9,137,429 samples, 0.01%)</title><rect x="37.9900%" y="1685" width="0.0114%" height="15" fill="rgb(208,46,4)" fg:x="30539079069" fg:w="9137429"/><text x="38.2400%" y="1695.50"></text></g><g><title>__filemap_add_folio (2,456,792,166 samples, 3.06%)</title><rect x="34.9499%" y="1701" width="3.0562%" height="15" fill="rgb(252,104,46)" fg:x="28095286635" fg:w="2456792166"/><text x="35.1999%" y="1711.50">__f..</text></g><g><title>lru_add_fn (10,012,507 samples, 0.01%)</title><rect x="38.0159%" y="1669" width="0.0125%" height="15" fill="rgb(237,152,48)" fg:x="30559894801" fg:w="10012507"/><text x="38.2659%" y="1679.50"></text></g><g><title>folio_batch_move_lru (17,952,300 samples, 0.02%)</title><rect x="38.0070%" y="1685" width="0.0223%" height="15" fill="rgb(221,59,37)" fg:x="30552749564" fg:w="17952300"/><text x="38.2570%" y="1695.50"></text></g><g><title>folio_add_lru (20,215,635 samples, 0.03%)</title><rect x="38.0070%" y="1701" width="0.0251%" height="15" fill="rgb(209,202,51)" fg:x="30552749564" fg:w="20215635"/><text x="38.2570%" y="1711.50"></text></g><g><title>filemap_add_folio (2,482,229,702 samples, 3.09%)</title><rect x="34.9499%" y="1717" width="3.0878%" height="15" fill="rgb(228,81,30)" fg:x="28095286635" fg:w="2482229702"/><text x="35.1999%" y="1727.50">fil..</text></g><g><title>clear_page_rep (23,242,793 samples, 0.03%)</title><rect x="38.0421%" y="1637" width="0.0289%" height="15" fill="rgb(227,42,39)" fg:x="30581019797" fg:w="23242793"/><text x="38.2921%" y="1647.50"></text></g><g><title>rmqueue (11,670,463 samples, 0.01%)</title><rect x="38.0711%" y="1637" width="0.0145%" height="15" fill="rgb(221,26,2)" fg:x="30604262590" fg:w="11670463"/><text x="38.3211%" y="1647.50"></text></g><g><title>rmqueue_pcplist (10,881,220 samples, 0.01%)</title><rect x="38.0720%" y="1621" width="0.0135%" height="15" fill="rgb(254,61,31)" fg:x="30605051833" fg:w="10881220"/><text x="38.3220%" y="1631.50"></text></g><g><title>get_page_from_freelist (37,309,318 samples, 0.05%)</title><rect x="38.0402%" y="1653" width="0.0464%" height="15" fill="rgb(222,173,38)" fg:x="30579421784" fg:w="37309318"/><text x="38.2902%" y="1663.50"></text></g><g><title>filemap_alloc_folio (45,258,677 samples, 0.06%)</title><rect x="38.0378%" y="1717" width="0.0563%" height="15" fill="rgb(218,50,12)" fg:x="30577516337" fg:w="45258677"/><text x="38.2878%" y="1727.50"></text></g><g><title>folio_alloc (44,888,548 samples, 0.06%)</title><rect x="38.0382%" y="1701" width="0.0558%" height="15" fill="rgb(223,88,40)" fg:x="30577886466" fg:w="44888548"/><text x="38.2882%" y="1711.50"></text></g><g><title>alloc_pages (44,888,548 samples, 0.06%)</title><rect x="38.0382%" y="1685" width="0.0558%" height="15" fill="rgb(237,54,19)" fg:x="30577886466" fg:w="44888548"/><text x="38.2882%" y="1695.50"></text></g><g><title>__alloc_pages (44,092,748 samples, 0.05%)</title><rect x="38.0392%" y="1669" width="0.0549%" height="15" fill="rgb(251,129,25)" fg:x="30578682266" fg:w="44092748"/><text x="38.2892%" y="1679.50"></text></g><g><title>ata_scsi_queuecmd (8,621,176 samples, 0.01%)</title><rect x="38.1129%" y="1573" width="0.0107%" height="15" fill="rgb(238,97,19)" fg:x="30637890839" fg:w="8621176"/><text x="38.3629%" y="1583.50"></text></g><g><title>blk_mq_dispatch_rq_list (14,144,716 samples, 0.02%)</title><rect x="38.1109%" y="1605" width="0.0176%" height="15" fill="rgb(240,169,18)" fg:x="30636297845" fg:w="14144716"/><text x="38.3609%" y="1615.50"></text></g><g><title>scsi_queue_rq (14,144,716 samples, 0.02%)</title><rect x="38.1109%" y="1589" width="0.0176%" height="15" fill="rgb(230,187,49)" fg:x="30636297845" fg:w="14144716"/><text x="38.3609%" y="1599.50"></text></g><g><title>blk_mq_run_hw_queue (15,706,001 samples, 0.02%)</title><rect x="38.1099%" y="1653" width="0.0195%" height="15" fill="rgb(209,44,26)" fg:x="30635502847" fg:w="15706001"/><text x="38.3599%" y="1663.50"></text></g><g><title>blk_mq_sched_dispatch_requests (15,706,001 samples, 0.02%)</title><rect x="38.1099%" y="1637" width="0.0195%" height="15" fill="rgb(244,0,6)" fg:x="30635502847" fg:w="15706001"/><text x="38.3599%" y="1647.50"></text></g><g><title>__blk_mq_sched_dispatch_requests (15,706,001 samples, 0.02%)</title><rect x="38.1099%" y="1621" width="0.0195%" height="15" fill="rgb(248,18,21)" fg:x="30635502847" fg:w="15706001"/><text x="38.3599%" y="1631.50"></text></g><g><title>blk_finish_plug (18,015,317 samples, 0.02%)</title><rect x="38.1099%" y="1701" width="0.0224%" height="15" fill="rgb(245,180,19)" fg:x="30635502847" fg:w="18015317"/><text x="38.3599%" y="1711.50"></text></g><g><title>__blk_flush_plug (18,015,317 samples, 0.02%)</title><rect x="38.1099%" y="1685" width="0.0224%" height="15" fill="rgb(252,118,36)" fg:x="30635502847" fg:w="18015317"/><text x="38.3599%" y="1695.50"></text></g><g><title>blk_mq_flush_plug_list (18,015,317 samples, 0.02%)</title><rect x="38.1099%" y="1669" width="0.0224%" height="15" fill="rgb(210,224,19)" fg:x="30635502847" fg:w="18015317"/><text x="38.3599%" y="1679.50"></text></g><g><title>read_pages (44,562,804 samples, 0.06%)</title><rect x="38.0960%" y="1717" width="0.0554%" height="15" fill="rgb(218,30,24)" fg:x="30624292217" fg:w="44562804"/><text x="38.3460%" y="1727.50"></text></g><g><title>ext4_readahead (15,336,857 samples, 0.02%)</title><rect x="38.1323%" y="1701" width="0.0191%" height="15" fill="rgb(219,75,50)" fg:x="30653518164" fg:w="15336857"/><text x="38.3823%" y="1711.50"></text></g><g><title>ext4_mpage_readpages (15,336,857 samples, 0.02%)</title><rect x="38.1323%" y="1685" width="0.0191%" height="15" fill="rgb(234,72,50)" fg:x="30653518164" fg:w="15336857"/><text x="38.3823%" y="1695.50"></text></g><g><title>__lock_acquire (75,649,394 samples, 0.09%)</title><rect x="38.2054%" y="1685" width="0.0941%" height="15" fill="rgb(219,100,48)" fg:x="30712234123" fg:w="75649394"/><text x="38.4554%" y="1695.50"></text></g><g><title>lock_acquire (125,630,151 samples, 0.16%)</title><rect x="38.1653%" y="1701" width="0.1563%" height="15" fill="rgb(253,5,41)" fg:x="30680008921" fg:w="125630151"/><text x="38.4153%" y="1711.50"></text></g><g><title>trace_lock_acquire (17,755,555 samples, 0.02%)</title><rect x="38.2995%" y="1685" width="0.0221%" height="15" fill="rgb(247,181,11)" fg:x="30787883517" fg:w="17755555"/><text x="38.5495%" y="1695.50"></text></g><g><title>rcu_is_watching (10,775,827 samples, 0.01%)</title><rect x="38.3082%" y="1669" width="0.0134%" height="15" fill="rgb(222,223,25)" fg:x="30794863245" fg:w="10775827"/><text x="38.5582%" y="1679.50"></text></g><g><title>lock_release (80,703,913 samples, 0.10%)</title><rect x="38.3216%" y="1701" width="0.1004%" height="15" fill="rgb(214,198,28)" fg:x="30805639072" fg:w="80703913"/><text x="38.5716%" y="1711.50"></text></g><g><title>trace_lock_release (32,675,561 samples, 0.04%)</title><rect x="38.3813%" y="1685" width="0.0406%" height="15" fill="rgb(230,46,43)" fg:x="30853667424" fg:w="32675561"/><text x="38.6313%" y="1695.50"></text></g><g><title>rcu_is_watching (20,222,498 samples, 0.03%)</title><rect x="38.3968%" y="1669" width="0.0252%" height="15" fill="rgb(233,65,53)" fg:x="30866120487" fg:w="20222498"/><text x="38.6468%" y="1679.50"></text></g><g><title>xas_load (49,461,198 samples, 0.06%)</title><rect x="38.4238%" y="1701" width="0.0615%" height="15" fill="rgb(221,121,27)" fg:x="30887846916" fg:w="49461198"/><text x="38.6738%" y="1711.50"></text></g><g><title>xas_start (17,782,417 samples, 0.02%)</title><rect x="38.4632%" y="1685" width="0.0221%" height="15" fill="rgb(247,70,47)" fg:x="30919525697" fg:w="17782417"/><text x="38.7132%" y="1695.50"></text></g><g><title>xa_load (269,220,401 samples, 0.33%)</title><rect x="38.1544%" y="1717" width="0.3349%" height="15" fill="rgb(228,85,35)" fg:x="30671237989" fg:w="269220401"/><text x="38.4044%" y="1727.50"></text></g><g><title>page_cache_async_ra (2,883,200,951 samples, 3.59%)</title><rect x="34.9087%" y="1781" width="3.5866%" height="15" fill="rgb(209,50,18)" fg:x="28062146177" fg:w="2883200951"/><text x="35.1587%" y="1791.50">page..</text></g><g><title>ondemand_readahead (2,880,262,715 samples, 3.58%)</title><rect x="34.9124%" y="1765" width="3.5830%" height="15" fill="rgb(250,19,35)" fg:x="28065084413" fg:w="2880262715"/><text x="35.1624%" y="1775.50">onde..</text></g><g><title>page_cache_ra_order (2,863,391,719 samples, 3.56%)</title><rect x="34.9334%" y="1749" width="3.5620%" height="15" fill="rgb(253,107,29)" fg:x="28081955409" fg:w="2863391719"/><text x="35.1834%" y="1759.50">page..</text></g><g><title>page_cache_ra_unbounded (2,863,391,719 samples, 3.56%)</title><rect x="34.9334%" y="1733" width="3.5620%" height="15" fill="rgb(252,179,29)" fg:x="28081955409" fg:w="2863391719"/><text x="35.1834%" y="1743.50">page..</text></g><g><title>__mod_lruvec_state (13,883,924 samples, 0.02%)</title><rect x="38.5334%" y="1493" width="0.0173%" height="15" fill="rgb(238,194,6)" fg:x="30975959531" fg:w="13883924"/><text x="38.7834%" y="1503.50"></text></g><g><title>__mod_memcg_lruvec_state (13,883,924 samples, 0.02%)</title><rect x="38.5334%" y="1477" width="0.0173%" height="15" fill="rgb(238,164,29)" fg:x="30975959531" fg:w="13883924"/><text x="38.7834%" y="1487.50"></text></g><g><title>do_raw_spin_lock (17,148,837 samples, 0.02%)</title><rect x="38.5603%" y="1461" width="0.0213%" height="15" fill="rgb(224,25,9)" fg:x="30997569942" fg:w="17148837"/><text x="38.8103%" y="1471.50"></text></g><g><title>native_queued_spin_lock_slowpath (17,148,837 samples, 0.02%)</title><rect x="38.5603%" y="1445" width="0.0213%" height="15" fill="rgb(244,153,23)" fg:x="30997569942" fg:w="17148837"/><text x="38.8103%" y="1455.50"></text></g><g><title>folio_lruvec_lock_irq (21,731,517 samples, 0.03%)</title><rect x="38.5593%" y="1493" width="0.0270%" height="15" fill="rgb(212,203,14)" fg:x="30996778280" fg:w="21731517"/><text x="38.8093%" y="1503.50"></text></g><g><title>_raw_spin_lock_irq (21,731,517 samples, 0.03%)</title><rect x="38.5593%" y="1477" width="0.0270%" height="15" fill="rgb(220,164,20)" fg:x="30996778280" fg:w="21731517"/><text x="38.8093%" y="1487.50"></text></g><g><title>page_cache_ext_isolate_folio (47,938,148 samples, 0.06%)</title><rect x="38.5286%" y="1509" width="0.0596%" height="15" fill="rgb(222,203,48)" fg:x="30972088869" fg:w="47938148"/><text x="38.7786%" y="1519.50"></text></g><g><title>do_raw_spin_lock (20,200,048 samples, 0.03%)</title><rect x="38.6006%" y="1413" width="0.0251%" height="15" fill="rgb(215,159,22)" fg:x="31029976281" fg:w="20200048"/><text x="38.8506%" y="1423.50"></text></g><g><title>native_queued_spin_lock_slowpath (18,649,115 samples, 0.02%)</title><rect x="38.6026%" y="1397" width="0.0232%" height="15" fill="rgb(216,183,47)" fg:x="31031527214" fg:w="18649115"/><text x="38.8526%" y="1407.50"></text></g><g><title>folio_lruvec_lock_irqsave (20,929,628 samples, 0.03%)</title><rect x="38.6006%" y="1445" width="0.0260%" height="15" fill="rgb(229,195,25)" fg:x="31029976281" fg:w="20929628"/><text x="38.8506%" y="1455.50"></text></g><g><title>_raw_spin_lock_irqsave (20,929,628 samples, 0.03%)</title><rect x="38.6006%" y="1429" width="0.0260%" height="15" fill="rgb(224,132,51)" fg:x="31029976281" fg:w="20929628"/><text x="38.8506%" y="1439.50"></text></g><g><title>lru_add_fn (15,655,501 samples, 0.02%)</title><rect x="38.6267%" y="1445" width="0.0195%" height="15" fill="rgb(240,63,7)" fg:x="31050905909" fg:w="15655501"/><text x="38.8767%" y="1455.50"></text></g><g><title>folio_batch_move_lru (41,316,939 samples, 0.05%)</title><rect x="38.5957%" y="1461" width="0.0514%" height="15" fill="rgb(249,182,41)" fg:x="31026032686" fg:w="41316939"/><text x="38.8457%" y="1471.50"></text></g><g><title>folio_add_lru (47,558,209 samples, 0.06%)</title><rect x="38.5947%" y="1477" width="0.0592%" height="15" fill="rgb(243,47,26)" fg:x="31025233987" fg:w="47558209"/><text x="38.8447%" y="1487.50"></text></g><g><title>do_raw_write_lock (941,862,755 samples, 1.17%)</title><rect x="38.6869%" y="1381" width="1.1717%" height="15" fill="rgb(233,48,2)" fg:x="31099325334" fg:w="941862755"/><text x="38.9369%" y="1391.50"></text></g><g><title>queued_write_lock_slowpath (939,496,162 samples, 1.17%)</title><rect x="38.6898%" y="1365" width="1.1687%" height="15" fill="rgb(244,165,34)" fg:x="31101691927" fg:w="939496162"/><text x="38.9398%" y="1375.50"></text></g><g><title>native_queued_spin_lock_slowpath (596,509,937 samples, 0.74%)</title><rect x="39.1165%" y="1349" width="0.7420%" height="15" fill="rgb(207,89,7)" fg:x="31444678152" fg:w="596509937"/><text x="39.3665%" y="1359.50"></text></g><g><title>cache_ext_ds_registry_write_lock (949,773,622 samples, 1.18%)</title><rect x="38.6869%" y="1413" width="1.1815%" height="15" fill="rgb(244,117,36)" fg:x="31099325334" fg:w="949773622"/><text x="38.9369%" y="1423.50"></text></g><g><title>_raw_write_lock (949,773,622 samples, 1.18%)</title><rect x="38.6869%" y="1397" width="1.1815%" height="15" fill="rgb(226,144,34)" fg:x="31099325334" fg:w="949773622"/><text x="38.9369%" y="1407.50"></text></g><g><title>cache_ext_list_node_free (10,823,594 samples, 0.01%)</title><rect x="39.8703%" y="1413" width="0.0135%" height="15" fill="rgb(213,23,19)" fg:x="32050641813" fg:w="10823594"/><text x="40.1203%" y="1423.50"></text></g><g><title>kfree (10,823,594 samples, 0.01%)</title><rect x="39.8703%" y="1397" width="0.0135%" height="15" fill="rgb(217,75,12)" fg:x="32050641813" fg:w="10823594"/><text x="40.1203%" y="1407.50"></text></g><g><title>valid_folios_del (969,915,946 samples, 1.21%)</title><rect x="38.6839%" y="1429" width="1.2066%" height="15" fill="rgb(224,159,17)" fg:x="31096930145" fg:w="969915946"/><text x="38.9339%" y="1439.50"></text></g><g><title>__filemap_remove_folio (983,868,966 samples, 1.22%)</title><rect x="38.6772%" y="1445" width="1.2239%" height="15" fill="rgb(217,118,1)" fg:x="31091553460" fg:w="983868966"/><text x="38.9272%" y="1455.50"></text></g><g><title>do_raw_spin_lock (133,949,551 samples, 0.17%)</title><rect x="39.9011%" y="1429" width="0.1666%" height="15" fill="rgb(232,180,48)" fg:x="32075422426" fg:w="133949551"/><text x="40.1511%" y="1439.50"></text></g><g><title>native_queued_spin_lock_slowpath (133,198,151 samples, 0.17%)</title><rect x="39.9021%" y="1413" width="0.1657%" height="15" fill="rgb(230,27,33)" fg:x="32076173826" fg:w="133198151"/><text x="40.1521%" y="1423.50"></text></g><g><title>_raw_spin_lock (136,259,566 samples, 0.17%)</title><rect x="39.9011%" y="1445" width="0.1695%" height="15" fill="rgb(205,31,21)" fg:x="32075422426" fg:w="136259566"/><text x="40.1511%" y="1455.50"></text></g><g><title>__remove_mapping (1,137,219,255 samples, 1.41%)</title><rect x="38.6753%" y="1461" width="1.4147%" height="15" fill="rgb(253,59,4)" fg:x="31090018675" fg:w="1137219255"/><text x="38.9253%" y="1471.50"></text></g><g><title>filemap_release_folio (11,717,686 samples, 0.01%)</title><rect x="40.0940%" y="1461" width="0.0146%" height="15" fill="rgb(224,201,9)" fg:x="32230439778" fg:w="11717686"/><text x="40.3440%" y="1471.50"></text></g><g><title>ext4_release_folio (11,717,686 samples, 0.01%)</title><rect x="40.0940%" y="1445" width="0.0146%" height="15" fill="rgb(229,206,30)" fg:x="32230439778" fg:w="11717686"/><text x="40.3440%" y="1455.50"></text></g><g><title>jbd2_journal_try_to_free_buffers (10,156,443 samples, 0.01%)</title><rect x="40.0959%" y="1429" width="0.0126%" height="15" fill="rgb(212,67,47)" fg:x="32232001021" fg:w="10156443"/><text x="40.3459%" y="1439.50"></text></g><g><title>try_to_free_buffers (8,574,278 samples, 0.01%)</title><rect x="40.0979%" y="1413" width="0.0107%" height="15" fill="rgb(211,96,50)" fg:x="32233583186" fg:w="8574278"/><text x="40.3479%" y="1423.50"></text></g><g><title>shrink_folio_list (1,180,126,170 samples, 1.47%)</title><rect x="38.6549%" y="1477" width="1.4681%" height="15" fill="rgb(252,114,18)" fg:x="31073587119" fg:w="1180126170"/><text x="38.9049%" y="1487.50"></text></g><g><title>reclaim_pages (1,234,488,564 samples, 1.54%)</title><rect x="38.5883%" y="1509" width="1.5357%" height="15" fill="rgb(223,58,37)" fg:x="31020027017" fg:w="1234488564"/><text x="38.8383%" y="1519.50"></text></g><g><title>reclaim_folio_list (1,231,478,915 samples, 1.53%)</title><rect x="38.5920%" y="1493" width="1.5319%" height="15" fill="rgb(237,70,4)" fg:x="31023036666" fg:w="1231478915"/><text x="38.8420%" y="1503.50"></text></g><g><title>page_cache_ext_isolate_and_reclaim (1,326,681,886 samples, 1.65%)</title><rect x="38.5170%" y="1541" width="1.6504%" height="15" fill="rgb(244,85,46)" fg:x="30962767790" fg:w="1326681886"/><text x="38.7670%" y="1551.50"></text></g><g><title>__page_cache_ext_isolate_and_reclaim (1,326,681,886 samples, 1.65%)</title><rect x="38.5170%" y="1525" width="1.6504%" height="15" fill="rgb(223,39,52)" fg:x="30962767790" fg:w="1326681886"/><text x="38.7670%" y="1535.50"></text></g><g><title>valid_folios_exists_unlocked (34,934,095 samples, 0.04%)</title><rect x="40.1239%" y="1509" width="0.0435%" height="15" fill="rgb(218,200,14)" fg:x="32254515581" fg:w="34934095"/><text x="40.3739%" y="1519.50"></text></g><g><title>do_raw_write_lock (97,015,262 samples, 0.12%)</title><rect x="40.1752%" y="1413" width="0.1207%" height="15" fill="rgb(208,171,16)" fg:x="32295730424" fg:w="97015262"/><text x="40.4252%" y="1423.50"></text></g><g><title>queued_write_lock_slowpath (97,015,262 samples, 0.12%)</title><rect x="40.1752%" y="1397" width="0.1207%" height="15" fill="rgb(234,200,18)" fg:x="32295730424" fg:w="97015262"/><text x="40.4252%" y="1407.50"></text></g><g><title>native_queued_spin_lock_slowpath (56,291,953 samples, 0.07%)</title><rect x="40.2259%" y="1381" width="0.0700%" height="15" fill="rgb(228,45,11)" fg:x="32336453733" fg:w="56291953"/><text x="40.4759%" y="1391.50"></text></g><g><title>cache_ext_ds_registry_write_lock (97,800,228 samples, 0.12%)</title><rect x="40.1752%" y="1445" width="0.1217%" height="15" fill="rgb(237,182,11)" fg:x="32295730424" fg:w="97800228"/><text x="40.4252%" y="1455.50"></text></g><g><title>_raw_write_lock (97,800,228 samples, 0.12%)</title><rect x="40.1752%" y="1429" width="0.1217%" height="15" fill="rgb(241,175,49)" fg:x="32295730424" fg:w="97800228"/><text x="40.4252%" y="1439.50"></text></g><g><title>valid_folios_del (101,747,283 samples, 0.13%)</title><rect x="40.1742%" y="1461" width="0.1266%" height="15" fill="rgb(247,38,35)" fg:x="32294942321" fg:w="101747283"/><text x="40.4242%" y="1471.50"></text></g><g><title>__filemap_remove_folio (104,092,156 samples, 0.13%)</title><rect x="40.1723%" y="1477" width="0.1295%" height="15" fill="rgb(228,39,49)" fg:x="32293380890" fg:w="104092156"/><text x="40.4223%" y="1487.50"></text></g><g><title>do_raw_spin_lock (199,321,144 samples, 0.25%)</title><rect x="40.3018%" y="1461" width="0.2480%" height="15" fill="rgb(226,101,26)" fg:x="32397473046" fg:w="199321144"/><text x="40.5518%" y="1471.50"></text></g><g><title>native_queued_spin_lock_slowpath (197,785,943 samples, 0.25%)</title><rect x="40.3037%" y="1445" width="0.2460%" height="15" fill="rgb(206,141,19)" fg:x="32399008247" fg:w="197785943"/><text x="40.5537%" y="1455.50"></text></g><g><title>_raw_spin_lock (200,116,398 samples, 0.25%)</title><rect x="40.3018%" y="1477" width="0.2489%" height="15" fill="rgb(211,200,13)" fg:x="32397473046" fg:w="200116398"/><text x="40.5518%" y="1487.50"></text></g><g><title>__remove_mapping (309,620,616 samples, 0.39%)</title><rect x="40.1723%" y="1493" width="0.3852%" height="15" fill="rgb(241,121,6)" fg:x="32293380890" fg:w="309620616"/><text x="40.4223%" y="1503.50"></text></g><g><title>filemap_release_folio (9,295,174 samples, 0.01%)</title><rect x="40.5574%" y="1493" width="0.0116%" height="15" fill="rgb(234,221,29)" fg:x="32603001506" fg:w="9295174"/><text x="40.8074%" y="1503.50"></text></g><g><title>ext4_release_folio (9,295,174 samples, 0.01%)</title><rect x="40.5574%" y="1477" width="0.0116%" height="15" fill="rgb(229,136,5)" fg:x="32603001506" fg:w="9295174"/><text x="40.8074%" y="1487.50"></text></g><g><title>jbd2_journal_try_to_free_buffers (9,295,174 samples, 0.01%)</title><rect x="40.5574%" y="1461" width="0.0116%" height="15" fill="rgb(238,36,11)" fg:x="32603001506" fg:w="9295174"/><text x="40.8074%" y="1471.50"></text></g><g><title>shrink_lruvec (1,650,311,323 samples, 2.05%)</title><rect x="38.5170%" y="1557" width="2.0530%" height="15" fill="rgb(251,55,41)" fg:x="30962767790" fg:w="1650311323"/><text x="38.7670%" y="1567.50">s..</text></g><g><title>shrink_list (323,629,437 samples, 0.40%)</title><rect x="40.1674%" y="1541" width="0.4026%" height="15" fill="rgb(242,34,40)" fg:x="32289449676" fg:w="323629437"/><text x="40.4174%" y="1551.50"></text></g><g><title>shrink_inactive_list (322,832,006 samples, 0.40%)</title><rect x="40.1684%" y="1525" width="0.4016%" height="15" fill="rgb(215,42,17)" fg:x="32290247107" fg:w="322832006"/><text x="40.4184%" y="1535.50"></text></g><g><title>shrink_folio_list (321,246,986 samples, 0.40%)</title><rect x="40.1704%" y="1509" width="0.3996%" height="15" fill="rgb(207,44,46)" fg:x="32291832127" fg:w="321246986"/><text x="40.4204%" y="1519.50"></text></g><g><title>shrink_node_memcgs (1,656,632,966 samples, 2.06%)</title><rect x="38.5170%" y="1573" width="2.0608%" height="15" fill="rgb(211,206,28)" fg:x="30962767790" fg:w="1656632966"/><text x="38.7670%" y="1583.50">s..</text></g><g><title>charge_memcg (1,669,524,428 samples, 2.08%)</title><rect x="38.5019%" y="1669" width="2.0769%" height="15" fill="rgb(237,167,16)" fg:x="30950619066" fg:w="1669524428"/><text x="38.7519%" y="1679.50">c..</text></g><g><title>try_charge_memcg (1,666,524,239 samples, 2.07%)</title><rect x="38.5056%" y="1653" width="2.0731%" height="15" fill="rgb(233,66,6)" fg:x="30953619255" fg:w="1666524239"/><text x="38.7556%" y="1663.50">t..</text></g><g><title>try_to_free_mem_cgroup_pages (1,662,665,671 samples, 2.07%)</title><rect x="38.5104%" y="1637" width="2.0683%" height="15" fill="rgb(246,123,29)" fg:x="30957477823" fg:w="1662665671"/><text x="38.7604%" y="1647.50">t..</text></g><g><title>do_try_to_free_pages (1,662,665,671 samples, 2.07%)</title><rect x="38.5104%" y="1621" width="2.0683%" height="15" fill="rgb(209,62,40)" fg:x="30957477823" fg:w="1662665671"/><text x="38.7604%" y="1631.50">d..</text></g><g><title>shrink_zones (1,661,913,222 samples, 2.07%)</title><rect x="38.5114%" y="1605" width="2.0674%" height="15" fill="rgb(218,4,25)" fg:x="30958230272" fg:w="1661913222"/><text x="38.7614%" y="1615.50">s..</text></g><g><title>shrink_node (1,661,913,222 samples, 2.07%)</title><rect x="38.5114%" y="1589" width="2.0674%" height="15" fill="rgb(253,91,49)" fg:x="30958230272" fg:w="1661913222"/><text x="38.7614%" y="1599.50">s..</text></g><g><title>__mem_cgroup_charge (1,674,927,806 samples, 2.08%)</title><rect x="38.5009%" y="1685" width="2.0836%" height="15" fill="rgb(228,155,29)" fg:x="30949828648" fg:w="1674927806"/><text x="38.7509%" y="1695.50">_..</text></g><g><title>_raw_spin_lock_irqsave (14,928,751 samples, 0.02%)</title><rect x="40.5966%" y="1429" width="0.0186%" height="15" fill="rgb(243,57,37)" fg:x="32634445624" fg:w="14928751"/><text x="40.8466%" y="1439.50"></text></g><g><title>do_raw_spin_lock (14,928,751 samples, 0.02%)</title><rect x="40.5966%" y="1413" width="0.0186%" height="15" fill="rgb(244,167,17)" fg:x="32634445624" fg:w="14928751"/><text x="40.8466%" y="1423.50"></text></g><g><title>native_queued_spin_lock_slowpath (14,928,751 samples, 0.02%)</title><rect x="40.5966%" y="1397" width="0.0186%" height="15" fill="rgb(207,181,38)" fg:x="32634445624" fg:w="14928751"/><text x="40.8466%" y="1407.50"></text></g><g><title>__folio_end_writeback (16,186,807 samples, 0.02%)</title><rect x="40.5958%" y="1445" width="0.0201%" height="15" fill="rgb(211,8,23)" fg:x="32633796412" fg:w="16186807"/><text x="40.8458%" y="1455.50"></text></g><g><title>asm_sysvec_call_function_single (18,450,374 samples, 0.02%)</title><rect x="40.5958%" y="1685" width="0.0230%" height="15" fill="rgb(235,11,44)" fg:x="32633796412" fg:w="18450374"/><text x="40.8458%" y="1695.50"></text></g><g><title>sysvec_call_function_single (18,450,374 samples, 0.02%)</title><rect x="40.5958%" y="1669" width="0.0230%" height="15" fill="rgb(248,18,52)" fg:x="32633796412" fg:w="18450374"/><text x="40.8458%" y="1679.50"></text></g><g><title>irq_exit_rcu (18,450,374 samples, 0.02%)</title><rect x="40.5958%" y="1653" width="0.0230%" height="15" fill="rgb(208,4,7)" fg:x="32633796412" fg:w="18450374"/><text x="40.8458%" y="1663.50"></text></g><g><title>__irq_exit_rcu (18,450,374 samples, 0.02%)</title><rect x="40.5958%" y="1637" width="0.0230%" height="15" fill="rgb(240,17,39)" fg:x="32633796412" fg:w="18450374"/><text x="40.8458%" y="1647.50"></text></g><g><title>__kprobes_text_end (18,450,374 samples, 0.02%)</title><rect x="40.5958%" y="1621" width="0.0230%" height="15" fill="rgb(207,170,3)" fg:x="32633796412" fg:w="18450374"/><text x="40.8458%" y="1631.50"></text></g><g><title>blk_done_softirq (18,450,374 samples, 0.02%)</title><rect x="40.5958%" y="1605" width="0.0230%" height="15" fill="rgb(236,100,52)" fg:x="32633796412" fg:w="18450374"/><text x="40.8458%" y="1615.50"></text></g><g><title>scsi_complete (18,450,374 samples, 0.02%)</title><rect x="40.5958%" y="1589" width="0.0230%" height="15" fill="rgb(246,78,51)" fg:x="32633796412" fg:w="18450374"/><text x="40.8458%" y="1599.50"></text></g><g><title>scsi_finish_command (18,450,374 samples, 0.02%)</title><rect x="40.5958%" y="1573" width="0.0230%" height="15" fill="rgb(211,17,15)" fg:x="32633796412" fg:w="18450374"/><text x="40.8458%" y="1583.50"></text></g><g><title>scsi_io_completion (18,450,374 samples, 0.02%)</title><rect x="40.5958%" y="1557" width="0.0230%" height="15" fill="rgb(209,59,46)" fg:x="32633796412" fg:w="18450374"/><text x="40.8458%" y="1567.50"></text></g><g><title>scsi_end_request (18,450,374 samples, 0.02%)</title><rect x="40.5958%" y="1541" width="0.0230%" height="15" fill="rgb(210,92,25)" fg:x="32633796412" fg:w="18450374"/><text x="40.8458%" y="1551.50"></text></g><g><title>blk_update_request (18,450,374 samples, 0.02%)</title><rect x="40.5958%" y="1525" width="0.0230%" height="15" fill="rgb(238,174,52)" fg:x="32633796412" fg:w="18450374"/><text x="40.8458%" y="1535.50"></text></g><g><title>bio_endio (18,450,374 samples, 0.02%)</title><rect x="40.5958%" y="1509" width="0.0230%" height="15" fill="rgb(230,73,7)" fg:x="32633796412" fg:w="18450374"/><text x="40.8458%" y="1519.50"></text></g><g><title>ext4_end_bio (18,450,374 samples, 0.02%)</title><rect x="40.5958%" y="1493" width="0.0230%" height="15" fill="rgb(243,124,40)" fg:x="32633796412" fg:w="18450374"/><text x="40.8458%" y="1503.50"></text></g><g><title>ext4_finish_bio (18,450,374 samples, 0.02%)</title><rect x="40.5958%" y="1477" width="0.0230%" height="15" fill="rgb(244,170,11)" fg:x="32633796412" fg:w="18450374"/><text x="40.8458%" y="1487.50"></text></g><g><title>folio_end_writeback (18,450,374 samples, 0.02%)</title><rect x="40.5958%" y="1461" width="0.0230%" height="15" fill="rgb(207,114,54)" fg:x="32633796412" fg:w="18450374"/><text x="40.8458%" y="1471.50"></text></g><g><title>get_partial_node (9,208,835 samples, 0.01%)</title><rect x="40.6242%" y="1637" width="0.0115%" height="15" fill="rgb(205,42,20)" fg:x="32656684400" fg:w="9208835"/><text x="40.8742%" y="1647.50"></text></g><g><title>___slab_alloc (12,253,656 samples, 0.02%)</title><rect x="40.6223%" y="1653" width="0.0152%" height="15" fill="rgb(230,30,28)" fg:x="32655168082" fg:w="12253656"/><text x="40.8723%" y="1663.50"></text></g><g><title>__kmem_cache_alloc_node (17,469,169 samples, 0.02%)</title><rect x="40.6197%" y="1669" width="0.0217%" height="15" fill="rgb(205,73,54)" fg:x="32653029647" fg:w="17469169"/><text x="40.8697%" y="1679.50"></text></g><g><title>kmalloc_trace (19,039,844 samples, 0.02%)</title><rect x="40.6187%" y="1685" width="0.0237%" height="15" fill="rgb(254,227,23)" fg:x="32652246786" fg:w="19039844"/><text x="40.8687%" y="1695.50"></text></g><g><title>valid_folios_add (23,605,581 samples, 0.03%)</title><rect x="40.6424%" y="1685" width="0.0294%" height="15" fill="rgb(228,202,34)" fg:x="32671286630" fg:w="23605581"/><text x="40.8924%" y="1695.50"></text></g><g><title>cache_ext_list_node_alloc (13,119,186 samples, 0.02%)</title><rect x="40.6554%" y="1669" width="0.0163%" height="15" fill="rgb(222,225,37)" fg:x="32681773025" fg:w="13119186"/><text x="40.9054%" y="1679.50"></text></g><g><title>kmalloc_trace (13,119,186 samples, 0.02%)</title><rect x="40.6554%" y="1653" width="0.0163%" height="15" fill="rgb(221,14,54)" fg:x="32681773025" fg:w="13119186"/><text x="40.9054%" y="1663.50"></text></g><g><title>__kmem_cache_alloc_node (12,320,485 samples, 0.02%)</title><rect x="40.6564%" y="1637" width="0.0153%" height="15" fill="rgb(254,102,2)" fg:x="32682571726" fg:w="12320485"/><text x="40.9064%" y="1647.50"></text></g><g><title>__filemap_add_folio (1,755,581,109 samples, 2.18%)</title><rect x="38.4963%" y="1701" width="2.1839%" height="15" fill="rgb(232,104,17)" fg:x="30946145572" fg:w="1755581109"/><text x="38.7463%" y="1711.50">_..</text></g><g><title>filemap_add_folio (1,762,961,199 samples, 2.19%)</title><rect x="38.4963%" y="1717" width="2.1931%" height="15" fill="rgb(250,220,14)" fg:x="30946145572" fg:w="1762961199"/><text x="38.7463%" y="1727.50">f..</text></g><g><title>clear_page_rep (9,768,452 samples, 0.01%)</title><rect x="40.6938%" y="1637" width="0.0122%" height="15" fill="rgb(241,158,9)" fg:x="32712611696" fg:w="9768452"/><text x="40.9438%" y="1647.50"></text></g><g><title>filemap_alloc_folio (20,102,909 samples, 0.03%)</title><rect x="40.6894%" y="1717" width="0.0250%" height="15" fill="rgb(246,9,43)" fg:x="32709106771" fg:w="20102909"/><text x="40.9394%" y="1727.50"></text></g><g><title>folio_alloc (20,102,909 samples, 0.03%)</title><rect x="40.6894%" y="1701" width="0.0250%" height="15" fill="rgb(206,73,33)" fg:x="32709106771" fg:w="20102909"/><text x="40.9394%" y="1711.50"></text></g><g><title>alloc_pages (20,102,909 samples, 0.03%)</title><rect x="40.6894%" y="1685" width="0.0250%" height="15" fill="rgb(222,79,8)" fg:x="32709106771" fg:w="20102909"/><text x="40.9394%" y="1695.50"></text></g><g><title>__alloc_pages (19,307,019 samples, 0.02%)</title><rect x="40.6904%" y="1669" width="0.0240%" height="15" fill="rgb(234,8,54)" fg:x="32709902661" fg:w="19307019"/><text x="40.9404%" y="1679.50"></text></g><g><title>get_page_from_freelist (18,783,922 samples, 0.02%)</title><rect x="40.6911%" y="1653" width="0.0234%" height="15" fill="rgb(209,134,38)" fg:x="32710425758" fg:w="18783922"/><text x="40.9411%" y="1663.50"></text></g><g><title>blk_mq_dispatch_rq_list (8,416,452 samples, 0.01%)</title><rect x="40.7184%" y="1605" width="0.0105%" height="15" fill="rgb(230,127,29)" fg:x="32732380713" fg:w="8416452"/><text x="40.9684%" y="1615.50"></text></g><g><title>scsi_queue_rq (8,416,452 samples, 0.01%)</title><rect x="40.7184%" y="1589" width="0.0105%" height="15" fill="rgb(242,44,41)" fg:x="32732380713" fg:w="8416452"/><text x="40.9684%" y="1599.50"></text></g><g><title>blk_finish_plug (12,244,246 samples, 0.02%)</title><rect x="40.7144%" y="1701" width="0.0152%" height="15" fill="rgb(222,56,43)" fg:x="32729209680" fg:w="12244246"/><text x="40.9644%" y="1711.50"></text></g><g><title>__blk_flush_plug (12,244,246 samples, 0.02%)</title><rect x="40.7144%" y="1685" width="0.0152%" height="15" fill="rgb(238,39,47)" fg:x="32729209680" fg:w="12244246"/><text x="40.9644%" y="1695.50"></text></g><g><title>blk_mq_flush_plug_list (12,244,246 samples, 0.02%)</title><rect x="40.7144%" y="1669" width="0.0152%" height="15" fill="rgb(226,79,43)" fg:x="32729209680" fg:w="12244246"/><text x="40.9644%" y="1679.50"></text></g><g><title>blk_mq_run_hw_queue (11,459,687 samples, 0.01%)</title><rect x="40.7154%" y="1653" width="0.0143%" height="15" fill="rgb(242,105,53)" fg:x="32729994239" fg:w="11459687"/><text x="40.9654%" y="1663.50"></text></g><g><title>blk_mq_sched_dispatch_requests (10,663,072 samples, 0.01%)</title><rect x="40.7164%" y="1637" width="0.0133%" height="15" fill="rgb(251,132,46)" fg:x="32730790854" fg:w="10663072"/><text x="40.9664%" y="1647.50"></text></g><g><title>__blk_mq_sched_dispatch_requests (10,663,072 samples, 0.01%)</title><rect x="40.7164%" y="1621" width="0.0133%" height="15" fill="rgb(231,77,14)" fg:x="32730790854" fg:w="10663072"/><text x="40.9664%" y="1631.50"></text></g><g><title>ext4_mpage_readpages (10,728,886 samples, 0.01%)</title><rect x="40.7297%" y="1685" width="0.0133%" height="15" fill="rgb(240,135,9)" fg:x="32741453926" fg:w="10728886"/><text x="40.9797%" y="1695.50"></text></g><g><title>read_pages (23,670,702 samples, 0.03%)</title><rect x="40.7144%" y="1717" width="0.0294%" height="15" fill="rgb(248,109,14)" fg:x="32729209680" fg:w="23670702"/><text x="40.9644%" y="1727.50"></text></g><g><title>ext4_readahead (11,426,456 samples, 0.01%)</title><rect x="40.7297%" y="1701" width="0.0142%" height="15" fill="rgb(227,146,52)" fg:x="32741453926" fg:w="11426456"/><text x="40.9797%" y="1711.50"></text></g><g><title>do_page_cache_ra (1,809,872,897 samples, 2.25%)</title><rect x="38.4954%" y="1749" width="2.2514%" height="15" fill="rgb(232,54,3)" fg:x="30945347128" fg:w="1809872897"/><text x="38.7454%" y="1759.50">d..</text></g><g><title>page_cache_ra_unbounded (1,809,872,897 samples, 2.25%)</title><rect x="38.4954%" y="1733" width="2.2514%" height="15" fill="rgb(229,201,43)" fg:x="30945347128" fg:w="1809872897"/><text x="38.7454%" y="1743.50">p..</text></g><g><title>__mod_memcg_lruvec_state (14,750,719 samples, 0.02%)</title><rect x="40.7821%" y="1477" width="0.0183%" height="15" fill="rgb(252,161,33)" fg:x="32783562367" fg:w="14750719"/><text x="41.0321%" y="1487.50"></text></g><g><title>__mod_lruvec_state (16,328,081 samples, 0.02%)</title><rect x="40.7821%" y="1493" width="0.0203%" height="15" fill="rgb(226,146,40)" fg:x="32783562367" fg:w="16328081"/><text x="41.0321%" y="1503.50"></text></g><g><title>folio_lruvec_lock_irq (13,694,527 samples, 0.02%)</title><rect x="40.8091%" y="1493" width="0.0170%" height="15" fill="rgb(219,47,25)" fg:x="32805284186" fg:w="13694527"/><text x="41.0591%" y="1503.50"></text></g><g><title>_raw_spin_lock_irq (13,694,527 samples, 0.02%)</title><rect x="40.8091%" y="1477" width="0.0170%" height="15" fill="rgb(250,135,13)" fg:x="32805284186" fg:w="13694527"/><text x="41.0591%" y="1487.50"></text></g><g><title>page_cache_ext_isolate_folio (42,972,497 samples, 0.05%)</title><rect x="40.7764%" y="1509" width="0.0535%" height="15" fill="rgb(219,229,18)" fg:x="32779004797" fg:w="42972497"/><text x="41.0264%" y="1519.50"></text></g><g><title>folio_lruvec_lock_irqsave (10,139,630 samples, 0.01%)</title><rect x="40.8425%" y="1445" width="0.0126%" height="15" fill="rgb(217,152,27)" fg:x="32832155734" fg:w="10139630"/><text x="41.0925%" y="1455.50"></text></g><g><title>_raw_spin_lock_irqsave (10,139,630 samples, 0.01%)</title><rect x="40.8425%" y="1429" width="0.0126%" height="15" fill="rgb(225,71,47)" fg:x="32832155734" fg:w="10139630"/><text x="41.0925%" y="1439.50"></text></g><g><title>do_raw_spin_lock (10,139,630 samples, 0.01%)</title><rect x="40.8425%" y="1413" width="0.0126%" height="15" fill="rgb(220,139,14)" fg:x="32832155734" fg:w="10139630"/><text x="41.0925%" y="1423.50"></text></g><g><title>native_queued_spin_lock_slowpath (9,333,792 samples, 0.01%)</title><rect x="40.8435%" y="1397" width="0.0116%" height="15" fill="rgb(247,54,32)" fg:x="32832961572" fg:w="9333792"/><text x="41.0935%" y="1407.50"></text></g><g><title>lru_add_fn (16,220,734 samples, 0.02%)</title><rect x="40.8551%" y="1445" width="0.0202%" height="15" fill="rgb(252,131,39)" fg:x="32842295364" fg:w="16220734"/><text x="41.1051%" y="1455.50"></text></g><g><title>folio_batch_move_lru (33,393,000 samples, 0.04%)</title><rect x="40.8357%" y="1461" width="0.0415%" height="15" fill="rgb(210,108,39)" fg:x="32826678999" fg:w="33393000"/><text x="41.0857%" y="1471.50"></text></g><g><title>folio_add_lru (41,121,097 samples, 0.05%)</title><rect x="40.8318%" y="1477" width="0.0512%" height="15" fill="rgb(205,23,29)" fg:x="32823563178" fg:w="41121097"/><text x="41.0818%" y="1487.50"></text></g><g><title>do_raw_write_lock (485,443,504 samples, 0.60%)</title><rect x="40.9272%" y="1381" width="0.6039%" height="15" fill="rgb(246,139,46)" fg:x="32900245419" fg:w="485443504"/><text x="41.1772%" y="1391.50"></text></g><g><title>queued_write_lock_slowpath (483,854,154 samples, 0.60%)</title><rect x="40.9292%" y="1365" width="0.6019%" height="15" fill="rgb(250,81,26)" fg:x="32901834769" fg:w="483854154"/><text x="41.1792%" y="1375.50"></text></g><g><title>native_queued_spin_lock_slowpath (244,904,094 samples, 0.30%)</title><rect x="41.2264%" y="1349" width="0.3047%" height="15" fill="rgb(214,104,7)" fg:x="33140784829" fg:w="244904094"/><text x="41.4764%" y="1359.50"></text></g><g><title>cache_ext_ds_registry_write_lock (490,147,252 samples, 0.61%)</title><rect x="40.9272%" y="1413" width="0.6097%" height="15" fill="rgb(233,189,8)" fg:x="32900245419" fg:w="490147252"/><text x="41.1772%" y="1423.50"></text></g><g><title>_raw_write_lock (490,147,252 samples, 0.61%)</title><rect x="40.9272%" y="1397" width="0.6097%" height="15" fill="rgb(228,141,17)" fg:x="32900245419" fg:w="490147252"/><text x="41.1772%" y="1407.50"></text></g><g><title>valid_folios_del (503,679,994 samples, 0.63%)</title><rect x="40.9243%" y="1429" width="0.6266%" height="15" fill="rgb(247,157,1)" fg:x="32897895097" fg:w="503679994"/><text x="41.1743%" y="1439.50"></text></g><g><title>__filemap_remove_folio (520,699,893 samples, 0.65%)</title><rect x="40.9166%" y="1445" width="0.6477%" height="15" fill="rgb(249,225,5)" fg:x="32891700704" fg:w="520699893"/><text x="41.1666%" y="1455.50"></text></g><g><title>do_raw_spin_lock (54,088,431 samples, 0.07%)</title><rect x="41.5643%" y="1429" width="0.0673%" height="15" fill="rgb(242,55,13)" fg:x="33412400597" fg:w="54088431"/><text x="41.8143%" y="1439.50"></text></g><g><title>native_queued_spin_lock_slowpath (52,501,486 samples, 0.07%)</title><rect x="41.5663%" y="1413" width="0.0653%" height="15" fill="rgb(230,49,50)" fg:x="33413987542" fg:w="52501486"/><text x="41.8163%" y="1423.50"></text></g><g><title>_raw_spin_lock (54,854,746 samples, 0.07%)</title><rect x="41.5643%" y="1445" width="0.0682%" height="15" fill="rgb(241,111,38)" fg:x="33412400597" fg:w="54854746"/><text x="41.8143%" y="1455.50"></text></g><g><title>__remove_mapping (592,482,172 samples, 0.74%)</title><rect x="40.9166%" y="1461" width="0.7370%" height="15" fill="rgb(252,155,4)" fg:x="32891700704" fg:w="592482172"/><text x="41.1666%" y="1471.50"></text></g><g><title>reclaim_pages (679,208,992 samples, 0.84%)</title><rect x="40.8298%" y="1509" width="0.8449%" height="15" fill="rgb(212,69,32)" fg:x="32821977294" fg:w="679208992"/><text x="41.0798%" y="1519.50"></text></g><g><title>reclaim_folio_list (678,412,970 samples, 0.84%)</title><rect x="40.8308%" y="1493" width="0.8439%" height="15" fill="rgb(243,107,47)" fg:x="32822773316" fg:w="678412970"/><text x="41.0808%" y="1503.50"></text></g><g><title>shrink_folio_list (634,925,442 samples, 0.79%)</title><rect x="40.8849%" y="1477" width="0.7898%" height="15" fill="rgb(247,130,12)" fg:x="32866260844" fg:w="634925442"/><text x="41.1349%" y="1487.50"></text></g><g><title>__page_cache_ext_isolate_and_reclaim (759,997,360 samples, 0.95%)</title><rect x="40.7679%" y="1525" width="0.9454%" height="15" fill="rgb(233,74,16)" fg:x="32772172724" fg:w="759997360"/><text x="41.0179%" y="1535.50"></text></g><g><title>valid_folios_exists_unlocked (30,983,798 samples, 0.04%)</title><rect x="41.6748%" y="1509" width="0.0385%" height="15" fill="rgb(208,58,18)" fg:x="33501186286" fg:w="30983798"/><text x="41.9248%" y="1519.50"></text></g><g><title>page_cache_ext_isolate_and_reclaim (762,326,928 samples, 0.95%)</title><rect x="40.7679%" y="1541" width="0.9483%" height="15" fill="rgb(242,225,1)" fg:x="32772172724" fg:w="762326928"/><text x="41.0179%" y="1551.50"></text></g><g><title>do_raw_write_lock (65,108,498 samples, 0.08%)</title><rect x="41.7258%" y="1413" width="0.0810%" height="15" fill="rgb(249,39,40)" fg:x="33542185803" fg:w="65108498"/><text x="41.9758%" y="1423.50"></text></g><g><title>queued_write_lock_slowpath (65,108,498 samples, 0.08%)</title><rect x="41.7258%" y="1397" width="0.0810%" height="15" fill="rgb(207,72,44)" fg:x="33542185803" fg:w="65108498"/><text x="41.9758%" y="1407.50"></text></g><g><title>native_queued_spin_lock_slowpath (24,461,729 samples, 0.03%)</title><rect x="41.7763%" y="1381" width="0.0304%" height="15" fill="rgb(215,193,12)" fg:x="33582832572" fg:w="24461729"/><text x="42.0263%" y="1391.50"></text></g><g><title>cache_ext_ds_registry_write_lock (65,884,298 samples, 0.08%)</title><rect x="41.7258%" y="1445" width="0.0820%" height="15" fill="rgb(248,41,39)" fg:x="33542185803" fg:w="65884298"/><text x="41.9758%" y="1455.50"></text></g><g><title>_raw_write_lock (65,884,298 samples, 0.08%)</title><rect x="41.7258%" y="1429" width="0.0820%" height="15" fill="rgb(253,85,4)" fg:x="33542185803" fg:w="65884298"/><text x="41.9758%" y="1439.50"></text></g><g><title>valid_folios_del (68,209,888 samples, 0.08%)</title><rect x="41.7239%" y="1461" width="0.0849%" height="15" fill="rgb(243,70,31)" fg:x="33540649545" fg:w="68209888"/><text x="41.9739%" y="1471.50"></text></g><g><title>__filemap_remove_folio (69,778,312 samples, 0.09%)</title><rect x="41.7229%" y="1477" width="0.0868%" height="15" fill="rgb(253,195,26)" fg:x="33539873147" fg:w="69778312"/><text x="41.9729%" y="1487.50"></text></g><g><title>do_raw_spin_lock (100,321,935 samples, 0.12%)</title><rect x="41.8097%" y="1461" width="0.1248%" height="15" fill="rgb(243,42,11)" fg:x="33609651459" fg:w="100321935"/><text x="42.0597%" y="1471.50"></text></g><g><title>native_queued_spin_lock_slowpath (98,016,728 samples, 0.12%)</title><rect x="41.8126%" y="1445" width="0.1219%" height="15" fill="rgb(239,66,17)" fg:x="33611956666" fg:w="98016728"/><text x="42.0626%" y="1455.50"></text></g><g><title>_raw_spin_lock (101,860,265 samples, 0.13%)</title><rect x="41.8097%" y="1477" width="0.1267%" height="15" fill="rgb(217,132,21)" fg:x="33609651459" fg:w="101860265"/><text x="42.0597%" y="1487.50"></text></g><g><title>__remove_mapping (175,417,306 samples, 0.22%)</title><rect x="41.7229%" y="1493" width="0.2182%" height="15" fill="rgb(252,202,21)" fg:x="33539873147" fg:w="175417306"/><text x="41.9729%" y="1503.50"></text></g><g><title>shrink_lruvec (950,033,449 samples, 1.18%)</title><rect x="40.7679%" y="1557" width="1.1818%" height="15" fill="rgb(233,98,36)" fg:x="32772172724" fg:w="950033449"/><text x="41.0179%" y="1567.50"></text></g><g><title>shrink_list (187,706,521 samples, 0.23%)</title><rect x="41.7162%" y="1541" width="0.2335%" height="15" fill="rgb(216,153,54)" fg:x="33534499652" fg:w="187706521"/><text x="41.9662%" y="1551.50"></text></g><g><title>shrink_inactive_list (186,194,641 samples, 0.23%)</title><rect x="41.7181%" y="1525" width="0.2316%" height="15" fill="rgb(250,99,7)" fg:x="33536011532" fg:w="186194641"/><text x="41.9681%" y="1535.50"></text></g><g><title>shrink_folio_list (183,128,269 samples, 0.23%)</title><rect x="41.7219%" y="1509" width="0.2278%" height="15" fill="rgb(207,56,50)" fg:x="33539077904" fg:w="183128269"/><text x="41.9719%" y="1519.50"></text></g><g><title>charge_memcg (972,439,662 samples, 1.21%)</title><rect x="40.7498%" y="1669" width="1.2097%" height="15" fill="rgb(244,61,34)" fg:x="32757594784" fg:w="972439662"/><text x="40.9998%" y="1679.50"></text></g><g><title>try_charge_memcg (969,397,885 samples, 1.21%)</title><rect x="40.7535%" y="1653" width="1.2059%" height="15" fill="rgb(241,50,38)" fg:x="32760636561" fg:w="969397885"/><text x="41.0035%" y="1663.50"></text></g><g><title>try_to_free_mem_cgroup_pages (963,181,615 samples, 1.20%)</title><rect x="40.7613%" y="1637" width="1.1982%" height="15" fill="rgb(212,166,30)" fg:x="32766852831" fg:w="963181615"/><text x="41.0113%" y="1647.50"></text></g><g><title>do_try_to_free_pages (963,181,615 samples, 1.20%)</title><rect x="40.7613%" y="1621" width="1.1982%" height="15" fill="rgb(249,127,32)" fg:x="32766852831" fg:w="963181615"/><text x="41.0113%" y="1631.50"></text></g><g><title>shrink_zones (963,181,615 samples, 1.20%)</title><rect x="40.7613%" y="1605" width="1.1982%" height="15" fill="rgb(209,103,0)" fg:x="32766852831" fg:w="963181615"/><text x="41.0113%" y="1615.50"></text></g><g><title>shrink_node (963,181,615 samples, 1.20%)</title><rect x="40.7613%" y="1589" width="1.1982%" height="15" fill="rgb(238,209,51)" fg:x="32766852831" fg:w="963181615"/><text x="41.0113%" y="1599.50"></text></g><g><title>shrink_node_memcgs (957,861,722 samples, 1.19%)</title><rect x="40.7679%" y="1573" width="1.1916%" height="15" fill="rgb(237,56,23)" fg:x="32772172724" fg:w="957861722"/><text x="41.0179%" y="1583.50"></text></g><g><title>__mem_cgroup_charge (976,830,750 samples, 1.22%)</title><rect x="40.7498%" y="1685" width="1.2152%" height="15" fill="rgb(215,153,46)" fg:x="32757594784" fg:w="976830750"/><text x="40.9998%" y="1695.50"></text></g><g><title>___slab_alloc (8,223,385 samples, 0.01%)</title><rect x="41.9814%" y="1653" width="0.0102%" height="15" fill="rgb(224,49,31)" fg:x="33747713390" fg:w="8223385"/><text x="42.2314%" y="1663.50"></text></g><g><title>__kmem_cache_alloc_node (12,652,312 samples, 0.02%)</title><rect x="41.9805%" y="1669" width="0.0157%" height="15" fill="rgb(250,18,42)" fg:x="33746918811" fg:w="12652312"/><text x="42.2305%" y="1679.50"></text></g><g><title>kmalloc_trace (14,169,127 samples, 0.02%)</title><rect x="41.9805%" y="1685" width="0.0176%" height="15" fill="rgb(215,176,39)" fg:x="33746918811" fg:w="14169127"/><text x="42.2305%" y="1695.50"></text></g><g><title>valid_folios_add (23,429,085 samples, 0.03%)</title><rect x="41.9981%" y="1685" width="0.0291%" height="15" fill="rgb(223,77,29)" fg:x="33761087938" fg:w="23429085"/><text x="42.2481%" y="1695.50"></text></g><g><title>cache_ext_list_node_alloc (16,381,105 samples, 0.02%)</title><rect x="42.0068%" y="1669" width="0.0204%" height="15" fill="rgb(234,94,52)" fg:x="33768135918" fg:w="16381105"/><text x="42.2568%" y="1679.50"></text></g><g><title>kmalloc_trace (16,381,105 samples, 0.02%)</title><rect x="42.0068%" y="1653" width="0.0204%" height="15" fill="rgb(220,154,50)" fg:x="33768135918" fg:w="16381105"/><text x="42.2568%" y="1663.50"></text></g><g><title>__kmem_cache_alloc_node (16,381,105 samples, 0.02%)</title><rect x="42.0068%" y="1637" width="0.0204%" height="15" fill="rgb(212,11,10)" fg:x="33768135918" fg:w="16381105"/><text x="42.2568%" y="1647.50"></text></g><g><title>___slab_alloc (13,304,611 samples, 0.02%)</title><rect x="42.0107%" y="1621" width="0.0166%" height="15" fill="rgb(205,166,19)" fg:x="33771212412" fg:w="13304611"/><text x="42.2607%" y="1631.50"></text></g><g><title>__filemap_add_folio (1,040,940,833 samples, 1.29%)</title><rect x="40.7468%" y="1701" width="1.2949%" height="15" fill="rgb(244,198,16)" fg:x="32755220025" fg:w="1040940833"/><text x="40.9968%" y="1711.50"></text></g><g><title>folio_add_lru (9,877,001 samples, 0.01%)</title><rect x="42.0417%" y="1701" width="0.0123%" height="15" fill="rgb(219,69,12)" fg:x="33796160858" fg:w="9877001"/><text x="42.2917%" y="1711.50"></text></g><g><title>filemap_add_folio (1,052,395,769 samples, 1.31%)</title><rect x="40.7468%" y="1717" width="1.3092%" height="15" fill="rgb(245,30,7)" fg:x="32755220025" fg:w="1052395769"/><text x="40.9968%" y="1727.50"></text></g><g><title>clear_page_rep (11,396,855 samples, 0.01%)</title><rect x="42.0589%" y="1637" width="0.0142%" height="15" fill="rgb(218,221,48)" fg:x="33809994841" fg:w="11396855"/><text x="42.3089%" y="1647.50"></text></g><g><title>get_page_from_freelist (15,323,058 samples, 0.02%)</title><rect x="42.0579%" y="1653" width="0.0191%" height="15" fill="rgb(216,66,15)" fg:x="33809210290" fg:w="15323058"/><text x="42.3079%" y="1663.50"></text></g><g><title>filemap_alloc_folio (18,423,601 samples, 0.02%)</title><rect x="42.0560%" y="1717" width="0.0229%" height="15" fill="rgb(226,122,50)" fg:x="33807615794" fg:w="18423601"/><text x="42.3060%" y="1727.50"></text></g><g><title>folio_alloc (17,627,707 samples, 0.02%)</title><rect x="42.0569%" y="1701" width="0.0219%" height="15" fill="rgb(239,156,16)" fg:x="33808411688" fg:w="17627707"/><text x="42.3069%" y="1711.50"></text></g><g><title>alloc_pages (17,627,707 samples, 0.02%)</title><rect x="42.0569%" y="1685" width="0.0219%" height="15" fill="rgb(224,27,38)" fg:x="33808411688" fg:w="17627707"/><text x="42.3069%" y="1695.50"></text></g><g><title>__alloc_pages (17,627,707 samples, 0.02%)</title><rect x="42.0569%" y="1669" width="0.0219%" height="15" fill="rgb(224,39,27)" fg:x="33808411688" fg:w="17627707"/><text x="42.3069%" y="1679.50"></text></g><g><title>read_pages (12,012,011 samples, 0.01%)</title><rect x="42.0789%" y="1717" width="0.0149%" height="15" fill="rgb(215,92,29)" fg:x="33826039395" fg:w="12012011"/><text x="42.3289%" y="1727.50"></text></g><g><title>filemap_get_pages (5,800,439,925 samples, 7.22%)</title><rect x="34.8797%" y="1797" width="7.2156%" height="15" fill="rgb(207,159,16)" fg:x="28038836953" fg:w="5800439925"/><text x="35.1297%" y="1807.50">filemap_ge..</text></g><g><title>page_cache_sync_ra (2,893,929,750 samples, 3.60%)</title><rect x="38.4954%" y="1781" width="3.6000%" height="15" fill="rgb(238,163,47)" fg:x="30945347128" fg:w="2893929750"/><text x="38.7454%" y="1791.50">page..</text></g><g><title>ondemand_readahead (2,893,929,750 samples, 3.60%)</title><rect x="38.4954%" y="1765" width="3.6000%" height="15" fill="rgb(219,91,49)" fg:x="30945347128" fg:w="2893929750"/><text x="38.7454%" y="1775.50">onde..</text></g><g><title>page_cache_ra_order (1,084,056,853 samples, 1.35%)</title><rect x="40.7468%" y="1749" width="1.3485%" height="15" fill="rgb(227,167,31)" fg:x="32755220025" fg:w="1084056853"/><text x="40.9968%" y="1759.50"></text></g><g><title>page_cache_ra_unbounded (1,084,056,853 samples, 1.35%)</title><rect x="40.7468%" y="1733" width="1.3485%" height="15" fill="rgb(234,80,54)" fg:x="32755220025" fg:w="1084056853"/><text x="40.9968%" y="1743.50"></text></g><g><title>get_page_cache_ext_ops (8,889,603 samples, 0.01%)</title><rect x="42.1021%" y="1781" width="0.0111%" height="15" fill="rgb(212,114,2)" fg:x="33844671388" fg:w="8889603"/><text x="42.3521%" y="1791.50"></text></g><g><title>folio_mark_accessed (15,634,938 samples, 0.02%)</title><rect x="42.0953%" y="1797" width="0.0194%" height="15" fill="rgb(234,50,24)" fg:x="33839276878" fg:w="15634938"/><text x="42.3453%" y="1807.50"></text></g><g><title>ext4_file_read_iter (5,892,686,208 samples, 7.33%)</title><rect x="34.7874%" y="1845" width="7.3304%" height="15" fill="rgb(221,68,8)" fg:x="27964596770" fg:w="5892686208"/><text x="35.0374%" y="1855.50">ext4_file_..</text></g><g><title>generic_file_read_iter (5,892,686,208 samples, 7.33%)</title><rect x="34.7874%" y="1829" width="7.3304%" height="15" fill="rgb(254,180,31)" fg:x="27964596770" fg:w="5892686208"/><text x="35.0374%" y="1839.50">generic_fi..</text></g><g><title>filemap_read (5,892,686,208 samples, 7.33%)</title><rect x="34.7874%" y="1813" width="7.3304%" height="15" fill="rgb(247,130,50)" fg:x="27964596770" fg:w="5892686208"/><text x="35.0374%" y="1823.50">filemap_re..</text></g><g><title>__x64_sys_pread64 (5,896,514,576 samples, 7.34%)</title><rect x="34.7845%" y="1877" width="7.3351%" height="15" fill="rgb(211,109,4)" fg:x="27962292905" fg:w="5896514576"/><text x="35.0345%" y="1887.50">__x64_sys_..</text></g><g><title>vfs_read (5,896,514,576 samples, 7.34%)</title><rect x="34.7845%" y="1861" width="7.3351%" height="15" fill="rgb(238,50,21)" fg:x="27962292905" fg:w="5896514576"/><text x="35.0345%" y="1871.50">vfs_read</text></g><g><title>entry_SYSCALL_64 (5,898,094,447 samples, 7.34%)</title><rect x="34.7845%" y="1909" width="7.3371%" height="15" fill="rgb(225,57,45)" fg:x="27962292905" fg:w="5898094447"/><text x="35.0345%" y="1919.50">entry_SYSC..</text></g><g><title>do_syscall_64 (5,898,094,447 samples, 7.34%)</title><rect x="34.7845%" y="1893" width="7.3371%" height="15" fill="rgb(209,196,50)" fg:x="27962292905" fg:w="5898094447"/><text x="35.0345%" y="1903.50">do_syscall..</text></g><g><title>__libc_pread (30,601,461,395 samples, 38.07%)</title><rect x="4.0559%" y="1925" width="38.0676%" height="15" fill="rgb(242,140,13)" fg:x="3260405141" fg:w="30601461395"/><text x="4.3059%" y="1935.50">__libc_pread</text></g><g><title>lock_acquire (9,954,730 samples, 0.01%)</title><rect x="42.1264%" y="1893" width="0.0124%" height="15" fill="rgb(217,111,7)" fg:x="33864233519" fg:w="9954730"/><text x="42.3764%" y="1903.50"></text></g><g><title>__bpf_prog_enter (14,638,420 samples, 0.02%)</title><rect x="42.1234%" y="1909" width="0.0182%" height="15" fill="rgb(253,193,51)" fg:x="33861866536" fg:w="14638420"/><text x="42.3734%" y="1919.50"></text></g><g><title>__bpf_prog_exit (11,751,211 samples, 0.01%)</title><rect x="42.1417%" y="1909" width="0.0146%" height="15" fill="rgb(252,70,29)" fg:x="33876504956" fg:w="11751211"/><text x="42.3917%" y="1919.50"></text></g><g><title>__htab_map_lookup_elem (9,394,556 samples, 0.01%)</title><rect x="42.1861%" y="1893" width="0.0117%" height="15" fill="rgb(232,127,12)" fg:x="33912225348" fg:w="9394556"/><text x="42.4361%" y="1903.50"></text></g><g><title>_raw_spin_lock (8,497,617 samples, 0.01%)</title><rect x="42.2217%" y="1861" width="0.0106%" height="15" fill="rgb(211,180,21)" fg:x="33940866719" fg:w="8497617"/><text x="42.4717%" y="1871.50"></text></g><g><title>do_raw_write_lock (1,358,470,345 samples, 1.69%)</title><rect x="42.2394%" y="1845" width="1.6899%" height="15" fill="rgb(229,72,13)" fg:x="33955058803" fg:w="1358470345"/><text x="42.4894%" y="1855.50"></text></g><g><title>queued_write_lock_slowpath (1,351,546,220 samples, 1.68%)</title><rect x="42.2480%" y="1829" width="1.6813%" height="15" fill="rgb(240,211,49)" fg:x="33961982928" fg:w="1351546220"/><text x="42.4980%" y="1839.50"></text></g><g><title>native_queued_spin_lock_slowpath (672,934,464 samples, 0.84%)</title><rect x="43.0922%" y="1813" width="0.8371%" height="15" fill="rgb(219,149,40)" fg:x="34640594684" fg:w="672934464"/><text x="43.3422%" y="1823.50"></text></g><g><title>_raw_write_lock (1,367,322,855 samples, 1.70%)</title><rect x="42.2394%" y="1861" width="1.7009%" height="15" fill="rgb(210,127,46)" fg:x="33955058803" fg:w="1367322855"/><text x="42.4894%" y="1871.50"></text></g><g><title>lock_acquire (8,852,510 samples, 0.01%)</title><rect x="43.9293%" y="1845" width="0.0110%" height="15" fill="rgb(220,106,7)" fg:x="35313529148" fg:w="8852510"/><text x="44.1793%" y="1855.50"></text></g><g><title>__cache_ext_list_add_impl (1,407,465,506 samples, 1.75%)</title><rect x="42.1988%" y="1877" width="1.7509%" height="15" fill="rgb(249,31,22)" fg:x="33922415152" fg:w="1407465506"/><text x="42.4488%" y="1887.50"></text></g><g><title>native_queued_spin_lock_slowpath (5,730,760,549 samples, 7.13%)</title><rect x="46.4304%" y="1829" width="7.1289%" height="15" fill="rgb(253,1,49)" fg:x="37324147293" fg:w="5730760549"/><text x="46.6804%" y="1839.50">native_que..</text></g><g><title>do_raw_read_lock (7,725,793,978 samples, 9.61%)</title><rect x="43.9496%" y="1861" width="9.6107%" height="15" fill="rgb(227,144,33)" fg:x="35329880658" fg:w="7725793978"/><text x="44.1996%" y="1871.50">do_raw_read_lo..</text></g><g><title>queued_read_lock_slowpath (7,720,610,868 samples, 9.60%)</title><rect x="43.9561%" y="1845" width="9.6043%" height="15" fill="rgb(249,163,44)" fg:x="35335063768" fg:w="7720610868"/><text x="44.2061%" y="1855.50">queued_read_lo..</text></g><g><title>lock_acquire (27,643,318 samples, 0.03%)</title><rect x="53.5603%" y="1861" width="0.0344%" height="15" fill="rgb(234,15,39)" fg:x="43055674636" fg:w="27643318"/><text x="53.8103%" y="1871.50"></text></g><g><title>__lock_acquire (23,779,303 samples, 0.03%)</title><rect x="53.5652%" y="1845" width="0.0296%" height="15" fill="rgb(207,66,16)" fg:x="43059538651" fg:w="23779303"/><text x="53.8152%" y="1855.50"></text></g><g><title>_raw_read_lock (7,754,605,035 samples, 9.65%)</title><rect x="43.9496%" y="1877" width="9.6466%" height="15" fill="rgb(233,112,24)" fg:x="35329880658" fg:w="7754605035"/><text x="44.1996%" y="1887.50">_raw_read_lock</text></g><g><title>bpf_cache_ext_list_add_tail (9,177,787,556 samples, 11.42%)</title><rect x="42.1978%" y="1893" width="11.4170%" height="15" fill="rgb(230,90,22)" fg:x="33921619904" fg:w="9177787556"/><text x="42.4478%" y="1903.50">bpf_cache_ext_lis..</text></g><g><title>_raw_spin_lock (10,050,424 samples, 0.01%)</title><rect x="53.6811%" y="1845" width="0.0125%" height="15" fill="rgb(229,61,13)" fg:x="43152741634" fg:w="10050424"/><text x="53.9311%" y="1855.50"></text></g><g><title>lock_acquire (10,050,424 samples, 0.01%)</title><rect x="53.6811%" y="1829" width="0.0125%" height="15" fill="rgb(225,57,24)" fg:x="43152741634" fg:w="10050424"/><text x="53.9311%" y="1839.50"></text></g><g><title>alloc_htab_elem (26,278,561 samples, 0.03%)</title><rect x="53.6615%" y="1877" width="0.0327%" height="15" fill="rgb(208,169,48)" fg:x="43136991841" fg:w="26278561"/><text x="53.9115%" y="1887.50"></text></g><g><title>__pcpu_freelist_pop (24,735,844 samples, 0.03%)</title><rect x="53.6634%" y="1861" width="0.0308%" height="15" fill="rgb(244,218,51)" fg:x="43138534558" fg:w="24735844"/><text x="53.9134%" y="1871.50"></text></g><g><title>htab_lock_bucket (16,250,755 samples, 0.02%)</title><rect x="53.6942%" y="1877" width="0.0202%" height="15" fill="rgb(214,148,10)" fg:x="43163270402" fg:w="16250755"/><text x="53.9442%" y="1887.50"></text></g><g><title>_raw_spin_lock (15,468,524 samples, 0.02%)</title><rect x="53.6952%" y="1861" width="0.0192%" height="15" fill="rgb(225,174,27)" fg:x="43164052633" fg:w="15468524"/><text x="53.9452%" y="1871.50"></text></g><g><title>lock_acquire (13,287,346 samples, 0.02%)</title><rect x="53.6979%" y="1845" width="0.0165%" height="15" fill="rgb(230,96,26)" fg:x="43166233811" fg:w="13287346"/><text x="53.9479%" y="1855.50"></text></g><g><title>__lock_acquire (13,287,346 samples, 0.02%)</title><rect x="53.6979%" y="1829" width="0.0165%" height="15" fill="rgb(232,10,30)" fg:x="43166233811" fg:w="13287346"/><text x="53.9479%" y="1839.50"></text></g><g><title>htab_map_update_elem (73,346,074 samples, 0.09%)</title><rect x="53.6242%" y="1893" width="0.0912%" height="15" fill="rgb(222,8,50)" fg:x="43106969783" fg:w="73346074"/><text x="53.8742%" y="1903.50"></text></g><g><title>bpf_prog_0ba38f2e803f3434_sampling_folio_added (9,288,164,022 samples, 11.55%)</title><rect x="42.1621%" y="1909" width="11.5543%" height="15" fill="rgb(213,81,27)" fg:x="33892951429" fg:w="9288164022"/><text x="42.4121%" y="1919.50">bpf_prog_0ba38f2e..</text></g><g><title>__lock_acquire (28,422,265 samples, 0.04%)</title><rect x="53.7491%" y="1829" width="0.0354%" height="15" fill="rgb(245,50,10)" fg:x="43207443215" fg:w="28422265"/><text x="53.9991%" y="1839.50"></text></g><g><title>_raw_spin_lock (33,099,750 samples, 0.04%)</title><rect x="53.7453%" y="1861" width="0.0412%" height="15" fill="rgb(216,100,18)" fg:x="43204326957" fg:w="33099750"/><text x="53.9953%" y="1871.50"></text></g><g><title>lock_acquire (30,751,521 samples, 0.04%)</title><rect x="53.7482%" y="1845" width="0.0383%" height="15" fill="rgb(236,147,54)" fg:x="43206675186" fg:w="30751521"/><text x="53.9982%" y="1855.50"></text></g><g><title>do_raw_write_lock (9,372,694,220 samples, 11.66%)</title><rect x="53.7942%" y="1845" width="11.6594%" height="15" fill="rgb(205,143,26)" fg:x="43243646274" fg:w="9372694220"/><text x="54.0442%" y="1855.50">do_raw_write_lock</text></g><g><title>queued_write_lock_slowpath (9,361,164,426 samples, 11.65%)</title><rect x="53.8085%" y="1829" width="11.6451%" height="15" fill="rgb(236,26,9)" fg:x="43255176068" fg:w="9361164426"/><text x="54.0585%" y="1839.50">queued_write_lock..</text></g><g><title>native_queued_spin_lock_slowpath (6,663,996,089 samples, 8.29%)</title><rect x="57.1637%" y="1813" width="8.2899%" height="15" fill="rgb(221,165,53)" fg:x="45952344405" fg:w="6663996089"/><text x="57.4137%" y="1823.50">native_queue..</text></g><g><title>__lock_acquire (15,417,874 samples, 0.02%)</title><rect x="65.4585%" y="1829" width="0.0192%" height="15" fill="rgb(214,110,17)" fg:x="52620268201" fg:w="15417874"/><text x="65.7085%" y="1839.50"></text></g><g><title>_raw_write_lock (9,393,633,580 samples, 11.69%)</title><rect x="53.7932%" y="1861" width="11.6855%" height="15" fill="rgb(237,197,12)" fg:x="43242849497" fg:w="9393633580"/><text x="54.0432%" y="1871.50">_raw_write_lock</text></g><g><title>lock_acquire (20,142,583 samples, 0.03%)</title><rect x="65.4536%" y="1845" width="0.0251%" height="15" fill="rgb(205,84,17)" fg:x="52616340494" fg:w="20142583"/><text x="65.7036%" y="1855.50"></text></g><g><title>valid_folios_lookup (10,711,096 samples, 0.01%)</title><rect x="65.4872%" y="1861" width="0.0133%" height="15" fill="rgb(237,18,45)" fg:x="52643306445" fg:w="10711096"/><text x="65.7372%" y="1871.50"></text></g><g><title>cache_ext_list_del (9,453,574,799 samples, 11.76%)</title><rect x="53.7414%" y="1877" width="11.7600%" height="15" fill="rgb(221,87,14)" fg:x="43201240240" fg:w="9453574799"/><text x="53.9914%" y="1887.50">cache_ext_list_del</text></g><g><title>bpf_cache_ext_list_del (9,455,862,172 samples, 11.76%)</title><rect x="53.7405%" y="1893" width="11.7629%" height="15" fill="rgb(238,186,15)" fg:x="43200494242" fg:w="9455862172"/><text x="53.9905%" y="1903.50">bpf_cache_ext_lis..</text></g><g><title>_raw_spin_lock (24,090,141 samples, 0.03%)</title><rect x="65.5371%" y="1845" width="0.0300%" height="15" fill="rgb(208,115,11)" fg:x="52683452603" fg:w="24090141"/><text x="65.7871%" y="1855.50"></text></g><g><title>lock_acquire (21,777,469 samples, 0.03%)</title><rect x="65.5400%" y="1829" width="0.0271%" height="15" fill="rgb(254,175,0)" fg:x="52685765275" fg:w="21777469"/><text x="65.7900%" y="1839.50"></text></g><g><title>__pcpu_freelist_push (31,123,329 samples, 0.04%)</title><rect x="65.5371%" y="1861" width="0.0387%" height="15" fill="rgb(227,24,42)" fg:x="52683452603" fg:w="31123329"/><text x="65.7871%" y="1871.50"></text></g><g><title>free_htab_elem (32,661,269 samples, 0.04%)</title><rect x="65.5371%" y="1877" width="0.0406%" height="15" fill="rgb(223,211,37)" fg:x="52683452603" fg:w="32661269"/><text x="65.7871%" y="1887.50"></text></g><g><title>htab_lock_bucket (11,947,083 samples, 0.01%)</title><rect x="65.5777%" y="1877" width="0.0149%" height="15" fill="rgb(235,49,27)" fg:x="52716113872" fg:w="11947083"/><text x="65.8277%" y="1887.50"></text></g><g><title>_raw_spin_lock (11,215,481 samples, 0.01%)</title><rect x="65.5786%" y="1861" width="0.0140%" height="15" fill="rgb(254,97,51)" fg:x="52716845474" fg:w="11215481"/><text x="65.8286%" y="1871.50"></text></g><g><title>lock_acquire (8,978,944 samples, 0.01%)</title><rect x="65.5814%" y="1845" width="0.0112%" height="15" fill="rgb(249,51,40)" fg:x="52719082011" fg:w="8978944"/><text x="65.8314%" y="1855.50"></text></g><g><title>__lock_acquire (8,207,497 samples, 0.01%)</title><rect x="65.5824%" y="1829" width="0.0102%" height="15" fill="rgb(210,128,45)" fg:x="52719853458" fg:w="8207497"/><text x="65.8324%" y="1839.50"></text></g><g><title>bpf_prog_94714edc913e697a_sampling_folio_evicted (9,548,509,455 samples, 11.88%)</title><rect x="53.7164%" y="1909" width="11.8781%" height="15" fill="rgb(224,137,50)" fg:x="43181115451" fg:w="9548509455"/><text x="53.9664%" y="1919.50">bpf_prog_94714edc9..</text></g><g><title>htab_map_delete_elem (70,224,770 samples, 0.09%)</title><rect x="65.5072%" y="1893" width="0.0874%" height="15" fill="rgb(242,15,9)" fg:x="52659400136" fg:w="70224770"/><text x="65.7572%" y="1903.50"></text></g><g><title>do_raw_read_lock (2,768,327,116 samples, 3.44%)</title><rect x="68.1419%" y="1861" width="3.4437%" height="15" fill="rgb(233,187,41)" fg:x="54777405636" fg:w="2768327116"/><text x="68.3919%" y="1871.50">do_..</text></g><g><title>queued_read_lock_slowpath (2,765,192,818 samples, 3.44%)</title><rect x="68.1458%" y="1845" width="3.4398%" height="15" fill="rgb(227,2,29)" fg:x="54780539934" fg:w="2765192818"/><text x="68.3958%" y="1855.50">que..</text></g><g><title>native_queued_spin_lock_slowpath (2,178,332,291 samples, 2.71%)</title><rect x="68.8759%" y="1829" width="2.7098%" height="15" fill="rgb(222,70,3)" fg:x="55367400461" fg:w="2178332291"/><text x="69.1259%" y="1839.50">na..</text></g><g><title>_raw_read_lock (2,769,847,625 samples, 3.45%)</title><rect x="68.1419%" y="1877" width="3.4456%" height="15" fill="rgb(213,11,42)" fg:x="54777405636" fg:w="2769847625"/><text x="68.3919%" y="1887.50">_ra..</text></g><g><title>do_raw_write_lock (569,405,723 samples, 0.71%)</title><rect x="71.5905%" y="1861" width="0.7083%" height="15" fill="rgb(225,150,9)" fg:x="57549594187" fg:w="569405723"/><text x="71.8405%" y="1871.50"></text></g><g><title>queued_write_lock_slowpath (567,023,980 samples, 0.71%)</title><rect x="71.5934%" y="1845" width="0.7054%" height="15" fill="rgb(230,162,45)" fg:x="57551975930" fg:w="567023980"/><text x="71.8434%" y="1855.50"></text></g><g><title>native_queued_spin_lock_slowpath (291,183,970 samples, 0.36%)</title><rect x="71.9366%" y="1829" width="0.3622%" height="15" fill="rgb(222,14,52)" fg:x="57827815940" fg:w="291183970"/><text x="72.1866%" y="1839.50"></text></g><g><title>_raw_write_lock (570,156,090 samples, 0.71%)</title><rect x="71.5905%" y="1877" width="0.7093%" height="15" fill="rgb(254,198,14)" fg:x="57549594187" fg:w="570156090"/><text x="71.8405%" y="1887.50"></text></g><g><title>bcmp (9,197,937 samples, 0.01%)</title><rect x="77.9053%" y="1845" width="0.0114%" height="15" fill="rgb(220,217,30)" fg:x="62625911072" fg:w="9197937"/><text x="78.1553%" y="1855.50"></text></g><g><title>debug_lockdep_rcu_enabled (11,531,563 samples, 0.01%)</title><rect x="77.9167%" y="1845" width="0.0143%" height="15" fill="rgb(215,146,41)" fg:x="62635109009" fg:w="11531563"/><text x="78.1667%" y="1855.50"></text></g><g><title>htab_map_hash (84,364,974 samples, 0.10%)</title><rect x="77.9311%" y="1845" width="0.1049%" height="15" fill="rgb(217,27,36)" fg:x="62646640572" fg:w="84364974"/><text x="78.1811%" y="1855.50"></text></g><g><title>debug_lockdep_rcu_enabled (16,771,118 samples, 0.02%)</title><rect x="78.0521%" y="1829" width="0.0209%" height="15" fill="rgb(219,218,39)" fg:x="62743954473" fg:w="16771118"/><text x="78.3021%" y="1839.50"></text></g><g><title>lock_is_held_type (204,456,466 samples, 0.25%)</title><rect x="78.0730%" y="1829" width="0.2543%" height="15" fill="rgb(219,4,42)" fg:x="62760725591" fg:w="204456466"/><text x="78.3230%" y="1839.50"></text></g><g><title>match_held_lock (39,989,628 samples, 0.05%)</title><rect x="78.2776%" y="1813" width="0.0497%" height="15" fill="rgb(249,119,36)" fg:x="62925192429" fg:w="39989628"/><text x="78.5276%" y="1823.50"></text></g><g><title>match_held_lock (11,314,257 samples, 0.01%)</title><rect x="78.3274%" y="1829" width="0.0141%" height="15" fill="rgb(209,23,33)" fg:x="62965182057" fg:w="11314257"/><text x="78.5774%" y="1839.50"></text></g><g><title>__htab_map_lookup_elem (4,762,763,619 samples, 5.92%)</title><rect x="72.4645%" y="1861" width="5.9248%" height="15" fill="rgb(211,10,0)" fg:x="58252185967" fg:w="4762763619"/><text x="72.7145%" y="1871.50">__htab_m..</text></g><g><title>rcu_read_lock_held (283,944,040 samples, 0.35%)</title><rect x="78.0360%" y="1845" width="0.3532%" height="15" fill="rgb(208,99,37)" fg:x="62731005546" fg:w="283944040"/><text x="78.2860%" y="1855.50"></text></g><g><title>rcu_is_watching (38,453,272 samples, 0.05%)</title><rect x="78.3414%" y="1829" width="0.0478%" height="15" fill="rgb(213,132,31)" fg:x="62976496314" fg:w="38453272"/><text x="78.5914%" y="1839.50"></text></g><g><title>bpf_cache_ext_list_sample (10,289,167,636 samples, 12.80%)</title><rect x="65.5984%" y="1893" width="12.7995%" height="15" fill="rgb(243,129,40)" fg:x="52732708391" fg:w="10289167636"/><text x="65.8484%" y="1903.50">bpf_cache_ext_list_..</text></g><g><title>bpf_prog_baff5aaf85fd2c96_bpf_lfu_score_fn (4,899,062,486 samples, 6.09%)</title><rect x="72.3035%" y="1877" width="6.0943%" height="15" fill="rgb(210,66,33)" fg:x="58122813541" fg:w="4899062486"/><text x="72.5535%" y="1887.50">bpf_prog..</text></g><g><title>bpf_prog_b0d391925e3f79f7_sampling_evict_folios (10,321,774,616 samples, 12.84%)</title><rect x="65.5945%" y="1909" width="12.8401%" height="15" fill="rgb(209,189,4)" fg:x="52729624906" fg:w="10321774616"/><text x="65.8445%" y="1919.50">bpf_prog_b0d391925e..</text></g><g><title>bpf_prog_baff5aaf85fd2c96_bpf_lfu_score_fn (29,523,495 samples, 0.04%)</title><rect x="78.3979%" y="1893" width="0.0367%" height="15" fill="rgb(214,107,37)" fg:x="63021876027" fg:w="29523495"/><text x="78.6479%" y="1903.50"></text></g><g><title>__fsnotify_parent (9,981,696 samples, 0.01%)</title><rect x="78.4356%" y="1845" width="0.0124%" height="15" fill="rgb(245,88,54)" fg:x="63052198065" fg:w="9981696"/><text x="78.6856%" y="1855.50"></text></g><g><title>fsnotify (9,981,696 samples, 0.01%)</title><rect x="78.4356%" y="1829" width="0.0124%" height="15" fill="rgb(205,146,20)" fg:x="63052198065" fg:w="9981696"/><text x="78.6856%" y="1839.50"></text></g><g><title>send_to_group (9,981,696 samples, 0.01%)</title><rect x="78.4356%" y="1813" width="0.0124%" height="15" fill="rgb(220,161,25)" fg:x="63052198065" fg:w="9981696"/><text x="78.6856%" y="1823.50"></text></g><g><title>fsnotify_handle_inode_event (9,981,696 samples, 0.01%)</title><rect x="78.4356%" y="1797" width="0.0124%" height="15" fill="rgb(215,152,15)" fg:x="63052198065" fg:w="9981696"/><text x="78.6856%" y="1807.50"></text></g><g><title>inotify_handle_inode_event (9,981,696 samples, 0.01%)</title><rect x="78.4356%" y="1781" width="0.0124%" height="15" fill="rgb(233,192,44)" fg:x="63052198065" fg:w="9981696"/><text x="78.6856%" y="1791.50"></text></g><g><title>osq_lock (1,636,707,904 samples, 2.04%)</title><rect x="78.4504%" y="1781" width="2.0360%" height="15" fill="rgb(240,170,46)" fg:x="63064085527" fg:w="1636707904"/><text x="78.7004%" y="1791.50">o..</text></g><g><title>rwsem_spin_on_owner (3,891,632,184 samples, 4.84%)</title><rect x="80.4864%" y="1781" width="4.8411%" height="15" fill="rgb(207,104,33)" fg:x="64700793431" fg:w="3891632184"/><text x="80.7364%" y="1791.50">rwsem_..</text></g><g><title>down_write (5,532,190,654 samples, 6.88%)</title><rect x="78.4494%" y="1813" width="6.8819%" height="15" fill="rgb(219,21,39)" fg:x="63063286515" fg:w="5532190654"/><text x="78.6994%" y="1823.50">down_write</text></g><g><title>rwsem_down_write_slowpath (5,532,190,654 samples, 6.88%)</title><rect x="78.4494%" y="1797" width="6.8819%" height="15" fill="rgb(214,133,29)" fg:x="63063286515" fg:w="5532190654"/><text x="78.6994%" y="1807.50">rwsem_dow..</text></g><g><title>file_modified (9,107,635 samples, 0.01%)</title><rect x="85.3353%" y="1813" width="0.0113%" height="15" fill="rgb(226,93,6)" fg:x="68598644360" fg:w="9107635"/><text x="85.5853%" y="1823.50"></text></g><g><title>lock_release (8,731,015 samples, 0.01%)</title><rect x="85.3762%" y="1765" width="0.0109%" height="15" fill="rgb(252,222,34)" fg:x="68631585975" fg:w="8731015"/><text x="85.6262%" y="1775.50"></text></g><g><title>balance_dirty_pages_ratelimited_flags (34,685,926 samples, 0.04%)</title><rect x="85.3556%" y="1781" width="0.0431%" height="15" fill="rgb(252,92,48)" fg:x="68614988044" fg:w="34685926"/><text x="85.6056%" y="1791.50"></text></g><g><title>balance_dirty_pages_ratelimited (39,326,969 samples, 0.05%)</title><rect x="85.3546%" y="1797" width="0.0489%" height="15" fill="rgb(245,223,24)" fg:x="68614182254" fg:w="39326969"/><text x="85.6046%" y="1807.50"></text></g><g><title>prepare_scan_count (16,974,133 samples, 0.02%)</title><rect x="85.4986%" y="1637" width="0.0211%" height="15" fill="rgb(205,176,3)" fg:x="68729927258" fg:w="16974133"/><text x="85.7486%" y="1647.50"></text></g><g><title>mem_cgroup_flush_stats (16,974,133 samples, 0.02%)</title><rect x="85.4986%" y="1621" width="0.0211%" height="15" fill="rgb(235,151,15)" fg:x="68729927258" fg:w="16974133"/><text x="85.7486%" y="1631.50"></text></g><g><title>cgroup_rstat_flush (16,193,298 samples, 0.02%)</title><rect x="85.4995%" y="1605" width="0.0201%" height="15" fill="rgb(237,209,11)" fg:x="68730708093" fg:w="16193298"/><text x="85.7495%" y="1615.50"></text></g><g><title>cgroup_rstat_flush_locked (16,193,298 samples, 0.02%)</title><rect x="85.4995%" y="1589" width="0.0201%" height="15" fill="rgb(243,227,24)" fg:x="68730708093" fg:w="16193298"/><text x="85.7495%" y="1599.50"></text></g><g><title>mem_cgroup_css_rstat_flush (8,448,326 samples, 0.01%)</title><rect x="85.5092%" y="1573" width="0.0105%" height="15" fill="rgb(239,193,16)" fg:x="68738453065" fg:w="8448326"/><text x="85.7592%" y="1583.50"></text></g><g><title>__hrtimer_run_queues (13,101,423 samples, 0.02%)</title><rect x="85.5347%" y="1509" width="0.0163%" height="15" fill="rgb(231,27,9)" fg:x="68759002728" fg:w="13101423"/><text x="85.7847%" y="1519.50"></text></g><g><title>tick_sched_timer (12,325,883 samples, 0.02%)</title><rect x="85.5357%" y="1493" width="0.0153%" height="15" fill="rgb(219,169,10)" fg:x="68759778268" fg:w="12325883"/><text x="85.7857%" y="1503.50"></text></g><g><title>update_process_times (12,325,883 samples, 0.02%)</title><rect x="85.5357%" y="1477" width="0.0153%" height="15" fill="rgb(244,229,43)" fg:x="68759778268" fg:w="12325883"/><text x="85.7857%" y="1487.50"></text></g><g><title>scheduler_tick (11,531,522 samples, 0.01%)</title><rect x="85.5367%" y="1461" width="0.0143%" height="15" fill="rgb(254,38,20)" fg:x="68760572629" fg:w="11531522"/><text x="85.7867%" y="1471.50"></text></g><g><title>__sysvec_apic_timer_interrupt (18,552,999 samples, 0.02%)</title><rect x="85.5347%" y="1541" width="0.0231%" height="15" fill="rgb(250,47,30)" fg:x="68759002728" fg:w="18552999"/><text x="85.7847%" y="1551.50"></text></g><g><title>hrtimer_interrupt (18,552,999 samples, 0.02%)</title><rect x="85.5347%" y="1525" width="0.0231%" height="15" fill="rgb(224,124,36)" fg:x="68759002728" fg:w="18552999"/><text x="85.7847%" y="1535.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (22,451,708 samples, 0.03%)</title><rect x="85.5328%" y="1573" width="0.0279%" height="15" fill="rgb(246,68,51)" fg:x="68757447875" fg:w="22451708"/><text x="85.7828%" y="1583.50"></text></g><g><title>sysvec_apic_timer_interrupt (21,653,773 samples, 0.03%)</title><rect x="85.5338%" y="1557" width="0.0269%" height="15" fill="rgb(253,43,49)" fg:x="68758245810" fg:w="21653773"/><text x="85.7838%" y="1567.50"></text></g><g><title>asm_sysvec_call_function_single (10,593,587 samples, 0.01%)</title><rect x="85.5607%" y="1573" width="0.0132%" height="15" fill="rgb(219,54,36)" fg:x="68779899583" fg:w="10593587"/><text x="85.8107%" y="1583.50"></text></g><g><title>sysvec_call_function_single (10,593,587 samples, 0.01%)</title><rect x="85.5607%" y="1557" width="0.0132%" height="15" fill="rgb(227,133,34)" fg:x="68779899583" fg:w="10593587"/><text x="85.8107%" y="1567.50"></text></g><g><title>irq_exit_rcu (9,843,093 samples, 0.01%)</title><rect x="85.5617%" y="1541" width="0.0122%" height="15" fill="rgb(247,227,15)" fg:x="68780650077" fg:w="9843093"/><text x="85.8117%" y="1551.50"></text></g><g><title>__irq_exit_rcu (9,843,093 samples, 0.01%)</title><rect x="85.5617%" y="1525" width="0.0122%" height="15" fill="rgb(229,96,14)" fg:x="68780650077" fg:w="9843093"/><text x="85.8117%" y="1535.50"></text></g><g><title>__kprobes_text_end (9,843,093 samples, 0.01%)</title><rect x="85.5617%" y="1509" width="0.0122%" height="15" fill="rgb(220,79,17)" fg:x="68780650077" fg:w="9843093"/><text x="85.8117%" y="1519.50"></text></g><g><title>blk_done_softirq (9,843,093 samples, 0.01%)</title><rect x="85.5617%" y="1493" width="0.0122%" height="15" fill="rgb(205,131,53)" fg:x="68780650077" fg:w="9843093"/><text x="85.8117%" y="1503.50"></text></g><g><title>scsi_complete (9,843,093 samples, 0.01%)</title><rect x="85.5617%" y="1477" width="0.0122%" height="15" fill="rgb(209,50,29)" fg:x="68780650077" fg:w="9843093"/><text x="85.8117%" y="1487.50"></text></g><g><title>scsi_finish_command (9,843,093 samples, 0.01%)</title><rect x="85.5617%" y="1461" width="0.0122%" height="15" fill="rgb(245,86,46)" fg:x="68780650077" fg:w="9843093"/><text x="85.8117%" y="1471.50"></text></g><g><title>scsi_io_completion (9,843,093 samples, 0.01%)</title><rect x="85.5617%" y="1445" width="0.0122%" height="15" fill="rgb(235,66,46)" fg:x="68780650077" fg:w="9843093"/><text x="85.8117%" y="1455.50"></text></g><g><title>scsi_end_request (9,843,093 samples, 0.01%)</title><rect x="85.5617%" y="1429" width="0.0122%" height="15" fill="rgb(232,148,31)" fg:x="68780650077" fg:w="9843093"/><text x="85.8117%" y="1439.50"></text></g><g><title>blk_update_request (9,143,257 samples, 0.01%)</title><rect x="85.5625%" y="1413" width="0.0114%" height="15" fill="rgb(217,149,8)" fg:x="68781349913" fg:w="9143257"/><text x="85.8125%" y="1423.50"></text></g><g><title>bio_endio (9,143,257 samples, 0.01%)</title><rect x="85.5625%" y="1397" width="0.0114%" height="15" fill="rgb(209,183,11)" fg:x="68781349913" fg:w="9143257"/><text x="85.8125%" y="1407.50"></text></g><g><title>ext4_end_bio (9,143,257 samples, 0.01%)</title><rect x="85.5625%" y="1381" width="0.0114%" height="15" fill="rgb(208,55,20)" fg:x="68781349913" fg:w="9143257"/><text x="85.8125%" y="1391.50"></text></g><g><title>ext4_finish_bio (9,143,257 samples, 0.01%)</title><rect x="85.5625%" y="1365" width="0.0114%" height="15" fill="rgb(218,39,14)" fg:x="68781349913" fg:w="9143257"/><text x="85.8125%" y="1375.50"></text></g><g><title>lruvec_to_valid_folios_set (9,368,404 samples, 0.01%)</title><rect x="85.5749%" y="1573" width="0.0117%" height="15" fill="rgb(216,169,33)" fg:x="68791276317" fg:w="9368404"/><text x="85.8249%" y="1583.50"></text></g><g><title>__mod_memcg_lruvec_state (65,339,670 samples, 0.08%)</title><rect x="85.6183%" y="1541" width="0.0813%" height="15" fill="rgb(233,80,24)" fg:x="68826160652" fg:w="65339670"/><text x="85.8683%" y="1551.50"></text></g><g><title>__mod_lruvec_state (76,165,846 samples, 0.09%)</title><rect x="85.6126%" y="1557" width="0.0947%" height="15" fill="rgb(213,179,31)" fg:x="68821558685" fg:w="76165846"/><text x="85.8626%" y="1567.50"></text></g><g><title>_raw_spin_unlock_irq (19,363,725 samples, 0.02%)</title><rect x="85.7132%" y="1557" width="0.0241%" height="15" fill="rgb(209,19,5)" fg:x="68902449063" fg:w="19363725"/><text x="85.9632%" y="1567.50"></text></g><g><title>lock_release (13,159,977 samples, 0.02%)</title><rect x="85.7209%" y="1541" width="0.0164%" height="15" fill="rgb(219,18,35)" fg:x="68908652811" fg:w="13159977"/><text x="85.9709%" y="1551.50"></text></g><g><title>do_raw_spin_lock (48,257,901 samples, 0.06%)</title><rect x="85.7429%" y="1525" width="0.0600%" height="15" fill="rgb(209,169,16)" fg:x="68926316781" fg:w="48257901"/><text x="85.9929%" y="1535.50"></text></g><g><title>native_queued_spin_lock_slowpath (46,693,617 samples, 0.06%)</title><rect x="85.7448%" y="1509" width="0.0581%" height="15" fill="rgb(245,90,51)" fg:x="68927881065" fg:w="46693617"/><text x="85.9948%" y="1519.50"></text></g><g><title>__lock_acquire (10,647,753 samples, 0.01%)</title><rect x="85.8087%" y="1509" width="0.0132%" height="15" fill="rgb(220,99,45)" fg:x="68979263298" fg:w="10647753"/><text x="86.0587%" y="1519.50"></text></g><g><title>folio_lruvec_lock_irq (72,566,785 samples, 0.09%)</title><rect x="85.7373%" y="1557" width="0.0903%" height="15" fill="rgb(249,89,25)" fg:x="68921812788" fg:w="72566785"/><text x="85.9873%" y="1567.50"></text></g><g><title>_raw_spin_lock_irq (70,309,558 samples, 0.09%)</title><rect x="85.7401%" y="1541" width="0.0875%" height="15" fill="rgb(239,193,0)" fg:x="68924070015" fg:w="70309558"/><text x="85.9901%" y="1551.50"></text></g><g><title>lock_acquire (19,804,891 samples, 0.02%)</title><rect x="85.8029%" y="1525" width="0.0246%" height="15" fill="rgb(231,126,1)" fg:x="68974574682" fg:w="19804891"/><text x="86.0529%" y="1535.50"></text></g><g><title>page_cache_ext_isolate_folio (205,158,252 samples, 0.26%)</title><rect x="85.5865%" y="1573" width="0.2552%" height="15" fill="rgb(243,166,3)" fg:x="68800644721" fg:w="205158252"/><text x="85.8365%" y="1583.50"></text></g><g><title>do_raw_spin_lock (31,016,846 samples, 0.04%)</title><rect x="85.8861%" y="1477" width="0.0386%" height="15" fill="rgb(223,22,34)" fg:x="69041462340" fg:w="31016846"/><text x="86.1361%" y="1487.50"></text></g><g><title>native_queued_spin_lock_slowpath (29,471,876 samples, 0.04%)</title><rect x="85.8880%" y="1461" width="0.0367%" height="15" fill="rgb(251,52,51)" fg:x="69043007310" fg:w="29471876"/><text x="86.1380%" y="1471.50"></text></g><g><title>folio_lruvec_lock_irqsave (36,445,874 samples, 0.05%)</title><rect x="85.8823%" y="1509" width="0.0453%" height="15" fill="rgb(221,165,28)" fg:x="69038410034" fg:w="36445874"/><text x="86.1323%" y="1519.50"></text></g><g><title>_raw_spin_lock_irqsave (34,131,936 samples, 0.04%)</title><rect x="85.8852%" y="1493" width="0.0425%" height="15" fill="rgb(218,121,47)" fg:x="69040723972" fg:w="34131936"/><text x="86.1352%" y="1503.50"></text></g><g><title>__lock_acquire (19,327,705 samples, 0.02%)</title><rect x="85.9606%" y="1477" width="0.0240%" height="15" fill="rgb(209,120,9)" fg:x="69101339163" fg:w="19327705"/><text x="86.2106%" y="1487.50"></text></g><g><title>lock_acquire (34,903,223 samples, 0.04%)</title><rect x="85.9518%" y="1493" width="0.0434%" height="15" fill="rgb(236,68,12)" fg:x="69094226437" fg:w="34903223"/><text x="86.2018%" y="1503.50"></text></g><g><title>trace_lock_acquire (8,462,792 samples, 0.01%)</title><rect x="85.9846%" y="1477" width="0.0105%" height="15" fill="rgb(225,194,26)" fg:x="69120666868" fg:w="8462792"/><text x="86.2346%" y="1487.50"></text></g><g><title>lock_is_held_type (9,180,817 samples, 0.01%)</title><rect x="85.9952%" y="1493" width="0.0114%" height="15" fill="rgb(231,84,39)" fg:x="69129129660" fg:w="9180817"/><text x="86.2452%" y="1503.50"></text></g><g><title>lock_release (8,453,145 samples, 0.01%)</title><rect x="86.0066%" y="1493" width="0.0105%" height="15" fill="rgb(210,11,45)" fg:x="69138310477" fg:w="8453145"/><text x="86.2566%" y="1503.50"></text></g><g><title>lru_add_fn (78,804,929 samples, 0.10%)</title><rect x="85.9277%" y="1509" width="0.0980%" height="15" fill="rgb(224,54,52)" fg:x="69074855908" fg:w="78804929"/><text x="86.1777%" y="1519.50"></text></g><g><title>folio_batch_move_lru (129,681,725 samples, 0.16%)</title><rect x="85.8692%" y="1525" width="0.1613%" height="15" fill="rgb(238,102,14)" fg:x="69027889081" fg:w="129681725"/><text x="86.1192%" y="1535.50"></text></g><g><title>lock_acquire (13,152,860 samples, 0.02%)</title><rect x="86.0306%" y="1525" width="0.0164%" height="15" fill="rgb(243,160,52)" fg:x="69157570806" fg:w="13152860"/><text x="86.2806%" y="1535.50"></text></g><g><title>__lock_acquire (10,804,232 samples, 0.01%)</title><rect x="86.0335%" y="1509" width="0.0134%" height="15" fill="rgb(216,114,19)" fg:x="69159919434" fg:w="10804232"/><text x="86.2835%" y="1519.50"></text></g><g><title>lock_release (18,208,891 samples, 0.02%)</title><rect x="86.0469%" y="1525" width="0.0227%" height="15" fill="rgb(244,166,37)" fg:x="69170723666" fg:w="18208891"/><text x="86.2969%" y="1535.50"></text></g><g><title>folio_add_lru (170,339,250 samples, 0.21%)</title><rect x="85.8606%" y="1541" width="0.2119%" height="15" fill="rgb(246,29,44)" fg:x="69020955993" fg:w="170339250"/><text x="86.1106%" y="1551.50"></text></g><g><title>uncharge_batch (13,778,835 samples, 0.02%)</title><rect x="86.1626%" y="1509" width="0.0171%" height="15" fill="rgb(215,56,53)" fg:x="69263695840" fg:w="13778835"/><text x="86.4126%" y="1519.50"></text></g><g><title>lock_acquire (9,198,972 samples, 0.01%)</title><rect x="86.1855%" y="1493" width="0.0114%" height="15" fill="rgb(217,60,2)" fg:x="69282115754" fg:w="9198972"/><text x="86.4355%" y="1503.50"></text></g><g><title>__mem_cgroup_uncharge_list (29,895,608 samples, 0.04%)</title><rect x="86.1616%" y="1525" width="0.0372%" height="15" fill="rgb(207,26,24)" fg:x="69262927928" fg:w="29895608"/><text x="86.4116%" y="1535.50"></text></g><g><title>uncharge_folio (15,348,861 samples, 0.02%)</title><rect x="86.1797%" y="1509" width="0.0191%" height="15" fill="rgb(252,210,15)" fg:x="69277474675" fg:w="15348861"/><text x="86.4297%" y="1519.50"></text></g><g><title>__mod_lruvec_page_state (13,901,240 samples, 0.02%)</title><rect x="86.2170%" y="1477" width="0.0173%" height="15" fill="rgb(253,209,26)" fg:x="69307479445" fg:w="13901240"/><text x="86.4670%" y="1487.50"></text></g><g><title>filemap_unaccount_folio (15,483,350 samples, 0.02%)</title><rect x="86.2160%" y="1493" width="0.0193%" height="15" fill="rgb(238,170,14)" fg:x="69306683489" fg:w="15483350"/><text x="86.4660%" y="1503.50"></text></g><g><title>do_raw_write_lock (2,406,011,317 samples, 2.99%)</title><rect x="86.2697%" y="1445" width="2.9930%" height="15" fill="rgb(216,178,15)" fg:x="69349822729" fg:w="2406011317"/><text x="86.5197%" y="1455.50">do_..</text></g><g><title>queued_write_lock_slowpath (2,401,342,007 samples, 2.99%)</title><rect x="86.2755%" y="1429" width="2.9872%" height="15" fill="rgb(250,197,2)" fg:x="69354492039" fg:w="2401342007"/><text x="86.5255%" y="1439.50">que..</text></g><g><title>native_queued_spin_lock_slowpath (999,500,735 samples, 1.24%)</title><rect x="88.0194%" y="1413" width="1.2434%" height="15" fill="rgb(212,70,42)" fg:x="70756333311" fg:w="999500735"/><text x="88.2694%" y="1423.50"></text></g><g><title>cache_ext_ds_registry_write_lock (2,422,711,200 samples, 3.01%)</title><rect x="86.2688%" y="1477" width="3.0138%" height="15" fill="rgb(227,213,9)" fg:x="69349059565" fg:w="2422711200"/><text x="86.5188%" y="1487.50">cac..</text></g><g><title>_raw_write_lock (2,421,948,036 samples, 3.01%)</title><rect x="86.2697%" y="1461" width="3.0129%" height="15" fill="rgb(245,99,25)" fg:x="69349822729" fg:w="2421948036"/><text x="86.5197%" y="1471.50">_ra..</text></g><g><title>lock_acquire (15,936,719 samples, 0.02%)</title><rect x="89.2627%" y="1445" width="0.0198%" height="15" fill="rgb(250,82,29)" fg:x="71755834046" fg:w="15936719"/><text x="89.5127%" y="1455.50"></text></g><g><title>__lock_acquire (14,517,436 samples, 0.02%)</title><rect x="89.2645%" y="1429" width="0.0181%" height="15" fill="rgb(241,226,54)" fg:x="71757253329" fg:w="14517436"/><text x="89.5145%" y="1439.50"></text></g><g><title>_raw_spin_lock_irqsave (8,265,586 samples, 0.01%)</title><rect x="89.3284%" y="1381" width="0.0103%" height="15" fill="rgb(221,99,41)" fg:x="71808581960" fg:w="8265586"/><text x="89.5784%" y="1391.50"></text></g><g><title>__unfreeze_partials (21,804,104 samples, 0.03%)</title><rect x="89.3217%" y="1397" width="0.0271%" height="15" fill="rgb(213,90,21)" fg:x="71803195708" fg:w="21804104"/><text x="89.5717%" y="1407.50"></text></g><g><title>put_cpu_partial (32,190,571 samples, 0.04%)</title><rect x="89.3208%" y="1413" width="0.0400%" height="15" fill="rgb(205,208,24)" fg:x="71802496152" fg:w="32190571"/><text x="89.5708%" y="1423.50"></text></g><g><title>__slab_free (44,033,768 samples, 0.05%)</title><rect x="89.3123%" y="1429" width="0.0548%" height="15" fill="rgb(246,31,12)" fg:x="71795692951" fg:w="44033768"/><text x="89.5623%" y="1439.50"></text></g><g><title>__kmem_cache_free (51,028,076 samples, 0.06%)</title><rect x="89.3104%" y="1445" width="0.0635%" height="15" fill="rgb(213,154,6)" fg:x="71794135297" fg:w="51028076"/><text x="89.5604%" y="1455.50"></text></g><g><title>kfree (70,924,082 samples, 0.09%)</title><rect x="89.2875%" y="1461" width="0.0882%" height="15" fill="rgb(222,163,29)" fg:x="71775718682" fg:w="70924082"/><text x="89.5375%" y="1471.50"></text></g><g><title>cache_ext_list_node_free (71,717,843 samples, 0.09%)</title><rect x="89.2875%" y="1477" width="0.0892%" height="15" fill="rgb(227,201,8)" fg:x="71775718682" fg:w="71717843"/><text x="89.5375%" y="1487.50"></text></g><g><title>__slab_free (15,451,669 samples, 0.02%)</title><rect x="89.3821%" y="1445" width="0.0192%" height="15" fill="rgb(233,9,32)" fg:x="71851771600" fg:w="15451669"/><text x="89.6321%" y="1455.50"></text></g><g><title>__kmem_cache_free (19,311,777 samples, 0.02%)</title><rect x="89.3802%" y="1461" width="0.0240%" height="15" fill="rgb(217,54,24)" fg:x="71850252539" fg:w="19311777"/><text x="89.6302%" y="1471.50"></text></g><g><title>valid_folios_del (2,548,855,948 samples, 3.17%)</title><rect x="86.2363%" y="1493" width="3.1707%" height="15" fill="rgb(235,192,0)" fg:x="69322961044" fg:w="2548855948"/><text x="86.4863%" y="1503.50">val..</text></g><g><title>kfree (24,380,467 samples, 0.03%)</title><rect x="89.3767%" y="1477" width="0.0303%" height="15" fill="rgb(235,45,9)" fg:x="71847436525" fg:w="24380467"/><text x="89.6267%" y="1487.50"></text></g><g><title>xas_init_marks (15,375,669 samples, 0.02%)</title><rect x="89.4089%" y="1493" width="0.0191%" height="15" fill="rgb(246,42,40)" fg:x="71873327492" fg:w="15375669"/><text x="89.6589%" y="1503.50"></text></g><g><title>xas_clear_mark (13,847,619 samples, 0.02%)</title><rect x="89.4108%" y="1477" width="0.0172%" height="15" fill="rgb(248,111,24)" fg:x="71874855542" fg:w="13847619"/><text x="89.6608%" y="1487.50"></text></g><g><title>__filemap_remove_folio (2,632,321,382 samples, 3.27%)</title><rect x="86.2046%" y="1509" width="3.2746%" height="15" fill="rgb(249,65,22)" fg:x="69297518948" fg:w="2632321382"/><text x="86.4546%" y="1519.50">__f..</text></g><g><title>xas_store (41,137,169 samples, 0.05%)</title><rect x="89.4280%" y="1493" width="0.0512%" height="15" fill="rgb(238,111,51)" fg:x="71888703161" fg:w="41137169"/><text x="89.6780%" y="1503.50"></text></g><g><title>xas_create (33,531,060 samples, 0.04%)</title><rect x="89.4375%" y="1477" width="0.0417%" height="15" fill="rgb(250,118,22)" fg:x="71896309270" fg:w="33531060"/><text x="89.6875%" y="1487.50"></text></g><g><title>do_raw_spin_lock (213,943,375 samples, 0.27%)</title><rect x="89.4811%" y="1493" width="0.2661%" height="15" fill="rgb(234,84,26)" fg:x="71931406402" fg:w="213943375"/><text x="89.7311%" y="1503.50"></text></g><g><title>native_queued_spin_lock_slowpath (203,953,267 samples, 0.25%)</title><rect x="89.4936%" y="1477" width="0.2537%" height="15" fill="rgb(243,172,12)" fg:x="71941396510" fg:w="203953267"/><text x="89.7436%" y="1487.50"></text></g><g><title>_raw_spin_lock (229,252,020 samples, 0.29%)</title><rect x="89.4792%" y="1509" width="0.2852%" height="15" fill="rgb(236,150,49)" fg:x="71929840330" fg:w="229252020"/><text x="89.7292%" y="1519.50"></text></g><g><title>lock_acquire (13,742,573 samples, 0.02%)</title><rect x="89.7473%" y="1493" width="0.0171%" height="15" fill="rgb(225,197,26)" fg:x="72145349777" fg:w="13742573"/><text x="89.9973%" y="1503.50"></text></g><g><title>__lock_acquire (12,951,203 samples, 0.02%)</title><rect x="89.7483%" y="1477" width="0.0161%" height="15" fill="rgb(214,17,42)" fg:x="72146141147" fg:w="12951203"/><text x="89.9983%" y="1487.50"></text></g><g><title>do_raw_spin_lock (13,918,057 samples, 0.02%)</title><rect x="89.7653%" y="1493" width="0.0173%" height="15" fill="rgb(224,165,40)" fg:x="72159829625" fg:w="13918057"/><text x="90.0153%" y="1503.50"></text></g><g><title>_raw_spin_lock_irq (17,768,489 samples, 0.02%)</title><rect x="89.7644%" y="1509" width="0.0221%" height="15" fill="rgb(246,100,4)" fg:x="72159092350" fg:w="17768489"/><text x="90.0144%" y="1519.50"></text></g><g><title>__hrtimer_run_queues (13,131,257 samples, 0.02%)</title><rect x="89.8019%" y="1429" width="0.0163%" height="15" fill="rgb(222,103,0)" fg:x="72189278831" fg:w="13131257"/><text x="90.0519%" y="1439.50"></text></g><g><title>tick_sched_timer (12,393,525 samples, 0.02%)</title><rect x="89.8028%" y="1413" width="0.0154%" height="15" fill="rgb(227,189,26)" fg:x="72190016563" fg:w="12393525"/><text x="90.0528%" y="1423.50"></text></g><g><title>update_process_times (11,598,717 samples, 0.01%)</title><rect x="89.8038%" y="1397" width="0.0144%" height="15" fill="rgb(214,202,17)" fg:x="72190811371" fg:w="11598717"/><text x="90.0538%" y="1407.50"></text></g><g><title>scheduler_tick (9,295,493 samples, 0.01%)</title><rect x="89.8067%" y="1381" width="0.0116%" height="15" fill="rgb(229,111,3)" fg:x="72193114595" fg:w="9295493"/><text x="90.0567%" y="1391.50"></text></g><g><title>hrtimer_interrupt (13,935,180 samples, 0.02%)</title><rect x="89.8019%" y="1445" width="0.0173%" height="15" fill="rgb(229,172,15)" fg:x="72189278831" fg:w="13935180"/><text x="90.0519%" y="1455.50"></text></g><g><title>__sysvec_apic_timer_interrupt (14,719,970 samples, 0.02%)</title><rect x="89.8019%" y="1461" width="0.0183%" height="15" fill="rgb(230,224,35)" fg:x="72189278831" fg:w="14719970"/><text x="90.0519%" y="1471.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (25,564,988 samples, 0.03%)</title><rect x="89.7981%" y="1493" width="0.0318%" height="15" fill="rgb(251,141,6)" fg:x="72186232226" fg:w="25564988"/><text x="90.0481%" y="1503.50"></text></g><g><title>sysvec_apic_timer_interrupt (25,564,988 samples, 0.03%)</title><rect x="89.7981%" y="1477" width="0.0318%" height="15" fill="rgb(225,208,6)" fg:x="72186232226" fg:w="25564988"/><text x="90.0481%" y="1487.50"></text></g><g><title>asm_sysvec_call_function_single (10,514,403 samples, 0.01%)</title><rect x="89.8299%" y="1493" width="0.0131%" height="15" fill="rgb(246,181,16)" fg:x="72211797214" fg:w="10514403"/><text x="90.0799%" y="1503.50"></text></g><g><title>sysvec_call_function_single (10,514,403 samples, 0.01%)</title><rect x="89.8299%" y="1477" width="0.0131%" height="15" fill="rgb(227,129,36)" fg:x="72211797214" fg:w="10514403"/><text x="90.0799%" y="1487.50"></text></g><g><title>irq_exit_rcu (9,728,219 samples, 0.01%)</title><rect x="89.8309%" y="1461" width="0.0121%" height="15" fill="rgb(248,117,24)" fg:x="72212583398" fg:w="9728219"/><text x="90.0809%" y="1471.50"></text></g><g><title>__irq_exit_rcu (9,728,219 samples, 0.01%)</title><rect x="89.8309%" y="1445" width="0.0121%" height="15" fill="rgb(214,185,35)" fg:x="72212583398" fg:w="9728219"/><text x="90.0809%" y="1455.50"></text></g><g><title>__kprobes_text_end (9,728,219 samples, 0.01%)</title><rect x="89.8309%" y="1429" width="0.0121%" height="15" fill="rgb(236,150,34)" fg:x="72212583398" fg:w="9728219"/><text x="90.0809%" y="1439.50"></text></g><g><title>blk_done_softirq (9,728,219 samples, 0.01%)</title><rect x="89.8309%" y="1413" width="0.0121%" height="15" fill="rgb(243,228,27)" fg:x="72212583398" fg:w="9728219"/><text x="90.0809%" y="1423.50"></text></g><g><title>scsi_complete (9,728,219 samples, 0.01%)</title><rect x="89.8309%" y="1397" width="0.0121%" height="15" fill="rgb(245,77,44)" fg:x="72212583398" fg:w="9728219"/><text x="90.0809%" y="1407.50"></text></g><g><title>scsi_finish_command (9,728,219 samples, 0.01%)</title><rect x="89.8309%" y="1381" width="0.0121%" height="15" fill="rgb(235,214,42)" fg:x="72212583398" fg:w="9728219"/><text x="90.0809%" y="1391.50"></text></g><g><title>scsi_io_completion (9,728,219 samples, 0.01%)</title><rect x="89.8309%" y="1365" width="0.0121%" height="15" fill="rgb(221,74,3)" fg:x="72212583398" fg:w="9728219"/><text x="90.0809%" y="1375.50"></text></g><g><title>scsi_end_request (9,728,219 samples, 0.01%)</title><rect x="89.8309%" y="1349" width="0.0121%" height="15" fill="rgb(206,121,29)" fg:x="72212583398" fg:w="9728219"/><text x="90.0809%" y="1359.50"></text></g><g><title>blk_update_request (9,728,219 samples, 0.01%)</title><rect x="89.8309%" y="1333" width="0.0121%" height="15" fill="rgb(249,131,53)" fg:x="72212583398" fg:w="9728219"/><text x="90.0809%" y="1343.50"></text></g><g><title>bio_endio (9,728,219 samples, 0.01%)</title><rect x="89.8309%" y="1317" width="0.0121%" height="15" fill="rgb(236,170,29)" fg:x="72212583398" fg:w="9728219"/><text x="90.0809%" y="1327.50"></text></g><g><title>ext4_end_bio (9,728,219 samples, 0.01%)</title><rect x="89.8309%" y="1301" width="0.0121%" height="15" fill="rgb(247,96,15)" fg:x="72212583398" fg:w="9728219"/><text x="90.0809%" y="1311.50"></text></g><g><title>ext4_finish_bio (9,728,219 samples, 0.01%)</title><rect x="89.8309%" y="1285" width="0.0121%" height="15" fill="rgb(211,210,7)" fg:x="72212583398" fg:w="9728219"/><text x="90.0809%" y="1295.50"></text></g><g><title>_raw_spin_unlock_irq (45,457,268 samples, 0.06%)</title><rect x="89.7903%" y="1509" width="0.0565%" height="15" fill="rgb(240,88,50)" fg:x="72179968614" fg:w="45457268"/><text x="90.0403%" y="1519.50"></text></g><g><title>__remove_mapping (2,938,024,732 samples, 3.65%)</title><rect x="86.1998%" y="1525" width="3.6548%" height="15" fill="rgb(209,229,26)" fg:x="69293604462" fg:w="2938024732"/><text x="86.4498%" y="1535.50">__re..</text></g><g><title>memcg_slab_free_hook (15,426,474 samples, 0.02%)</title><rect x="89.8961%" y="1429" width="0.0192%" height="15" fill="rgb(210,68,23)" fg:x="72265008535" fg:w="15426474"/><text x="90.1461%" y="1439.50"></text></g><g><title>free_buffer_head (31,287,093 samples, 0.04%)</title><rect x="89.8790%" y="1461" width="0.0389%" height="15" fill="rgb(229,180,13)" fg:x="72251256184" fg:w="31287093"/><text x="90.1290%" y="1471.50"></text></g><g><title>kmem_cache_free (29,837,508 samples, 0.04%)</title><rect x="89.8808%" y="1445" width="0.0371%" height="15" fill="rgb(236,53,44)" fg:x="72252705769" fg:w="29837508"/><text x="90.1308%" y="1455.50"></text></g><g><title>jbd2_journal_try_to_free_buffers (46,236,829 samples, 0.06%)</title><rect x="89.8614%" y="1493" width="0.0575%" height="15" fill="rgb(244,214,29)" fg:x="72237074079" fg:w="46236829"/><text x="90.1114%" y="1503.50"></text></g><g><title>try_to_free_buffers (41,221,252 samples, 0.05%)</title><rect x="89.8676%" y="1477" width="0.0513%" height="15" fill="rgb(220,75,29)" fg:x="72242089656" fg:w="41221252"/><text x="90.1176%" y="1487.50"></text></g><g><title>filemap_release_folio (53,237,655 samples, 0.07%)</title><rect x="89.8556%" y="1525" width="0.0662%" height="15" fill="rgb(214,183,37)" fg:x="72232429751" fg:w="53237655"/><text x="90.1056%" y="1535.50"></text></g><g><title>ext4_release_folio (53,237,655 samples, 0.07%)</title><rect x="89.8556%" y="1509" width="0.0662%" height="15" fill="rgb(239,117,29)" fg:x="72232429751" fg:w="53237655"/><text x="90.1056%" y="1519.50"></text></g><g><title>free_unref_page_prepare (9,005,340 samples, 0.01%)</title><rect x="89.9369%" y="1509" width="0.0112%" height="15" fill="rgb(237,171,35)" fg:x="72297756203" fg:w="9005340"/><text x="90.1869%" y="1519.50"></text></g><g><title>free_unref_page_list (18,034,599 samples, 0.02%)</title><rect x="89.9286%" y="1525" width="0.0224%" height="15" fill="rgb(229,178,53)" fg:x="72291084282" fg:w="18034599"/><text x="90.1786%" y="1535.50"></text></g><g><title>lock_acquire (15,331,855 samples, 0.02%)</title><rect x="89.9510%" y="1525" width="0.0191%" height="15" fill="rgb(210,102,19)" fg:x="72309118881" fg:w="15331855"/><text x="90.2010%" y="1535.50"></text></g><g><title>lock_release (12,359,978 samples, 0.02%)</title><rect x="89.9701%" y="1525" width="0.0154%" height="15" fill="rgb(235,127,22)" fg:x="72324450736" fg:w="12359978"/><text x="90.2201%" y="1535.50"></text></g><g><title>reclaim_pages (3,337,230,935 samples, 4.15%)</title><rect x="85.8418%" y="1573" width="4.1514%" height="15" fill="rgb(244,31,31)" fg:x="69005802973" fg:w="3337230935"/><text x="86.0918%" y="1583.50">recla..</text></g><g><title>reclaim_folio_list (3,325,907,773 samples, 4.14%)</title><rect x="85.8558%" y="1557" width="4.1374%" height="15" fill="rgb(231,43,21)" fg:x="69017126135" fg:w="3325907773"/><text x="86.1058%" y="1567.50">recla..</text></g><g><title>shrink_folio_list (3,148,591,075 samples, 3.92%)</title><rect x="86.0764%" y="1541" width="3.9168%" height="15" fill="rgb(217,131,35)" fg:x="69194442833" fg:w="3148591075"/><text x="86.3264%" y="1551.50">shri..</text></g><g><title>__page_cache_ext_isolate_and_reclaim (3,792,284,298 samples, 4.72%)</title><rect x="85.5216%" y="1589" width="4.7175%" height="15" fill="rgb(221,149,4)" fg:x="68748402327" fg:w="3792284298"/><text x="85.7716%" y="1599.50">__pag..</text></g><g><title>valid_folios_exists_unlocked (197,652,717 samples, 0.25%)</title><rect x="89.9932%" y="1573" width="0.2459%" height="15" fill="rgb(232,170,28)" fg:x="72343033908" fg:w="197652717"/><text x="90.2432%" y="1583.50"></text></g><g><title>page_cache_ext_isolate_and_reclaim (3,796,027,218 samples, 4.72%)</title><rect x="85.5216%" y="1605" width="4.7222%" height="15" fill="rgb(238,56,10)" fg:x="68748402327" fg:w="3796027218"/><text x="85.7716%" y="1615.50">page_c..</text></g><g><title>do_raw_write_lock (329,102,709 samples, 0.41%)</title><rect x="90.3032%" y="1477" width="0.4094%" height="15" fill="rgb(235,196,14)" fg:x="72592195242" fg:w="329102709"/><text x="90.5532%" y="1487.50"></text></g><g><title>queued_write_lock_slowpath (328,383,403 samples, 0.41%)</title><rect x="90.3040%" y="1461" width="0.4085%" height="15" fill="rgb(216,45,48)" fg:x="72592914548" fg:w="328383403"/><text x="90.5540%" y="1471.50"></text></g><g><title>native_queued_spin_lock_slowpath (137,558,402 samples, 0.17%)</title><rect x="90.5414%" y="1445" width="0.1711%" height="15" fill="rgb(238,213,17)" fg:x="72783739549" fg:w="137558402"/><text x="90.7914%" y="1455.50"></text></g><g><title>cache_ext_ds_registry_write_lock (332,140,866 samples, 0.41%)</title><rect x="90.3032%" y="1509" width="0.4132%" height="15" fill="rgb(212,13,2)" fg:x="72592195242" fg:w="332140866"/><text x="90.5532%" y="1519.50"></text></g><g><title>_raw_write_lock (332,140,866 samples, 0.41%)</title><rect x="90.3032%" y="1493" width="0.4132%" height="15" fill="rgb(240,114,20)" fg:x="72592195242" fg:w="332140866"/><text x="90.5532%" y="1503.50"></text></g><g><title>cache_ext_list_node_free (8,359,174 samples, 0.01%)</title><rect x="90.7173%" y="1509" width="0.0104%" height="15" fill="rgb(228,41,40)" fg:x="72925134546" fg:w="8359174"/><text x="90.9673%" y="1519.50"></text></g><g><title>kfree (8,359,174 samples, 0.01%)</title><rect x="90.7173%" y="1493" width="0.0104%" height="15" fill="rgb(244,132,35)" fg:x="72925134546" fg:w="8359174"/><text x="90.9673%" y="1503.50"></text></g><g><title>valid_folios_del (356,803,172 samples, 0.44%)</title><rect x="90.2946%" y="1525" width="0.4439%" height="15" fill="rgb(253,189,4)" fg:x="72585337736" fg:w="356803172"/><text x="90.5446%" y="1535.50"></text></g><g><title>kfree (8,647,188 samples, 0.01%)</title><rect x="90.7277%" y="1509" width="0.0108%" height="15" fill="rgb(224,37,19)" fg:x="72933493720" fg:w="8647188"/><text x="90.9777%" y="1519.50"></text></g><g><title>__filemap_remove_folio (374,647,734 samples, 0.47%)</title><rect x="90.2820%" y="1541" width="0.4661%" height="15" fill="rgb(235,223,18)" fg:x="72575173505" fg:w="374647734"/><text x="90.5320%" y="1551.50"></text></g><g><title>do_raw_spin_lock (423,168,198 samples, 0.53%)</title><rect x="90.7510%" y="1525" width="0.5264%" height="15" fill="rgb(235,163,25)" fg:x="72952207502" fg:w="423168198"/><text x="91.0010%" y="1535.50"></text></g><g><title>native_queued_spin_lock_slowpath (420,883,852 samples, 0.52%)</title><rect x="90.7538%" y="1509" width="0.5236%" height="15" fill="rgb(217,145,28)" fg:x="72954491848" fg:w="420883852"/><text x="91.0038%" y="1519.50"></text></g><g><title>_raw_spin_lock (429,499,569 samples, 0.53%)</title><rect x="90.7480%" y="1541" width="0.5343%" height="15" fill="rgb(223,223,32)" fg:x="72949821239" fg:w="429499569"/><text x="90.9980%" y="1551.50"></text></g><g><title>_raw_spin_lock_irq (11,421,795 samples, 0.01%)</title><rect x="91.2823%" y="1541" width="0.0142%" height="15" fill="rgb(227,189,39)" fg:x="73379320808" fg:w="11421795"/><text x="91.5323%" y="1551.50"></text></g><g><title>__remove_mapping (833,459,567 samples, 1.04%)</title><rect x="90.2713%" y="1557" width="1.0368%" height="15" fill="rgb(248,10,22)" fg:x="72566630657" fg:w="833459567"/><text x="90.5213%" y="1567.50"></text></g><g><title>memcg_slab_free_hook (14,596,144 samples, 0.02%)</title><rect x="91.3272%" y="1461" width="0.0182%" height="15" fill="rgb(248,46,39)" fg:x="73415415913" fg:w="14596144"/><text x="91.5772%" y="1471.50"></text></g><g><title>free_buffer_head (21,526,433 samples, 0.03%)</title><rect x="91.3196%" y="1493" width="0.0268%" height="15" fill="rgb(248,113,48)" fg:x="73409260815" fg:w="21526433"/><text x="91.5696%" y="1503.50"></text></g><g><title>kmem_cache_free (21,526,433 samples, 0.03%)</title><rect x="91.3196%" y="1477" width="0.0268%" height="15" fill="rgb(245,16,25)" fg:x="73409260815" fg:w="21526433"/><text x="91.5696%" y="1487.50"></text></g><g><title>filemap_release_folio (31,390,467 samples, 0.04%)</title><rect x="91.3082%" y="1557" width="0.0390%" height="15" fill="rgb(249,152,16)" fg:x="73400090224" fg:w="31390467"/><text x="91.5582%" y="1567.50"></text></g><g><title>ext4_release_folio (30,629,251 samples, 0.04%)</title><rect x="91.3091%" y="1541" width="0.0381%" height="15" fill="rgb(250,16,1)" fg:x="73400851440" fg:w="30629251"/><text x="91.5591%" y="1551.50"></text></g><g><title>jbd2_journal_try_to_free_buffers (29,103,637 samples, 0.04%)</title><rect x="91.3110%" y="1525" width="0.0362%" height="15" fill="rgb(249,138,3)" fg:x="73402377054" fg:w="29103637"/><text x="91.5610%" y="1535.50"></text></g><g><title>try_to_free_buffers (25,220,089 samples, 0.03%)</title><rect x="91.3158%" y="1509" width="0.0314%" height="15" fill="rgb(227,71,41)" fg:x="73406260602" fg:w="25220089"/><text x="91.5658%" y="1519.50"></text></g><g><title>shrink_lruvec (4,686,936,484 samples, 5.83%)</title><rect x="85.5197%" y="1621" width="5.8304%" height="15" fill="rgb(209,184,23)" fg:x="68746901391" fg:w="4686936484"/><text x="85.7697%" y="1631.50">shrink_..</text></g><g><title>shrink_list (889,408,330 samples, 1.11%)</title><rect x="90.2437%" y="1605" width="1.1064%" height="15" fill="rgb(223,215,31)" fg:x="72544429545" fg:w="889408330"/><text x="90.4937%" y="1615.50"></text></g><g><title>shrink_inactive_list (887,887,592 samples, 1.10%)</title><rect x="90.2456%" y="1589" width="1.1045%" height="15" fill="rgb(210,146,28)" fg:x="72545950283" fg:w="887887592"/><text x="90.4956%" y="1599.50"></text></g><g><title>shrink_folio_list (875,681,449 samples, 1.09%)</title><rect x="90.2608%" y="1573" width="1.0893%" height="15" fill="rgb(209,183,41)" fg:x="72558156426" fg:w="875681449"/><text x="90.5108%" y="1583.50"></text></g><g><title>cgroup_rstat_flush_locked (22,899,751 samples, 0.03%)</title><rect x="91.3539%" y="1525" width="0.0285%" height="15" fill="rgb(209,224,45)" fg:x="73436854458" fg:w="22899751"/><text x="91.6039%" y="1535.50"></text></g><g><title>mem_cgroup_css_rstat_flush (13,079,278 samples, 0.02%)</title><rect x="91.3661%" y="1509" width="0.0163%" height="15" fill="rgb(224,209,51)" fg:x="73446674931" fg:w="13079278"/><text x="91.6161%" y="1519.50"></text></g><g><title>do_shrink_slab (25,163,459 samples, 0.03%)</title><rect x="91.3520%" y="1589" width="0.0313%" height="15" fill="rgb(223,17,39)" fg:x="73435363253" fg:w="25163459"/><text x="91.6020%" y="1599.50"></text></g><g><title>count_shadow_nodes (25,163,459 samples, 0.03%)</title><rect x="91.3520%" y="1573" width="0.0313%" height="15" fill="rgb(234,204,37)" fg:x="73435363253" fg:w="25163459"/><text x="91.6020%" y="1583.50"></text></g><g><title>mem_cgroup_flush_stats (24,431,664 samples, 0.03%)</title><rect x="91.3529%" y="1557" width="0.0304%" height="15" fill="rgb(236,120,5)" fg:x="73436095048" fg:w="24431664"/><text x="91.6029%" y="1567.50"></text></g><g><title>cgroup_rstat_flush (24,431,664 samples, 0.03%)</title><rect x="91.3529%" y="1541" width="0.0304%" height="15" fill="rgb(248,97,27)" fg:x="73436095048" fg:w="24431664"/><text x="91.6029%" y="1551.50"></text></g><g><title>shrink_node_memcgs (4,714,420,228 samples, 5.86%)</title><rect x="85.5197%" y="1637" width="5.8646%" height="15" fill="rgb(240,66,17)" fg:x="68746901391" fg:w="4714420228"/><text x="85.7697%" y="1647.50">shrink_..</text></g><g><title>shrink_slab (27,483,744 samples, 0.03%)</title><rect x="91.3501%" y="1621" width="0.0342%" height="15" fill="rgb(210,79,3)" fg:x="73433837875" fg:w="27483744"/><text x="91.6001%" y="1631.50"></text></g><g><title>shrink_slab_memcg (27,483,744 samples, 0.03%)</title><rect x="91.3501%" y="1605" width="0.0342%" height="15" fill="rgb(214,176,27)" fg:x="73433837875" fg:w="27483744"/><text x="91.6001%" y="1615.50"></text></g><g><title>charge_memcg (4,772,874,823 samples, 5.94%)</title><rect x="85.4479%" y="1733" width="5.9374%" height="15" fill="rgb(235,185,3)" fg:x="68689234207" fg:w="4772874823"/><text x="85.6979%" y="1743.50">charge_m..</text></g><g><title>try_charge_memcg (4,757,091,052 samples, 5.92%)</title><rect x="85.4676%" y="1717" width="5.9177%" height="15" fill="rgb(227,24,12)" fg:x="68705017978" fg:w="4757091052"/><text x="85.7176%" y="1727.50">try_char..</text></g><g><title>try_to_free_mem_cgroup_pages (4,732,181,772 samples, 5.89%)</title><rect x="85.4986%" y="1701" width="5.8867%" height="15" fill="rgb(252,169,48)" fg:x="68729927258" fg:w="4732181772"/><text x="85.7486%" y="1711.50">try_to_..</text></g><g><title>do_try_to_free_pages (4,732,181,772 samples, 5.89%)</title><rect x="85.4986%" y="1685" width="5.8867%" height="15" fill="rgb(212,65,1)" fg:x="68729927258" fg:w="4732181772"/><text x="85.7486%" y="1695.50">do_try_..</text></g><g><title>shrink_zones (4,732,181,772 samples, 5.89%)</title><rect x="85.4986%" y="1669" width="5.8867%" height="15" fill="rgb(242,39,24)" fg:x="68729927258" fg:w="4732181772"/><text x="85.7486%" y="1679.50">shrink_..</text></g><g><title>shrink_node (4,732,181,772 samples, 5.89%)</title><rect x="85.4986%" y="1653" width="5.8867%" height="15" fill="rgb(249,32,23)" fg:x="68729927258" fg:w="4732181772"/><text x="85.7486%" y="1663.50">shrink_..</text></g><g><title>get_mem_cgroup_from_mm (22,309,906 samples, 0.03%)</title><rect x="91.3853%" y="1733" width="0.0278%" height="15" fill="rgb(251,195,23)" fg:x="73462109030" fg:w="22309906"/><text x="91.6353%" y="1743.50"></text></g><g><title>__mem_cgroup_charge (4,807,301,082 samples, 5.98%)</title><rect x="85.4423%" y="1749" width="5.9802%" height="15" fill="rgb(236,174,8)" fg:x="68684693417" fg:w="4807301082"/><text x="85.6923%" y="1759.50">__mem_cg..</text></g><g><title>__mod_lruvec_page_state (14,513,942 samples, 0.02%)</title><rect x="91.4225%" y="1749" width="0.0181%" height="15" fill="rgb(220,197,8)" fg:x="73491994499" fg:w="14513942"/><text x="91.6725%" y="1759.50"></text></g><g><title>_raw_spin_unlock_irq (8,642,866 samples, 0.01%)</title><rect x="91.4485%" y="1749" width="0.0108%" height="15" fill="rgb(240,108,37)" fg:x="73512948806" fg:w="8642866"/><text x="91.6985%" y="1759.50"></text></g><g><title>tick_sched_timer (14,020,488 samples, 0.02%)</title><rect x="91.4653%" y="1669" width="0.0174%" height="15" fill="rgb(232,176,24)" fg:x="73526398877" fg:w="14020488"/><text x="91.7153%" y="1679.50"></text></g><g><title>update_process_times (11,816,603 samples, 0.01%)</title><rect x="91.4680%" y="1653" width="0.0147%" height="15" fill="rgb(243,35,29)" fg:x="73528602762" fg:w="11816603"/><text x="91.7180%" y="1663.50"></text></g><g><title>scheduler_tick (11,816,603 samples, 0.01%)</title><rect x="91.4680%" y="1637" width="0.0147%" height="15" fill="rgb(210,37,18)" fg:x="73528602762" fg:w="11816603"/><text x="91.7180%" y="1647.50"></text></g><g><title>__hrtimer_run_queues (14,789,733 samples, 0.02%)</title><rect x="91.4653%" y="1685" width="0.0184%" height="15" fill="rgb(224,184,40)" fg:x="73526398877" fg:w="14789733"/><text x="91.7153%" y="1695.50"></text></g><g><title>__sysvec_apic_timer_interrupt (15,581,094 samples, 0.02%)</title><rect x="91.4653%" y="1717" width="0.0194%" height="15" fill="rgb(236,39,29)" fg:x="73526398877" fg:w="15581094"/><text x="91.7153%" y="1727.50"></text></g><g><title>hrtimer_interrupt (15,581,094 samples, 0.02%)</title><rect x="91.4653%" y="1701" width="0.0194%" height="15" fill="rgb(232,48,39)" fg:x="73526398877" fg:w="15581094"/><text x="91.7153%" y="1711.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (20,925,118 samples, 0.03%)</title><rect x="91.4653%" y="1749" width="0.0260%" height="15" fill="rgb(236,34,42)" fg:x="73526398877" fg:w="20925118"/><text x="91.7153%" y="1759.50"></text></g><g><title>sysvec_apic_timer_interrupt (20,925,118 samples, 0.03%)</title><rect x="91.4653%" y="1733" width="0.0260%" height="15" fill="rgb(243,106,37)" fg:x="73526398877" fg:w="20925118"/><text x="91.7153%" y="1743.50"></text></g><g><title>do_raw_spin_lock (10,445,800 samples, 0.01%)</title><rect x="91.4955%" y="1477" width="0.0130%" height="15" fill="rgb(218,96,6)" fg:x="73550709481" fg:w="10445800"/><text x="91.7455%" y="1487.50"></text></g><g><title>native_queued_spin_lock_slowpath (10,445,800 samples, 0.01%)</title><rect x="91.4955%" y="1461" width="0.0130%" height="15" fill="rgb(235,130,12)" fg:x="73550709481" fg:w="10445800"/><text x="91.7455%" y="1471.50"></text></g><g><title>_raw_spin_lock_irqsave (11,247,649 samples, 0.01%)</title><rect x="91.4955%" y="1493" width="0.0140%" height="15" fill="rgb(231,95,0)" fg:x="73550709481" fg:w="11247649"/><text x="91.7455%" y="1503.50"></text></g><g><title>__folio_end_writeback (16,226,801 samples, 0.02%)</title><rect x="91.4945%" y="1509" width="0.0202%" height="15" fill="rgb(228,12,23)" fg:x="73549911242" fg:w="16226801"/><text x="91.7445%" y="1519.50"></text></g><g><title>asm_sysvec_call_function_single (23,910,370 samples, 0.03%)</title><rect x="91.4913%" y="1749" width="0.0297%" height="15" fill="rgb(216,12,1)" fg:x="73547323995" fg:w="23910370"/><text x="91.7413%" y="1759.50"></text></g><g><title>sysvec_call_function_single (23,910,370 samples, 0.03%)</title><rect x="91.4913%" y="1733" width="0.0297%" height="15" fill="rgb(219,59,3)" fg:x="73547323995" fg:w="23910370"/><text x="91.7413%" y="1743.50"></text></g><g><title>irq_exit_rcu (23,910,370 samples, 0.03%)</title><rect x="91.4913%" y="1717" width="0.0297%" height="15" fill="rgb(215,208,46)" fg:x="73547323995" fg:w="23910370"/><text x="91.7413%" y="1727.50"></text></g><g><title>__irq_exit_rcu (23,910,370 samples, 0.03%)</title><rect x="91.4913%" y="1701" width="0.0297%" height="15" fill="rgb(254,224,29)" fg:x="73547323995" fg:w="23910370"/><text x="91.7413%" y="1711.50"></text></g><g><title>__kprobes_text_end (23,910,370 samples, 0.03%)</title><rect x="91.4913%" y="1685" width="0.0297%" height="15" fill="rgb(232,14,29)" fg:x="73547323995" fg:w="23910370"/><text x="91.7413%" y="1695.50"></text></g><g><title>blk_done_softirq (23,910,370 samples, 0.03%)</title><rect x="91.4913%" y="1669" width="0.0297%" height="15" fill="rgb(208,45,52)" fg:x="73547323995" fg:w="23910370"/><text x="91.7413%" y="1679.50"></text></g><g><title>scsi_complete (23,910,370 samples, 0.03%)</title><rect x="91.4913%" y="1653" width="0.0297%" height="15" fill="rgb(234,191,28)" fg:x="73547323995" fg:w="23910370"/><text x="91.7413%" y="1663.50"></text></g><g><title>scsi_finish_command (23,910,370 samples, 0.03%)</title><rect x="91.4913%" y="1637" width="0.0297%" height="15" fill="rgb(244,67,43)" fg:x="73547323995" fg:w="23910370"/><text x="91.7413%" y="1647.50"></text></g><g><title>scsi_io_completion (23,910,370 samples, 0.03%)</title><rect x="91.4913%" y="1621" width="0.0297%" height="15" fill="rgb(236,189,24)" fg:x="73547323995" fg:w="23910370"/><text x="91.7413%" y="1631.50"></text></g><g><title>scsi_end_request (23,910,370 samples, 0.03%)</title><rect x="91.4913%" y="1605" width="0.0297%" height="15" fill="rgb(239,214,33)" fg:x="73547323995" fg:w="23910370"/><text x="91.7413%" y="1615.50"></text></g><g><title>blk_update_request (23,910,370 samples, 0.03%)</title><rect x="91.4913%" y="1589" width="0.0297%" height="15" fill="rgb(226,176,41)" fg:x="73547323995" fg:w="23910370"/><text x="91.7413%" y="1599.50"></text></g><g><title>bio_endio (23,910,370 samples, 0.03%)</title><rect x="91.4913%" y="1573" width="0.0297%" height="15" fill="rgb(248,47,8)" fg:x="73547323995" fg:w="23910370"/><text x="91.7413%" y="1583.50"></text></g><g><title>ext4_end_bio (23,910,370 samples, 0.03%)</title><rect x="91.4913%" y="1557" width="0.0297%" height="15" fill="rgb(218,81,44)" fg:x="73547323995" fg:w="23910370"/><text x="91.7413%" y="1567.50"></text></g><g><title>ext4_finish_bio (23,910,370 samples, 0.03%)</title><rect x="91.4913%" y="1541" width="0.0297%" height="15" fill="rgb(213,98,6)" fg:x="73547323995" fg:w="23910370"/><text x="91.7413%" y="1551.50"></text></g><g><title>folio_end_writeback (21,323,123 samples, 0.03%)</title><rect x="91.4945%" y="1525" width="0.0265%" height="15" fill="rgb(222,85,22)" fg:x="73549911242" fg:w="21323123"/><text x="91.7445%" y="1535.50"></text></g><g><title>get_partial_node (28,800,485 samples, 0.04%)</title><rect x="91.5634%" y="1701" width="0.0358%" height="15" fill="rgb(239,46,39)" fg:x="73605243793" fg:w="28800485"/><text x="91.8134%" y="1711.50"></text></g><g><title>___slab_alloc (61,136,740 samples, 0.08%)</title><rect x="91.5413%" y="1717" width="0.0761%" height="15" fill="rgb(237,12,29)" fg:x="73587491934" fg:w="61136740"/><text x="91.7913%" y="1727.50"></text></g><g><title>lock_acquire (12,467,566 samples, 0.02%)</title><rect x="91.6198%" y="1701" width="0.0155%" height="15" fill="rgb(214,77,8)" fg:x="73650619171" fg:w="12467566"/><text x="91.8698%" y="1711.50"></text></g><g><title>fs_reclaim_acquire (18,374,998 samples, 0.02%)</title><rect x="91.6173%" y="1717" width="0.0229%" height="15" fill="rgb(217,168,37)" fg:x="73648628674" fg:w="18374998"/><text x="91.8673%" y="1727.50"></text></g><g><title>lock_release (10,017,255 samples, 0.01%)</title><rect x="91.6402%" y="1701" width="0.0125%" height="15" fill="rgb(221,217,23)" fg:x="73667003672" fg:w="10017255"/><text x="91.8902%" y="1711.50"></text></g><g><title>fs_reclaim_release (10,774,838 samples, 0.01%)</title><rect x="91.6402%" y="1717" width="0.0134%" height="15" fill="rgb(243,229,36)" fg:x="73667003672" fg:w="10774838"/><text x="91.8902%" y="1727.50"></text></g><g><title>__kmem_cache_alloc_node (105,829,082 samples, 0.13%)</title><rect x="91.5248%" y="1733" width="0.1316%" height="15" fill="rgb(251,163,40)" fg:x="73574256955" fg:w="105829082"/><text x="91.7748%" y="1743.50"></text></g><g><title>kmalloc_trace (109,486,734 samples, 0.14%)</title><rect x="91.5248%" y="1749" width="0.1362%" height="15" fill="rgb(237,222,12)" fg:x="73574256955" fg:w="109486734"/><text x="91.7748%" y="1759.50"></text></g><g><title>__lock_acquire (16,148,066 samples, 0.02%)</title><rect x="91.7271%" y="1701" width="0.0201%" height="15" fill="rgb(248,132,6)" fg:x="73736851118" fg:w="16148066"/><text x="91.9771%" y="1711.50"></text></g><g><title>lock_acquire (19,227,904 samples, 0.02%)</title><rect x="91.7260%" y="1717" width="0.0239%" height="15" fill="rgb(227,167,50)" fg:x="73735998056" fg:w="19227904"/><text x="91.9760%" y="1727.50"></text></g><g><title>_raw_spin_lock (22,694,139 samples, 0.03%)</title><rect x="91.7245%" y="1733" width="0.0282%" height="15" fill="rgb(242,84,37)" fg:x="73734758269" fg:w="22694139"/><text x="91.9745%" y="1743.50"></text></g><g><title>get_partial_node (35,332,717 samples, 0.04%)</title><rect x="91.7983%" y="1669" width="0.0440%" height="15" fill="rgb(212,4,50)" fg:x="73794078752" fg:w="35332717"/><text x="92.0483%" y="1679.50"></text></g><g><title>put_cpu_partial (9,627,273 samples, 0.01%)</title><rect x="91.8302%" y="1653" width="0.0120%" height="15" fill="rgb(230,228,32)" fg:x="73819784196" fg:w="9627273"/><text x="92.0802%" y="1663.50"></text></g><g><title>lock_acquire (9,627,273 samples, 0.01%)</title><rect x="91.8302%" y="1637" width="0.0120%" height="15" fill="rgb(248,217,23)" fg:x="73819784196" fg:w="9627273"/><text x="92.0802%" y="1647.50"></text></g><g><title>lock_acquire (10,506,513 samples, 0.01%)</title><rect x="91.8432%" y="1669" width="0.0131%" height="15" fill="rgb(238,197,32)" fg:x="73830205879" fg:w="10506513"/><text x="92.0932%" y="1679.50"></text></g><g><title>___slab_alloc (72,659,662 samples, 0.09%)</title><rect x="91.7756%" y="1685" width="0.0904%" height="15" fill="rgb(236,106,1)" fg:x="73775832555" fg:w="72659662"/><text x="92.0256%" y="1695.50"></text></g><g><title>lock_acquire (12,562,139 samples, 0.02%)</title><rect x="91.8679%" y="1669" width="0.0156%" height="15" fill="rgb(219,228,13)" fg:x="73850058648" fg:w="12562139"/><text x="92.1179%" y="1679.50"></text></g><g><title>fs_reclaim_acquire (18,486,153 samples, 0.02%)</title><rect x="91.8660%" y="1685" width="0.0230%" height="15" fill="rgb(238,30,35)" fg:x="73848492217" fg:w="18486153"/><text x="92.1160%" y="1695.50"></text></g><g><title>__kmem_cache_alloc_node (107,243,137 samples, 0.13%)</title><rect x="91.7619%" y="1701" width="0.1334%" height="15" fill="rgb(236,70,23)" fg:x="73764809260" fg:w="107243137"/><text x="92.0119%" y="1711.50"></text></g><g><title>kmalloc_trace (111,913,711 samples, 0.14%)</title><rect x="91.7580%" y="1717" width="0.1392%" height="15" fill="rgb(249,104,48)" fg:x="73761677759" fg:w="111913711"/><text x="92.0080%" y="1727.50"></text></g><g><title>cache_ext_list_node_alloc (112,342,128 samples, 0.14%)</title><rect x="91.7580%" y="1733" width="0.1398%" height="15" fill="rgb(254,117,50)" fg:x="73761677759" fg:w="112342128"/><text x="92.0080%" y="1743.50"></text></g><g><title>valid_folios_add (190,174,280 samples, 0.24%)</title><rect x="91.6640%" y="1749" width="0.2366%" height="15" fill="rgb(223,152,4)" fg:x="73686142447" fg:w="190174280"/><text x="91.9140%" y="1759.50"></text></g><g><title>xa_get_order (10,152,526 samples, 0.01%)</title><rect x="91.9035%" y="1749" width="0.0126%" height="15" fill="rgb(245,6,2)" fg:x="73878689121" fg:w="10152526"/><text x="92.1535%" y="1759.50"></text></g><g><title>__filemap_add_folio (5,230,613,612 samples, 6.51%)</title><rect x="85.4278%" y="1765" width="6.5068%" height="15" fill="rgb(249,150,24)" fg:x="68673060903" fg:w="5230613612"/><text x="85.6778%" y="1775.50">__filemap..</text></g><g><title>xas_store (9,853,212 samples, 0.01%)</title><rect x="91.9223%" y="1749" width="0.0123%" height="15" fill="rgb(228,185,42)" fg:x="73893821303" fg:w="9853212"/><text x="92.1723%" y="1759.50"></text></g><g><title>clear_page_rep (57,984,122 samples, 0.07%)</title><rect x="91.9439%" y="1685" width="0.0721%" height="15" fill="rgb(226,39,33)" fg:x="73911166703" fg:w="57984122"/><text x="92.1939%" y="1695.50"></text></g><g><title>_raw_spin_trylock (10,601,676 samples, 0.01%)</title><rect x="92.0404%" y="1653" width="0.0132%" height="15" fill="rgb(221,166,19)" fg:x="73988716560" fg:w="10601676"/><text x="92.2904%" y="1663.50"></text></g><g><title>lock_acquire (8,374,734 samples, 0.01%)</title><rect x="92.0432%" y="1637" width="0.0104%" height="15" fill="rgb(209,109,2)" fg:x="73990943502" fg:w="8374734"/><text x="92.2932%" y="1647.50"></text></g><g><title>rmqueue (37,112,696 samples, 0.05%)</title><rect x="92.0248%" y="1685" width="0.0462%" height="15" fill="rgb(252,216,26)" fg:x="73976150660" fg:w="37112696"/><text x="92.2748%" y="1695.50"></text></g><g><title>rmqueue_pcplist (34,720,972 samples, 0.04%)</title><rect x="92.0277%" y="1669" width="0.0432%" height="15" fill="rgb(227,173,36)" fg:x="73978542384" fg:w="34720972"/><text x="92.2777%" y="1679.50"></text></g><g><title>_raw_spin_unlock (13,945,120 samples, 0.02%)</title><rect x="92.0536%" y="1653" width="0.0173%" height="15" fill="rgb(209,90,7)" fg:x="73999318236" fg:w="13945120"/><text x="92.3036%" y="1663.50"></text></g><g><title>lock_release (13,175,394 samples, 0.02%)</title><rect x="92.0545%" y="1637" width="0.0164%" height="15" fill="rgb(250,194,11)" fg:x="74000087962" fg:w="13175394"/><text x="92.3045%" y="1647.50"></text></g><g><title>get_page_from_freelist (103,628,966 samples, 0.13%)</title><rect x="91.9429%" y="1701" width="0.1289%" height="15" fill="rgb(220,72,50)" fg:x="73910365976" fg:w="103628966"/><text x="92.1929%" y="1711.50"></text></g><g><title>lock_acquire (8,280,609 samples, 0.01%)</title><rect x="92.0767%" y="1669" width="0.0103%" height="15" fill="rgb(222,106,48)" fg:x="74017892870" fg:w="8280609"/><text x="92.3267%" y="1679.50"></text></g><g><title>fs_reclaim_acquire (12,936,942 samples, 0.02%)</title><rect x="92.0738%" y="1685" width="0.0161%" height="15" fill="rgb(216,220,45)" fg:x="74015583323" fg:w="12936942"/><text x="92.3238%" y="1695.50"></text></g><g><title>__alloc_pages (122,522,522 samples, 0.15%)</title><rect x="91.9394%" y="1717" width="0.1524%" height="15" fill="rgb(234,112,18)" fg:x="73907539370" fg:w="122522522"/><text x="92.1894%" y="1727.50"></text></g><g><title>prepare_alloc_pages (16,066,950 samples, 0.02%)</title><rect x="92.0718%" y="1701" width="0.0200%" height="15" fill="rgb(206,179,9)" fg:x="74013994942" fg:w="16066950"/><text x="92.3218%" y="1711.50"></text></g><g><title>filemap_alloc_folio (127,978,954 samples, 0.16%)</title><rect x="91.9346%" y="1765" width="0.1592%" height="15" fill="rgb(215,115,40)" fg:x="73903674515" fg:w="127978954"/><text x="92.1846%" y="1775.50"></text></g><g><title>folio_alloc (126,479,560 samples, 0.16%)</title><rect x="91.9365%" y="1749" width="0.1573%" height="15" fill="rgb(222,69,34)" fg:x="73905173909" fg:w="126479560"/><text x="92.1865%" y="1759.50"></text></g><g><title>alloc_pages (125,684,048 samples, 0.16%)</title><rect x="91.9375%" y="1733" width="0.1563%" height="15" fill="rgb(209,161,10)" fg:x="73905969421" fg:w="125684048"/><text x="92.1875%" y="1743.50"></text></g><g><title>filemap_get_entry (14,564,164 samples, 0.02%)</title><rect x="92.0938%" y="1765" width="0.0181%" height="15" fill="rgb(217,6,38)" fg:x="74031653469" fg:w="14564164"/><text x="92.3438%" y="1775.50"></text></g><g><title>lru_add_fn (24,915,127 samples, 0.03%)</title><rect x="92.1277%" y="1733" width="0.0310%" height="15" fill="rgb(229,229,48)" fg:x="74058907094" fg:w="24915127"/><text x="92.3777%" y="1743.50"></text></g><g><title>folio_batch_move_lru (36,211,393 samples, 0.05%)</title><rect x="92.1156%" y="1749" width="0.0450%" height="15" fill="rgb(225,21,28)" fg:x="74049200281" fg:w="36211393"/><text x="92.3656%" y="1759.50"></text></g><g><title>folio_add_lru (49,143,356 samples, 0.06%)</title><rect x="92.1119%" y="1765" width="0.0611%" height="15" fill="rgb(206,33,13)" fg:x="74046217633" fg:w="49143356"/><text x="92.3619%" y="1775.50"></text></g><g><title>__filemap_get_folio (5,428,399,390 samples, 6.75%)</title><rect x="85.4232%" y="1781" width="6.7528%" height="15" fill="rgb(242,178,17)" fg:x="68669342695" fg:w="5428399390"/><text x="85.6732%" y="1791.50">__filemap..</text></g><g><title>_raw_spin_lock (8,427,291 samples, 0.01%)</title><rect x="92.2031%" y="1733" width="0.0105%" height="15" fill="rgb(220,162,5)" fg:x="74119481353" fg:w="8427291"/><text x="92.4531%" y="1743.50"></text></g><g><title>___slab_alloc (18,751,395 samples, 0.02%)</title><rect x="92.2372%" y="1685" width="0.0233%" height="15" fill="rgb(210,33,43)" fg:x="74146935262" fg:w="18751395"/><text x="92.4872%" y="1695.50"></text></g><g><title>fs_reclaim_acquire (10,338,570 samples, 0.01%)</title><rect x="92.2605%" y="1685" width="0.0129%" height="15" fill="rgb(216,116,54)" fg:x="74165686657" fg:w="10338570"/><text x="92.5105%" y="1695.50"></text></g><g><title>lock_acquire (13,289,943 samples, 0.02%)</title><rect x="92.2848%" y="1669" width="0.0165%" height="15" fill="rgb(249,92,24)" fg:x="74185193986" fg:w="13289943"/><text x="92.5348%" y="1679.50"></text></g><g><title>lock_release (10,228,190 samples, 0.01%)</title><rect x="92.3013%" y="1669" width="0.0127%" height="15" fill="rgb(231,189,14)" fg:x="74198483929" fg:w="10228190"/><text x="92.5513%" y="1679.50"></text></g><g><title>__lock_acquire (14,904,768 samples, 0.02%)</title><rect x="92.3164%" y="1637" width="0.0185%" height="15" fill="rgb(230,8,41)" fg:x="74210579214" fg:w="14904768"/><text x="92.5664%" y="1647.50"></text></g><g><title>lock_acquire (16,453,305 samples, 0.02%)</title><rect x="92.3158%" y="1653" width="0.0205%" height="15" fill="rgb(249,7,27)" fg:x="74210096520" fg:w="16453305"/><text x="92.5658%" y="1663.50"></text></g><g><title>mod_objcg_state (24,623,797 samples, 0.03%)</title><rect x="92.3141%" y="1669" width="0.0306%" height="15" fill="rgb(232,86,5)" fg:x="74208712119" fg:w="24623797"/><text x="92.5641%" y="1679.50"></text></g><g><title>memcg_slab_post_alloc_hook (67,896,314 samples, 0.08%)</title><rect x="92.2791%" y="1685" width="0.0845%" height="15" fill="rgb(224,175,18)" fg:x="74180624348" fg:w="67896314"/><text x="92.5291%" y="1695.50"></text></g><g><title>trace_lock_acquire (15,184,746 samples, 0.02%)</title><rect x="92.3447%" y="1669" width="0.0189%" height="15" fill="rgb(220,129,12)" fg:x="74233335916" fg:w="15184746"/><text x="92.5947%" y="1679.50"></text></g><g><title>get_obj_cgroup_from_current (20,300,198 samples, 0.03%)</title><rect x="92.3654%" y="1669" width="0.0253%" height="15" fill="rgb(210,19,36)" fg:x="74249968077" fg:w="20300198"/><text x="92.6154%" y="1679.50"></text></g><g><title>percpu_ref_tryget (8,341,385 samples, 0.01%)</title><rect x="92.3803%" y="1653" width="0.0104%" height="15" fill="rgb(219,96,14)" fg:x="74261926890" fg:w="8341385"/><text x="92.6303%" y="1663.50"></text></g><g><title>page_cache_ext_isolate_folio (9,261,016 samples, 0.01%)</title><rect x="92.4107%" y="1493" width="0.0115%" height="15" fill="rgb(249,106,1)" fg:x="74286370805" fg:w="9261016"/><text x="92.6607%" y="1503.50"></text></g><g><title>do_raw_write_lock (115,923,024 samples, 0.14%)</title><rect x="92.4430%" y="1365" width="0.1442%" height="15" fill="rgb(249,155,20)" fg:x="74312349871" fg:w="115923024"/><text x="92.6930%" y="1375.50"></text></g><g><title>queued_write_lock_slowpath (115,923,024 samples, 0.14%)</title><rect x="92.4430%" y="1349" width="0.1442%" height="15" fill="rgb(244,168,9)" fg:x="74312349871" fg:w="115923024"/><text x="92.6930%" y="1359.50"></text></g><g><title>native_queued_spin_lock_slowpath (62,634,376 samples, 0.08%)</title><rect x="92.5093%" y="1333" width="0.0779%" height="15" fill="rgb(216,23,50)" fg:x="74365638519" fg:w="62634376"/><text x="92.7593%" y="1343.50"></text></g><g><title>cache_ext_ds_registry_write_lock (117,450,420 samples, 0.15%)</title><rect x="92.4430%" y="1397" width="0.1461%" height="15" fill="rgb(224,219,20)" fg:x="74312349871" fg:w="117450420"/><text x="92.6930%" y="1407.50"></text></g><g><title>_raw_write_lock (117,450,420 samples, 0.15%)</title><rect x="92.4430%" y="1381" width="0.1461%" height="15" fill="rgb(222,156,15)" fg:x="74312349871" fg:w="117450420"/><text x="92.6930%" y="1391.50"></text></g><g><title>valid_folios_del (125,699,267 samples, 0.16%)</title><rect x="92.4412%" y="1413" width="0.1564%" height="15" fill="rgb(231,97,17)" fg:x="74310898432" fg:w="125699267"/><text x="92.6912%" y="1423.50"></text></g><g><title>__filemap_remove_folio (128,044,540 samples, 0.16%)</title><rect x="92.4412%" y="1429" width="0.1593%" height="15" fill="rgb(218,70,48)" fg:x="74310898432" fg:w="128044540"/><text x="92.6912%" y="1439.50"></text></g><g><title>do_raw_spin_lock (18,616,217 samples, 0.02%)</title><rect x="92.6005%" y="1413" width="0.0232%" height="15" fill="rgb(212,196,52)" fg:x="74438942972" fg:w="18616217"/><text x="92.8505%" y="1423.50"></text></g><g><title>native_queued_spin_lock_slowpath (17,817,888 samples, 0.02%)</title><rect x="92.6015%" y="1397" width="0.0222%" height="15" fill="rgb(243,203,18)" fg:x="74439741301" fg:w="17817888"/><text x="92.8515%" y="1407.50"></text></g><g><title>_raw_spin_lock (19,323,003 samples, 0.02%)</title><rect x="92.6005%" y="1429" width="0.0240%" height="15" fill="rgb(252,125,41)" fg:x="74438942972" fg:w="19323003"/><text x="92.8505%" y="1439.50"></text></g><g><title>__remove_mapping (155,414,879 samples, 0.19%)</title><rect x="92.4412%" y="1445" width="0.1933%" height="15" fill="rgb(223,180,33)" fg:x="74310898432" fg:w="155414879"/><text x="92.6912%" y="1455.50"></text></g><g><title>reclaim_pages (178,998,974 samples, 0.22%)</title><rect x="92.4222%" y="1493" width="0.2227%" height="15" fill="rgb(254,159,46)" fg:x="74295631821" fg:w="178998974"/><text x="92.6722%" y="1503.50"></text></g><g><title>reclaim_folio_list (178,190,916 samples, 0.22%)</title><rect x="92.4232%" y="1477" width="0.2217%" height="15" fill="rgb(254,38,10)" fg:x="74296439879" fg:w="178190916"/><text x="92.6732%" y="1487.50"></text></g><g><title>shrink_folio_list (169,697,039 samples, 0.21%)</title><rect x="92.4338%" y="1461" width="0.2111%" height="15" fill="rgb(208,217,32)" fg:x="74304933756" fg:w="169697039"/><text x="92.6838%" y="1471.50"></text></g><g><title>page_cache_ext_isolate_and_reclaim (203,771,062 samples, 0.25%)</title><rect x="92.4039%" y="1525" width="0.2535%" height="15" fill="rgb(221,120,13)" fg:x="74280926754" fg:w="203771062"/><text x="92.6539%" y="1535.50"></text></g><g><title>__page_cache_ext_isolate_and_reclaim (203,771,062 samples, 0.25%)</title><rect x="92.4039%" y="1509" width="0.2535%" height="15" fill="rgb(246,54,52)" fg:x="74280926754" fg:w="203771062"/><text x="92.6539%" y="1519.50"></text></g><g><title>valid_folios_exists_unlocked (10,067,021 samples, 0.01%)</title><rect x="92.6449%" y="1493" width="0.0125%" height="15" fill="rgb(242,34,25)" fg:x="74474630795" fg:w="10067021"/><text x="92.8949%" y="1503.50"></text></g><g><title>valid_folios_del (15,716,227 samples, 0.02%)</title><rect x="92.6613%" y="1445" width="0.0196%" height="15" fill="rgb(247,209,9)" fg:x="74487848435" fg:w="15716227"/><text x="92.9113%" y="1455.50"></text></g><g><title>cache_ext_ds_registry_write_lock (15,716,227 samples, 0.02%)</title><rect x="92.6613%" y="1429" width="0.0196%" height="15" fill="rgb(228,71,26)" fg:x="74487848435" fg:w="15716227"/><text x="92.9113%" y="1439.50"></text></g><g><title>_raw_write_lock (15,716,227 samples, 0.02%)</title><rect x="92.6613%" y="1413" width="0.0196%" height="15" fill="rgb(222,145,49)" fg:x="74487848435" fg:w="15716227"/><text x="92.9113%" y="1423.50"></text></g><g><title>do_raw_write_lock (15,716,227 samples, 0.02%)</title><rect x="92.6613%" y="1397" width="0.0196%" height="15" fill="rgb(218,121,17)" fg:x="74487848435" fg:w="15716227"/><text x="92.9113%" y="1407.50"></text></g><g><title>queued_write_lock_slowpath (15,716,227 samples, 0.02%)</title><rect x="92.6613%" y="1381" width="0.0196%" height="15" fill="rgb(244,50,7)" fg:x="74487848435" fg:w="15716227"/><text x="92.9113%" y="1391.50"></text></g><g><title>__filemap_remove_folio (17,269,067 samples, 0.02%)</title><rect x="92.6603%" y="1461" width="0.0215%" height="15" fill="rgb(246,229,37)" fg:x="74487051894" fg:w="17269067"/><text x="92.9103%" y="1471.50"></text></g><g><title>__remove_mapping (47,756,294 samples, 0.06%)</title><rect x="92.6603%" y="1477" width="0.0594%" height="15" fill="rgb(225,18,5)" fg:x="74487051894" fg:w="47756294"/><text x="92.9103%" y="1487.50"></text></g><g><title>_raw_spin_lock (30,487,227 samples, 0.04%)</title><rect x="92.6818%" y="1461" width="0.0379%" height="15" fill="rgb(213,204,8)" fg:x="74504320961" fg:w="30487227"/><text x="92.9318%" y="1471.50"></text></g><g><title>do_raw_spin_lock (30,487,227 samples, 0.04%)</title><rect x="92.6818%" y="1445" width="0.0379%" height="15" fill="rgb(238,103,6)" fg:x="74504320961" fg:w="30487227"/><text x="92.9318%" y="1455.50"></text></g><g><title>native_queued_spin_lock_slowpath (30,487,227 samples, 0.04%)</title><rect x="92.6818%" y="1429" width="0.0379%" height="15" fill="rgb(222,25,35)" fg:x="74504320961" fg:w="30487227"/><text x="92.9318%" y="1439.50"></text></g><g><title>shrink_lruvec (259,387,436 samples, 0.32%)</title><rect x="92.4029%" y="1541" width="0.3227%" height="15" fill="rgb(213,203,35)" fg:x="74280128715" fg:w="259387436"/><text x="92.6529%" y="1551.50"></text></g><g><title>shrink_list (54,818,335 samples, 0.07%)</title><rect x="92.6574%" y="1525" width="0.0682%" height="15" fill="rgb(221,79,53)" fg:x="74484697816" fg:w="54818335"/><text x="92.9074%" y="1535.50"></text></g><g><title>shrink_inactive_list (54,818,335 samples, 0.07%)</title><rect x="92.6574%" y="1509" width="0.0682%" height="15" fill="rgb(243,200,35)" fg:x="74484697816" fg:w="54818335"/><text x="92.9074%" y="1519.50"></text></g><g><title>shrink_folio_list (53,226,499 samples, 0.07%)</title><rect x="92.6594%" y="1493" width="0.0662%" height="15" fill="rgb(248,60,25)" fg:x="74486289652" fg:w="53226499"/><text x="92.9094%" y="1503.50"></text></g><g><title>obj_cgroup_charge_pages (264,679,779 samples, 0.33%)</title><rect x="92.3982%" y="1653" width="0.3293%" height="15" fill="rgb(227,53,46)" fg:x="74276316899" fg:w="264679779"/><text x="92.6482%" y="1663.50"></text></g><g><title>try_charge_memcg (262,390,797 samples, 0.33%)</title><rect x="92.4010%" y="1637" width="0.3264%" height="15" fill="rgb(216,120,32)" fg:x="74278605881" fg:w="262390797"/><text x="92.6510%" y="1647.50"></text></g><g><title>try_to_free_mem_cgroup_pages (260,867,963 samples, 0.32%)</title><rect x="92.4029%" y="1621" width="0.3245%" height="15" fill="rgb(220,134,1)" fg:x="74280128715" fg:w="260867963"/><text x="92.6529%" y="1631.50"></text></g><g><title>do_try_to_free_pages (260,867,963 samples, 0.32%)</title><rect x="92.4029%" y="1605" width="0.3245%" height="15" fill="rgb(237,168,5)" fg:x="74280128715" fg:w="260867963"/><text x="92.6529%" y="1615.50"></text></g><g><title>shrink_zones (260,867,963 samples, 0.32%)</title><rect x="92.4029%" y="1589" width="0.3245%" height="15" fill="rgb(231,100,33)" fg:x="74280128715" fg:w="260867963"/><text x="92.6529%" y="1599.50"></text></g><g><title>shrink_node (260,867,963 samples, 0.32%)</title><rect x="92.4029%" y="1573" width="0.3245%" height="15" fill="rgb(236,177,47)" fg:x="74280128715" fg:w="260867963"/><text x="92.6529%" y="1583.50"></text></g><g><title>shrink_node_memcgs (260,867,963 samples, 0.32%)</title><rect x="92.4029%" y="1557" width="0.3245%" height="15" fill="rgb(235,7,49)" fg:x="74280128715" fg:w="260867963"/><text x="92.6529%" y="1567.50"></text></g><g><title>memcg_slab_pre_alloc_hook (294,141,223 samples, 0.37%)</title><rect x="92.3636%" y="1685" width="0.3659%" height="15" fill="rgb(232,119,22)" fg:x="74248520662" fg:w="294141223"/><text x="92.6136%" y="1695.50"></text></g><g><title>obj_cgroup_charge (272,393,610 samples, 0.34%)</title><rect x="92.3906%" y="1669" width="0.3389%" height="15" fill="rgb(254,73,53)" fg:x="74270268275" fg:w="272393610"/><text x="92.6406%" y="1679.50"></text></g><g><title>kmem_cache_alloc (402,757,417 samples, 0.50%)</title><rect x="92.2328%" y="1701" width="0.5010%" height="15" fill="rgb(251,35,20)" fg:x="74143416397" fg:w="402757417"/><text x="92.4828%" y="1711.50"></text></g><g><title>alloc_buffer_head (415,941,425 samples, 0.52%)</title><rect x="92.2223%" y="1717" width="0.5174%" height="15" fill="rgb(241,119,20)" fg:x="74134927565" fg:w="415941425"/><text x="92.4723%" y="1727.50"></text></g><g><title>create_empty_buffers (436,858,276 samples, 0.54%)</title><rect x="92.1972%" y="1765" width="0.5434%" height="15" fill="rgb(207,102,14)" fg:x="74114792279" fg:w="436858276"/><text x="92.4472%" y="1775.50"></text></g><g><title>folio_create_empty_buffers (436,087,442 samples, 0.54%)</title><rect x="92.1982%" y="1749" width="0.5425%" height="15" fill="rgb(248,201,50)" fg:x="74115563113" fg:w="436087442"/><text x="92.4482%" y="1759.50"></text></g><g><title>folio_alloc_buffers (422,199,065 samples, 0.53%)</title><rect x="92.2155%" y="1733" width="0.5252%" height="15" fill="rgb(222,185,44)" fg:x="74129451490" fg:w="422199065"/><text x="92.4655%" y="1743.50"></text></g><g><title>lock_acquire (9,777,237 samples, 0.01%)</title><rect x="92.7566%" y="1717" width="0.0122%" height="15" fill="rgb(218,107,18)" fg:x="74564449203" fg:w="9777237"/><text x="93.0066%" y="1727.50"></text></g><g><title>_raw_read_lock (10,574,230 samples, 0.01%)</title><rect x="92.7566%" y="1733" width="0.0132%" height="15" fill="rgb(237,177,39)" fg:x="74564449203" fg:w="10574230"/><text x="93.0066%" y="1743.50"></text></g><g><title>ext4_es_lookup_extent (18,997,344 samples, 0.02%)</title><rect x="92.7509%" y="1749" width="0.0236%" height="15" fill="rgb(246,69,6)" fg:x="74559859011" fg:w="18997344"/><text x="93.0009%" y="1759.50"></text></g><g><title>ext4_da_get_block_prep (27,991,119 samples, 0.03%)</title><rect x="92.7407%" y="1765" width="0.0348%" height="15" fill="rgb(234,208,37)" fg:x="74551650555" fg:w="27991119"/><text x="92.9907%" y="1775.50"></text></g><g><title>blk_mq_run_hw_queue (8,062,428 samples, 0.01%)</title><rect x="92.7840%" y="1621" width="0.0100%" height="15" fill="rgb(225,4,6)" fg:x="74586462213" fg:w="8062428"/><text x="93.0340%" y="1631.50"></text></g><g><title>ext4_block_write_begin (499,324,539 samples, 0.62%)</title><rect x="92.1760%" y="1781" width="0.6211%" height="15" fill="rgb(233,45,0)" fg:x="74097742085" fg:w="499324539"/><text x="92.4260%" y="1791.50"></text></g><g><title>ext4_read_bh_lock (17,424,950 samples, 0.02%)</title><rect x="92.7755%" y="1765" width="0.0217%" height="15" fill="rgb(226,136,5)" fg:x="74579641674" fg:w="17424950"/><text x="93.0255%" y="1775.50"></text></g><g><title>ext4_read_bh_nowait (17,424,950 samples, 0.02%)</title><rect x="92.7755%" y="1749" width="0.0217%" height="15" fill="rgb(211,91,47)" fg:x="74579641674" fg:w="17424950"/><text x="93.0255%" y="1759.50"></text></g><g><title>submit_bh (17,424,950 samples, 0.02%)</title><rect x="92.7755%" y="1733" width="0.0217%" height="15" fill="rgb(242,88,51)" fg:x="74579641674" fg:w="17424950"/><text x="93.0255%" y="1743.50"></text></g><g><title>submit_bh_wbc (17,424,950 samples, 0.02%)</title><rect x="92.7755%" y="1717" width="0.0217%" height="15" fill="rgb(230,91,28)" fg:x="74579641674" fg:w="17424950"/><text x="93.0255%" y="1727.50"></text></g><g><title>submit_bio (14,780,746 samples, 0.02%)</title><rect x="92.7788%" y="1701" width="0.0184%" height="15" fill="rgb(254,186,29)" fg:x="74582285878" fg:w="14780746"/><text x="93.0288%" y="1711.50"></text></g><g><title>submit_bio_noacct (14,780,746 samples, 0.02%)</title><rect x="92.7788%" y="1685" width="0.0184%" height="15" fill="rgb(238,6,4)" fg:x="74582285878" fg:w="14780746"/><text x="93.0288%" y="1695.50"></text></g><g><title>submit_bio_noacct_nocheck (14,780,746 samples, 0.02%)</title><rect x="92.7788%" y="1669" width="0.0184%" height="15" fill="rgb(221,151,16)" fg:x="74582285878" fg:w="14780746"/><text x="93.0288%" y="1679.50"></text></g><g><title>__submit_bio (14,780,746 samples, 0.02%)</title><rect x="92.7788%" y="1653" width="0.0184%" height="15" fill="rgb(251,143,52)" fg:x="74582285878" fg:w="14780746"/><text x="93.0288%" y="1663.50"></text></g><g><title>blk_mq_submit_bio (14,780,746 samples, 0.02%)</title><rect x="92.7788%" y="1637" width="0.0184%" height="15" fill="rgb(206,90,15)" fg:x="74582285878" fg:w="14780746"/><text x="93.0288%" y="1647.50"></text></g><g><title>ext4_da_write_begin (5,938,709,250 samples, 7.39%)</title><rect x="85.4135%" y="1797" width="7.3876%" height="15" fill="rgb(218,35,8)" fg:x="68661512870" fg:w="5938709250"/><text x="85.6635%" y="1807.50">ext4_da_wr..</text></g><g><title>__xa_set_mark (8,536,389 samples, 0.01%)</title><rect x="92.8111%" y="1701" width="0.0106%" height="15" fill="rgb(239,215,6)" fg:x="74608231778" fg:w="8536389"/><text x="93.0611%" y="1711.50"></text></g><g><title>lock_acquire (13,160,222 samples, 0.02%)</title><rect x="92.8549%" y="1669" width="0.0164%" height="15" fill="rgb(245,116,39)" fg:x="74643463676" fg:w="13160222"/><text x="93.1049%" y="1679.50"></text></g><g><title>__mod_lruvec_page_state (23,888,892 samples, 0.03%)</title><rect x="92.8474%" y="1685" width="0.0297%" height="15" fill="rgb(242,65,28)" fg:x="74637437970" fg:w="23888892"/><text x="93.0974%" y="1695.50"></text></g><g><title>folio_account_dirtied (46,999,999 samples, 0.06%)</title><rect x="92.8395%" y="1701" width="0.0585%" height="15" fill="rgb(252,132,53)" fg:x="74631110959" fg:w="46999999"/><text x="93.0895%" y="1711.50"></text></g><g><title>__folio_mark_dirty (74,240,487 samples, 0.09%)</title><rect x="92.8091%" y="1717" width="0.0924%" height="15" fill="rgb(224,159,50)" fg:x="74606631945" fg:w="74240487"/><text x="93.0591%" y="1727.50"></text></g><g><title>folio_memcg_lock (13,373,240 samples, 0.02%)</title><rect x="92.9038%" y="1717" width="0.0166%" height="15" fill="rgb(224,93,4)" fg:x="74682793273" fg:w="13373240"/><text x="93.1538%" y="1727.50"></text></g><g><title>lock_acquire (9,667,187 samples, 0.01%)</title><rect x="92.9084%" y="1701" width="0.0120%" height="15" fill="rgb(208,81,34)" fg:x="74686499326" fg:w="9667187"/><text x="93.1584%" y="1711.50"></text></g><g><title>ext4_da_do_write_end (96,720,726 samples, 0.12%)</title><rect x="92.8040%" y="1781" width="0.1203%" height="15" fill="rgb(233,92,54)" fg:x="74602584957" fg:w="96720726"/><text x="93.0540%" y="1791.50"></text></g><g><title>block_write_end (96,720,726 samples, 0.12%)</title><rect x="92.8040%" y="1765" width="0.1203%" height="15" fill="rgb(237,21,14)" fg:x="74602584957" fg:w="96720726"/><text x="93.0540%" y="1775.50"></text></g><g><title>__block_commit_write (96,638,982 samples, 0.12%)</title><rect x="92.8041%" y="1749" width="0.1202%" height="15" fill="rgb(249,128,51)" fg:x="74602666701" fg:w="96638982"/><text x="93.0541%" y="1759.50"></text></g><g><title>mark_buffer_dirty (92,673,738 samples, 0.12%)</title><rect x="92.8091%" y="1733" width="0.1153%" height="15" fill="rgb(223,129,24)" fg:x="74606631945" fg:w="92673738"/><text x="93.0591%" y="1743.50"></text></g><g><title>ext4_da_write_end (101,473,785 samples, 0.13%)</title><rect x="92.8011%" y="1797" width="0.1262%" height="15" fill="rgb(231,168,25)" fg:x="74600222120" fg:w="101473785"/><text x="93.0511%" y="1807.50"></text></g><g><title>fault_in_iov_iter_readable (18,885,082 samples, 0.02%)</title><rect x="92.9273%" y="1797" width="0.0235%" height="15" fill="rgb(224,39,20)" fg:x="74701695905" fg:w="18885082"/><text x="93.1773%" y="1807.50"></text></g><g><title>fault_in_readable (18,085,499 samples, 0.02%)</title><rect x="92.9283%" y="1781" width="0.0225%" height="15" fill="rgb(225,152,53)" fg:x="74702495488" fg:w="18085499"/><text x="93.1783%" y="1791.50"></text></g><g><title>rep_movs_alternative (49,308,573 samples, 0.06%)</title><rect x="92.9547%" y="1797" width="0.0613%" height="15" fill="rgb(252,17,24)" fg:x="74723738976" fg:w="49308573"/><text x="93.2047%" y="1807.50"></text></g><g><title>generic_perform_write (6,166,011,484 samples, 7.67%)</title><rect x="85.3466%" y="1813" width="7.6704%" height="15" fill="rgb(250,114,30)" fg:x="68607751995" fg:w="6166011484"/><text x="85.5966%" y="1823.50">generic_per..</text></g><g><title>__x64_sys_pwrite64 (11,723,349,155 samples, 14.58%)</title><rect x="78.4346%" y="1877" width="14.5836%" height="15" fill="rgb(229,5,4)" fg:x="63051399522" fg:w="11723349155"/><text x="78.6846%" y="1887.50">__x64_sys_pwrite64</text></g><g><title>vfs_write (11,722,550,612 samples, 14.58%)</title><rect x="78.4356%" y="1861" width="14.5826%" height="15" fill="rgb(225,176,49)" fg:x="63052198065" fg:w="11722550612"/><text x="78.6856%" y="1871.50">vfs_write</text></g><g><title>ext4_file_write_iter (11,712,568,916 samples, 14.57%)</title><rect x="78.4480%" y="1845" width="14.5702%" height="15" fill="rgb(224,221,49)" fg:x="63062179761" fg:w="11712568916"/><text x="78.6980%" y="1855.50">ext4_file_write_iter</text></g><g><title>ext4_buffered_write_iter (11,712,568,916 samples, 14.57%)</title><rect x="78.4480%" y="1829" width="14.5702%" height="15" fill="rgb(253,169,27)" fg:x="63062179761" fg:w="11712568916"/><text x="78.6980%" y="1839.50">ext4_buffered_write_it..</text></g><g><title>do_syscall_64 (11,727,015,804 samples, 14.59%)</title><rect x="78.4346%" y="1893" width="14.5882%" height="15" fill="rgb(211,206,16)" fg:x="63051399522" fg:w="11727015804"/><text x="78.6846%" y="1903.50">do_syscall_64</text></g><g><title>entry_SYSCALL_64 (11,727,811,108 samples, 14.59%)</title><rect x="78.4346%" y="1909" width="14.5891%" height="15" fill="rgb(244,87,35)" fg:x="63051399522" fg:w="11727811108"/><text x="78.6846%" y="1919.50">entry_SYSCALL_64</text></g><g><title>__libc_pwrite (40,922,034,406 samples, 50.91%)</title><rect x="42.1234%" y="1925" width="50.9061%" height="15" fill="rgb(246,28,10)" fg:x="33861866536" fg:w="40922034406"/><text x="42.3734%" y="1935.50">__libc_pwrite</text></g><g><title>IOTraceClient::do_operation (71,576,127,714 samples, 89.04%)</title><rect x="3.9924%" y="1941" width="89.0392%" height="15" fill="rgb(229,12,44)" fg:x="3209369929" fg:w="71576127714"/><text x="4.2424%" y="1951.50">IOTraceClient::do_operation</text></g><g><title>[libstdc++.so.6.0.30] (71,588,410,406 samples, 89.05%)</title><rect x="3.9914%" y="2053" width="89.0545%" height="15" fill="rgb(210,145,37)" fg:x="3208574112" fg:w="71588410406"/><text x="4.2414%" y="2063.50">[libstdc++.so.6.0.30]</text></g><g><title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void (*)(Client*, Workload*, OpMeasurement*, long), Client*, Workload*, OpMeasurement*, long&gt; &gt; &gt;::_M_run (71,588,410,406 samples, 89.05%)</title><rect x="3.9914%" y="2037" width="89.0545%" height="15" fill="rgb(227,112,52)" fg:x="3208574112" fg:w="71588410406"/><text x="4.2414%" y="2047.50">std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void (*)(Client*, Workload*, OpMeasurement*, long), Client*, Workload*, OpMeasurement*, lo..</text></g><g><title>std::thread::_Invoker&lt;std::tuple&lt;void (*)(Client*, Workload*, OpMeasurement*, long), Client*, Workload*, OpMeasurement*, long&gt; &gt;::operator (71,588,410,406 samples, 89.05%)</title><rect x="3.9914%" y="2021" width="89.0545%" height="15" fill="rgb(238,155,34)" fg:x="3208574112" fg:w="71588410406"/><text x="4.2414%" y="2031.50">std::thread::_Invoker&lt;std::tuple&lt;void (*)(Client*, Workload*, OpMeasurement*, long), Client*, Workload*, OpMeasurement*, long&gt; &gt;::operator</text></g><g><title>void std::thread::_Invoker&lt;std::tuple&lt;void (*)(Client*, Workload*, OpMeasurement*, long), Client*, Workload*, OpMeasurement*, long&gt; &gt;::_M_invoke&lt;0ul, 1ul, 2ul, 3ul, 4ul&gt; (71,588,410,406 samples, 89.05%)</title><rect x="3.9914%" y="2005" width="89.0545%" height="15" fill="rgb(239,226,36)" fg:x="3208574112" fg:w="71588410406"/><text x="4.2414%" y="2015.50">void std::thread::_Invoker&lt;std::tuple&lt;void (*)(Client*, Workload*, OpMeasurement*, long), Client*, Workload*, OpMeasurement*, long&gt; &gt;::_M_invoke&lt;0ul..</text></g><g><title>std::__invoke_result&lt;void (*)(Client*, Workload*, OpMeasurement*, long), Client*, Workload*, OpMeasurement*, long&gt;::type std::__invoke&lt;void (*)(Client*, Workload*, OpMeasurement*, long), Client*, Workload*, OpMeasurement*, long&gt; (71,588,410,406 samples, 89.05%)</title><rect x="3.9914%" y="1989" width="89.0545%" height="15" fill="rgb(230,16,23)" fg:x="3208574112" fg:w="71588410406"/><text x="4.2414%" y="1999.50">std::__invoke_result&lt;void (*)(Client*, Workload*, OpMeasurement*, long), Client*, Workload*, OpMeasurement*, long&gt;::type std::__invoke&lt;void (*)(Clie..</text></g><g><title>void std::__invoke_impl&lt;void, void (*)(Client*, Workload*, OpMeasurement*, long), Client*, Workload*, OpMeasurement*, long&gt; (71,588,410,406 samples, 89.05%)</title><rect x="3.9914%" y="1973" width="89.0545%" height="15" fill="rgb(236,171,36)" fg:x="3208574112" fg:w="71588410406"/><text x="4.2414%" y="1983.50">void std::__invoke_impl&lt;void, void (*)(Client*, Workload*, OpMeasurement*, long), Client*, Workload*, OpMeasurement*, long&gt;</text></g><g><title>worker_thread_fn (71,587,614,589 samples, 89.05%)</title><rect x="3.9924%" y="1957" width="89.0535%" height="15" fill="rgb(221,22,14)" fg:x="3209369929" fg:w="71587614589"/><text x="4.2424%" y="1967.50">worker_thread_fn</text></g><g><title>TraceWorkload::next_op (8,508,113 samples, 0.01%)</title><rect x="93.0353%" y="1941" width="0.0106%" height="15" fill="rgb(242,43,11)" fg:x="74788476405" fg:w="8508113"/><text x="93.2853%" y="1951.50"></text></g><g><title>do_raw_write_lock (111,391,073 samples, 0.14%)</title><rect x="93.0506%" y="1957" width="0.1386%" height="15" fill="rgb(232,69,23)" fg:x="74800790362" fg:w="111391073"/><text x="93.3006%" y="1967.50"></text></g><g><title>queued_write_lock_slowpath (111,391,073 samples, 0.14%)</title><rect x="93.0506%" y="1941" width="0.1386%" height="15" fill="rgb(216,180,54)" fg:x="74800790362" fg:w="111391073"/><text x="93.3006%" y="1951.50"></text></g><g><title>native_queued_spin_lock_slowpath (65,548,283 samples, 0.08%)</title><rect x="93.1076%" y="1925" width="0.0815%" height="15" fill="rgb(216,5,24)" fg:x="74846633152" fg:w="65548283"/><text x="93.3576%" y="1935.50"></text></g><g><title>bpf_prog_94714edc913e697a_sampling_folio_evicted (112,912,340 samples, 0.14%)</title><rect x="93.0506%" y="2021" width="0.1405%" height="15" fill="rgb(225,89,9)" fg:x="74800790362" fg:w="112912340"/><text x="93.3006%" y="2031.50"></text></g><g><title>bpf_cache_ext_list_del (112,912,340 samples, 0.14%)</title><rect x="93.0506%" y="2005" width="0.1405%" height="15" fill="rgb(243,75,33)" fg:x="74800790362" fg:w="112912340"/><text x="93.3006%" y="2015.50"></text></g><g><title>cache_ext_list_del (112,912,340 samples, 0.14%)</title><rect x="93.0506%" y="1989" width="0.1405%" height="15" fill="rgb(247,141,45)" fg:x="74800790362" fg:w="112912340"/><text x="93.3006%" y="1999.50"></text></g><g><title>_raw_write_lock (112,912,340 samples, 0.14%)</title><rect x="93.0506%" y="1973" width="0.1405%" height="15" fill="rgb(232,177,36)" fg:x="74800790362" fg:w="112912340"/><text x="93.3006%" y="1983.50"></text></g><g><title>_raw_read_lock (34,760,258 samples, 0.04%)</title><rect x="93.2133%" y="1989" width="0.0432%" height="15" fill="rgb(219,125,36)" fg:x="74931585937" fg:w="34760258"/><text x="93.4633%" y="1999.50"></text></g><g><title>do_raw_read_lock (34,760,258 samples, 0.04%)</title><rect x="93.2133%" y="1973" width="0.0432%" height="15" fill="rgb(227,94,9)" fg:x="74931585937" fg:w="34760258"/><text x="93.4633%" y="1983.50"></text></g><g><title>queued_read_lock_slowpath (34,760,258 samples, 0.04%)</title><rect x="93.2133%" y="1957" width="0.0432%" height="15" fill="rgb(240,34,52)" fg:x="74931585937" fg:w="34760258"/><text x="93.4633%" y="1967.50"></text></g><g><title>native_queued_spin_lock_slowpath (26,238,156 samples, 0.03%)</title><rect x="93.2239%" y="1941" width="0.0326%" height="15" fill="rgb(216,45,12)" fg:x="74940108039" fg:w="26238156"/><text x="93.4739%" y="1951.50"></text></g><g><title>bpf_prog_b0d391925e3f79f7_sampling_evict_folios (107,178,718 samples, 0.13%)</title><rect x="93.1911%" y="2021" width="0.1333%" height="15" fill="rgb(246,21,19)" fg:x="74913702702" fg:w="107178718"/><text x="93.4411%" y="2031.50"></text></g><g><title>bpf_cache_ext_list_sample (107,178,718 samples, 0.13%)</title><rect x="93.1911%" y="2005" width="0.1333%" height="15" fill="rgb(213,98,42)" fg:x="74913702702" fg:w="107178718"/><text x="93.4411%" y="2015.50"></text></g><g><title>bpf_prog_baff5aaf85fd2c96_bpf_lfu_score_fn (53,005,138 samples, 0.07%)</title><rect x="93.2584%" y="1989" width="0.0659%" height="15" fill="rgb(250,136,47)" fg:x="74967876282" fg:w="53005138"/><text x="93.5084%" y="1999.50"></text></g><g><title>__htab_map_lookup_elem (52,267,797 samples, 0.07%)</title><rect x="93.2594%" y="1973" width="0.0650%" height="15" fill="rgb(251,124,27)" fg:x="74968613623" fg:w="52267797"/><text x="93.5094%" y="1983.50"></text></g><g><title>__filemap_remove_folio (28,633,102 samples, 0.04%)</title><rect x="93.3320%" y="1637" width="0.0356%" height="15" fill="rgb(229,180,14)" fg:x="75026979143" fg:w="28633102"/><text x="93.5820%" y="1647.50"></text></g><g><title>valid_folios_del (28,633,102 samples, 0.04%)</title><rect x="93.3320%" y="1621" width="0.0356%" height="15" fill="rgb(245,216,25)" fg:x="75026979143" fg:w="28633102"/><text x="93.5820%" y="1631.50"></text></g><g><title>cache_ext_ds_registry_write_lock (27,936,866 samples, 0.03%)</title><rect x="93.3328%" y="1605" width="0.0348%" height="15" fill="rgb(251,43,5)" fg:x="75027675379" fg:w="27936866"/><text x="93.5828%" y="1615.50"></text></g><g><title>_raw_write_lock (27,936,866 samples, 0.03%)</title><rect x="93.3328%" y="1589" width="0.0348%" height="15" fill="rgb(250,128,24)" fg:x="75027675379" fg:w="27936866"/><text x="93.5828%" y="1599.50"></text></g><g><title>do_raw_write_lock (27,936,866 samples, 0.03%)</title><rect x="93.3328%" y="1573" width="0.0348%" height="15" fill="rgb(217,117,27)" fg:x="75027675379" fg:w="27936866"/><text x="93.5828%" y="1583.50"></text></g><g><title>queued_write_lock_slowpath (27,129,650 samples, 0.03%)</title><rect x="93.3338%" y="1557" width="0.0337%" height="15" fill="rgb(245,147,4)" fg:x="75028482595" fg:w="27129650"/><text x="93.5838%" y="1567.50"></text></g><g><title>native_queued_spin_lock_slowpath (14,700,071 samples, 0.02%)</title><rect x="93.3493%" y="1541" width="0.0183%" height="15" fill="rgb(242,201,35)" fg:x="75040912174" fg:w="14700071"/><text x="93.5993%" y="1551.50"></text></g><g><title>__remove_mapping (30,878,680 samples, 0.04%)</title><rect x="93.3320%" y="1653" width="0.0384%" height="15" fill="rgb(218,181,1)" fg:x="75026979143" fg:w="30878680"/><text x="93.5820%" y="1663.50"></text></g><g><title>page_cache_ext_isolate_and_reclaim (36,317,790 samples, 0.05%)</title><rect x="93.3271%" y="1733" width="0.0452%" height="15" fill="rgb(222,6,29)" fg:x="75023070845" fg:w="36317790"/><text x="93.5771%" y="1743.50"></text></g><g><title>__page_cache_ext_isolate_and_reclaim (36,317,790 samples, 0.05%)</title><rect x="93.3271%" y="1717" width="0.0452%" height="15" fill="rgb(208,186,3)" fg:x="75023070845" fg:w="36317790"/><text x="93.5771%" y="1727.50"></text></g><g><title>reclaim_pages (34,740,977 samples, 0.04%)</title><rect x="93.3291%" y="1701" width="0.0432%" height="15" fill="rgb(216,36,26)" fg:x="75024647658" fg:w="34740977"/><text x="93.5791%" y="1711.50"></text></g><g><title>reclaim_folio_list (34,740,977 samples, 0.04%)</title><rect x="93.3291%" y="1685" width="0.0432%" height="15" fill="rgb(248,201,23)" fg:x="75024647658" fg:w="34740977"/><text x="93.5791%" y="1695.50"></text></g><g><title>shrink_folio_list (33,180,697 samples, 0.04%)</title><rect x="93.3310%" y="1669" width="0.0413%" height="15" fill="rgb(251,170,31)" fg:x="75026207938" fg:w="33180697"/><text x="93.5810%" y="1679.50"></text></g><g><title>native_queued_spin_lock_slowpath (8,565,099 samples, 0.01%)</title><rect x="93.3752%" y="1637" width="0.0107%" height="15" fill="rgb(207,110,25)" fg:x="75061701273" fg:w="8565099"/><text x="93.6252%" y="1647.50"></text></g><g><title>alloc_empty_file (50,163,618 samples, 0.06%)</title><rect x="93.3244%" y="1925" width="0.0624%" height="15" fill="rgb(250,54,15)" fg:x="75020881420" fg:w="50163618"/><text x="93.5744%" y="1935.50"></text></g><g><title>kmem_cache_alloc (48,572,689 samples, 0.06%)</title><rect x="93.3264%" y="1909" width="0.0604%" height="15" fill="rgb(227,68,33)" fg:x="75022472349" fg:w="48572689"/><text x="93.5764%" y="1919.50"></text></g><g><title>memcg_slab_pre_alloc_hook (48,572,689 samples, 0.06%)</title><rect x="93.3264%" y="1893" width="0.0604%" height="15" fill="rgb(238,34,41)" fg:x="75022472349" fg:w="48572689"/><text x="93.5764%" y="1903.50"></text></g><g><title>obj_cgroup_charge (47,974,193 samples, 0.06%)</title><rect x="93.3271%" y="1877" width="0.0597%" height="15" fill="rgb(220,11,15)" fg:x="75023070845" fg:w="47974193"/><text x="93.5771%" y="1887.50"></text></g><g><title>obj_cgroup_charge_pages (47,974,193 samples, 0.06%)</title><rect x="93.3271%" y="1861" width="0.0597%" height="15" fill="rgb(246,111,35)" fg:x="75023070845" fg:w="47974193"/><text x="93.5771%" y="1871.50"></text></g><g><title>try_charge_memcg (47,974,193 samples, 0.06%)</title><rect x="93.3271%" y="1845" width="0.0597%" height="15" fill="rgb(209,88,53)" fg:x="75023070845" fg:w="47974193"/><text x="93.5771%" y="1855.50"></text></g><g><title>try_to_free_mem_cgroup_pages (47,974,193 samples, 0.06%)</title><rect x="93.3271%" y="1829" width="0.0597%" height="15" fill="rgb(231,185,47)" fg:x="75023070845" fg:w="47974193"/><text x="93.5771%" y="1839.50"></text></g><g><title>do_try_to_free_pages (47,974,193 samples, 0.06%)</title><rect x="93.3271%" y="1813" width="0.0597%" height="15" fill="rgb(233,154,1)" fg:x="75023070845" fg:w="47974193"/><text x="93.5771%" y="1823.50"></text></g><g><title>shrink_zones (47,974,193 samples, 0.06%)</title><rect x="93.3271%" y="1797" width="0.0597%" height="15" fill="rgb(225,15,46)" fg:x="75023070845" fg:w="47974193"/><text x="93.5771%" y="1807.50"></text></g><g><title>shrink_node (47,974,193 samples, 0.06%)</title><rect x="93.3271%" y="1781" width="0.0597%" height="15" fill="rgb(211,135,41)" fg:x="75023070845" fg:w="47974193"/><text x="93.5771%" y="1791.50"></text></g><g><title>shrink_node_memcgs (47,974,193 samples, 0.06%)</title><rect x="93.3271%" y="1765" width="0.0597%" height="15" fill="rgb(208,54,0)" fg:x="75023070845" fg:w="47974193"/><text x="93.5771%" y="1775.50"></text></g><g><title>shrink_lruvec (47,974,193 samples, 0.06%)</title><rect x="93.3271%" y="1749" width="0.0597%" height="15" fill="rgb(244,136,14)" fg:x="75023070845" fg:w="47974193"/><text x="93.5771%" y="1759.50"></text></g><g><title>shrink_list (11,656,403 samples, 0.01%)</title><rect x="93.3723%" y="1733" width="0.0145%" height="15" fill="rgb(241,56,14)" fg:x="75059388635" fg:w="11656403"/><text x="93.6223%" y="1743.50"></text></g><g><title>shrink_inactive_list (11,656,403 samples, 0.01%)</title><rect x="93.3723%" y="1717" width="0.0145%" height="15" fill="rgb(205,80,24)" fg:x="75059388635" fg:w="11656403"/><text x="93.6223%" y="1727.50"></text></g><g><title>shrink_folio_list (11,656,403 samples, 0.01%)</title><rect x="93.3723%" y="1701" width="0.0145%" height="15" fill="rgb(220,57,4)" fg:x="75059388635" fg:w="11656403"/><text x="93.6223%" y="1711.50"></text></g><g><title>__remove_mapping (10,872,260 samples, 0.01%)</title><rect x="93.3733%" y="1685" width="0.0135%" height="15" fill="rgb(226,193,50)" fg:x="75060172778" fg:w="10872260"/><text x="93.6233%" y="1695.50"></text></g><g><title>_raw_spin_lock (9,343,765 samples, 0.01%)</title><rect x="93.3752%" y="1669" width="0.0116%" height="15" fill="rgb(231,168,22)" fg:x="75061701273" fg:w="9343765"/><text x="93.6252%" y="1679.50"></text></g><g><title>do_raw_spin_lock (9,343,765 samples, 0.01%)</title><rect x="93.3752%" y="1653" width="0.0116%" height="15" fill="rgb(254,215,14)" fg:x="75061701273" fg:w="9343765"/><text x="93.6252%" y="1663.50"></text></g><g><title>do_filp_open (52,460,673 samples, 0.07%)</title><rect x="93.3244%" y="1957" width="0.0653%" height="15" fill="rgb(211,115,16)" fg:x="75020881420" fg:w="52460673"/><text x="93.5744%" y="1967.50"></text></g><g><title>path_openat (52,460,673 samples, 0.07%)</title><rect x="93.3244%" y="1941" width="0.0653%" height="15" fill="rgb(236,210,16)" fg:x="75020881420" fg:w="52460673"/><text x="93.5744%" y="1951.50"></text></g><g><title>entry_SYSCALL_64 (53,248,851 samples, 0.07%)</title><rect x="93.3244%" y="2021" width="0.0662%" height="15" fill="rgb(221,94,12)" fg:x="75020881420" fg:w="53248851"/><text x="93.5744%" y="2031.50"></text></g><g><title>do_syscall_64 (53,248,851 samples, 0.07%)</title><rect x="93.3244%" y="2005" width="0.0662%" height="15" fill="rgb(235,218,49)" fg:x="75020881420" fg:w="53248851"/><text x="93.5744%" y="2015.50"></text></g><g><title>__x64_sys_openat (53,248,851 samples, 0.07%)</title><rect x="93.3244%" y="1989" width="0.0662%" height="15" fill="rgb(217,114,14)" fg:x="75020881420" fg:w="53248851"/><text x="93.5744%" y="1999.50"></text></g><g><title>do_sys_openat2 (53,248,851 samples, 0.07%)</title><rect x="93.3244%" y="1973" width="0.0662%" height="15" fill="rgb(216,145,22)" fg:x="75020881420" fg:w="53248851"/><text x="93.5744%" y="1983.50"></text></g><g><title>__GI___libc_open (274,072,840 samples, 0.34%)</title><rect x="93.0506%" y="2037" width="0.3409%" height="15" fill="rgb(217,112,39)" fg:x="74800790362" fg:w="274072840"/><text x="93.3006%" y="2047.50"></text></g><g><title>[unknown] (279,435,756 samples, 0.35%)</title><rect x="93.0459%" y="2053" width="0.3476%" height="15" fill="rgb(225,85,32)" fg:x="74796984518" fg:w="279435756"/><text x="93.2959%" y="2063.50"></text></g><g><title>run_io_trace (71,868,864,643 samples, 89.40%)</title><rect x="3.9914%" y="2069" width="89.4033%" height="15" fill="rgb(245,209,47)" fg:x="3208574112" fg:w="71868864643"/><text x="4.2414%" y="2079.50">run_io_trace</text></g><g><title>sed (9,674,231 samples, 0.01%)</title><rect x="93.3947%" y="2069" width="0.0120%" height="15" fill="rgb(218,220,15)" fg:x="75077438755" fg:w="9674231"/><text x="93.6447%" y="2079.50"></text></g><g><title>__GI___getdents64 (8,627,785 samples, 0.01%)</title><rect x="93.4106%" y="2037" width="0.0107%" height="15" fill="rgb(222,202,31)" fg:x="75090157292" fg:w="8627785"/><text x="93.6606%" y="2047.50"></text></g><g><title>entry_SYSCALL_64 (8,627,785 samples, 0.01%)</title><rect x="93.4106%" y="2021" width="0.0107%" height="15" fill="rgb(243,203,4)" fg:x="75090157292" fg:w="8627785"/><text x="93.6606%" y="2031.50"></text></g><g><title>do_syscall_64 (8,627,785 samples, 0.01%)</title><rect x="93.4106%" y="2005" width="0.0107%" height="15" fill="rgb(237,92,17)" fg:x="75090157292" fg:w="8627785"/><text x="93.6606%" y="2015.50"></text></g><g><title>__x64_sys_getdents64 (8,627,785 samples, 0.01%)</title><rect x="93.4106%" y="1989" width="0.0107%" height="15" fill="rgb(231,119,7)" fg:x="75090157292" fg:w="8627785"/><text x="93.6606%" y="1999.50"></text></g><g><title>__se_sys_getdents64 (8,627,785 samples, 0.01%)</title><rect x="93.4106%" y="1973" width="0.0107%" height="15" fill="rgb(237,82,41)" fg:x="75090157292" fg:w="8627785"/><text x="93.6606%" y="1983.50"></text></g><g><title>iterate_dir (8,627,785 samples, 0.01%)</title><rect x="93.4106%" y="1957" width="0.0107%" height="15" fill="rgb(226,81,48)" fg:x="75090157292" fg:w="8627785"/><text x="93.6606%" y="1967.50"></text></g><g><title>do_filp_open (11,784,686 samples, 0.01%)</title><rect x="93.4237%" y="1957" width="0.0147%" height="15" fill="rgb(234,70,51)" fg:x="75100696069" fg:w="11784686"/><text x="93.6737%" y="1967.50"></text></g><g><title>path_openat (11,057,777 samples, 0.01%)</title><rect x="93.4246%" y="1941" width="0.0138%" height="15" fill="rgb(251,86,4)" fg:x="75101422978" fg:w="11057777"/><text x="93.6746%" y="1951.50"></text></g><g><title>__x64_sys_openat (13,074,850 samples, 0.02%)</title><rect x="93.4237%" y="1989" width="0.0163%" height="15" fill="rgb(244,144,28)" fg:x="75100696069" fg:w="13074850"/><text x="93.6737%" y="1999.50"></text></g><g><title>do_sys_openat2 (13,074,850 samples, 0.02%)</title><rect x="93.4237%" y="1973" width="0.0163%" height="15" fill="rgb(232,161,39)" fg:x="75100696069" fg:w="13074850"/><text x="93.6737%" y="1983.50"></text></g><g><title>__open64_nocancel (14,486,328 samples, 0.02%)</title><rect x="93.4237%" y="2037" width="0.0180%" height="15" fill="rgb(247,34,51)" fg:x="75100696069" fg:w="14486328"/><text x="93.6737%" y="2047.50"></text></g><g><title>entry_SYSCALL_64 (14,486,328 samples, 0.02%)</title><rect x="93.4237%" y="2021" width="0.0180%" height="15" fill="rgb(225,132,2)" fg:x="75100696069" fg:w="14486328"/><text x="93.6737%" y="2031.50"></text></g><g><title>do_syscall_64 (14,486,328 samples, 0.02%)</title><rect x="93.4237%" y="2005" width="0.0180%" height="15" fill="rgb(209,159,44)" fg:x="75100696069" fg:w="14486328"/><text x="93.6737%" y="2015.50"></text></g><g><title>[unknown] (30,451,478 samples, 0.04%)</title><rect x="93.4078%" y="2053" width="0.0379%" height="15" fill="rgb(251,214,1)" fg:x="75087907184" fg:w="30451478"/><text x="93.6578%" y="2063.50"></text></g><g><title>sh (46,379,363 samples, 0.06%)</title><rect x="93.4068%" y="2069" width="0.0577%" height="15" fill="rgb(247,84,47)" fg:x="75087112986" fg:w="46379363"/><text x="93.6568%" y="2079.50"></text></g><g><title>[libcrypto.so.3] (8,083,152 samples, 0.01%)</title><rect x="93.4722%" y="2053" width="0.0101%" height="15" fill="rgb(240,111,43)" fg:x="75139673569" fg:w="8083152"/><text x="93.7222%" y="2063.50"></text></g><g><title>[libcrypto.so.3] (13,222,882 samples, 0.02%)</title><rect x="93.4950%" y="2037" width="0.0164%" height="15" fill="rgb(215,214,35)" fg:x="75158049138" fg:w="13222882"/><text x="93.7450%" y="2047.50"></text></g><g><title>[sshd] (11,150,436 samples, 0.01%)</title><rect x="93.5115%" y="2037" width="0.0139%" height="15" fill="rgb(248,207,23)" fg:x="75171272020" fg:w="11150436"/><text x="93.7615%" y="2047.50"></text></g><g><title>[unknown] (12,593,131 samples, 0.02%)</title><rect x="93.5253%" y="2037" width="0.0157%" height="15" fill="rgb(214,186,4)" fg:x="75182422456" fg:w="12593131"/><text x="93.7753%" y="2047.50"></text></g><g><title>[unknown] (72,745,779 samples, 0.09%)</title><rect x="93.4864%" y="2053" width="0.0905%" height="15" fill="rgb(220,133,22)" fg:x="75151085831" fg:w="72745779"/><text x="93.7364%" y="2063.50"></text></g><g><title>do_mmap (8,330,554 samples, 0.01%)</title><rect x="93.6086%" y="1941" width="0.0104%" height="15" fill="rgb(239,134,19)" fg:x="75249325532" fg:w="8330554"/><text x="93.8586%" y="1951.50"></text></g><g><title>mmap_region (8,330,554 samples, 0.01%)</title><rect x="93.6086%" y="1925" width="0.0104%" height="15" fill="rgb(250,140,9)" fg:x="75249325532" fg:w="8330554"/><text x="93.8586%" y="1935.50"></text></g><g><title>mmap64 (10,251,771 samples, 0.01%)</title><rect x="93.6070%" y="2037" width="0.0128%" height="15" fill="rgb(225,59,14)" fg:x="75248066904" fg:w="10251771"/><text x="93.8570%" y="2047.50"></text></g><g><title>entry_SYSCALL_64 (9,554,574 samples, 0.01%)</title><rect x="93.6079%" y="2021" width="0.0119%" height="15" fill="rgb(214,152,51)" fg:x="75248764101" fg:w="9554574"/><text x="93.8579%" y="2031.50"></text></g><g><title>do_syscall_64 (9,554,574 samples, 0.01%)</title><rect x="93.6079%" y="2005" width="0.0119%" height="15" fill="rgb(251,227,43)" fg:x="75248764101" fg:w="9554574"/><text x="93.8579%" y="2015.50"></text></g><g><title>__x64_sys_mmap (8,993,143 samples, 0.01%)</title><rect x="93.6086%" y="1989" width="0.0112%" height="15" fill="rgb(241,96,17)" fg:x="75249325532" fg:w="8993143"/><text x="93.8586%" y="1999.50"></text></g><g><title>ksys_mmap_pgoff (8,993,143 samples, 0.01%)</title><rect x="93.6086%" y="1973" width="0.0112%" height="15" fill="rgb(234,198,43)" fg:x="75249325532" fg:w="8993143"/><text x="93.8586%" y="1983.50"></text></g><g><title>vm_mmap_pgoff (8,993,143 samples, 0.01%)</title><rect x="93.6086%" y="1957" width="0.0112%" height="15" fill="rgb(220,108,29)" fg:x="75249325532" fg:w="8993143"/><text x="93.8586%" y="1967.50"></text></g><g><title>_dl_map_object (18,573,811 samples, 0.02%)</title><rect x="93.5973%" y="2053" width="0.0231%" height="15" fill="rgb(226,163,33)" fg:x="75240272872" fg:w="18573811"/><text x="93.8473%" y="2063.50"></text></g><g><title>sshd (145,017,928 samples, 0.18%)</title><rect x="93.4715%" y="2069" width="0.1804%" height="15" fill="rgb(205,194,45)" fg:x="75139138143" fg:w="145017928"/><text x="93.7215%" y="2079.50"></text></g><g><title>[unknown] (13,741,270 samples, 0.02%)</title><rect x="93.6545%" y="2053" width="0.0171%" height="15" fill="rgb(206,143,44)" fg:x="75286212174" fg:w="13741270"/><text x="93.9045%" y="2063.50"></text></g><g><title>_dl_map_object (10,701,999 samples, 0.01%)</title><rect x="93.6843%" y="2053" width="0.0133%" height="15" fill="rgb(236,136,36)" fg:x="75310225811" fg:w="10701999"/><text x="93.9343%" y="2063.50"></text></g><g><title>sudo (44,060,011 samples, 0.05%)</title><rect x="93.6519%" y="2069" width="0.0548%" height="15" fill="rgb(249,172,42)" fg:x="75284156071" fg:w="44060011"/><text x="93.9019%" y="2079.50"></text></g><g><title>asm_common_interrupt (19,921,071 samples, 0.02%)</title><rect x="93.7377%" y="1973" width="0.0248%" height="15" fill="rgb(216,139,23)" fg:x="75353172967" fg:w="19921071"/><text x="93.9877%" y="1983.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (121,928,334 samples, 0.15%)</title><rect x="93.7625%" y="1973" width="0.1517%" height="15" fill="rgb(207,166,20)" fg:x="75373094038" fg:w="121928334"/><text x="94.0125%" y="1983.50"></text></g><g><title>asm_sysvec_call_function_single (612,312,849 samples, 0.76%)</title><rect x="93.9142%" y="1973" width="0.7617%" height="15" fill="rgb(210,209,22)" fg:x="75495022372" fg:w="612312849"/><text x="94.1642%" y="1983.50"></text></g><g><title>asm_sysvec_reschedule_ipi (12,337,054 samples, 0.02%)</title><rect x="94.6759%" y="1973" width="0.0153%" height="15" fill="rgb(232,118,20)" fg:x="76107335221" fg:w="12337054"/><text x="94.9259%" y="1983.50"></text></g><g><title>common_interrupt (9,809,274 samples, 0.01%)</title><rect x="94.6913%" y="1973" width="0.0122%" height="15" fill="rgb(238,113,42)" fg:x="76119672275" fg:w="9809274"/><text x="94.9413%" y="1983.50"></text></g><g><title>acpi_processor_ffh_cstate_enter (12,552,068 samples, 0.02%)</title><rect x="94.7080%" y="1925" width="0.0156%" height="15" fill="rgb(231,42,5)" fg:x="76133155351" fg:w="12552068"/><text x="94.9580%" y="1935.50"></text></g><g><title>acpi_idle_enter (27,760,210 samples, 0.03%)</title><rect x="94.7056%" y="1957" width="0.0345%" height="15" fill="rgb(243,166,24)" fg:x="76131224905" fg:w="27760210"/><text x="94.9556%" y="1967.50"></text></g><g><title>acpi_idle_do_entry (25,829,764 samples, 0.03%)</title><rect x="94.7080%" y="1941" width="0.0321%" height="15" fill="rgb(237,226,12)" fg:x="76133155351" fg:w="25829764"/><text x="94.9580%" y="1951.50"></text></g><g><title>io_idle (13,277,696 samples, 0.02%)</title><rect x="94.7236%" y="1925" width="0.0165%" height="15" fill="rgb(229,133,24)" fg:x="76145707419" fg:w="13277696"/><text x="94.9736%" y="1935.50"></text></g><g><title>_raw_spin_lock (9,658,473 samples, 0.01%)</title><rect x="94.7673%" y="1893" width="0.0120%" height="15" fill="rgb(238,33,43)" fg:x="76180837426" fg:w="9658473"/><text x="95.0173%" y="1903.50"></text></g><g><title>lock_acquire (9,658,473 samples, 0.01%)</title><rect x="94.7673%" y="1877" width="0.0120%" height="15" fill="rgb(227,59,38)" fg:x="76180837426" fg:w="9658473"/><text x="95.0173%" y="1887.50"></text></g><g><title>[tls.ko] (13,351,371 samples, 0.02%)</title><rect x="94.7847%" y="1861" width="0.0166%" height="15" fill="rgb(230,97,0)" fg:x="76194807932" fg:w="13351371"/><text x="95.0347%" y="1871.50"></text></g><g><title>__handle_irq_event_percpu (14,943,968 samples, 0.02%)</title><rect x="94.7847%" y="1877" width="0.0186%" height="15" fill="rgb(250,173,50)" fg:x="76194807932" fg:w="14943968"/><text x="95.0347%" y="1887.50"></text></g><g><title>do_raw_spin_unlock (14,026,134 samples, 0.02%)</title><rect x="94.8052%" y="1861" width="0.0174%" height="15" fill="rgb(240,15,50)" fg:x="76211296918" fg:w="14026134"/><text x="95.0552%" y="1871.50"></text></g><g><title>_raw_spin_unlock (22,687,574 samples, 0.03%)</title><rect x="94.8042%" y="1877" width="0.0282%" height="15" fill="rgb(221,93,22)" fg:x="76210435716" fg:w="22687574"/><text x="95.0542%" y="1887.50"></text></g><g><title>handle_irq_event (39,831,739 samples, 0.05%)</title><rect x="94.7838%" y="1893" width="0.0495%" height="15" fill="rgb(245,180,53)" fg:x="76194041226" fg:w="39831739"/><text x="95.0338%" y="1903.50"></text></g><g><title>handle_edge_irq (59,294,371 samples, 0.07%)</title><rect x="94.7641%" y="1909" width="0.0738%" height="15" fill="rgb(231,88,51)" fg:x="76178263091" fg:w="59294371"/><text x="95.0141%" y="1919.50"></text></g><g><title>__common_interrupt (64,497,679 samples, 0.08%)</title><rect x="94.7604%" y="1925" width="0.0802%" height="15" fill="rgb(240,58,21)" fg:x="76175265821" fg:w="64497679"/><text x="95.0104%" y="1935.50"></text></g><g><title>tick_check_oneshot_broadcast_this_cpu (10,019,642 samples, 0.01%)</title><rect x="94.8692%" y="1909" width="0.0125%" height="15" fill="rgb(237,21,10)" fg:x="76262737104" fg:w="10019642"/><text x="95.1192%" y="1919.50"></text></g><g><title>__lock_acquire (10,236,397 samples, 0.01%)</title><rect x="94.9800%" y="1861" width="0.0127%" height="15" fill="rgb(218,43,11)" fg:x="76351750018" fg:w="10236397"/><text x="95.2300%" y="1871.50"></text></g><g><title>lock_acquire (56,543,800 samples, 0.07%)</title><rect x="94.9311%" y="1877" width="0.0703%" height="15" fill="rgb(218,221,29)" fg:x="76312462549" fg:w="56543800"/><text x="95.1811%" y="1887.50"></text></g><g><title>lock_release (12,725,656 samples, 0.02%)</title><rect x="95.0014%" y="1877" width="0.0158%" height="15" fill="rgb(214,118,42)" fg:x="76369006349" fg:w="12725656"/><text x="95.2514%" y="1887.50"></text></g><g><title>read_tsc (29,173,694 samples, 0.04%)</title><rect x="95.0173%" y="1877" width="0.0363%" height="15" fill="rgb(251,200,26)" fg:x="76381732005" fg:w="29173694"/><text x="95.2673%" y="1887.50"></text></g><g><title>ktime_get (117,620,066 samples, 0.15%)</title><rect x="94.9076%" y="1893" width="0.1463%" height="15" fill="rgb(237,101,39)" fg:x="76293591825" fg:w="117620066"/><text x="95.1576%" y="1903.50"></text></g><g><title>read_tsc (10,405,607 samples, 0.01%)</title><rect x="95.0587%" y="1893" width="0.0129%" height="15" fill="rgb(251,117,11)" fg:x="76415085746" fg:w="10405607"/><text x="95.3087%" y="1903.50"></text></g><g><title>tick_check_oneshot_broadcast_this_cpu (116,511,809 samples, 0.14%)</title><rect x="95.0717%" y="1893" width="0.1449%" height="15" fill="rgb(216,223,23)" fg:x="76425491353" fg:w="116511809"/><text x="95.3217%" y="1903.50"></text></g><g><title>__lock_acquire (8,219,911 samples, 0.01%)</title><rect x="95.2297%" y="1861" width="0.0102%" height="15" fill="rgb(251,54,12)" fg:x="76552543581" fg:w="8219911"/><text x="95.4797%" y="1871.50"></text></g><g><title>lock_acquire (15,964,309 samples, 0.02%)</title><rect x="95.2244%" y="1877" width="0.0199%" height="15" fill="rgb(254,176,54)" fg:x="76548231895" fg:w="15964309"/><text x="95.4744%" y="1887.50"></text></g><g><title>lock_release (9,499,732 samples, 0.01%)</title><rect x="95.2442%" y="1877" width="0.0118%" height="15" fill="rgb(210,32,8)" fg:x="76564196204" fg:w="9499732"/><text x="95.4942%" y="1887.50"></text></g><g><title>irq_enter_rcu (331,439,806 samples, 0.41%)</title><rect x="94.8531%" y="1925" width="0.4123%" height="15" fill="rgb(235,52,38)" fg:x="76249771929" fg:w="331439806"/><text x="95.1031%" y="1935.50"></text></g><g><title>tick_irq_enter (308,454,989 samples, 0.38%)</title><rect x="94.8817%" y="1909" width="0.3837%" height="15" fill="rgb(231,4,44)" fg:x="76272756746" fg:w="308454989"/><text x="95.1317%" y="1919.50"></text></g><g><title>tick_nohz_stop_idle (38,306,576 samples, 0.05%)</title><rect x="95.2177%" y="1893" width="0.0477%" height="15" fill="rgb(249,2,32)" fg:x="76542905159" fg:w="38306576"/><text x="95.4677%" y="1903.50"></text></g><g><title>__folio_end_writeback (19,842,439 samples, 0.02%)</title><rect x="95.2724%" y="1717" width="0.0247%" height="15" fill="rgb(224,65,26)" fg:x="76586816505" fg:w="19842439"/><text x="95.5224%" y="1727.50"></text></g><g><title>ext4_end_bio (30,202,364 samples, 0.04%)</title><rect x="95.2666%" y="1765" width="0.0376%" height="15" fill="rgb(250,73,40)" fg:x="76582153267" fg:w="30202364"/><text x="95.5166%" y="1775.50"></text></g><g><title>ext4_finish_bio (30,202,364 samples, 0.04%)</title><rect x="95.2666%" y="1749" width="0.0376%" height="15" fill="rgb(253,177,16)" fg:x="76582153267" fg:w="30202364"/><text x="95.5166%" y="1759.50"></text></g><g><title>folio_end_writeback (25,539,126 samples, 0.03%)</title><rect x="95.2724%" y="1733" width="0.0318%" height="15" fill="rgb(217,32,34)" fg:x="76586816505" fg:w="25539126"/><text x="95.5224%" y="1743.50"></text></g><g><title>blk_done_softirq (31,193,952 samples, 0.04%)</title><rect x="95.2654%" y="1877" width="0.0388%" height="15" fill="rgb(212,7,10)" fg:x="76581211735" fg:w="31193952"/><text x="95.5154%" y="1887.50"></text></g><g><title>scsi_complete (31,128,344 samples, 0.04%)</title><rect x="95.2655%" y="1861" width="0.0387%" height="15" fill="rgb(245,89,8)" fg:x="76581277343" fg:w="31128344"/><text x="95.5155%" y="1871.50"></text></g><g><title>scsi_finish_command (31,128,344 samples, 0.04%)</title><rect x="95.2655%" y="1845" width="0.0387%" height="15" fill="rgb(237,16,53)" fg:x="76581277343" fg:w="31128344"/><text x="95.5155%" y="1855.50"></text></g><g><title>scsi_io_completion (31,049,845 samples, 0.04%)</title><rect x="95.2656%" y="1829" width="0.0386%" height="15" fill="rgb(250,204,30)" fg:x="76581355842" fg:w="31049845"/><text x="95.5156%" y="1839.50"></text></g><g><title>scsi_end_request (31,049,845 samples, 0.04%)</title><rect x="95.2656%" y="1813" width="0.0386%" height="15" fill="rgb(208,77,27)" fg:x="76581355842" fg:w="31049845"/><text x="95.5156%" y="1823.50"></text></g><g><title>blk_update_request (31,003,720 samples, 0.04%)</title><rect x="95.2656%" y="1797" width="0.0386%" height="15" fill="rgb(250,204,28)" fg:x="76581401967" fg:w="31003720"/><text x="95.5156%" y="1807.50"></text></g><g><title>bio_endio (31,003,720 samples, 0.04%)</title><rect x="95.2656%" y="1781" width="0.0386%" height="15" fill="rgb(244,63,21)" fg:x="76581401967" fg:w="31003720"/><text x="95.5156%" y="1791.50"></text></g><g><title>__kprobes_text_end (34,943,121 samples, 0.04%)</title><rect x="95.2654%" y="1893" width="0.0435%" height="15" fill="rgb(236,85,44)" fg:x="76581211735" fg:w="34943121"/><text x="95.5154%" y="1903.50"></text></g><g><title>irq_exit_rcu (35,947,097 samples, 0.04%)</title><rect x="95.2654%" y="1925" width="0.0447%" height="15" fill="rgb(215,98,4)" fg:x="76581211735" fg:w="35947097"/><text x="95.5154%" y="1935.50"></text></g><g><title>__irq_exit_rcu (35,947,097 samples, 0.04%)</title><rect x="95.2654%" y="1909" width="0.0447%" height="15" fill="rgb(235,38,11)" fg:x="76581211735" fg:w="35947097"/><text x="95.5154%" y="1919.50"></text></g><g><title>irqentry_enter (23,111,665 samples, 0.03%)</title><rect x="95.3101%" y="1925" width="0.0288%" height="15" fill="rgb(254,186,25)" fg:x="76617158832" fg:w="23111665"/><text x="95.5601%" y="1935.50"></text></g><g><title>common_interrupt (484,800,345 samples, 0.60%)</title><rect x="94.7402%" y="1941" width="0.6031%" height="15" fill="rgb(225,55,31)" fg:x="76158985115" fg:w="484800345"/><text x="94.9902%" y="1951.50"></text></g><g><title>asm_common_interrupt (488,093,249 samples, 0.61%)</title><rect x="94.7402%" y="1957" width="0.6072%" height="15" fill="rgb(211,15,21)" fg:x="76158985115" fg:w="488093249"/><text x="94.9902%" y="1967.50"></text></g><g><title>irqentry_enter (17,508,500 samples, 0.02%)</title><rect x="95.3473%" y="1941" width="0.0218%" height="15" fill="rgb(215,187,41)" fg:x="76647078364" fg:w="17508500"/><text x="95.5973%" y="1951.50"></text></g><g><title>hrtimer_interrupt (14,739,178 samples, 0.02%)</title><rect x="95.4224%" y="1909" width="0.0183%" height="15" fill="rgb(248,69,32)" fg:x="76707442411" fg:w="14739178"/><text x="95.6724%" y="1919.50"></text></g><g><title>__sysvec_apic_timer_interrupt (21,647,389 samples, 0.03%)</title><rect x="95.4162%" y="1925" width="0.0269%" height="15" fill="rgb(252,102,52)" fg:x="76702467630" fg:w="21647389"/><text x="95.6662%" y="1935.50"></text></g><g><title>ct_irq_enter (12,342,936 samples, 0.02%)</title><rect x="95.4437%" y="1925" width="0.0154%" height="15" fill="rgb(253,140,32)" fg:x="76724576703" fg:w="12342936"/><text x="95.6937%" y="1935.50"></text></g><g><title>sched_clock (8,256,840 samples, 0.01%)</title><rect x="95.4760%" y="1877" width="0.0103%" height="15" fill="rgb(216,56,42)" fg:x="76750502258" fg:w="8256840"/><text x="95.7260%" y="1887.50"></text></g><g><title>irqtime_account_irq (10,647,989 samples, 0.01%)</title><rect x="95.4733%" y="1909" width="0.0132%" height="15" fill="rgb(216,184,14)" fg:x="76748368774" fg:w="10647989"/><text x="95.7233%" y="1919.50"></text></g><g><title>sched_clock_cpu (8,514,505 samples, 0.01%)</title><rect x="95.4760%" y="1893" width="0.0106%" height="15" fill="rgb(237,187,27)" fg:x="76750502258" fg:w="8514505"/><text x="95.7260%" y="1903.50"></text></g><g><title>tick_check_oneshot_broadcast_this_cpu (26,822,238 samples, 0.03%)</title><rect x="95.4921%" y="1909" width="0.0334%" height="15" fill="rgb(219,65,3)" fg:x="76763471018" fg:w="26822238"/><text x="95.7421%" y="1919.50"></text></g><g><title>__lock_acquire (17,397,650 samples, 0.02%)</title><rect x="95.7521%" y="1861" width="0.0216%" height="15" fill="rgb(245,83,25)" fg:x="76972439671" fg:w="17397650"/><text x="96.0021%" y="1871.50"></text></g><g><title>lock_acquire (156,990,845 samples, 0.20%)</title><rect x="95.5896%" y="1877" width="0.1953%" height="15" fill="rgb(214,205,45)" fg:x="76841798725" fg:w="156990845"/><text x="95.8396%" y="1887.50"></text></g><g><title>trace_lock_acquire (8,546,560 samples, 0.01%)</title><rect x="95.7742%" y="1861" width="0.0106%" height="15" fill="rgb(241,20,18)" fg:x="76990243010" fg:w="8546560"/><text x="96.0242%" y="1871.50"></text></g><g><title>lock_release (37,713,458 samples, 0.05%)</title><rect x="95.7849%" y="1877" width="0.0469%" height="15" fill="rgb(232,163,23)" fg:x="76998789570" fg:w="37713458"/><text x="96.0349%" y="1887.50"></text></g><g><title>trace_lock_release (8,846,251 samples, 0.01%)</title><rect x="95.8208%" y="1861" width="0.0110%" height="15" fill="rgb(214,5,46)" fg:x="77027656777" fg:w="8846251"/><text x="96.0708%" y="1871.50"></text></g><g><title>read_tsc (37,793,268 samples, 0.05%)</title><rect x="95.8328%" y="1877" width="0.0470%" height="15" fill="rgb(229,78,17)" fg:x="77037332843" fg:w="37793268"/><text x="96.0828%" y="1887.50"></text></g><g><title>ktime_get (257,311,261 samples, 0.32%)</title><rect x="95.5613%" y="1893" width="0.3201%" height="15" fill="rgb(248,89,10)" fg:x="76819082618" fg:w="257311261"/><text x="95.8113%" y="1903.50"></text></g><g><title>read_tsc (13,399,729 samples, 0.02%)</title><rect x="95.8911%" y="1893" width="0.0167%" height="15" fill="rgb(248,54,15)" fg:x="77084176103" fg:w="13399729"/><text x="96.1411%" y="1903.50"></text></g><g><title>tick_check_oneshot_broadcast_this_cpu (191,272,527 samples, 0.24%)</title><rect x="95.9082%" y="1893" width="0.2379%" height="15" fill="rgb(223,116,6)" fg:x="77097971278" fg:w="191272527"/><text x="96.1582%" y="1903.50"></text></g><g><title>__lock_acquire (19,496,613 samples, 0.02%)</title><rect x="96.1742%" y="1861" width="0.0243%" height="15" fill="rgb(205,125,38)" fg:x="77311780525" fg:w="19496613"/><text x="96.4242%" y="1871.50"></text></g><g><title>lock_acquire (41,983,197 samples, 0.05%)</title><rect x="96.1547%" y="1877" width="0.0522%" height="15" fill="rgb(251,78,38)" fg:x="77296094366" fg:w="41983197"/><text x="96.4047%" y="1887.50"></text></g><g><title>lock_release (13,907,907 samples, 0.02%)</title><rect x="96.2069%" y="1877" width="0.0173%" height="15" fill="rgb(253,78,28)" fg:x="77338077563" fg:w="13907907"/><text x="96.4569%" y="1887.50"></text></g><g><title>nr_iowait_cpu (12,412,867 samples, 0.02%)</title><rect x="96.2242%" y="1877" width="0.0154%" height="15" fill="rgb(209,120,3)" fg:x="77351985470" fg:w="12412867"/><text x="96.4742%" y="1887.50"></text></g><g><title>tick_irq_enter (574,955,526 samples, 0.72%)</title><rect x="95.5255%" y="1909" width="0.7152%" height="15" fill="rgb(238,229,9)" fg:x="76790293256" fg:w="574955526"/><text x="95.7755%" y="1919.50"></text></g><g><title>tick_nohz_stop_idle (74,514,651 samples, 0.09%)</title><rect x="96.1480%" y="1893" width="0.0927%" height="15" fill="rgb(253,159,18)" fg:x="77290734131" fg:w="74514651"/><text x="96.3980%" y="1903.50"></text></g><g><title>irq_enter_rcu (626,783,534 samples, 0.78%)</title><rect x="95.4623%" y="1925" width="0.7797%" height="15" fill="rgb(244,42,34)" fg:x="76739525489" fg:w="626783534"/><text x="95.7123%" y="1935.50"></text></g><g><title>file_free_rcu (11,285,013 samples, 0.01%)</title><rect x="96.2449%" y="1845" width="0.0140%" height="15" fill="rgb(224,8,7)" fg:x="77368563240" fg:w="11285013"/><text x="96.4949%" y="1855.50"></text></g><g><title>kmem_cache_free (10,878,520 samples, 0.01%)</title><rect x="96.2454%" y="1829" width="0.0135%" height="15" fill="rgb(210,201,45)" fg:x="77368969733" fg:w="10878520"/><text x="96.4954%" y="1839.50"></text></g><g><title>memcg_slab_free_hook (8,094,648 samples, 0.01%)</title><rect x="96.2488%" y="1813" width="0.0101%" height="15" fill="rgb(252,185,21)" fg:x="77371753605" fg:w="8094648"/><text x="96.4988%" y="1823.50"></text></g><g><title>rcu_core_si (16,227,040 samples, 0.02%)</title><rect x="96.2435%" y="1877" width="0.0202%" height="15" fill="rgb(223,131,1)" fg:x="77367472178" fg:w="16227040"/><text x="96.4935%" y="1887.50"></text></g><g><title>rcu_core (16,227,040 samples, 0.02%)</title><rect x="96.2435%" y="1861" width="0.0202%" height="15" fill="rgb(245,141,16)" fg:x="77367472178" fg:w="16227040"/><text x="96.4935%" y="1871.50"></text></g><g><title>__kprobes_text_end (19,454,152 samples, 0.02%)</title><rect x="96.2420%" y="1893" width="0.0242%" height="15" fill="rgb(229,55,45)" fg:x="77366309023" fg:w="19454152"/><text x="96.4920%" y="1903.50"></text></g><g><title>irq_exit_rcu (19,534,732 samples, 0.02%)</title><rect x="96.2420%" y="1925" width="0.0243%" height="15" fill="rgb(208,92,15)" fg:x="77366309023" fg:w="19534732"/><text x="96.4920%" y="1935.50"></text></g><g><title>__irq_exit_rcu (19,534,732 samples, 0.02%)</title><rect x="96.2420%" y="1909" width="0.0243%" height="15" fill="rgb(234,185,47)" fg:x="77366309023" fg:w="19534732"/><text x="96.4920%" y="1919.50"></text></g><g><title>ct_irq_enter (9,630,369 samples, 0.01%)</title><rect x="96.3420%" y="1909" width="0.0120%" height="15" fill="rgb(253,104,50)" fg:x="77446624483" fg:w="9630369"/><text x="96.5920%" y="1919.50"></text></g><g><title>irqentry_enter (76,998,894 samples, 0.10%)</title><rect x="96.2663%" y="1925" width="0.0958%" height="15" fill="rgb(205,70,7)" fg:x="77385843755" fg:w="76998894"/><text x="96.5163%" y="1935.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (827,580,696 samples, 1.03%)</title><rect x="95.3473%" y="1957" width="1.0295%" height="15" fill="rgb(240,178,43)" fg:x="76647078364" fg:w="827580696"/><text x="95.5973%" y="1967.50"></text></g><g><title>sysvec_apic_timer_interrupt (810,072,196 samples, 1.01%)</title><rect x="95.3691%" y="1941" width="1.0077%" height="15" fill="rgb(214,112,2)" fg:x="76664586864" fg:w="810072196"/><text x="95.6191%" y="1951.50"></text></g><g><title>irqentry_enter (30,877,091 samples, 0.04%)</title><rect x="96.3785%" y="1941" width="0.0384%" height="15" fill="rgb(206,46,17)" fg:x="77475974980" fg:w="30877091"/><text x="96.6285%" y="1951.50"></text></g><g><title>ct_irq_enter (14,730,417 samples, 0.02%)</title><rect x="96.4511%" y="1925" width="0.0183%" height="15" fill="rgb(225,220,16)" fg:x="77534400524" fg:w="14730417"/><text x="96.7011%" y="1935.50"></text></g><g><title>__lock_acquire (8,478,680 samples, 0.01%)</title><rect x="96.5431%" y="1861" width="0.0105%" height="15" fill="rgb(238,65,40)" fg:x="77608312274" fg:w="8478680"/><text x="96.7931%" y="1871.50"></text></g><g><title>lock_acquire (34,904,580 samples, 0.04%)</title><rect x="96.5158%" y="1877" width="0.0434%" height="15" fill="rgb(230,151,21)" fg:x="77586389436" fg:w="34904580"/><text x="96.7658%" y="1887.50"></text></g><g><title>lock_release (10,150,357 samples, 0.01%)</title><rect x="96.5592%" y="1877" width="0.0126%" height="15" fill="rgb(218,58,49)" fg:x="77621294016" fg:w="10150357"/><text x="96.8092%" y="1887.50"></text></g><g><title>ktime_get (58,553,298 samples, 0.07%)</title><rect x="96.5025%" y="1893" width="0.0728%" height="15" fill="rgb(219,179,14)" fg:x="77575668641" fg:w="58553298"/><text x="96.7525%" y="1903.50"></text></g><g><title>tick_check_oneshot_broadcast_this_cpu (43,700,283 samples, 0.05%)</title><rect x="96.5758%" y="1893" width="0.0544%" height="15" fill="rgb(223,72,1)" fg:x="77634573420" fg:w="43700283"/><text x="96.8258%" y="1903.50"></text></g><g><title>irq_enter_rcu (138,322,246 samples, 0.17%)</title><rect x="96.4696%" y="1925" width="0.1721%" height="15" fill="rgb(238,126,10)" fg:x="77549271742" fg:w="138322246"/><text x="96.7196%" y="1935.50"></text></g><g><title>tick_irq_enter (122,615,749 samples, 0.15%)</title><rect x="96.4892%" y="1909" width="0.1525%" height="15" fill="rgb(224,206,38)" fg:x="77564978239" fg:w="122615749"/><text x="96.7392%" y="1919.50"></text></g><g><title>_raw_spin_lock_irqsave (13,224,113 samples, 0.02%)</title><rect x="96.6484%" y="1733" width="0.0165%" height="15" fill="rgb(212,201,54)" fg:x="77692957520" fg:w="13224113"/><text x="96.8984%" y="1743.50"></text></g><g><title>lock_acquire (11,636,581 samples, 0.01%)</title><rect x="96.6504%" y="1717" width="0.0145%" height="15" fill="rgb(218,154,48)" fg:x="77694545052" fg:w="11636581"/><text x="96.9004%" y="1727.50"></text></g><g><title>__lock_acquire (10,708,192 samples, 0.01%)</title><rect x="96.6515%" y="1701" width="0.0133%" height="15" fill="rgb(232,93,24)" fg:x="77695473441" fg:w="10708192"/><text x="96.9015%" y="1711.50"></text></g><g><title>__mod_lruvec_page_state (11,274,616 samples, 0.01%)</title><rect x="96.6766%" y="1701" width="0.0140%" height="15" fill="rgb(245,30,21)" fg:x="77715617739" fg:w="11274616"/><text x="96.9266%" y="1711.50"></text></g><g><title>__wb_writeout_add (8,951,511 samples, 0.01%)</title><rect x="96.6906%" y="1701" width="0.0111%" height="15" fill="rgb(242,148,29)" fg:x="77726892355" fg:w="8951511"/><text x="96.9406%" y="1711.50"></text></g><g><title>do_raw_spin_lock (112,947,039 samples, 0.14%)</title><rect x="96.7044%" y="1685" width="0.1405%" height="15" fill="rgb(244,153,54)" fg:x="77737961869" fg:w="112947039"/><text x="96.9544%" y="1695.50"></text></g><g><title>native_queued_spin_lock_slowpath (111,465,394 samples, 0.14%)</title><rect x="96.7062%" y="1669" width="0.1387%" height="15" fill="rgb(252,87,22)" fg:x="77739443514" fg:w="111465394"/><text x="96.9562%" y="1679.50"></text></g><g><title>_raw_spin_lock_irqsave (118,485,863 samples, 0.15%)</title><rect x="96.7025%" y="1701" width="0.1474%" height="15" fill="rgb(210,51,29)" fg:x="77736490718" fg:w="118485863"/><text x="96.9525%" y="1711.50"></text></g><g><title>__folio_end_writeback (165,444,682 samples, 0.21%)</title><rect x="96.6719%" y="1717" width="0.2058%" height="15" fill="rgb(242,136,47)" fg:x="77711848829" fg:w="165444682"/><text x="96.9219%" y="1727.50"></text></g><g><title>__mod_memcg_lruvec_state (13,558,696 samples, 0.02%)</title><rect x="96.8951%" y="1653" width="0.0169%" height="15" fill="rgb(238,68,4)" fg:x="77891314302" fg:w="13558696"/><text x="97.1451%" y="1663.50"></text></g><g><title>__mod_lruvec_state (16,026,327 samples, 0.02%)</title><rect x="96.8946%" y="1669" width="0.0199%" height="15" fill="rgb(242,161,30)" fg:x="77890890219" fg:w="16026327"/><text x="97.1446%" y="1679.50"></text></g><g><title>lru_move_tail_fn (23,590,631 samples, 0.03%)</title><rect x="96.8892%" y="1685" width="0.0293%" height="15" fill="rgb(218,58,44)" fg:x="77886499641" fg:w="23590631"/><text x="97.1392%" y="1695.50"></text></g><g><title>folio_batch_move_lru (29,707,278 samples, 0.04%)</title><rect x="96.8831%" y="1701" width="0.0370%" height="15" fill="rgb(252,125,32)" fg:x="77881620108" fg:w="29707278"/><text x="97.1331%" y="1711.50"></text></g><g><title>ext4_end_bio (226,994,871 samples, 0.28%)</title><rect x="96.6440%" y="1765" width="0.2824%" height="15" fill="rgb(219,178,0)" fg:x="77689397664" fg:w="226994871"/><text x="96.8940%" y="1775.50"></text></g><g><title>ext4_finish_bio (226,994,871 samples, 0.28%)</title><rect x="96.6440%" y="1749" width="0.2824%" height="15" fill="rgb(213,152,7)" fg:x="77689397664" fg:w="226994871"/><text x="96.8940%" y="1759.50"></text></g><g><title>folio_end_writeback (206,585,154 samples, 0.26%)</title><rect x="96.6694%" y="1733" width="0.2570%" height="15" fill="rgb(249,109,34)" fg:x="77709807381" fg:w="206585154"/><text x="96.9194%" y="1743.50"></text></g><g><title>folio_rotate_reclaimable (38,654,042 samples, 0.05%)</title><rect x="96.8783%" y="1717" width="0.0481%" height="15" fill="rgb(232,96,21)" fg:x="77877738493" fg:w="38654042"/><text x="97.1283%" y="1727.50"></text></g><g><title>blk_done_softirq (230,368,955 samples, 0.29%)</title><rect x="96.6417%" y="1877" width="0.2866%" height="15" fill="rgb(228,27,39)" fg:x="77687593988" fg:w="230368955"/><text x="96.8917%" y="1887.50"></text></g><g><title>scsi_complete (230,368,955 samples, 0.29%)</title><rect x="96.6417%" y="1861" width="0.2866%" height="15" fill="rgb(211,182,52)" fg:x="77687593988" fg:w="230368955"/><text x="96.8917%" y="1871.50"></text></g><g><title>scsi_finish_command (230,368,955 samples, 0.29%)</title><rect x="96.6417%" y="1845" width="0.2866%" height="15" fill="rgb(234,178,38)" fg:x="77687593988" fg:w="230368955"/><text x="96.8917%" y="1855.50"></text></g><g><title>scsi_io_completion (230,368,955 samples, 0.29%)</title><rect x="96.6417%" y="1829" width="0.2866%" height="15" fill="rgb(221,111,3)" fg:x="77687593988" fg:w="230368955"/><text x="96.8917%" y="1839.50"></text></g><g><title>scsi_end_request (230,368,955 samples, 0.29%)</title><rect x="96.6417%" y="1813" width="0.2866%" height="15" fill="rgb(228,175,21)" fg:x="77687593988" fg:w="230368955"/><text x="96.8917%" y="1823.50"></text></g><g><title>blk_update_request (229,340,410 samples, 0.29%)</title><rect x="96.6430%" y="1797" width="0.2853%" height="15" fill="rgb(228,174,43)" fg:x="77688622533" fg:w="229340410"/><text x="96.8930%" y="1807.50"></text></g><g><title>bio_endio (229,340,410 samples, 0.29%)</title><rect x="96.6430%" y="1781" width="0.2853%" height="15" fill="rgb(211,191,0)" fg:x="77688622533" fg:w="229340410"/><text x="96.8930%" y="1791.50"></text></g><g><title>irq_exit_rcu (236,021,713 samples, 0.29%)</title><rect x="96.6417%" y="1925" width="0.2936%" height="15" fill="rgb(253,117,3)" fg:x="77687593988" fg:w="236021713"/><text x="96.8917%" y="1935.50"></text></g><g><title>__irq_exit_rcu (236,021,713 samples, 0.29%)</title><rect x="96.6417%" y="1909" width="0.2936%" height="15" fill="rgb(241,127,19)" fg:x="77687593988" fg:w="236021713"/><text x="96.8917%" y="1919.50"></text></g><g><title>__kprobes_text_end (236,021,713 samples, 0.29%)</title><rect x="96.6417%" y="1893" width="0.2936%" height="15" fill="rgb(218,103,12)" fg:x="77687593988" fg:w="236021713"/><text x="96.8917%" y="1903.50"></text></g><g><title>ct_irq_enter (18,631,481 samples, 0.02%)</title><rect x="97.7558%" y="1909" width="0.0232%" height="15" fill="rgb(236,214,43)" fg:x="78583179391" fg:w="18631481"/><text x="98.0058%" y="1919.50"></text></g><g><title>ct_nmi_enter (15,971,857 samples, 0.02%)</title><rect x="97.7591%" y="1893" width="0.0199%" height="15" fill="rgb(244,144,19)" fg:x="78585839015" fg:w="15971857"/><text x="98.0091%" y="1903.50"></text></g><g><title>irqentry_enter (689,261,392 samples, 0.86%)</title><rect x="96.9353%" y="1925" width="0.8574%" height="15" fill="rgb(246,188,10)" fg:x="77923615701" fg:w="689261392"/><text x="97.1853%" y="1935.50"></text></g><g><title>ct_nmi_enter (11,066,221 samples, 0.01%)</title><rect x="97.7790%" y="1909" width="0.0138%" height="15" fill="rgb(212,193,33)" fg:x="78601810872" fg:w="11066221"/><text x="98.0290%" y="1919.50"></text></g><g><title>asm_sysvec_call_function_single (1,138,240,312 samples, 1.42%)</title><rect x="96.3785%" y="1957" width="1.4159%" height="15" fill="rgb(241,51,29)" fg:x="77475974980" fg:w="1138240312"/><text x="96.6285%" y="1967.50"></text></g><g><title>sysvec_call_function_single (1,107,363,221 samples, 1.38%)</title><rect x="96.4169%" y="1941" width="1.3775%" height="15" fill="rgb(211,58,19)" fg:x="77506852071" fg:w="1107363221"/><text x="96.6669%" y="1951.50"></text></g><g><title>ct_idle_exit (36,401,549 samples, 0.05%)</title><rect x="97.7988%" y="1957" width="0.0453%" height="15" fill="rgb(229,111,26)" fg:x="78617753694" fg:w="36401549"/><text x="98.0488%" y="1967.50"></text></g><g><title>ct_kernel_enter (35,856,228 samples, 0.04%)</title><rect x="97.7995%" y="1941" width="0.0446%" height="15" fill="rgb(213,115,40)" fg:x="78618299015" fg:w="35856228"/><text x="98.0495%" y="1951.50"></text></g><g><title>ct_kernel_enter_state (34,291,646 samples, 0.04%)</title><rect x="97.8014%" y="1925" width="0.0427%" height="15" fill="rgb(209,56,44)" fg:x="78619863597" fg:w="34291646"/><text x="98.0514%" y="1935.50"></text></g><g><title>poll_idle (12,346,729 samples, 0.02%)</title><rect x="97.8538%" y="1957" width="0.0154%" height="15" fill="rgb(230,108,32)" fg:x="78661917922" fg:w="12346729"/><text x="98.1038%" y="1967.50"></text></g><g><title>cpuidle_enter_state (2,551,946,866 samples, 3.17%)</title><rect x="94.7035%" y="1973" width="3.1746%" height="15" fill="rgb(216,165,31)" fg:x="76129481549" fg:w="2551946866"/><text x="94.9535%" y="1983.50">cpu..</text></g><g><title>error_entry (315,799,733 samples, 0.39%)</title><rect x="97.8780%" y="1973" width="0.3928%" height="15" fill="rgb(218,122,21)" fg:x="78681428415" fg:w="315799733"/><text x="98.1280%" y="1983.50"></text></g><g><title>irq_entries_start (42,647,194 samples, 0.05%)</title><rect x="98.2711%" y="1973" width="0.0531%" height="15" fill="rgb(223,224,47)" fg:x="78997428570" fg:w="42647194"/><text x="98.5211%" y="1983.50"></text></g><g><title>sysvec_apic_timer_interrupt (15,746,142 samples, 0.02%)</title><rect x="98.3306%" y="1973" width="0.0196%" height="15" fill="rgb(238,102,44)" fg:x="79045245669" fg:w="15746142"/><text x="98.5806%" y="1983.50"></text></g><g><title>sysvec_call_function_single (78,732,203 samples, 0.10%)</title><rect x="98.3502%" y="1973" width="0.0979%" height="15" fill="rgb(236,46,40)" fg:x="79060991811" fg:w="78732203"/><text x="98.6002%" y="1983.50"></text></g><g><title>cpuidle_enter (3,790,129,141 samples, 4.71%)</title><rect x="93.7377%" y="1989" width="4.7148%" height="15" fill="rgb(247,202,50)" fg:x="75353137997" fg:w="3790129141"/><text x="93.9877%" y="1999.50">cpuid..</text></g><g><title>nr_iowait_cpu (10,891,620 samples, 0.01%)</title><rect x="98.4969%" y="1957" width="0.0135%" height="15" fill="rgb(209,99,20)" fg:x="79178892509" fg:w="10891620"/><text x="98.7469%" y="1967.50"></text></g><g><title>lock_acquire (15,881,085 samples, 0.02%)</title><rect x="98.5213%" y="1925" width="0.0198%" height="15" fill="rgb(252,27,34)" fg:x="79198536090" fg:w="15881085"/><text x="98.7713%" y="1935.50"></text></g><g><title>tick_nohz_get_sleep_length (28,717,015 samples, 0.04%)</title><rect x="98.5104%" y="1957" width="0.0357%" height="15" fill="rgb(215,206,23)" fg:x="79189784129" fg:w="28717015"/><text x="98.7604%" y="1967.50"></text></g><g><title>tick_nohz_next_event (24,408,813 samples, 0.03%)</title><rect x="98.5158%" y="1941" width="0.0304%" height="15" fill="rgb(212,135,36)" fg:x="79194092331" fg:w="24408813"/><text x="98.7658%" y="1951.50"></text></g><g><title>menu_select (73,657,192 samples, 0.09%)</title><rect x="98.4555%" y="1973" width="0.0916%" height="15" fill="rgb(240,189,1)" fg:x="79145643628" fg:w="73657192"/><text x="98.7055%" y="1983.50"></text></g><g><title>cpuidle_select (74,255,106 samples, 0.09%)</title><rect x="98.4555%" y="1989" width="0.0924%" height="15" fill="rgb(242,56,20)" fg:x="79145643628" fg:w="74255106"/><text x="98.7055%" y="1999.50"></text></g><g><title>llist_reverse_order (17,063,765 samples, 0.02%)</title><rect x="98.6111%" y="1957" width="0.0212%" height="15" fill="rgb(247,132,33)" fg:x="79270737869" fg:w="17063765"/><text x="98.8611%" y="1967.50"></text></g><g><title>do_raw_spin_lock (11,347,964 samples, 0.01%)</title><rect x="98.6658%" y="1909" width="0.0141%" height="15" fill="rgb(208,149,11)" fg:x="79314663345" fg:w="11347964"/><text x="98.9158%" y="1919.50"></text></g><g><title>__lock_acquire (35,236,325 samples, 0.04%)</title><rect x="98.7045%" y="1893" width="0.0438%" height="15" fill="rgb(211,33,11)" fg:x="79345815182" fg:w="35236325"/><text x="98.9545%" y="1903.50"></text></g><g><title>_raw_spin_lock_nested (82,006,687 samples, 0.10%)</title><rect x="98.6623%" y="1925" width="0.1020%" height="15" fill="rgb(221,29,38)" fg:x="79311855422" fg:w="82006687"/><text x="98.9123%" y="1935.50"></text></g><g><title>lock_acquire (67,850,800 samples, 0.08%)</title><rect x="98.6799%" y="1909" width="0.0844%" height="15" fill="rgb(206,182,49)" fg:x="79326011309" fg:w="67850800"/><text x="98.9299%" y="1919.50"></text></g><g><title>trace_lock_acquire (12,810,602 samples, 0.02%)</title><rect x="98.7483%" y="1893" width="0.0159%" height="15" fill="rgb(216,140,1)" fg:x="79381051507" fg:w="12810602"/><text x="98.9983%" y="1903.50"></text></g><g><title>sched_clock (55,009,664 samples, 0.07%)</title><rect x="98.8014%" y="1909" width="0.0684%" height="15" fill="rgb(232,57,40)" fg:x="79423733631" fg:w="55009664"/><text x="99.0514%" y="1919.50"></text></g><g><title>sched_clock_noinstr (53,111,762 samples, 0.07%)</title><rect x="98.8038%" y="1893" width="0.0661%" height="15" fill="rgb(224,186,18)" fg:x="79425631533" fg:w="53111762"/><text x="99.0538%" y="1903.50"></text></g><g><title>native_sched_clock (53,111,762 samples, 0.07%)</title><rect x="98.8038%" y="1877" width="0.0661%" height="15" fill="rgb(215,121,11)" fg:x="79425631533" fg:w="53111762"/><text x="99.0538%" y="1887.50"></text></g><g><title>lock_pin_lock (87,373,620 samples, 0.11%)</title><rect x="98.7649%" y="1925" width="0.1087%" height="15" fill="rgb(245,147,10)" fg:x="79394391216" fg:w="87373620"/><text x="99.0149%" y="1935.50"></text></g><g><title>rq_lock_irqsave (179,675,672 samples, 0.22%)</title><rect x="98.6529%" y="1941" width="0.2235%" height="15" fill="rgb(238,153,13)" fg:x="79304333188" fg:w="179675672"/><text x="98.9029%" y="1951.50"></text></g><g><title>ttwu_do_activate (9,537,303 samples, 0.01%)</title><rect x="98.8764%" y="1941" width="0.0119%" height="15" fill="rgb(233,108,0)" fg:x="79484008860" fg:w="9537303"/><text x="99.1264%" y="1951.50"></text></g><g><title>sched_ttwu_pending (208,226,463 samples, 0.26%)</title><rect x="98.6329%" y="1957" width="0.2590%" height="15" fill="rgb(212,157,17)" fg:x="79288258863" fg:w="208226463"/><text x="98.8829%" y="1967.50"></text></g><g><title>__flush_smp_call_function_queue (229,372,992 samples, 0.29%)</title><rect x="98.6075%" y="1973" width="0.2853%" height="15" fill="rgb(225,213,38)" fg:x="79267840218" fg:w="229372992"/><text x="98.8575%" y="1983.50"></text></g><g><title>do_raw_spin_lock (37,646,224 samples, 0.05%)</title><rect x="98.9220%" y="1749" width="0.0468%" height="15" fill="rgb(248,16,11)" fg:x="79520641550" fg:w="37646224"/><text x="99.1720%" y="1759.50"></text></g><g><title>native_queued_spin_lock_slowpath (36,996,271 samples, 0.05%)</title><rect x="98.9228%" y="1733" width="0.0460%" height="15" fill="rgb(241,33,4)" fg:x="79521291503" fg:w="36996271"/><text x="99.1728%" y="1743.50"></text></g><g><title>_raw_spin_lock_irqsave (39,149,330 samples, 0.05%)</title><rect x="98.9220%" y="1765" width="0.0487%" height="15" fill="rgb(222,26,43)" fg:x="79520641550" fg:w="39149330"/><text x="99.1720%" y="1775.50"></text></g><g><title>__folio_end_writeback (57,204,270 samples, 0.07%)</title><rect x="98.9059%" y="1781" width="0.0712%" height="15" fill="rgb(243,29,36)" fg:x="79507731206" fg:w="57204270"/><text x="99.1559%" y="1791.50"></text></g><g><title>__mod_lruvec_state (9,374,051 samples, 0.01%)</title><rect x="98.9812%" y="1733" width="0.0117%" height="15" fill="rgb(241,9,27)" fg:x="79568227363" fg:w="9374051"/><text x="99.2312%" y="1743.50"></text></g><g><title>__mod_memcg_lruvec_state (9,374,051 samples, 0.01%)</title><rect x="98.9812%" y="1717" width="0.0117%" height="15" fill="rgb(205,117,26)" fg:x="79568227363" fg:w="9374051"/><text x="99.2312%" y="1727.50"></text></g><g><title>lru_move_tail_fn (12,327,235 samples, 0.02%)</title><rect x="98.9806%" y="1749" width="0.0153%" height="15" fill="rgb(209,80,39)" fg:x="79567746572" fg:w="12327235"/><text x="99.2306%" y="1759.50"></text></g><g><title>folio_batch_move_lru (13,707,616 samples, 0.02%)</title><rect x="98.9795%" y="1765" width="0.0171%" height="15" fill="rgb(239,155,6)" fg:x="79566857561" fg:w="13707616"/><text x="99.2295%" y="1775.50"></text></g><g><title>blk_done_softirq (87,060,810 samples, 0.11%)</title><rect x="98.8928%" y="1941" width="0.1083%" height="15" fill="rgb(212,104,12)" fg:x="79497213210" fg:w="87060810"/><text x="99.1428%" y="1951.50"></text></g><g><title>scsi_complete (87,060,810 samples, 0.11%)</title><rect x="98.8928%" y="1925" width="0.1083%" height="15" fill="rgb(234,204,3)" fg:x="79497213210" fg:w="87060810"/><text x="99.1428%" y="1935.50"></text></g><g><title>scsi_finish_command (86,566,583 samples, 0.11%)</title><rect x="98.8935%" y="1909" width="0.1077%" height="15" fill="rgb(251,218,7)" fg:x="79497707437" fg:w="86566583"/><text x="99.1435%" y="1919.50"></text></g><g><title>scsi_io_completion (86,566,583 samples, 0.11%)</title><rect x="98.8935%" y="1893" width="0.1077%" height="15" fill="rgb(221,81,32)" fg:x="79497707437" fg:w="86566583"/><text x="99.1435%" y="1903.50"></text></g><g><title>scsi_end_request (86,566,583 samples, 0.11%)</title><rect x="98.8935%" y="1877" width="0.1077%" height="15" fill="rgb(214,152,26)" fg:x="79497707437" fg:w="86566583"/><text x="99.1435%" y="1887.50"></text></g><g><title>blk_update_request (85,582,947 samples, 0.11%)</title><rect x="98.8947%" y="1861" width="0.1065%" height="15" fill="rgb(223,22,3)" fg:x="79498691073" fg:w="85582947"/><text x="99.1447%" y="1871.50"></text></g><g><title>bio_endio (85,582,947 samples, 0.11%)</title><rect x="98.8947%" y="1845" width="0.1065%" height="15" fill="rgb(207,174,7)" fg:x="79498691073" fg:w="85582947"/><text x="99.1447%" y="1855.50"></text></g><g><title>ext4_end_bio (85,582,947 samples, 0.11%)</title><rect x="98.8947%" y="1829" width="0.1065%" height="15" fill="rgb(224,19,52)" fg:x="79498691073" fg:w="85582947"/><text x="99.1447%" y="1839.50"></text></g><g><title>ext4_finish_bio (85,163,428 samples, 0.11%)</title><rect x="98.8952%" y="1813" width="0.1059%" height="15" fill="rgb(228,24,14)" fg:x="79499110592" fg:w="85163428"/><text x="99.1452%" y="1823.50"></text></g><g><title>folio_end_writeback (76,982,248 samples, 0.10%)</title><rect x="98.9054%" y="1797" width="0.0958%" height="15" fill="rgb(230,153,43)" fg:x="79507291772" fg:w="76982248"/><text x="99.1554%" y="1807.50"></text></g><g><title>folio_rotate_reclaimable (18,923,304 samples, 0.02%)</title><rect x="98.9776%" y="1781" width="0.0235%" height="15" fill="rgb(231,106,12)" fg:x="79565350716" fg:w="18923304"/><text x="99.2276%" y="1791.50"></text></g><g><title>do_softirq (88,177,541 samples, 0.11%)</title><rect x="98.8928%" y="1973" width="0.1097%" height="15" fill="rgb(215,92,2)" fg:x="79497213210" fg:w="88177541"/><text x="99.1428%" y="1983.50"></text></g><g><title>__kprobes_text_end (88,177,541 samples, 0.11%)</title><rect x="98.8928%" y="1957" width="0.1097%" height="15" fill="rgb(249,143,25)" fg:x="79497213210" fg:w="88177541"/><text x="99.1428%" y="1967.50"></text></g><g><title>flush_smp_call_function_queue (366,566,068 samples, 0.46%)</title><rect x="98.5487%" y="1989" width="0.4560%" height="15" fill="rgb(252,7,35)" fg:x="79220528770" fg:w="366566068"/><text x="98.7987%" y="1999.50"></text></g><g><title>__sched_text_start (20,504,383 samples, 0.03%)</title><rect x="99.0077%" y="1973" width="0.0255%" height="15" fill="rgb(216,69,40)" fg:x="79589539344" fg:w="20504383"/><text x="99.2577%" y="1983.50"></text></g><g><title>schedule_idle (21,384,787 samples, 0.03%)</title><rect x="99.0068%" y="1989" width="0.0266%" height="15" fill="rgb(240,36,33)" fg:x="79588788352" fg:w="21384787"/><text x="99.2568%" y="1999.50"></text></g><g><title>lock_acquire (34,899,244 samples, 0.04%)</title><rect x="99.0541%" y="1957" width="0.0434%" height="15" fill="rgb(231,128,14)" fg:x="79626822822" fg:w="34899244"/><text x="99.3041%" y="1967.50"></text></g><g><title>__lock_acquire (30,078,390 samples, 0.04%)</title><rect x="99.0601%" y="1941" width="0.0374%" height="15" fill="rgb(245,143,14)" fg:x="79631643676" fg:w="30078390"/><text x="99.3101%" y="1951.50"></text></g><g><title>lock_release (78,110,340 samples, 0.10%)</title><rect x="99.0975%" y="1957" width="0.0972%" height="15" fill="rgb(222,130,28)" fg:x="79661722066" fg:w="78110340"/><text x="99.3475%" y="1967.50"></text></g><g><title>ktime_get (129,866,487 samples, 0.16%)</title><rect x="99.0479%" y="1973" width="0.1616%" height="15" fill="rgb(212,10,48)" fg:x="79621894554" fg:w="129866487"/><text x="99.2979%" y="1983.50"></text></g><g><title>read_tsc (11,928,635 samples, 0.01%)</title><rect x="99.1947%" y="1957" width="0.0148%" height="15" fill="rgb(254,118,45)" fg:x="79739832406" fg:w="11928635"/><text x="99.4447%" y="1967.50"></text></g><g><title>hrtimer_try_to_cancel (14,727,272 samples, 0.02%)</title><rect x="99.2249%" y="1941" width="0.0183%" height="15" fill="rgb(228,6,45)" fg:x="79764117074" fg:w="14727272"/><text x="99.4749%" y="1951.50"></text></g><g><title>hrtimer_cancel (15,725,671 samples, 0.02%)</title><rect x="99.2249%" y="1957" width="0.0196%" height="15" fill="rgb(241,18,35)" fg:x="79764117074" fg:w="15725671"/><text x="99.4749%" y="1967.50"></text></g><g><title>tick_nohz_restart_sched_tick (27,321,609 samples, 0.03%)</title><rect x="99.2214%" y="1973" width="0.0340%" height="15" fill="rgb(227,214,53)" fg:x="79761366274" fg:w="27321609"/><text x="99.4714%" y="1983.50"></text></g><g><title>__lock_acquire (13,242,375 samples, 0.02%)</title><rect x="99.2904%" y="1941" width="0.0165%" height="15" fill="rgb(224,107,51)" fg:x="79816757942" fg:w="13242375"/><text x="99.5404%" y="1951.50"></text></g><g><title>lock_acquire (32,648,707 samples, 0.04%)</title><rect x="99.2738%" y="1957" width="0.0406%" height="15" fill="rgb(248,60,28)" fg:x="79803435015" fg:w="32648707"/><text x="99.5238%" y="1967.50"></text></g><g><title>lock_release (10,727,931 samples, 0.01%)</title><rect x="99.3144%" y="1957" width="0.0133%" height="15" fill="rgb(249,101,23)" fg:x="79836083722" fg:w="10727931"/><text x="99.5644%" y="1967.50"></text></g><g><title>nr_iowait_cpu (28,715,653 samples, 0.04%)</title><rect x="99.3287%" y="1957" width="0.0357%" height="15" fill="rgb(228,51,19)" fg:x="79847604373" fg:w="28715653"/><text x="99.5787%" y="1967.50"></text></g><g><title>tick_nohz_stop_idle (89,154,687 samples, 0.11%)</title><rect x="99.2554%" y="1973" width="0.1109%" height="15" fill="rgb(213,20,6)" fg:x="79788687883" fg:w="89154687"/><text x="99.5054%" y="1983.50"></text></g><g><title>tick_nohz_idle_exit (264,237,990 samples, 0.33%)</title><rect x="99.0395%" y="1989" width="0.3287%" height="15" fill="rgb(212,124,10)" fg:x="79615117174" fg:w="264237990"/><text x="99.2895%" y="1999.50"></text></g><g><title>tick_nohz_idle_stop_tick (8,602,360 samples, 0.01%)</title><rect x="99.3682%" y="1989" width="0.0107%" height="15" fill="rgb(248,3,40)" fg:x="79879355164" fg:w="8602360"/><text x="99.6182%" y="1999.50"></text></g><g><title>do_idle (4,548,151,635 samples, 5.66%)</title><rect x="93.7245%" y="2005" width="5.6578%" height="15" fill="rgb(223,178,23)" fg:x="75342540212" fg:w="4548151635"/><text x="93.9745%" y="2015.50">do_idle</text></g><g><title>cpu_startup_entry (4,553,277,620 samples, 5.66%)</title><rect x="93.7237%" y="2021" width="5.6642%" height="15" fill="rgb(240,132,45)" fg:x="75341915301" fg:w="4553277620"/><text x="93.9737%" y="2031.50">cpu_sta..</text></g><g><title>[vmlinux] (4,553,631,721 samples, 5.66%)</title><rect x="93.7237%" y="2037" width="5.6646%" height="15" fill="rgb(245,164,36)" fg:x="75341915301" fg:w="4553631721"/><text x="93.9737%" y="2047.50">[vmlinu..</text></g><g><title>asm_sysvec_call_function_single (12,217,663 samples, 0.02%)</title><rect x="99.3944%" y="1909" width="0.0152%" height="15" fill="rgb(231,188,53)" fg:x="79900402258" fg:w="12217663"/><text x="99.6444%" y="1919.50"></text></g><g><title>lock_acquire (9,682,087 samples, 0.01%)</title><rect x="99.4212%" y="1813" width="0.0120%" height="15" fill="rgb(237,198,39)" fg:x="79921948214" fg:w="9682087"/><text x="99.6712%" y="1823.50"></text></g><g><title>ktime_get (16,165,761 samples, 0.02%)</title><rect x="99.4196%" y="1829" width="0.0201%" height="15" fill="rgb(223,120,35)" fg:x="79920681989" fg:w="16165761"/><text x="99.6696%" y="1839.50"></text></g><g><title>tick_check_oneshot_broadcast_this_cpu (13,103,804 samples, 0.02%)</title><rect x="99.4420%" y="1829" width="0.0163%" height="15" fill="rgb(253,107,49)" fg:x="79938651651" fg:w="13103804"/><text x="99.6920%" y="1839.50"></text></g><g><title>lock_acquire (8,104,222 samples, 0.01%)</title><rect x="99.4623%" y="1813" width="0.0101%" height="15" fill="rgb(216,44,31)" fg:x="79954957541" fg:w="8104222"/><text x="99.7123%" y="1823.50"></text></g><g><title>irq_enter_rcu (48,566,670 samples, 0.06%)</title><rect x="99.4157%" y="1861" width="0.0604%" height="15" fill="rgb(253,87,21)" fg:x="79917511158" fg:w="48566670"/><text x="99.6657%" y="1871.50"></text></g><g><title>tick_irq_enter (46,859,898 samples, 0.06%)</title><rect x="99.4178%" y="1845" width="0.0583%" height="15" fill="rgb(226,18,2)" fg:x="79919217930" fg:w="46859898"/><text x="99.6678%" y="1855.50"></text></g><g><title>tick_nohz_stop_idle (14,322,373 samples, 0.02%)</title><rect x="99.4583%" y="1829" width="0.0178%" height="15" fill="rgb(216,8,46)" fg:x="79951755455" fg:w="14322373"/><text x="99.7083%" y="1839.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (52,472,293 samples, 0.07%)</title><rect x="99.4122%" y="1893" width="0.0653%" height="15" fill="rgb(226,140,39)" fg:x="79914685696" fg:w="52472293"/><text x="99.6622%" y="1903.50"></text></g><g><title>sysvec_apic_timer_interrupt (52,472,293 samples, 0.07%)</title><rect x="99.4122%" y="1877" width="0.0653%" height="15" fill="rgb(221,194,54)" fg:x="79914685696" fg:w="52472293"/><text x="99.6622%" y="1887.50"></text></g><g><title>ct_irq_enter (12,654,780 samples, 0.02%)</title><rect x="99.4822%" y="1861" width="0.0157%" height="15" fill="rgb(213,92,11)" fg:x="79971006890" fg:w="12654780"/><text x="99.7322%" y="1871.50"></text></g><g><title>__lock_acquire (8,377,531 samples, 0.01%)</title><rect x="99.5153%" y="1797" width="0.0104%" height="15" fill="rgb(229,162,46)" fg:x="79997615786" fg:w="8377531"/><text x="99.7653%" y="1807.50"></text></g><g><title>lock_acquire (15,685,241 samples, 0.02%)</title><rect x="99.5083%" y="1813" width="0.0195%" height="15" fill="rgb(214,111,36)" fg:x="79991937616" fg:w="15685241"/><text x="99.7583%" y="1823.50"></text></g><g><title>ktime_get (27,092,692 samples, 0.03%)</title><rect x="99.5050%" y="1829" width="0.0337%" height="15" fill="rgb(207,6,21)" fg:x="79989306235" fg:w="27092692"/><text x="99.7550%" y="1839.50"></text></g><g><title>irq_enter_rcu (46,123,555 samples, 0.06%)</title><rect x="99.4980%" y="1861" width="0.0574%" height="15" fill="rgb(213,127,38)" fg:x="79983661670" fg:w="46123555"/><text x="99.7480%" y="1871.50"></text></g><g><title>tick_irq_enter (42,619,805 samples, 0.05%)</title><rect x="99.5023%" y="1845" width="0.0530%" height="15" fill="rgb(238,118,32)" fg:x="79987165420" fg:w="42619805"/><text x="99.7523%" y="1855.50"></text></g><g><title>__folio_end_writeback (11,026,267 samples, 0.01%)</title><rect x="99.5667%" y="1653" width="0.0137%" height="15" fill="rgb(240,139,39)" fg:x="80038907846" fg:w="11026267"/><text x="99.8167%" y="1663.50"></text></g><g><title>folio_batch_move_lru (8,263,367 samples, 0.01%)</title><rect x="99.5817%" y="1637" width="0.0103%" height="15" fill="rgb(235,10,37)" fg:x="80050937212" fg:w="8263367"/><text x="99.8317%" y="1647.50"></text></g><g><title>folio_rotate_reclaimable (9,685,291 samples, 0.01%)</title><rect x="99.5804%" y="1653" width="0.0120%" height="15" fill="rgb(249,171,38)" fg:x="80049934113" fg:w="9685291"/><text x="99.8304%" y="1663.50"></text></g><g><title>ext4_end_bio (28,844,652 samples, 0.04%)</title><rect x="99.5572%" y="1701" width="0.0359%" height="15" fill="rgb(242,144,32)" fg:x="80031269528" fg:w="28844652"/><text x="99.8072%" y="1711.50"></text></g><g><title>ext4_finish_bio (28,844,652 samples, 0.04%)</title><rect x="99.5572%" y="1685" width="0.0359%" height="15" fill="rgb(217,117,21)" fg:x="80031269528" fg:w="28844652"/><text x="99.8072%" y="1695.50"></text></g><g><title>folio_end_writeback (21,642,973 samples, 0.03%)</title><rect x="99.5662%" y="1669" width="0.0269%" height="15" fill="rgb(249,87,1)" fg:x="80038471207" fg:w="21642973"/><text x="99.8162%" y="1679.50"></text></g><g><title>blk_done_softirq (30,965,107 samples, 0.04%)</title><rect x="99.5554%" y="1813" width="0.0385%" height="15" fill="rgb(248,196,48)" fg:x="80029785225" fg:w="30965107"/><text x="99.8054%" y="1823.50"></text></g><g><title>scsi_complete (30,965,107 samples, 0.04%)</title><rect x="99.5554%" y="1797" width="0.0385%" height="15" fill="rgb(251,206,33)" fg:x="80029785225" fg:w="30965107"/><text x="99.8054%" y="1807.50"></text></g><g><title>scsi_finish_command (30,965,107 samples, 0.04%)</title><rect x="99.5554%" y="1781" width="0.0385%" height="15" fill="rgb(232,141,28)" fg:x="80029785225" fg:w="30965107"/><text x="99.8054%" y="1791.50"></text></g><g><title>scsi_io_completion (30,965,107 samples, 0.04%)</title><rect x="99.5554%" y="1765" width="0.0385%" height="15" fill="rgb(209,167,14)" fg:x="80029785225" fg:w="30965107"/><text x="99.8054%" y="1775.50"></text></g><g><title>scsi_end_request (30,965,107 samples, 0.04%)</title><rect x="99.5554%" y="1749" width="0.0385%" height="15" fill="rgb(225,11,50)" fg:x="80029785225" fg:w="30965107"/><text x="99.8054%" y="1759.50"></text></g><g><title>blk_update_request (29,480,804 samples, 0.04%)</title><rect x="99.5572%" y="1733" width="0.0367%" height="15" fill="rgb(209,50,20)" fg:x="80031269528" fg:w="29480804"/><text x="99.8072%" y="1743.50"></text></g><g><title>bio_endio (29,480,804 samples, 0.04%)</title><rect x="99.5572%" y="1717" width="0.0367%" height="15" fill="rgb(212,17,46)" fg:x="80031269528" fg:w="29480804"/><text x="99.8072%" y="1727.50"></text></g><g><title>__kprobes_text_end (33,763,796 samples, 0.04%)</title><rect x="99.5554%" y="1829" width="0.0420%" height="15" fill="rgb(216,101,39)" fg:x="80029785225" fg:w="33763796"/><text x="99.8054%" y="1839.50"></text></g><g><title>irq_exit_rcu (33,904,885 samples, 0.04%)</title><rect x="99.5554%" y="1861" width="0.0422%" height="15" fill="rgb(212,228,48)" fg:x="80029785225" fg:w="33904885"/><text x="99.8054%" y="1871.50"></text></g><g><title>__irq_exit_rcu (33,904,885 samples, 0.04%)</title><rect x="99.5554%" y="1845" width="0.0422%" height="15" fill="rgb(250,6,50)" fg:x="80029785225" fg:w="33904885"/><text x="99.8054%" y="1855.50"></text></g><g><title>irqentry_enter (181,200,840 samples, 0.23%)</title><rect x="99.5975%" y="1861" width="0.2254%" height="15" fill="rgb(250,160,48)" fg:x="80063690110" fg:w="181200840"/><text x="99.8475%" y="1871.50"></text></g><g><title>asm_sysvec_call_function_single (277,781,522 samples, 0.35%)</title><rect x="99.4774%" y="1893" width="0.3456%" height="15" fill="rgb(244,216,33)" fg:x="79967157989" fg:w="277781522"/><text x="99.7274%" y="1903.50"></text></g><g><title>sysvec_call_function_single (275,537,611 samples, 0.34%)</title><rect x="99.4802%" y="1877" width="0.3428%" height="15" fill="rgb(207,157,5)" fg:x="79969401900" fg:w="275537611"/><text x="99.7302%" y="1887.50"></text></g><g><title>cpuidle_enter_state (333,664,946 samples, 0.42%)</title><rect x="99.4104%" y="1909" width="0.4151%" height="15" fill="rgb(228,199,8)" fg:x="79913242709" fg:w="333664946"/><text x="99.6604%" y="1919.50"></text></g><g><title>cpuidle_enter (360,113,202 samples, 0.45%)</title><rect x="99.3901%" y="1925" width="0.4480%" height="15" fill="rgb(227,80,20)" fg:x="79896955933" fg:w="360113202"/><text x="99.6401%" y="1935.50"></text></g><g><title>__folio_end_writeback (8,353,923 samples, 0.01%)</title><rect x="99.8623%" y="1717" width="0.0104%" height="15" fill="rgb(222,9,33)" fg:x="80276533279" fg:w="8353923"/><text x="100.1123%" y="1727.50"></text></g><g><title>blk_update_request (13,633,817 samples, 0.02%)</title><rect x="99.8601%" y="1797" width="0.0170%" height="15" fill="rgb(239,44,28)" fg:x="80274752505" fg:w="13633817"/><text x="100.1101%" y="1807.50"></text></g><g><title>bio_endio (13,633,817 samples, 0.02%)</title><rect x="99.8601%" y="1781" width="0.0170%" height="15" fill="rgb(249,187,43)" fg:x="80274752505" fg:w="13633817"/><text x="100.1101%" y="1791.50"></text></g><g><title>ext4_end_bio (13,633,817 samples, 0.02%)</title><rect x="99.8601%" y="1765" width="0.0170%" height="15" fill="rgb(216,141,28)" fg:x="80274752505" fg:w="13633817"/><text x="100.1101%" y="1775.50"></text></g><g><title>ext4_finish_bio (13,633,817 samples, 0.02%)</title><rect x="99.8601%" y="1749" width="0.0170%" height="15" fill="rgb(230,154,53)" fg:x="80274752505" fg:w="13633817"/><text x="100.1101%" y="1759.50"></text></g><g><title>folio_end_writeback (11,853,043 samples, 0.01%)</title><rect x="99.8623%" y="1733" width="0.0147%" height="15" fill="rgb(227,82,4)" fg:x="80276533279" fg:w="11853043"/><text x="100.1123%" y="1743.50"></text></g><g><title>flush_smp_call_function_queue (28,808,210 samples, 0.04%)</title><rect x="99.8421%" y="1925" width="0.0358%" height="15" fill="rgb(220,107,16)" fg:x="80260264322" fg:w="28808210"/><text x="100.0921%" y="1935.50"></text></g><g><title>do_softirq (14,962,297 samples, 0.02%)</title><rect x="99.8593%" y="1909" width="0.0186%" height="15" fill="rgb(207,187,2)" fg:x="80274110235" fg:w="14962297"/><text x="100.1093%" y="1919.50"></text></g><g><title>__kprobes_text_end (14,962,297 samples, 0.02%)</title><rect x="99.8593%" y="1893" width="0.0186%" height="15" fill="rgb(210,162,52)" fg:x="80274110235" fg:w="14962297"/><text x="100.1093%" y="1903.50"></text></g><g><title>blk_done_softirq (14,962,297 samples, 0.02%)</title><rect x="99.8593%" y="1877" width="0.0186%" height="15" fill="rgb(217,216,49)" fg:x="80274110235" fg:w="14962297"/><text x="100.1093%" y="1887.50"></text></g><g><title>scsi_complete (14,962,297 samples, 0.02%)</title><rect x="99.8593%" y="1861" width="0.0186%" height="15" fill="rgb(218,146,49)" fg:x="80274110235" fg:w="14962297"/><text x="100.1093%" y="1871.50"></text></g><g><title>scsi_finish_command (14,962,297 samples, 0.02%)</title><rect x="99.8593%" y="1845" width="0.0186%" height="15" fill="rgb(216,55,40)" fg:x="80274110235" fg:w="14962297"/><text x="100.1093%" y="1855.50"></text></g><g><title>scsi_io_completion (14,962,297 samples, 0.02%)</title><rect x="99.8593%" y="1829" width="0.0186%" height="15" fill="rgb(208,196,21)" fg:x="80274110235" fg:w="14962297"/><text x="100.1093%" y="1839.50"></text></g><g><title>scsi_end_request (14,962,297 samples, 0.02%)</title><rect x="99.8593%" y="1813" width="0.0186%" height="15" fill="rgb(242,117,42)" fg:x="80274110235" fg:w="14962297"/><text x="100.1093%" y="1823.50"></text></g><g><title>tick_nohz_idle_exit (38,105,843 samples, 0.05%)</title><rect x="99.8780%" y="1925" width="0.0474%" height="15" fill="rgb(210,11,23)" fg:x="80289142586" fg:w="38105843"/><text x="100.1280%" y="1935.50"></text></g><g><title>tick_nohz_stop_idle (19,889,591 samples, 0.02%)</title><rect x="99.9007%" y="1909" width="0.0247%" height="15" fill="rgb(217,110,2)" fg:x="80307358838" fg:w="19889591"/><text x="100.1507%" y="1919.50"></text></g><g><title>secondary_startup_64_no_verify (4,986,039,062 samples, 6.20%)</title><rect x="93.7237%" y="2053" width="6.2025%" height="15" fill="rgb(229,77,54)" fg:x="75341915301" fg:w="4986039062"/><text x="93.9737%" y="2063.50">secondar..</text></g><g><title>x86_64_start_kernel (432,407,341 samples, 0.54%)</title><rect x="99.3884%" y="2037" width="0.5379%" height="15" fill="rgb(218,53,16)" fg:x="79895547022" fg:w="432407341"/><text x="99.6384%" y="2047.50"></text></g><g><title>[[kernel.vmlinux].init.text] (432,407,341 samples, 0.54%)</title><rect x="99.3884%" y="2021" width="0.5379%" height="15" fill="rgb(215,38,13)" fg:x="79895547022" fg:w="432407341"/><text x="99.6384%" y="2031.50"></text></g><g><title>start_kernel (432,407,341 samples, 0.54%)</title><rect x="99.3884%" y="2005" width="0.5379%" height="15" fill="rgb(235,42,18)" fg:x="79895547022" fg:w="432407341"/><text x="99.6384%" y="2015.50"></text></g><g><title>[[kernel.vmlinux].init.text] (432,407,341 samples, 0.54%)</title><rect x="99.3884%" y="1989" width="0.5379%" height="15" fill="rgb(219,66,54)" fg:x="79895547022" fg:w="432407341"/><text x="99.6384%" y="1999.50"></text></g><g><title>[vmlinux] (432,407,341 samples, 0.54%)</title><rect x="99.3884%" y="1973" width="0.5379%" height="15" fill="rgb(222,205,4)" fg:x="79895547022" fg:w="432407341"/><text x="99.6384%" y="1983.50"></text></g><g><title>cpu_startup_entry (432,407,341 samples, 0.54%)</title><rect x="99.3884%" y="1957" width="0.5379%" height="15" fill="rgb(227,213,46)" fg:x="79895547022" fg:w="432407341"/><text x="99.6384%" y="1967.50"></text></g><g><title>do_idle (432,407,341 samples, 0.54%)</title><rect x="99.3884%" y="1941" width="0.5379%" height="15" fill="rgb(250,145,42)" fg:x="79895547022" fg:w="432407341"/><text x="99.6384%" y="1951.50"></text></g><g><title>swapper (5,000,956,196 samples, 6.22%)</title><rect x="93.7067%" y="2069" width="6.2211%" height="15" fill="rgb(219,15,2)" fg:x="75328216082" fg:w="5000956196"/><text x="93.9567%" y="2079.50">swapper</text></g><g><title>systemd-journal (8,145,629 samples, 0.01%)</title><rect x="99.9278%" y="2069" width="0.0101%" height="15" fill="rgb(231,181,52)" fg:x="80329172278" fg:w="8145629"/><text x="100.1778%" y="2079.50"></text></g><g><title>tmux:_server (16,875,948 samples, 0.02%)</title><rect x="99.9451%" y="2069" width="0.0210%" height="15" fill="rgb(235,1,42)" fg:x="80343060188" fg:w="16875948"/><text x="100.1951%" y="2079.50"></text></g><g><title>[cursor-51c8aff7cb5a89f4a0e462fbacab938bdbfaf140] (17,999,108 samples, 0.02%)</title><rect x="99.9661%" y="2053" width="0.0224%" height="15" fill="rgb(249,88,27)" fg:x="80359936136" fg:w="17999108"/><text x="100.2161%" y="2063.50"></text></g><g><title>tokio-runtime-w (25,080,789 samples, 0.03%)</title><rect x="99.9661%" y="2069" width="0.0312%" height="15" fill="rgb(235,145,16)" fg:x="80359936136" fg:w="25080789"/><text x="100.2161%" y="2079.50"></text></g><g><title>all (80,387,223,282 samples, 100%)</title><rect x="0.0000%" y="2085" width="100.0000%" height="15" fill="rgb(237,114,19)" fg:x="0" fg:w="80387223282"/><text x="0.2500%" y="2095.50"></text></g></svg></svg>