<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2134" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="2117.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="2117.00"> </text><svg id="frames" x="10" width="1180" total_samples="58135717739"><g><title>cat (10,664,487 samples, 0.02%)</title><rect x="0.0000%" y="2069" width="0.0183%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="10664487"/><text x="0.2500%" y="2079.50"></text></g><g><title>[unknown] (11,856,695 samples, 0.02%)</title><rect x="0.0209%" y="2053" width="0.0204%" height="15" fill="rgb(217,0,24)" fg:x="12144147" fg:w="11856695"/><text x="0.2709%" y="2063.50"></text></g><g><title>cpuUsage.sh (29,871,477 samples, 0.05%)</title><rect x="0.0188%" y="2069" width="0.0514%" height="15" fill="rgb(221,193,54)" fg:x="10903074" fg:w="29871477"/><text x="0.2688%" y="2079.50"></text></g><g><title>grep (9,719,488 samples, 0.02%)</title><rect x="0.0714%" y="2069" width="0.0167%" height="15" fill="rgb(248,212,6)" fg:x="41502672" fg:w="9719488"/><text x="0.3214%" y="2079.50"></text></g><g><title>proc_root_readdir (7,621,542 samples, 0.01%)</title><rect x="0.1212%" y="1941" width="0.0131%" height="15" fill="rgb(208,68,35)" fg:x="70478055" fg:w="7621542"/><text x="0.3712%" y="1951.50"></text></g><g><title>proc_pid_readdir (7,621,542 samples, 0.01%)</title><rect x="0.1212%" y="1925" width="0.0131%" height="15" fill="rgb(232,128,0)" fg:x="70478055" fg:w="7621542"/><text x="0.3712%" y="1935.50"></text></g><g><title>proc_task_readdir (14,862,738 samples, 0.03%)</title><rect x="0.1343%" y="1941" width="0.0256%" height="15" fill="rgb(207,160,47)" fg:x="78099597" fg:w="14862738"/><text x="0.3843%" y="1951.50"></text></g><g><title>__x64_sys_getdents64 (33,537,811 samples, 0.06%)</title><rect x="0.1122%" y="1989" width="0.0577%" height="15" fill="rgb(228,23,34)" fg:x="65209744" fg:w="33537811"/><text x="0.3622%" y="1999.50"></text></g><g><title>__se_sys_getdents64 (33,537,811 samples, 0.06%)</title><rect x="0.1122%" y="1973" width="0.0577%" height="15" fill="rgb(218,30,26)" fg:x="65209744" fg:w="33537811"/><text x="0.3622%" y="1983.50"></text></g><g><title>iterate_dir (30,503,273 samples, 0.05%)</title><rect x="0.1174%" y="1957" width="0.0525%" height="15" fill="rgb(220,122,19)" fg:x="68244282" fg:w="30503273"/><text x="0.3674%" y="1967.50"></text></g><g><title>entry_SYSCALL_64 (43,477,800 samples, 0.07%)</title><rect x="0.1095%" y="2021" width="0.0748%" height="15" fill="rgb(250,228,42)" fg:x="63676320" fg:w="43477800"/><text x="0.3595%" y="2031.50"></text></g><g><title>do_syscall_64 (41,944,376 samples, 0.07%)</title><rect x="0.1122%" y="2005" width="0.0721%" height="15" fill="rgb(240,193,28)" fg:x="65209744" fg:w="41944376"/><text x="0.3622%" y="2015.50"></text></g><g><title>__GI___getdents64 (46,915,032 samples, 0.08%)</title><rect x="0.1095%" y="2037" width="0.0807%" height="15" fill="rgb(216,20,37)" fg:x="63676320" fg:w="46915032"/><text x="0.3595%" y="2047.50"></text></g><g><title>__fput (14,138,647 samples, 0.02%)</title><rect x="0.1982%" y="1941" width="0.0243%" height="15" fill="rgb(206,188,39)" fg:x="115238853" fg:w="14138647"/><text x="0.4482%" y="1951.50"></text></g><g><title>single_release (5,823,486 samples, 0.01%)</title><rect x="0.2125%" y="1925" width="0.0100%" height="15" fill="rgb(217,207,13)" fg:x="123554014" fg:w="5823486"/><text x="0.4625%" y="1935.50"></text></g><g><title>__fput_sync (15,695,231 samples, 0.03%)</title><rect x="0.1969%" y="1957" width="0.0270%" height="15" fill="rgb(231,73,38)" fg:x="114456061" fg:w="15695231"/><text x="0.4469%" y="1967.50"></text></g><g><title>__se_sys_close (18,055,824 samples, 0.03%)</title><rect x="0.1942%" y="1973" width="0.0311%" height="15" fill="rgb(225,20,46)" fg:x="112890232" fg:w="18055824"/><text x="0.4442%" y="1983.50"></text></g><g><title>__x64_sys_close (19,510,288 samples, 0.03%)</title><rect x="0.1942%" y="1989" width="0.0336%" height="15" fill="rgb(210,31,41)" fg:x="112890232" fg:w="19510288"/><text x="0.4442%" y="1999.50"></text></g><g><title>entry_SYSCALL_64 (26,053,837 samples, 0.04%)</title><rect x="0.1929%" y="2021" width="0.0448%" height="15" fill="rgb(221,200,47)" fg:x="112143411" fg:w="26053837"/><text x="0.4429%" y="2031.50"></text></g><g><title>do_syscall_64 (25,307,016 samples, 0.04%)</title><rect x="0.1942%" y="2005" width="0.0435%" height="15" fill="rgb(226,26,5)" fg:x="112890232" fg:w="25307016"/><text x="0.4442%" y="2015.50"></text></g><g><title>__close (29,023,666 samples, 0.05%)</title><rect x="0.1929%" y="2037" width="0.0499%" height="15" fill="rgb(249,33,26)" fg:x="112143411" fg:w="29023666"/><text x="0.4429%" y="2047.50"></text></g><g><title>__fput_sync (5,982,927 samples, 0.01%)</title><rect x="0.2451%" y="1957" width="0.0103%" height="15" fill="rgb(235,183,28)" fg:x="142466969" fg:w="5982927"/><text x="0.4951%" y="1967.50"></text></g><g><title>__se_sys_close (7,423,196 samples, 0.01%)</title><rect x="0.2451%" y="1973" width="0.0128%" height="15" fill="rgb(221,5,38)" fg:x="142466969" fg:w="7423196"/><text x="0.4951%" y="1983.50"></text></g><g><title>__x64_sys_close (8,209,767 samples, 0.01%)</title><rect x="0.2451%" y="1989" width="0.0141%" height="15" fill="rgb(247,18,42)" fg:x="142466969" fg:w="8209767"/><text x="0.4951%" y="1999.50"></text></g><g><title>entry_SYSCALL_64 (10,945,243 samples, 0.02%)</title><rect x="0.2428%" y="2021" width="0.0188%" height="15" fill="rgb(241,131,45)" fg:x="141167077" fg:w="10945243"/><text x="0.4928%" y="2031.50"></text></g><g><title>do_syscall_64 (10,292,584 samples, 0.02%)</title><rect x="0.2439%" y="2005" width="0.0177%" height="15" fill="rgb(249,31,29)" fg:x="141819736" fg:w="10292584"/><text x="0.4939%" y="2015.50"></text></g><g><title>__close_nocancel (15,102,939 samples, 0.03%)</title><rect x="0.2428%" y="2037" width="0.0260%" height="15" fill="rgb(225,111,53)" fg:x="141167077" fg:w="15102939"/><text x="0.4928%" y="2047.50"></text></g><g><title>init_file (8,798,675 samples, 0.02%)</title><rect x="0.2983%" y="1909" width="0.0151%" height="15" fill="rgb(238,160,17)" fg:x="173432712" fg:w="8798675"/><text x="0.5483%" y="1919.50"></text></g><g><title>memcg_slab_post_alloc_hook (8,193,456 samples, 0.01%)</title><rect x="0.3261%" y="1893" width="0.0141%" height="15" fill="rgb(214,148,48)" fg:x="189592507" fg:w="8193456"/><text x="0.5761%" y="1903.50"></text></g><g><title>get_obj_cgroup_from_current (6,024,119 samples, 0.01%)</title><rect x="0.3428%" y="1877" width="0.0104%" height="15" fill="rgb(232,36,49)" fg:x="199299838" fg:w="6024119"/><text x="0.5928%" y="1887.50"></text></g><g><title>kmem_cache_alloc (29,313,327 samples, 0.05%)</title><rect x="0.3135%" y="1909" width="0.0504%" height="15" fill="rgb(209,103,24)" fg:x="182231387" fg:w="29313327"/><text x="0.5635%" y="1919.50"></text></g><g><title>memcg_slab_pre_alloc_hook (13,758,751 samples, 0.02%)</title><rect x="0.3402%" y="1893" width="0.0237%" height="15" fill="rgb(229,88,8)" fg:x="197785963" fg:w="13758751"/><text x="0.5902%" y="1903.50"></text></g><g><title>alloc_empty_file (38,817,922 samples, 0.07%)</title><rect x="0.2983%" y="1925" width="0.0668%" height="15" fill="rgb(213,181,19)" fg:x="173432712" fg:w="38817922"/><text x="0.5483%" y="1935.50"></text></g><g><title>do_o_path (16,390,970 samples, 0.03%)</title><rect x="0.3752%" y="1925" width="0.0282%" height="15" fill="rgb(254,191,54)" fg:x="218138232" fg:w="16390970"/><text x="0.6252%" y="1935.50"></text></g><g><title>path_lookupat (13,326,574 samples, 0.02%)</title><rect x="0.3805%" y="1909" width="0.0229%" height="15" fill="rgb(241,83,37)" fg:x="221202628" fg:w="13326574"/><text x="0.6305%" y="1919.50"></text></g><g><title>walk_component (7,522,607 samples, 0.01%)</title><rect x="0.3905%" y="1893" width="0.0129%" height="15" fill="rgb(233,36,39)" fg:x="227006595" fg:w="7522607"/><text x="0.6405%" y="1903.50"></text></g><g><title>lookup_fast (6,561,202 samples, 0.01%)</title><rect x="0.4162%" y="1925" width="0.0113%" height="15" fill="rgb(226,3,54)" fg:x="241967557" fg:w="6561202"/><text x="0.6662%" y="1935.50"></text></g><g><title>path_openat (86,213,688 samples, 0.15%)</title><rect x="0.2918%" y="1941" width="0.1483%" height="15" fill="rgb(245,192,40)" fg:x="169622824" fg:w="86213688"/><text x="0.5418%" y="1951.50"></text></g><g><title>do_filp_open (100,505,487 samples, 0.17%)</title><rect x="0.2878%" y="1957" width="0.1729%" height="15" fill="rgb(238,167,29)" fg:x="167306557" fg:w="100505487"/><text x="0.5378%" y="1967.50"></text></g><g><title>vfs_open (11,975,532 samples, 0.02%)</title><rect x="0.4401%" y="1941" width="0.0206%" height="15" fill="rgb(232,182,51)" fg:x="255836512" fg:w="11975532"/><text x="0.6901%" y="1951.50"></text></g><g><title>bpf_trampoline_6442477086 (11,203,999 samples, 0.02%)</title><rect x="0.4414%" y="1925" width="0.0193%" height="15" fill="rgb(231,60,39)" fg:x="256608045" fg:w="11203999"/><text x="0.6914%" y="1935.50"></text></g><g><title>vfs_open (7,626,131 samples, 0.01%)</title><rect x="0.4475%" y="1909" width="0.0131%" height="15" fill="rgb(208,69,12)" fg:x="260185913" fg:w="7626131"/><text x="0.6975%" y="1919.50"></text></g><g><title>do_dentry_open (7,626,131 samples, 0.01%)</title><rect x="0.4475%" y="1893" width="0.0131%" height="15" fill="rgb(235,93,37)" fg:x="260185913" fg:w="7626131"/><text x="0.6975%" y="1903.50"></text></g><g><title>kmem_cache_alloc (8,025,670 samples, 0.01%)</title><rect x="0.4728%" y="1925" width="0.0138%" height="15" fill="rgb(213,116,39)" fg:x="274880353" fg:w="8025670"/><text x="0.7228%" y="1935.50"></text></g><g><title>getname_flags (18,631,159 samples, 0.03%)</title><rect x="0.4690%" y="1941" width="0.0320%" height="15" fill="rgb(222,207,29)" fg:x="272628967" fg:w="18631159"/><text x="0.7190%" y="1951.50"></text></g><g><title>getname (19,953,491 samples, 0.03%)</title><rect x="0.4680%" y="1957" width="0.0343%" height="15" fill="rgb(206,96,30)" fg:x="272073543" fg:w="19953491"/><text x="0.7180%" y="1967.50"></text></g><g><title>__x64_sys_openat (130,027,661 samples, 0.22%)</title><rect x="0.2852%" y="1989" width="0.2237%" height="15" fill="rgb(218,138,4)" fg:x="165800213" fg:w="130027661"/><text x="0.5352%" y="1999.50"></text></g><g><title>do_sys_openat2 (129,263,298 samples, 0.22%)</title><rect x="0.2865%" y="1973" width="0.2223%" height="15" fill="rgb(250,191,14)" fg:x="166564576" fg:w="129263298"/><text x="0.5365%" y="1983.50"></text></g><g><title>entry_SYSCALL_64 (141,462,892 samples, 0.24%)</title><rect x="0.2758%" y="2021" width="0.2433%" height="15" fill="rgb(239,60,40)" fg:x="160336661" fg:w="141462892"/><text x="0.5258%" y="2031.50"></text></g><g><title>do_syscall_64 (137,582,264 samples, 0.24%)</title><rect x="0.2825%" y="2005" width="0.2367%" height="15" fill="rgb(206,27,48)" fg:x="164217289" fg:w="137582264"/><text x="0.5325%" y="2015.50"></text></g><g><title>__libc_openat64 (155,481,176 samples, 0.27%)</title><rect x="0.2707%" y="2037" width="0.2674%" height="15" fill="rgb(225,35,8)" fg:x="157395461" fg:w="155481176"/><text x="0.5207%" y="2047.50"></text></g><g><title>entry_ibpb (11,077,084 samples, 0.02%)</title><rect x="0.5191%" y="2021" width="0.0191%" height="15" fill="rgb(250,213,24)" fg:x="301799553" fg:w="11077084"/><text x="0.7691%" y="2031.50"></text></g><g><title>__kmem_cache_alloc_node (8,961,193 samples, 0.02%)</title><rect x="0.5551%" y="1877" width="0.0154%" height="15" fill="rgb(247,123,22)" fg:x="322719717" fg:w="8961193"/><text x="0.8051%" y="1887.50"></text></g><g><title>kvmalloc_node (9,727,111 samples, 0.02%)</title><rect x="0.5551%" y="1909" width="0.0167%" height="15" fill="rgb(231,138,38)" fg:x="322719717" fg:w="9727111"/><text x="0.8051%" y="1919.50"></text></g><g><title>__kmalloc_node (9,727,111 samples, 0.02%)</title><rect x="0.5551%" y="1893" width="0.0167%" height="15" fill="rgb(231,145,46)" fg:x="322719717" fg:w="9727111"/><text x="0.8051%" y="1903.50"></text></g><g><title>do_task_stat (9,736,536 samples, 0.02%)</title><rect x="0.5784%" y="1877" width="0.0167%" height="15" fill="rgb(251,118,11)" fg:x="336275559" fg:w="9736536"/><text x="0.8284%" y="1887.50"></text></g><g><title>ksys_read (33,134,385 samples, 0.06%)</title><rect x="0.5395%" y="1973" width="0.0570%" height="15" fill="rgb(217,147,25)" fg:x="313638813" fg:w="33134385"/><text x="0.7895%" y="1983.50"></text></g><g><title>vfs_read (32,354,439 samples, 0.06%)</title><rect x="0.5408%" y="1957" width="0.0557%" height="15" fill="rgb(247,81,37)" fg:x="314418759" fg:w="32354439"/><text x="0.7908%" y="1967.50"></text></g><g><title>seq_read (25,538,406 samples, 0.04%)</title><rect x="0.5526%" y="1941" width="0.0439%" height="15" fill="rgb(209,12,38)" fg:x="321234792" fg:w="25538406"/><text x="0.8026%" y="1951.50"></text></g><g><title>seq_read_iter (25,538,406 samples, 0.04%)</title><rect x="0.5526%" y="1925" width="0.0439%" height="15" fill="rgb(227,1,9)" fg:x="321234792" fg:w="25538406"/><text x="0.8026%" y="1935.50"></text></g><g><title>proc_single_show (12,750,777 samples, 0.02%)</title><rect x="0.5746%" y="1909" width="0.0219%" height="15" fill="rgb(248,47,43)" fg:x="334022421" fg:w="12750777"/><text x="0.8246%" y="1919.50"></text></g><g><title>proc_tid_stat (10,497,639 samples, 0.02%)</title><rect x="0.5784%" y="1893" width="0.0181%" height="15" fill="rgb(221,10,30)" fg:x="336275559" fg:w="10497639"/><text x="0.8284%" y="1903.50"></text></g><g><title>__x64_sys_read (33,908,870 samples, 0.06%)</title><rect x="0.5395%" y="1989" width="0.0583%" height="15" fill="rgb(210,229,1)" fg:x="313638813" fg:w="33908870"/><text x="0.7895%" y="1999.50"></text></g><g><title>entry_SYSCALL_64 (36,972,641 samples, 0.06%)</title><rect x="0.5395%" y="2021" width="0.0636%" height="15" fill="rgb(222,148,37)" fg:x="313638813" fg:w="36972641"/><text x="0.7895%" y="2031.50"></text></g><g><title>do_syscall_64 (36,972,641 samples, 0.06%)</title><rect x="0.5395%" y="2005" width="0.0636%" height="15" fill="rgb(234,67,33)" fg:x="313638813" fg:w="36972641"/><text x="0.7895%" y="2015.50"></text></g><g><title>read (41,749,699 samples, 0.07%)</title><rect x="0.5395%" y="2037" width="0.0718%" height="15" fill="rgb(247,98,35)" fg:x="313638813" fg:w="41749699"/><text x="0.7895%" y="2047.50"></text></g><g><title>[unknown] (304,994,429 samples, 0.52%)</title><rect x="0.0894%" y="2053" width="0.5246%" height="15" fill="rgb(247,138,52)" fg:x="51964264" fg:w="304994429"/><text x="0.3394%" y="2063.50"></text></g><g><title>entry_SYSCALL_64 (11,229,776 samples, 0.02%)</title><rect x="0.6166%" y="2037" width="0.0193%" height="15" fill="rgb(213,79,30)" fg:x="358457751" fg:w="11229776"/><text x="0.8666%" y="2047.50"></text></g><g><title>do_syscall_64 (9,790,655 samples, 0.02%)</title><rect x="0.6191%" y="2021" width="0.0168%" height="15" fill="rgb(246,177,23)" fg:x="359896872" fg:w="9790655"/><text x="0.8691%" y="2031.50"></text></g><g><title>__GI___fcntl64_nocancel (13,596,374 samples, 0.02%)</title><rect x="0.6166%" y="2053" width="0.0234%" height="15" fill="rgb(230,62,27)" fg:x="358457751" fg:w="13596374"/><text x="0.8666%" y="2063.50"></text></g><g><title>entry_SYSCALL_64 (8,341,738 samples, 0.01%)</title><rect x="0.6400%" y="2037" width="0.0143%" height="15" fill="rgb(216,154,8)" fg:x="372054125" fg:w="8341738"/><text x="0.8900%" y="2047.50"></text></g><g><title>do_syscall_64 (7,612,826 samples, 0.01%)</title><rect x="0.6412%" y="2021" width="0.0131%" height="15" fill="rgb(244,35,45)" fg:x="372783037" fg:w="7612826"/><text x="0.8912%" y="2031.50"></text></g><g><title>__GI___fstatat64 (10,459,569 samples, 0.02%)</title><rect x="0.6400%" y="2053" width="0.0180%" height="15" fill="rgb(251,115,12)" fg:x="372054125" fg:w="10459569"/><text x="0.8900%" y="2063.50"></text></g><g><title>__GI___libc_write (6,880,999 samples, 0.01%)</title><rect x="0.6580%" y="2053" width="0.0118%" height="15" fill="rgb(240,54,50)" fg:x="382513694" fg:w="6880999"/><text x="0.9080%" y="2063.50"></text></g><g><title>entry_SYSCALL_64 (6,880,999 samples, 0.01%)</title><rect x="0.6580%" y="2037" width="0.0118%" height="15" fill="rgb(233,84,52)" fg:x="382513694" fg:w="6880999"/><text x="0.9080%" y="2047.50"></text></g><g><title>do_syscall_64 (6,880,999 samples, 0.01%)</title><rect x="0.6580%" y="2021" width="0.0118%" height="15" fill="rgb(207,117,47)" fg:x="382513694" fg:w="6880999"/><text x="0.9080%" y="2031.50"></text></g><g><title>__x64_sys_write (6,880,999 samples, 0.01%)</title><rect x="0.6580%" y="2005" width="0.0118%" height="15" fill="rgb(249,43,39)" fg:x="382513694" fg:w="6880999"/><text x="0.9080%" y="2015.50"></text></g><g><title>ksys_write (6,880,999 samples, 0.01%)</title><rect x="0.6580%" y="1989" width="0.0118%" height="15" fill="rgb(209,38,44)" fg:x="382513694" fg:w="6880999"/><text x="0.9080%" y="1999.50"></text></g><g><title>vfs_write (6,880,999 samples, 0.01%)</title><rect x="0.6580%" y="1973" width="0.0118%" height="15" fill="rgb(236,212,23)" fg:x="382513694" fg:w="6880999"/><text x="0.9080%" y="1983.50"></text></g><g><title>tty_write (6,880,999 samples, 0.01%)</title><rect x="0.6580%" y="1957" width="0.0118%" height="15" fill="rgb(242,79,21)" fg:x="382513694" fg:w="6880999"/><text x="0.9080%" y="1967.50"></text></g><g><title>file_tty_write (6,880,999 samples, 0.01%)</title><rect x="0.6580%" y="1941" width="0.0118%" height="15" fill="rgb(211,96,35)" fg:x="382513694" fg:w="6880999"/><text x="0.9080%" y="1951.50"></text></g><g><title>__x64_sys_close (7,686,557 samples, 0.01%)</title><rect x="0.6786%" y="2005" width="0.0132%" height="15" fill="rgb(253,215,40)" fg:x="394529560" fg:w="7686557"/><text x="0.9286%" y="2015.50"></text></g><g><title>__se_sys_close (7,686,557 samples, 0.01%)</title><rect x="0.6786%" y="1989" width="0.0132%" height="15" fill="rgb(211,81,21)" fg:x="394529560" fg:w="7686557"/><text x="0.9286%" y="1999.50"></text></g><g><title>__fput_sync (7,686,557 samples, 0.01%)</title><rect x="0.6786%" y="1973" width="0.0132%" height="15" fill="rgb(208,190,38)" fg:x="394529560" fg:w="7686557"/><text x="0.9286%" y="1983.50"></text></g><g><title>__fput (7,686,557 samples, 0.01%)</title><rect x="0.6786%" y="1957" width="0.0132%" height="15" fill="rgb(235,213,38)" fg:x="394529560" fg:w="7686557"/><text x="0.9286%" y="1967.50"></text></g><g><title>__close_nocancel (9,939,813 samples, 0.02%)</title><rect x="0.6786%" y="2053" width="0.0171%" height="15" fill="rgb(237,122,38)" fg:x="394529560" fg:w="9939813"/><text x="0.9286%" y="2063.50"></text></g><g><title>entry_SYSCALL_64 (9,939,813 samples, 0.02%)</title><rect x="0.6786%" y="2037" width="0.0171%" height="15" fill="rgb(244,218,35)" fg:x="394529560" fg:w="9939813"/><text x="0.9286%" y="2047.50"></text></g><g><title>do_syscall_64 (9,939,813 samples, 0.02%)</title><rect x="0.6786%" y="2021" width="0.0171%" height="15" fill="rgb(240,68,47)" fg:x="394529560" fg:w="9939813"/><text x="0.9286%" y="2031.50"></text></g><g><title>alloc_empty_file (8,138,000 samples, 0.01%)</title><rect x="0.7112%" y="1941" width="0.0140%" height="15" fill="rgb(210,16,53)" fg:x="413452204" fg:w="8138000"/><text x="0.9612%" y="1951.50"></text></g><g><title>path_openat (14,943,385 samples, 0.03%)</title><rect x="0.7100%" y="1957" width="0.0257%" height="15" fill="rgb(235,124,12)" fg:x="412753907" fg:w="14943385"/><text x="0.9600%" y="1967.50"></text></g><g><title>do_filp_open (23,106,508 samples, 0.04%)</title><rect x="0.7087%" y="1973" width="0.0397%" height="15" fill="rgb(224,169,11)" fg:x="412015424" fg:w="23106508"/><text x="0.9587%" y="1983.50"></text></g><g><title>vfs_open (7,424,640 samples, 0.01%)</title><rect x="0.7357%" y="1957" width="0.0128%" height="15" fill="rgb(250,166,2)" fg:x="427697292" fg:w="7424640"/><text x="0.9857%" y="1967.50"></text></g><g><title>bpf_trampoline_6442477086 (7,424,640 samples, 0.01%)</title><rect x="0.7357%" y="1941" width="0.0128%" height="15" fill="rgb(242,216,29)" fg:x="427697292" fg:w="7424640"/><text x="0.9857%" y="1951.50"></text></g><g><title>__x64_sys_openat (31,948,052 samples, 0.05%)</title><rect x="0.7075%" y="2005" width="0.0550%" height="15" fill="rgb(230,116,27)" fg:x="411290874" fg:w="31948052"/><text x="0.9575%" y="2015.50"></text></g><g><title>do_sys_openat2 (31,948,052 samples, 0.05%)</title><rect x="0.7075%" y="1989" width="0.0550%" height="15" fill="rgb(228,99,48)" fg:x="411290874" fg:w="31948052"/><text x="0.9575%" y="1999.50"></text></g><g><title>entry_SYSCALL_64 (34,173,216 samples, 0.06%)</title><rect x="0.7061%" y="2037" width="0.0588%" height="15" fill="rgb(253,11,6)" fg:x="410525305" fg:w="34173216"/><text x="0.9561%" y="2047.50"></text></g><g><title>do_syscall_64 (33,407,647 samples, 0.06%)</title><rect x="0.7075%" y="2021" width="0.0575%" height="15" fill="rgb(247,143,39)" fg:x="411290874" fg:w="33407647"/><text x="0.9575%" y="2031.50"></text></g><g><title>__libc_openat64 (35,720,831 samples, 0.06%)</title><rect x="0.7061%" y="2053" width="0.0614%" height="15" fill="rgb(236,97,10)" fg:x="410525305" fg:w="35720831"/><text x="0.9561%" y="2063.50"></text></g><g><title>htop (398,036,148 samples, 0.68%)</title><rect x="0.0881%" y="2069" width="0.6847%" height="15" fill="rgb(233,208,19)" fg:x="51222160" fg:w="398036148"/><text x="0.3381%" y="2079.50"></text></g><g><title>__iommu_map_pages (7,466,453 samples, 0.01%)</title><rect x="0.8054%" y="1765" width="0.0128%" height="15" fill="rgb(216,164,2)" fg:x="468248897" fg:w="7466453"/><text x="1.0554%" y="1775.50"></text></g><g><title>__iommu_map (9,480,584 samples, 0.02%)</title><rect x="0.8043%" y="1781" width="0.0163%" height="15" fill="rgb(220,129,5)" fg:x="467578308" fg:w="9480584"/><text x="1.0543%" y="1791.50"></text></g><g><title>__dma_map_sg_attrs (10,496,935 samples, 0.02%)</title><rect x="0.8033%" y="1829" width="0.0181%" height="15" fill="rgb(242,17,10)" fg:x="467031745" fg:w="10496935"/><text x="1.0533%" y="1839.50"></text></g><g><title>iommu_dma_map_sg (10,496,935 samples, 0.02%)</title><rect x="0.8033%" y="1813" width="0.0181%" height="15" fill="rgb(242,107,0)" fg:x="467031745" fg:w="10496935"/><text x="1.0533%" y="1823.50"></text></g><g><title>iommu_map_sg (10,496,935 samples, 0.02%)</title><rect x="0.8033%" y="1797" width="0.0181%" height="15" fill="rgb(251,28,31)" fg:x="467031745" fg:w="10496935"/><text x="1.0533%" y="1807.50"></text></g><g><title>ata_qc_issue (12,425,057 samples, 0.02%)</title><rect x="0.8008%" y="1861" width="0.0214%" height="15" fill="rgb(233,223,10)" fg:x="465573614" fg:w="12425057"/><text x="1.0508%" y="1871.50"></text></g><g><title>dma_map_sg_attrs (10,966,926 samples, 0.02%)</title><rect x="0.8033%" y="1845" width="0.0189%" height="15" fill="rgb(215,21,27)" fg:x="467031745" fg:w="10966926"/><text x="1.0533%" y="1855.50"></text></g><g><title>__ata_scsi_queuecmd (13,601,424 samples, 0.02%)</title><rect x="0.8000%" y="1877" width="0.0234%" height="15" fill="rgb(232,23,21)" fg:x="465071845" fg:w="13601424"/><text x="1.0500%" y="1887.50"></text></g><g><title>ata_scsi_queuecmd (14,706,246 samples, 0.03%)</title><rect x="0.8000%" y="1893" width="0.0253%" height="15" fill="rgb(244,5,23)" fg:x="465071845" fg:w="14706246"/><text x="1.0500%" y="1903.50"></text></g><g><title>blk_mq_dispatch_rq_list (20,323,995 samples, 0.03%)</title><rect x="0.7987%" y="1925" width="0.0350%" height="15" fill="rgb(226,81,46)" fg:x="464349655" fg:w="20323995"/><text x="1.0487%" y="1935.50"></text></g><g><title>scsi_queue_rq (19,923,532 samples, 0.03%)</title><rect x="0.7994%" y="1909" width="0.0343%" height="15" fill="rgb(247,70,30)" fg:x="464750118" fg:w="19923532"/><text x="1.0494%" y="1919.50"></text></g><g><title>blk_mq_run_work_fn (22,472,944 samples, 0.04%)</title><rect x="0.7958%" y="1973" width="0.0387%" height="15" fill="rgb(212,68,19)" fg:x="462635062" fg:w="22472944"/><text x="1.0458%" y="1983.50"></text></g><g><title>blk_mq_sched_dispatch_requests (22,472,944 samples, 0.04%)</title><rect x="0.7958%" y="1957" width="0.0387%" height="15" fill="rgb(240,187,13)" fg:x="462635062" fg:w="22472944"/><text x="1.0458%" y="1967.50"></text></g><g><title>__blk_mq_sched_dispatch_requests (22,472,944 samples, 0.04%)</title><rect x="0.7958%" y="1941" width="0.0387%" height="15" fill="rgb(223,113,26)" fg:x="462635062" fg:w="22472944"/><text x="1.0458%" y="1951.50"></text></g><g><title>process_scheduled_works (23,452,123 samples, 0.04%)</title><rect x="0.7948%" y="1989" width="0.0403%" height="15" fill="rgb(206,192,2)" fg:x="462084250" fg:w="23452123"/><text x="1.0448%" y="1999.50"></text></g><g><title>pick_next_task (6,693,114 samples, 0.01%)</title><rect x="0.8365%" y="1957" width="0.0115%" height="15" fill="rgb(241,108,4)" fg:x="486301055" fg:w="6693114"/><text x="1.0865%" y="1967.50"></text></g><g><title>pick_next_task_fair (6,239,943 samples, 0.01%)</title><rect x="0.8373%" y="1941" width="0.0107%" height="15" fill="rgb(247,173,49)" fg:x="486754226" fg:w="6239943"/><text x="1.0873%" y="1951.50"></text></g><g><title>newidle_balance (6,239,943 samples, 0.01%)</title><rect x="0.8373%" y="1925" width="0.0107%" height="15" fill="rgb(224,114,35)" fg:x="486754226" fg:w="6239943"/><text x="1.0873%" y="1935.50"></text></g><g><title>kworker/0:1H-kb (33,416,817 samples, 0.06%)</title><rect x="0.7932%" y="2069" width="0.0575%" height="15" fill="rgb(245,159,27)" fg:x="461111186" fg:w="33416817"/><text x="1.0432%" y="2079.50"></text></g><g><title>ret_from_fork_asm (33,416,817 samples, 0.06%)</title><rect x="0.7932%" y="2053" width="0.0575%" height="15" fill="rgb(245,172,44)" fg:x="461111186" fg:w="33416817"/><text x="1.0432%" y="2063.50"></text></g><g><title>ret_from_fork (33,416,817 samples, 0.06%)</title><rect x="0.7932%" y="2037" width="0.0575%" height="15" fill="rgb(236,23,11)" fg:x="461111186" fg:w="33416817"/><text x="1.0432%" y="2047.50"></text></g><g><title>kthread (33,416,817 samples, 0.06%)</title><rect x="0.7932%" y="2021" width="0.0575%" height="15" fill="rgb(205,117,38)" fg:x="461111186" fg:w="33416817"/><text x="1.0432%" y="2031.50"></text></g><g><title>worker_thread (33,416,817 samples, 0.06%)</title><rect x="0.7932%" y="2005" width="0.0575%" height="15" fill="rgb(237,72,25)" fg:x="461111186" fg:w="33416817"/><text x="1.0432%" y="2015.50"></text></g><g><title>schedule (8,991,630 samples, 0.02%)</title><rect x="0.8352%" y="1989" width="0.0155%" height="15" fill="rgb(244,70,9)" fg:x="485536373" fg:w="8991630"/><text x="1.0852%" y="1999.50"></text></g><g><title>__sched_text_start (8,991,630 samples, 0.02%)</title><rect x="0.8352%" y="1973" width="0.0155%" height="15" fill="rgb(217,125,39)" fg:x="485536373" fg:w="8991630"/><text x="1.0852%" y="1983.50"></text></g><g><title>process_scheduled_works (6,061,157 samples, 0.01%)</title><rect x="0.8666%" y="1989" width="0.0104%" height="15" fill="rgb(235,36,10)" fg:x="503816460" fg:w="6061157"/><text x="1.1166%" y="1999.50"></text></g><g><title>kworker/15:1H-k (8,620,447 samples, 0.01%)</title><rect x="0.8651%" y="2069" width="0.0148%" height="15" fill="rgb(251,123,47)" fg:x="502924475" fg:w="8620447"/><text x="1.1151%" y="2079.50"></text></g><g><title>ret_from_fork_asm (8,620,447 samples, 0.01%)</title><rect x="0.8651%" y="2053" width="0.0148%" height="15" fill="rgb(221,13,13)" fg:x="502924475" fg:w="8620447"/><text x="1.1151%" y="2063.50"></text></g><g><title>ret_from_fork (8,620,447 samples, 0.01%)</title><rect x="0.8651%" y="2037" width="0.0148%" height="15" fill="rgb(238,131,9)" fg:x="502924475" fg:w="8620447"/><text x="1.1151%" y="2047.50"></text></g><g><title>kthread (8,620,447 samples, 0.01%)</title><rect x="0.8651%" y="2021" width="0.0148%" height="15" fill="rgb(211,50,8)" fg:x="502924475" fg:w="8620447"/><text x="1.1151%" y="2031.50"></text></g><g><title>worker_thread (7,728,462 samples, 0.01%)</title><rect x="0.8666%" y="2005" width="0.0133%" height="15" fill="rgb(245,182,24)" fg:x="503816460" fg:w="7728462"/><text x="1.1166%" y="2015.50"></text></g><g><title>kworker/1:1H-kb (8,027,476 samples, 0.01%)</title><rect x="0.8799%" y="2069" width="0.0138%" height="15" fill="rgb(242,14,37)" fg:x="511544922" fg:w="8027476"/><text x="1.1299%" y="2079.50"></text></g><g><title>ret_from_fork_asm (8,027,476 samples, 0.01%)</title><rect x="0.8799%" y="2053" width="0.0138%" height="15" fill="rgb(246,228,12)" fg:x="511544922" fg:w="8027476"/><text x="1.1299%" y="2063.50"></text></g><g><title>ret_from_fork (8,027,476 samples, 0.01%)</title><rect x="0.8799%" y="2037" width="0.0138%" height="15" fill="rgb(213,55,15)" fg:x="511544922" fg:w="8027476"/><text x="1.1299%" y="2047.50"></text></g><g><title>kthread (8,027,476 samples, 0.01%)</title><rect x="0.8799%" y="2021" width="0.0138%" height="15" fill="rgb(209,9,3)" fg:x="511544922" fg:w="8027476"/><text x="1.1299%" y="2031.50"></text></g><g><title>worker_thread (8,027,476 samples, 0.01%)</title><rect x="0.8799%" y="2005" width="0.0138%" height="15" fill="rgb(230,59,30)" fg:x="511544922" fg:w="8027476"/><text x="1.1299%" y="2015.50"></text></g><g><title>ata_scsi_queuecmd (6,294,997 samples, 0.01%)</title><rect x="0.8982%" y="1893" width="0.0108%" height="15" fill="rgb(209,121,21)" fg:x="522197566" fg:w="6294997"/><text x="1.1482%" y="1903.50"></text></g><g><title>blk_mq_dispatch_rq_list (9,260,656 samples, 0.02%)</title><rect x="0.8969%" y="1925" width="0.0159%" height="15" fill="rgb(220,109,13)" fg:x="521400240" fg:w="9260656"/><text x="1.1469%" y="1935.50"></text></g><g><title>scsi_queue_rq (9,260,656 samples, 0.02%)</title><rect x="0.8969%" y="1909" width="0.0159%" height="15" fill="rgb(232,18,1)" fg:x="521400240" fg:w="9260656"/><text x="1.1469%" y="1919.50"></text></g><g><title>blk_mq_run_work_fn (11,849,142 samples, 0.02%)</title><rect x="0.8961%" y="1973" width="0.0204%" height="15" fill="rgb(215,41,42)" fg:x="520973758" fg:w="11849142"/><text x="1.1461%" y="1983.50"></text></g><g><title>blk_mq_sched_dispatch_requests (11,849,142 samples, 0.02%)</title><rect x="0.8961%" y="1957" width="0.0204%" height="15" fill="rgb(224,123,36)" fg:x="520973758" fg:w="11849142"/><text x="1.1461%" y="1967.50"></text></g><g><title>__blk_mq_sched_dispatch_requests (11,849,142 samples, 0.02%)</title><rect x="0.8961%" y="1941" width="0.0204%" height="15" fill="rgb(240,125,3)" fg:x="520973758" fg:w="11849142"/><text x="1.1461%" y="1951.50"></text></g><g><title>process_scheduled_works (12,617,296 samples, 0.02%)</title><rect x="0.8961%" y="1989" width="0.0217%" height="15" fill="rgb(205,98,50)" fg:x="520973758" fg:w="12617296"/><text x="1.1461%" y="1999.50"></text></g><g><title>kworker/2:1H-kb (15,097,639 samples, 0.03%)</title><rect x="0.8961%" y="2069" width="0.0260%" height="15" fill="rgb(205,185,37)" fg:x="520973758" fg:w="15097639"/><text x="1.1461%" y="2079.50"></text></g><g><title>ret_from_fork_asm (15,097,639 samples, 0.03%)</title><rect x="0.8961%" y="2053" width="0.0260%" height="15" fill="rgb(238,207,15)" fg:x="520973758" fg:w="15097639"/><text x="1.1461%" y="2063.50"></text></g><g><title>ret_from_fork (15,097,639 samples, 0.03%)</title><rect x="0.8961%" y="2037" width="0.0260%" height="15" fill="rgb(213,199,42)" fg:x="520973758" fg:w="15097639"/><text x="1.1461%" y="2047.50"></text></g><g><title>kthread (15,097,639 samples, 0.03%)</title><rect x="0.8961%" y="2021" width="0.0260%" height="15" fill="rgb(235,201,11)" fg:x="520973758" fg:w="15097639"/><text x="1.1461%" y="2031.50"></text></g><g><title>worker_thread (15,097,639 samples, 0.03%)</title><rect x="0.8961%" y="2005" width="0.0260%" height="15" fill="rgb(207,46,11)" fg:x="520973758" fg:w="15097639"/><text x="1.1461%" y="2015.50"></text></g><g><title>kworker/3:1H-kb (8,169,578 samples, 0.01%)</title><rect x="0.9221%" y="2069" width="0.0141%" height="15" fill="rgb(241,35,35)" fg:x="536071397" fg:w="8169578"/><text x="1.1721%" y="2079.50"></text></g><g><title>ret_from_fork_asm (8,169,578 samples, 0.01%)</title><rect x="0.9221%" y="2053" width="0.0141%" height="15" fill="rgb(243,32,47)" fg:x="536071397" fg:w="8169578"/><text x="1.1721%" y="2063.50"></text></g><g><title>ret_from_fork (8,169,578 samples, 0.01%)</title><rect x="0.9221%" y="2037" width="0.0141%" height="15" fill="rgb(247,202,23)" fg:x="536071397" fg:w="8169578"/><text x="1.1721%" y="2047.50"></text></g><g><title>kthread (8,169,578 samples, 0.01%)</title><rect x="0.9221%" y="2021" width="0.0141%" height="15" fill="rgb(219,102,11)" fg:x="536071397" fg:w="8169578"/><text x="1.1721%" y="2031.50"></text></g><g><title>worker_thread (7,791,882 samples, 0.01%)</title><rect x="0.9228%" y="2005" width="0.0134%" height="15" fill="rgb(243,110,44)" fg:x="536449093" fg:w="7791882"/><text x="1.1728%" y="2015.50"></text></g><g><title>process_scheduled_works (5,950,336 samples, 0.01%)</title><rect x="0.9421%" y="1989" width="0.0102%" height="15" fill="rgb(222,74,54)" fg:x="547717831" fg:w="5950336"/><text x="1.1921%" y="1999.50"></text></g><g><title>blk_mq_run_work_fn (5,950,336 samples, 0.01%)</title><rect x="0.9421%" y="1973" width="0.0102%" height="15" fill="rgb(216,99,12)" fg:x="547717831" fg:w="5950336"/><text x="1.1921%" y="1983.50"></text></g><g><title>blk_mq_sched_dispatch_requests (5,950,336 samples, 0.01%)</title><rect x="0.9421%" y="1957" width="0.0102%" height="15" fill="rgb(226,22,26)" fg:x="547717831" fg:w="5950336"/><text x="1.1921%" y="1967.50"></text></g><g><title>__blk_mq_sched_dispatch_requests (5,950,336 samples, 0.01%)</title><rect x="0.9421%" y="1941" width="0.0102%" height="15" fill="rgb(217,163,10)" fg:x="547717831" fg:w="5950336"/><text x="1.1921%" y="1951.50"></text></g><g><title>kworker/4:1H-kb (9,777,603 samples, 0.02%)</title><rect x="0.9410%" y="2069" width="0.0168%" height="15" fill="rgb(213,25,53)" fg:x="547084478" fg:w="9777603"/><text x="1.1910%" y="2079.50"></text></g><g><title>ret_from_fork_asm (9,144,250 samples, 0.02%)</title><rect x="0.9421%" y="2053" width="0.0157%" height="15" fill="rgb(252,105,26)" fg:x="547717831" fg:w="9144250"/><text x="1.1921%" y="2063.50"></text></g><g><title>ret_from_fork (9,144,250 samples, 0.02%)</title><rect x="0.9421%" y="2037" width="0.0157%" height="15" fill="rgb(220,39,43)" fg:x="547717831" fg:w="9144250"/><text x="1.1921%" y="2047.50"></text></g><g><title>kthread (9,144,250 samples, 0.02%)</title><rect x="0.9421%" y="2021" width="0.0157%" height="15" fill="rgb(229,68,48)" fg:x="547717831" fg:w="9144250"/><text x="1.1921%" y="2031.50"></text></g><g><title>worker_thread (9,144,250 samples, 0.02%)</title><rect x="0.9421%" y="2005" width="0.0157%" height="15" fill="rgb(252,8,32)" fg:x="547717831" fg:w="9144250"/><text x="1.1921%" y="2015.50"></text></g><g><title>ata_scsi_queuecmd (6,120,612 samples, 0.01%)</title><rect x="0.9628%" y="1893" width="0.0105%" height="15" fill="rgb(223,20,43)" fg:x="559755109" fg:w="6120612"/><text x="1.2128%" y="1903.50"></text></g><g><title>process_scheduled_works (10,297,519 samples, 0.02%)</title><rect x="0.9579%" y="1989" width="0.0177%" height="15" fill="rgb(229,81,49)" fg:x="556862081" fg:w="10297519"/><text x="1.2079%" y="1999.50"></text></g><g><title>blk_mq_run_work_fn (10,297,519 samples, 0.02%)</title><rect x="0.9579%" y="1973" width="0.0177%" height="15" fill="rgb(236,28,36)" fg:x="556862081" fg:w="10297519"/><text x="1.2079%" y="1983.50"></text></g><g><title>blk_mq_sched_dispatch_requests (10,297,519 samples, 0.02%)</title><rect x="0.9579%" y="1957" width="0.0177%" height="15" fill="rgb(249,185,26)" fg:x="556862081" fg:w="10297519"/><text x="1.2079%" y="1967.50"></text></g><g><title>__blk_mq_sched_dispatch_requests (10,297,519 samples, 0.02%)</title><rect x="0.9579%" y="1941" width="0.0177%" height="15" fill="rgb(249,174,33)" fg:x="556862081" fg:w="10297519"/><text x="1.2079%" y="1951.50"></text></g><g><title>blk_mq_dispatch_rq_list (9,553,348 samples, 0.02%)</title><rect x="0.9591%" y="1925" width="0.0164%" height="15" fill="rgb(233,201,37)" fg:x="557606252" fg:w="9553348"/><text x="1.2091%" y="1935.50"></text></g><g><title>scsi_queue_rq (9,553,348 samples, 0.02%)</title><rect x="0.9591%" y="1909" width="0.0164%" height="15" fill="rgb(221,78,26)" fg:x="557606252" fg:w="9553348"/><text x="1.2091%" y="1919.50"></text></g><g><title>kworker/5:1H-kb (12,743,433 samples, 0.02%)</title><rect x="0.9579%" y="2069" width="0.0219%" height="15" fill="rgb(250,127,30)" fg:x="556862081" fg:w="12743433"/><text x="1.2079%" y="2079.50"></text></g><g><title>ret_from_fork_asm (12,743,433 samples, 0.02%)</title><rect x="0.9579%" y="2053" width="0.0219%" height="15" fill="rgb(230,49,44)" fg:x="556862081" fg:w="12743433"/><text x="1.2079%" y="2063.50"></text></g><g><title>ret_from_fork (12,743,433 samples, 0.02%)</title><rect x="0.9579%" y="2037" width="0.0219%" height="15" fill="rgb(229,67,23)" fg:x="556862081" fg:w="12743433"/><text x="1.2079%" y="2047.50"></text></g><g><title>kthread (12,743,433 samples, 0.02%)</title><rect x="0.9579%" y="2021" width="0.0219%" height="15" fill="rgb(249,83,47)" fg:x="556862081" fg:w="12743433"/><text x="1.2079%" y="2031.50"></text></g><g><title>worker_thread (12,743,433 samples, 0.02%)</title><rect x="0.9579%" y="2005" width="0.0219%" height="15" fill="rgb(215,43,3)" fg:x="556862081" fg:w="12743433"/><text x="1.2079%" y="2015.50"></text></g><g><title>kworker/6:1H-kb (10,717,892 samples, 0.02%)</title><rect x="0.9841%" y="2069" width="0.0184%" height="15" fill="rgb(238,154,13)" fg:x="572100089" fg:w="10717892"/><text x="1.2341%" y="2079.50"></text></g><g><title>ret_from_fork_asm (10,717,892 samples, 0.02%)</title><rect x="0.9841%" y="2053" width="0.0184%" height="15" fill="rgb(219,56,2)" fg:x="572100089" fg:w="10717892"/><text x="1.2341%" y="2063.50"></text></g><g><title>ret_from_fork (10,717,892 samples, 0.02%)</title><rect x="0.9841%" y="2037" width="0.0184%" height="15" fill="rgb(233,0,4)" fg:x="572100089" fg:w="10717892"/><text x="1.2341%" y="2047.50"></text></g><g><title>kthread (10,717,892 samples, 0.02%)</title><rect x="0.9841%" y="2021" width="0.0184%" height="15" fill="rgb(235,30,7)" fg:x="572100089" fg:w="10717892"/><text x="1.2341%" y="2031.50"></text></g><g><title>worker_thread (10,717,892 samples, 0.02%)</title><rect x="0.9841%" y="2005" width="0.0184%" height="15" fill="rgb(250,79,13)" fg:x="572100089" fg:w="10717892"/><text x="1.2341%" y="2015.50"></text></g><g><title>kworker/7:1H-kb (6,252,047 samples, 0.01%)</title><rect x="1.0025%" y="2069" width="0.0108%" height="15" fill="rgb(211,146,34)" fg:x="582817981" fg:w="6252047"/><text x="1.2525%" y="2079.50"></text></g><g><title>ret_from_fork_asm (6,252,047 samples, 0.01%)</title><rect x="1.0025%" y="2053" width="0.0108%" height="15" fill="rgb(228,22,38)" fg:x="582817981" fg:w="6252047"/><text x="1.2525%" y="2063.50"></text></g><g><title>ret_from_fork (6,252,047 samples, 0.01%)</title><rect x="1.0025%" y="2037" width="0.0108%" height="15" fill="rgb(235,168,5)" fg:x="582817981" fg:w="6252047"/><text x="1.2525%" y="2047.50"></text></g><g><title>kthread (6,252,047 samples, 0.01%)</title><rect x="1.0025%" y="2021" width="0.0108%" height="15" fill="rgb(221,155,16)" fg:x="582817981" fg:w="6252047"/><text x="1.2525%" y="2031.50"></text></g><g><title>worker_thread (6,252,047 samples, 0.01%)</title><rect x="1.0025%" y="2005" width="0.0108%" height="15" fill="rgb(215,215,53)" fg:x="582817981" fg:w="6252047"/><text x="1.2525%" y="2015.50"></text></g><g><title>find_get_entry (10,859,895 samples, 0.02%)</title><rect x="1.0318%" y="1813" width="0.0187%" height="15" fill="rgb(223,4,10)" fg:x="599820194" fg:w="10859895"/><text x="1.2818%" y="1823.50"></text></g><g><title>filemap_get_folios_tag (11,990,702 samples, 0.02%)</title><rect x="1.0312%" y="1829" width="0.0206%" height="15" fill="rgb(234,103,6)" fg:x="599483394" fg:w="11990702"/><text x="1.2812%" y="1839.50"></text></g><g><title>_raw_spin_lock_irqsave (8,408,647 samples, 0.01%)</title><rect x="1.0995%" y="1765" width="0.0145%" height="15" fill="rgb(227,97,0)" fg:x="639223510" fg:w="8408647"/><text x="1.3495%" y="1775.50"></text></g><g><title>lock_acquire (6,145,544 samples, 0.01%)</title><rect x="1.1034%" y="1749" width="0.0106%" height="15" fill="rgb(234,150,53)" fg:x="641486613" fg:w="6145544"/><text x="1.3534%" y="1759.50"></text></g><g><title>folio_memcg_lock (7,554,790 samples, 0.01%)</title><rect x="1.1166%" y="1765" width="0.0130%" height="15" fill="rgb(228,201,54)" fg:x="649130546" fg:w="7554790"/><text x="1.3666%" y="1775.50"></text></g><g><title>lock_acquire (6,762,814 samples, 0.01%)</title><rect x="1.1179%" y="1749" width="0.0116%" height="15" fill="rgb(222,22,37)" fg:x="649922522" fg:w="6762814"/><text x="1.3679%" y="1759.50"></text></g><g><title>__folio_start_writeback (35,854,537 samples, 0.06%)</title><rect x="1.0860%" y="1781" width="0.0617%" height="15" fill="rgb(237,53,32)" fg:x="631346802" fg:w="35854537"/><text x="1.3360%" y="1791.50"></text></g><g><title>__submit_bio (7,872,540 samples, 0.01%)</title><rect x="1.1534%" y="1733" width="0.0135%" height="15" fill="rgb(233,25,53)" fg:x="670512943" fg:w="7872540"/><text x="1.4034%" y="1743.50"></text></g><g><title>blk_mq_submit_bio (7,872,540 samples, 0.01%)</title><rect x="1.1534%" y="1717" width="0.0135%" height="15" fill="rgb(210,40,34)" fg:x="670512943" fg:w="7872540"/><text x="1.4034%" y="1727.50"></text></g><g><title>submit_bio (8,987,442 samples, 0.02%)</title><rect x="1.1534%" y="1781" width="0.0155%" height="15" fill="rgb(241,220,44)" fg:x="670512943" fg:w="8987442"/><text x="1.4034%" y="1791.50"></text></g><g><title>submit_bio_noacct (8,987,442 samples, 0.02%)</title><rect x="1.1534%" y="1765" width="0.0155%" height="15" fill="rgb(235,28,35)" fg:x="670512943" fg:w="8987442"/><text x="1.4034%" y="1775.50"></text></g><g><title>submit_bio_noacct_nocheck (8,987,442 samples, 0.02%)</title><rect x="1.1534%" y="1749" width="0.0155%" height="15" fill="rgb(210,56,17)" fg:x="670512943" fg:w="8987442"/><text x="1.4034%" y="1759.50"></text></g><g><title>ext4_bio_write_folio (51,089,795 samples, 0.09%)</title><rect x="1.0816%" y="1797" width="0.0879%" height="15" fill="rgb(224,130,29)" fg:x="628799023" fg:w="51089795"/><text x="1.3316%" y="1807.50"></text></g><g><title>__mod_lruvec_page_state (6,453,080 samples, 0.01%)</title><rect x="1.1701%" y="1781" width="0.0111%" height="15" fill="rgb(235,212,8)" fg:x="680217424" fg:w="6453080"/><text x="1.4201%" y="1791.50"></text></g><g><title>__writeback_single_inode (95,566,333 samples, 0.16%)</title><rect x="1.0267%" y="1909" width="0.1644%" height="15" fill="rgb(223,33,50)" fg:x="596869062" fg:w="95566333"/><text x="1.2767%" y="1919.50"></text></g><g><title>do_writepages (95,566,333 samples, 0.16%)</title><rect x="1.0267%" y="1893" width="0.1644%" height="15" fill="rgb(219,149,13)" fg:x="596869062" fg:w="95566333"/><text x="1.2767%" y="1903.50"></text></g><g><title>ext4_writepages (95,566,333 samples, 0.16%)</title><rect x="1.0267%" y="1877" width="0.1644%" height="15" fill="rgb(250,156,29)" fg:x="596869062" fg:w="95566333"/><text x="1.2767%" y="1887.50"></text></g><g><title>ext4_do_writepages (95,566,333 samples, 0.16%)</title><rect x="1.0267%" y="1861" width="0.1644%" height="15" fill="rgb(216,193,19)" fg:x="596869062" fg:w="95566333"/><text x="1.2767%" y="1871.50"></text></g><g><title>mpage_prepare_extent_to_map (94,661,399 samples, 0.16%)</title><rect x="1.0282%" y="1845" width="0.1628%" height="15" fill="rgb(216,135,14)" fg:x="597773996" fg:w="94661399"/><text x="1.2782%" y="1855.50"></text></g><g><title>mpage_process_page_bufs (80,387,881 samples, 0.14%)</title><rect x="1.0528%" y="1829" width="0.1383%" height="15" fill="rgb(241,47,5)" fg:x="612047514" fg:w="80387881"/><text x="1.3028%" y="1839.50"></text></g><g><title>mpage_submit_folio (64,655,734 samples, 0.11%)</title><rect x="1.0799%" y="1813" width="0.1112%" height="15" fill="rgb(233,42,35)" fg:x="627779661" fg:w="64655734"/><text x="1.3299%" y="1823.50"></text></g><g><title>folio_clear_dirty_for_io (12,546,577 samples, 0.02%)</title><rect x="1.1695%" y="1797" width="0.0216%" height="15" fill="rgb(231,13,6)" fg:x="679888818" fg:w="12546577"/><text x="1.4195%" y="1807.50"></text></g><g><title>__writeback_inodes_wb (96,035,608 samples, 0.17%)</title><rect x="1.0267%" y="1941" width="0.1652%" height="15" fill="rgb(207,181,40)" fg:x="596869062" fg:w="96035608"/><text x="1.2767%" y="1951.50"></text></g><g><title>writeback_sb_inodes (96,035,608 samples, 0.17%)</title><rect x="1.0267%" y="1925" width="0.1652%" height="15" fill="rgb(254,173,49)" fg:x="596869062" fg:w="96035608"/><text x="1.2767%" y="1935.50"></text></g><g><title>process_scheduled_works (97,236,291 samples, 0.17%)</title><rect x="1.0256%" y="1989" width="0.1673%" height="15" fill="rgb(221,1,38)" fg:x="596268689" fg:w="97236291"/><text x="1.2756%" y="1999.50"></text></g><g><title>wb_workfn (96,635,918 samples, 0.17%)</title><rect x="1.0267%" y="1973" width="0.1662%" height="15" fill="rgb(206,124,46)" fg:x="596869062" fg:w="96635918"/><text x="1.2767%" y="1983.50"></text></g><g><title>wb_writeback (96,635,918 samples, 0.17%)</title><rect x="1.0267%" y="1957" width="0.1662%" height="15" fill="rgb(249,21,11)" fg:x="596869062" fg:w="96635918"/><text x="1.2767%" y="1967.50"></text></g><g><title>kworker/u65:1-f (97,331,563 samples, 0.17%)</title><rect x="1.0256%" y="2069" width="0.1674%" height="15" fill="rgb(222,201,40)" fg:x="596268689" fg:w="97331563"/><text x="1.2756%" y="2079.50"></text></g><g><title>ret_from_fork_asm (97,331,563 samples, 0.17%)</title><rect x="1.0256%" y="2053" width="0.1674%" height="15" fill="rgb(235,61,29)" fg:x="596268689" fg:w="97331563"/><text x="1.2756%" y="2063.50"></text></g><g><title>ret_from_fork (97,331,563 samples, 0.17%)</title><rect x="1.0256%" y="2037" width="0.1674%" height="15" fill="rgb(219,207,3)" fg:x="596268689" fg:w="97331563"/><text x="1.2756%" y="2047.50"></text></g><g><title>kthread (97,331,563 samples, 0.17%)</title><rect x="1.0256%" y="2021" width="0.1674%" height="15" fill="rgb(222,56,46)" fg:x="596268689" fg:w="97331563"/><text x="1.2756%" y="2031.50"></text></g><g><title>worker_thread (97,331,563 samples, 0.17%)</title><rect x="1.0256%" y="2005" width="0.1674%" height="15" fill="rgb(239,76,54)" fg:x="596268689" fg:w="97331563"/><text x="1.2756%" y="2015.50"></text></g><g><title>ext4_bio_write_folio (7,247,102 samples, 0.01%)</title><rect x="1.1976%" y="1797" width="0.0125%" height="15" fill="rgb(231,124,27)" fg:x="696253202" fg:w="7247102"/><text x="1.4476%" y="1807.50"></text></g><g><title>kworker/u65:3-f (12,764,447 samples, 0.02%)</title><rect x="1.1931%" y="2069" width="0.0220%" height="15" fill="rgb(249,195,6)" fg:x="693600252" fg:w="12764447"/><text x="1.4431%" y="2079.50"></text></g><g><title>ret_from_fork_asm (12,502,080 samples, 0.02%)</title><rect x="1.1935%" y="2053" width="0.0215%" height="15" fill="rgb(237,174,47)" fg:x="693862619" fg:w="12502080"/><text x="1.4435%" y="2063.50"></text></g><g><title>ret_from_fork (12,502,080 samples, 0.02%)</title><rect x="1.1935%" y="2037" width="0.0215%" height="15" fill="rgb(206,201,31)" fg:x="693862619" fg:w="12502080"/><text x="1.4435%" y="2047.50"></text></g><g><title>kthread (12,502,080 samples, 0.02%)</title><rect x="1.1935%" y="2021" width="0.0215%" height="15" fill="rgb(231,57,52)" fg:x="693862619" fg:w="12502080"/><text x="1.4435%" y="2031.50"></text></g><g><title>worker_thread (12,502,080 samples, 0.02%)</title><rect x="1.1935%" y="2005" width="0.0215%" height="15" fill="rgb(248,177,22)" fg:x="693862619" fg:w="12502080"/><text x="1.4435%" y="2015.50"></text></g><g><title>process_scheduled_works (12,502,080 samples, 0.02%)</title><rect x="1.1935%" y="1989" width="0.0215%" height="15" fill="rgb(215,211,37)" fg:x="693862619" fg:w="12502080"/><text x="1.4435%" y="1999.50"></text></g><g><title>wb_workfn (12,502,080 samples, 0.02%)</title><rect x="1.1935%" y="1973" width="0.0215%" height="15" fill="rgb(241,128,51)" fg:x="693862619" fg:w="12502080"/><text x="1.4435%" y="1983.50"></text></g><g><title>wb_writeback (12,502,080 samples, 0.02%)</title><rect x="1.1935%" y="1957" width="0.0215%" height="15" fill="rgb(227,165,31)" fg:x="693862619" fg:w="12502080"/><text x="1.4435%" y="1967.50"></text></g><g><title>__writeback_inodes_wb (12,502,080 samples, 0.02%)</title><rect x="1.1935%" y="1941" width="0.0215%" height="15" fill="rgb(228,167,24)" fg:x="693862619" fg:w="12502080"/><text x="1.4435%" y="1951.50"></text></g><g><title>writeback_sb_inodes (12,502,080 samples, 0.02%)</title><rect x="1.1935%" y="1925" width="0.0215%" height="15" fill="rgb(228,143,12)" fg:x="693862619" fg:w="12502080"/><text x="1.4435%" y="1935.50"></text></g><g><title>__writeback_single_inode (12,502,080 samples, 0.02%)</title><rect x="1.1935%" y="1909" width="0.0215%" height="15" fill="rgb(249,149,8)" fg:x="693862619" fg:w="12502080"/><text x="1.4435%" y="1919.50"></text></g><g><title>do_writepages (12,502,080 samples, 0.02%)</title><rect x="1.1935%" y="1893" width="0.0215%" height="15" fill="rgb(243,35,44)" fg:x="693862619" fg:w="12502080"/><text x="1.4435%" y="1903.50"></text></g><g><title>ext4_writepages (12,502,080 samples, 0.02%)</title><rect x="1.1935%" y="1877" width="0.0215%" height="15" fill="rgb(246,89,9)" fg:x="693862619" fg:w="12502080"/><text x="1.4435%" y="1887.50"></text></g><g><title>ext4_do_writepages (12,502,080 samples, 0.02%)</title><rect x="1.1935%" y="1861" width="0.0215%" height="15" fill="rgb(233,213,13)" fg:x="693862619" fg:w="12502080"/><text x="1.4435%" y="1871.50"></text></g><g><title>mpage_prepare_extent_to_map (12,502,080 samples, 0.02%)</title><rect x="1.1935%" y="1845" width="0.0215%" height="15" fill="rgb(233,141,41)" fg:x="693862619" fg:w="12502080"/><text x="1.4435%" y="1855.50"></text></g><g><title>mpage_process_page_bufs (11,358,561 samples, 0.02%)</title><rect x="1.1955%" y="1829" width="0.0195%" height="15" fill="rgb(239,167,4)" fg:x="695006138" fg:w="11358561"/><text x="1.4455%" y="1839.50"></text></g><g><title>mpage_submit_folio (10,111,497 samples, 0.02%)</title><rect x="1.1976%" y="1813" width="0.0174%" height="15" fill="rgb(209,217,16)" fg:x="696253202" fg:w="10111497"/><text x="1.4476%" y="1823.50"></text></g><g><title>find_get_entry (10,324,513 samples, 0.02%)</title><rect x="1.2306%" y="1813" width="0.0178%" height="15" fill="rgb(219,88,35)" fg:x="715446022" fg:w="10324513"/><text x="1.4806%" y="1823.50"></text></g><g><title>filemap_get_folios_tag (11,322,592 samples, 0.02%)</title><rect x="1.2300%" y="1829" width="0.0195%" height="15" fill="rgb(220,193,23)" fg:x="715053780" fg:w="11322592"/><text x="1.4800%" y="1839.50"></text></g><g><title>lock_acquire (6,735,393 samples, 0.01%)</title><rect x="1.2988%" y="1749" width="0.0116%" height="15" fill="rgb(230,90,52)" fg:x="755077310" fg:w="6735393"/><text x="1.5488%" y="1759.50"></text></g><g><title>__mod_lruvec_page_state (11,343,489 samples, 0.02%)</title><rect x="1.2962%" y="1765" width="0.0195%" height="15" fill="rgb(252,106,19)" fg:x="753562339" fg:w="11343489"/><text x="1.5462%" y="1775.50"></text></g><g><title>_raw_spin_lock_irqsave (12,203,987 samples, 0.02%)</title><rect x="1.3165%" y="1765" width="0.0210%" height="15" fill="rgb(206,74,20)" fg:x="765329721" fg:w="12203987"/><text x="1.5665%" y="1775.50"></text></g><g><title>lock_acquire (10,910,316 samples, 0.02%)</title><rect x="1.3187%" y="1749" width="0.0188%" height="15" fill="rgb(230,138,44)" fg:x="766623392" fg:w="10910316"/><text x="1.5687%" y="1759.50"></text></g><g><title>folio_memcg_lock (6,936,398 samples, 0.01%)</title><rect x="1.3436%" y="1765" width="0.0119%" height="15" fill="rgb(235,182,43)" fg:x="781104951" fg:w="6936398"/><text x="1.5936%" y="1775.50"></text></g><g><title>lock_acquire (6,506,690 samples, 0.01%)</title><rect x="1.3443%" y="1749" width="0.0112%" height="15" fill="rgb(242,16,51)" fg:x="781534659" fg:w="6506690"/><text x="1.5943%" y="1759.50"></text></g><g><title>__folio_start_writeback (51,412,784 samples, 0.09%)</title><rect x="1.2901%" y="1781" width="0.0884%" height="15" fill="rgb(248,9,4)" fg:x="750027179" fg:w="51412784"/><text x="1.5401%" y="1791.50"></text></g><g><title>ext4_bio_write_folio (71,290,956 samples, 0.12%)</title><rect x="1.2819%" y="1797" width="0.1226%" height="15" fill="rgb(210,31,22)" fg:x="745245489" fg:w="71290956"/><text x="1.5319%" y="1807.50"></text></g><g><title>submit_bio (12,296,968 samples, 0.02%)</title><rect x="1.3834%" y="1781" width="0.0212%" height="15" fill="rgb(239,54,39)" fg:x="804239477" fg:w="12296968"/><text x="1.6334%" y="1791.50"></text></g><g><title>submit_bio_noacct (12,296,968 samples, 0.02%)</title><rect x="1.3834%" y="1765" width="0.0212%" height="15" fill="rgb(230,99,41)" fg:x="804239477" fg:w="12296968"/><text x="1.6334%" y="1775.50"></text></g><g><title>submit_bio_noacct_nocheck (12,296,968 samples, 0.02%)</title><rect x="1.3834%" y="1749" width="0.0212%" height="15" fill="rgb(253,106,12)" fg:x="804239477" fg:w="12296968"/><text x="1.6334%" y="1759.50"></text></g><g><title>__submit_bio (12,296,968 samples, 0.02%)</title><rect x="1.3834%" y="1733" width="0.0212%" height="15" fill="rgb(213,46,41)" fg:x="804239477" fg:w="12296968"/><text x="1.6334%" y="1743.50"></text></g><g><title>blk_mq_submit_bio (11,887,366 samples, 0.02%)</title><rect x="1.3841%" y="1717" width="0.0204%" height="15" fill="rgb(215,133,35)" fg:x="804649079" fg:w="11887366"/><text x="1.6341%" y="1727.50"></text></g><g><title>__mod_lruvec_page_state (7,712,061 samples, 0.01%)</title><rect x="1.4061%" y="1781" width="0.0133%" height="15" fill="rgb(213,28,5)" fg:x="817444220" fg:w="7712061"/><text x="1.6561%" y="1791.50"></text></g><g><title>folio_clear_dirty_for_io (16,333,156 samples, 0.03%)</title><rect x="1.4045%" y="1797" width="0.0281%" height="15" fill="rgb(215,77,49)" fg:x="816536445" fg:w="16333156"/><text x="1.6545%" y="1807.50"></text></g><g><title>__writeback_inodes_wb (126,550,753 samples, 0.22%)</title><rect x="1.2158%" y="1941" width="0.2177%" height="15" fill="rgb(248,100,22)" fg:x="706836200" fg:w="126550753"/><text x="1.4658%" y="1951.50"></text></g><g><title>writeback_sb_inodes (126,550,753 samples, 0.22%)</title><rect x="1.2158%" y="1925" width="0.2177%" height="15" fill="rgb(208,67,9)" fg:x="706836200" fg:w="126550753"/><text x="1.4658%" y="1935.50"></text></g><g><title>__writeback_single_inode (125,922,036 samples, 0.22%)</title><rect x="1.2169%" y="1909" width="0.2166%" height="15" fill="rgb(219,133,21)" fg:x="707464917" fg:w="125922036"/><text x="1.4669%" y="1919.50"></text></g><g><title>do_writepages (125,426,662 samples, 0.22%)</title><rect x="1.2178%" y="1893" width="0.2157%" height="15" fill="rgb(246,46,29)" fg:x="707960291" fg:w="125426662"/><text x="1.4678%" y="1903.50"></text></g><g><title>ext4_writepages (125,426,662 samples, 0.22%)</title><rect x="1.2178%" y="1877" width="0.2157%" height="15" fill="rgb(246,185,52)" fg:x="707960291" fg:w="125426662"/><text x="1.4678%" y="1887.50"></text></g><g><title>ext4_do_writepages (125,426,662 samples, 0.22%)</title><rect x="1.2178%" y="1861" width="0.2157%" height="15" fill="rgb(252,136,11)" fg:x="707960291" fg:w="125426662"/><text x="1.4678%" y="1871.50"></text></g><g><title>mpage_prepare_extent_to_map (122,525,048 samples, 0.21%)</title><rect x="1.2228%" y="1845" width="0.2108%" height="15" fill="rgb(219,138,53)" fg:x="710861905" fg:w="122525048"/><text x="1.4728%" y="1855.50"></text></g><g><title>mpage_process_page_bufs (107,010,581 samples, 0.18%)</title><rect x="1.2494%" y="1829" width="0.1841%" height="15" fill="rgb(211,51,23)" fg:x="726376372" fg:w="107010581"/><text x="1.4994%" y="1839.50"></text></g><g><title>mpage_submit_folio (88,141,464 samples, 0.15%)</title><rect x="1.2819%" y="1813" width="0.1516%" height="15" fill="rgb(247,221,28)" fg:x="745245489" fg:w="88141464"/><text x="1.5319%" y="1823.50"></text></g><g><title>kworker/u66:2-f (127,443,194 samples, 0.22%)</title><rect x="1.2150%" y="2069" width="0.2192%" height="15" fill="rgb(251,222,45)" fg:x="706364699" fg:w="127443194"/><text x="1.4650%" y="2079.50"></text></g><g><title>ret_from_fork_asm (127,228,114 samples, 0.22%)</title><rect x="1.2154%" y="2053" width="0.2188%" height="15" fill="rgb(217,162,53)" fg:x="706579779" fg:w="127228114"/><text x="1.4654%" y="2063.50"></text></g><g><title>ret_from_fork (127,228,114 samples, 0.22%)</title><rect x="1.2154%" y="2037" width="0.2188%" height="15" fill="rgb(229,93,14)" fg:x="706579779" fg:w="127228114"/><text x="1.4654%" y="2047.50"></text></g><g><title>kthread (127,228,114 samples, 0.22%)</title><rect x="1.2154%" y="2021" width="0.2188%" height="15" fill="rgb(209,67,49)" fg:x="706579779" fg:w="127228114"/><text x="1.4654%" y="2031.50"></text></g><g><title>worker_thread (127,228,114 samples, 0.22%)</title><rect x="1.2154%" y="2005" width="0.2188%" height="15" fill="rgb(213,87,29)" fg:x="706579779" fg:w="127228114"/><text x="1.4654%" y="2015.50"></text></g><g><title>process_scheduled_works (127,228,114 samples, 0.22%)</title><rect x="1.2154%" y="1989" width="0.2188%" height="15" fill="rgb(205,151,52)" fg:x="706579779" fg:w="127228114"/><text x="1.4654%" y="1999.50"></text></g><g><title>wb_workfn (126,971,693 samples, 0.22%)</title><rect x="1.2158%" y="1973" width="0.2184%" height="15" fill="rgb(253,215,39)" fg:x="706836200" fg:w="126971693"/><text x="1.4658%" y="1983.50"></text></g><g><title>wb_writeback (126,971,693 samples, 0.22%)</title><rect x="1.2158%" y="1957" width="0.2184%" height="15" fill="rgb(221,220,41)" fg:x="706836200" fg:w="126971693"/><text x="1.4658%" y="1967.50"></text></g><g><title>__folio_start_writeback (19,174,736 samples, 0.03%)</title><rect x="1.4605%" y="1781" width="0.0330%" height="15" fill="rgb(218,133,21)" fg:x="849057930" fg:w="19174736"/><text x="1.7105%" y="1791.50"></text></g><g><title>ext4_bio_write_folio (27,125,664 samples, 0.05%)</title><rect x="1.4553%" y="1797" width="0.0467%" height="15" fill="rgb(221,193,43)" fg:x="846077768" fg:w="27125664"/><text x="1.7053%" y="1807.50"></text></g><g><title>mpage_process_page_bufs (41,536,481 samples, 0.07%)</title><rect x="1.4474%" y="1829" width="0.0714%" height="15" fill="rgb(240,128,52)" fg:x="841443970" fg:w="41536481"/><text x="1.6974%" y="1839.50"></text></g><g><title>mpage_submit_folio (37,332,994 samples, 0.06%)</title><rect x="1.4546%" y="1813" width="0.0642%" height="15" fill="rgb(253,114,12)" fg:x="845647457" fg:w="37332994"/><text x="1.7046%" y="1823.50"></text></g><g><title>folio_clear_dirty_for_io (9,777,019 samples, 0.02%)</title><rect x="1.5020%" y="1797" width="0.0168%" height="15" fill="rgb(215,223,47)" fg:x="873203432" fg:w="9777019"/><text x="1.7520%" y="1807.50"></text></g><g><title>kworker/u66:3-f (49,515,189 samples, 0.09%)</title><rect x="1.4342%" y="2069" width="0.0852%" height="15" fill="rgb(248,225,23)" fg:x="833807893" fg:w="49515189"/><text x="1.6842%" y="2079.50"></text></g><g><title>ret_from_fork_asm (49,515,189 samples, 0.09%)</title><rect x="1.4342%" y="2053" width="0.0852%" height="15" fill="rgb(250,108,0)" fg:x="833807893" fg:w="49515189"/><text x="1.6842%" y="2063.50"></text></g><g><title>ret_from_fork (49,515,189 samples, 0.09%)</title><rect x="1.4342%" y="2037" width="0.0852%" height="15" fill="rgb(228,208,7)" fg:x="833807893" fg:w="49515189"/><text x="1.6842%" y="2047.50"></text></g><g><title>kthread (49,515,189 samples, 0.09%)</title><rect x="1.4342%" y="2021" width="0.0852%" height="15" fill="rgb(244,45,10)" fg:x="833807893" fg:w="49515189"/><text x="1.6842%" y="2031.50"></text></g><g><title>worker_thread (49,515,189 samples, 0.09%)</title><rect x="1.4342%" y="2005" width="0.0852%" height="15" fill="rgb(207,125,25)" fg:x="833807893" fg:w="49515189"/><text x="1.6842%" y="2015.50"></text></g><g><title>process_scheduled_works (49,515,189 samples, 0.09%)</title><rect x="1.4342%" y="1989" width="0.0852%" height="15" fill="rgb(210,195,18)" fg:x="833807893" fg:w="49515189"/><text x="1.6842%" y="1999.50"></text></g><g><title>wb_workfn (48,787,204 samples, 0.08%)</title><rect x="1.4355%" y="1973" width="0.0839%" height="15" fill="rgb(249,80,12)" fg:x="834535878" fg:w="48787204"/><text x="1.6855%" y="1983.50"></text></g><g><title>wb_writeback (48,360,534 samples, 0.08%)</title><rect x="1.4362%" y="1957" width="0.0832%" height="15" fill="rgb(221,65,9)" fg:x="834962548" fg:w="48360534"/><text x="1.6862%" y="1967.50"></text></g><g><title>__writeback_inodes_wb (48,360,534 samples, 0.08%)</title><rect x="1.4362%" y="1941" width="0.0832%" height="15" fill="rgb(235,49,36)" fg:x="834962548" fg:w="48360534"/><text x="1.6862%" y="1951.50"></text></g><g><title>writeback_sb_inodes (48,360,534 samples, 0.08%)</title><rect x="1.4362%" y="1925" width="0.0832%" height="15" fill="rgb(225,32,20)" fg:x="834962548" fg:w="48360534"/><text x="1.6862%" y="1935.50"></text></g><g><title>__writeback_single_inode (48,360,534 samples, 0.08%)</title><rect x="1.4362%" y="1909" width="0.0832%" height="15" fill="rgb(215,141,46)" fg:x="834962548" fg:w="48360534"/><text x="1.6862%" y="1919.50"></text></g><g><title>do_writepages (48,360,534 samples, 0.08%)</title><rect x="1.4362%" y="1893" width="0.0832%" height="15" fill="rgb(250,160,47)" fg:x="834962548" fg:w="48360534"/><text x="1.6862%" y="1903.50"></text></g><g><title>ext4_writepages (48,360,534 samples, 0.08%)</title><rect x="1.4362%" y="1877" width="0.0832%" height="15" fill="rgb(216,222,40)" fg:x="834962548" fg:w="48360534"/><text x="1.6862%" y="1887.50"></text></g><g><title>ext4_do_writepages (48,360,534 samples, 0.08%)</title><rect x="1.4362%" y="1861" width="0.0832%" height="15" fill="rgb(234,217,39)" fg:x="834962548" fg:w="48360534"/><text x="1.6862%" y="1871.50"></text></g><g><title>mpage_prepare_extent_to_map (48,360,534 samples, 0.08%)</title><rect x="1.4362%" y="1845" width="0.0832%" height="15" fill="rgb(207,178,40)" fg:x="834962548" fg:w="48360534"/><text x="1.6862%" y="1855.50"></text></g><g><title>find_get_entry (29,841,657 samples, 0.05%)</title><rect x="1.5260%" y="1813" width="0.0513%" height="15" fill="rgb(221,136,13)" fg:x="887172050" fg:w="29841657"/><text x="1.7760%" y="1823.50"></text></g><g><title>filemap_get_folios_tag (32,262,730 samples, 0.06%)</title><rect x="1.5246%" y="1829" width="0.0555%" height="15" fill="rgb(249,199,10)" fg:x="886346308" fg:w="32262730"/><text x="1.7746%" y="1839.50"></text></g><g><title>lock_acquire (10,015,295 samples, 0.02%)</title><rect x="1.6796%" y="1749" width="0.0172%" height="15" fill="rgb(249,222,13)" fg:x="976440780" fg:w="10015295"/><text x="1.9296%" y="1759.50"></text></g><g><title>__mod_lruvec_page_state (20,276,022 samples, 0.03%)</title><rect x="1.6715%" y="1765" width="0.0349%" height="15" fill="rgb(244,185,38)" fg:x="971763033" fg:w="20276022"/><text x="1.9215%" y="1775.50"></text></g><g><title>__lock_acquire (6,343,656 samples, 0.01%)</title><rect x="1.7261%" y="1733" width="0.0109%" height="15" fill="rgb(236,202,9)" fg:x="1003470892" fg:w="6343656"/><text x="1.9761%" y="1743.50"></text></g><g><title>lock_acquire (17,943,275 samples, 0.03%)</title><rect x="1.7156%" y="1749" width="0.0309%" height="15" fill="rgb(250,229,37)" fg:x="997354283" fg:w="17943275"/><text x="1.9656%" y="1759.50"></text></g><g><title>_raw_spin_lock_irqsave (23,593,278 samples, 0.04%)</title><rect x="1.7072%" y="1765" width="0.0406%" height="15" fill="rgb(206,174,23)" fg:x="992485014" fg:w="23593278"/><text x="1.9572%" y="1775.50"></text></g><g><title>_raw_spin_unlock_irqrestore (7,211,929 samples, 0.01%)</title><rect x="1.7478%" y="1765" width="0.0124%" height="15" fill="rgb(211,33,43)" fg:x="1016078292" fg:w="7211929"/><text x="1.9978%" y="1775.50"></text></g><g><title>folio_memcg_lock (10,601,878 samples, 0.02%)</title><rect x="1.7602%" y="1765" width="0.0182%" height="15" fill="rgb(245,58,50)" fg:x="1023290221" fg:w="10601878"/><text x="2.0102%" y="1775.50"></text></g><g><title>lock_acquire (9,099,390 samples, 0.02%)</title><rect x="1.7628%" y="1749" width="0.0157%" height="15" fill="rgb(244,68,36)" fg:x="1024792709" fg:w="9099390"/><text x="2.0128%" y="1759.50"></text></g><g><title>lock_is_held_type (17,374,468 samples, 0.03%)</title><rect x="1.7876%" y="1765" width="0.0299%" height="15" fill="rgb(232,229,15)" fg:x="1039237081" fg:w="17374468"/><text x="2.0376%" y="1775.50"></text></g><g><title>match_held_lock (8,350,254 samples, 0.01%)</title><rect x="1.8031%" y="1749" width="0.0144%" height="15" fill="rgb(254,30,23)" fg:x="1048261295" fg:w="8350254"/><text x="2.0531%" y="1759.50"></text></g><g><title>__folio_start_writeback (106,203,522 samples, 0.18%)</title><rect x="1.6578%" y="1781" width="0.1827%" height="15" fill="rgb(235,160,14)" fg:x="963762909" fg:w="106203522"/><text x="1.9078%" y="1791.50"></text></g><g><title>__rq_qos_throttle (5,824,913 samples, 0.01%)</title><rect x="1.8589%" y="1701" width="0.0100%" height="15" fill="rgb(212,155,44)" fg:x="1080711739" fg:w="5824913"/><text x="2.1089%" y="1711.50"></text></g><g><title>wbt_wait (5,824,913 samples, 0.01%)</title><rect x="1.8589%" y="1685" width="0.0100%" height="15" fill="rgb(226,2,50)" fg:x="1080711739" fg:w="5824913"/><text x="2.1089%" y="1695.50"></text></g><g><title>rq_qos_wait (5,824,913 samples, 0.01%)</title><rect x="1.8589%" y="1669" width="0.0100%" height="15" fill="rgb(234,177,6)" fg:x="1080711739" fg:w="5824913"/><text x="2.1089%" y="1679.50"></text></g><g><title>submit_bio (12,927,442 samples, 0.02%)</title><rect x="1.8556%" y="1781" width="0.0222%" height="15" fill="rgb(217,24,9)" fg:x="1078771255" fg:w="12927442"/><text x="2.1056%" y="1791.50"></text></g><g><title>submit_bio_noacct (12,927,442 samples, 0.02%)</title><rect x="1.8556%" y="1765" width="0.0222%" height="15" fill="rgb(220,13,46)" fg:x="1078771255" fg:w="12927442"/><text x="2.1056%" y="1775.50"></text></g><g><title>submit_bio_noacct_nocheck (12,927,442 samples, 0.02%)</title><rect x="1.8556%" y="1749" width="0.0222%" height="15" fill="rgb(239,221,27)" fg:x="1078771255" fg:w="12927442"/><text x="2.1056%" y="1759.50"></text></g><g><title>__submit_bio (12,927,442 samples, 0.02%)</title><rect x="1.8556%" y="1733" width="0.0222%" height="15" fill="rgb(222,198,25)" fg:x="1078771255" fg:w="12927442"/><text x="2.1056%" y="1743.50"></text></g><g><title>blk_mq_submit_bio (12,927,442 samples, 0.02%)</title><rect x="1.8556%" y="1717" width="0.0222%" height="15" fill="rgb(211,99,13)" fg:x="1078771255" fg:w="12927442"/><text x="2.1056%" y="1727.50"></text></g><g><title>ext4_bio_write_folio (136,318,456 samples, 0.23%)</title><rect x="1.6466%" y="1797" width="0.2345%" height="15" fill="rgb(232,111,31)" fg:x="957289361" fg:w="136318456"/><text x="1.8966%" y="1807.50"></text></g><g><title>__lock_acquire (6,713,956 samples, 0.01%)</title><rect x="1.9013%" y="1749" width="0.0115%" height="15" fill="rgb(245,82,37)" fg:x="1105363181" fg:w="6713956"/><text x="2.1513%" y="1759.50"></text></g><g><title>lock_acquire (10,576,645 samples, 0.02%)</title><rect x="1.8962%" y="1765" width="0.0182%" height="15" fill="rgb(227,149,46)" fg:x="1102354413" fg:w="10576645"/><text x="2.1462%" y="1775.50"></text></g><g><title>__mod_lruvec_page_state (20,356,479 samples, 0.04%)</title><rect x="1.8882%" y="1781" width="0.0350%" height="15" fill="rgb(218,36,50)" fg:x="1097743154" fg:w="20356479"/><text x="2.1382%" y="1791.50"></text></g><g><title>lock_acquire (9,733,099 samples, 0.02%)</title><rect x="1.9251%" y="1781" width="0.0167%" height="15" fill="rgb(226,80,48)" fg:x="1119160735" fg:w="9733099"/><text x="2.1751%" y="1791.50"></text></g><g><title>__writeback_single_inode (251,041,029 samples, 0.43%)</title><rect x="1.5194%" y="1909" width="0.4318%" height="15" fill="rgb(238,224,15)" fg:x="883323082" fg:w="251041029"/><text x="1.7694%" y="1919.50"></text></g><g><title>do_writepages (251,041,029 samples, 0.43%)</title><rect x="1.5194%" y="1893" width="0.4318%" height="15" fill="rgb(241,136,10)" fg:x="883323082" fg:w="251041029"/><text x="1.7694%" y="1903.50"></text></g><g><title>ext4_writepages (251,041,029 samples, 0.43%)</title><rect x="1.5194%" y="1877" width="0.4318%" height="15" fill="rgb(208,32,45)" fg:x="883323082" fg:w="251041029"/><text x="1.7694%" y="1887.50"></text></g><g><title>ext4_do_writepages (251,041,029 samples, 0.43%)</title><rect x="1.5194%" y="1861" width="0.4318%" height="15" fill="rgb(207,135,9)" fg:x="883323082" fg:w="251041029"/><text x="1.7694%" y="1871.50"></text></g><g><title>mpage_prepare_extent_to_map (249,315,982 samples, 0.43%)</title><rect x="1.5224%" y="1845" width="0.4289%" height="15" fill="rgb(206,86,44)" fg:x="885048129" fg:w="249315982"/><text x="1.7724%" y="1855.50"></text></g><g><title>mpage_process_page_bufs (215,294,055 samples, 0.37%)</title><rect x="1.5809%" y="1829" width="0.3703%" height="15" fill="rgb(245,177,15)" fg:x="919070056" fg:w="215294055"/><text x="1.8309%" y="1839.50"></text></g><g><title>mpage_submit_folio (179,177,276 samples, 0.31%)</title><rect x="1.6430%" y="1813" width="0.3082%" height="15" fill="rgb(206,64,50)" fg:x="955186835" fg:w="179177276"/><text x="1.8930%" y="1823.50"></text></g><g><title>folio_clear_dirty_for_io (40,756,294 samples, 0.07%)</title><rect x="1.8811%" y="1797" width="0.0701%" height="15" fill="rgb(234,36,40)" fg:x="1093607817" fg:w="40756294"/><text x="2.1311%" y="1807.50"></text></g><g><title>kworker/u67:1-f (252,070,909 samples, 0.43%)</title><rect x="1.5194%" y="2069" width="0.4336%" height="15" fill="rgb(213,64,8)" fg:x="883323082" fg:w="252070909"/><text x="1.7694%" y="2079.50"></text></g><g><title>ret_from_fork_asm (252,070,909 samples, 0.43%)</title><rect x="1.5194%" y="2053" width="0.4336%" height="15" fill="rgb(210,75,36)" fg:x="883323082" fg:w="252070909"/><text x="1.7694%" y="2063.50"></text></g><g><title>ret_from_fork (252,070,909 samples, 0.43%)</title><rect x="1.5194%" y="2037" width="0.4336%" height="15" fill="rgb(229,88,21)" fg:x="883323082" fg:w="252070909"/><text x="1.7694%" y="2047.50"></text></g><g><title>kthread (252,070,909 samples, 0.43%)</title><rect x="1.5194%" y="2021" width="0.4336%" height="15" fill="rgb(252,204,47)" fg:x="883323082" fg:w="252070909"/><text x="1.7694%" y="2031.50"></text></g><g><title>worker_thread (252,070,909 samples, 0.43%)</title><rect x="1.5194%" y="2005" width="0.4336%" height="15" fill="rgb(208,77,27)" fg:x="883323082" fg:w="252070909"/><text x="1.7694%" y="2015.50"></text></g><g><title>process_scheduled_works (252,070,909 samples, 0.43%)</title><rect x="1.5194%" y="1989" width="0.4336%" height="15" fill="rgb(221,76,26)" fg:x="883323082" fg:w="252070909"/><text x="1.7694%" y="1999.50"></text></g><g><title>wb_workfn (252,070,909 samples, 0.43%)</title><rect x="1.5194%" y="1973" width="0.4336%" height="15" fill="rgb(225,139,18)" fg:x="883323082" fg:w="252070909"/><text x="1.7694%" y="1983.50"></text></g><g><title>wb_writeback (252,070,909 samples, 0.43%)</title><rect x="1.5194%" y="1957" width="0.4336%" height="15" fill="rgb(230,137,11)" fg:x="883323082" fg:w="252070909"/><text x="1.7694%" y="1967.50"></text></g><g><title>__writeback_inodes_wb (252,070,909 samples, 0.43%)</title><rect x="1.5194%" y="1941" width="0.4336%" height="15" fill="rgb(212,28,1)" fg:x="883323082" fg:w="252070909"/><text x="1.7694%" y="1951.50"></text></g><g><title>writeback_sb_inodes (252,070,909 samples, 0.43%)</title><rect x="1.5194%" y="1925" width="0.4336%" height="15" fill="rgb(248,164,17)" fg:x="883323082" fg:w="252070909"/><text x="1.7694%" y="1935.50"></text></g><g><title>find_get_entry (11,553,415 samples, 0.02%)</title><rect x="1.9620%" y="1813" width="0.0199%" height="15" fill="rgb(222,171,42)" fg:x="1140632318" fg:w="11553415"/><text x="2.2120%" y="1823.50"></text></g><g><title>filemap_get_folios_tag (12,070,484 samples, 0.02%)</title><rect x="1.9620%" y="1829" width="0.0208%" height="15" fill="rgb(243,84,45)" fg:x="1140632318" fg:w="12070484"/><text x="2.2120%" y="1839.50"></text></g><g><title>__mod_lruvec_page_state (7,843,321 samples, 0.01%)</title><rect x="2.0209%" y="1765" width="0.0135%" height="15" fill="rgb(252,49,23)" fg:x="1174864326" fg:w="7843321"/><text x="2.2709%" y="1775.50"></text></g><g><title>_raw_spin_lock_irqsave (7,040,480 samples, 0.01%)</title><rect x="2.0344%" y="1765" width="0.0121%" height="15" fill="rgb(215,19,7)" fg:x="1182707647" fg:w="7040480"/><text x="2.2844%" y="1775.50"></text></g><g><title>lock_is_held_type (6,092,992 samples, 0.01%)</title><rect x="2.0642%" y="1765" width="0.0105%" height="15" fill="rgb(238,81,41)" fg:x="1200062054" fg:w="6092992"/><text x="2.3142%" y="1775.50"></text></g><g><title>__folio_start_writeback (36,732,860 samples, 0.06%)</title><rect x="2.0172%" y="1781" width="0.0632%" height="15" fill="rgb(210,199,37)" fg:x="1172718908" fg:w="36732860"/><text x="2.2672%" y="1791.50"></text></g><g><title>ext4_bio_write_folio (55,306,733 samples, 0.10%)</title><rect x="2.0044%" y="1797" width="0.0951%" height="15" fill="rgb(244,192,49)" fg:x="1165296077" fg:w="55306733"/><text x="2.2544%" y="1807.50"></text></g><g><title>submit_bio (6,331,474 samples, 0.01%)</title><rect x="2.0887%" y="1781" width="0.0109%" height="15" fill="rgb(226,211,11)" fg:x="1214271336" fg:w="6331474"/><text x="2.3387%" y="1791.50"></text></g><g><title>submit_bio_noacct (6,331,474 samples, 0.01%)</title><rect x="2.0887%" y="1765" width="0.0109%" height="15" fill="rgb(236,162,54)" fg:x="1214271336" fg:w="6331474"/><text x="2.3387%" y="1775.50"></text></g><g><title>submit_bio_noacct_nocheck (6,331,474 samples, 0.01%)</title><rect x="2.0887%" y="1749" width="0.0109%" height="15" fill="rgb(220,229,9)" fg:x="1214271336" fg:w="6331474"/><text x="2.3387%" y="1759.50"></text></g><g><title>__submit_bio (6,331,474 samples, 0.01%)</title><rect x="2.0887%" y="1733" width="0.0109%" height="15" fill="rgb(250,87,22)" fg:x="1214271336" fg:w="6331474"/><text x="2.3387%" y="1743.50"></text></g><g><title>blk_mq_submit_bio (6,331,474 samples, 0.01%)</title><rect x="2.0887%" y="1717" width="0.0109%" height="15" fill="rgb(239,43,17)" fg:x="1214271336" fg:w="6331474"/><text x="2.3387%" y="1727.50"></text></g><g><title>folio_clear_dirty_for_io (13,037,254 samples, 0.02%)</title><rect x="2.0996%" y="1797" width="0.0224%" height="15" fill="rgb(231,177,25)" fg:x="1220602810" fg:w="13037254"/><text x="2.3496%" y="1807.50"></text></g><g><title>__writeback_inodes_wb (99,125,487 samples, 0.17%)</title><rect x="1.9530%" y="1941" width="0.1705%" height="15" fill="rgb(219,179,1)" fg:x="1135393991" fg:w="99125487"/><text x="2.2030%" y="1951.50"></text></g><g><title>writeback_sb_inodes (99,125,487 samples, 0.17%)</title><rect x="1.9530%" y="1925" width="0.1705%" height="15" fill="rgb(238,219,53)" fg:x="1135393991" fg:w="99125487"/><text x="2.2030%" y="1935.50"></text></g><g><title>__writeback_single_inode (99,125,487 samples, 0.17%)</title><rect x="1.9530%" y="1909" width="0.1705%" height="15" fill="rgb(232,167,36)" fg:x="1135393991" fg:w="99125487"/><text x="2.2030%" y="1919.50"></text></g><g><title>do_writepages (99,125,487 samples, 0.17%)</title><rect x="1.9530%" y="1893" width="0.1705%" height="15" fill="rgb(244,19,51)" fg:x="1135393991" fg:w="99125487"/><text x="2.2030%" y="1903.50"></text></g><g><title>ext4_writepages (99,125,487 samples, 0.17%)</title><rect x="1.9530%" y="1877" width="0.1705%" height="15" fill="rgb(224,6,22)" fg:x="1135393991" fg:w="99125487"/><text x="2.2030%" y="1887.50"></text></g><g><title>ext4_do_writepages (99,125,487 samples, 0.17%)</title><rect x="1.9530%" y="1861" width="0.1705%" height="15" fill="rgb(224,145,5)" fg:x="1135393991" fg:w="99125487"/><text x="2.2030%" y="1871.50"></text></g><g><title>mpage_prepare_extent_to_map (97,793,023 samples, 0.17%)</title><rect x="1.9553%" y="1845" width="0.1682%" height="15" fill="rgb(234,130,49)" fg:x="1136726455" fg:w="97793023"/><text x="2.2053%" y="1855.50"></text></g><g><title>mpage_process_page_bufs (81,816,676 samples, 0.14%)</title><rect x="1.9828%" y="1829" width="0.1407%" height="15" fill="rgb(254,6,2)" fg:x="1152702802" fg:w="81816676"/><text x="2.2328%" y="1839.50"></text></g><g><title>mpage_submit_folio (70,210,661 samples, 0.12%)</title><rect x="2.0027%" y="1813" width="0.1208%" height="15" fill="rgb(208,96,46)" fg:x="1164308817" fg:w="70210661"/><text x="2.2527%" y="1823.50"></text></g><g><title>kworker/u67:2-f (99,525,225 samples, 0.17%)</title><rect x="1.9530%" y="2069" width="0.1712%" height="15" fill="rgb(239,3,39)" fg:x="1135393991" fg:w="99525225"/><text x="2.2030%" y="2079.50"></text></g><g><title>ret_from_fork_asm (99,525,225 samples, 0.17%)</title><rect x="1.9530%" y="2053" width="0.1712%" height="15" fill="rgb(233,210,1)" fg:x="1135393991" fg:w="99525225"/><text x="2.2030%" y="2063.50"></text></g><g><title>ret_from_fork (99,525,225 samples, 0.17%)</title><rect x="1.9530%" y="2037" width="0.1712%" height="15" fill="rgb(244,137,37)" fg:x="1135393991" fg:w="99525225"/><text x="2.2030%" y="2047.50"></text></g><g><title>kthread (99,525,225 samples, 0.17%)</title><rect x="1.9530%" y="2021" width="0.1712%" height="15" fill="rgb(240,136,2)" fg:x="1135393991" fg:w="99525225"/><text x="2.2030%" y="2031.50"></text></g><g><title>worker_thread (99,525,225 samples, 0.17%)</title><rect x="1.9530%" y="2005" width="0.1712%" height="15" fill="rgb(239,18,37)" fg:x="1135393991" fg:w="99525225"/><text x="2.2030%" y="2015.50"></text></g><g><title>process_scheduled_works (99,525,225 samples, 0.17%)</title><rect x="1.9530%" y="1989" width="0.1712%" height="15" fill="rgb(218,185,22)" fg:x="1135393991" fg:w="99525225"/><text x="2.2030%" y="1999.50"></text></g><g><title>wb_workfn (99,525,225 samples, 0.17%)</title><rect x="1.9530%" y="1973" width="0.1712%" height="15" fill="rgb(225,218,4)" fg:x="1135393991" fg:w="99525225"/><text x="2.2030%" y="1983.50"></text></g><g><title>wb_writeback (99,525,225 samples, 0.17%)</title><rect x="1.9530%" y="1957" width="0.1712%" height="15" fill="rgb(230,182,32)" fg:x="1135393991" fg:w="99525225"/><text x="2.2030%" y="1967.50"></text></g><g><title>find_get_entry (8,334,425 samples, 0.01%)</title><rect x="2.1375%" y="1813" width="0.0143%" height="15" fill="rgb(242,56,43)" fg:x="1242640586" fg:w="8334425"/><text x="2.3875%" y="1823.50"></text></g><g><title>filemap_get_folios_tag (9,185,529 samples, 0.02%)</title><rect x="2.1366%" y="1829" width="0.0158%" height="15" fill="rgb(233,99,24)" fg:x="1242155755" fg:w="9185529"/><text x="2.3866%" y="1839.50"></text></g><g><title>lock_acquire (6,808,999 samples, 0.01%)</title><rect x="2.2056%" y="1749" width="0.0117%" height="15" fill="rgb(234,209,42)" fg:x="1282234030" fg:w="6808999"/><text x="2.4556%" y="1759.50"></text></g><g><title>__mod_lruvec_page_state (11,790,293 samples, 0.02%)</title><rect x="2.2018%" y="1765" width="0.0203%" height="15" fill="rgb(227,7,12)" fg:x="1280024092" fg:w="11790293"/><text x="2.4518%" y="1775.50"></text></g><g><title>_raw_spin_lock_irqsave (7,566,170 samples, 0.01%)</title><rect x="2.2231%" y="1765" width="0.0130%" height="15" fill="rgb(245,203,43)" fg:x="1292410136" fg:w="7566170"/><text x="2.4731%" y="1775.50"></text></g><g><title>lock_acquire (6,743,921 samples, 0.01%)</title><rect x="2.2245%" y="1749" width="0.0116%" height="15" fill="rgb(238,205,33)" fg:x="1293232385" fg:w="6743921"/><text x="2.4745%" y="1759.50"></text></g><g><title>folio_memcg_lock (7,755,774 samples, 0.01%)</title><rect x="2.2404%" y="1765" width="0.0133%" height="15" fill="rgb(231,56,7)" fg:x="1302470394" fg:w="7755774"/><text x="2.4904%" y="1775.50"></text></g><g><title>lock_acquire (7,755,774 samples, 0.01%)</title><rect x="2.2404%" y="1749" width="0.0133%" height="15" fill="rgb(244,186,29)" fg:x="1302470394" fg:w="7755774"/><text x="2.4904%" y="1759.50"></text></g><g><title>folio_memcg_unlock (6,361,158 samples, 0.01%)</title><rect x="2.2537%" y="1765" width="0.0109%" height="15" fill="rgb(234,111,31)" fg:x="1310226168" fg:w="6361158"/><text x="2.5037%" y="1775.50"></text></g><g><title>lock_release (6,361,158 samples, 0.01%)</title><rect x="2.2537%" y="1749" width="0.0109%" height="15" fill="rgb(241,149,10)" fg:x="1310226168" fg:w="6361158"/><text x="2.5037%" y="1759.50"></text></g><g><title>lock_is_held_type (7,583,177 samples, 0.01%)</title><rect x="2.2647%" y="1765" width="0.0130%" height="15" fill="rgb(249,206,44)" fg:x="1316587326" fg:w="7583177"/><text x="2.5147%" y="1775.50"></text></g><g><title>__folio_start_writeback (54,063,531 samples, 0.09%)</title><rect x="2.1946%" y="1781" width="0.0930%" height="15" fill="rgb(251,153,30)" fg:x="1275844983" fg:w="54063531"/><text x="2.4446%" y="1791.50"></text></g><g><title>__submit_bio (11,689,854 samples, 0.02%)</title><rect x="2.2986%" y="1733" width="0.0201%" height="15" fill="rgb(239,152,38)" fg:x="1336325467" fg:w="11689854"/><text x="2.5486%" y="1743.50"></text></g><g><title>blk_mq_submit_bio (11,689,854 samples, 0.02%)</title><rect x="2.2986%" y="1717" width="0.0201%" height="15" fill="rgb(249,139,47)" fg:x="1336325467" fg:w="11689854"/><text x="2.5486%" y="1727.50"></text></g><g><title>ext4_bio_write_folio (75,890,804 samples, 0.13%)</title><rect x="2.1890%" y="1797" width="0.1305%" height="15" fill="rgb(244,64,35)" fg:x="1272603484" fg:w="75890804"/><text x="2.4390%" y="1807.50"></text></g><g><title>submit_bio (12,726,010 samples, 0.02%)</title><rect x="2.2977%" y="1781" width="0.0219%" height="15" fill="rgb(216,46,15)" fg:x="1335768278" fg:w="12726010"/><text x="2.5477%" y="1791.50"></text></g><g><title>submit_bio_noacct (12,726,010 samples, 0.02%)</title><rect x="2.2977%" y="1765" width="0.0219%" height="15" fill="rgb(250,74,19)" fg:x="1335768278" fg:w="12726010"/><text x="2.5477%" y="1775.50"></text></g><g><title>submit_bio_noacct_nocheck (12,168,821 samples, 0.02%)</title><rect x="2.2986%" y="1749" width="0.0209%" height="15" fill="rgb(249,42,33)" fg:x="1336325467" fg:w="12168821"/><text x="2.5486%" y="1759.50"></text></g><g><title>__mod_lruvec_page_state (12,012,355 samples, 0.02%)</title><rect x="2.3241%" y="1781" width="0.0207%" height="15" fill="rgb(242,149,17)" fg:x="1351157625" fg:w="12012355"/><text x="2.5741%" y="1791.50"></text></g><g><title>__writeback_inodes_wb (135,195,593 samples, 0.23%)</title><rect x="2.1266%" y="1941" width="0.2326%" height="15" fill="rgb(244,29,21)" fg:x="1236329253" fg:w="135195593"/><text x="2.3766%" y="1951.50"></text></g><g><title>writeback_sb_inodes (135,195,593 samples, 0.23%)</title><rect x="2.1266%" y="1925" width="0.2326%" height="15" fill="rgb(220,130,37)" fg:x="1236329253" fg:w="135195593"/><text x="2.3766%" y="1935.50"></text></g><g><title>__writeback_single_inode (135,195,593 samples, 0.23%)</title><rect x="2.1266%" y="1909" width="0.2326%" height="15" fill="rgb(211,67,2)" fg:x="1236329253" fg:w="135195593"/><text x="2.3766%" y="1919.50"></text></g><g><title>do_writepages (135,195,593 samples, 0.23%)</title><rect x="2.1266%" y="1893" width="0.2326%" height="15" fill="rgb(235,68,52)" fg:x="1236329253" fg:w="135195593"/><text x="2.3766%" y="1903.50"></text></g><g><title>ext4_writepages (135,195,593 samples, 0.23%)</title><rect x="2.1266%" y="1877" width="0.2326%" height="15" fill="rgb(246,142,3)" fg:x="1236329253" fg:w="135195593"/><text x="2.3766%" y="1887.50"></text></g><g><title>ext4_do_writepages (135,195,593 samples, 0.23%)</title><rect x="2.1266%" y="1861" width="0.2326%" height="15" fill="rgb(241,25,7)" fg:x="1236329253" fg:w="135195593"/><text x="2.3766%" y="1871.50"></text></g><g><title>mpage_prepare_extent_to_map (131,688,155 samples, 0.23%)</title><rect x="2.1327%" y="1845" width="0.2265%" height="15" fill="rgb(242,119,39)" fg:x="1239836691" fg:w="131688155"/><text x="2.3827%" y="1855.50"></text></g><g><title>mpage_process_page_bufs (119,663,052 samples, 0.21%)</title><rect x="2.1533%" y="1829" width="0.2058%" height="15" fill="rgb(241,98,45)" fg:x="1251861794" fg:w="119663052"/><text x="2.4033%" y="1839.50"></text></g><g><title>mpage_submit_folio (99,894,656 samples, 0.17%)</title><rect x="2.1873%" y="1813" width="0.1718%" height="15" fill="rgb(254,28,30)" fg:x="1271630190" fg:w="99894656"/><text x="2.4373%" y="1823.50"></text></g><g><title>folio_clear_dirty_for_io (23,030,558 samples, 0.04%)</title><rect x="2.3196%" y="1797" width="0.0396%" height="15" fill="rgb(241,142,54)" fg:x="1348494288" fg:w="23030558"/><text x="2.5696%" y="1807.50"></text></g><g><title>process_scheduled_works (137,636,933 samples, 0.24%)</title><rect x="2.1242%" y="1989" width="0.2368%" height="15" fill="rgb(222,85,15)" fg:x="1234919216" fg:w="137636933"/><text x="2.3742%" y="1999.50"></text></g><g><title>wb_workfn (137,636,933 samples, 0.24%)</title><rect x="2.1242%" y="1973" width="0.2368%" height="15" fill="rgb(210,85,47)" fg:x="1234919216" fg:w="137636933"/><text x="2.3742%" y="1983.50"></text></g><g><title>wb_writeback (136,820,213 samples, 0.24%)</title><rect x="2.1256%" y="1957" width="0.2353%" height="15" fill="rgb(224,206,25)" fg:x="1235735936" fg:w="136820213"/><text x="2.3756%" y="1967.50"></text></g><g><title>kworker/u68:1-f (137,725,512 samples, 0.24%)</title><rect x="2.1242%" y="2069" width="0.2369%" height="15" fill="rgb(243,201,19)" fg:x="1234919216" fg:w="137725512"/><text x="2.3742%" y="2079.50"></text></g><g><title>ret_from_fork_asm (137,725,512 samples, 0.24%)</title><rect x="2.1242%" y="2053" width="0.2369%" height="15" fill="rgb(236,59,4)" fg:x="1234919216" fg:w="137725512"/><text x="2.3742%" y="2063.50"></text></g><g><title>ret_from_fork (137,725,512 samples, 0.24%)</title><rect x="2.1242%" y="2037" width="0.2369%" height="15" fill="rgb(254,179,45)" fg:x="1234919216" fg:w="137725512"/><text x="2.3742%" y="2047.50"></text></g><g><title>kthread (137,725,512 samples, 0.24%)</title><rect x="2.1242%" y="2021" width="0.2369%" height="15" fill="rgb(226,14,10)" fg:x="1234919216" fg:w="137725512"/><text x="2.3742%" y="2031.50"></text></g><g><title>worker_thread (137,725,512 samples, 0.24%)</title><rect x="2.1242%" y="2005" width="0.2369%" height="15" fill="rgb(244,27,41)" fg:x="1234919216" fg:w="137725512"/><text x="2.3742%" y="2015.50"></text></g><g><title>kworker/u68:3-f (10,060,433 samples, 0.02%)</title><rect x="2.3611%" y="2069" width="0.0173%" height="15" fill="rgb(235,35,32)" fg:x="1372644728" fg:w="10060433"/><text x="2.6111%" y="2079.50"></text></g><g><title>ret_from_fork_asm (10,060,433 samples, 0.02%)</title><rect x="2.3611%" y="2053" width="0.0173%" height="15" fill="rgb(218,68,31)" fg:x="1372644728" fg:w="10060433"/><text x="2.6111%" y="2063.50"></text></g><g><title>ret_from_fork (10,060,433 samples, 0.02%)</title><rect x="2.3611%" y="2037" width="0.0173%" height="15" fill="rgb(207,120,37)" fg:x="1372644728" fg:w="10060433"/><text x="2.6111%" y="2047.50"></text></g><g><title>kthread (10,060,433 samples, 0.02%)</title><rect x="2.3611%" y="2021" width="0.0173%" height="15" fill="rgb(227,98,0)" fg:x="1372644728" fg:w="10060433"/><text x="2.6111%" y="2031.50"></text></g><g><title>worker_thread (10,060,433 samples, 0.02%)</title><rect x="2.3611%" y="2005" width="0.0173%" height="15" fill="rgb(207,7,3)" fg:x="1372644728" fg:w="10060433"/><text x="2.6111%" y="2015.50"></text></g><g><title>process_scheduled_works (10,060,433 samples, 0.02%)</title><rect x="2.3611%" y="1989" width="0.0173%" height="15" fill="rgb(206,98,19)" fg:x="1372644728" fg:w="10060433"/><text x="2.6111%" y="1999.50"></text></g><g><title>wb_workfn (10,060,433 samples, 0.02%)</title><rect x="2.3611%" y="1973" width="0.0173%" height="15" fill="rgb(217,5,26)" fg:x="1372644728" fg:w="10060433"/><text x="2.6111%" y="1983.50"></text></g><g><title>wb_writeback (9,266,255 samples, 0.02%)</title><rect x="2.3625%" y="1957" width="0.0159%" height="15" fill="rgb(235,190,38)" fg:x="1373438906" fg:w="9266255"/><text x="2.6125%" y="1967.50"></text></g><g><title>__writeback_inodes_wb (9,266,255 samples, 0.02%)</title><rect x="2.3625%" y="1941" width="0.0159%" height="15" fill="rgb(247,86,24)" fg:x="1373438906" fg:w="9266255"/><text x="2.6125%" y="1951.50"></text></g><g><title>writeback_sb_inodes (9,266,255 samples, 0.02%)</title><rect x="2.3625%" y="1925" width="0.0159%" height="15" fill="rgb(205,101,16)" fg:x="1373438906" fg:w="9266255"/><text x="2.6125%" y="1935.50"></text></g><g><title>__writeback_single_inode (9,266,255 samples, 0.02%)</title><rect x="2.3625%" y="1909" width="0.0159%" height="15" fill="rgb(246,168,33)" fg:x="1373438906" fg:w="9266255"/><text x="2.6125%" y="1919.50"></text></g><g><title>do_writepages (9,266,255 samples, 0.02%)</title><rect x="2.3625%" y="1893" width="0.0159%" height="15" fill="rgb(231,114,1)" fg:x="1373438906" fg:w="9266255"/><text x="2.6125%" y="1903.50"></text></g><g><title>ext4_writepages (9,266,255 samples, 0.02%)</title><rect x="2.3625%" y="1877" width="0.0159%" height="15" fill="rgb(207,184,53)" fg:x="1373438906" fg:w="9266255"/><text x="2.6125%" y="1887.50"></text></g><g><title>ext4_do_writepages (9,266,255 samples, 0.02%)</title><rect x="2.3625%" y="1861" width="0.0159%" height="15" fill="rgb(224,95,51)" fg:x="1373438906" fg:w="9266255"/><text x="2.6125%" y="1871.50"></text></g><g><title>mpage_prepare_extent_to_map (8,881,070 samples, 0.02%)</title><rect x="2.3631%" y="1845" width="0.0153%" height="15" fill="rgb(212,188,45)" fg:x="1373824091" fg:w="8881070"/><text x="2.6131%" y="1855.50"></text></g><g><title>mpage_process_page_bufs (6,324,025 samples, 0.01%)</title><rect x="2.3675%" y="1829" width="0.0109%" height="15" fill="rgb(223,154,38)" fg:x="1376381136" fg:w="6324025"/><text x="2.6175%" y="1839.50"></text></g><g><title>filename_lookup (7,481,610 samples, 0.01%)</title><rect x="2.4121%" y="1941" width="0.0129%" height="15" fill="rgb(251,22,52)" fg:x="1402269299" fg:w="7481610"/><text x="2.6621%" y="1951.50"></text></g><g><title>path_lookupat (6,687,868 samples, 0.01%)</title><rect x="2.4134%" y="1925" width="0.0115%" height="15" fill="rgb(229,209,22)" fg:x="1403063041" fg:w="6687868"/><text x="2.6634%" y="1935.50"></text></g><g><title>user_path_at_empty (10,496,459 samples, 0.02%)</title><rect x="2.4121%" y="1957" width="0.0181%" height="15" fill="rgb(234,138,34)" fg:x="1402269299" fg:w="10496459"/><text x="2.6621%" y="1967.50"></text></g><g><title>__x64_sys_readlink (21,196,367 samples, 0.04%)</title><rect x="2.4043%" y="1989" width="0.0365%" height="15" fill="rgb(212,95,11)" fg:x="1397755957" fg:w="21196367"/><text x="2.6543%" y="1999.50"></text></g><g><title>do_readlinkat (21,196,367 samples, 0.04%)</title><rect x="2.4043%" y="1973" width="0.0365%" height="15" fill="rgb(240,179,47)" fg:x="1397755957" fg:w="21196367"/><text x="2.6543%" y="1983.50"></text></g><g><title>vfs_readlink (6,186,566 samples, 0.01%)</title><rect x="2.4301%" y="1957" width="0.0106%" height="15" fill="rgb(240,163,11)" fg:x="1412765758" fg:w="6186566"/><text x="2.6801%" y="1967.50"></text></g><g><title>proc_pid_readlink (6,186,566 samples, 0.01%)</title><rect x="2.4301%" y="1941" width="0.0106%" height="15" fill="rgb(236,37,12)" fg:x="1412765758" fg:w="6186566"/><text x="2.6801%" y="1951.50"></text></g><g><title>entry_SYSCALL_64 (24,230,707 samples, 0.04%)</title><rect x="2.4029%" y="2021" width="0.0417%" height="15" fill="rgb(232,164,16)" fg:x="1396961445" fg:w="24230707"/><text x="2.6529%" y="2031.50"></text></g><g><title>do_syscall_64 (23,436,195 samples, 0.04%)</title><rect x="2.4043%" y="2005" width="0.0403%" height="15" fill="rgb(244,205,15)" fg:x="1397755957" fg:w="23436195"/><text x="2.6543%" y="2015.50"></text></g><g><title>__GI___readlink (25,803,913 samples, 0.04%)</title><rect x="2.4016%" y="2037" width="0.0444%" height="15" fill="rgb(223,117,47)" fg:x="1396178707" fg:w="25803913"/><text x="2.6516%" y="2047.50"></text></g><g><title>[unknown] (33,464,827 samples, 0.06%)</title><rect x="2.3937%" y="2053" width="0.0576%" height="15" fill="rgb(244,107,35)" fg:x="1391596687" fg:w="33464827"/><text x="2.6437%" y="2063.50"></text></g><g><title>ls (47,907,850 samples, 0.08%)</title><rect x="2.3923%" y="2069" width="0.0824%" height="15" fill="rgb(205,140,8)" fg:x="1390801512" fg:w="47907850"/><text x="2.6423%" y="2079.50"></text></g><g><title>statx (9,774,532 samples, 0.02%)</title><rect x="2.4579%" y="2053" width="0.0168%" height="15" fill="rgb(228,84,46)" fg:x="1428934830" fg:w="9774532"/><text x="2.7079%" y="2063.50"></text></g><g><title>entry_SYSCALL_64 (8,999,187 samples, 0.02%)</title><rect x="2.4593%" y="2037" width="0.0155%" height="15" fill="rgb(254,188,9)" fg:x="1429710175" fg:w="8999187"/><text x="2.7093%" y="2047.50"></text></g><g><title>do_syscall_64 (8,227,510 samples, 0.01%)</title><rect x="2.4606%" y="2021" width="0.0142%" height="15" fill="rgb(206,112,54)" fg:x="1430481852" fg:w="8227510"/><text x="2.7106%" y="2031.50"></text></g><g><title>__x64_sys_statx (8,227,510 samples, 0.01%)</title><rect x="2.4606%" y="2005" width="0.0142%" height="15" fill="rgb(216,84,49)" fg:x="1430481852" fg:w="8227510"/><text x="2.7106%" y="2015.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,583,968 samples, 0.02%)</title><rect x="2.5627%" y="277" width="0.0165%" height="15" fill="rgb(214,194,35)" fg:x="1489837412" fg:w="9583968"/><text x="2.8127%" y="287.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,164,252 samples, 0.02%)</title><rect x="2.5634%" y="261" width="0.0158%" height="15" fill="rgb(249,28,3)" fg:x="1490257128" fg:w="9164252"/><text x="2.8134%" y="271.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (9,164,252 samples, 0.02%)</title><rect x="2.5634%" y="245" width="0.0158%" height="15" fill="rgb(222,56,52)" fg:x="1490257128" fg:w="9164252"/><text x="2.8134%" y="255.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,164,252 samples, 0.02%)</title><rect x="2.5634%" y="229" width="0.0158%" height="15" fill="rgb(245,217,50)" fg:x="1490257128" fg:w="9164252"/><text x="2.8134%" y="239.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12,082,198 samples, 0.02%)</title><rect x="2.5627%" y="341" width="0.0208%" height="15" fill="rgb(213,201,24)" fg:x="1489837412" fg:w="12082198"/><text x="2.8127%" y="351.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12,082,198 samples, 0.02%)</title><rect x="2.5627%" y="325" width="0.0208%" height="15" fill="rgb(248,116,28)" fg:x="1489837412" fg:w="12082198"/><text x="2.8127%" y="335.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (12,082,198 samples, 0.02%)</title><rect x="2.5627%" y="309" width="0.0208%" height="15" fill="rgb(219,72,43)" fg:x="1489837412" fg:w="12082198"/><text x="2.8127%" y="319.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12,082,198 samples, 0.02%)</title><rect x="2.5627%" y="293" width="0.0208%" height="15" fill="rgb(209,138,14)" fg:x="1489837412" fg:w="12082198"/><text x="2.8127%" y="303.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,515,546 samples, 0.03%)</title><rect x="2.5608%" y="405" width="0.0318%" height="15" fill="rgb(222,18,33)" fg:x="1488749044" fg:w="18515546"/><text x="2.8108%" y="415.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,930,591 samples, 0.03%)</title><rect x="2.5618%" y="389" width="0.0308%" height="15" fill="rgb(213,199,7)" fg:x="1489333999" fg:w="17930591"/><text x="2.8118%" y="399.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (17,427,178 samples, 0.03%)</title><rect x="2.5627%" y="373" width="0.0300%" height="15" fill="rgb(250,110,10)" fg:x="1489837412" fg:w="17427178"/><text x="2.8127%" y="383.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,427,178 samples, 0.03%)</title><rect x="2.5627%" y="357" width="0.0300%" height="15" fill="rgb(248,123,6)" fg:x="1489837412" fg:w="17427178"/><text x="2.8127%" y="367.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (19,936,181 samples, 0.03%)</title><rect x="2.5608%" y="469" width="0.0343%" height="15" fill="rgb(206,91,31)" fg:x="1488749044" fg:w="19936181"/><text x="2.8108%" y="479.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (19,936,181 samples, 0.03%)</title><rect x="2.5608%" y="453" width="0.0343%" height="15" fill="rgb(211,154,13)" fg:x="1488749044" fg:w="19936181"/><text x="2.8108%" y="463.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (19,936,181 samples, 0.03%)</title><rect x="2.5608%" y="437" width="0.0343%" height="15" fill="rgb(225,148,7)" fg:x="1488749044" fg:w="19936181"/><text x="2.8108%" y="447.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (19,936,181 samples, 0.03%)</title><rect x="2.5608%" y="421" width="0.0343%" height="15" fill="rgb(220,160,43)" fg:x="1488749044" fg:w="19936181"/><text x="2.8108%" y="431.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (23,275,769 samples, 0.04%)</title><rect x="2.5577%" y="533" width="0.0400%" height="15" fill="rgb(213,52,39)" fg:x="1486954197" fg:w="23275769"/><text x="2.8077%" y="543.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,795,189 samples, 0.04%)</title><rect x="2.5586%" y="517" width="0.0392%" height="15" fill="rgb(243,137,7)" fg:x="1487434777" fg:w="22795189"/><text x="2.8086%" y="527.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (22,320,701 samples, 0.04%)</title><rect x="2.5594%" y="501" width="0.0384%" height="15" fill="rgb(230,79,13)" fg:x="1487909265" fg:w="22320701"/><text x="2.8094%" y="511.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,320,701 samples, 0.04%)</title><rect x="2.5594%" y="485" width="0.0384%" height="15" fill="rgb(247,105,23)" fg:x="1487909265" fg:w="22320701"/><text x="2.8094%" y="495.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,716,259 samples, 0.04%)</title><rect x="2.5567%" y="597" width="0.0442%" height="15" fill="rgb(223,179,41)" fg:x="1486364316" fg:w="25716259"/><text x="2.8067%" y="607.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,716,259 samples, 0.04%)</title><rect x="2.5567%" y="581" width="0.0442%" height="15" fill="rgb(218,9,34)" fg:x="1486364316" fg:w="25716259"/><text x="2.8067%" y="591.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,716,259 samples, 0.04%)</title><rect x="2.5567%" y="565" width="0.0442%" height="15" fill="rgb(222,106,8)" fg:x="1486364316" fg:w="25716259"/><text x="2.8067%" y="575.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,716,259 samples, 0.04%)</title><rect x="2.5567%" y="549" width="0.0442%" height="15" fill="rgb(211,220,0)" fg:x="1486364316" fg:w="25716259"/><text x="2.8067%" y="559.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (27,772,396 samples, 0.05%)</title><rect x="2.5558%" y="661" width="0.0478%" height="15" fill="rgb(229,52,16)" fg:x="1485835138" fg:w="27772396"/><text x="2.8058%" y="671.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (27,772,396 samples, 0.05%)</title><rect x="2.5558%" y="645" width="0.0478%" height="15" fill="rgb(212,155,18)" fg:x="1485835138" fg:w="27772396"/><text x="2.8058%" y="655.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (27,243,218 samples, 0.05%)</title><rect x="2.5567%" y="629" width="0.0469%" height="15" fill="rgb(242,21,14)" fg:x="1486364316" fg:w="27243218"/><text x="2.8067%" y="639.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (27,243,218 samples, 0.05%)</title><rect x="2.5567%" y="613" width="0.0469%" height="15" fill="rgb(222,19,48)" fg:x="1486364316" fg:w="27243218"/><text x="2.8067%" y="623.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,333,582 samples, 0.06%)</title><rect x="2.5551%" y="725" width="0.0556%" height="15" fill="rgb(232,45,27)" fg:x="1485419702" fg:w="32333582"/><text x="2.8051%" y="735.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,333,582 samples, 0.06%)</title><rect x="2.5551%" y="709" width="0.0556%" height="15" fill="rgb(249,103,42)" fg:x="1485419702" fg:w="32333582"/><text x="2.8051%" y="719.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (32,333,582 samples, 0.06%)</title><rect x="2.5551%" y="693" width="0.0556%" height="15" fill="rgb(246,81,33)" fg:x="1485419702" fg:w="32333582"/><text x="2.8051%" y="703.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (32,333,582 samples, 0.06%)</title><rect x="2.5551%" y="677" width="0.0556%" height="15" fill="rgb(252,33,42)" fg:x="1485419702" fg:w="32333582"/><text x="2.8051%" y="687.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (36,866,258 samples, 0.06%)</title><rect x="2.5544%" y="789" width="0.0634%" height="15" fill="rgb(209,212,41)" fg:x="1485002936" fg:w="36866258"/><text x="2.8044%" y="799.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (36,866,258 samples, 0.06%)</title><rect x="2.5544%" y="773" width="0.0634%" height="15" fill="rgb(207,154,6)" fg:x="1485002936" fg:w="36866258"/><text x="2.8044%" y="783.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (36,866,258 samples, 0.06%)</title><rect x="2.5544%" y="757" width="0.0634%" height="15" fill="rgb(223,64,47)" fg:x="1485002936" fg:w="36866258"/><text x="2.8044%" y="767.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (36,866,258 samples, 0.06%)</title><rect x="2.5544%" y="741" width="0.0634%" height="15" fill="rgb(211,161,38)" fg:x="1485002936" fg:w="36866258"/><text x="2.8044%" y="751.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (41,346,240 samples, 0.07%)</title><rect x="2.5523%" y="853" width="0.0711%" height="15" fill="rgb(219,138,40)" fg:x="1483815622" fg:w="41346240"/><text x="2.8023%" y="863.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (41,346,240 samples, 0.07%)</title><rect x="2.5523%" y="837" width="0.0711%" height="15" fill="rgb(241,228,46)" fg:x="1483815622" fg:w="41346240"/><text x="2.8023%" y="847.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (40,923,628 samples, 0.07%)</title><rect x="2.5531%" y="821" width="0.0704%" height="15" fill="rgb(223,209,38)" fg:x="1484238234" fg:w="40923628"/><text x="2.8031%" y="831.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (40,620,853 samples, 0.07%)</title><rect x="2.5536%" y="805" width="0.0699%" height="15" fill="rgb(236,164,45)" fg:x="1484541009" fg:w="40620853"/><text x="2.8036%" y="815.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,258,653 samples, 0.08%)</title><rect x="2.5501%" y="917" width="0.0778%" height="15" fill="rgb(231,15,5)" fg:x="1482494317" fg:w="45258653"/><text x="2.8001%" y="927.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (44,749,805 samples, 0.08%)</title><rect x="2.5509%" y="901" width="0.0770%" height="15" fill="rgb(252,35,15)" fg:x="1483003165" fg:w="44749805"/><text x="2.8009%" y="911.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (44,749,805 samples, 0.08%)</title><rect x="2.5509%" y="885" width="0.0770%" height="15" fill="rgb(248,181,18)" fg:x="1483003165" fg:w="44749805"/><text x="2.8009%" y="895.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (44,749,805 samples, 0.08%)</title><rect x="2.5509%" y="869" width="0.0770%" height="15" fill="rgb(233,39,42)" fg:x="1483003165" fg:w="44749805"/><text x="2.8009%" y="879.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,633,793 samples, 0.08%)</title><rect x="2.5501%" y="981" width="0.0785%" height="15" fill="rgb(238,110,33)" fg:x="1482494317" fg:w="45633793"/><text x="2.8001%" y="991.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,633,793 samples, 0.08%)</title><rect x="2.5501%" y="965" width="0.0785%" height="15" fill="rgb(233,195,10)" fg:x="1482494317" fg:w="45633793"/><text x="2.8001%" y="975.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (45,633,793 samples, 0.08%)</title><rect x="2.5501%" y="949" width="0.0785%" height="15" fill="rgb(254,105,3)" fg:x="1482494317" fg:w="45633793"/><text x="2.8001%" y="959.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,633,793 samples, 0.08%)</title><rect x="2.5501%" y="933" width="0.0785%" height="15" fill="rgb(221,225,9)" fg:x="1482494317" fg:w="45633793"/><text x="2.8001%" y="943.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (48,747,909 samples, 0.08%)</title><rect x="2.5480%" y="1045" width="0.0839%" height="15" fill="rgb(224,227,45)" fg:x="1481325580" fg:w="48747909"/><text x="2.7980%" y="1055.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (48,747,909 samples, 0.08%)</title><rect x="2.5480%" y="1029" width="0.0839%" height="15" fill="rgb(229,198,43)" fg:x="1481325580" fg:w="48747909"/><text x="2.7980%" y="1039.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (48,330,476 samples, 0.08%)</title><rect x="2.5488%" y="1013" width="0.0831%" height="15" fill="rgb(206,209,35)" fg:x="1481743013" fg:w="48330476"/><text x="2.7988%" y="1023.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (48,330,476 samples, 0.08%)</title><rect x="2.5488%" y="997" width="0.0831%" height="15" fill="rgb(245,195,53)" fg:x="1481743013" fg:w="48330476"/><text x="2.7988%" y="1007.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,206,390 samples, 0.09%)</title><rect x="2.5480%" y="1109" width="0.0864%" height="15" fill="rgb(240,92,26)" fg:x="1481325580" fg:w="50206390"/><text x="2.7980%" y="1119.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,206,390 samples, 0.09%)</title><rect x="2.5480%" y="1093" width="0.0864%" height="15" fill="rgb(207,40,23)" fg:x="1481325580" fg:w="50206390"/><text x="2.7980%" y="1103.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (50,206,390 samples, 0.09%)</title><rect x="2.5480%" y="1077" width="0.0864%" height="15" fill="rgb(223,111,35)" fg:x="1481325580" fg:w="50206390"/><text x="2.7980%" y="1087.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (50,206,390 samples, 0.09%)</title><rect x="2.5480%" y="1061" width="0.0864%" height="15" fill="rgb(229,147,28)" fg:x="1481325580" fg:w="50206390"/><text x="2.7980%" y="1071.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (52,712,392 samples, 0.09%)</title><rect x="2.5471%" y="1173" width="0.0907%" height="15" fill="rgb(211,29,28)" fg:x="1480765988" fg:w="52712392"/><text x="2.7971%" y="1183.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (52,712,392 samples, 0.09%)</title><rect x="2.5471%" y="1157" width="0.0907%" height="15" fill="rgb(228,72,33)" fg:x="1480765988" fg:w="52712392"/><text x="2.7971%" y="1167.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (52,712,392 samples, 0.09%)</title><rect x="2.5471%" y="1141" width="0.0907%" height="15" fill="rgb(205,214,31)" fg:x="1480765988" fg:w="52712392"/><text x="2.7971%" y="1151.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (52,712,392 samples, 0.09%)</title><rect x="2.5471%" y="1125" width="0.0907%" height="15" fill="rgb(224,111,15)" fg:x="1480765988" fg:w="52712392"/><text x="2.7971%" y="1135.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (54,106,739 samples, 0.09%)</title><rect x="2.5455%" y="1237" width="0.0931%" height="15" fill="rgb(253,21,26)" fg:x="1479829789" fg:w="54106739"/><text x="2.7955%" y="1247.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (54,106,739 samples, 0.09%)</title><rect x="2.5455%" y="1221" width="0.0931%" height="15" fill="rgb(245,139,43)" fg:x="1479829789" fg:w="54106739"/><text x="2.7955%" y="1231.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (53,642,319 samples, 0.09%)</title><rect x="2.5463%" y="1205" width="0.0923%" height="15" fill="rgb(252,170,7)" fg:x="1480294209" fg:w="53642319"/><text x="2.7963%" y="1215.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (53,642,319 samples, 0.09%)</title><rect x="2.5463%" y="1189" width="0.0923%" height="15" fill="rgb(231,118,14)" fg:x="1480294209" fg:w="53642319"/><text x="2.7963%" y="1199.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (57,833,567 samples, 0.10%)</title><rect x="2.5438%" y="1301" width="0.0995%" height="15" fill="rgb(238,83,0)" fg:x="1478883218" fg:w="57833567"/><text x="2.7938%" y="1311.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (57,273,546 samples, 0.10%)</title><rect x="2.5448%" y="1285" width="0.0985%" height="15" fill="rgb(221,39,39)" fg:x="1479443239" fg:w="57273546"/><text x="2.7948%" y="1295.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (57,273,546 samples, 0.10%)</title><rect x="2.5448%" y="1269" width="0.0985%" height="15" fill="rgb(222,119,46)" fg:x="1479443239" fg:w="57273546"/><text x="2.7948%" y="1279.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (57,273,546 samples, 0.10%)</title><rect x="2.5448%" y="1253" width="0.0985%" height="15" fill="rgb(222,165,49)" fg:x="1479443239" fg:w="57273546"/><text x="2.7948%" y="1263.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (62,610,926 samples, 0.11%)</title><rect x="2.5398%" y="1365" width="0.1077%" height="15" fill="rgb(219,113,52)" fg:x="1476522493" fg:w="62610926"/><text x="2.7898%" y="1375.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (62,084,375 samples, 0.11%)</title><rect x="2.5407%" y="1349" width="0.1068%" height="15" fill="rgb(214,7,15)" fg:x="1477049044" fg:w="62084375"/><text x="2.7907%" y="1359.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (62,084,375 samples, 0.11%)</title><rect x="2.5407%" y="1333" width="0.1068%" height="15" fill="rgb(235,32,4)" fg:x="1477049044" fg:w="62084375"/><text x="2.7907%" y="1343.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,245,992 samples, 0.11%)</title><rect x="2.5421%" y="1317" width="0.1054%" height="15" fill="rgb(238,90,54)" fg:x="1477887427" fg:w="61245992"/><text x="2.7921%" y="1327.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (68,644,100 samples, 0.12%)</title><rect x="2.5376%" y="1429" width="0.1181%" height="15" fill="rgb(213,208,19)" fg:x="1475246353" fg:w="68644100"/><text x="2.7876%" y="1439.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (68,644,100 samples, 0.12%)</title><rect x="2.5376%" y="1413" width="0.1181%" height="15" fill="rgb(233,156,4)" fg:x="1475246353" fg:w="68644100"/><text x="2.7876%" y="1423.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (68,037,237 samples, 0.12%)</title><rect x="2.5386%" y="1397" width="0.1170%" height="15" fill="rgb(207,194,5)" fg:x="1475853216" fg:w="68037237"/><text x="2.7886%" y="1407.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (68,037,237 samples, 0.12%)</title><rect x="2.5386%" y="1381" width="0.1170%" height="15" fill="rgb(206,111,30)" fg:x="1475853216" fg:w="68037237"/><text x="2.7886%" y="1391.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (75,298,507 samples, 0.13%)</title><rect x="2.5336%" y="1493" width="0.1295%" height="15" fill="rgb(243,70,54)" fg:x="1472949452" fg:w="75298507"/><text x="2.7836%" y="1503.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (73,918,715 samples, 0.13%)</title><rect x="2.5360%" y="1477" width="0.1271%" height="15" fill="rgb(242,28,8)" fg:x="1474329244" fg:w="73918715"/><text x="2.7860%" y="1487.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (73,454,853 samples, 0.13%)</title><rect x="2.5368%" y="1461" width="0.1264%" height="15" fill="rgb(219,106,18)" fg:x="1474793106" fg:w="73454853"/><text x="2.7868%" y="1471.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (73,001,606 samples, 0.13%)</title><rect x="2.5376%" y="1445" width="0.1256%" height="15" fill="rgb(244,222,10)" fg:x="1475246353" fg:w="73001606"/><text x="2.7876%" y="1455.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (79,157,434 samples, 0.14%)</title><rect x="2.5336%" y="1509" width="0.1362%" height="15" fill="rgb(236,179,52)" fg:x="1472949452" fg:w="79157434"/><text x="2.7836%" y="1519.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (81,679,032 samples, 0.14%)</title><rect x="2.5301%" y="1557" width="0.1405%" height="15" fill="rgb(213,23,39)" fg:x="1470902734" fg:w="81679032"/><text x="2.7801%" y="1567.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (81,309,832 samples, 0.14%)</title><rect x="2.5308%" y="1541" width="0.1399%" height="15" fill="rgb(238,48,10)" fg:x="1471271934" fg:w="81309832"/><text x="2.7808%" y="1551.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (80,113,273 samples, 0.14%)</title><rect x="2.5328%" y="1525" width="0.1378%" height="15" fill="rgb(251,196,23)" fg:x="1472468493" fg:w="80113273"/><text x="2.7828%" y="1535.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (85,855,982 samples, 0.15%)</title><rect x="2.5293%" y="1621" width="0.1477%" height="15" fill="rgb(250,152,24)" fg:x="1470449059" fg:w="85855982"/><text x="2.7793%" y="1631.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (85,855,982 samples, 0.15%)</title><rect x="2.5293%" y="1605" width="0.1477%" height="15" fill="rgb(209,150,17)" fg:x="1470449059" fg:w="85855982"/><text x="2.7793%" y="1615.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (85,402,307 samples, 0.15%)</title><rect x="2.5301%" y="1589" width="0.1469%" height="15" fill="rgb(234,202,34)" fg:x="1470902734" fg:w="85402307"/><text x="2.7801%" y="1599.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (85,402,307 samples, 0.15%)</title><rect x="2.5301%" y="1573" width="0.1469%" height="15" fill="rgb(253,148,53)" fg:x="1470902734" fg:w="85402307"/><text x="2.7801%" y="1583.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (90,682,750 samples, 0.16%)</title><rect x="2.5260%" y="1685" width="0.1560%" height="15" fill="rgb(218,129,16)" fg:x="1468480177" fg:w="90682750"/><text x="2.7760%" y="1695.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (90,196,511 samples, 0.16%)</title><rect x="2.5268%" y="1669" width="0.1551%" height="15" fill="rgb(216,85,19)" fg:x="1468966416" fg:w="90196511"/><text x="2.7768%" y="1679.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,555,334 samples, 0.15%)</title><rect x="2.5279%" y="1653" width="0.1540%" height="15" fill="rgb(235,228,7)" fg:x="1469607593" fg:w="89555334"/><text x="2.7779%" y="1663.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (88,713,868 samples, 0.15%)</title><rect x="2.5293%" y="1637" width="0.1526%" height="15" fill="rgb(245,175,0)" fg:x="1470449059" fg:w="88713868"/><text x="2.7793%" y="1647.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (95,553,116 samples, 0.16%)</title><rect x="2.5235%" y="1749" width="0.1644%" height="15" fill="rgb(208,168,36)" fg:x="1467079354" fg:w="95553116"/><text x="2.7735%" y="1759.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (95,015,917 samples, 0.16%)</title><rect x="2.5245%" y="1733" width="0.1634%" height="15" fill="rgb(246,171,24)" fg:x="1467616553" fg:w="95015917"/><text x="2.7745%" y="1743.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (94,565,237 samples, 0.16%)</title><rect x="2.5252%" y="1717" width="0.1627%" height="15" fill="rgb(215,142,24)" fg:x="1468067233" fg:w="94565237"/><text x="2.7752%" y="1727.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (94,565,237 samples, 0.16%)</title><rect x="2.5252%" y="1701" width="0.1627%" height="15" fill="rgb(250,187,7)" fg:x="1468067233" fg:w="94565237"/><text x="2.7752%" y="1711.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (101,024,977 samples, 0.17%)</title><rect x="2.5224%" y="1813" width="0.1738%" height="15" fill="rgb(228,66,33)" fg:x="1466432566" fg:w="101024977"/><text x="2.7724%" y="1823.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,378,189 samples, 0.17%)</title><rect x="2.5235%" y="1797" width="0.1727%" height="15" fill="rgb(234,215,21)" fg:x="1467079354" fg:w="100378189"/><text x="2.7735%" y="1807.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (100,378,189 samples, 0.17%)</title><rect x="2.5235%" y="1781" width="0.1727%" height="15" fill="rgb(222,191,20)" fg:x="1467079354" fg:w="100378189"/><text x="2.7735%" y="1791.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (100,378,189 samples, 0.17%)</title><rect x="2.5235%" y="1765" width="0.1727%" height="15" fill="rgb(245,79,54)" fg:x="1467079354" fg:w="100378189"/><text x="2.7735%" y="1775.50"></text></g><g><title>bool std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;, (std::__detail::_RegexExecutorPolicy)0, true&gt; (113,749,887 samples, 0.20%)</title><rect x="2.5077%" y="1925" width="0.1957%" height="15" fill="rgb(240,10,37)" fg:x="1457865994" fg:w="113749887"/><text x="2.7577%" y="1935.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (110,539,737 samples, 0.19%)</title><rect x="2.5132%" y="1909" width="0.1901%" height="15" fill="rgb(214,192,32)" fg:x="1461076144" fg:w="110539737"/><text x="2.7632%" y="1919.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (108,122,174 samples, 0.19%)</title><rect x="2.5174%" y="1893" width="0.1860%" height="15" fill="rgb(209,36,54)" fg:x="1463493707" fg:w="108122174"/><text x="2.7674%" y="1903.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (107,719,270 samples, 0.19%)</title><rect x="2.5181%" y="1877" width="0.1853%" height="15" fill="rgb(220,10,11)" fg:x="1463896611" fg:w="107719270"/><text x="2.7681%" y="1887.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,798,109 samples, 0.18%)</title><rect x="2.5214%" y="1861" width="0.1820%" height="15" fill="rgb(221,106,17)" fg:x="1465817772" fg:w="105798109"/><text x="2.7714%" y="1871.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (105,183,315 samples, 0.18%)</title><rect x="2.5224%" y="1845" width="0.1809%" height="15" fill="rgb(251,142,44)" fg:x="1466432566" fg:w="105183315"/><text x="2.7724%" y="1855.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,183,315 samples, 0.18%)</title><rect x="2.5224%" y="1829" width="0.1809%" height="15" fill="rgb(238,13,15)" fg:x="1466432566" fg:w="105183315"/><text x="2.7724%" y="1839.50"></text></g><g><title>Glob::isIgnored (115,341,412 samples, 0.20%)</title><rect x="2.5068%" y="1941" width="0.1984%" height="15" fill="rgb(208,107,27)" fg:x="1457351521" fg:w="115341412"/><text x="2.7568%" y="1951.50"></text></g><g><title>Watcher::isIgnored (119,258,136 samples, 0.21%)</title><rect x="2.5021%" y="1957" width="0.2051%" height="15" fill="rgb(205,136,37)" fg:x="1454626818" fg:w="119258136"/><text x="2.7521%" y="1967.50"></text></g><g><title>InotifyBackend::handleSubscription (132,460,027 samples, 0.23%)</title><rect x="2.4889%" y="1973" width="0.2278%" height="15" fill="rgb(250,205,27)" fg:x="1446916997" fg:w="132460027"/><text x="2.7389%" y="1983.50"></text></g><g><title>getname_flags (9,123,011 samples, 0.02%)</title><rect x="2.7177%" y="1893" width="0.0157%" height="15" fill="rgb(210,80,43)" fg:x="1579958664" fg:w="9123011"/><text x="2.9677%" y="1903.50"></text></g><g><title>link_path_walk (9,418,361 samples, 0.02%)</title><rect x="2.7471%" y="1845" width="0.0162%" height="15" fill="rgb(247,160,36)" fg:x="1597019614" fg:w="9418361"/><text x="2.9971%" y="1855.50"></text></g><g><title>filename_lookup (16,960,520 samples, 0.03%)</title><rect x="2.7415%" y="1877" width="0.0292%" height="15" fill="rgb(234,13,49)" fg:x="1593812182" fg:w="16960520"/><text x="2.9915%" y="1887.50"></text></g><g><title>path_lookupat (16,960,520 samples, 0.03%)</title><rect x="2.7415%" y="1861" width="0.0292%" height="15" fill="rgb(234,122,0)" fg:x="1593812182" fg:w="16960520"/><text x="2.9915%" y="1871.50"></text></g><g><title>__se_sys_newstat (37,014,662 samples, 0.06%)</title><rect x="2.7177%" y="1909" width="0.0637%" height="15" fill="rgb(207,146,38)" fg:x="1579958664" fg:w="37014662"/><text x="2.9677%" y="1919.50"></text></g><g><title>vfs_statx (23,756,837 samples, 0.04%)</title><rect x="2.7405%" y="1893" width="0.0409%" height="15" fill="rgb(207,177,25)" fg:x="1593216489" fg:w="23756837"/><text x="2.9905%" y="1903.50"></text></g><g><title>__x64_sys_newstat (37,991,139 samples, 0.07%)</title><rect x="2.7177%" y="1925" width="0.0653%" height="15" fill="rgb(211,178,42)" fg:x="1579958664" fg:w="37991139"/><text x="2.9677%" y="1935.50"></text></g><g><title>entry_SYSCALL_64 (43,823,858 samples, 0.08%)</title><rect x="2.7167%" y="1957" width="0.0754%" height="15" fill="rgb(230,69,54)" fg:x="1579377024" fg:w="43823858"/><text x="2.9667%" y="1967.50"></text></g><g><title>do_syscall_64 (43,242,218 samples, 0.07%)</title><rect x="2.7177%" y="1941" width="0.0744%" height="15" fill="rgb(214,135,41)" fg:x="1579958664" fg:w="43242218"/><text x="2.9677%" y="1951.50"></text></g><g><title>__xstat64 (46,080,022 samples, 0.08%)</title><rect x="2.7167%" y="1973" width="0.0793%" height="15" fill="rgb(237,67,25)" fg:x="1579377024" fg:w="46080022"/><text x="2.9667%" y="1983.50"></text></g><g><title>InotifyBackend::handleEvents (184,951,577 samples, 0.32%)</title><rect x="2.4858%" y="2005" width="0.3181%" height="15" fill="rgb(222,189,50)" fg:x="1445125106" fg:w="184951577"/><text x="2.7358%" y="2015.50"></text></g><g><title>InotifyBackend::handleEvent (184,951,577 samples, 0.32%)</title><rect x="2.4858%" y="1989" width="0.3181%" height="15" fill="rgb(245,148,34)" fg:x="1445125106" fg:w="184951577"/><text x="2.7358%" y="1999.50"></text></g><g><title>inotify_read (12,291,956 samples, 0.02%)</title><rect x="2.8162%" y="1909" width="0.0211%" height="15" fill="rgb(222,29,6)" fg:x="1637215995" fg:w="12291956"/><text x="3.0662%" y="1919.50"></text></g><g><title>__x64_sys_read (21,136,168 samples, 0.04%)</title><rect x="2.8091%" y="1957" width="0.0364%" height="15" fill="rgb(221,189,43)" fg:x="1633073063" fg:w="21136168"/><text x="3.0591%" y="1967.50"></text></g><g><title>ksys_read (21,136,168 samples, 0.04%)</title><rect x="2.8091%" y="1941" width="0.0364%" height="15" fill="rgb(207,36,27)" fg:x="1633073063" fg:w="21136168"/><text x="3.0591%" y="1951.50"></text></g><g><title>vfs_read (17,540,881 samples, 0.03%)</title><rect x="2.8153%" y="1925" width="0.0302%" height="15" fill="rgb(217,90,24)" fg:x="1636668350" fg:w="17540881"/><text x="3.0653%" y="1935.50"></text></g><g><title>entry_SYSCALL_64 (25,331,177 samples, 0.04%)</title><rect x="2.8066%" y="1989" width="0.0436%" height="15" fill="rgb(224,66,35)" fg:x="1631609930" fg:w="25331177"/><text x="3.0566%" y="1999.50"></text></g><g><title>do_syscall_64 (23,868,044 samples, 0.04%)</title><rect x="2.8091%" y="1973" width="0.0411%" height="15" fill="rgb(221,13,50)" fg:x="1633073063" fg:w="23868044"/><text x="3.0591%" y="1983.50"></text></g><g><title>InotifyBackend::start (215,152,299 samples, 0.37%)</title><rect x="2.4858%" y="2021" width="0.3701%" height="15" fill="rgb(236,68,49)" fg:x="1445125106" fg:w="215152299"/><text x="2.7358%" y="2031.50"></text></g><g><title>read (28,667,475 samples, 0.05%)</title><rect x="2.8066%" y="2005" width="0.0493%" height="15" fill="rgb(229,146,28)" fg:x="1631609930" fg:w="28667475"/><text x="3.0566%" y="2015.50"></text></g><g><title>schedule (20,176,011 samples, 0.03%)</title><rect x="2.8748%" y="1893" width="0.0347%" height="15" fill="rgb(225,31,38)" fg:x="1671278460" fg:w="20176011"/><text x="3.1248%" y="1903.50"></text></g><g><title>__sched_text_start (20,176,011 samples, 0.03%)</title><rect x="2.8748%" y="1877" width="0.0347%" height="15" fill="rgb(250,208,3)" fg:x="1671278460" fg:w="20176011"/><text x="3.1248%" y="1887.50"></text></g><g><title>do_sys_poll (29,390,234 samples, 0.05%)</title><rect x="2.8595%" y="1941" width="0.0506%" height="15" fill="rgb(246,54,23)" fg:x="1662379936" fg:w="29390234"/><text x="3.1095%" y="1951.50"></text></g><g><title>schedule_hrtimeout_range (23,555,658 samples, 0.04%)</title><rect x="2.8695%" y="1925" width="0.0405%" height="15" fill="rgb(243,76,11)" fg:x="1668214512" fg:w="23555658"/><text x="3.1195%" y="1935.50"></text></g><g><title>schedule_hrtimeout_range_clock (23,555,658 samples, 0.04%)</title><rect x="2.8695%" y="1909" width="0.0405%" height="15" fill="rgb(245,21,50)" fg:x="1668214512" fg:w="23555658"/><text x="3.1195%" y="1919.50"></text></g><g><title>__x64_sys_poll (31,090,407 samples, 0.05%)</title><rect x="2.8577%" y="1973" width="0.0535%" height="15" fill="rgb(228,9,43)" fg:x="1661338436" fg:w="31090407"/><text x="3.1077%" y="1983.50"></text></g><g><title>__se_sys_poll (31,090,407 samples, 0.05%)</title><rect x="2.8577%" y="1957" width="0.0535%" height="15" fill="rgb(208,100,47)" fg:x="1661338436" fg:w="31090407"/><text x="3.1077%" y="1967.50"></text></g><g><title>entry_SYSCALL_64 (35,566,699 samples, 0.06%)</title><rect x="2.8566%" y="2005" width="0.0612%" height="15" fill="rgb(232,26,8)" fg:x="1660696546" fg:w="35566699"/><text x="3.1066%" y="2015.50"></text></g><g><title>do_syscall_64 (34,924,809 samples, 0.06%)</title><rect x="2.8577%" y="1989" width="0.0601%" height="15" fill="rgb(216,166,38)" fg:x="1661338436" fg:w="34924809"/><text x="3.1077%" y="1999.50"></text></g><g><title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Backend::run()::{lambda()#1}&gt; &gt; &gt;::_M_run (258,106,514 samples, 0.44%)</title><rect x="2.4858%" y="2037" width="0.4440%" height="15" fill="rgb(251,202,51)" fg:x="1445125106" fg:w="258106514"/><text x="2.7358%" y="2047.50"></text></g><g><title>__poll (42,954,215 samples, 0.07%)</title><rect x="2.8559%" y="2021" width="0.0739%" height="15" fill="rgb(254,216,34)" fg:x="1660277405" fg:w="42954215"/><text x="3.1059%" y="2031.50"></text></g><g><title>entry_ibpb (6,968,375 samples, 0.01%)</title><rect x="2.9178%" y="2005" width="0.0120%" height="15" fill="rgb(251,32,27)" fg:x="1696263245" fg:w="6968375"/><text x="3.1678%" y="2015.50"></text></g><g><title>[libstdc++.so.6.0.30] (261,259,799 samples, 0.45%)</title><rect x="2.4814%" y="2053" width="0.4494%" height="15" fill="rgb(208,127,28)" fg:x="1442604735" fg:w="261259799"/><text x="2.7314%" y="2063.50"></text></g><g><title>[unknown] (6,688,303 samples, 0.01%)</title><rect x="2.9333%" y="1445" width="0.0115%" height="15" fill="rgb(224,137,22)" fg:x="1705295364" fg:w="6688303"/><text x="3.1833%" y="1455.50"></text></g><g><title>[unknown] (7,072,846 samples, 0.01%)</title><rect x="2.9333%" y="1461" width="0.0122%" height="15" fill="rgb(254,70,32)" fg:x="1705295364" fg:w="7072846"/><text x="3.1833%" y="1471.50"></text></g><g><title>[unknown] (7,971,569 samples, 0.01%)</title><rect x="2.9333%" y="1477" width="0.0137%" height="15" fill="rgb(229,75,37)" fg:x="1705295364" fg:w="7971569"/><text x="3.1833%" y="1487.50"></text></g><g><title>[unknown] (8,389,255 samples, 0.01%)</title><rect x="2.9333%" y="1493" width="0.0144%" height="15" fill="rgb(252,64,23)" fg:x="1705295364" fg:w="8389255"/><text x="3.1833%" y="1503.50"></text></g><g><title>[unknown] (8,744,651 samples, 0.02%)</title><rect x="2.9333%" y="1509" width="0.0150%" height="15" fill="rgb(232,162,48)" fg:x="1705295364" fg:w="8744651"/><text x="3.1833%" y="1519.50"></text></g><g><title>[unknown] (9,920,859 samples, 0.02%)</title><rect x="2.9333%" y="1525" width="0.0171%" height="15" fill="rgb(246,160,12)" fg:x="1705295364" fg:w="9920859"/><text x="3.1833%" y="1535.50"></text></g><g><title>[unknown] (12,613,391 samples, 0.02%)</title><rect x="2.9333%" y="1541" width="0.0217%" height="15" fill="rgb(247,166,0)" fg:x="1705295364" fg:w="12613391"/><text x="3.1833%" y="1551.50"></text></g><g><title>[unknown] (16,327,738 samples, 0.03%)</title><rect x="2.9333%" y="1557" width="0.0281%" height="15" fill="rgb(249,219,21)" fg:x="1705295364" fg:w="16327738"/><text x="3.1833%" y="1567.50"></text></g><g><title>[unknown] (16,542,808 samples, 0.03%)</title><rect x="2.9333%" y="1573" width="0.0285%" height="15" fill="rgb(205,209,3)" fg:x="1705295364" fg:w="16542808"/><text x="3.1833%" y="1583.50"></text></g><g><title>[unknown] (19,710,080 samples, 0.03%)</title><rect x="2.9333%" y="1589" width="0.0339%" height="15" fill="rgb(243,44,1)" fg:x="1705295364" fg:w="19710080"/><text x="3.1833%" y="1599.50"></text></g><g><title>[unknown] (21,946,525 samples, 0.04%)</title><rect x="2.9333%" y="1605" width="0.0378%" height="15" fill="rgb(206,159,16)" fg:x="1705295364" fg:w="21946525"/><text x="3.1833%" y="1615.50"></text></g><g><title>[unknown] (27,483,129 samples, 0.05%)</title><rect x="2.9333%" y="1621" width="0.0473%" height="15" fill="rgb(244,77,30)" fg:x="1705295364" fg:w="27483129"/><text x="3.1833%" y="1631.50"></text></g><g><title>[unknown] (27,900,440 samples, 0.05%)</title><rect x="2.9333%" y="1637" width="0.0480%" height="15" fill="rgb(218,69,12)" fg:x="1705295364" fg:w="27900440"/><text x="3.1833%" y="1647.50"></text></g><g><title>[unknown] (31,777,962 samples, 0.05%)</title><rect x="2.9333%" y="1653" width="0.0547%" height="15" fill="rgb(212,87,7)" fg:x="1705295364" fg:w="31777962"/><text x="3.1833%" y="1663.50"></text></g><g><title>[unknown] (32,235,696 samples, 0.06%)</title><rect x="2.9333%" y="1669" width="0.0554%" height="15" fill="rgb(245,114,25)" fg:x="1705295364" fg:w="32235696"/><text x="3.1833%" y="1679.50"></text></g><g><title>[unknown] (34,903,359 samples, 0.06%)</title><rect x="2.9333%" y="1701" width="0.0600%" height="15" fill="rgb(210,61,42)" fg:x="1705295364" fg:w="34903359"/><text x="3.1833%" y="1711.50"></text></g><g><title>[unknown] (34,903,359 samples, 0.06%)</title><rect x="2.9333%" y="1685" width="0.0600%" height="15" fill="rgb(211,52,33)" fg:x="1705295364" fg:w="34903359"/><text x="3.1833%" y="1695.50"></text></g><g><title>[unknown] (36,155,775 samples, 0.06%)</title><rect x="2.9333%" y="1781" width="0.0622%" height="15" fill="rgb(234,58,33)" fg:x="1705295364" fg:w="36155775"/><text x="3.1833%" y="1791.50"></text></g><g><title>[unknown] (36,155,775 samples, 0.06%)</title><rect x="2.9333%" y="1765" width="0.0622%" height="15" fill="rgb(220,115,36)" fg:x="1705295364" fg:w="36155775"/><text x="3.1833%" y="1775.50"></text></g><g><title>[unknown] (36,155,775 samples, 0.06%)</title><rect x="2.9333%" y="1749" width="0.0622%" height="15" fill="rgb(243,153,54)" fg:x="1705295364" fg:w="36155775"/><text x="3.1833%" y="1759.50"></text></g><g><title>[unknown] (36,155,775 samples, 0.06%)</title><rect x="2.9333%" y="1733" width="0.0622%" height="15" fill="rgb(251,47,18)" fg:x="1705295364" fg:w="36155775"/><text x="3.1833%" y="1743.50"></text></g><g><title>[unknown] (36,155,775 samples, 0.06%)</title><rect x="2.9333%" y="1717" width="0.0622%" height="15" fill="rgb(242,102,42)" fg:x="1705295364" fg:w="36155775"/><text x="3.1833%" y="1727.50"></text></g><g><title>[unknown] (36,612,260 samples, 0.06%)</title><rect x="2.9333%" y="1973" width="0.0630%" height="15" fill="rgb(234,31,38)" fg:x="1705295364" fg:w="36612260"/><text x="3.1833%" y="1983.50"></text></g><g><title>[unknown] (36,612,260 samples, 0.06%)</title><rect x="2.9333%" y="1957" width="0.0630%" height="15" fill="rgb(221,117,51)" fg:x="1705295364" fg:w="36612260"/><text x="3.1833%" y="1967.50"></text></g><g><title>[unknown] (36,612,260 samples, 0.06%)</title><rect x="2.9333%" y="1941" width="0.0630%" height="15" fill="rgb(212,20,18)" fg:x="1705295364" fg:w="36612260"/><text x="3.1833%" y="1951.50"></text></g><g><title>[unknown] (36,612,260 samples, 0.06%)</title><rect x="2.9333%" y="1925" width="0.0630%" height="15" fill="rgb(245,133,36)" fg:x="1705295364" fg:w="36612260"/><text x="3.1833%" y="1935.50"></text></g><g><title>[unknown] (36,612,260 samples, 0.06%)</title><rect x="2.9333%" y="1909" width="0.0630%" height="15" fill="rgb(212,6,19)" fg:x="1705295364" fg:w="36612260"/><text x="3.1833%" y="1919.50"></text></g><g><title>[unknown] (36,612,260 samples, 0.06%)</title><rect x="2.9333%" y="1893" width="0.0630%" height="15" fill="rgb(218,1,36)" fg:x="1705295364" fg:w="36612260"/><text x="3.1833%" y="1903.50"></text></g><g><title>[unknown] (36,612,260 samples, 0.06%)</title><rect x="2.9333%" y="1877" width="0.0630%" height="15" fill="rgb(246,84,54)" fg:x="1705295364" fg:w="36612260"/><text x="3.1833%" y="1887.50"></text></g><g><title>[unknown] (36,612,260 samples, 0.06%)</title><rect x="2.9333%" y="1861" width="0.0630%" height="15" fill="rgb(242,110,6)" fg:x="1705295364" fg:w="36612260"/><text x="3.1833%" y="1871.50"></text></g><g><title>[unknown] (36,612,260 samples, 0.06%)</title><rect x="2.9333%" y="1845" width="0.0630%" height="15" fill="rgb(214,47,5)" fg:x="1705295364" fg:w="36612260"/><text x="3.1833%" y="1855.50"></text></g><g><title>[unknown] (36,612,260 samples, 0.06%)</title><rect x="2.9333%" y="1829" width="0.0630%" height="15" fill="rgb(218,159,25)" fg:x="1705295364" fg:w="36612260"/><text x="3.1833%" y="1839.50"></text></g><g><title>[unknown] (36,612,260 samples, 0.06%)</title><rect x="2.9333%" y="1813" width="0.0630%" height="15" fill="rgb(215,211,28)" fg:x="1705295364" fg:w="36612260"/><text x="3.1833%" y="1823.50"></text></g><g><title>[unknown] (36,612,260 samples, 0.06%)</title><rect x="2.9333%" y="1797" width="0.0630%" height="15" fill="rgb(238,59,32)" fg:x="1705295364" fg:w="36612260"/><text x="3.1833%" y="1807.50"></text></g><g><title>[unknown] (36,896,329 samples, 0.06%)</title><rect x="2.9333%" y="1989" width="0.0635%" height="15" fill="rgb(226,82,3)" fg:x="1705295364" fg:w="36896329"/><text x="3.1833%" y="1999.50"></text></g><g><title>[unknown] (38,284,021 samples, 0.07%)</title><rect x="2.9333%" y="2005" width="0.0659%" height="15" fill="rgb(240,164,32)" fg:x="1705295364" fg:w="38284021"/><text x="3.1833%" y="2015.50"></text></g><g><title>[unknown] (40,505,869 samples, 0.07%)</title><rect x="2.9324%" y="2021" width="0.0697%" height="15" fill="rgb(232,46,7)" fg:x="1704746334" fg:w="40505869"/><text x="3.1824%" y="2031.50"></text></g><g><title>[unknown] (44,589,536 samples, 0.08%)</title><rect x="2.9308%" y="2037" width="0.0767%" height="15" fill="rgb(229,129,53)" fg:x="1703864534" fg:w="44589536"/><text x="3.1808%" y="2047.50"></text></g><g><title>futex_wait (18,245,792 samples, 0.03%)</title><rect x="3.0120%" y="1941" width="0.0314%" height="15" fill="rgb(234,188,29)" fg:x="1751044944" fg:w="18245792"/><text x="3.2620%" y="1951.50"></text></g><g><title>schedule (17,267,679 samples, 0.03%)</title><rect x="3.0137%" y="1925" width="0.0297%" height="15" fill="rgb(246,141,4)" fg:x="1752023057" fg:w="17267679"/><text x="3.2637%" y="1935.50"></text></g><g><title>__sched_text_start (16,525,414 samples, 0.03%)</title><rect x="3.0150%" y="1909" width="0.0284%" height="15" fill="rgb(229,23,39)" fg:x="1752765322" fg:w="16525414"/><text x="3.2650%" y="1919.50"></text></g><g><title>__x64_sys_futex (18,929,244 samples, 0.03%)</title><rect x="3.0120%" y="1989" width="0.0326%" height="15" fill="rgb(206,12,3)" fg:x="1751044944" fg:w="18929244"/><text x="3.2620%" y="1999.50"></text></g><g><title>__se_sys_futex (18,929,244 samples, 0.03%)</title><rect x="3.0120%" y="1973" width="0.0326%" height="15" fill="rgb(252,226,20)" fg:x="1751044944" fg:w="18929244"/><text x="3.2620%" y="1983.50"></text></g><g><title>do_futex (18,929,244 samples, 0.03%)</title><rect x="3.0120%" y="1957" width="0.0326%" height="15" fill="rgb(216,123,35)" fg:x="1751044944" fg:w="18929244"/><text x="3.2620%" y="1967.50"></text></g><g><title>entry_SYSCALL_64 (24,443,681 samples, 0.04%)</title><rect x="3.0107%" y="2021" width="0.0420%" height="15" fill="rgb(212,68,40)" fg:x="1750310399" fg:w="24443681"/><text x="3.2607%" y="2031.50"></text></g><g><title>do_syscall_64 (23,709,136 samples, 0.04%)</title><rect x="3.0120%" y="2005" width="0.0408%" height="15" fill="rgb(254,125,32)" fg:x="1751044944" fg:w="23709136"/><text x="3.2620%" y="2015.50"></text></g><g><title>__GI___futex_abstimed_wait_cancelable64 (29,126,096 samples, 0.05%)</title><rect x="3.0088%" y="2037" width="0.0501%" height="15" fill="rgb(253,97,22)" fg:x="1749175144" fg:w="29126096"/><text x="3.2588%" y="2047.50"></text></g><g><title>link_path_walk (9,104,809 samples, 0.02%)</title><rect x="3.0922%" y="1909" width="0.0157%" height="15" fill="rgb(241,101,14)" fg:x="1797684043" fg:w="9104809"/><text x="3.3422%" y="1919.50"></text></g><g><title>path_lookupat (20,384,477 samples, 0.04%)</title><rect x="3.0830%" y="1925" width="0.0351%" height="15" fill="rgb(238,103,29)" fg:x="1792347556" fg:w="20384477"/><text x="3.3330%" y="1935.50"></text></g><g><title>filename_lookup (23,234,112 samples, 0.04%)</title><rect x="3.0791%" y="1941" width="0.0400%" height="15" fill="rgb(233,195,47)" fg:x="1790033439" fg:w="23234112"/><text x="3.3291%" y="1951.50"></text></g><g><title>kmem_cache_alloc (6,424,110 samples, 0.01%)</title><rect x="3.1213%" y="1925" width="0.0111%" height="15" fill="rgb(246,218,30)" fg:x="1814590816" fg:w="6424110"/><text x="3.3713%" y="1935.50"></text></g><g><title>getname_flags (9,593,314 samples, 0.02%)</title><rect x="3.1190%" y="1941" width="0.0165%" height="15" fill="rgb(219,145,47)" fg:x="1813267551" fg:w="9593314"/><text x="3.3690%" y="1951.50"></text></g><g><title>__x64_sys_readlink (40,656,883 samples, 0.07%)</title><rect x="3.0725%" y="1989" width="0.0699%" height="15" fill="rgb(243,12,26)" fg:x="1786214767" fg:w="40656883"/><text x="3.3225%" y="1999.50"></text></g><g><title>do_readlinkat (40,656,883 samples, 0.07%)</title><rect x="3.0725%" y="1973" width="0.0699%" height="15" fill="rgb(214,87,16)" fg:x="1786214767" fg:w="40656883"/><text x="3.3225%" y="1983.50"></text></g><g><title>user_path_at_empty (36,838,211 samples, 0.06%)</title><rect x="3.0791%" y="1957" width="0.0634%" height="15" fill="rgb(208,99,42)" fg:x="1790033439" fg:w="36838211"/><text x="3.3291%" y="1967.50"></text></g><g><title>entry_SYSCALL_64 (47,231,977 samples, 0.08%)</title><rect x="3.0689%" y="2021" width="0.0812%" height="15" fill="rgb(253,99,2)" fg:x="1784152977" fg:w="47231977"/><text x="3.3189%" y="2031.50"></text></g><g><title>do_syscall_64 (45,752,983 samples, 0.08%)</title><rect x="3.0715%" y="2005" width="0.0787%" height="15" fill="rgb(220,168,23)" fg:x="1785631971" fg:w="45752983"/><text x="3.3215%" y="2015.50"></text></g><g><title>__GI___readlink (58,513,219 samples, 0.10%)</title><rect x="3.0666%" y="2037" width="0.1006%" height="15" fill="rgb(242,38,24)" fg:x="1782787804" fg:w="58513219"/><text x="3.3166%" y="2047.50"></text></g><g><title>entry_ibpb (9,916,069 samples, 0.02%)</title><rect x="3.1502%" y="2021" width="0.0171%" height="15" fill="rgb(225,182,9)" fg:x="1831384954" fg:w="9916069"/><text x="3.4002%" y="2031.50"></text></g><g><title>_int_free (65,592,438 samples, 0.11%)</title><rect x="3.1737%" y="2037" width="0.1128%" height="15" fill="rgb(243,178,37)" fg:x="1845081912" fg:w="65592438"/><text x="3.4237%" y="2047.50"></text></g><g><title>[unknown] (226,411,889 samples, 0.39%)</title><rect x="2.9308%" y="2053" width="0.3895%" height="15" fill="rgb(232,139,19)" fg:x="1703864534" fg:w="226411889"/><text x="3.1808%" y="2063.50"></text></g><g><title>unlink_chunk.constprop.0 (13,906,959 samples, 0.02%)</title><rect x="3.2964%" y="2037" width="0.0239%" height="15" fill="rgb(225,201,24)" fg:x="1916369464" fg:w="13906959"/><text x="3.5464%" y="2047.50"></text></g><g><title>copy_present_pte (79,892,865 samples, 0.14%)</title><rect x="3.3500%" y="1877" width="0.1374%" height="15" fill="rgb(221,47,46)" fg:x="1947553790" fg:w="79892865"/><text x="3.6000%" y="1887.50"></text></g><g><title>copy_page_range (92,877,014 samples, 0.16%)</title><rect x="3.3300%" y="1925" width="0.1598%" height="15" fill="rgb(249,23,13)" fg:x="1935941310" fg:w="92877014"/><text x="3.5800%" y="1935.50"></text></g><g><title>copy_p4d_range (92,877,014 samples, 0.16%)</title><rect x="3.3300%" y="1909" width="0.1598%" height="15" fill="rgb(219,9,5)" fg:x="1935941310" fg:w="92877014"/><text x="3.5800%" y="1919.50"></text></g><g><title>copy_pte_range (92,877,014 samples, 0.16%)</title><rect x="3.3300%" y="1893" width="0.1598%" height="15" fill="rgb(254,171,16)" fg:x="1935941310" fg:w="92877014"/><text x="3.5800%" y="1903.50"></text></g><g><title>__x64_sys_clone (105,310,915 samples, 0.18%)</title><rect x="3.3205%" y="2005" width="0.1811%" height="15" fill="rgb(230,171,20)" fg:x="1930386190" fg:w="105310915"/><text x="3.5705%" y="2015.50"></text></g><g><title>kernel_clone (105,310,915 samples, 0.18%)</title><rect x="3.3205%" y="1989" width="0.1811%" height="15" fill="rgb(210,71,41)" fg:x="1930386190" fg:w="105310915"/><text x="3.5705%" y="1999.50"></text></g><g><title>copy_process (105,310,915 samples, 0.18%)</title><rect x="3.3205%" y="1973" width="0.1811%" height="15" fill="rgb(206,173,20)" fg:x="1930386190" fg:w="105310915"/><text x="3.5705%" y="1983.50"></text></g><g><title>copy_mm (104,291,752 samples, 0.18%)</title><rect x="3.3222%" y="1957" width="0.1794%" height="15" fill="rgb(233,88,34)" fg:x="1931405353" fg:w="104291752"/><text x="3.5722%" y="1967.50"></text></g><g><title>dup_mmap (104,291,752 samples, 0.18%)</title><rect x="3.3222%" y="1941" width="0.1794%" height="15" fill="rgb(223,209,46)" fg:x="1931405353" fg:w="104291752"/><text x="3.5722%" y="1951.50"></text></g><g><title>entry_SYSCALL_64 (105,859,090 samples, 0.18%)</title><rect x="3.3203%" y="2037" width="0.1821%" height="15" fill="rgb(250,43,18)" fg:x="1930276423" fg:w="105859090"/><text x="3.5703%" y="2047.50"></text></g><g><title>do_syscall_64 (105,859,090 samples, 0.18%)</title><rect x="3.3203%" y="2021" width="0.1821%" height="15" fill="rgb(208,13,10)" fg:x="1930276423" fg:w="105859090"/><text x="3.5703%" y="2031.50"></text></g><g><title>_Fork (105,926,813 samples, 0.18%)</title><rect x="3.3203%" y="2053" width="0.1822%" height="15" fill="rgb(212,200,36)" fg:x="1930276423" fg:w="105926813"/><text x="3.5703%" y="2063.50"></text></g><g><title>page_remove_rmap (17,921,706 samples, 0.03%)</title><rect x="3.6478%" y="1781" width="0.0308%" height="15" fill="rgb(225,90,30)" fg:x="2120686503" fg:w="17921706"/><text x="3.8978%" y="1791.50"></text></g><g><title>tlb_flush_mmu (11,491,850 samples, 0.02%)</title><rect x="3.6786%" y="1781" width="0.0198%" height="15" fill="rgb(236,182,39)" fg:x="2138608209" fg:w="11491850"/><text x="3.9286%" y="1791.50"></text></g><g><title>free_pages_and_swap_cache (11,491,850 samples, 0.02%)</title><rect x="3.6786%" y="1765" width="0.0198%" height="15" fill="rgb(212,144,35)" fg:x="2138608209" fg:w="11491850"/><text x="3.9286%" y="1775.50"></text></g><g><title>release_pages (9,906,639 samples, 0.02%)</title><rect x="3.6814%" y="1749" width="0.0170%" height="15" fill="rgb(228,63,44)" fg:x="2140193420" fg:w="9906639"/><text x="3.9314%" y="1759.50"></text></g><g><title>__GI___execve (118,291,871 samples, 0.20%)</title><rect x="3.5030%" y="2053" width="0.2035%" height="15" fill="rgb(228,109,6)" fg:x="2036501136" fg:w="118291871"/><text x="3.7530%" y="2063.50"></text></g><g><title>entry_SYSCALL_64 (118,291,871 samples, 0.20%)</title><rect x="3.5030%" y="2037" width="0.2035%" height="15" fill="rgb(238,117,24)" fg:x="2036501136" fg:w="118291871"/><text x="3.7530%" y="2047.50"></text></g><g><title>do_syscall_64 (118,291,871 samples, 0.20%)</title><rect x="3.5030%" y="2021" width="0.2035%" height="15" fill="rgb(242,26,26)" fg:x="2036501136" fg:w="118291871"/><text x="3.7530%" y="2031.50"></text></g><g><title>__x64_sys_execve (118,291,871 samples, 0.20%)</title><rect x="3.5030%" y="2005" width="0.2035%" height="15" fill="rgb(221,92,48)" fg:x="2036501136" fg:w="118291871"/><text x="3.7530%" y="2015.50"></text></g><g><title>do_execveat_common (118,291,871 samples, 0.20%)</title><rect x="3.5030%" y="1989" width="0.2035%" height="15" fill="rgb(209,209,32)" fg:x="2036501136" fg:w="118291871"/><text x="3.7530%" y="1999.50"></text></g><g><title>bprm_execve (118,291,871 samples, 0.20%)</title><rect x="3.5030%" y="1973" width="0.2035%" height="15" fill="rgb(221,70,22)" fg:x="2036501136" fg:w="118291871"/><text x="3.7530%" y="1983.50"></text></g><g><title>load_elf_binary (118,291,871 samples, 0.20%)</title><rect x="3.5030%" y="1957" width="0.2035%" height="15" fill="rgb(248,145,5)" fg:x="2036501136" fg:w="118291871"/><text x="3.7530%" y="1967.50"></text></g><g><title>begin_new_exec (118,291,871 samples, 0.20%)</title><rect x="3.5030%" y="1941" width="0.2035%" height="15" fill="rgb(226,116,26)" fg:x="2036501136" fg:w="118291871"/><text x="3.7530%" y="1951.50"></text></g><g><title>exec_mmap (118,291,871 samples, 0.20%)</title><rect x="3.5030%" y="1925" width="0.2035%" height="15" fill="rgb(244,5,17)" fg:x="2036501136" fg:w="118291871"/><text x="3.7530%" y="1935.50"></text></g><g><title>mmput (118,291,871 samples, 0.20%)</title><rect x="3.5030%" y="1909" width="0.2035%" height="15" fill="rgb(252,159,33)" fg:x="2036501136" fg:w="118291871"/><text x="3.7530%" y="1919.50"></text></g><g><title>__mmput (118,291,871 samples, 0.20%)</title><rect x="3.5030%" y="1893" width="0.2035%" height="15" fill="rgb(206,71,0)" fg:x="2036501136" fg:w="118291871"/><text x="3.7530%" y="1903.50"></text></g><g><title>exit_mmap (118,291,871 samples, 0.20%)</title><rect x="3.5030%" y="1877" width="0.2035%" height="15" fill="rgb(233,118,54)" fg:x="2036501136" fg:w="118291871"/><text x="3.7530%" y="1887.50"></text></g><g><title>unmap_vmas (110,464,702 samples, 0.19%)</title><rect x="3.5165%" y="1861" width="0.1900%" height="15" fill="rgb(234,83,48)" fg:x="2044328305" fg:w="110464702"/><text x="3.7665%" y="1871.50"></text></g><g><title>unmap_single_vma (110,464,702 samples, 0.19%)</title><rect x="3.5165%" y="1845" width="0.1900%" height="15" fill="rgb(228,3,54)" fg:x="2044328305" fg:w="110464702"/><text x="3.7665%" y="1855.50"></text></g><g><title>unmap_page_range (110,162,448 samples, 0.19%)</title><rect x="3.5170%" y="1829" width="0.1895%" height="15" fill="rgb(226,155,13)" fg:x="2044630559" fg:w="110162448"/><text x="3.7670%" y="1839.50"></text></g><g><title>zap_p4d_range (110,162,448 samples, 0.19%)</title><rect x="3.5170%" y="1813" width="0.1895%" height="15" fill="rgb(241,28,37)" fg:x="2044630559" fg:w="110162448"/><text x="3.7670%" y="1823.50"></text></g><g><title>zap_pte_range (105,696,994 samples, 0.18%)</title><rect x="3.5247%" y="1797" width="0.1818%" height="15" fill="rgb(233,93,10)" fg:x="2049096013" fg:w="105696994"/><text x="3.7747%" y="1807.50"></text></g><g><title>__sched_text_start (21,301,188 samples, 0.04%)</title><rect x="3.7570%" y="1813" width="0.0366%" height="15" fill="rgb(225,113,19)" fg:x="2184148293" fg:w="21301188"/><text x="4.0070%" y="1823.50"></text></g><g><title>schedule (21,784,473 samples, 0.04%)</title><rect x="3.7570%" y="1829" width="0.0375%" height="15" fill="rgb(241,2,18)" fg:x="2184148293" fg:w="21784473"/><text x="4.0070%" y="1839.50"></text></g><g><title>schedule_hrtimeout_range (25,153,024 samples, 0.04%)</title><rect x="3.7518%" y="1861" width="0.0433%" height="15" fill="rgb(228,207,21)" fg:x="2181129025" fg:w="25153024"/><text x="4.0018%" y="1871.50"></text></g><g><title>schedule_hrtimeout_range_clock (24,831,600 samples, 0.04%)</title><rect x="3.7523%" y="1845" width="0.0427%" height="15" fill="rgb(213,211,35)" fg:x="2181450449" fg:w="24831600"/><text x="4.0023%" y="1855.50"></text></g><g><title>do_epoll_wait (40,810,050 samples, 0.07%)</title><rect x="3.7279%" y="1877" width="0.0702%" height="15" fill="rgb(209,83,10)" fg:x="2167245655" fg:w="40810050"/><text x="3.9779%" y="1887.50"></text></g><g><title>__x64_sys_epoll_pwait (45,837,108 samples, 0.08%)</title><rect x="3.7246%" y="1909" width="0.0788%" height="15" fill="rgb(209,164,1)" fg:x="2165301362" fg:w="45837108"/><text x="3.9746%" y="1919.50"></text></g><g><title>__se_sys_epoll_pwait (45,837,108 samples, 0.08%)</title><rect x="3.7246%" y="1893" width="0.0788%" height="15" fill="rgb(213,184,43)" fg:x="2165301362" fg:w="45837108"/><text x="3.9746%" y="1903.50"></text></g><g><title>syscall_enter_from_user_mode (5,843,679 samples, 0.01%)</title><rect x="3.8047%" y="1909" width="0.0101%" height="15" fill="rgb(231,61,34)" fg:x="2211864282" fg:w="5843679"/><text x="4.0547%" y="1919.50"></text></g><g><title>entry_SYSCALL_64 (55,276,216 samples, 0.10%)</title><rect x="3.7233%" y="1941" width="0.0951%" height="15" fill="rgb(235,75,3)" fg:x="2164564565" fg:w="55276216"/><text x="3.9733%" y="1951.50"></text></g><g><title>do_syscall_64 (54,539,419 samples, 0.09%)</title><rect x="3.7246%" y="1925" width="0.0938%" height="15" fill="rgb(220,106,47)" fg:x="2165301362" fg:w="54539419"/><text x="3.9746%" y="1935.50"></text></g><g><title>entry_ibpb (6,562,656 samples, 0.01%)</title><rect x="3.8184%" y="1941" width="0.0113%" height="15" fill="rgb(210,196,33)" fg:x="2219840781" fg:w="6562656"/><text x="4.0684%" y="1951.50"></text></g><g><title>epoll_pwait (63,892,149 samples, 0.11%)</title><rect x="3.7201%" y="1957" width="0.1099%" height="15" fill="rgb(229,154,42)" fg:x="2162703133" fg:w="63892149"/><text x="3.9701%" y="1967.50"></text></g><g><title>inotify_read (8,879,802 samples, 0.02%)</title><rect x="3.8584%" y="1845" width="0.0153%" height="15" fill="rgb(228,114,26)" fg:x="2243122739" fg:w="8879802"/><text x="4.1084%" y="1855.50"></text></g><g><title>__x64_sys_read (20,343,838 samples, 0.03%)</title><rect x="3.8419%" y="1893" width="0.0350%" height="15" fill="rgb(208,144,1)" fg:x="2233527857" fg:w="20343838"/><text x="4.0919%" y="1903.50"></text></g><g><title>ksys_read (19,976,253 samples, 0.03%)</title><rect x="3.8426%" y="1877" width="0.0344%" height="15" fill="rgb(239,112,37)" fg:x="2233895442" fg:w="19976253"/><text x="4.0926%" y="1887.50"></text></g><g><title>vfs_read (15,143,589 samples, 0.03%)</title><rect x="3.8509%" y="1861" width="0.0260%" height="15" fill="rgb(210,96,50)" fg:x="2238728106" fg:w="15143589"/><text x="4.1009%" y="1871.50"></text></g><g><title>do_syscall_64 (28,025,990 samples, 0.05%)</title><rect x="3.8398%" y="1909" width="0.0482%" height="15" fill="rgb(222,178,2)" fg:x="2232315950" fg:w="28025990"/><text x="4.0898%" y="1919.50"></text></g><g><title>entry_SYSCALL_64 (28,892,434 samples, 0.05%)</title><rect x="3.8393%" y="1925" width="0.0497%" height="15" fill="rgb(226,74,18)" fg:x="2232015608" fg:w="28892434"/><text x="4.0893%" y="1935.50"></text></g><g><title>read (34,173,460 samples, 0.06%)</title><rect x="3.8376%" y="1941" width="0.0588%" height="15" fill="rgb(225,67,54)" fg:x="2231019939" fg:w="34173460"/><text x="4.0876%" y="1951.50"></text></g><g><title>v8::internal::Heap::Scavenge (5,997,213 samples, 0.01%)</title><rect x="3.9078%" y="1845" width="0.0103%" height="15" fill="rgb(251,92,32)" fg:x="2271815884" fg:w="5997213"/><text x="4.1578%" y="1855.50"></text></g><g><title>node::PerIsolatePlatformData::FlushForegroundTasksInternal (9,821,465 samples, 0.02%)</title><rect x="3.9029%" y="1925" width="0.0169%" height="15" fill="rgb(228,149,22)" fg:x="2269003049" fg:w="9821465"/><text x="4.1529%" y="1935.50"></text></g><g><title>node::PerIsolatePlatformData::RunForegroundTask (9,821,465 samples, 0.02%)</title><rect x="3.9029%" y="1909" width="0.0169%" height="15" fill="rgb(243,54,13)" fg:x="2269003049" fg:w="9821465"/><text x="4.1529%" y="1919.50"></text></g><g><title>v8::internal::MinorGCJob::Task::RunInternal (9,821,465 samples, 0.02%)</title><rect x="3.9029%" y="1893" width="0.0169%" height="15" fill="rgb(243,180,28)" fg:x="2269003049" fg:w="9821465"/><text x="4.1529%" y="1903.50"></text></g><g><title>v8::internal::Heap::CollectGarbage (9,821,465 samples, 0.02%)</title><rect x="3.9029%" y="1877" width="0.0169%" height="15" fill="rgb(208,167,24)" fg:x="2269003049" fg:w="9821465"/><text x="4.1529%" y="1887.50"></text></g><g><title>v8::internal::Heap::PerformGarbageCollection (9,821,465 samples, 0.02%)</title><rect x="3.9029%" y="1861" width="0.0169%" height="15" fill="rgb(245,73,45)" fg:x="2269003049" fg:w="9821465"/><text x="4.1529%" y="1871.50"></text></g><g><title>node::fs::ReadLink (7,239,844 samples, 0.01%)</title><rect x="3.9465%" y="1637" width="0.0125%" height="15" fill="rgb(237,203,48)" fg:x="2294344674" fg:w="7239844"/><text x="4.1965%" y="1647.50"></text></g><g><title>node::fs::GetReqWrap (6,465,875 samples, 0.01%)</title><rect x="3.9479%" y="1621" width="0.0111%" height="15" fill="rgb(211,197,16)" fg:x="2295118643" fg:w="6465875"/><text x="4.1979%" y="1631.50"></text></g><g><title>node::fs::FSReqPromise&lt;node::AliasedBufferBase&lt;double, v8::Float64Array&gt; &gt;::New (6,465,875 samples, 0.01%)</title><rect x="3.9479%" y="1605" width="0.0111%" height="15" fill="rgb(243,99,51)" fg:x="2295118643" fg:w="6465875"/><text x="4.1979%" y="1615.50"></text></g><g><title>Builtins_CallApiCallback (8,734,377 samples, 0.02%)</title><rect x="3.9453%" y="1653" width="0.0150%" height="15" fill="rgb(215,123,29)" fg:x="2293630556" fg:w="8734377"/><text x="4.1953%" y="1663.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (21,392,277 samples, 0.04%)</title><rect x="3.9302%" y="1765" width="0.0368%" height="15" fill="rgb(239,186,37)" fg:x="2284862239" fg:w="21392277"/><text x="4.1802%" y="1775.50"></text></g><g><title>Builtins_JSRunMicrotasksEntry (21,392,277 samples, 0.04%)</title><rect x="3.9302%" y="1749" width="0.0368%" height="15" fill="rgb(252,136,39)" fg:x="2284862239" fg:w="21392277"/><text x="4.1802%" y="1759.50"></text></g><g><title>Builtins_RunMicrotasks (21,392,277 samples, 0.04%)</title><rect x="3.9302%" y="1733" width="0.0368%" height="15" fill="rgb(223,213,32)" fg:x="2284862239" fg:w="21392277"/><text x="4.1802%" y="1743.50"></text></g><g><title>Builtins_PromiseFulfillReactionJob (20,696,402 samples, 0.04%)</title><rect x="3.9314%" y="1717" width="0.0356%" height="15" fill="rgb(233,115,5)" fg:x="2285558114" fg:w="20696402"/><text x="4.1814%" y="1727.50"></text></g><g><title>Builtins_AsyncFunctionAwaitResolveClosure (20,696,402 samples, 0.04%)</title><rect x="3.9314%" y="1701" width="0.0356%" height="15" fill="rgb(207,226,44)" fg:x="2285558114" fg:w="20696402"/><text x="4.1814%" y="1711.50"></text></g><g><title>[perf-96500.map] (19,921,663 samples, 0.03%)</title><rect x="3.9328%" y="1685" width="0.0343%" height="15" fill="rgb(208,126,0)" fg:x="2286332853" fg:w="19921663"/><text x="4.1828%" y="1695.50"></text></g><g><title>[perf-96500.map] (16,097,268 samples, 0.03%)</title><rect x="3.9393%" y="1669" width="0.0277%" height="15" fill="rgb(244,66,21)" fg:x="2290157248" fg:w="16097268"/><text x="4.1893%" y="1679.50"></text></g><g><title>node::InternalCallbackScope::~InternalCallbackScope (23,607,079 samples, 0.04%)</title><rect x="3.9290%" y="1861" width="0.0406%" height="15" fill="rgb(222,97,12)" fg:x="2284127226" fg:w="23607079"/><text x="4.1790%" y="1871.50"></text></g><g><title>node::InternalCallbackScope::Close (23,607,079 samples, 0.04%)</title><rect x="3.9290%" y="1845" width="0.0406%" height="15" fill="rgb(219,213,19)" fg:x="2284127226" fg:w="23607079"/><text x="4.1790%" y="1855.50"></text></g><g><title>v8::internal::MicrotaskQueue::PerformCheckpoint (22,872,066 samples, 0.04%)</title><rect x="3.9302%" y="1829" width="0.0393%" height="15" fill="rgb(252,169,30)" fg:x="2284862239" fg:w="22872066"/><text x="4.1802%" y="1839.50"></text></g><g><title>v8::internal::MicrotaskQueue::RunMicrotasks (22,872,066 samples, 0.04%)</title><rect x="3.9302%" y="1813" width="0.0393%" height="15" fill="rgb(206,32,51)" fg:x="2284862239" fg:w="22872066"/><text x="4.1802%" y="1823.50"></text></g><g><title>v8::internal::Execution::TryRunMicrotasks (22,872,066 samples, 0.04%)</title><rect x="3.9302%" y="1797" width="0.0393%" height="15" fill="rgb(250,172,42)" fg:x="2284862239" fg:w="22872066"/><text x="4.1802%" y="1807.50"></text></g><g><title>v8::internal::(anonymous namespace)::InvokeWithTryCatch (22,872,066 samples, 0.04%)</title><rect x="3.9302%" y="1781" width="0.0393%" height="15" fill="rgb(209,34,43)" fg:x="2284862239" fg:w="22872066"/><text x="4.1802%" y="1791.50"></text></g><g><title>node::fs::AfterStat (25,806,433 samples, 0.04%)</title><rect x="3.9276%" y="1893" width="0.0444%" height="15" fill="rgb(223,11,35)" fg:x="2283354663" fg:w="25806433"/><text x="4.1776%" y="1903.50"></text></g><g><title>node::fs::FSReqPromise&lt;node::AliasedBufferBase&lt;double, v8::Float64Array&gt; &gt;::ResolveStat (25,806,433 samples, 0.04%)</title><rect x="3.9276%" y="1877" width="0.0444%" height="15" fill="rgb(251,219,26)" fg:x="2283354663" fg:w="25806433"/><text x="4.1776%" y="1887.50"></text></g><g><title>node::UVException (6,237,557 samples, 0.01%)</title><rect x="3.9734%" y="1861" width="0.0107%" height="15" fill="rgb(231,119,3)" fg:x="2309942592" fg:w="6237557"/><text x="4.2234%" y="1871.50"></text></g><g><title>node::InternalCallbackScope::~InternalCallbackScope (12,921,460 samples, 0.02%)</title><rect x="3.9841%" y="1845" width="0.0222%" height="15" fill="rgb(216,97,11)" fg:x="2316180149" fg:w="12921460"/><text x="4.2341%" y="1855.50"></text></g><g><title>node::InternalCallbackScope::Close (12,921,460 samples, 0.02%)</title><rect x="3.9841%" y="1829" width="0.0222%" height="15" fill="rgb(223,59,9)" fg:x="2316180149" fg:w="12921460"/><text x="4.2341%" y="1839.50"></text></g><g><title>v8::internal::MicrotaskQueue::PerformCheckpoint (12,921,460 samples, 0.02%)</title><rect x="3.9841%" y="1813" width="0.0222%" height="15" fill="rgb(233,93,31)" fg:x="2316180149" fg:w="12921460"/><text x="4.2341%" y="1823.50"></text></g><g><title>v8::internal::MicrotaskQueue::RunMicrotasks (12,921,460 samples, 0.02%)</title><rect x="3.9841%" y="1797" width="0.0222%" height="15" fill="rgb(239,81,33)" fg:x="2316180149" fg:w="12921460"/><text x="4.2341%" y="1807.50"></text></g><g><title>v8::internal::Execution::TryRunMicrotasks (12,921,460 samples, 0.02%)</title><rect x="3.9841%" y="1781" width="0.0222%" height="15" fill="rgb(213,120,34)" fg:x="2316180149" fg:w="12921460"/><text x="4.2341%" y="1791.50"></text></g><g><title>v8::internal::(anonymous namespace)::InvokeWithTryCatch (12,921,460 samples, 0.02%)</title><rect x="3.9841%" y="1765" width="0.0222%" height="15" fill="rgb(243,49,53)" fg:x="2316180149" fg:w="12921460"/><text x="4.2341%" y="1775.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (12,921,460 samples, 0.02%)</title><rect x="3.9841%" y="1749" width="0.0222%" height="15" fill="rgb(247,216,33)" fg:x="2316180149" fg:w="12921460"/><text x="4.2341%" y="1759.50"></text></g><g><title>Builtins_JSRunMicrotasksEntry (12,921,460 samples, 0.02%)</title><rect x="3.9841%" y="1733" width="0.0222%" height="15" fill="rgb(226,26,14)" fg:x="2316180149" fg:w="12921460"/><text x="4.2341%" y="1743.50"></text></g><g><title>Builtins_RunMicrotasks (12,921,460 samples, 0.02%)</title><rect x="3.9841%" y="1717" width="0.0222%" height="15" fill="rgb(215,49,53)" fg:x="2316180149" fg:w="12921460"/><text x="4.2341%" y="1727.50"></text></g><g><title>Builtins_PromiseRejectReactionJob (12,921,460 samples, 0.02%)</title><rect x="3.9841%" y="1701" width="0.0222%" height="15" fill="rgb(245,162,40)" fg:x="2316180149" fg:w="12921460"/><text x="4.2341%" y="1711.50"></text></g><g><title>Builtins_AsyncFunctionAwaitRejectClosure (12,921,460 samples, 0.02%)</title><rect x="3.9841%" y="1685" width="0.0222%" height="15" fill="rgb(229,68,17)" fg:x="2316180149" fg:w="12921460"/><text x="4.2341%" y="1695.50"></text></g><g><title>[perf-96500.map] (12,248,961 samples, 0.02%)</title><rect x="3.9852%" y="1669" width="0.0211%" height="15" fill="rgb(213,182,10)" fg:x="2316852648" fg:w="12248961"/><text x="4.2352%" y="1679.50"></text></g><g><title>[perf-96500.map] (9,304,765 samples, 0.02%)</title><rect x="3.9903%" y="1653" width="0.0160%" height="15" fill="rgb(245,125,30)" fg:x="2319796844" fg:w="9304765"/><text x="4.2403%" y="1663.50"></text></g><g><title>Builtins_CallApiCallback (8,596,702 samples, 0.01%)</title><rect x="3.9915%" y="1637" width="0.0148%" height="15" fill="rgb(232,202,2)" fg:x="2320504907" fg:w="8596702"/><text x="4.2415%" y="1647.50"></text></g><g><title>node::fs::Stat (8,596,702 samples, 0.01%)</title><rect x="3.9915%" y="1621" width="0.0148%" height="15" fill="rgb(237,140,51)" fg:x="2320504907" fg:w="8596702"/><text x="4.2415%" y="1631.50"></text></g><g><title>node::fs::GetReqWrap (6,421,780 samples, 0.01%)</title><rect x="3.9953%" y="1605" width="0.0110%" height="15" fill="rgb(236,157,25)" fg:x="2322679829" fg:w="6421780"/><text x="4.2453%" y="1615.50"></text></g><g><title>node::fs::FSReqPromise&lt;node::AliasedBufferBase&lt;double, v8::Float64Array&gt; &gt;::New (6,421,780 samples, 0.01%)</title><rect x="3.9953%" y="1589" width="0.0110%" height="15" fill="rgb(219,209,0)" fg:x="2322679829" fg:w="6421780"/><text x="4.2453%" y="1599.50"></text></g><g><title>node::fs::FSReqAfterScope::Reject (19,895,928 samples, 0.03%)</title><rect x="3.9734%" y="1877" width="0.0342%" height="15" fill="rgb(240,116,54)" fg:x="2309942592" fg:w="19895928"/><text x="4.2234%" y="1887.50"></text></g><g><title>node::fs::FSReqPromise&lt;node::AliasedBufferBase&lt;double, v8::Float64Array&gt; &gt;::Reject (13,658,371 samples, 0.02%)</title><rect x="3.9841%" y="1861" width="0.0235%" height="15" fill="rgb(216,10,36)" fg:x="2316180149" fg:w="13658371"/><text x="4.2341%" y="1871.50"></text></g><g><title>node::fs::AfterStringPtr (22,907,839 samples, 0.04%)</title><rect x="3.9720%" y="1893" width="0.0394%" height="15" fill="rgb(222,72,44)" fg:x="2309161096" fg:w="22907839"/><text x="4.2220%" y="1903.50"></text></g><g><title>node::MakeLibuvRequestCallback&lt;uv_fs_s, void (*)(uv_fs_s*)&gt;::Wrapper (57,062,125 samples, 0.10%)</title><rect x="3.9222%" y="1909" width="0.0982%" height="15" fill="rgb(232,159,9)" fg:x="2280215440" fg:w="57062125"/><text x="4.1722%" y="1919.50"></text></g><g><title>uv__async_io.part.3 (72,865,508 samples, 0.13%)</title><rect x="3.8964%" y="1941" width="0.1253%" height="15" fill="rgb(210,39,32)" fg:x="2265193399" fg:w="72865508"/><text x="4.1464%" y="1951.50"></text></g><g><title>uv__work_done (57,843,467 samples, 0.10%)</title><rect x="3.9222%" y="1925" width="0.0995%" height="15" fill="rgb(216,194,45)" fg:x="2280215440" fg:w="57843467"/><text x="4.1722%" y="1935.50"></text></g><g><title>Builtins_RegExpPrototypeTestFast (5,996,462 samples, 0.01%)</title><rect x="4.0457%" y="1749" width="0.0103%" height="15" fill="rgb(218,18,35)" fg:x="2352007196" fg:w="5996462"/><text x="4.2957%" y="1759.50"></text></g><g><title>[perf-79955.map] (5,996,462 samples, 0.01%)</title><rect x="4.0457%" y="1733" width="0.0103%" height="15" fill="rgb(207,83,51)" fg:x="2352007196" fg:w="5996462"/><text x="4.2957%" y="1743.50"></text></g><g><title>[perf-79955.map] (9,897,097 samples, 0.02%)</title><rect x="4.0619%" y="1749" width="0.0170%" height="15" fill="rgb(225,63,43)" fg:x="2361418131" fg:w="9897097"/><text x="4.3119%" y="1759.50"></text></g><g><title>Builtins_JSEntryTrampoline (29,187,374 samples, 0.05%)</title><rect x="4.0310%" y="1813" width="0.0502%" height="15" fill="rgb(207,57,36)" fg:x="2343476817" fg:w="29187374"/><text x="4.2810%" y="1823.50"></text></g><g><title>[perf-79955.map] (27,993,246 samples, 0.05%)</title><rect x="4.0331%" y="1797" width="0.0482%" height="15" fill="rgb(216,99,33)" fg:x="2344670945" fg:w="27993246"/><text x="4.2831%" y="1807.50"></text></g><g><title>[perf-79955.map] (26,308,325 samples, 0.05%)</title><rect x="4.0360%" y="1781" width="0.0453%" height="15" fill="rgb(225,42,16)" fg:x="2346355866" fg:w="26308325"/><text x="4.2860%" y="1791.50"></text></g><g><title>[perf-79955.map] (23,777,239 samples, 0.04%)</title><rect x="4.0404%" y="1765" width="0.0409%" height="15" fill="rgb(220,201,45)" fg:x="2348886952" fg:w="23777239"/><text x="4.2904%" y="1775.50"></text></g><g><title>node::AsyncWrap::MakeCallback (33,479,209 samples, 0.06%)</title><rect x="4.0241%" y="1909" width="0.0576%" height="15" fill="rgb(225,33,4)" fg:x="2339412190" fg:w="33479209"/><text x="4.2741%" y="1919.50"></text></g><g><title>node::InternalMakeCallback (33,019,168 samples, 0.06%)</title><rect x="4.0248%" y="1893" width="0.0568%" height="15" fill="rgb(224,33,50)" fg:x="2339872231" fg:w="33019168"/><text x="4.2748%" y="1903.50"></text></g><g><title>v8::Function::Call (32,620,357 samples, 0.06%)</title><rect x="4.0255%" y="1877" width="0.0561%" height="15" fill="rgb(246,198,51)" fg:x="2340271042" fg:w="32620357"/><text x="4.2755%" y="1887.50"></text></g><g><title>v8::internal::Execution::Call (31,802,756 samples, 0.05%)</title><rect x="4.0269%" y="1861" width="0.0547%" height="15" fill="rgb(205,22,4)" fg:x="2341088643" fg:w="31802756"/><text x="4.2769%" y="1871.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (31,294,960 samples, 0.05%)</title><rect x="4.0278%" y="1845" width="0.0538%" height="15" fill="rgb(206,3,8)" fg:x="2341596439" fg:w="31294960"/><text x="4.2778%" y="1855.50"></text></g><g><title>Builtins_JSEntry (29,414,582 samples, 0.05%)</title><rect x="4.0310%" y="1829" width="0.0506%" height="15" fill="rgb(251,23,15)" fg:x="2343476817" fg:w="29414582"/><text x="4.2810%" y="1839.50"></text></g><g><title>node::(anonymous namespace)::FSEventWrap::OnEvent (37,558,075 samples, 0.06%)</title><rect x="4.0236%" y="1925" width="0.0646%" height="15" fill="rgb(252,88,28)" fg:x="2339125074" fg:w="37558075"/><text x="4.2736%" y="1935.50"></text></g><g><title>uv__inotify_read (38,700,101 samples, 0.07%)</title><rect x="4.0217%" y="1941" width="0.0666%" height="15" fill="rgb(212,127,14)" fg:x="2338058907" fg:w="38700101"/><text x="4.2717%" y="1951.50"></text></g><g><title>uv__signal_event (7,177,060 samples, 0.01%)</title><rect x="4.0913%" y="1941" width="0.0123%" height="15" fill="rgb(247,145,37)" fg:x="2378485736" fg:w="7177060"/><text x="4.3413%" y="1951.50"></text></g><g><title>uv__wait_children (5,992,848 samples, 0.01%)</title><rect x="4.0933%" y="1925" width="0.0103%" height="15" fill="rgb(209,117,53)" fg:x="2379669948" fg:w="5992848"/><text x="4.3433%" y="1935.50"></text></g><g><title>node::(anonymous namespace)::ProcessWrap::OnExit (5,992,848 samples, 0.01%)</title><rect x="4.0933%" y="1909" width="0.0103%" height="15" fill="rgb(212,90,42)" fg:x="2379669948" fg:w="5992848"/><text x="4.3433%" y="1919.50"></text></g><g><title>node::AsyncWrap::MakeCallback (5,992,848 samples, 0.01%)</title><rect x="4.0933%" y="1893" width="0.0103%" height="15" fill="rgb(218,164,37)" fg:x="2379669948" fg:w="5992848"/><text x="4.3433%" y="1903.50"></text></g><g><title>node::InternalMakeCallback (5,992,848 samples, 0.01%)</title><rect x="4.0933%" y="1877" width="0.0103%" height="15" fill="rgb(246,65,34)" fg:x="2379669948" fg:w="5992848"/><text x="4.3433%" y="1887.50"></text></g><g><title>[perf-79955.map] (8,172,373 samples, 0.01%)</title><rect x="4.1181%" y="1589" width="0.0141%" height="15" fill="rgb(231,100,33)" fg:x="2394087123" fg:w="8172373"/><text x="4.3681%" y="1599.50"></text></g><g><title>[perf-79955.map] (8,172,373 samples, 0.01%)</title><rect x="4.1181%" y="1573" width="0.0141%" height="15" fill="rgb(228,126,14)" fg:x="2394087123" fg:w="8172373"/><text x="4.3681%" y="1583.50"></text></g><g><title>[perf-79955.map] (7,659,578 samples, 0.01%)</title><rect x="4.1190%" y="1557" width="0.0132%" height="15" fill="rgb(215,173,21)" fg:x="2394599918" fg:w="7659578"/><text x="4.3690%" y="1567.50"></text></g><g><title>[perf-79955.map] (7,659,578 samples, 0.01%)</title><rect x="4.1190%" y="1541" width="0.0132%" height="15" fill="rgb(210,6,40)" fg:x="2394599918" fg:w="7659578"/><text x="4.3690%" y="1551.50"></text></g><g><title>[perf-79955.map] (7,659,578 samples, 0.01%)</title><rect x="4.1190%" y="1525" width="0.0132%" height="15" fill="rgb(212,48,18)" fg:x="2394599918" fg:w="7659578"/><text x="4.3690%" y="1535.50"></text></g><g><title>[perf-79955.map] (7,126,623 samples, 0.01%)</title><rect x="4.1199%" y="1509" width="0.0123%" height="15" fill="rgb(230,214,11)" fg:x="2395132873" fg:w="7126623"/><text x="4.3699%" y="1519.50"></text></g><g><title>[perf-79955.map] (6,635,808 samples, 0.01%)</title><rect x="4.1207%" y="1493" width="0.0114%" height="15" fill="rgb(254,105,39)" fg:x="2395623688" fg:w="6635808"/><text x="4.3707%" y="1503.50"></text></g><g><title>[perf-79955.map] (15,045,027 samples, 0.03%)</title><rect x="4.1068%" y="1717" width="0.0259%" height="15" fill="rgb(245,158,5)" fg:x="2387502797" fg:w="15045027"/><text x="4.3568%" y="1727.50"></text></g><g><title>[perf-79955.map] (14,740,056 samples, 0.03%)</title><rect x="4.1073%" y="1701" width="0.0254%" height="15" fill="rgb(249,208,11)" fg:x="2387807768" fg:w="14740056"/><text x="4.3573%" y="1711.50"></text></g><g><title>[perf-79955.map] (14,740,056 samples, 0.03%)</title><rect x="4.1073%" y="1685" width="0.0254%" height="15" fill="rgb(210,39,28)" fg:x="2387807768" fg:w="14740056"/><text x="4.3573%" y="1695.50"></text></g><g><title>[perf-79955.map] (14,740,056 samples, 0.03%)</title><rect x="4.1073%" y="1669" width="0.0254%" height="15" fill="rgb(211,56,53)" fg:x="2387807768" fg:w="14740056"/><text x="4.3573%" y="1679.50"></text></g><g><title>[perf-79955.map] (14,740,056 samples, 0.03%)</title><rect x="4.1073%" y="1653" width="0.0254%" height="15" fill="rgb(226,201,30)" fg:x="2387807768" fg:w="14740056"/><text x="4.3573%" y="1663.50"></text></g><g><title>[perf-79955.map] (12,837,584 samples, 0.02%)</title><rect x="4.1106%" y="1637" width="0.0221%" height="15" fill="rgb(239,101,34)" fg:x="2389710240" fg:w="12837584"/><text x="4.3606%" y="1647.50"></text></g><g><title>[perf-79955.map] (12,594,700 samples, 0.02%)</title><rect x="4.1110%" y="1621" width="0.0217%" height="15" fill="rgb(226,209,5)" fg:x="2389953124" fg:w="12594700"/><text x="4.3610%" y="1631.50"></text></g><g><title>[perf-79955.map] (10,164,157 samples, 0.02%)</title><rect x="4.1152%" y="1605" width="0.0175%" height="15" fill="rgb(250,105,47)" fg:x="2392383667" fg:w="10164157"/><text x="4.3652%" y="1615.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (16,094,554 samples, 0.03%)</title><rect x="4.1068%" y="1765" width="0.0277%" height="15" fill="rgb(230,72,3)" fg:x="2387502797" fg:w="16094554"/><text x="4.3568%" y="1775.50"></text></g><g><title>Builtins_JSEntry (16,094,554 samples, 0.03%)</title><rect x="4.1068%" y="1749" width="0.0277%" height="15" fill="rgb(232,218,39)" fg:x="2387502797" fg:w="16094554"/><text x="4.3568%" y="1759.50"></text></g><g><title>Builtins_JSEntryTrampoline (16,094,554 samples, 0.03%)</title><rect x="4.1068%" y="1733" width="0.0277%" height="15" fill="rgb(248,166,6)" fg:x="2387502797" fg:w="16094554"/><text x="4.3568%" y="1743.50"></text></g><g><title>node::InternalCallbackScope::Close (16,902,541 samples, 0.03%)</title><rect x="4.1064%" y="1813" width="0.0291%" height="15" fill="rgb(247,89,20)" fg:x="2387304678" fg:w="16902541"/><text x="4.3564%" y="1823.50"></text></g><g><title>v8::Function::Call (16,902,541 samples, 0.03%)</title><rect x="4.1064%" y="1797" width="0.0291%" height="15" fill="rgb(248,130,54)" fg:x="2387304678" fg:w="16902541"/><text x="4.3564%" y="1807.50"></text></g><g><title>v8::internal::Execution::Call (16,902,541 samples, 0.03%)</title><rect x="4.1064%" y="1781" width="0.0291%" height="15" fill="rgb(234,196,4)" fg:x="2387304678" fg:w="16902541"/><text x="4.3564%" y="1791.50"></text></g><g><title>Builtins_StringIndexOf (7,493,137 samples, 0.01%)</title><rect x="4.1582%" y="1461" width="0.0129%" height="15" fill="rgb(250,143,31)" fg:x="2417406123" fg:w="7493137"/><text x="4.4082%" y="1471.50"></text></g><g><title>v8::internal::JSReceiver::GetOwnPropertyDescriptor (6,774,907 samples, 0.01%)</title><rect x="4.2139%" y="1237" width="0.0117%" height="15" fill="rgb(211,110,34)" fg:x="2449765103" fg:w="6774907"/><text x="4.4639%" y="1247.50"></text></g><g><title>v8::internal::FilterProxyKeys (10,714,507 samples, 0.02%)</title><rect x="4.2123%" y="1269" width="0.0184%" height="15" fill="rgb(215,124,48)" fg:x="2448869492" fg:w="10714507"/><text x="4.4623%" y="1279.50"></text></g><g><title>v8::internal::JSProxy::GetOwnPropertyDescriptor (10,464,586 samples, 0.02%)</title><rect x="4.2128%" y="1253" width="0.0180%" height="15" fill="rgb(216,46,13)" fg:x="2449119413" fg:w="10464586"/><text x="4.4628%" y="1263.50"></text></g><g><title>Builtins_ObjectKeys (21,363,224 samples, 0.04%)</title><rect x="4.2123%" y="1381" width="0.0367%" height="15" fill="rgb(205,184,25)" fg:x="2448869492" fg:w="21363224"/><text x="4.4623%" y="1391.50"></text></g><g><title>Builtins_CEntry_Return1_ArgvOnStack_NoBuiltinExit (21,363,224 samples, 0.04%)</title><rect x="4.2123%" y="1365" width="0.0367%" height="15" fill="rgb(228,1,10)" fg:x="2448869492" fg:w="21363224"/><text x="4.4623%" y="1375.50"></text></g><g><title>v8::internal::Runtime_ObjectKeys (21,363,224 samples, 0.04%)</title><rect x="4.2123%" y="1349" width="0.0367%" height="15" fill="rgb(213,116,27)" fg:x="2448869492" fg:w="21363224"/><text x="4.4623%" y="1359.50"></text></g><g><title>v8::internal::KeyAccumulator::GetKeys (21,363,224 samples, 0.04%)</title><rect x="4.2123%" y="1333" width="0.0367%" height="15" fill="rgb(241,95,50)" fg:x="2448869492" fg:w="21363224"/><text x="4.4623%" y="1343.50"></text></g><g><title>v8::internal::KeyAccumulator::CollectKeys (21,363,224 samples, 0.04%)</title><rect x="4.2123%" y="1317" width="0.0367%" height="15" fill="rgb(238,48,32)" fg:x="2448869492" fg:w="21363224"/><text x="4.4623%" y="1327.50"></text></g><g><title>v8::internal::KeyAccumulator::CollectOwnJSProxyKeys (21,363,224 samples, 0.04%)</title><rect x="4.2123%" y="1301" width="0.0367%" height="15" fill="rgb(235,113,49)" fg:x="2448869492" fg:w="21363224"/><text x="4.4623%" y="1311.50"></text></g><g><title>v8::internal::KeyAccumulator::CollectOwnJSProxyTargetKeys (21,363,224 samples, 0.04%)</title><rect x="4.2123%" y="1285" width="0.0367%" height="15" fill="rgb(205,127,43)" fg:x="2448869492" fg:w="21363224"/><text x="4.4623%" y="1295.50"></text></g><g><title>[perf-96500.map] (46,779,431 samples, 0.08%)</title><rect x="4.1790%" y="1429" width="0.0805%" height="15" fill="rgb(250,162,2)" fg:x="2429504812" fg:w="46779431"/><text x="4.4290%" y="1439.50"></text></g><g><title>[perf-96500.map] (43,281,412 samples, 0.07%)</title><rect x="4.1850%" y="1413" width="0.0744%" height="15" fill="rgb(220,13,41)" fg:x="2433002831" fg:w="43281412"/><text x="4.4350%" y="1423.50"></text></g><g><title>[perf-96500.map] (42,890,242 samples, 0.07%)</title><rect x="4.1857%" y="1397" width="0.0738%" height="15" fill="rgb(249,221,25)" fg:x="2433394001" fg:w="42890242"/><text x="4.4357%" y="1407.50"></text></g><g><title>[perf-96500.map] (69,390,724 samples, 0.12%)</title><rect x="4.1412%" y="1733" width="0.1194%" height="15" fill="rgb(215,208,19)" fg:x="2407527355" fg:w="69390724"/><text x="4.3912%" y="1743.50"></text></g><g><title>[perf-96500.map] (68,962,319 samples, 0.12%)</title><rect x="4.1420%" y="1717" width="0.1186%" height="15" fill="rgb(236,175,2)" fg:x="2407955760" fg:w="68962319"/><text x="4.3920%" y="1727.50"></text></g><g><title>[perf-96500.map] (68,962,319 samples, 0.12%)</title><rect x="4.1420%" y="1701" width="0.1186%" height="15" fill="rgb(241,52,2)" fg:x="2407955760" fg:w="68962319"/><text x="4.3920%" y="1711.50"></text></g><g><title>[perf-96500.map] (68,796,065 samples, 0.12%)</title><rect x="4.1422%" y="1685" width="0.1183%" height="15" fill="rgb(248,140,14)" fg:x="2408122014" fg:w="68796065"/><text x="4.3922%" y="1695.50"></text></g><g><title>[perf-96500.map] (68,121,286 samples, 0.12%)</title><rect x="4.1434%" y="1669" width="0.1172%" height="15" fill="rgb(253,22,42)" fg:x="2408796793" fg:w="68121286"/><text x="4.3934%" y="1679.50"></text></g><g><title>[perf-96500.map] (68,045,492 samples, 0.12%)</title><rect x="4.1435%" y="1653" width="0.1170%" height="15" fill="rgb(234,61,47)" fg:x="2408872587" fg:w="68045492"/><text x="4.3935%" y="1663.50"></text></g><g><title>[perf-96500.map] (68,045,492 samples, 0.12%)</title><rect x="4.1435%" y="1637" width="0.1170%" height="15" fill="rgb(208,226,15)" fg:x="2408872587" fg:w="68045492"/><text x="4.3935%" y="1647.50"></text></g><g><title>[perf-96500.map] (68,045,492 samples, 0.12%)</title><rect x="4.1435%" y="1621" width="0.1170%" height="15" fill="rgb(217,221,4)" fg:x="2408872587" fg:w="68045492"/><text x="4.3935%" y="1631.50"></text></g><g><title>[perf-96500.map] (67,907,375 samples, 0.12%)</title><rect x="4.1438%" y="1605" width="0.1168%" height="15" fill="rgb(212,174,34)" fg:x="2409010704" fg:w="67907375"/><text x="4.3938%" y="1615.50"></text></g><g><title>[perf-96500.map] (67,907,375 samples, 0.12%)</title><rect x="4.1438%" y="1589" width="0.1168%" height="15" fill="rgb(253,83,4)" fg:x="2409010704" fg:w="67907375"/><text x="4.3938%" y="1599.50"></text></g><g><title>[perf-96500.map] (67,907,375 samples, 0.12%)</title><rect x="4.1438%" y="1573" width="0.1168%" height="15" fill="rgb(250,195,49)" fg:x="2409010704" fg:w="67907375"/><text x="4.3938%" y="1583.50"></text></g><g><title>[perf-96500.map] (67,907,375 samples, 0.12%)</title><rect x="4.1438%" y="1557" width="0.1168%" height="15" fill="rgb(241,192,25)" fg:x="2409010704" fg:w="67907375"/><text x="4.3938%" y="1567.50"></text></g><g><title>[perf-96500.map] (66,850,905 samples, 0.11%)</title><rect x="4.1456%" y="1541" width="0.1150%" height="15" fill="rgb(208,124,10)" fg:x="2410067174" fg:w="66850905"/><text x="4.3956%" y="1551.50"></text></g><g><title>[perf-96500.map] (66,721,524 samples, 0.11%)</title><rect x="4.1458%" y="1525" width="0.1148%" height="15" fill="rgb(222,33,0)" fg:x="2410196555" fg:w="66721524"/><text x="4.3958%" y="1535.50"></text></g><g><title>[perf-96500.map] (66,315,619 samples, 0.11%)</title><rect x="4.1465%" y="1509" width="0.1141%" height="15" fill="rgb(234,209,28)" fg:x="2410602460" fg:w="66315619"/><text x="4.3965%" y="1519.50"></text></g><g><title>[perf-96500.map] (65,325,235 samples, 0.11%)</title><rect x="4.1482%" y="1493" width="0.1124%" height="15" fill="rgb(224,11,23)" fg:x="2411592844" fg:w="65325235"/><text x="4.3982%" y="1503.50"></text></g><g><title>[perf-96500.map] (62,065,310 samples, 0.11%)</title><rect x="4.1538%" y="1477" width="0.1068%" height="15" fill="rgb(232,99,1)" fg:x="2414852769" fg:w="62065310"/><text x="4.4038%" y="1487.50"></text></g><g><title>[perf-96500.map] (52,018,819 samples, 0.09%)</title><rect x="4.1711%" y="1461" width="0.0895%" height="15" fill="rgb(237,95,45)" fg:x="2424899260" fg:w="52018819"/><text x="4.4211%" y="1471.50"></text></g><g><title>[perf-96500.map] (50,884,629 samples, 0.09%)</title><rect x="4.1731%" y="1445" width="0.0875%" height="15" fill="rgb(208,109,11)" fg:x="2426033450" fg:w="50884629"/><text x="4.4231%" y="1455.50"></text></g><g><title>node::StreamBase::CallJSOnreadMethod (90,308,812 samples, 0.16%)</title><rect x="4.1061%" y="1861" width="0.1553%" height="15" fill="rgb(216,190,48)" fg:x="2387095431" fg:w="90308812"/><text x="4.3561%" y="1871.50"></text></g><g><title>node::AsyncWrap::MakeCallback (90,099,565 samples, 0.15%)</title><rect x="4.1064%" y="1845" width="0.1550%" height="15" fill="rgb(251,171,36)" fg:x="2387304678" fg:w="90099565"/><text x="4.3564%" y="1855.50"></text></g><g><title>node::InternalMakeCallback (90,099,565 samples, 0.15%)</title><rect x="4.1064%" y="1829" width="0.1550%" height="15" fill="rgb(230,62,22)" fg:x="2387304678" fg:w="90099565"/><text x="4.3564%" y="1839.50"></text></g><g><title>v8::Function::Call (73,197,024 samples, 0.13%)</title><rect x="4.1355%" y="1813" width="0.1259%" height="15" fill="rgb(225,114,35)" fg:x="2404207219" fg:w="73197024"/><text x="4.3855%" y="1823.50"></text></g><g><title>v8::internal::Execution::Call (73,067,911 samples, 0.13%)</title><rect x="4.1357%" y="1797" width="0.1257%" height="15" fill="rgb(215,118,42)" fg:x="2404336332" fg:w="73067911"/><text x="4.3857%" y="1807.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (73,067,911 samples, 0.13%)</title><rect x="4.1357%" y="1781" width="0.1257%" height="15" fill="rgb(243,119,21)" fg:x="2404336332" fg:w="73067911"/><text x="4.3857%" y="1791.50"></text></g><g><title>Builtins_JSEntry (73,067,911 samples, 0.13%)</title><rect x="4.1357%" y="1765" width="0.1257%" height="15" fill="rgb(252,177,53)" fg:x="2404336332" fg:w="73067911"/><text x="4.3857%" y="1775.50"></text></g><g><title>Builtins_JSEntryTrampoline (73,067,911 samples, 0.13%)</title><rect x="4.1357%" y="1749" width="0.1257%" height="15" fill="rgb(237,209,29)" fg:x="2404336332" fg:w="73067911"/><text x="4.3857%" y="1759.50"></text></g><g><title>uv__io_poll (250,206,763 samples, 0.43%)</title><rect x="3.8317%" y="1957" width="0.4304%" height="15" fill="rgb(212,65,23)" fg:x="2227599894" fg:w="250206763"/><text x="4.0817%" y="1967.50"></text></g><g><title>uv__stream_io (92,143,861 samples, 0.16%)</title><rect x="4.1036%" y="1941" width="0.1585%" height="15" fill="rgb(230,222,46)" fg:x="2385662796" fg:w="92143861"/><text x="4.3536%" y="1951.50"></text></g><g><title>uv__read (90,980,280 samples, 0.16%)</title><rect x="4.1056%" y="1925" width="0.1565%" height="15" fill="rgb(215,135,32)" fg:x="2386826377" fg:w="90980280"/><text x="4.3556%" y="1935.50"></text></g><g><title>node::LibuvStreamWrap::ReadStart (90,872,869 samples, 0.16%)</title><rect x="4.1058%" y="1909" width="0.1563%" height="15" fill="rgb(246,101,22)" fg:x="2386933788" fg:w="90872869"/><text x="4.3558%" y="1919.50"></text></g><g><title>node::LibuvStreamWrap::OnUvRead (90,814,264 samples, 0.16%)</title><rect x="4.1059%" y="1893" width="0.1562%" height="15" fill="rgb(206,107,13)" fg:x="2386992393" fg:w="90814264"/><text x="4.3559%" y="1903.50"></text></g><g><title>node::EmitToJSStreamListener::OnStreamRead (90,814,264 samples, 0.16%)</title><rect x="4.1059%" y="1877" width="0.1562%" height="15" fill="rgb(250,100,44)" fg:x="2386992393" fg:w="90814264"/><text x="4.3559%" y="1887.50"></text></g><g><title>__x64_sys_access (6,895,650 samples, 0.01%)</title><rect x="4.4079%" y="1525" width="0.0119%" height="15" fill="rgb(231,147,38)" fg:x="2562584642" fg:w="6895650"/><text x="4.6579%" y="1535.50"></text></g><g><title>do_faccessat (6,895,650 samples, 0.01%)</title><rect x="4.4079%" y="1509" width="0.0119%" height="15" fill="rgb(229,8,40)" fg:x="2562584642" fg:w="6895650"/><text x="4.6579%" y="1519.50"></text></g><g><title>user_path_at_empty (6,143,362 samples, 0.01%)</title><rect x="4.4092%" y="1493" width="0.0106%" height="15" fill="rgb(221,135,30)" fg:x="2563336930" fg:w="6143362"/><text x="4.6592%" y="1503.50"></text></g><g><title>uv_fs_access (10,152,720 samples, 0.02%)</title><rect x="4.4068%" y="1589" width="0.0175%" height="15" fill="rgb(249,193,18)" fg:x="2561914908" fg:w="10152720"/><text x="4.6568%" y="1599.50"></text></g><g><title>__GI___access (10,152,720 samples, 0.02%)</title><rect x="4.4068%" y="1573" width="0.0175%" height="15" fill="rgb(209,133,39)" fg:x="2561914908" fg:w="10152720"/><text x="4.6568%" y="1583.50"></text></g><g><title>entry_SYSCALL_64 (10,152,720 samples, 0.02%)</title><rect x="4.4068%" y="1557" width="0.0175%" height="15" fill="rgb(232,100,14)" fg:x="2561914908" fg:w="10152720"/><text x="4.6568%" y="1567.50"></text></g><g><title>do_syscall_64 (9,482,986 samples, 0.02%)</title><rect x="4.4079%" y="1541" width="0.0163%" height="15" fill="rgb(224,185,1)" fg:x="2562584642" fg:w="9482986"/><text x="4.6579%" y="1551.50"></text></g><g><title>Builtins_CallApiCallback (11,381,071 samples, 0.02%)</title><rect x="4.4057%" y="1621" width="0.0196%" height="15" fill="rgb(223,139,8)" fg:x="2561293557" fg:w="11381071"/><text x="4.6557%" y="1631.50"></text></g><g><title>node::fs::ExistsSync (11,381,071 samples, 0.02%)</title><rect x="4.4057%" y="1605" width="0.0196%" height="15" fill="rgb(232,213,38)" fg:x="2561293557" fg:w="11381071"/><text x="4.6557%" y="1615.50"></text></g><g><title>[perf-97355.map] (18,183,327 samples, 0.03%)</title><rect x="4.4310%" y="1621" width="0.0313%" height="15" fill="rgb(207,94,22)" fg:x="2576010259" fg:w="18183327"/><text x="4.6810%" y="1631.50"></text></g><g><title>[perf-97355.map] (9,382,597 samples, 0.02%)</title><rect x="4.4462%" y="1605" width="0.0161%" height="15" fill="rgb(219,183,54)" fg:x="2584810989" fg:w="9382597"/><text x="4.6962%" y="1615.50"></text></g><g><title>Builtins_CallApiCallback (9,382,597 samples, 0.02%)</title><rect x="4.4462%" y="1589" width="0.0161%" height="15" fill="rgb(216,185,54)" fg:x="2584810989" fg:w="9382597"/><text x="4.6962%" y="1599.50"></text></g><g><title>node::fs::Stat (9,382,597 samples, 0.02%)</title><rect x="4.4462%" y="1573" width="0.0161%" height="15" fill="rgb(254,217,39)" fg:x="2584810989" fg:w="9382597"/><text x="4.6962%" y="1583.50"></text></g><g><title>[perf-97355.map] (40,838,344 samples, 0.07%)</title><rect x="4.3933%" y="1637" width="0.0702%" height="15" fill="rgb(240,178,23)" fg:x="2554078328" fg:w="40838344"/><text x="4.6433%" y="1647.50"></text></g><g><title>[perf-97355.map] (97,702,581 samples, 0.17%)</title><rect x="4.2966%" y="1685" width="0.1681%" height="15" fill="rgb(218,11,47)" fg:x="2497863428" fg:w="97702581"/><text x="4.5466%" y="1695.50"></text></g><g><title>[perf-97355.map] (77,707,392 samples, 0.13%)</title><rect x="4.3310%" y="1669" width="0.1337%" height="15" fill="rgb(218,51,51)" fg:x="2517858617" fg:w="77707392"/><text x="4.5810%" y="1679.50"></text></g><g><title>[perf-97355.map] (58,319,091 samples, 0.10%)</title><rect x="4.3644%" y="1653" width="0.1003%" height="15" fill="rgb(238,126,27)" fg:x="2537246918" fg:w="58319091"/><text x="4.6144%" y="1663.50"></text></g><g><title>node::MakeCallback (112,497,656 samples, 0.19%)</title><rect x="4.2724%" y="1925" width="0.1935%" height="15" fill="rgb(249,202,22)" fg:x="2483769821" fg:w="112497656"/><text x="4.5224%" y="1935.50"></text></g><g><title>node::InternalMakeCallback (112,497,656 samples, 0.19%)</title><rect x="4.2724%" y="1909" width="0.1935%" height="15" fill="rgb(254,195,49)" fg:x="2483769821" fg:w="112497656"/><text x="4.5224%" y="1919.50"></text></g><g><title>v8::Function::Call (112,497,656 samples, 0.19%)</title><rect x="4.2724%" y="1893" width="0.1935%" height="15" fill="rgb(208,123,14)" fg:x="2483769821" fg:w="112497656"/><text x="4.5224%" y="1903.50"></text></g><g><title>v8::internal::Execution::Call (112,497,656 samples, 0.19%)</title><rect x="4.2724%" y="1877" width="0.1935%" height="15" fill="rgb(224,200,8)" fg:x="2483769821" fg:w="112497656"/><text x="4.5224%" y="1887.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (112,497,656 samples, 0.19%)</title><rect x="4.2724%" y="1861" width="0.1935%" height="15" fill="rgb(217,61,36)" fg:x="2483769821" fg:w="112497656"/><text x="4.5224%" y="1871.50"></text></g><g><title>Builtins_JSEntry (112,497,656 samples, 0.19%)</title><rect x="4.2724%" y="1845" width="0.1935%" height="15" fill="rgb(206,35,45)" fg:x="2483769821" fg:w="112497656"/><text x="4.5224%" y="1855.50"></text></g><g><title>Builtins_JSEntryTrampoline (112,497,656 samples, 0.19%)</title><rect x="4.2724%" y="1829" width="0.1935%" height="15" fill="rgb(217,65,33)" fg:x="2483769821" fg:w="112497656"/><text x="4.5224%" y="1839.50"></text></g><g><title>[perf-97355.map] (112,497,656 samples, 0.19%)</title><rect x="4.2724%" y="1813" width="0.1935%" height="15" fill="rgb(222,158,48)" fg:x="2483769821" fg:w="112497656"/><text x="4.5224%" y="1823.50"></text></g><g><title>[perf-97355.map] (112,497,656 samples, 0.19%)</title><rect x="4.2724%" y="1797" width="0.1935%" height="15" fill="rgb(254,2,54)" fg:x="2483769821" fg:w="112497656"/><text x="4.5224%" y="1807.50"></text></g><g><title>[perf-97355.map] (112,172,630 samples, 0.19%)</title><rect x="4.2729%" y="1781" width="0.1929%" height="15" fill="rgb(250,143,38)" fg:x="2484094847" fg:w="112172630"/><text x="4.5229%" y="1791.50"></text></g><g><title>[perf-97355.map] (112,172,630 samples, 0.19%)</title><rect x="4.2729%" y="1765" width="0.1929%" height="15" fill="rgb(248,25,0)" fg:x="2484094847" fg:w="112172630"/><text x="4.5229%" y="1775.50"></text></g><g><title>[perf-97355.map] (112,172,630 samples, 0.19%)</title><rect x="4.2729%" y="1749" width="0.1929%" height="15" fill="rgb(206,152,27)" fg:x="2484094847" fg:w="112172630"/><text x="4.5229%" y="1759.50"></text></g><g><title>Builtins_ArrayForEach (112,172,630 samples, 0.19%)</title><rect x="4.2729%" y="1733" width="0.1929%" height="15" fill="rgb(240,77,30)" fg:x="2484094847" fg:w="112172630"/><text x="4.5229%" y="1743.50"></text></g><g><title>[perf-97355.map] (111,465,025 samples, 0.19%)</title><rect x="4.2741%" y="1717" width="0.1917%" height="15" fill="rgb(231,5,3)" fg:x="2484802452" fg:w="111465025"/><text x="4.5241%" y="1727.50"></text></g><g><title>[perf-97355.map] (106,795,250 samples, 0.18%)</title><rect x="4.2822%" y="1701" width="0.1837%" height="15" fill="rgb(207,226,32)" fg:x="2489472227" fg:w="106795250"/><text x="4.5322%" y="1711.50"></text></g><g><title>uv__run_check (119,148,104 samples, 0.20%)</title><rect x="4.2621%" y="1957" width="0.2049%" height="15" fill="rgb(222,207,47)" fg:x="2477806657" fg:w="119148104"/><text x="4.5121%" y="1967.50"></text></g><g><title>node::Environment::CheckImmediate (118,281,786 samples, 0.20%)</title><rect x="4.2636%" y="1941" width="0.2035%" height="15" fill="rgb(229,115,45)" fg:x="2478672975" fg:w="118281786"/><text x="4.5136%" y="1951.50"></text></g><g><title>[perf-80005.map] (9,149,314 samples, 0.02%)</title><rect x="4.4746%" y="1765" width="0.0157%" height="15" fill="rgb(224,191,6)" fg:x="2601343078" fg:w="9149314"/><text x="4.7246%" y="1775.50"></text></g><g><title>[perf-80005.map] (10,814,150 samples, 0.02%)</title><rect x="4.4720%" y="1845" width="0.0186%" height="15" fill="rgb(230,227,24)" fg:x="2599850350" fg:w="10814150"/><text x="4.7220%" y="1855.50"></text></g><g><title>[perf-80005.map] (10,814,150 samples, 0.02%)</title><rect x="4.4720%" y="1829" width="0.0186%" height="15" fill="rgb(228,80,19)" fg:x="2599850350" fg:w="10814150"/><text x="4.7220%" y="1839.50"></text></g><g><title>[perf-80005.map] (10,814,150 samples, 0.02%)</title><rect x="4.4720%" y="1813" width="0.0186%" height="15" fill="rgb(247,229,0)" fg:x="2599850350" fg:w="10814150"/><text x="4.7220%" y="1823.50"></text></g><g><title>[perf-80005.map] (10,814,150 samples, 0.02%)</title><rect x="4.4720%" y="1797" width="0.0186%" height="15" fill="rgb(237,194,15)" fg:x="2599850350" fg:w="10814150"/><text x="4.7220%" y="1807.50"></text></g><g><title>[perf-80005.map] (10,814,150 samples, 0.02%)</title><rect x="4.4720%" y="1781" width="0.0186%" height="15" fill="rgb(219,203,20)" fg:x="2599850350" fg:w="10814150"/><text x="4.7220%" y="1791.50"></text></g><g><title>Builtins_JSEntryTrampoline (16,409,759 samples, 0.03%)</title><rect x="4.4720%" y="1861" width="0.0282%" height="15" fill="rgb(234,128,8)" fg:x="2599850350" fg:w="16409759"/><text x="4.7220%" y="1871.50"></text></g><g><title>node::Environment::RunTimers (19,472,281 samples, 0.03%)</title><rect x="4.4671%" y="1941" width="0.0335%" height="15" fill="rgb(248,202,8)" fg:x="2596954761" fg:w="19472281"/><text x="4.7171%" y="1951.50"></text></g><g><title>v8::Function::Call (16,668,098 samples, 0.03%)</title><rect x="4.4719%" y="1925" width="0.0287%" height="15" fill="rgb(206,104,37)" fg:x="2599758944" fg:w="16668098"/><text x="4.7219%" y="1935.50"></text></g><g><title>v8::internal::Execution::Call (16,627,487 samples, 0.03%)</title><rect x="4.4719%" y="1909" width="0.0286%" height="15" fill="rgb(223,8,27)" fg:x="2599799555" fg:w="16627487"/><text x="4.7219%" y="1919.50"></text></g><g><title>v8::internal::(anonymous namespace)::Invoke (16,627,487 samples, 0.03%)</title><rect x="4.4719%" y="1893" width="0.0286%" height="15" fill="rgb(216,217,28)" fg:x="2599799555" fg:w="16627487"/><text x="4.7219%" y="1903.50"></text></g><g><title>Builtins_JSEntry (16,576,692 samples, 0.03%)</title><rect x="4.4720%" y="1877" width="0.0285%" height="15" fill="rgb(249,199,1)" fg:x="2599850350" fg:w="16576692"/><text x="4.7220%" y="1887.50"></text></g><g><title>__libc_start_call_main (458,522,517 samples, 0.79%)</title><rect x="3.7121%" y="2053" width="0.7887%" height="15" fill="rgb(240,85,17)" fg:x="2158033117" fg:w="458522517"/><text x="3.9621%" y="2063.50"></text></g><g><title>node::Start (458,522,517 samples, 0.79%)</title><rect x="3.7121%" y="2037" width="0.7887%" height="15" fill="rgb(206,108,45)" fg:x="2158033117" fg:w="458522517"/><text x="3.9621%" y="2047.50"></text></g><g><title>node::NodeMainInstance::Run (458,522,517 samples, 0.79%)</title><rect x="3.7121%" y="2021" width="0.7887%" height="15" fill="rgb(245,210,41)" fg:x="2158033117" fg:w="458522517"/><text x="3.9621%" y="2031.50"></text></g><g><title>node::NodeMainInstance::Run (458,522,517 samples, 0.79%)</title><rect x="3.7121%" y="2005" width="0.7887%" height="15" fill="rgb(206,13,37)" fg:x="2158033117" fg:w="458522517"/><text x="3.9621%" y="2015.50"></text></g><g><title>node::SpinEventLoopInternal (458,522,517 samples, 0.79%)</title><rect x="3.7121%" y="1989" width="0.7887%" height="15" fill="rgb(250,61,18)" fg:x="2158033117" fg:w="458522517"/><text x="3.9621%" y="1999.50"></text></g><g><title>uv_run (457,845,942 samples, 0.79%)</title><rect x="3.7132%" y="1973" width="0.7875%" height="15" fill="rgb(235,172,48)" fg:x="2158709692" fg:w="457845942"/><text x="3.9632%" y="1983.50"></text></g><g><title>uv__run_timers (19,600,873 samples, 0.03%)</title><rect x="4.4671%" y="1957" width="0.0337%" height="15" fill="rgb(249,201,17)" fg:x="2596954761" fg:w="19600873"/><text x="4.7171%" y="1967.50"></text></g><g><title>_int_free (13,852,709 samples, 0.02%)</title><rect x="4.5061%" y="2053" width="0.0238%" height="15" fill="rgb(219,208,6)" fg:x="2619656813" fg:w="13852709"/><text x="4.7561%" y="2063.50"></text></g><g><title>_int_malloc (42,617,714 samples, 0.07%)</title><rect x="4.5299%" y="2053" width="0.0733%" height="15" fill="rgb(248,31,23)" fg:x="2633509522" fg:w="42617714"/><text x="4.7799%" y="2063.50"></text></g><g><title>cfree@GLIBC_2.2.5 (15,181,229 samples, 0.03%)</title><rect x="4.6041%" y="2053" width="0.0261%" height="15" fill="rgb(245,15,42)" fg:x="2676597927" fg:w="15181229"/><text x="4.8541%" y="2063.50"></text></g><g><title>malloc (68,034,709 samples, 0.12%)</title><rect x="4.6303%" y="2053" width="0.1170%" height="15" fill="rgb(222,217,39)" fg:x="2691884539" fg:w="68034709"/><text x="4.8803%" y="2063.50"></text></g><g><title>__x64_sys_futex (9,927,930 samples, 0.02%)</title><rect x="4.7500%" y="2005" width="0.0171%" height="15" fill="rgb(210,219,27)" fg:x="2761438805" fg:w="9927930"/><text x="5.0000%" y="2015.50"></text></g><g><title>__se_sys_futex (9,927,930 samples, 0.02%)</title><rect x="4.7500%" y="1989" width="0.0171%" height="15" fill="rgb(252,166,36)" fg:x="2761438805" fg:w="9927930"/><text x="5.0000%" y="1999.50"></text></g><g><title>do_futex (9,927,930 samples, 0.02%)</title><rect x="4.7500%" y="1973" width="0.0171%" height="15" fill="rgb(245,132,34)" fg:x="2761438805" fg:w="9927930"/><text x="5.0000%" y="1983.50"></text></g><g><title>futex_wake (9,927,930 samples, 0.02%)</title><rect x="4.7500%" y="1957" width="0.0171%" height="15" fill="rgb(236,54,3)" fg:x="2761438805" fg:w="9927930"/><text x="5.0000%" y="1967.50"></text></g><g><title>wake_up_q (7,471,811 samples, 0.01%)</title><rect x="4.7542%" y="1941" width="0.0129%" height="15" fill="rgb(241,173,43)" fg:x="2763894924" fg:w="7471811"/><text x="5.0042%" y="1951.50"></text></g><g><title>try_to_wake_up (6,403,120 samples, 0.01%)</title><rect x="4.7560%" y="1925" width="0.0110%" height="15" fill="rgb(215,190,9)" fg:x="2764963615" fg:w="6403120"/><text x="5.0060%" y="1935.50"></text></g><g><title>entry_SYSCALL_64 (11,930,118 samples, 0.02%)</title><rect x="4.7500%" y="2037" width="0.0205%" height="15" fill="rgb(242,101,16)" fg:x="2761438805" fg:w="11930118"/><text x="5.0000%" y="2047.50"></text></g><g><title>do_syscall_64 (11,930,118 samples, 0.02%)</title><rect x="4.7500%" y="2021" width="0.0205%" height="15" fill="rgb(223,190,21)" fg:x="2761438805" fg:w="11930118"/><text x="5.0000%" y="2031.50"></text></g><g><title>pthread_cond_broadcast@@GLIBC_2.3.2 (13,570,394 samples, 0.02%)</title><rect x="4.7500%" y="2053" width="0.0233%" height="15" fill="rgb(215,228,25)" fg:x="2761438805" fg:w="13570394"/><text x="5.0000%" y="2063.50"></text></g><g><title>entry_SYSCALL_64 (7,589,484 samples, 0.01%)</title><rect x="4.7746%" y="2037" width="0.0131%" height="15" fill="rgb(225,36,22)" fg:x="2775748525" fg:w="7589484"/><text x="5.0246%" y="2047.50"></text></g><g><title>do_syscall_64 (6,806,833 samples, 0.01%)</title><rect x="4.7759%" y="2021" width="0.0117%" height="15" fill="rgb(251,106,46)" fg:x="2776531176" fg:w="6806833"/><text x="5.0259%" y="2031.50"></text></g><g><title>pthread_cond_signal@@GLIBC_2.3.2 (10,513,271 samples, 0.02%)</title><rect x="4.7733%" y="2053" width="0.0181%" height="15" fill="rgb(208,90,1)" fg:x="2775009199" fg:w="10513271"/><text x="5.0233%" y="2063.50"></text></g><g><title>std::_Function_handler&lt;void (), v8::internal::ArrayBufferSweeper::RequestSweep(v8::internal::ArrayBufferSweeper::SweepingType, v8::internal::ArrayBufferSweeper::TreatAllYoungAsPromoted)::{lambda()#1}&gt;::_M_invoke (11,086,356 samples, 0.02%)</title><rect x="4.7917%" y="2021" width="0.0191%" height="15" fill="rgb(243,10,4)" fg:x="2785702648" fg:w="11086356"/><text x="5.0417%" y="2031.50"></text></g><g><title>v8::internal::ArrayBufferSweeper::SweepingJob::SweepYoung (10,604,174 samples, 0.02%)</title><rect x="4.7926%" y="2005" width="0.0182%" height="15" fill="rgb(212,137,27)" fg:x="2786184830" fg:w="10604174"/><text x="5.0426%" y="2015.50"></text></g><g><title>v8::internal::OptimizingCompileDispatcher::CompileTask::RunInternal (21,158,602 samples, 0.04%)</title><rect x="4.8108%" y="2021" width="0.0364%" height="15" fill="rgb(231,220,49)" fg:x="2796789004" fg:w="21158602"/><text x="5.0608%" y="2031.50"></text></g><g><title>v8::internal::OptimizingCompileDispatcher::CompileNext (21,158,602 samples, 0.04%)</title><rect x="4.8108%" y="2005" width="0.0364%" height="15" fill="rgb(237,96,20)" fg:x="2796789004" fg:w="21158602"/><text x="5.0608%" y="2015.50"></text></g><g><title>v8::internal::OptimizedCompilationJob::ExecuteJob (21,158,602 samples, 0.04%)</title><rect x="4.8108%" y="1989" width="0.0364%" height="15" fill="rgb(239,229,30)" fg:x="2796789004" fg:w="21158602"/><text x="5.0608%" y="1999.50"></text></g><g><title>v8::internal::compiler::PipelineCompilationJob::ExecuteJobImpl (21,158,602 samples, 0.04%)</title><rect x="4.8108%" y="1973" width="0.0364%" height="15" fill="rgb(219,65,33)" fg:x="2796789004" fg:w="21158602"/><text x="5.0608%" y="1983.50"></text></g><g><title>v8::internal::compiler::PipelineImpl::OptimizeGraph (17,749,934 samples, 0.03%)</title><rect x="4.8167%" y="1957" width="0.0305%" height="15" fill="rgb(243,134,7)" fg:x="2800197672" fg:w="17749934"/><text x="5.0667%" y="1967.50"></text></g><g><title>node::(anonymous namespace)::PlatformWorkerThread (35,406,404 samples, 0.06%)</title><rect x="4.7914%" y="2037" width="0.0609%" height="15" fill="rgb(216,177,54)" fg:x="2785522470" fg:w="35406404"/><text x="5.0414%" y="2047.50"></text></g><g><title>__wake_up (6,153,968 samples, 0.01%)</title><rect x="4.8656%" y="1877" width="0.0106%" height="15" fill="rgb(211,160,20)" fg:x="2828670078" fg:w="6153968"/><text x="5.1156%" y="1887.50"></text></g><g><title>__wake_up_locked_key (8,456,046 samples, 0.01%)</title><rect x="4.8630%" y="1909" width="0.0145%" height="15" fill="rgb(239,85,39)" fg:x="2827122050" fg:w="8456046"/><text x="5.1130%" y="1919.50"></text></g><g><title>ep_poll_callback (6,908,018 samples, 0.01%)</title><rect x="4.8656%" y="1893" width="0.0119%" height="15" fill="rgb(232,125,22)" fg:x="2828670078" fg:w="6908018"/><text x="5.1156%" y="1903.50"></text></g><g><title>eventfd_write (9,202,159 samples, 0.02%)</title><rect x="4.8630%" y="1925" width="0.0158%" height="15" fill="rgb(244,57,34)" fg:x="2827122050" fg:w="9202159"/><text x="5.1130%" y="1935.50"></text></g><g><title>ksys_write (12,993,548 samples, 0.02%)</title><rect x="4.8578%" y="1957" width="0.0224%" height="15" fill="rgb(214,203,32)" fg:x="2824093467" fg:w="12993548"/><text x="5.1078%" y="1967.50"></text></g><g><title>vfs_write (10,734,294 samples, 0.02%)</title><rect x="4.8616%" y="1941" width="0.0185%" height="15" fill="rgb(207,58,43)" fg:x="2826352721" fg:w="10734294"/><text x="5.1116%" y="1951.50"></text></g><g><title>__x64_sys_write (13,634,241 samples, 0.02%)</title><rect x="4.8578%" y="1973" width="0.0235%" height="15" fill="rgb(215,193,15)" fg:x="2824093467" fg:w="13634241"/><text x="5.1078%" y="1983.50"></text></g><g><title>entry_SYSCALL_64 (15,166,563 samples, 0.03%)</title><rect x="4.8565%" y="2005" width="0.0261%" height="15" fill="rgb(232,15,44)" fg:x="2823334439" fg:w="15166563"/><text x="5.1065%" y="2015.50"></text></g><g><title>do_syscall_64 (15,166,563 samples, 0.03%)</title><rect x="4.8565%" y="1989" width="0.0261%" height="15" fill="rgb(212,3,48)" fg:x="2823334439" fg:w="15166563"/><text x="5.1065%" y="1999.50"></text></g><g><title>__GI___libc_write (16,711,591 samples, 0.03%)</title><rect x="4.8551%" y="2021" width="0.0287%" height="15" fill="rgb(218,128,7)" fg:x="2822566818" fg:w="16711591"/><text x="5.1051%" y="2031.50"></text></g><g><title>established_get_first (6,340,902 samples, 0.01%)</title><rect x="4.9069%" y="1861" width="0.0109%" height="15" fill="rgb(226,216,39)" fg:x="2852676522" fg:w="6340902"/><text x="5.1569%" y="1871.50"></text></g><g><title>read (11,653,829 samples, 0.02%)</title><rect x="4.9046%" y="2021" width="0.0200%" height="15" fill="rgb(243,47,51)" fg:x="2851307219" fg:w="11653829"/><text x="5.1546%" y="2031.50"></text></g><g><title>entry_SYSCALL_64 (11,653,829 samples, 0.02%)</title><rect x="4.9046%" y="2005" width="0.0200%" height="15" fill="rgb(241,183,40)" fg:x="2851307219" fg:w="11653829"/><text x="5.1546%" y="2015.50"></text></g><g><title>do_syscall_64 (11,653,829 samples, 0.02%)</title><rect x="4.9046%" y="1989" width="0.0200%" height="15" fill="rgb(231,217,32)" fg:x="2851307219" fg:w="11653829"/><text x="5.1546%" y="1999.50"></text></g><g><title>__x64_sys_read (11,653,829 samples, 0.02%)</title><rect x="4.9046%" y="1973" width="0.0200%" height="15" fill="rgb(229,61,38)" fg:x="2851307219" fg:w="11653829"/><text x="5.1546%" y="1983.50"></text></g><g><title>ksys_read (11,653,829 samples, 0.02%)</title><rect x="4.9046%" y="1957" width="0.0200%" height="15" fill="rgb(225,210,5)" fg:x="2851307219" fg:w="11653829"/><text x="5.1546%" y="1967.50"></text></g><g><title>vfs_read (11,653,829 samples, 0.02%)</title><rect x="4.9046%" y="1941" width="0.0200%" height="15" fill="rgb(231,79,45)" fg:x="2851307219" fg:w="11653829"/><text x="5.1546%" y="1951.50"></text></g><g><title>proc_reg_read (10,908,498 samples, 0.02%)</title><rect x="4.9059%" y="1925" width="0.0188%" height="15" fill="rgb(224,100,7)" fg:x="2852052550" fg:w="10908498"/><text x="5.1559%" y="1935.50"></text></g><g><title>seq_read (10,908,498 samples, 0.02%)</title><rect x="4.9059%" y="1909" width="0.0188%" height="15" fill="rgb(241,198,18)" fg:x="2852052550" fg:w="10908498"/><text x="5.1559%" y="1919.50"></text></g><g><title>seq_read_iter (10,908,498 samples, 0.02%)</title><rect x="4.9059%" y="1893" width="0.0188%" height="15" fill="rgb(252,97,53)" fg:x="2852052550" fg:w="10908498"/><text x="5.1559%" y="1903.50"></text></g><g><title>tcp_seq_next (10,284,526 samples, 0.02%)</title><rect x="4.9069%" y="1877" width="0.0177%" height="15" fill="rgb(220,88,7)" fg:x="2852676522" fg:w="10284526"/><text x="5.1569%" y="1887.50"></text></g><g><title>__x64_sys_statx (9,882,697 samples, 0.02%)</title><rect x="4.9246%" y="1941" width="0.0170%" height="15" fill="rgb(213,176,14)" fg:x="2862961048" fg:w="9882697"/><text x="5.1746%" y="1951.50"></text></g><g><title>vfs_statx (6,066,556 samples, 0.01%)</title><rect x="4.9312%" y="1925" width="0.0104%" height="15" fill="rgb(246,73,7)" fg:x="2866777189" fg:w="6066556"/><text x="5.1812%" y="1935.50"></text></g><g><title>do_syscall_64 (11,299,552 samples, 0.02%)</title><rect x="4.9246%" y="1957" width="0.0194%" height="15" fill="rgb(245,64,36)" fg:x="2862961048" fg:w="11299552"/><text x="5.1746%" y="1967.50"></text></g><g><title>entry_SYSCALL_64 (12,076,901 samples, 0.02%)</title><rect x="4.9246%" y="1973" width="0.0208%" height="15" fill="rgb(245,80,10)" fg:x="2862961048" fg:w="12076901"/><text x="5.1746%" y="1983.50"></text></g><g><title>start_thread (91,787,114 samples, 0.16%)</title><rect x="4.7914%" y="2053" width="0.1579%" height="15" fill="rgb(232,107,50)" fg:x="2785522470" fg:w="91787114"/><text x="5.0414%" y="2063.50"></text></g><g><title>worker (56,283,415 samples, 0.10%)</title><rect x="4.8525%" y="2037" width="0.0968%" height="15" fill="rgb(253,3,0)" fg:x="2821026169" fg:w="56283415"/><text x="5.1025%" y="2047.50"></text></g><g><title>uv__fs_work (14,348,536 samples, 0.02%)</title><rect x="4.9246%" y="2021" width="0.0247%" height="15" fill="rgb(212,99,53)" fg:x="2862961048" fg:w="14348536"/><text x="5.1746%" y="2031.50"></text></g><g><title>uv__fs_statx (14,348,536 samples, 0.02%)</title><rect x="4.9246%" y="2005" width="0.0247%" height="15" fill="rgb(249,111,54)" fg:x="2862961048" fg:w="14348536"/><text x="5.1746%" y="2015.50"></text></g><g><title>syscall (14,348,536 samples, 0.02%)</title><rect x="4.9246%" y="1989" width="0.0247%" height="15" fill="rgb(249,55,30)" fg:x="2862961048" fg:w="14348536"/><text x="5.1746%" y="1999.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (21,439,381 samples, 0.04%)</title><rect x="4.9526%" y="37" width="0.0369%" height="15" fill="rgb(237,47,42)" fg:x="2879226318" fg:w="21439381"/><text x="5.2026%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (21,874,289 samples, 0.04%)</title><rect x="4.9526%" y="53" width="0.0376%" height="15" fill="rgb(211,20,18)" fg:x="2879226318" fg:w="21874289"/><text x="5.2026%" y="63.50"></text></g><g><title>malloc (6,000,149 samples, 0.01%)</title><rect x="4.9902%" y="37" width="0.0103%" height="15" fill="rgb(231,203,46)" fg:x="2901100607" fg:w="6000149"/><text x="5.2402%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (31,357,579 samples, 0.05%)</title><rect x="5.0090%" y="37" width="0.0539%" height="15" fill="rgb(237,142,3)" fg:x="2912026537" fg:w="31357579"/><text x="5.2590%" y="47.50"></text></g><g><title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (19,724,182 samples, 0.03%)</title><rect x="5.0630%" y="37" width="0.0339%" height="15" fill="rgb(241,107,1)" fg:x="2943384116" fg:w="19724182"/><text x="5.3130%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (104,016,733 samples, 0.18%)</title><rect x="4.9493%" y="2021" width="0.1789%" height="15" fill="rgb(229,83,13)" fg:x="2877309584" fg:w="104016733"/><text x="5.1993%" y="2031.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="2005" width="0.1756%" height="15" fill="rgb(241,91,40)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="2015.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1989" width="0.1756%" height="15" fill="rgb(225,3,45)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1999.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1973" width="0.1756%" height="15" fill="rgb(244,223,14)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1983.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1957" width="0.1756%" height="15" fill="rgb(224,124,37)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1967.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1941" width="0.1756%" height="15" fill="rgb(251,171,30)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1951.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1925" width="0.1756%" height="15" fill="rgb(236,46,54)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1935.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1909" width="0.1756%" height="15" fill="rgb(245,213,5)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1919.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1893" width="0.1756%" height="15" fill="rgb(230,144,27)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1903.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1877" width="0.1756%" height="15" fill="rgb(220,86,6)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1887.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1861" width="0.1756%" height="15" fill="rgb(240,20,13)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1871.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1845" width="0.1756%" height="15" fill="rgb(217,89,34)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1855.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1829" width="0.1756%" height="15" fill="rgb(229,13,5)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1839.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1813" width="0.1756%" height="15" fill="rgb(244,67,35)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1823.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1797" width="0.1756%" height="15" fill="rgb(221,40,2)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1807.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1781" width="0.1756%" height="15" fill="rgb(237,157,21)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1791.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1765" width="0.1756%" height="15" fill="rgb(222,94,11)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1775.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1749" width="0.1756%" height="15" fill="rgb(249,113,6)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1759.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1733" width="0.1756%" height="15" fill="rgb(238,137,36)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1743.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1717" width="0.1756%" height="15" fill="rgb(210,102,26)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1727.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1701" width="0.1756%" height="15" fill="rgb(218,30,30)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1711.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1685" width="0.1756%" height="15" fill="rgb(214,67,26)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1695.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1669" width="0.1756%" height="15" fill="rgb(251,9,53)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1679.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1653" width="0.1756%" height="15" fill="rgb(228,204,25)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1663.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1637" width="0.1756%" height="15" fill="rgb(207,153,8)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1647.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1621" width="0.1756%" height="15" fill="rgb(242,9,16)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1631.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1605" width="0.1756%" height="15" fill="rgb(217,211,10)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1615.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1589" width="0.1756%" height="15" fill="rgb(219,228,52)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1599.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1573" width="0.1756%" height="15" fill="rgb(231,92,29)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1583.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1557" width="0.1756%" height="15" fill="rgb(232,8,23)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1567.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1541" width="0.1756%" height="15" fill="rgb(216,211,34)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1551.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1525" width="0.1756%" height="15" fill="rgb(236,151,0)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1535.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1509" width="0.1756%" height="15" fill="rgb(209,168,3)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1519.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1493" width="0.1756%" height="15" fill="rgb(208,129,28)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1503.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1477" width="0.1756%" height="15" fill="rgb(229,78,22)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1487.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1461" width="0.1756%" height="15" fill="rgb(228,187,13)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1471.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1445" width="0.1756%" height="15" fill="rgb(240,119,24)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1455.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1429" width="0.1756%" height="15" fill="rgb(209,194,42)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1439.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1413" width="0.1756%" height="15" fill="rgb(247,200,46)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1423.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1397" width="0.1756%" height="15" fill="rgb(218,76,16)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1407.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1381" width="0.1756%" height="15" fill="rgb(225,21,48)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1391.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1365" width="0.1756%" height="15" fill="rgb(239,223,50)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1375.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1349" width="0.1756%" height="15" fill="rgb(244,45,21)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1359.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1333" width="0.1756%" height="15" fill="rgb(232,33,43)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1343.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1317" width="0.1756%" height="15" fill="rgb(209,8,3)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1327.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1301" width="0.1756%" height="15" fill="rgb(214,25,53)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1311.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1285" width="0.1756%" height="15" fill="rgb(254,186,54)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1295.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1269" width="0.1756%" height="15" fill="rgb(208,174,49)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1279.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1253" width="0.1756%" height="15" fill="rgb(233,191,51)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1263.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1237" width="0.1756%" height="15" fill="rgb(222,134,10)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1247.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1221" width="0.1756%" height="15" fill="rgb(230,226,20)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1231.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1205" width="0.1756%" height="15" fill="rgb(251,111,25)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1215.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1189" width="0.1756%" height="15" fill="rgb(224,40,46)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1199.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1173" width="0.1756%" height="15" fill="rgb(236,108,47)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1183.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1157" width="0.1756%" height="15" fill="rgb(234,93,0)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1167.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1141" width="0.1756%" height="15" fill="rgb(224,213,32)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1151.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1125" width="0.1756%" height="15" fill="rgb(251,11,48)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1135.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1109" width="0.1756%" height="15" fill="rgb(236,173,5)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1119.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1093" width="0.1756%" height="15" fill="rgb(230,95,12)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1103.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1077" width="0.1756%" height="15" fill="rgb(232,209,1)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1087.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1061" width="0.1756%" height="15" fill="rgb(232,6,1)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1071.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1045" width="0.1756%" height="15" fill="rgb(210,224,50)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1055.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1029" width="0.1756%" height="15" fill="rgb(228,127,35)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1039.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="1013" width="0.1756%" height="15" fill="rgb(245,102,45)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1023.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="997" width="0.1756%" height="15" fill="rgb(214,1,49)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="1007.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="981" width="0.1756%" height="15" fill="rgb(226,163,40)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="991.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="965" width="0.1756%" height="15" fill="rgb(239,212,28)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="975.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="949" width="0.1756%" height="15" fill="rgb(220,20,13)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="959.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="933" width="0.1756%" height="15" fill="rgb(210,164,35)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="943.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="917" width="0.1756%" height="15" fill="rgb(248,109,41)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="927.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="901" width="0.1756%" height="15" fill="rgb(238,23,50)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="911.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="885" width="0.1756%" height="15" fill="rgb(211,48,49)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="895.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="869" width="0.1756%" height="15" fill="rgb(223,36,21)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="879.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="853" width="0.1756%" height="15" fill="rgb(207,123,46)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="863.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="837" width="0.1756%" height="15" fill="rgb(240,218,32)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="847.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="821" width="0.1756%" height="15" fill="rgb(252,5,43)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="831.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="805" width="0.1756%" height="15" fill="rgb(252,84,19)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="815.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="789" width="0.1756%" height="15" fill="rgb(243,152,39)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="799.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="773" width="0.1756%" height="15" fill="rgb(234,160,15)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="783.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="757" width="0.1756%" height="15" fill="rgb(237,34,20)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="767.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="741" width="0.1756%" height="15" fill="rgb(229,97,13)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="751.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="725" width="0.1756%" height="15" fill="rgb(234,71,50)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="735.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="709" width="0.1756%" height="15" fill="rgb(253,155,4)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="719.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="693" width="0.1756%" height="15" fill="rgb(222,185,37)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="703.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="677" width="0.1756%" height="15" fill="rgb(251,177,13)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="687.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="661" width="0.1756%" height="15" fill="rgb(250,179,40)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="671.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="645" width="0.1756%" height="15" fill="rgb(242,44,2)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="655.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="629" width="0.1756%" height="15" fill="rgb(216,177,13)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="639.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="613" width="0.1756%" height="15" fill="rgb(216,106,43)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="623.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="597" width="0.1756%" height="15" fill="rgb(216,183,2)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="607.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="581" width="0.1756%" height="15" fill="rgb(249,75,3)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="591.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="565" width="0.1756%" height="15" fill="rgb(219,67,39)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="575.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="549" width="0.1756%" height="15" fill="rgb(253,228,2)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="559.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="533" width="0.1756%" height="15" fill="rgb(235,138,27)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="543.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="517" width="0.1756%" height="15" fill="rgb(236,97,51)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="527.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="501" width="0.1756%" height="15" fill="rgb(240,80,30)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="511.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="485" width="0.1756%" height="15" fill="rgb(230,178,19)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="495.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="469" width="0.1756%" height="15" fill="rgb(210,190,27)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="479.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="453" width="0.1756%" height="15" fill="rgb(222,107,31)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="463.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="437" width="0.1756%" height="15" fill="rgb(216,127,34)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="447.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="421" width="0.1756%" height="15" fill="rgb(234,116,52)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="431.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="405" width="0.1756%" height="15" fill="rgb(222,124,15)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="415.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="389" width="0.1756%" height="15" fill="rgb(231,179,28)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="399.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="373" width="0.1756%" height="15" fill="rgb(226,93,45)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="383.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="357" width="0.1756%" height="15" fill="rgb(215,8,51)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="367.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="341" width="0.1756%" height="15" fill="rgb(223,106,5)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="351.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="325" width="0.1756%" height="15" fill="rgb(250,191,5)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="335.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="309" width="0.1756%" height="15" fill="rgb(242,132,44)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="319.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="293" width="0.1756%" height="15" fill="rgb(251,152,29)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="303.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="277" width="0.1756%" height="15" fill="rgb(218,179,5)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="287.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="261" width="0.1756%" height="15" fill="rgb(227,67,19)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="271.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="245" width="0.1756%" height="15" fill="rgb(233,119,31)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="255.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="229" width="0.1756%" height="15" fill="rgb(241,120,22)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="239.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="213" width="0.1756%" height="15" fill="rgb(224,102,30)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="223.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="197" width="0.1756%" height="15" fill="rgb(210,164,37)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="207.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="181" width="0.1756%" height="15" fill="rgb(226,191,16)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="191.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="165" width="0.1756%" height="15" fill="rgb(214,40,45)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="175.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="149" width="0.1756%" height="15" fill="rgb(244,29,26)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="159.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="133" width="0.1756%" height="15" fill="rgb(216,16,5)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="143.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="117" width="0.1756%" height="15" fill="rgb(249,76,35)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="127.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="101" width="0.1756%" height="15" fill="rgb(207,11,44)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="111.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="85" width="0.1756%" height="15" fill="rgb(228,190,49)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="95.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (102,099,999 samples, 0.18%)</title><rect x="4.9526%" y="69" width="0.1756%" height="15" fill="rgb(214,173,12)" fg:x="2879226318" fg:w="102099999"/><text x="5.2026%" y="79.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (80,225,710 samples, 0.14%)</title><rect x="4.9902%" y="53" width="0.1380%" height="15" fill="rgb(218,26,35)" fg:x="2901100607" fg:w="80225710"/><text x="5.2402%" y="63.50"></text></g><g><title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (18,218,019 samples, 0.03%)</title><rect x="5.0969%" y="37" width="0.0313%" height="15" fill="rgb(220,200,19)" fg:x="2963108298" fg:w="18218019"/><text x="5.3469%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15,503,643 samples, 0.03%)</title><rect x="5.1292%" y="37" width="0.0267%" height="15" fill="rgb(239,95,49)" fg:x="2981923580" fg:w="15503643"/><text x="5.3792%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (27,542,397 samples, 0.05%)</title><rect x="5.1282%" y="69" width="0.0474%" height="15" fill="rgb(235,85,53)" fg:x="2981326317" fg:w="27542397"/><text x="5.3782%" y="79.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (27,542,397 samples, 0.05%)</title><rect x="5.1282%" y="53" width="0.0474%" height="15" fill="rgb(233,133,31)" fg:x="2981326317" fg:w="27542397"/><text x="5.3782%" y="63.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11,441,491 samples, 0.02%)</title><rect x="5.1559%" y="37" width="0.0197%" height="15" fill="rgb(218,25,20)" fg:x="2997427223" fg:w="11441491"/><text x="5.4059%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,420,445 samples, 0.11%)</title><rect x="5.1282%" y="133" width="0.1091%" height="15" fill="rgb(252,210,38)" fg:x="2981326317" fg:w="63420445"/><text x="5.3782%" y="143.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,420,445 samples, 0.11%)</title><rect x="5.1282%" y="117" width="0.1091%" height="15" fill="rgb(242,134,21)" fg:x="2981326317" fg:w="63420445"/><text x="5.3782%" y="127.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (63,420,445 samples, 0.11%)</title><rect x="5.1282%" y="101" width="0.1091%" height="15" fill="rgb(213,28,48)" fg:x="2981326317" fg:w="63420445"/><text x="5.3782%" y="111.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,420,445 samples, 0.11%)</title><rect x="5.1282%" y="85" width="0.1091%" height="15" fill="rgb(250,196,2)" fg:x="2981326317" fg:w="63420445"/><text x="5.3782%" y="95.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (35,878,048 samples, 0.06%)</title><rect x="5.1756%" y="69" width="0.0617%" height="15" fill="rgb(227,5,17)" fg:x="3008868714" fg:w="35878048"/><text x="5.4256%" y="79.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (35,878,048 samples, 0.06%)</title><rect x="5.1756%" y="53" width="0.0617%" height="15" fill="rgb(221,226,24)" fg:x="3008868714" fg:w="35878048"/><text x="5.4256%" y="63.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (35,055,132 samples, 0.06%)</title><rect x="5.1770%" y="37" width="0.0603%" height="15" fill="rgb(211,5,48)" fg:x="3009691630" fg:w="35055132"/><text x="5.4270%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (167,977,753 samples, 0.29%)</title><rect x="4.9493%" y="2037" width="0.2889%" height="15" fill="rgb(219,150,6)" fg:x="2877309584" fg:w="167977753"/><text x="5.1993%" y="2047.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="2021" width="0.1100%" height="15" fill="rgb(251,46,16)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="2031.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="2005" width="0.1100%" height="15" fill="rgb(220,204,40)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="2015.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1989" width="0.1100%" height="15" fill="rgb(211,85,2)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1999.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1973" width="0.1100%" height="15" fill="rgb(229,17,7)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1983.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1957" width="0.1100%" height="15" fill="rgb(239,72,28)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1967.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1941" width="0.1100%" height="15" fill="rgb(230,47,54)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1951.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1925" width="0.1100%" height="15" fill="rgb(214,50,8)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1935.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1909" width="0.1100%" height="15" fill="rgb(216,198,43)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1919.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1893" width="0.1100%" height="15" fill="rgb(234,20,35)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1903.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1877" width="0.1100%" height="15" fill="rgb(254,45,19)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1887.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1861" width="0.1100%" height="15" fill="rgb(219,14,44)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1871.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1845" width="0.1100%" height="15" fill="rgb(217,220,26)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1855.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1829" width="0.1100%" height="15" fill="rgb(213,158,28)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1839.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1813" width="0.1100%" height="15" fill="rgb(252,51,52)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1823.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1797" width="0.1100%" height="15" fill="rgb(246,89,16)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1807.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1781" width="0.1100%" height="15" fill="rgb(216,158,49)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1791.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1765" width="0.1100%" height="15" fill="rgb(236,107,19)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1775.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1749" width="0.1100%" height="15" fill="rgb(228,185,30)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1759.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1733" width="0.1100%" height="15" fill="rgb(246,134,8)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1743.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1717" width="0.1100%" height="15" fill="rgb(214,143,50)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1727.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1701" width="0.1100%" height="15" fill="rgb(228,75,8)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1711.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1685" width="0.1100%" height="15" fill="rgb(207,175,4)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1695.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1669" width="0.1100%" height="15" fill="rgb(205,108,24)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1679.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1653" width="0.1100%" height="15" fill="rgb(244,120,49)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1663.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1637" width="0.1100%" height="15" fill="rgb(223,47,38)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1647.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1621" width="0.1100%" height="15" fill="rgb(229,179,11)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1631.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1605" width="0.1100%" height="15" fill="rgb(231,122,1)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1615.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1589" width="0.1100%" height="15" fill="rgb(245,119,9)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1599.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1573" width="0.1100%" height="15" fill="rgb(241,163,25)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1583.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1557" width="0.1100%" height="15" fill="rgb(217,214,3)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1567.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1541" width="0.1100%" height="15" fill="rgb(240,86,28)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1551.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1525" width="0.1100%" height="15" fill="rgb(215,47,9)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1535.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1509" width="0.1100%" height="15" fill="rgb(252,25,45)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1519.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1493" width="0.1100%" height="15" fill="rgb(251,164,9)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1503.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1477" width="0.1100%" height="15" fill="rgb(233,194,0)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1487.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1461" width="0.1100%" height="15" fill="rgb(249,111,24)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1471.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1445" width="0.1100%" height="15" fill="rgb(250,223,3)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1455.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1429" width="0.1100%" height="15" fill="rgb(236,178,37)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1439.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1413" width="0.1100%" height="15" fill="rgb(241,158,50)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1423.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1397" width="0.1100%" height="15" fill="rgb(213,121,41)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1407.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1381" width="0.1100%" height="15" fill="rgb(240,92,3)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1391.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1365" width="0.1100%" height="15" fill="rgb(205,123,3)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1375.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1349" width="0.1100%" height="15" fill="rgb(205,97,47)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1359.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1333" width="0.1100%" height="15" fill="rgb(247,152,14)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1343.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1317" width="0.1100%" height="15" fill="rgb(248,195,53)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1327.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1301" width="0.1100%" height="15" fill="rgb(226,201,16)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1311.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1285" width="0.1100%" height="15" fill="rgb(205,98,0)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1295.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1269" width="0.1100%" height="15" fill="rgb(214,191,48)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1279.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1253" width="0.1100%" height="15" fill="rgb(237,112,39)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1263.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1237" width="0.1100%" height="15" fill="rgb(247,203,27)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1247.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1221" width="0.1100%" height="15" fill="rgb(235,124,28)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1231.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1205" width="0.1100%" height="15" fill="rgb(208,207,46)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1215.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1189" width="0.1100%" height="15" fill="rgb(234,176,4)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1199.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1173" width="0.1100%" height="15" fill="rgb(230,133,28)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1183.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1157" width="0.1100%" height="15" fill="rgb(211,137,40)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1167.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1141" width="0.1100%" height="15" fill="rgb(254,35,13)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1151.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1125" width="0.1100%" height="15" fill="rgb(225,49,51)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1135.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1109" width="0.1100%" height="15" fill="rgb(251,10,15)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1119.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1093" width="0.1100%" height="15" fill="rgb(228,207,15)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1103.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1077" width="0.1100%" height="15" fill="rgb(241,99,19)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1087.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1061" width="0.1100%" height="15" fill="rgb(207,104,49)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1071.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1045" width="0.1100%" height="15" fill="rgb(234,99,18)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1055.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1029" width="0.1100%" height="15" fill="rgb(213,191,49)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1039.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="1013" width="0.1100%" height="15" fill="rgb(210,226,19)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1023.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="997" width="0.1100%" height="15" fill="rgb(229,97,18)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="1007.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="981" width="0.1100%" height="15" fill="rgb(211,167,15)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="991.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="965" width="0.1100%" height="15" fill="rgb(210,169,34)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="975.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="949" width="0.1100%" height="15" fill="rgb(241,121,31)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="959.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="933" width="0.1100%" height="15" fill="rgb(232,40,11)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="943.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="917" width="0.1100%" height="15" fill="rgb(205,86,26)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="927.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="901" width="0.1100%" height="15" fill="rgb(231,126,28)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="911.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="885" width="0.1100%" height="15" fill="rgb(219,221,18)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="895.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="869" width="0.1100%" height="15" fill="rgb(211,40,0)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="879.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="853" width="0.1100%" height="15" fill="rgb(239,85,43)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="863.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="837" width="0.1100%" height="15" fill="rgb(231,55,21)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="847.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="821" width="0.1100%" height="15" fill="rgb(225,184,43)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="831.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="805" width="0.1100%" height="15" fill="rgb(251,158,41)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="815.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="789" width="0.1100%" height="15" fill="rgb(234,159,37)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="799.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="773" width="0.1100%" height="15" fill="rgb(216,204,22)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="783.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="757" width="0.1100%" height="15" fill="rgb(214,17,3)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="767.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="741" width="0.1100%" height="15" fill="rgb(212,111,17)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="751.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="725" width="0.1100%" height="15" fill="rgb(221,157,24)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="735.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="709" width="0.1100%" height="15" fill="rgb(252,16,13)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="719.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="693" width="0.1100%" height="15" fill="rgb(221,62,2)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="703.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="677" width="0.1100%" height="15" fill="rgb(247,87,22)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="687.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="661" width="0.1100%" height="15" fill="rgb(215,73,9)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="671.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="645" width="0.1100%" height="15" fill="rgb(207,175,33)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="655.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="629" width="0.1100%" height="15" fill="rgb(243,129,54)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="639.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="613" width="0.1100%" height="15" fill="rgb(227,119,45)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="623.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="597" width="0.1100%" height="15" fill="rgb(205,109,36)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="607.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="581" width="0.1100%" height="15" fill="rgb(205,6,39)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="591.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="565" width="0.1100%" height="15" fill="rgb(221,32,16)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="575.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="549" width="0.1100%" height="15" fill="rgb(228,144,50)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="559.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="533" width="0.1100%" height="15" fill="rgb(229,201,53)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="543.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="517" width="0.1100%" height="15" fill="rgb(249,153,27)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="527.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="501" width="0.1100%" height="15" fill="rgb(227,106,25)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="511.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="485" width="0.1100%" height="15" fill="rgb(230,65,29)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="495.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="469" width="0.1100%" height="15" fill="rgb(221,57,46)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="479.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="453" width="0.1100%" height="15" fill="rgb(229,161,17)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="463.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="437" width="0.1100%" height="15" fill="rgb(222,213,11)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="447.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="421" width="0.1100%" height="15" fill="rgb(235,35,13)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="431.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="405" width="0.1100%" height="15" fill="rgb(233,158,34)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="415.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="389" width="0.1100%" height="15" fill="rgb(215,151,48)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="399.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="373" width="0.1100%" height="15" fill="rgb(229,84,14)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="383.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="357" width="0.1100%" height="15" fill="rgb(229,68,14)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="367.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="341" width="0.1100%" height="15" fill="rgb(243,106,26)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="351.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="325" width="0.1100%" height="15" fill="rgb(206,45,38)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="335.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="309" width="0.1100%" height="15" fill="rgb(226,6,15)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="319.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="293" width="0.1100%" height="15" fill="rgb(232,22,54)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="303.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="277" width="0.1100%" height="15" fill="rgb(229,222,32)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="287.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="261" width="0.1100%" height="15" fill="rgb(228,62,29)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="271.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="245" width="0.1100%" height="15" fill="rgb(251,103,34)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="255.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="229" width="0.1100%" height="15" fill="rgb(233,12,30)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="239.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="213" width="0.1100%" height="15" fill="rgb(238,52,0)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="223.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="197" width="0.1100%" height="15" fill="rgb(223,98,5)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="207.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="181" width="0.1100%" height="15" fill="rgb(228,75,37)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="191.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="165" width="0.1100%" height="15" fill="rgb(205,115,49)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="175.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (63,961,020 samples, 0.11%)</title><rect x="5.1282%" y="149" width="0.1100%" height="15" fill="rgb(250,154,43)" fg:x="2981326317" fg:w="63961020"/><text x="5.3782%" y="159.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (22,990,000 samples, 0.04%)</title><rect x="5.2393%" y="37" width="0.0395%" height="15" fill="rgb(226,43,29)" fg:x="3045889321" fg:w="22990000"/><text x="5.4893%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (23,985,061 samples, 0.04%)</title><rect x="5.2382%" y="85" width="0.0413%" height="15" fill="rgb(249,228,39)" fg:x="3045287337" fg:w="23985061"/><text x="5.4882%" y="95.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (23,985,061 samples, 0.04%)</title><rect x="5.2382%" y="69" width="0.0413%" height="15" fill="rgb(216,79,43)" fg:x="3045287337" fg:w="23985061"/><text x="5.4882%" y="79.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (23,383,077 samples, 0.04%)</title><rect x="5.2393%" y="53" width="0.0402%" height="15" fill="rgb(228,95,12)" fg:x="3045889321" fg:w="23383077"/><text x="5.4893%" y="63.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (43,667,025 samples, 0.08%)</title><rect x="5.2382%" y="213" width="0.0751%" height="15" fill="rgb(249,221,15)" fg:x="3045287337" fg:w="43667025"/><text x="5.4882%" y="223.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (43,667,025 samples, 0.08%)</title><rect x="5.2382%" y="197" width="0.0751%" height="15" fill="rgb(233,34,13)" fg:x="3045287337" fg:w="43667025"/><text x="5.4882%" y="207.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (43,667,025 samples, 0.08%)</title><rect x="5.2382%" y="181" width="0.0751%" height="15" fill="rgb(214,103,39)" fg:x="3045287337" fg:w="43667025"/><text x="5.4882%" y="191.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (43,667,025 samples, 0.08%)</title><rect x="5.2382%" y="165" width="0.0751%" height="15" fill="rgb(251,126,39)" fg:x="3045287337" fg:w="43667025"/><text x="5.4882%" y="175.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (43,667,025 samples, 0.08%)</title><rect x="5.2382%" y="149" width="0.0751%" height="15" fill="rgb(214,216,36)" fg:x="3045287337" fg:w="43667025"/><text x="5.4882%" y="159.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (43,667,025 samples, 0.08%)</title><rect x="5.2382%" y="133" width="0.0751%" height="15" fill="rgb(220,221,8)" fg:x="3045287337" fg:w="43667025"/><text x="5.4882%" y="143.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (43,667,025 samples, 0.08%)</title><rect x="5.2382%" y="117" width="0.0751%" height="15" fill="rgb(240,216,3)" fg:x="3045287337" fg:w="43667025"/><text x="5.4882%" y="127.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (43,667,025 samples, 0.08%)</title><rect x="5.2382%" y="101" width="0.0751%" height="15" fill="rgb(232,218,17)" fg:x="3045287337" fg:w="43667025"/><text x="5.4882%" y="111.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (19,681,964 samples, 0.03%)</title><rect x="5.2795%" y="85" width="0.0339%" height="15" fill="rgb(229,163,45)" fg:x="3069272398" fg:w="19681964"/><text x="5.5295%" y="95.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (19,681,964 samples, 0.03%)</title><rect x="5.2795%" y="69" width="0.0339%" height="15" fill="rgb(231,110,42)" fg:x="3069272398" fg:w="19681964"/><text x="5.5295%" y="79.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (19,681,964 samples, 0.03%)</title><rect x="5.2795%" y="53" width="0.0339%" height="15" fill="rgb(208,170,48)" fg:x="3069272398" fg:w="19681964"/><text x="5.5295%" y="63.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17,460,666 samples, 0.03%)</title><rect x="5.2833%" y="37" width="0.0300%" height="15" fill="rgb(239,116,25)" fg:x="3071493696" fg:w="17460666"/><text x="5.5333%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (44,727,342 samples, 0.08%)</title><rect x="5.2382%" y="277" width="0.0769%" height="15" fill="rgb(219,200,50)" fg:x="3045287337" fg:w="44727342"/><text x="5.4882%" y="287.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (44,727,342 samples, 0.08%)</title><rect x="5.2382%" y="261" width="0.0769%" height="15" fill="rgb(245,200,0)" fg:x="3045287337" fg:w="44727342"/><text x="5.4882%" y="271.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (44,727,342 samples, 0.08%)</title><rect x="5.2382%" y="245" width="0.0769%" height="15" fill="rgb(245,119,33)" fg:x="3045287337" fg:w="44727342"/><text x="5.4882%" y="255.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (44,727,342 samples, 0.08%)</title><rect x="5.2382%" y="229" width="0.0769%" height="15" fill="rgb(231,125,12)" fg:x="3045287337" fg:w="44727342"/><text x="5.4882%" y="239.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (213,373,313 samples, 0.37%)</title><rect x="4.9493%" y="2053" width="0.3670%" height="15" fill="rgb(216,96,41)" fg:x="2877309584" fg:w="213373313"/><text x="5.1993%" y="2063.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="2037" width="0.0781%" height="15" fill="rgb(248,43,45)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="2047.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="2021" width="0.0781%" height="15" fill="rgb(217,222,7)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="2031.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="2005" width="0.0781%" height="15" fill="rgb(233,28,6)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="2015.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1989" width="0.0781%" height="15" fill="rgb(231,218,15)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1999.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1973" width="0.0781%" height="15" fill="rgb(226,171,48)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1983.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1957" width="0.0781%" height="15" fill="rgb(235,201,9)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1967.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1941" width="0.0781%" height="15" fill="rgb(217,80,15)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1951.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1925" width="0.0781%" height="15" fill="rgb(219,152,8)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1935.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1909" width="0.0781%" height="15" fill="rgb(243,107,38)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1919.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1893" width="0.0781%" height="15" fill="rgb(231,17,5)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1903.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1877" width="0.0781%" height="15" fill="rgb(209,25,54)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1887.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1861" width="0.0781%" height="15" fill="rgb(219,0,2)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1871.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1845" width="0.0781%" height="15" fill="rgb(246,9,5)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1855.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1829" width="0.0781%" height="15" fill="rgb(226,159,4)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1839.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1813" width="0.0781%" height="15" fill="rgb(219,175,34)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1823.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1797" width="0.0781%" height="15" fill="rgb(236,10,46)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1807.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1781" width="0.0781%" height="15" fill="rgb(240,211,16)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1791.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1765" width="0.0781%" height="15" fill="rgb(205,3,43)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1775.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1749" width="0.0781%" height="15" fill="rgb(245,7,22)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1759.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1733" width="0.0781%" height="15" fill="rgb(239,132,32)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1743.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1717" width="0.0781%" height="15" fill="rgb(228,202,34)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1727.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1701" width="0.0781%" height="15" fill="rgb(254,200,22)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1711.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1685" width="0.0781%" height="15" fill="rgb(219,10,39)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1695.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1669" width="0.0781%" height="15" fill="rgb(226,210,39)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1679.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1653" width="0.0781%" height="15" fill="rgb(208,219,16)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1663.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1637" width="0.0781%" height="15" fill="rgb(216,158,51)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1647.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1621" width="0.0781%" height="15" fill="rgb(233,14,44)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1631.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1605" width="0.0781%" height="15" fill="rgb(237,97,39)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1615.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1589" width="0.0781%" height="15" fill="rgb(218,198,43)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1599.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1573" width="0.0781%" height="15" fill="rgb(231,104,20)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1583.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1557" width="0.0781%" height="15" fill="rgb(254,36,13)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1567.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1541" width="0.0781%" height="15" fill="rgb(248,14,50)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1551.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1525" width="0.0781%" height="15" fill="rgb(217,107,29)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1535.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1509" width="0.0781%" height="15" fill="rgb(251,169,33)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1519.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1493" width="0.0781%" height="15" fill="rgb(217,108,32)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1503.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1477" width="0.0781%" height="15" fill="rgb(219,66,42)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1487.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1461" width="0.0781%" height="15" fill="rgb(206,180,7)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1471.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1445" width="0.0781%" height="15" fill="rgb(208,226,31)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1455.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1429" width="0.0781%" height="15" fill="rgb(218,26,49)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1439.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1413" width="0.0781%" height="15" fill="rgb(233,197,48)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1423.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1397" width="0.0781%" height="15" fill="rgb(252,181,51)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1407.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1381" width="0.0781%" height="15" fill="rgb(253,90,19)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1391.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1365" width="0.0781%" height="15" fill="rgb(215,171,30)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1375.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1349" width="0.0781%" height="15" fill="rgb(214,222,9)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1359.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1333" width="0.0781%" height="15" fill="rgb(223,3,22)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1343.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1317" width="0.0781%" height="15" fill="rgb(225,196,46)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1327.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1301" width="0.0781%" height="15" fill="rgb(209,110,37)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1311.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1285" width="0.0781%" height="15" fill="rgb(249,89,12)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1295.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1269" width="0.0781%" height="15" fill="rgb(226,27,33)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1279.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1253" width="0.0781%" height="15" fill="rgb(213,82,22)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1263.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1237" width="0.0781%" height="15" fill="rgb(248,140,0)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1247.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1221" width="0.0781%" height="15" fill="rgb(228,106,3)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1231.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1205" width="0.0781%" height="15" fill="rgb(209,23,37)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1215.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1189" width="0.0781%" height="15" fill="rgb(241,93,50)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1199.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1173" width="0.0781%" height="15" fill="rgb(253,46,43)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1183.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1157" width="0.0781%" height="15" fill="rgb(226,206,43)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1167.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1141" width="0.0781%" height="15" fill="rgb(217,54,7)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1151.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1125" width="0.0781%" height="15" fill="rgb(223,5,52)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1135.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1109" width="0.0781%" height="15" fill="rgb(206,52,46)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1119.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1093" width="0.0781%" height="15" fill="rgb(253,136,11)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1103.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1077" width="0.0781%" height="15" fill="rgb(208,106,33)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1087.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1061" width="0.0781%" height="15" fill="rgb(206,54,4)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1071.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1045" width="0.0781%" height="15" fill="rgb(213,3,15)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1055.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1029" width="0.0781%" height="15" fill="rgb(252,211,39)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1039.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="1013" width="0.0781%" height="15" fill="rgb(223,6,36)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1023.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="997" width="0.0781%" height="15" fill="rgb(252,169,45)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="1007.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="981" width="0.0781%" height="15" fill="rgb(212,48,26)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="991.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="965" width="0.0781%" height="15" fill="rgb(251,102,48)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="975.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="949" width="0.0781%" height="15" fill="rgb(243,208,16)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="959.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="933" width="0.0781%" height="15" fill="rgb(219,96,24)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="943.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="917" width="0.0781%" height="15" fill="rgb(219,33,29)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="927.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="901" width="0.0781%" height="15" fill="rgb(223,176,5)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="911.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="885" width="0.0781%" height="15" fill="rgb(228,140,14)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="895.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="869" width="0.0781%" height="15" fill="rgb(217,179,31)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="879.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="853" width="0.0781%" height="15" fill="rgb(230,9,30)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="863.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="837" width="0.0781%" height="15" fill="rgb(230,136,20)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="847.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="821" width="0.0781%" height="15" fill="rgb(215,210,22)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="831.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="805" width="0.0781%" height="15" fill="rgb(218,43,5)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="815.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="789" width="0.0781%" height="15" fill="rgb(216,11,5)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="799.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="773" width="0.0781%" height="15" fill="rgb(209,82,29)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="783.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="757" width="0.0781%" height="15" fill="rgb(244,115,12)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="767.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="741" width="0.0781%" height="15" fill="rgb(222,82,18)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="751.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="725" width="0.0781%" height="15" fill="rgb(249,227,8)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="735.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="709" width="0.0781%" height="15" fill="rgb(253,141,45)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="719.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="693" width="0.0781%" height="15" fill="rgb(234,184,4)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="703.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="677" width="0.0781%" height="15" fill="rgb(218,194,23)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="687.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="661" width="0.0781%" height="15" fill="rgb(235,66,41)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="671.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="645" width="0.0781%" height="15" fill="rgb(245,217,1)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="655.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="629" width="0.0781%" height="15" fill="rgb(229,91,1)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="639.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="613" width="0.0781%" height="15" fill="rgb(207,101,30)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="623.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="597" width="0.0781%" height="15" fill="rgb(223,82,49)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="607.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="581" width="0.0781%" height="15" fill="rgb(218,167,17)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="591.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="565" width="0.0781%" height="15" fill="rgb(208,103,14)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="575.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="549" width="0.0781%" height="15" fill="rgb(238,20,8)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="559.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="533" width="0.0781%" height="15" fill="rgb(218,80,54)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="543.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="517" width="0.0781%" height="15" fill="rgb(240,144,17)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="527.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="501" width="0.0781%" height="15" fill="rgb(245,27,50)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="511.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="485" width="0.0781%" height="15" fill="rgb(251,51,7)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="495.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="469" width="0.0781%" height="15" fill="rgb(245,217,29)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="479.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="453" width="0.0781%" height="15" fill="rgb(221,176,29)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="463.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="437" width="0.0781%" height="15" fill="rgb(212,180,24)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="447.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="421" width="0.0781%" height="15" fill="rgb(254,24,2)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="431.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="405" width="0.0781%" height="15" fill="rgb(230,100,2)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="415.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="389" width="0.0781%" height="15" fill="rgb(219,142,25)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="399.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="373" width="0.0781%" height="15" fill="rgb(240,73,43)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="383.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="357" width="0.0781%" height="15" fill="rgb(214,114,15)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="367.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="341" width="0.0781%" height="15" fill="rgb(207,130,4)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="351.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="325" width="0.0781%" height="15" fill="rgb(221,25,40)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="335.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="309" width="0.0781%" height="15" fill="rgb(241,184,7)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="319.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (45,395,560 samples, 0.08%)</title><rect x="5.2382%" y="293" width="0.0781%" height="15" fill="rgb(235,159,4)" fg:x="3045287337" fg:w="45395560"/><text x="5.4882%" y="303.50"></text></g><g><title>cfree@GLIBC_2.2.5 (6,612,246 samples, 0.01%)</title><rect x="5.3163%" y="37" width="0.0114%" height="15" fill="rgb(214,87,48)" fg:x="3090682897" fg:w="6612246"/><text x="5.5663%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (23,938,935 samples, 0.04%)</title><rect x="5.3403%" y="37" width="0.0412%" height="15" fill="rgb(246,198,24)" fg:x="3104638607" fg:w="23938935"/><text x="5.5903%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (256,507,997 samples, 0.44%)</title><rect x="5.3815%" y="37" width="0.4412%" height="15" fill="rgb(209,66,40)" fg:x="3128577542" fg:w="256507997"/><text x="5.6315%" y="47.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (296,746,909 samples, 0.51%)</title><rect x="5.3163%" y="165" width="0.5104%" height="15" fill="rgb(233,147,39)" fg:x="3090682897" fg:w="296746909"/><text x="5.5663%" y="175.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (296,746,909 samples, 0.51%)</title><rect x="5.3163%" y="149" width="0.5104%" height="15" fill="rgb(231,145,52)" fg:x="3090682897" fg:w="296746909"/><text x="5.5663%" y="159.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (296,746,909 samples, 0.51%)</title><rect x="5.3163%" y="133" width="0.5104%" height="15" fill="rgb(206,20,26)" fg:x="3090682897" fg:w="296746909"/><text x="5.5663%" y="143.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (296,746,909 samples, 0.51%)</title><rect x="5.3163%" y="117" width="0.5104%" height="15" fill="rgb(238,220,4)" fg:x="3090682897" fg:w="296746909"/><text x="5.5663%" y="127.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (296,746,909 samples, 0.51%)</title><rect x="5.3163%" y="101" width="0.5104%" height="15" fill="rgb(252,195,42)" fg:x="3090682897" fg:w="296746909"/><text x="5.5663%" y="111.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (296,746,909 samples, 0.51%)</title><rect x="5.3163%" y="85" width="0.5104%" height="15" fill="rgb(209,10,6)" fg:x="3090682897" fg:w="296746909"/><text x="5.5663%" y="95.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (296,746,909 samples, 0.51%)</title><rect x="5.3163%" y="69" width="0.5104%" height="15" fill="rgb(229,3,52)" fg:x="3090682897" fg:w="296746909"/><text x="5.5663%" y="79.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (296,746,909 samples, 0.51%)</title><rect x="5.3163%" y="53" width="0.5104%" height="15" fill="rgb(253,49,37)" fg:x="3090682897" fg:w="296746909"/><text x="5.5663%" y="63.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="2053" width="0.5110%" height="15" fill="rgb(240,103,49)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="2063.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="2037" width="0.5110%" height="15" fill="rgb(250,182,30)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="2047.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="2021" width="0.5110%" height="15" fill="rgb(248,8,30)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="2031.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="2005" width="0.5110%" height="15" fill="rgb(237,120,30)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="2015.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1989" width="0.5110%" height="15" fill="rgb(221,146,34)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1999.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1973" width="0.5110%" height="15" fill="rgb(242,55,13)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1983.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1957" width="0.5110%" height="15" fill="rgb(242,112,31)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1967.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1941" width="0.5110%" height="15" fill="rgb(249,192,27)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1951.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1925" width="0.5110%" height="15" fill="rgb(208,204,44)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1935.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1909" width="0.5110%" height="15" fill="rgb(208,93,54)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1919.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1893" width="0.5110%" height="15" fill="rgb(242,1,31)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1903.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1877" width="0.5110%" height="15" fill="rgb(241,83,25)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1887.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1861" width="0.5110%" height="15" fill="rgb(205,169,50)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1871.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1845" width="0.5110%" height="15" fill="rgb(239,186,37)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1855.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1829" width="0.5110%" height="15" fill="rgb(205,221,10)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1839.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1813" width="0.5110%" height="15" fill="rgb(218,196,15)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1823.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1797" width="0.5110%" height="15" fill="rgb(218,196,35)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1807.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1781" width="0.5110%" height="15" fill="rgb(233,63,24)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1791.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1765" width="0.5110%" height="15" fill="rgb(225,8,4)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1775.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1749" width="0.5110%" height="15" fill="rgb(234,105,35)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1759.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1733" width="0.5110%" height="15" fill="rgb(236,21,32)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1743.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1717" width="0.5110%" height="15" fill="rgb(228,109,6)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1727.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1701" width="0.5110%" height="15" fill="rgb(229,215,31)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1711.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1685" width="0.5110%" height="15" fill="rgb(221,52,54)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1695.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1669" width="0.5110%" height="15" fill="rgb(252,129,43)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1679.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1653" width="0.5110%" height="15" fill="rgb(248,183,27)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1663.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1637" width="0.5110%" height="15" fill="rgb(250,0,22)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1647.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1621" width="0.5110%" height="15" fill="rgb(213,166,10)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1631.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1605" width="0.5110%" height="15" fill="rgb(207,163,36)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1615.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1589" width="0.5110%" height="15" fill="rgb(208,122,22)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1599.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1573" width="0.5110%" height="15" fill="rgb(207,104,49)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1583.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1557" width="0.5110%" height="15" fill="rgb(248,211,50)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1567.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1541" width="0.5110%" height="15" fill="rgb(217,13,45)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1551.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1525" width="0.5110%" height="15" fill="rgb(211,216,49)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1535.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1509" width="0.5110%" height="15" fill="rgb(221,58,53)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1519.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1493" width="0.5110%" height="15" fill="rgb(220,112,41)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1503.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1477" width="0.5110%" height="15" fill="rgb(236,38,28)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1487.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1461" width="0.5110%" height="15" fill="rgb(227,195,22)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1471.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1445" width="0.5110%" height="15" fill="rgb(214,55,33)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1455.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1429" width="0.5110%" height="15" fill="rgb(248,80,13)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1439.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1413" width="0.5110%" height="15" fill="rgb(238,52,6)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1423.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1397" width="0.5110%" height="15" fill="rgb(224,198,47)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1407.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1381" width="0.5110%" height="15" fill="rgb(233,171,20)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1391.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1365" width="0.5110%" height="15" fill="rgb(241,30,25)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1375.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1349" width="0.5110%" height="15" fill="rgb(207,171,38)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1359.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1333" width="0.5110%" height="15" fill="rgb(234,70,1)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1343.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1317" width="0.5110%" height="15" fill="rgb(232,178,18)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1327.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1301" width="0.5110%" height="15" fill="rgb(241,78,40)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1311.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1285" width="0.5110%" height="15" fill="rgb(222,35,25)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1295.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1269" width="0.5110%" height="15" fill="rgb(207,92,16)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1279.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1253" width="0.5110%" height="15" fill="rgb(216,59,51)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1263.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1237" width="0.5110%" height="15" fill="rgb(213,80,28)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1247.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1221" width="0.5110%" height="15" fill="rgb(220,93,7)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1231.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1205" width="0.5110%" height="15" fill="rgb(225,24,44)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1215.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1189" width="0.5110%" height="15" fill="rgb(243,74,40)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1199.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1173" width="0.5110%" height="15" fill="rgb(228,39,7)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1183.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1157" width="0.5110%" height="15" fill="rgb(227,79,8)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1167.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1141" width="0.5110%" height="15" fill="rgb(236,58,11)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1151.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1125" width="0.5110%" height="15" fill="rgb(249,63,35)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1135.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1109" width="0.5110%" height="15" fill="rgb(252,114,16)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1119.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1093" width="0.5110%" height="15" fill="rgb(254,151,24)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1103.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1077" width="0.5110%" height="15" fill="rgb(253,54,39)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1087.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1061" width="0.5110%" height="15" fill="rgb(243,25,45)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1071.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1045" width="0.5110%" height="15" fill="rgb(234,134,9)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1055.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1029" width="0.5110%" height="15" fill="rgb(227,166,31)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1039.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="1013" width="0.5110%" height="15" fill="rgb(245,143,41)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1023.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="997" width="0.5110%" height="15" fill="rgb(238,181,32)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="1007.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="981" width="0.5110%" height="15" fill="rgb(224,113,18)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="991.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="965" width="0.5110%" height="15" fill="rgb(240,229,28)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="975.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="949" width="0.5110%" height="15" fill="rgb(250,185,3)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="959.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="933" width="0.5110%" height="15" fill="rgb(212,59,25)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="943.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="917" width="0.5110%" height="15" fill="rgb(221,87,20)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="927.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="901" width="0.5110%" height="15" fill="rgb(213,74,28)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="911.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="885" width="0.5110%" height="15" fill="rgb(224,132,34)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="895.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="869" width="0.5110%" height="15" fill="rgb(222,101,24)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="879.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="853" width="0.5110%" height="15" fill="rgb(254,142,4)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="863.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="837" width="0.5110%" height="15" fill="rgb(230,229,49)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="847.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="821" width="0.5110%" height="15" fill="rgb(238,70,47)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="831.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="805" width="0.5110%" height="15" fill="rgb(231,160,17)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="815.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="789" width="0.5110%" height="15" fill="rgb(218,68,53)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="799.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="773" width="0.5110%" height="15" fill="rgb(236,111,10)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="783.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="757" width="0.5110%" height="15" fill="rgb(224,34,41)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="767.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="741" width="0.5110%" height="15" fill="rgb(241,118,19)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="751.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="725" width="0.5110%" height="15" fill="rgb(238,129,25)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="735.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="709" width="0.5110%" height="15" fill="rgb(238,22,31)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="719.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="693" width="0.5110%" height="15" fill="rgb(222,174,48)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="703.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="677" width="0.5110%" height="15" fill="rgb(206,152,40)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="687.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="661" width="0.5110%" height="15" fill="rgb(218,99,54)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="671.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="645" width="0.5110%" height="15" fill="rgb(220,174,26)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="655.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="629" width="0.5110%" height="15" fill="rgb(245,116,9)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="639.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="613" width="0.5110%" height="15" fill="rgb(209,72,35)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="623.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="597" width="0.5110%" height="15" fill="rgb(226,126,21)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="607.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="581" width="0.5110%" height="15" fill="rgb(227,192,1)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="591.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="565" width="0.5110%" height="15" fill="rgb(237,180,29)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="575.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="549" width="0.5110%" height="15" fill="rgb(230,197,35)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="559.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="533" width="0.5110%" height="15" fill="rgb(246,193,31)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="543.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="517" width="0.5110%" height="15" fill="rgb(241,36,4)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="527.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="501" width="0.5110%" height="15" fill="rgb(241,130,17)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="511.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="485" width="0.5110%" height="15" fill="rgb(206,137,32)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="495.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="469" width="0.5110%" height="15" fill="rgb(237,228,51)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="479.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="453" width="0.5110%" height="15" fill="rgb(243,6,42)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="463.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="437" width="0.5110%" height="15" fill="rgb(251,74,28)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="447.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="421" width="0.5110%" height="15" fill="rgb(218,20,49)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="431.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="405" width="0.5110%" height="15" fill="rgb(238,28,14)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="415.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="389" width="0.5110%" height="15" fill="rgb(229,40,46)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="399.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="373" width="0.5110%" height="15" fill="rgb(244,195,20)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="383.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="357" width="0.5110%" height="15" fill="rgb(253,56,35)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="367.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="341" width="0.5110%" height="15" fill="rgb(210,149,44)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="351.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="325" width="0.5110%" height="15" fill="rgb(240,135,12)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="335.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="309" width="0.5110%" height="15" fill="rgb(251,24,50)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="319.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="293" width="0.5110%" height="15" fill="rgb(243,200,47)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="303.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="277" width="0.5110%" height="15" fill="rgb(224,166,26)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="287.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="261" width="0.5110%" height="15" fill="rgb(233,0,47)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="271.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="245" width="0.5110%" height="15" fill="rgb(253,80,5)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="255.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="229" width="0.5110%" height="15" fill="rgb(214,133,25)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="239.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="213" width="0.5110%" height="15" fill="rgb(209,27,14)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="223.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="197" width="0.5110%" height="15" fill="rgb(219,102,51)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="207.50"></text></g><g><title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (297,100,239 samples, 0.51%)</title><rect x="5.3163%" y="181" width="0.5110%" height="15" fill="rgb(237,18,16)" fg:x="3090682897" fg:w="297100239"/><text x="5.5663%" y="191.50"></text></g><g><title>do_user_addr_fault (6,132,075 samples, 0.01%)</title><rect x="5.8716%" y="2005" width="0.0105%" height="15" fill="rgb(241,85,17)" fg:x="3413494506" fg:w="6132075"/><text x="6.1216%" y="2015.50"></text></g><g><title>asm_exc_page_fault (6,854,091 samples, 0.01%)</title><rect x="5.8716%" y="2037" width="0.0118%" height="15" fill="rgb(236,90,42)" fg:x="3413494506" fg:w="6854091"/><text x="6.1216%" y="2047.50"></text></g><g><title>exc_page_fault (6,854,091 samples, 0.01%)</title><rect x="5.8716%" y="2021" width="0.0118%" height="15" fill="rgb(249,57,21)" fg:x="3413494506" fg:w="6854091"/><text x="6.1216%" y="2031.50"></text></g><g><title>node (1,983,685,899 samples, 3.41%)</title><rect x="2.4761%" y="2069" width="3.4122%" height="15" fill="rgb(243,12,36)" fg:x="1439476005" fg:w="1983685899"/><text x="2.7261%" y="2079.50">node</text></g><g><title>unlink_chunk.constprop.0 (34,541,605 samples, 0.06%)</title><rect x="5.8288%" y="2053" width="0.0594%" height="15" fill="rgb(253,128,47)" fg:x="3388620299" fg:w="34541605"/><text x="6.0788%" y="2063.50"></text></g><g><title>__kmalloc (13,888,712 samples, 0.02%)</title><rect x="5.9240%" y="1733" width="0.0239%" height="15" fill="rgb(207,33,20)" fg:x="3443981609" fg:w="13888712"/><text x="6.1740%" y="1743.50"></text></g><g><title>__kmem_cache_alloc_node (13,127,798 samples, 0.02%)</title><rect x="5.9253%" y="1717" width="0.0226%" height="15" fill="rgb(233,215,35)" fg:x="3444742523" fg:w="13127798"/><text x="6.1753%" y="1727.50"></text></g><g><title>memcg_slab_pre_alloc_hook (7,481,314 samples, 0.01%)</title><rect x="5.9351%" y="1701" width="0.0129%" height="15" fill="rgb(249,188,52)" fg:x="3450389007" fg:w="7481314"/><text x="6.1851%" y="1711.50"></text></g><g><title>obj_cgroup_charge (6,868,026 samples, 0.01%)</title><rect x="5.9361%" y="1685" width="0.0118%" height="15" fill="rgb(225,12,32)" fg:x="3451002295" fg:w="6868026"/><text x="6.1861%" y="1695.50"></text></g><g><title>__wake_up (6,290,665 samples, 0.01%)</title><rect x="5.9487%" y="1717" width="0.0108%" height="15" fill="rgb(247,98,14)" fg:x="3458318926" fg:w="6290665"/><text x="6.1987%" y="1727.50"></text></g><g><title>fsnotify_insert_event (8,175,352 samples, 0.01%)</title><rect x="5.9487%" y="1733" width="0.0141%" height="15" fill="rgb(247,219,48)" fg:x="3458318926" fg:w="8175352"/><text x="6.1987%" y="1743.50"></text></g><g><title>inotify_handle_inode_event (23,225,018 samples, 0.04%)</title><rect x="5.9240%" y="1749" width="0.0399%" height="15" fill="rgb(253,60,48)" fg:x="3443981609" fg:w="23225018"/><text x="6.1740%" y="1759.50"></text></g><g><title>fsnotify (27,143,079 samples, 0.05%)</title><rect x="5.9185%" y="1797" width="0.0467%" height="15" fill="rgb(245,15,52)" fg:x="3440774775" fg:w="27143079"/><text x="6.1685%" y="1807.50"></text></g><g><title>send_to_group (25,811,746 samples, 0.04%)</title><rect x="5.9208%" y="1781" width="0.0444%" height="15" fill="rgb(220,133,28)" fg:x="3442106108" fg:w="25811746"/><text x="6.1708%" y="1791.50"></text></g><g><title>fsnotify_handle_inode_event (25,129,253 samples, 0.04%)</title><rect x="5.9220%" y="1765" width="0.0432%" height="15" fill="rgb(217,180,4)" fg:x="3442788601" fg:w="25129253"/><text x="6.1720%" y="1775.50"></text></g><g><title>__fsnotify_parent (29,989,289 samples, 0.05%)</title><rect x="5.9148%" y="1813" width="0.0516%" height="15" fill="rgb(251,24,1)" fg:x="3438586221" fg:w="29989289"/><text x="6.1648%" y="1823.50"></text></g><g><title>__mem_cgroup_charge (8,682,154 samples, 0.01%)</title><rect x="5.9828%" y="1717" width="0.0149%" height="15" fill="rgb(212,185,49)" fg:x="3478137652" fg:w="8682154"/><text x="6.2328%" y="1727.50"></text></g><g><title>kmalloc_trace (6,385,299 samples, 0.01%)</title><rect x="6.0063%" y="1717" width="0.0110%" height="15" fill="rgb(215,175,22)" fg:x="3491827348" fg:w="6385299"/><text x="6.2563%" y="1727.50"></text></g><g><title>__kmem_cache_alloc_node (6,385,299 samples, 0.01%)</title><rect x="6.0063%" y="1701" width="0.0110%" height="15" fill="rgb(250,205,14)" fg:x="3491827348" fg:w="6385299"/><text x="6.2563%" y="1711.50"></text></g><g><title>__filemap_add_folio (24,892,367 samples, 0.04%)</title><rect x="5.9826%" y="1733" width="0.0428%" height="15" fill="rgb(225,211,22)" fg:x="3478053234" fg:w="24892367"/><text x="6.2326%" y="1743.50"></text></g><g><title>filemap_alloc_folio (7,655,890 samples, 0.01%)</title><rect x="6.0261%" y="1733" width="0.0132%" height="15" fill="rgb(251,179,42)" fg:x="3503332209" fg:w="7655890"/><text x="6.2761%" y="1743.50"></text></g><g><title>folio_alloc (7,655,890 samples, 0.01%)</title><rect x="6.0261%" y="1717" width="0.0132%" height="15" fill="rgb(208,216,51)" fg:x="3503332209" fg:w="7655890"/><text x="6.2761%" y="1727.50"></text></g><g><title>alloc_pages (7,655,890 samples, 0.01%)</title><rect x="6.0261%" y="1701" width="0.0132%" height="15" fill="rgb(235,36,11)" fg:x="3503332209" fg:w="7655890"/><text x="6.2761%" y="1711.50"></text></g><g><title>__alloc_pages (7,655,890 samples, 0.01%)</title><rect x="6.0261%" y="1685" width="0.0132%" height="15" fill="rgb(213,189,28)" fg:x="3503332209" fg:w="7655890"/><text x="6.2761%" y="1695.50"></text></g><g><title>__filemap_get_folio (41,443,963 samples, 0.07%)</title><rect x="5.9826%" y="1749" width="0.0713%" height="15" fill="rgb(227,203,42)" fg:x="3478053234" fg:w="41443963"/><text x="6.2326%" y="1759.50"></text></g><g><title>create_empty_buffers (14,169,075 samples, 0.02%)</title><rect x="6.0539%" y="1733" width="0.0244%" height="15" fill="rgb(244,72,36)" fg:x="3519497197" fg:w="14169075"/><text x="6.3039%" y="1743.50"></text></g><g><title>folio_create_empty_buffers (14,169,075 samples, 0.02%)</title><rect x="6.0539%" y="1717" width="0.0244%" height="15" fill="rgb(213,53,17)" fg:x="3519497197" fg:w="14169075"/><text x="6.3039%" y="1727.50"></text></g><g><title>folio_alloc_buffers (13,150,238 samples, 0.02%)</title><rect x="6.0557%" y="1701" width="0.0226%" height="15" fill="rgb(207,167,3)" fg:x="3520516034" fg:w="13150238"/><text x="6.3057%" y="1711.50"></text></g><g><title>alloc_buffer_head (13,150,238 samples, 0.02%)</title><rect x="6.0557%" y="1685" width="0.0226%" height="15" fill="rgb(216,98,30)" fg:x="3520516034" fg:w="13150238"/><text x="6.3057%" y="1695.50"></text></g><g><title>kmem_cache_alloc (13,150,238 samples, 0.02%)</title><rect x="6.0557%" y="1669" width="0.0226%" height="15" fill="rgb(236,123,15)" fg:x="3520516034" fg:w="13150238"/><text x="6.3057%" y="1679.50"></text></g><g><title>ext4_da_get_block_prep (7,604,299 samples, 0.01%)</title><rect x="6.0783%" y="1733" width="0.0131%" height="15" fill="rgb(248,81,50)" fg:x="3533666272" fg:w="7604299"/><text x="6.3283%" y="1743.50"></text></g><g><title>ext4_da_write_begin (64,054,666 samples, 0.11%)</title><rect x="5.9816%" y="1765" width="0.1102%" height="15" fill="rgb(214,120,4)" fg:x="3477474775" fg:w="64054666"/><text x="6.2316%" y="1775.50"></text></g><g><title>ext4_block_write_begin (22,032,244 samples, 0.04%)</title><rect x="6.0539%" y="1749" width="0.0379%" height="15" fill="rgb(208,179,34)" fg:x="3519497197" fg:w="22032244"/><text x="6.3039%" y="1759.50"></text></g><g><title>fault_in_iov_iter_readable (9,164,118 samples, 0.02%)</title><rect x="6.0995%" y="1765" width="0.0158%" height="15" fill="rgb(227,140,7)" fg:x="3545962131" fg:w="9164118"/><text x="6.3495%" y="1775.50"></text></g><g><title>fault_in_readable (8,513,067 samples, 0.01%)</title><rect x="6.1006%" y="1749" width="0.0146%" height="15" fill="rgb(214,22,6)" fg:x="3546613182" fg:w="8513067"/><text x="6.3506%" y="1759.50"></text></g><g><title>generic_perform_write (88,943,451 samples, 0.15%)</title><rect x="5.9712%" y="1781" width="0.1530%" height="15" fill="rgb(207,137,27)" fg:x="3471387466" fg:w="88943451"/><text x="6.2212%" y="1791.50"></text></g><g><title>ext4_file_write_iter (92,162,652 samples, 0.16%)</title><rect x="5.9677%" y="1813" width="0.1585%" height="15" fill="rgb(210,8,46)" fg:x="3469345334" fg:w="92162652"/><text x="6.2177%" y="1823.50"></text></g><g><title>ext4_buffered_write_iter (92,162,652 samples, 0.16%)</title><rect x="5.9677%" y="1797" width="0.1585%" height="15" fill="rgb(240,16,54)" fg:x="3469345334" fg:w="92162652"/><text x="6.2177%" y="1807.50"></text></g><g><title>ksys_write (124,721,691 samples, 0.21%)</title><rect x="5.9138%" y="1845" width="0.2145%" height="15" fill="rgb(211,209,29)" fg:x="3438006206" fg:w="124721691"/><text x="6.1638%" y="1855.50"></text></g><g><title>vfs_write (124,721,691 samples, 0.21%)</title><rect x="5.9138%" y="1829" width="0.2145%" height="15" fill="rgb(226,228,24)" fg:x="3438006206" fg:w="124721691"/><text x="6.1638%" y="1839.50"></text></g><g><title>__x64_sys_write (125,408,543 samples, 0.22%)</title><rect x="5.9138%" y="1861" width="0.2157%" height="15" fill="rgb(222,84,9)" fg:x="3438006206" fg:w="125408543"/><text x="6.1638%" y="1871.50"></text></g><g><title>entry_SYSCALL_64 (126,512,963 samples, 0.22%)</title><rect x="5.9138%" y="1893" width="0.2176%" height="15" fill="rgb(234,203,30)" fg:x="3438006206" fg:w="126512963"/><text x="6.1638%" y="1903.50"></text></g><g><title>do_syscall_64 (126,512,963 samples, 0.22%)</title><rect x="5.9138%" y="1877" width="0.2176%" height="15" fill="rgb(238,109,14)" fg:x="3438006206" fg:w="126512963"/><text x="6.1638%" y="1887.50"></text></g><g><title>perf_mmap__push (133,791,563 samples, 0.23%)</title><rect x="5.9037%" y="1957" width="0.2301%" height="15" fill="rgb(233,206,34)" fg:x="3432135053" fg:w="133791563"/><text x="6.1537%" y="1967.50"></text></g><g><title>record__pushfn (128,467,510 samples, 0.22%)</title><rect x="5.9128%" y="1941" width="0.2210%" height="15" fill="rgb(220,167,47)" fg:x="3437459106" fg:w="128467510"/><text x="6.1628%" y="1951.50"></text></g><g><title>writen (128,467,510 samples, 0.22%)</title><rect x="5.9128%" y="1925" width="0.2210%" height="15" fill="rgb(238,105,10)" fg:x="3437459106" fg:w="128467510"/><text x="6.1628%" y="1935.50"></text></g><g><title>__GI___libc_write (128,467,510 samples, 0.22%)</title><rect x="5.9128%" y="1909" width="0.2210%" height="15" fill="rgb(213,227,17)" fg:x="3437459106" fg:w="128467510"/><text x="6.1628%" y="1919.50"></text></g><g><title>__libc_start_call_main (145,735,500 samples, 0.25%)</title><rect x="5.8933%" y="2053" width="0.2507%" height="15" fill="rgb(217,132,38)" fg:x="3426091979" fg:w="145735500"/><text x="6.1433%" y="2063.50"></text></g><g><title>main (145,735,500 samples, 0.25%)</title><rect x="5.8933%" y="2037" width="0.2507%" height="15" fill="rgb(242,146,4)" fg:x="3426091979" fg:w="145735500"/><text x="6.1433%" y="2047.50"></text></g><g><title>run_builtin (145,735,500 samples, 0.25%)</title><rect x="5.8933%" y="2021" width="0.2507%" height="15" fill="rgb(212,61,9)" fg:x="3426091979" fg:w="145735500"/><text x="6.1433%" y="2031.50"></text></g><g><title>cmd_record (145,735,500 samples, 0.25%)</title><rect x="5.8933%" y="2005" width="0.2507%" height="15" fill="rgb(247,126,22)" fg:x="3426091979" fg:w="145735500"/><text x="6.1433%" y="2015.50"></text></g><g><title>__cmd_record.constprop.0 (145,735,500 samples, 0.25%)</title><rect x="5.8933%" y="1989" width="0.2507%" height="15" fill="rgb(220,196,2)" fg:x="3426091979" fg:w="145735500"/><text x="6.1433%" y="1999.50"></text></g><g><title>record__mmap_read_evlist (139,692,426 samples, 0.24%)</title><rect x="5.9037%" y="1973" width="0.2403%" height="15" fill="rgb(208,46,4)" fg:x="3432135053" fg:w="139692426"/><text x="6.1537%" y="1983.50"></text></g><g><title>record__write (5,900,863 samples, 0.01%)</title><rect x="6.1338%" y="1957" width="0.0102%" height="15" fill="rgb(252,104,46)" fg:x="3565926616" fg:w="5900863"/><text x="6.3838%" y="1967.50"></text></g><g><title>writen (5,900,863 samples, 0.01%)</title><rect x="6.1338%" y="1941" width="0.0102%" height="15" fill="rgb(237,152,48)" fg:x="3565926616" fg:w="5900863"/><text x="6.3838%" y="1951.50"></text></g><g><title>__GI___libc_write (5,900,863 samples, 0.01%)</title><rect x="6.1338%" y="1925" width="0.0102%" height="15" fill="rgb(221,59,37)" fg:x="3565926616" fg:w="5900863"/><text x="6.3838%" y="1935.50"></text></g><g><title>entry_SYSCALL_64 (5,900,863 samples, 0.01%)</title><rect x="6.1338%" y="1909" width="0.0102%" height="15" fill="rgb(209,202,51)" fg:x="3565926616" fg:w="5900863"/><text x="6.3838%" y="1919.50"></text></g><g><title>do_syscall_64 (5,900,863 samples, 0.01%)</title><rect x="6.1338%" y="1893" width="0.0102%" height="15" fill="rgb(228,81,30)" fg:x="3565926616" fg:w="5900863"/><text x="6.3838%" y="1903.50"></text></g><g><title>perf (146,202,812 samples, 0.25%)</title><rect x="5.8933%" y="2069" width="0.2515%" height="15" fill="rgb(227,42,39)" fg:x="3426091979" fg:w="146202812"/><text x="6.1433%" y="2079.50"></text></g><g><title>entry_SYSCALL_64 (8,191,889 samples, 0.01%)</title><rect x="6.1531%" y="2005" width="0.0141%" height="15" fill="rgb(221,26,2)" fg:x="3577176021" fg:w="8191889"/><text x="6.4031%" y="2015.50"></text></g><g><title>do_syscall_64 (8,191,889 samples, 0.01%)</title><rect x="6.1531%" y="1989" width="0.0141%" height="15" fill="rgb(254,61,31)" fg:x="3577176021" fg:w="8191889"/><text x="6.4031%" y="1999.50"></text></g><g><title>__x64_sys_newfstatat (8,191,889 samples, 0.01%)</title><rect x="6.1531%" y="1973" width="0.0141%" height="15" fill="rgb(222,173,38)" fg:x="3577176021" fg:w="8191889"/><text x="6.4031%" y="1983.50"></text></g><g><title>__se_sys_newfstatat (8,191,889 samples, 0.01%)</title><rect x="6.1531%" y="1957" width="0.0141%" height="15" fill="rgb(218,50,12)" fg:x="3577176021" fg:w="8191889"/><text x="6.4031%" y="1967.50"></text></g><g><title>vfs_fstatat (8,191,889 samples, 0.01%)</title><rect x="6.1531%" y="1941" width="0.0141%" height="15" fill="rgb(223,88,40)" fg:x="3577176021" fg:w="8191889"/><text x="6.4031%" y="1951.50"></text></g><g><title>[unknown] (10,410,754 samples, 0.02%)</title><rect x="6.1506%" y="2037" width="0.0179%" height="15" fill="rgb(237,54,19)" fg:x="3575723466" fg:w="10410754"/><text x="6.4006%" y="2047.50"></text></g><g><title>__GI___fstatat64 (8,958,199 samples, 0.02%)</title><rect x="6.1531%" y="2021" width="0.0154%" height="15" fill="rgb(251,129,25)" fg:x="3577176021" fg:w="8958199"/><text x="6.4031%" y="2031.50"></text></g><g><title>kmem_cache_alloc (7,814,931 samples, 0.01%)</title><rect x="6.1966%" y="1909" width="0.0134%" height="15" fill="rgb(238,97,19)" fg:x="3602418428" fg:w="7814931"/><text x="6.4466%" y="1919.50"></text></g><g><title>alloc_empty_file (12,115,146 samples, 0.02%)</title><rect x="6.1905%" y="1925" width="0.0208%" height="15" fill="rgb(240,169,18)" fg:x="3598885567" fg:w="12115146"/><text x="6.4405%" y="1935.50"></text></g><g><title>link_path_walk (9,636,500 samples, 0.02%)</title><rect x="6.2149%" y="1925" width="0.0166%" height="15" fill="rgb(230,187,49)" fg:x="3613049663" fg:w="9636500"/><text x="6.4649%" y="1935.50"></text></g><g><title>path_openat (33,457,489 samples, 0.06%)</title><rect x="6.1880%" y="1941" width="0.0576%" height="15" fill="rgb(209,44,26)" fg:x="3597463153" fg:w="33457489"/><text x="6.4380%" y="1951.50"></text></g><g><title>do_dentry_open (9,605,763 samples, 0.02%)</title><rect x="6.2556%" y="1893" width="0.0165%" height="15" fill="rgb(244,0,6)" fg:x="3636717144" fg:w="9605763"/><text x="6.5056%" y="1903.50"></text></g><g><title>do_filp_open (51,053,184 samples, 0.09%)</title><rect x="6.1855%" y="1957" width="0.0878%" height="15" fill="rgb(248,18,21)" fg:x="3595999941" fg:w="51053184"/><text x="6.4355%" y="1967.50"></text></g><g><title>vfs_open (15,445,412 samples, 0.03%)</title><rect x="6.2468%" y="1941" width="0.0266%" height="15" fill="rgb(245,180,19)" fg:x="3631607713" fg:w="15445412"/><text x="6.4968%" y="1951.50"></text></g><g><title>bpf_trampoline_6442477086 (15,445,412 samples, 0.03%)</title><rect x="6.2468%" y="1925" width="0.0266%" height="15" fill="rgb(252,118,36)" fg:x="3631607713" fg:w="15445412"/><text x="6.4968%" y="1935.50"></text></g><g><title>vfs_open (10,335,981 samples, 0.02%)</title><rect x="6.2556%" y="1909" width="0.0178%" height="15" fill="rgb(210,224,19)" fg:x="3636717144" fg:w="10335981"/><text x="6.5056%" y="1919.50"></text></g><g><title>kmem_cache_alloc (5,818,233 samples, 0.01%)</title><rect x="6.2848%" y="1925" width="0.0100%" height="15" fill="rgb(218,30,24)" fg:x="3653715183" fg:w="5818233"/><text x="6.5348%" y="1935.50"></text></g><g><title>getname (12,340,001 samples, 0.02%)</title><rect x="6.2835%" y="1957" width="0.0212%" height="15" fill="rgb(219,75,50)" fg:x="3652964735" fg:w="12340001"/><text x="6.5335%" y="1967.50"></text></g><g><title>getname_flags (12,340,001 samples, 0.02%)</title><rect x="6.2835%" y="1941" width="0.0212%" height="15" fill="rgb(234,72,50)" fg:x="3652964735" fg:w="12340001"/><text x="6.5335%" y="1951.50"></text></g><g><title>__x64_sys_openat (72,213,635 samples, 0.12%)</title><rect x="6.1843%" y="1989" width="0.1242%" height="15" fill="rgb(219,100,48)" fg:x="3595288550" fg:w="72213635"/><text x="6.4343%" y="1999.50"></text></g><g><title>do_sys_openat2 (72,213,635 samples, 0.12%)</title><rect x="6.1843%" y="1973" width="0.1242%" height="15" fill="rgb(253,5,41)" fg:x="3595288550" fg:w="72213635"/><text x="6.4343%" y="1983.50"></text></g><g><title>entry_SYSCALL_64 (76,573,388 samples, 0.13%)</title><rect x="6.1820%" y="2021" width="0.1317%" height="15" fill="rgb(247,181,11)" fg:x="3593927216" fg:w="76573388"/><text x="6.4320%" y="2031.50"></text></g><g><title>do_syscall_64 (75,841,071 samples, 0.13%)</title><rect x="6.1832%" y="2005" width="0.1305%" height="15" fill="rgb(222,223,25)" fg:x="3594659533" fg:w="75841071"/><text x="6.4332%" y="2015.50"></text></g><g><title>__GI___libc_open (81,757,929 samples, 0.14%)</title><rect x="6.1807%" y="2037" width="0.1406%" height="15" fill="rgb(214,198,28)" fg:x="3593216557" fg:w="81757929"/><text x="6.4307%" y="2047.50"></text></g><g><title>entry_SYSCALL_64 (6,604,882 samples, 0.01%)</title><rect x="6.3240%" y="2021" width="0.0114%" height="15" fill="rgb(230,46,43)" fg:x="3676515338" fg:w="6604882"/><text x="6.5740%" y="2031.50"></text></g><g><title>do_syscall_64 (6,604,882 samples, 0.01%)</title><rect x="6.3240%" y="2005" width="0.0114%" height="15" fill="rgb(233,65,53)" fg:x="3676515338" fg:w="6604882"/><text x="6.5740%" y="2015.50"></text></g><g><title>__close (7,303,351 samples, 0.01%)</title><rect x="6.3240%" y="2037" width="0.0126%" height="15" fill="rgb(221,121,27)" fg:x="3676515338" fg:w="7303351"/><text x="6.5740%" y="2047.50"></text></g><g><title>__isoc99_sscanf (11,635,104 samples, 0.02%)</title><rect x="6.3389%" y="2037" width="0.0200%" height="15" fill="rgb(247,70,47)" fg:x="3685180085" fg:w="11635104"/><text x="6.5889%" y="2047.50"></text></g><g><title>__vfscanf_internal (8,081,204 samples, 0.01%)</title><rect x="6.3450%" y="2021" width="0.0139%" height="15" fill="rgb(228,85,35)" fg:x="3688733985" fg:w="8081204"/><text x="6.5950%" y="2031.50"></text></g><g><title>[unknown] (145,088,582 samples, 0.25%)</title><rect x="6.1494%" y="2053" width="0.2496%" height="15" fill="rgb(209,50,18)" fg:x="3574986475" fg:w="145088582"/><text x="6.3994%" y="2063.50"></text></g><g><title>__fput (15,173,362 samples, 0.03%)</title><rect x="6.4131%" y="1957" width="0.0261%" height="15" fill="rgb(250,19,35)" fg:x="3728320346" fg:w="15173362"/><text x="6.6631%" y="1967.50"></text></g><g><title>single_release (8,720,430 samples, 0.02%)</title><rect x="6.4242%" y="1941" width="0.0150%" height="15" fill="rgb(253,107,29)" fg:x="3734773278" fg:w="8720430"/><text x="6.6742%" y="1951.50"></text></g><g><title>__fput_sync (18,812,654 samples, 0.03%)</title><rect x="6.4119%" y="1973" width="0.0324%" height="15" fill="rgb(252,179,29)" fg:x="3727601284" fg:w="18812654"/><text x="6.6619%" y="1983.50"></text></g><g><title>__x64_sys_close (20,260,663 samples, 0.03%)</title><rect x="6.4119%" y="2005" width="0.0349%" height="15" fill="rgb(238,194,6)" fg:x="3727601284" fg:w="20260663"/><text x="6.6619%" y="2015.50"></text></g><g><title>__se_sys_close (20,260,663 samples, 0.03%)</title><rect x="6.4119%" y="1989" width="0.0349%" height="15" fill="rgb(238,164,29)" fg:x="3727601284" fg:w="20260663"/><text x="6.6619%" y="1999.50"></text></g><g><title>entry_SYSCALL_64 (23,242,033 samples, 0.04%)</title><rect x="6.4106%" y="2037" width="0.0400%" height="15" fill="rgb(224,25,9)" fg:x="3726872918" fg:w="23242033"/><text x="6.6606%" y="2047.50"></text></g><g><title>do_syscall_64 (22,513,667 samples, 0.04%)</title><rect x="6.4119%" y="2021" width="0.0387%" height="15" fill="rgb(244,153,23)" fg:x="3727601284" fg:w="22513667"/><text x="6.6619%" y="2031.50"></text></g><g><title>__close (25,949,403 samples, 0.04%)</title><rect x="6.4106%" y="2053" width="0.0446%" height="15" fill="rgb(212,203,14)" fg:x="3726872918" fg:w="25949403"/><text x="6.6606%" y="2063.50"></text></g><g><title>_dl_map_object (6,220,666 samples, 0.01%)</title><rect x="6.4604%" y="2053" width="0.0107%" height="15" fill="rgb(220,164,20)" fg:x="3755781385" fg:w="6220666"/><text x="6.7104%" y="2063.50"></text></g><g><title>memcg_slab_post_alloc_hook (6,487,677 samples, 0.01%)</title><rect x="6.4992%" y="1877" width="0.0112%" height="15" fill="rgb(222,203,48)" fg:x="3778350394" fg:w="6487677"/><text x="6.7492%" y="1887.50"></text></g><g><title>__kmem_cache_alloc_node (16,738,348 samples, 0.03%)</title><rect x="6.4952%" y="1893" width="0.0288%" height="15" fill="rgb(215,159,22)" fg:x="3776029703" fg:w="16738348"/><text x="6.7452%" y="1903.50"></text></g><g><title>memcg_slab_pre_alloc_hook (7,929,980 samples, 0.01%)</title><rect x="6.5103%" y="1877" width="0.0136%" height="15" fill="rgb(216,183,47)" fg:x="3784838071" fg:w="7929980"/><text x="6.7603%" y="1887.50"></text></g><g><title>__kmalloc_node (18,972,088 samples, 0.03%)</title><rect x="6.4952%" y="1909" width="0.0326%" height="15" fill="rgb(229,195,25)" fg:x="3776029703" fg:w="18972088"/><text x="6.7452%" y="1919.50"></text></g><g><title>kvmalloc_node (19,707,019 samples, 0.03%)</title><rect x="6.4952%" y="1925" width="0.0339%" height="15" fill="rgb(224,132,51)" fg:x="3776029703" fg:w="19707019"/><text x="6.7452%" y="1935.50"></text></g><g><title>proc_pid_status (14,041,368 samples, 0.02%)</title><rect x="6.5368%" y="1909" width="0.0242%" height="15" fill="rgb(240,63,7)" fg:x="3800228738" fg:w="14041368"/><text x="6.7868%" y="1919.50"></text></g><g><title>proc_tgid_stat (8,816,534 samples, 0.02%)</title><rect x="6.5610%" y="1909" width="0.0152%" height="15" fill="rgb(249,182,41)" fg:x="3814270106" fg:w="8816534"/><text x="6.8110%" y="1919.50"></text></g><g><title>do_task_stat (8,816,534 samples, 0.02%)</title><rect x="6.5610%" y="1893" width="0.0152%" height="15" fill="rgb(243,47,26)" fg:x="3814270106" fg:w="8816534"/><text x="6.8110%" y="1903.50"></text></g><g><title>__x64_sys_read (57,624,865 samples, 0.10%)</title><rect x="6.4793%" y="2005" width="0.0991%" height="15" fill="rgb(233,48,2)" fg:x="3766806283" fg:w="57624865"/><text x="6.7293%" y="2015.50"></text></g><g><title>ksys_read (57,624,865 samples, 0.10%)</title><rect x="6.4793%" y="1989" width="0.0991%" height="15" fill="rgb(244,165,34)" fg:x="3766806283" fg:w="57624865"/><text x="6.7293%" y="1999.50"></text></g><g><title>vfs_read (56,145,206 samples, 0.10%)</title><rect x="6.4819%" y="1973" width="0.0966%" height="15" fill="rgb(207,89,7)" fg:x="3768285942" fg:w="56145206"/><text x="6.7319%" y="1983.50"></text></g><g><title>seq_read (52,003,346 samples, 0.09%)</title><rect x="6.4890%" y="1957" width="0.0895%" height="15" fill="rgb(244,117,36)" fg:x="3772427802" fg:w="52003346"/><text x="6.7390%" y="1967.50"></text></g><g><title>seq_read_iter (49,901,044 samples, 0.09%)</title><rect x="6.4926%" y="1941" width="0.0858%" height="15" fill="rgb(226,144,34)" fg:x="3774530104" fg:w="49901044"/><text x="6.7426%" y="1951.50"></text></g><g><title>proc_single_show (25,673,174 samples, 0.04%)</title><rect x="6.5343%" y="1925" width="0.0442%" height="15" fill="rgb(213,23,19)" fg:x="3798757974" fg:w="25673174"/><text x="6.7843%" y="1935.50"></text></g><g><title>entry_SYSCALL_64 (63,388,548 samples, 0.11%)</title><rect x="6.4781%" y="2037" width="0.1090%" height="15" fill="rgb(217,75,12)" fg:x="3766064152" fg:w="63388548"/><text x="6.7281%" y="2047.50"></text></g><g><title>do_syscall_64 (62,646,417 samples, 0.11%)</title><rect x="6.4793%" y="2021" width="0.1078%" height="15" fill="rgb(224,159,17)" fg:x="3766806283" fg:w="62646417"/><text x="6.7293%" y="2031.50"></text></g><g><title>read (66,846,516 samples, 0.11%)</title><rect x="6.4781%" y="2053" width="0.1150%" height="15" fill="rgb(217,118,1)" fg:x="3766064152" fg:w="66846516"/><text x="6.7281%" y="2063.50"></text></g><g><title>ps (262,003,300 samples, 0.45%)</title><rect x="6.1448%" y="2069" width="0.4507%" height="15" fill="rgb(232,180,48)" fg:x="3572294791" fg:w="262003300"/><text x="6.3948%" y="2079.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (6,248,860 samples, 0.01%)</title><rect x="6.6252%" y="1861" width="0.0107%" height="15" fill="rgb(230,27,33)" fg:x="3851601531" fg:w="6248860"/><text x="6.8752%" y="1871.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (6,248,860 samples, 0.01%)</title><rect x="6.6252%" y="1845" width="0.0107%" height="15" fill="rgb(205,31,21)" fg:x="3851601531" fg:w="6248860"/><text x="6.8752%" y="1855.50"></text></g><g><title>FileDescriptorCache::get_file_descriptor (12,386,867 samples, 0.02%)</title><rect x="6.6195%" y="1909" width="0.0213%" height="15" fill="rgb(253,59,4)" fg:x="3848310976" fg:w="12386867"/><text x="6.8695%" y="1919.50"></text></g><g><title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; &gt; &gt;::find (9,096,312 samples, 0.02%)</title><rect x="6.6252%" y="1893" width="0.0156%" height="15" fill="rgb(224,201,9)" fg:x="3851601531" fg:w="9096312"/><text x="6.8752%" y="1903.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (9,096,312 samples, 0.02%)</title><rect x="6.6252%" y="1877" width="0.0156%" height="15" fill="rgb(229,206,30)" fg:x="3851601531" fg:w="9096312"/><text x="6.8752%" y="1887.50"></text></g><g><title>__lock_acquire (15,138,246 samples, 0.03%)</title><rect x="6.6586%" y="1861" width="0.0260%" height="15" fill="rgb(212,67,47)" fg:x="3871023603" fg:w="15138246"/><text x="6.9086%" y="1871.50"></text></g><g><title>lock_acquire (26,378,708 samples, 0.05%)</title><rect x="6.6471%" y="1877" width="0.0454%" height="15" fill="rgb(211,96,50)" fg:x="3864335582" fg:w="26378708"/><text x="6.8971%" y="1887.50"></text></g><g><title>__bpf_prog_enter (30,594,858 samples, 0.05%)</title><rect x="6.6471%" y="1893" width="0.0526%" height="15" fill="rgb(252,114,18)" fg:x="3864335582" fg:w="30594858"/><text x="6.8971%" y="1903.50"></text></g><g><title>lock_release (25,298,795 samples, 0.04%)</title><rect x="6.7032%" y="1877" width="0.0435%" height="15" fill="rgb(223,58,37)" fg:x="3896948487" fg:w="25298795"/><text x="6.9532%" y="1887.50"></text></g><g><title>trace_lock_release (10,734,121 samples, 0.02%)</title><rect x="6.7282%" y="1861" width="0.0185%" height="15" fill="rgb(237,70,4)" fg:x="3911513161" fg:w="10734121"/><text x="6.9782%" y="1871.50"></text></g><g><title>rcu_is_watching (8,365,509 samples, 0.01%)</title><rect x="6.7323%" y="1845" width="0.0144%" height="15" fill="rgb(244,85,46)" fg:x="3913881773" fg:w="8365509"/><text x="6.9823%" y="1855.50"></text></g><g><title>__bpf_prog_exit (31,371,987 samples, 0.05%)</title><rect x="6.6997%" y="1893" width="0.0540%" height="15" fill="rgb(223,39,52)" fg:x="3894930440" fg:w="31371987"/><text x="6.9497%" y="1903.50"></text></g><g><title>lock_is_held_type (10,582,992 samples, 0.02%)</title><rect x="6.8713%" y="1845" width="0.0182%" height="15" fill="rgb(218,200,14)" fg:x="3994690025" fg:w="10582992"/><text x="7.1213%" y="1855.50"></text></g><g><title>__htab_map_lookup_elem (26,256,497 samples, 0.05%)</title><rect x="6.8471%" y="1877" width="0.0452%" height="15" fill="rgb(208,171,16)" fg:x="3980594869" fg:w="26256497"/><text x="7.0971%" y="1887.50"></text></g><g><title>rcu_read_lock_held (12,972,241 samples, 0.02%)</title><rect x="6.8699%" y="1861" width="0.0223%" height="15" fill="rgb(234,200,18)" fg:x="3993879125" fg:w="12972241"/><text x="7.1199%" y="1871.50"></text></g><g><title>__lock_acquire (9,170,188 samples, 0.02%)</title><rect x="6.9670%" y="1813" width="0.0158%" height="15" fill="rgb(228,45,11)" fg:x="4050301155" fg:w="9170188"/><text x="7.2170%" y="1823.50"></text></g><g><title>_raw_spin_lock (16,307,046 samples, 0.03%)</title><rect x="6.9595%" y="1845" width="0.0280%" height="15" fill="rgb(237,182,11)" fg:x="4045949350" fg:w="16307046"/><text x="7.2095%" y="1855.50"></text></g><g><title>lock_acquire (14,915,844 samples, 0.03%)</title><rect x="6.9619%" y="1829" width="0.0257%" height="15" fill="rgb(241,175,49)" fg:x="4047340552" fg:w="14915844"/><text x="7.2119%" y="1839.50"></text></g><g><title>do_raw_spin_unlock (6,114,889 samples, 0.01%)</title><rect x="6.9889%" y="1829" width="0.0105%" height="15" fill="rgb(247,38,35)" fg:x="4063052342" fg:w="6114889"/><text x="7.2389%" y="1839.50"></text></g><g><title>_raw_spin_unlock (19,725,479 samples, 0.03%)</title><rect x="6.9875%" y="1845" width="0.0339%" height="15" fill="rgb(228,39,49)" fg:x="4062256396" fg:w="19725479"/><text x="7.2375%" y="1855.50"></text></g><g><title>lock_release (12,814,644 samples, 0.02%)</title><rect x="6.9994%" y="1829" width="0.0220%" height="15" fill="rgb(226,101,26)" fg:x="4069167231" fg:w="12814644"/><text x="7.2494%" y="1839.50"></text></g><g><title>do_raw_write_lock (408,294,865 samples, 0.70%)</title><rect x="7.0215%" y="1829" width="0.7023%" height="15" fill="rgb(206,141,19)" fg:x="4081981875" fg:w="408294865"/><text x="7.2715%" y="1839.50"></text></g><g><title>queued_write_lock_slowpath (384,456,217 samples, 0.66%)</title><rect x="7.0625%" y="1813" width="0.6613%" height="15" fill="rgb(211,200,13)" fg:x="4105820523" fg:w="384456217"/><text x="7.3125%" y="1823.50"></text></g><g><title>native_queued_spin_lock_slowpath (157,849,670 samples, 0.27%)</title><rect x="7.4523%" y="1797" width="0.2715%" height="15" fill="rgb(241,121,6)" fg:x="4332427070" fg:w="157849670"/><text x="7.7023%" y="1807.50"></text></g><g><title>__lock_acquire (8,467,109 samples, 0.01%)</title><rect x="7.7340%" y="1813" width="0.0146%" height="15" fill="rgb(234,221,29)" fg:x="4496202462" fg:w="8467109"/><text x="7.9840%" y="1823.50"></text></g><g><title>_raw_write_lock (423,464,530 samples, 0.73%)</title><rect x="7.0215%" y="1845" width="0.7284%" height="15" fill="rgb(229,136,5)" fg:x="4081981875" fg:w="423464530"/><text x="7.2715%" y="1855.50"></text></g><g><title>lock_acquire (15,169,665 samples, 0.03%)</title><rect x="7.7238%" y="1829" width="0.0261%" height="15" fill="rgb(238,36,11)" fg:x="4490276740" fg:w="15169665"/><text x="7.9738%" y="1839.50"></text></g><g><title>do_raw_write_unlock (12,649,000 samples, 0.02%)</title><rect x="7.7560%" y="1829" width="0.0218%" height="15" fill="rgb(251,55,41)" fg:x="4509024485" fg:w="12649000"/><text x="8.0060%" y="1839.50"></text></g><g><title>lock_release (6,029,450 samples, 0.01%)</title><rect x="7.7778%" y="1829" width="0.0104%" height="15" fill="rgb(242,34,40)" fg:x="4521673485" fg:w="6029450"/><text x="8.0278%" y="1839.50"></text></g><g><title>_raw_write_unlock (23,656,140 samples, 0.04%)</title><rect x="7.7499%" y="1845" width="0.0407%" height="15" fill="rgb(215,42,17)" fg:x="4505446405" fg:w="23656140"/><text x="7.9999%" y="1855.50"></text></g><g><title>__cache_ext_list_add_impl (524,640,797 samples, 0.90%)</title><rect x="6.9006%" y="1861" width="0.9024%" height="15" fill="rgb(207,44,46)" fg:x="4011716970" fg:w="524640797"/><text x="7.1506%" y="1871.50"></text></g><g><title>do_raw_read_lock (3,774,401,417 samples, 6.49%)</title><rect x="7.8040%" y="1845" width="6.4924%" height="15" fill="rgb(211,206,28)" fg:x="4536933266" fg:w="3774401417"/><text x="8.0540%" y="1855.50">do_raw_re..</text></g><g><title>queued_read_lock_slowpath (3,766,297,704 samples, 6.48%)</title><rect x="7.8180%" y="1829" width="6.4785%" height="15" fill="rgb(237,167,16)" fg:x="4545036979" fg:w="3766297704"/><text x="8.0680%" y="1839.50">queued_r..</text></g><g><title>native_queued_spin_lock_slowpath (2,818,097,755 samples, 4.85%)</title><rect x="9.4490%" y="1813" width="4.8474%" height="15" fill="rgb(233,66,6)" fg:x="5493236928" fg:w="2818097755"/><text x="9.6990%" y="1823.50">native..</text></g><g><title>__lock_acquire (48,505,672 samples, 0.08%)</title><rect x="14.3048%" y="1829" width="0.0834%" height="15" fill="rgb(246,123,29)" fg:x="8316184151" fg:w="48505672"/><text x="14.5548%" y="1839.50"></text></g><g><title>_raw_read_lock (3,832,843,794 samples, 6.59%)</title><rect x="7.8030%" y="1861" width="6.5929%" height="15" fill="rgb(209,62,40)" fg:x="4536357767" fg:w="3832843794"/><text x="8.0530%" y="1871.50">_raw_read..</text></g><g><title>lock_acquire (57,866,878 samples, 0.10%)</title><rect x="14.2964%" y="1845" width="0.0995%" height="15" fill="rgb(218,4,25)" fg:x="8311334683" fg:w="57866878"/><text x="14.5464%" y="1855.50"></text></g><g><title>_raw_read_unlock (8,828,221 samples, 0.02%)</title><rect x="14.3960%" y="1861" width="0.0152%" height="15" fill="rgb(253,91,49)" fg:x="8369201561" fg:w="8828221"/><text x="14.6460%" y="1871.50"></text></g><g><title>lock_release (7,287,273 samples, 0.01%)</title><rect x="14.3986%" y="1845" width="0.0125%" height="15" fill="rgb(228,155,29)" fg:x="8370742509" fg:w="7287273"/><text x="14.6486%" y="1855.50"></text></g><g><title>_raw_spin_unlock (27,230,893 samples, 0.05%)</title><rect x="14.4112%" y="1861" width="0.0468%" height="15" fill="rgb(243,57,37)" fg:x="8378029782" fg:w="27230893"/><text x="14.6612%" y="1871.50"></text></g><g><title>bpf_cache_ext_list_add_tail (4,403,280,194 samples, 7.57%)</title><rect x="6.8922%" y="1877" width="7.5741%" height="15" fill="rgb(244,167,17)" fg:x="4006851366" fg:w="4403280194"/><text x="7.1422%" y="1887.50">bpf_cache_..</text></g><g><title>bpf_ktime_get_ns (12,478,147 samples, 0.02%)</title><rect x="14.4664%" y="1877" width="0.0215%" height="15" fill="rgb(207,181,38)" fg:x="8410131560" fg:w="12478147"/><text x="14.7164%" y="1887.50"></text></g><g><title>ktime_get_mono_fast_ns (12,478,147 samples, 0.02%)</title><rect x="14.4664%" y="1861" width="0.0215%" height="15" fill="rgb(211,8,23)" fg:x="8410131560" fg:w="12478147"/><text x="14.7164%" y="1871.50"></text></g><g><title>read_tsc (11,376,047 samples, 0.02%)</title><rect x="14.4683%" y="1845" width="0.0196%" height="15" fill="rgb(235,11,44)" fg:x="8411233660" fg:w="11376047"/><text x="14.7183%" y="1855.50"></text></g><g><title>_raw_spin_unlock (13,323,991 samples, 0.02%)</title><rect x="14.5932%" y="1861" width="0.0229%" height="15" fill="rgb(248,18,52)" fg:x="8483860078" fg:w="13323991"/><text x="14.8432%" y="1871.50"></text></g><g><title>_raw_spin_lock (14,073,708 samples, 0.02%)</title><rect x="14.7086%" y="1829" width="0.0242%" height="15" fill="rgb(208,4,7)" fg:x="8550960282" fg:w="14073708"/><text x="14.9586%" y="1839.50"></text></g><g><title>lock_acquire (11,717,131 samples, 0.02%)</title><rect x="14.7127%" y="1813" width="0.0202%" height="15" fill="rgb(240,17,39)" fg:x="8553316859" fg:w="11717131"/><text x="14.9627%" y="1823.50"></text></g><g><title>alloc_htab_elem (71,275,665 samples, 0.12%)</title><rect x="14.6161%" y="1861" width="0.1226%" height="15" fill="rgb(207,170,3)" fg:x="8497184069" fg:w="71275665"/><text x="14.8661%" y="1871.50"></text></g><g><title>__pcpu_freelist_pop (66,029,681 samples, 0.11%)</title><rect x="14.6251%" y="1845" width="0.1136%" height="15" fill="rgb(236,100,52)" fg:x="8502430053" fg:w="66029681"/><text x="14.8751%" y="1855.50"></text></g><g><title>do_raw_spin_lock (12,597,973 samples, 0.02%)</title><rect x="14.7438%" y="1829" width="0.0217%" height="15" fill="rgb(246,78,51)" fg:x="8571431093" fg:w="12597973"/><text x="14.9938%" y="1839.50"></text></g><g><title>__lock_acquire (49,021,577 samples, 0.08%)</title><rect x="14.7704%" y="1813" width="0.0843%" height="15" fill="rgb(211,17,15)" fg:x="8586901172" fg:w="49021577"/><text x="15.0204%" y="1823.50"></text></g><g><title>htab_lock_bucket (67,493,803 samples, 0.12%)</title><rect x="14.7400%" y="1861" width="0.1161%" height="15" fill="rgb(209,59,46)" fg:x="8569222463" fg:w="67493803"/><text x="14.9900%" y="1871.50"></text></g><g><title>_raw_spin_lock (65,285,173 samples, 0.11%)</title><rect x="14.7438%" y="1845" width="0.1123%" height="15" fill="rgb(210,92,25)" fg:x="8571431093" fg:w="65285173"/><text x="14.9938%" y="1855.50"></text></g><g><title>lock_acquire (52,687,200 samples, 0.09%)</title><rect x="14.7655%" y="1829" width="0.0906%" height="15" fill="rgb(238,174,52)" fg:x="8584029066" fg:w="52687200"/><text x="15.0155%" y="1839.50"></text></g><g><title>bpf_prog_0ba38f2e803f3434_sampling_folio_added (4,715,870,710 samples, 8.11%)</title><rect x="6.7604%" y="1893" width="8.1118%" height="15" fill="rgb(230,73,7)" fg:x="3930180757" fg:w="4715870710"/><text x="7.0104%" y="1903.50">bpf_prog_0b..</text></g><g><title>htab_map_update_elem (222,775,003 samples, 0.38%)</title><rect x="14.4890%" y="1877" width="0.3832%" height="15" fill="rgb(243,124,40)" fg:x="8423276464" fg:w="222775003"/><text x="14.7390%" y="1887.50"></text></g><g><title>do_raw_read_lock (668,282,622 samples, 1.15%)</title><rect x="16.7001%" y="1845" width="1.1495%" height="15" fill="rgb(244,170,11)" fg:x="9708745077" fg:w="668282622"/><text x="16.9501%" y="1855.50"></text></g><g><title>queued_read_lock_slowpath (667,512,753 samples, 1.15%)</title><rect x="16.7015%" y="1829" width="1.1482%" height="15" fill="rgb(207,114,54)" fg:x="9709514946" fg:w="667512753"/><text x="16.9515%" y="1839.50"></text></g><g><title>native_queued_spin_lock_slowpath (512,520,290 samples, 0.88%)</title><rect x="16.9681%" y="1813" width="0.8816%" height="15" fill="rgb(205,42,20)" fg:x="9864507409" fg:w="512520290"/><text x="17.2181%" y="1823.50"></text></g><g><title>_raw_read_lock (674,530,716 samples, 1.16%)</title><rect x="16.6988%" y="1861" width="1.1603%" height="15" fill="rgb(230,30,28)" fg:x="9707984794" fg:w="674530716"/><text x="16.9488%" y="1871.50"></text></g><g><title>do_raw_write_lock (67,155,265 samples, 0.12%)</title><rect x="17.8591%" y="1845" width="0.1155%" height="15" fill="rgb(205,73,54)" fg:x="10382515510" fg:w="67155265"/><text x="18.1091%" y="1855.50"></text></g><g><title>queued_write_lock_slowpath (66,416,710 samples, 0.11%)</title><rect x="17.8604%" y="1829" width="0.1142%" height="15" fill="rgb(254,227,23)" fg:x="10383254065" fg:w="66416710"/><text x="18.1104%" y="1839.50"></text></g><g><title>native_queued_spin_lock_slowpath (27,003,384 samples, 0.05%)</title><rect x="17.9282%" y="1813" width="0.0464%" height="15" fill="rgb(228,202,34)" fg:x="10422667391" fg:w="27003384"/><text x="18.1782%" y="1823.50"></text></g><g><title>_raw_write_lock (70,073,150 samples, 0.12%)</title><rect x="17.8591%" y="1861" width="0.1205%" height="15" fill="rgb(222,225,37)" fg:x="10382515510" fg:w="70073150"/><text x="18.1091%" y="1871.50"></text></g><g><title>htab_map_hash (53,240,275 samples, 0.09%)</title><rect x="21.8423%" y="1829" width="0.0916%" height="15" fill="rgb(221,14,54)" fg:x="12698174357" fg:w="53240275"/><text x="22.0923%" y="1839.50"></text></g><g><title>lock_is_held_type (99,407,643 samples, 0.17%)</title><rect x="21.9532%" y="1813" width="0.1710%" height="15" fill="rgb(254,102,2)" fg:x="12762677151" fg:w="99407643"/><text x="22.2032%" y="1823.50"></text></g><g><title>match_held_lock (24,157,087 samples, 0.04%)</title><rect x="22.0827%" y="1797" width="0.0416%" height="15" fill="rgb(232,104,17)" fg:x="12837927707" fg:w="24157087"/><text x="22.3327%" y="1807.50"></text></g><g><title>bpf_cache_ext_list_sample (4,242,244,366 samples, 7.30%)</title><rect x="14.8736%" y="1877" width="7.2971%" height="15" fill="rgb(250,220,14)" fg:x="8646856471" fg:w="4242244366"/><text x="15.1236%" y="1887.50">bpf_cache_..</text></g><g><title>bpf_prog_baff5aaf85fd2c96_bpf_lfu_score_fn (2,433,499,030 samples, 4.19%)</title><rect x="17.9848%" y="1861" width="4.1859%" height="15" fill="rgb(241,158,9)" fg:x="10455601807" fg:w="2433499030"/><text x="18.2348%" y="1871.50">bpf_p..</text></g><g><title>__htab_map_lookup_elem (2,360,495,460 samples, 4.06%)</title><rect x="18.1104%" y="1845" width="4.0603%" height="15" fill="rgb(246,9,43)" fg:x="10528605377" fg:w="2360495460"/><text x="18.3604%" y="1855.50">__ht..</text></g><g><title>rcu_read_lock_held (136,969,165 samples, 0.24%)</title><rect x="21.9351%" y="1829" width="0.2356%" height="15" fill="rgb(206,73,33)" fg:x="12752131672" fg:w="136969165"/><text x="22.1851%" y="1839.50"></text></g><g><title>rcu_is_watching (23,457,995 samples, 0.04%)</title><rect x="22.1304%" y="1813" width="0.0404%" height="15" fill="rgb(222,79,8)" fg:x="12865642842" fg:w="23457995"/><text x="22.3804%" y="1823.50"></text></g><g><title>bpf_prog_53d125a157918351_sampling_evict_folios (4,257,478,384 samples, 7.32%)</title><rect x="14.8722%" y="1893" width="7.3233%" height="15" fill="rgb(234,8,54)" fg:x="8646051467" fg:w="4257478384"/><text x="15.1222%" y="1903.50">bpf_prog_5..</text></g><g><title>bpf_prog_baff5aaf85fd2c96_bpf_lfu_score_fn (14,429,014 samples, 0.02%)</title><rect x="22.1707%" y="1877" width="0.0248%" height="15" fill="rgb(209,134,38)" fg:x="12889100837" fg:w="14429014"/><text x="22.4207%" y="1887.50"></text></g><g><title>__lock_acquire (67,569,182 samples, 0.12%)</title><rect x="22.2837%" y="1813" width="0.1162%" height="15" fill="rgb(230,127,29)" fg:x="12954786440" fg:w="67569182"/><text x="22.5337%" y="1823.50"></text></g><g><title>_raw_spin_lock (75,340,730 samples, 0.13%)</title><rect x="22.2739%" y="1845" width="0.1296%" height="15" fill="rgb(242,44,41)" fg:x="12949072571" fg:w="75340730"/><text x="22.5239%" y="1855.50"></text></g><g><title>lock_acquire (72,355,995 samples, 0.12%)</title><rect x="22.2790%" y="1829" width="0.1245%" height="15" fill="rgb(222,56,43)" fg:x="12952057306" fg:w="72355995"/><text x="22.5290%" y="1839.50"></text></g><g><title>lock_release (8,920,063 samples, 0.02%)</title><rect x="22.4073%" y="1829" width="0.0153%" height="15" fill="rgb(238,39,47)" fg:x="13026668398" fg:w="8920063"/><text x="22.6573%" y="1839.50"></text></g><g><title>_raw_spin_unlock (11,896,186 samples, 0.02%)</title><rect x="22.4035%" y="1845" width="0.0205%" height="15" fill="rgb(226,79,43)" fg:x="13024413301" fg:w="11896186"/><text x="22.6535%" y="1855.50"></text></g><g><title>do_raw_write_lock (4,181,956,242 samples, 7.19%)</title><rect x="22.4239%" y="1829" width="7.1934%" height="15" fill="rgb(242,105,53)" fg:x="13036309487" fg:w="4181956242"/><text x="22.6739%" y="1839.50">do_raw_wri..</text></g><g><title>queued_write_lock_slowpath (4,171,210,697 samples, 7.17%)</title><rect x="22.4424%" y="1813" width="7.1750%" height="15" fill="rgb(251,132,46)" fg:x="13047055032" fg:w="4171210697"/><text x="22.6924%" y="1823.50">queued_wri..</text></g><g><title>native_queued_spin_lock_slowpath (2,670,921,513 samples, 4.59%)</title><rect x="25.0231%" y="1797" width="4.5943%" height="15" fill="rgb(231,77,14)" fg:x="14547344216" fg:w="2670921513"/><text x="25.2731%" y="1807.50">nativ..</text></g><g><title>__lock_acquire (49,860,148 samples, 0.09%)</title><rect x="29.6214%" y="1813" width="0.0858%" height="15" fill="rgb(240,135,9)" fg:x="17220641295" fg:w="49860148"/><text x="29.8714%" y="1823.50"></text></g><g><title>_raw_write_lock (4,234,986,767 samples, 7.28%)</title><rect x="22.4239%" y="1845" width="7.2847%" height="15" fill="rgb(248,109,14)" fg:x="13036309487" fg:w="4234986767"/><text x="22.6739%" y="1855.50">_raw_write..</text></g><g><title>lock_acquire (53,030,525 samples, 0.09%)</title><rect x="29.6174%" y="1829" width="0.0912%" height="15" fill="rgb(227,146,52)" fg:x="17218265729" fg:w="53030525"/><text x="29.8674%" y="1839.50"></text></g><g><title>do_raw_write_unlock (7,659,837 samples, 0.01%)</title><rect x="29.7086%" y="1829" width="0.0132%" height="15" fill="rgb(232,54,3)" fg:x="17271296254" fg:w="7659837"/><text x="29.9586%" y="1839.50"></text></g><g><title>_raw_write_unlock (12,353,112 samples, 0.02%)</title><rect x="29.7086%" y="1845" width="0.0212%" height="15" fill="rgb(229,201,43)" fg:x="17271296254" fg:w="12353112"/><text x="29.9586%" y="1855.50"></text></g><g><title>valid_folios_lookup (18,976,534 samples, 0.03%)</title><rect x="29.7352%" y="1845" width="0.0326%" height="15" fill="rgb(252,161,33)" fg:x="17286794172" fg:w="18976534"/><text x="29.9852%" y="1855.50"></text></g><g><title>cache_ext_list_del (4,368,181,101 samples, 7.51%)</title><rect x="22.2555%" y="1861" width="7.5138%" height="15" fill="rgb(226,146,40)" fg:x="12938383848" fg:w="4368181101"/><text x="22.5055%" y="1871.50">cache_ext_..</text></g><g><title>bpf_cache_ext_list_del (4,370,534,507 samples, 7.52%)</title><rect x="22.2555%" y="1877" width="7.5178%" height="15" fill="rgb(219,47,25)" fg:x="12938383848" fg:w="4370534507"/><text x="22.5055%" y="1887.50">bpf_cache_..</text></g><g><title>_raw_spin_unlock (12,203,701 samples, 0.02%)</title><rect x="29.8205%" y="1861" width="0.0210%" height="15" fill="rgb(250,135,13)" fg:x="17336372704" fg:w="12203701"/><text x="30.0705%" y="1871.50"></text></g><g><title>lock_release (10,622,546 samples, 0.02%)</title><rect x="29.8232%" y="1845" width="0.0183%" height="15" fill="rgb(219,229,18)" fg:x="17337953859" fg:w="10622546"/><text x="30.0732%" y="1855.50"></text></g><g><title>__lock_acquire (8,409,953 samples, 0.01%)</title><rect x="29.8647%" y="1797" width="0.0145%" height="15" fill="rgb(217,152,27)" fg:x="17362059965" fg:w="8409953"/><text x="30.1147%" y="1807.50"></text></g><g><title>lock_acquire (37,779,621 samples, 0.06%)</title><rect x="29.8583%" y="1813" width="0.0650%" height="15" fill="rgb(225,71,47)" fg:x="17358361504" fg:w="37779621"/><text x="30.1083%" y="1823.50"></text></g><g><title>trace_lock_acquire (21,838,879 samples, 0.04%)</title><rect x="29.8858%" y="1797" width="0.0376%" height="15" fill="rgb(220,139,14)" fg:x="17374302246" fg:w="21838879"/><text x="30.1358%" y="1807.50"></text></g><g><title>_raw_spin_lock (43,718,764 samples, 0.08%)</title><rect x="29.8494%" y="1829" width="0.0752%" height="15" fill="rgb(247,54,32)" fg:x="17353138061" fg:w="43718764"/><text x="30.0994%" y="1839.50"></text></g><g><title>_raw_spin_unlock (6,053,528 samples, 0.01%)</title><rect x="29.9246%" y="1829" width="0.0104%" height="15" fill="rgb(252,131,39)" fg:x="17396856825" fg:w="6053528"/><text x="30.1746%" y="1839.50"></text></g><g><title>lock_release (6,053,528 samples, 0.01%)</title><rect x="29.9246%" y="1813" width="0.0104%" height="15" fill="rgb(210,108,39)" fg:x="17396856825" fg:w="6053528"/><text x="30.1746%" y="1823.50"></text></g><g><title>__pcpu_freelist_push (52,673,143 samples, 0.09%)</title><rect x="29.8455%" y="1845" width="0.0906%" height="15" fill="rgb(205,23,29)" fg:x="17350867674" fg:w="52673143"/><text x="30.0955%" y="1855.50"></text></g><g><title>free_htab_elem (55,718,838 samples, 0.10%)</title><rect x="29.8415%" y="1861" width="0.0958%" height="15" fill="rgb(246,139,46)" fg:x="17348576405" fg:w="55718838"/><text x="30.0915%" y="1871.50"></text></g><g><title>do_raw_spin_lock (6,068,359 samples, 0.01%)</title><rect x="29.9465%" y="1829" width="0.0104%" height="15" fill="rgb(250,81,26)" fg:x="17409590699" fg:w="6068359"/><text x="30.1965%" y="1839.50"></text></g><g><title>__lock_acquire (23,881,682 samples, 0.04%)</title><rect x="29.9622%" y="1813" width="0.0411%" height="15" fill="rgb(214,104,7)" fg:x="17418758271" fg:w="23881682"/><text x="30.2122%" y="1823.50"></text></g><g><title>htab_lock_bucket (41,111,299 samples, 0.07%)</title><rect x="29.9374%" y="1861" width="0.0707%" height="15" fill="rgb(233,189,8)" fg:x="17404295243" fg:w="41111299"/><text x="30.1874%" y="1871.50"></text></g><g><title>_raw_spin_lock (38,060,971 samples, 0.07%)</title><rect x="29.9426%" y="1845" width="0.0655%" height="15" fill="rgb(228,141,17)" fg:x="17407345571" fg:w="38060971"/><text x="30.1926%" y="1855.50"></text></g><g><title>lock_acquire (29,747,484 samples, 0.05%)</title><rect x="29.9569%" y="1829" width="0.0512%" height="15" fill="rgb(247,157,1)" fg:x="17415659058" fg:w="29747484"/><text x="30.2069%" y="1839.50"></text></g><g><title>bpf_prog_94714edc913e697a_sampling_folio_evicted (4,546,438,638 samples, 7.82%)</title><rect x="22.1969%" y="1893" width="7.8204%" height="15" fill="rgb(249,225,5)" fg:x="12904327289" fg:w="4546438638"/><text x="22.4469%" y="1903.50">bpf_prog_94..</text></g><g><title>htab_map_delete_elem (141,847,572 samples, 0.24%)</title><rect x="29.7733%" y="1877" width="0.2440%" height="15" fill="rgb(242,55,13)" fg:x="17308918355" fg:w="141847572"/><text x="30.0233%" y="1887.50"></text></g><g><title>__kmalloc (12,356,606 samples, 0.02%)</title><rect x="30.0295%" y="1749" width="0.0213%" height="15" fill="rgb(230,49,50)" fg:x="17457839988" fg:w="12356606"/><text x="30.2795%" y="1759.50"></text></g><g><title>__kmem_cache_alloc_node (12,356,606 samples, 0.02%)</title><rect x="30.0295%" y="1733" width="0.0213%" height="15" fill="rgb(241,111,38)" fg:x="17457839988" fg:w="12356606"/><text x="30.2795%" y="1743.50"></text></g><g><title>memcg_slab_pre_alloc_hook (8,216,590 samples, 0.01%)</title><rect x="30.0366%" y="1717" width="0.0141%" height="15" fill="rgb(252,155,4)" fg:x="17461980004" fg:w="8216590"/><text x="30.2866%" y="1727.50"></text></g><g><title>obj_cgroup_charge (6,015,784 samples, 0.01%)</title><rect x="30.0404%" y="1701" width="0.0103%" height="15" fill="rgb(212,69,32)" fg:x="17464180810" fg:w="6015784"/><text x="30.2904%" y="1711.50"></text></g><g><title>fsnotify (19,062,643 samples, 0.03%)</title><rect x="30.0268%" y="1813" width="0.0328%" height="15" fill="rgb(243,107,47)" fg:x="17456283553" fg:w="19062643"/><text x="30.2768%" y="1823.50"></text></g><g><title>send_to_group (19,062,643 samples, 0.03%)</title><rect x="30.0268%" y="1797" width="0.0328%" height="15" fill="rgb(247,130,12)" fg:x="17456283553" fg:w="19062643"/><text x="30.2768%" y="1807.50"></text></g><g><title>fsnotify_handle_inode_event (19,062,643 samples, 0.03%)</title><rect x="30.0268%" y="1781" width="0.0328%" height="15" fill="rgb(233,74,16)" fg:x="17456283553" fg:w="19062643"/><text x="30.2768%" y="1791.50"></text></g><g><title>inotify_handle_inode_event (18,271,938 samples, 0.03%)</title><rect x="30.0281%" y="1765" width="0.0314%" height="15" fill="rgb(208,58,18)" fg:x="17457074258" fg:w="18271938"/><text x="30.2781%" y="1775.50"></text></g><g><title>__fsnotify_parent (20,465,036 samples, 0.04%)</title><rect x="30.0249%" y="1829" width="0.0352%" height="15" fill="rgb(242,225,1)" fg:x="17455193285" fg:w="20465036"/><text x="30.2749%" y="1839.50"></text></g><g><title>osq_lock (1,569,565,166 samples, 2.70%)</title><rect x="30.0744%" y="1765" width="2.6998%" height="15" fill="rgb(249,39,40)" fg:x="17483981951" fg:w="1569565166"/><text x="30.3244%" y="1775.50">os..</text></g><g><title>__common_interrupt (8,595,492 samples, 0.01%)</title><rect x="38.0290%" y="1717" width="0.0148%" height="15" fill="rgb(207,72,44)" fg:x="22108445548" fg:w="8595492"/><text x="38.2790%" y="1727.50"></text></g><g><title>handle_edge_irq (8,595,492 samples, 0.01%)</title><rect x="38.0290%" y="1701" width="0.0148%" height="15" fill="rgb(215,193,12)" fg:x="22108445548" fg:w="8595492"/><text x="38.2790%" y="1711.50"></text></g><g><title>handle_irq_event (8,595,492 samples, 0.01%)</title><rect x="38.0290%" y="1685" width="0.0148%" height="15" fill="rgb(248,41,39)" fg:x="22108445548" fg:w="8595492"/><text x="38.2790%" y="1695.50"></text></g><g><title>__handle_irq_event_percpu (8,595,492 samples, 0.01%)</title><rect x="38.0290%" y="1669" width="0.0148%" height="15" fill="rgb(253,85,4)" fg:x="22108445548" fg:w="8595492"/><text x="38.2790%" y="1679.50"></text></g><g><title>ahci_multi_irqs_intr_hard (8,595,492 samples, 0.01%)</title><rect x="38.0290%" y="1653" width="0.0148%" height="15" fill="rgb(243,70,31)" fg:x="22108445548" fg:w="8595492"/><text x="38.2790%" y="1663.50"></text></g><g><title>ahci_handle_port_interrupt (6,270,328 samples, 0.01%)</title><rect x="38.0330%" y="1637" width="0.0108%" height="15" fill="rgb(253,195,26)" fg:x="22110770712" fg:w="6270328"/><text x="38.2830%" y="1647.50"></text></g><g><title>asm_common_interrupt (9,395,047 samples, 0.02%)</title><rect x="38.0290%" y="1749" width="0.0162%" height="15" fill="rgb(243,42,11)" fg:x="22108445548" fg:w="9395047"/><text x="38.2790%" y="1759.50"></text></g><g><title>common_interrupt (9,395,047 samples, 0.02%)</title><rect x="38.0290%" y="1733" width="0.0162%" height="15" fill="rgb(239,66,17)" fg:x="22108445548" fg:w="9395047"/><text x="38.2790%" y="1743.50"></text></g><g><title>__sysvec_apic_timer_interrupt (6,533,090 samples, 0.01%)</title><rect x="38.0452%" y="1717" width="0.0112%" height="15" fill="rgb(217,132,21)" fg:x="22117840595" fg:w="6533090"/><text x="38.2952%" y="1727.50"></text></g><g><title>hrtimer_interrupt (6,533,090 samples, 0.01%)</title><rect x="38.0452%" y="1701" width="0.0112%" height="15" fill="rgb(252,202,21)" fg:x="22117840595" fg:w="6533090"/><text x="38.2952%" y="1711.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (7,923,874 samples, 0.01%)</title><rect x="38.0452%" y="1749" width="0.0136%" height="15" fill="rgb(233,98,36)" fg:x="22117840595" fg:w="7923874"/><text x="38.2952%" y="1759.50"></text></g><g><title>sysvec_apic_timer_interrupt (7,923,874 samples, 0.01%)</title><rect x="38.0452%" y="1733" width="0.0136%" height="15" fill="rgb(216,153,54)" fg:x="22117840595" fg:w="7923874"/><text x="38.2952%" y="1743.50"></text></g><g><title>rwsem_spin_on_owner (3,074,136,517 samples, 5.29%)</title><rect x="32.7769%" y="1765" width="5.2879%" height="15" fill="rgb(250,99,7)" fg:x="19055104198" fg:w="3074136517"/><text x="33.0269%" y="1775.50">rwsem_..</text></g><g><title>pick_next_task (6,862,457 samples, 0.01%)</title><rect x="38.0667%" y="1717" width="0.0118%" height="15" fill="rgb(207,56,50)" fg:x="22130361624" fg:w="6862457"/><text x="38.3167%" y="1727.50"></text></g><g><title>pick_next_task_fair (6,862,457 samples, 0.01%)</title><rect x="38.0667%" y="1701" width="0.0118%" height="15" fill="rgb(244,61,34)" fg:x="22130361624" fg:w="6862457"/><text x="38.3167%" y="1711.50"></text></g><g><title>newidle_balance (6,862,457 samples, 0.01%)</title><rect x="38.0667%" y="1685" width="0.0118%" height="15" fill="rgb(241,50,38)" fg:x="22130361624" fg:w="6862457"/><text x="38.3167%" y="1695.50"></text></g><g><title>__sched_text_start (9,893,042 samples, 0.02%)</title><rect x="38.0648%" y="1733" width="0.0170%" height="15" fill="rgb(212,166,30)" fg:x="22129240715" fg:w="9893042"/><text x="38.3148%" y="1743.50"></text></g><g><title>rwsem_down_write_slowpath (4,658,667,943 samples, 8.01%)</title><rect x="30.0704%" y="1781" width="8.0134%" height="15" fill="rgb(249,127,32)" fg:x="17481671827" fg:w="4658667943"/><text x="30.3204%" y="1791.50">rwsem_down_..</text></g><g><title>schedule_preempt_disabled (11,099,055 samples, 0.02%)</title><rect x="38.0648%" y="1765" width="0.0191%" height="15" fill="rgb(209,103,0)" fg:x="22129240715" fg:w="11099055"/><text x="38.3148%" y="1775.50"></text></g><g><title>schedule (11,099,055 samples, 0.02%)</title><rect x="38.0648%" y="1749" width="0.0191%" height="15" fill="rgb(238,209,51)" fg:x="22129240715" fg:w="11099055"/><text x="38.3148%" y="1759.50"></text></g><g><title>down_write (4,659,937,824 samples, 8.02%)</title><rect x="30.0692%" y="1797" width="8.0156%" height="15" fill="rgb(237,56,23)" fg:x="17480939390" fg:w="4659937824"/><text x="30.3192%" y="1807.50">down_write</text></g><g><title>ext4_dirty_inode (14,241,774 samples, 0.02%)</title><rect x="38.1016%" y="1749" width="0.0245%" height="15" fill="rgb(215,153,46)" fg:x="22150620766" fg:w="14241774"/><text x="38.3516%" y="1759.50"></text></g><g><title>__ext4_mark_inode_dirty (8,178,933 samples, 0.01%)</title><rect x="38.1120%" y="1733" width="0.0141%" height="15" fill="rgb(224,49,31)" fg:x="22156683607" fg:w="8178933"/><text x="38.3620%" y="1743.50"></text></g><g><title>__mark_inode_dirty (15,696,193 samples, 0.03%)</title><rect x="38.1004%" y="1765" width="0.0270%" height="15" fill="rgb(250,18,42)" fg:x="22149962856" fg:w="15696193"/><text x="38.3504%" y="1775.50"></text></g><g><title>file_modified (20,512,912 samples, 0.04%)</title><rect x="38.0994%" y="1797" width="0.0353%" height="15" fill="rgb(215,176,39)" fg:x="22149343668" fg:w="20512912"/><text x="38.3494%" y="1807.50"></text></g><g><title>file_modified_flags (20,512,912 samples, 0.04%)</title><rect x="38.0994%" y="1781" width="0.0353%" height="15" fill="rgb(223,77,29)" fg:x="22149343668" fg:w="20512912"/><text x="38.3494%" y="1791.50"></text></g><g><title>mem_cgroup_wb_stats (16,106,470 samples, 0.03%)</title><rect x="38.1839%" y="1733" width="0.0277%" height="15" fill="rgb(234,94,52)" fg:x="22198481264" fg:w="16106470"/><text x="38.4339%" y="1743.50"></text></g><g><title>cgroup_rstat_flush (16,106,470 samples, 0.03%)</title><rect x="38.1839%" y="1717" width="0.0277%" height="15" fill="rgb(220,154,50)" fg:x="22198481264" fg:w="16106470"/><text x="38.4339%" y="1727.50"></text></g><g><title>cgroup_rstat_flush_locked (15,513,343 samples, 0.03%)</title><rect x="38.1849%" y="1701" width="0.0267%" height="15" fill="rgb(212,11,10)" fg:x="22199074391" fg:w="15513343"/><text x="38.4349%" y="1711.50"></text></g><g><title>balance_dirty_pages (21,425,381 samples, 0.04%)</title><rect x="38.1817%" y="1749" width="0.0369%" height="15" fill="rgb(205,166,19)" fg:x="22197187948" fg:w="21425381"/><text x="38.4317%" y="1759.50"></text></g><g><title>__lock_acquire (15,093,367 samples, 0.03%)</title><rect x="38.2380%" y="1733" width="0.0260%" height="15" fill="rgb(244,198,16)" fg:x="22229907003" fg:w="15093367"/><text x="38.4880%" y="1743.50"></text></g><g><title>lock_acquire (29,643,808 samples, 0.05%)</title><rect x="38.2225%" y="1749" width="0.0510%" height="15" fill="rgb(219,69,12)" fg:x="22220900532" fg:w="29643808"/><text x="38.4725%" y="1759.50"></text></g><g><title>lock_release (13,908,165 samples, 0.02%)</title><rect x="38.2734%" y="1749" width="0.0239%" height="15" fill="rgb(245,30,7)" fg:x="22250544340" fg:w="13908165"/><text x="38.5234%" y="1759.50"></text></g><g><title>lock_acquire (12,190,668 samples, 0.02%)</title><rect x="38.3000%" y="1733" width="0.0210%" height="15" fill="rgb(218,221,48)" fg:x="22266006556" fg:w="12190668"/><text x="38.5500%" y="1743.50"></text></g><g><title>percpu_ref_tryget (22,009,619 samples, 0.04%)</title><rect x="38.2974%" y="1749" width="0.0379%" height="15" fill="rgb(216,66,15)" fg:x="22264452505" fg:w="22009619"/><text x="38.5474%" y="1759.50"></text></g><g><title>lock_release (8,264,900 samples, 0.01%)</title><rect x="38.3210%" y="1733" width="0.0142%" height="15" fill="rgb(226,122,50)" fg:x="22278197224" fg:w="8264900"/><text x="38.5710%" y="1743.50"></text></g><g><title>balance_dirty_pages_ratelimited_flags (114,821,656 samples, 0.20%)</title><rect x="38.1474%" y="1765" width="0.1975%" height="15" fill="rgb(239,156,16)" fg:x="22177291300" fg:w="114821656"/><text x="38.3974%" y="1775.50"></text></g><g><title>balance_dirty_pages_ratelimited (115,300,345 samples, 0.20%)</title><rect x="38.1474%" y="1781" width="0.1983%" height="15" fill="rgb(224,27,38)" fg:x="22177291300" fg:w="115300345"/><text x="38.3974%" y="1791.50"></text></g><g><title>copy_page_from_iter_atomic (10,093,254 samples, 0.02%)</title><rect x="38.3498%" y="1781" width="0.0174%" height="15" fill="rgb(224,39,27)" fg:x="22294921787" fg:w="10093254"/><text x="38.5998%" y="1791.50"></text></g><g><title>__count_memcg_events (6,475,371 samples, 0.01%)</title><rect x="38.4258%" y="1701" width="0.0111%" height="15" fill="rgb(215,92,29)" fg:x="22339135930" fg:w="6475371"/><text x="38.6758%" y="1711.50"></text></g><g><title>lock_acquire (10,364,512 samples, 0.02%)</title><rect x="38.4394%" y="1701" width="0.0178%" height="15" fill="rgb(207,159,16)" fg:x="22347005823" fg:w="10364512"/><text x="38.6894%" y="1711.50"></text></g><g><title>lock_release (6,188,161 samples, 0.01%)</title><rect x="38.4572%" y="1701" width="0.0106%" height="15" fill="rgb(238,163,47)" fg:x="22357370335" fg:w="6188161"/><text x="38.7072%" y="1711.50"></text></g><g><title>lock_acquire (8,298,757 samples, 0.01%)</title><rect x="38.4886%" y="1685" width="0.0143%" height="15" fill="rgb(219,91,49)" fg:x="22375629960" fg:w="8298757"/><text x="38.7386%" y="1695.50"></text></g><g><title>lock_release (8,203,871 samples, 0.01%)</title><rect x="38.5029%" y="1685" width="0.0141%" height="15" fill="rgb(227,167,31)" fg:x="22383928717" fg:w="8203871"/><text x="38.7529%" y="1695.50"></text></g><g><title>_raw_spin_lock_irqsave (7,527,099 samples, 0.01%)</title><rect x="38.5383%" y="1557" width="0.0129%" height="15" fill="rgb(234,80,54)" fg:x="22404538682" fg:w="7527099"/><text x="38.7883%" y="1567.50"></text></g><g><title>prepare_scan_count (23,745,954 samples, 0.04%)</title><rect x="38.5285%" y="1621" width="0.0408%" height="15" fill="rgb(212,114,2)" fg:x="22398804531" fg:w="23745954"/><text x="38.7785%" y="1631.50"></text></g><g><title>mem_cgroup_flush_stats (23,745,954 samples, 0.04%)</title><rect x="38.5285%" y="1605" width="0.0408%" height="15" fill="rgb(234,50,24)" fg:x="22398804531" fg:w="23745954"/><text x="38.7785%" y="1615.50"></text></g><g><title>cgroup_rstat_flush (23,745,954 samples, 0.04%)</title><rect x="38.5285%" y="1589" width="0.0408%" height="15" fill="rgb(221,68,8)" fg:x="22398804531" fg:w="23745954"/><text x="38.7785%" y="1599.50"></text></g><g><title>cgroup_rstat_flush_locked (23,745,954 samples, 0.04%)</title><rect x="38.5285%" y="1573" width="0.0408%" height="15" fill="rgb(254,180,31)" fg:x="22398804531" fg:w="23745954"/><text x="38.7785%" y="1583.50"></text></g><g><title>mem_cgroup_css_rstat_flush (10,484,704 samples, 0.02%)</title><rect x="38.5513%" y="1557" width="0.0180%" height="15" fill="rgb(247,130,50)" fg:x="22412065781" fg:w="10484704"/><text x="38.8013%" y="1567.50"></text></g><g><title>__mod_memcg_lruvec_state (40,804,583 samples, 0.07%)</title><rect x="38.6450%" y="1525" width="0.0702%" height="15" fill="rgb(211,109,4)" fg:x="22466554993" fg:w="40804583"/><text x="38.8950%" y="1535.50"></text></g><g><title>__mod_lruvec_state (51,362,315 samples, 0.09%)</title><rect x="38.6330%" y="1541" width="0.0883%" height="15" fill="rgb(238,50,21)" fg:x="22459591362" fg:w="51362315"/><text x="38.8830%" y="1551.50"></text></g><g><title>lock_release (16,452,090 samples, 0.03%)</title><rect x="38.7376%" y="1525" width="0.0283%" height="15" fill="rgb(225,57,45)" fg:x="22520371552" fg:w="16452090"/><text x="38.9876%" y="1535.50"></text></g><g><title>_raw_spin_unlock_irq (23,624,616 samples, 0.04%)</title><rect x="38.7264%" y="1541" width="0.0406%" height="15" fill="rgb(209,196,50)" fg:x="22513884619" fg:w="23624616"/><text x="38.9764%" y="1551.50"></text></g><g><title>do_raw_spin_lock (22,400,193 samples, 0.04%)</title><rect x="38.7684%" y="1509" width="0.0385%" height="15" fill="rgb(242,140,13)" fg:x="22538295698" fg:w="22400193"/><text x="39.0184%" y="1519.50"></text></g><g><title>native_queued_spin_lock_slowpath (18,592,811 samples, 0.03%)</title><rect x="38.7750%" y="1493" width="0.0320%" height="15" fill="rgb(217,111,7)" fg:x="22542103080" fg:w="18592811"/><text x="39.0250%" y="1503.50"></text></g><g><title>__lock_acquire (14,503,532 samples, 0.02%)</title><rect x="38.8171%" y="1493" width="0.0249%" height="15" fill="rgb(253,193,51)" fg:x="22566585084" fg:w="14503532"/><text x="39.0671%" y="1503.50"></text></g><g><title>folio_lruvec_lock_irq (46,566,603 samples, 0.08%)</title><rect x="38.7671%" y="1541" width="0.0801%" height="15" fill="rgb(252,70,29)" fg:x="22537509235" fg:w="46566603"/><text x="39.0171%" y="1551.50"></text></g><g><title>_raw_spin_lock_irq (46,566,603 samples, 0.08%)</title><rect x="38.7671%" y="1525" width="0.0801%" height="15" fill="rgb(232,127,12)" fg:x="22537509235" fg:w="46566603"/><text x="39.0171%" y="1535.50"></text></g><g><title>lock_acquire (23,379,947 samples, 0.04%)</title><rect x="38.8069%" y="1509" width="0.0402%" height="15" fill="rgb(211,180,21)" fg:x="22560695891" fg:w="23379947"/><text x="39.0569%" y="1519.50"></text></g><g><title>lock_is_held_type (9,917,569 samples, 0.02%)</title><rect x="38.8472%" y="1541" width="0.0171%" height="15" fill="rgb(229,72,13)" fg:x="22584075838" fg:w="9917569"/><text x="39.0972%" y="1551.50"></text></g><g><title>page_cache_ext_isolate_folio (155,216,797 samples, 0.27%)</title><rect x="38.6043%" y="1557" width="0.2670%" height="15" fill="rgb(240,211,49)" fg:x="22442886396" fg:w="155216797"/><text x="38.8543%" y="1567.50"></text></g><g><title>folio_lruvec_lock_irqsave (6,059,547 samples, 0.01%)</title><rect x="38.9083%" y="1493" width="0.0104%" height="15" fill="rgb(219,149,40)" fg:x="22619642237" fg:w="6059547"/><text x="39.1583%" y="1503.50"></text></g><g><title>_raw_spin_lock_irqsave (6,059,547 samples, 0.01%)</title><rect x="38.9083%" y="1477" width="0.0104%" height="15" fill="rgb(210,127,46)" fg:x="22619642237" fg:w="6059547"/><text x="39.1583%" y="1487.50"></text></g><g><title>__mod_lruvec_state (5,969,554 samples, 0.01%)</title><rect x="38.9286%" y="1477" width="0.0103%" height="15" fill="rgb(220,106,7)" fg:x="22631416521" fg:w="5969554"/><text x="39.1786%" y="1487.50"></text></g><g><title>lru_add_fn (32,624,606 samples, 0.06%)</title><rect x="38.9188%" y="1493" width="0.0561%" height="15" fill="rgb(249,31,22)" fg:x="22625701784" fg:w="32624606"/><text x="39.1688%" y="1503.50"></text></g><g><title>folio_batch_move_lru (45,709,213 samples, 0.08%)</title><rect x="38.9044%" y="1509" width="0.0786%" height="15" fill="rgb(253,1,49)" fg:x="22617336386" fg:w="45709213"/><text x="39.1544%" y="1519.50"></text></g><g><title>lock_acquire (10,456,204 samples, 0.02%)</title><rect x="38.9830%" y="1509" width="0.0180%" height="15" fill="rgb(227,144,33)" fg:x="22663045599" fg:w="10456204"/><text x="39.2330%" y="1519.50"></text></g><g><title>__lock_acquire (8,299,935 samples, 0.01%)</title><rect x="38.9867%" y="1493" width="0.0143%" height="15" fill="rgb(249,163,44)" fg:x="22665201868" fg:w="8299935"/><text x="39.2367%" y="1503.50"></text></g><g><title>lock_release (6,892,784 samples, 0.01%)</title><rect x="39.0010%" y="1509" width="0.0119%" height="15" fill="rgb(234,15,39)" fg:x="22673501803" fg:w="6892784"/><text x="39.2510%" y="1519.50"></text></g><g><title>folio_add_lru (68,706,396 samples, 0.12%)</title><rect x="38.8970%" y="1525" width="0.1182%" height="15" fill="rgb(207,66,16)" fg:x="22613027933" fg:w="68706396"/><text x="39.1470%" y="1535.50"></text></g><g><title>uncharge_batch (7,495,063 samples, 0.01%)</title><rect x="39.1400%" y="1493" width="0.0129%" height="15" fill="rgb(233,112,24)" fg:x="22754310443" fg:w="7495063"/><text x="39.3900%" y="1503.50"></text></g><g><title>__lock_acquire (7,098,042 samples, 0.01%)</title><rect x="39.1735%" y="1461" width="0.0122%" height="15" fill="rgb(230,90,22)" fg:x="22773782832" fg:w="7098042"/><text x="39.4235%" y="1471.50"></text></g><g><title>lock_acquire (20,390,222 samples, 0.04%)</title><rect x="39.1608%" y="1477" width="0.0351%" height="15" fill="rgb(229,61,13)" fg:x="22766383745" fg:w="20390222"/><text x="39.4108%" y="1487.50"></text></g><g><title>trace_lock_acquire (5,893,093 samples, 0.01%)</title><rect x="39.1857%" y="1461" width="0.0101%" height="15" fill="rgb(225,57,24)" fg:x="22780880874" fg:w="5893093"/><text x="39.4357%" y="1471.50"></text></g><g><title>__mem_cgroup_uncharge_list (41,420,072 samples, 0.07%)</title><rect x="39.1400%" y="1509" width="0.0712%" height="15" fill="rgb(208,169,48)" fg:x="22754310443" fg:w="41420072"/><text x="39.3900%" y="1519.50"></text></g><g><title>uncharge_folio (33,925,009 samples, 0.06%)</title><rect x="39.1529%" y="1493" width="0.0584%" height="15" fill="rgb(244,218,51)" fg:x="22761805506" fg:w="33925009"/><text x="39.4029%" y="1503.50"></text></g><g><title>lock_release (8,956,548 samples, 0.02%)</title><rect x="39.1958%" y="1477" width="0.0154%" height="15" fill="rgb(214,148,10)" fg:x="22786773967" fg:w="8956548"/><text x="39.4458%" y="1487.50"></text></g><g><title>__mod_memcg_lruvec_state (9,865,578 samples, 0.02%)</title><rect x="39.2630%" y="1445" width="0.0170%" height="15" fill="rgb(225,174,27)" fg:x="22825827591" fg:w="9865578"/><text x="39.5130%" y="1455.50"></text></g><g><title>lock_acquire (13,349,941 samples, 0.02%)</title><rect x="39.2864%" y="1445" width="0.0230%" height="15" fill="rgb(230,96,26)" fg:x="22839442278" fg:w="13349941"/><text x="39.5364%" y="1455.50"></text></g><g><title>__mod_lruvec_page_state (37,999,664 samples, 0.07%)</title><rect x="39.2566%" y="1461" width="0.0654%" height="15" fill="rgb(232,10,30)" fg:x="22822079403" fg:w="37999664"/><text x="39.5066%" y="1471.50"></text></g><g><title>lock_release (7,286,848 samples, 0.01%)</title><rect x="39.3094%" y="1445" width="0.0125%" height="15" fill="rgb(222,8,50)" fg:x="22852792219" fg:w="7286848"/><text x="39.5594%" y="1455.50"></text></g><g><title>filemap_unaccount_folio (40,198,948 samples, 0.07%)</title><rect x="39.2553%" y="1477" width="0.0691%" height="15" fill="rgb(213,81,27)" fg:x="22821334870" fg:w="40198948"/><text x="39.5053%" y="1487.50"></text></g><g><title>_raw_spin_lock (14,268,839 samples, 0.02%)</title><rect x="39.4007%" y="1461" width="0.0245%" height="15" fill="rgb(245,50,10)" fg:x="22905897482" fg:w="14268839"/><text x="39.6507%" y="1471.50"></text></g><g><title>lock_acquire (12,032,416 samples, 0.02%)</title><rect x="39.4046%" y="1445" width="0.0207%" height="15" fill="rgb(216,100,18)" fg:x="22908133905" fg:w="12032416"/><text x="39.6546%" y="1455.50"></text></g><g><title>__lock_acquire (6,867,133 samples, 0.01%)</title><rect x="39.4135%" y="1429" width="0.0118%" height="15" fill="rgb(236,147,54)" fg:x="22913299188" fg:w="6867133"/><text x="39.6635%" y="1439.50"></text></g><g><title>do_raw_write_lock (1,115,107,175 samples, 1.92%)</title><rect x="39.4395%" y="1429" width="1.9181%" height="15" fill="rgb(205,143,26)" fg:x="22928419717" fg:w="1115107175"/><text x="39.6895%" y="1439.50">d..</text></g><g><title>queued_write_lock_slowpath (1,103,548,707 samples, 1.90%)</title><rect x="39.4594%" y="1413" width="1.8982%" height="15" fill="rgb(236,26,9)" fg:x="22939978185" fg:w="1103548707"/><text x="39.7094%" y="1423.50">q..</text></g><g><title>native_queued_spin_lock_slowpath (401,843,888 samples, 0.69%)</title><rect x="40.6664%" y="1397" width="0.6912%" height="15" fill="rgb(221,165,53)" fg:x="23641683004" fg:w="401843888"/><text x="40.9164%" y="1407.50"></text></g><g><title>__lock_acquire (37,565,435 samples, 0.06%)</title><rect x="41.3638%" y="1413" width="0.0646%" height="15" fill="rgb(214,110,17)" fg:x="24047155118" fg:w="37565435"/><text x="41.6138%" y="1423.50"></text></g><g><title>lock_acquire (43,393,152 samples, 0.07%)</title><rect x="41.3576%" y="1429" width="0.0746%" height="15" fill="rgb(237,197,12)" fg:x="24043526892" fg:w="43393152"/><text x="41.6076%" y="1439.50"></text></g><g><title>cache_ext_ds_registry_write_lock (1,164,530,644 samples, 2.00%)</title><rect x="39.4305%" y="1461" width="2.0031%" height="15" fill="rgb(205,84,17)" fg:x="22923179165" fg:w="1164530644"/><text x="39.6805%" y="1471.50">c..</text></g><g><title>_raw_write_lock (1,160,022,294 samples, 2.00%)</title><rect x="39.4382%" y="1445" width="1.9954%" height="15" fill="rgb(237,18,45)" fg:x="22927687515" fg:w="1160022294"/><text x="39.6882%" y="1455.50">_..</text></g><g><title>cache_ext_ds_registry_write_unlock (11,918,826 samples, 0.02%)</title><rect x="41.4336%" y="1461" width="0.0205%" height="15" fill="rgb(221,87,14)" fg:x="24087709809" fg:w="11918826"/><text x="41.6836%" y="1471.50"></text></g><g><title>_raw_write_unlock (10,411,051 samples, 0.02%)</title><rect x="41.4362%" y="1445" width="0.0179%" height="15" fill="rgb(238,186,15)" fg:x="24089217584" fg:w="10411051"/><text x="41.6862%" y="1455.50"></text></g><g><title>lock_release (9,626,661 samples, 0.02%)</title><rect x="41.4375%" y="1429" width="0.0166%" height="15" fill="rgb(208,115,11)" fg:x="24090001974" fg:w="9626661"/><text x="41.6875%" y="1439.50"></text></g><g><title>__lock_acquire (10,098,681 samples, 0.02%)</title><rect x="41.5729%" y="1333" width="0.0174%" height="15" fill="rgb(254,175,0)" fg:x="24168683445" fg:w="10098681"/><text x="41.8229%" y="1343.50"></text></g><g><title>lock_acquire (10,783,590 samples, 0.02%)</title><rect x="41.5729%" y="1349" width="0.0185%" height="15" fill="rgb(227,24,42)" fg:x="24168683445" fg:w="10783590"/><text x="41.8229%" y="1359.50"></text></g><g><title>_raw_spin_lock_irqsave (16,167,006 samples, 0.03%)</title><rect x="41.5649%" y="1365" width="0.0278%" height="15" fill="rgb(223,211,37)" fg:x="24164060651" fg:w="16167006"/><text x="41.8149%" y="1375.50"></text></g><g><title>__unfreeze_partials (30,001,732 samples, 0.05%)</title><rect x="41.5556%" y="1381" width="0.0516%" height="15" fill="rgb(235,49,27)" fg:x="24158643389" fg:w="30001732"/><text x="41.8056%" y="1391.50"></text></g><g><title>_raw_spin_unlock_irqrestore (5,933,533 samples, 0.01%)</title><rect x="41.6072%" y="1381" width="0.0102%" height="15" fill="rgb(254,97,51)" fg:x="24188645121" fg:w="5933533"/><text x="41.8572%" y="1391.50"></text></g><g><title>lock_acquire (9,015,018 samples, 0.02%)</title><rect x="41.6174%" y="1381" width="0.0155%" height="15" fill="rgb(249,51,40)" fg:x="24194578654" fg:w="9015018"/><text x="41.8674%" y="1391.50"></text></g><g><title>lock_release (7,574,105 samples, 0.01%)</title><rect x="41.6343%" y="1381" width="0.0130%" height="15" fill="rgb(210,128,45)" fg:x="24204384197" fg:w="7574105"/><text x="41.8843%" y="1391.50"></text></g><g><title>put_cpu_partial (58,581,216 samples, 0.10%)</title><rect x="41.5478%" y="1397" width="0.1008%" height="15" fill="rgb(224,137,50)" fg:x="24154119309" fg:w="58581216"/><text x="41.7978%" y="1407.50"></text></g><g><title>__slab_free (79,759,939 samples, 0.14%)</title><rect x="41.5390%" y="1413" width="0.1372%" height="15" fill="rgb(242,15,9)" fg:x="24148984074" fg:w="79759939"/><text x="41.7890%" y="1423.50"></text></g><g><title>slab_update_freelist (16,043,488 samples, 0.03%)</title><rect x="41.6486%" y="1397" width="0.0276%" height="15" fill="rgb(233,187,41)" fg:x="24212700525" fg:w="16043488"/><text x="41.8986%" y="1407.50"></text></g><g><title>__kmem_cache_free (89,431,016 samples, 0.15%)</title><rect x="41.5339%" y="1429" width="0.1538%" height="15" fill="rgb(227,2,29)" fg:x="24146050437" fg:w="89431016"/><text x="41.7839%" y="1439.50"></text></g><g><title>slab_free_freelist_hook (6,057,861 samples, 0.01%)</title><rect x="41.6773%" y="1413" width="0.0104%" height="15" fill="rgb(222,70,3)" fg:x="24229423592" fg:w="6057861"/><text x="41.9273%" y="1423.50"></text></g><g><title>cache_ext_list_node_free (137,317,384 samples, 0.24%)</title><rect x="41.4541%" y="1461" width="0.2362%" height="15" fill="rgb(213,11,42)" fg:x="24099628635" fg:w="137317384"/><text x="41.7041%" y="1471.50"></text></g><g><title>kfree (137,317,384 samples, 0.24%)</title><rect x="41.4541%" y="1445" width="0.2362%" height="15" fill="rgb(225,150,9)" fg:x="24099628635" fg:w="137317384"/><text x="41.7041%" y="1455.50"></text></g><g><title>__unfreeze_partials (8,963,634 samples, 0.02%)</title><rect x="41.7057%" y="1397" width="0.0154%" height="15" fill="rgb(230,162,45)" fg:x="24245936684" fg:w="8963634"/><text x="41.9557%" y="1407.50"></text></g><g><title>put_cpu_partial (15,175,105 samples, 0.03%)</title><rect x="41.7030%" y="1413" width="0.0261%" height="15" fill="rgb(222,14,52)" fg:x="24244344888" fg:w="15175105"/><text x="41.9530%" y="1423.50"></text></g><g><title>__slab_free (26,531,646 samples, 0.05%)</title><rect x="41.7030%" y="1429" width="0.0456%" height="15" fill="rgb(254,198,14)" fg:x="24244344888" fg:w="26531646"/><text x="41.9530%" y="1439.50"></text></g><g><title>slab_update_freelist (11,356,541 samples, 0.02%)</title><rect x="41.7291%" y="1413" width="0.0195%" height="15" fill="rgb(220,217,30)" fg:x="24259519993" fg:w="11356541"/><text x="41.9791%" y="1423.50"></text></g><g><title>slab_free_freelist_hook (6,866,507 samples, 0.01%)</title><rect x="41.7512%" y="1429" width="0.0118%" height="15" fill="rgb(215,146,41)" fg:x="24272345946" fg:w="6866507"/><text x="42.0012%" y="1439.50"></text></g><g><title>__kmem_cache_free (37,867,217 samples, 0.07%)</title><rect x="41.6991%" y="1445" width="0.0651%" height="15" fill="rgb(217,27,36)" fg:x="24242083642" fg:w="37867217"/><text x="41.9491%" y="1455.50"></text></g><g><title>valid_folios_del (1,418,403,198 samples, 2.44%)</title><rect x="39.3271%" y="1477" width="2.4398%" height="15" fill="rgb(219,218,39)" fg:x="22863072408" fg:w="1418403198"/><text x="39.5771%" y="1487.50">va..</text></g><g><title>kfree (44,529,587 samples, 0.08%)</title><rect x="41.6903%" y="1461" width="0.0766%" height="15" fill="rgb(219,4,42)" fg:x="24236946019" fg:w="44529587"/><text x="41.9403%" y="1471.50"></text></g><g><title>xas_init_marks (48,407,707 samples, 0.08%)</title><rect x="41.7720%" y="1477" width="0.0833%" height="15" fill="rgb(249,119,36)" fg:x="24284463614" fg:w="48407707"/><text x="42.0220%" y="1487.50"></text></g><g><title>xas_clear_mark (46,873,636 samples, 0.08%)</title><rect x="41.7747%" y="1461" width="0.0806%" height="15" fill="rgb(209,23,33)" fg:x="24285997685" fg:w="46873636"/><text x="42.0247%" y="1471.50"></text></g><g><title>workingset_update_node (10,573,078 samples, 0.02%)</title><rect x="41.8603%" y="1461" width="0.0182%" height="15" fill="rgb(211,10,0)" fg:x="24335773627" fg:w="10573078"/><text x="42.1103%" y="1471.50"></text></g><g><title>lock_is_held_type (5,999,081 samples, 0.01%)</title><rect x="41.8681%" y="1445" width="0.0103%" height="15" fill="rgb(208,99,37)" fg:x="24340347624" fg:w="5999081"/><text x="42.1181%" y="1455.50"></text></g><g><title>__filemap_remove_folio (1,627,130,913 samples, 2.80%)</title><rect x="39.2307%" y="1493" width="2.7988%" height="15" fill="rgb(213,132,31)" fg:x="22807064340" fg:w="1627130913"/><text x="39.4807%" y="1503.50">__..</text></g><g><title>xas_store (101,323,932 samples, 0.17%)</title><rect x="41.8553%" y="1477" width="0.1743%" height="15" fill="rgb(243,129,40)" fg:x="24332871321" fg:w="101323932"/><text x="42.1053%" y="1487.50"></text></g><g><title>xas_create (87,848,548 samples, 0.15%)</title><rect x="41.8785%" y="1461" width="0.1511%" height="15" fill="rgb(210,66,33)" fg:x="24346346705" fg:w="87848548"/><text x="42.1285%" y="1471.50"></text></g><g><title>do_raw_spin_lock (369,041,114 samples, 0.63%)</title><rect x="42.0296%" y="1477" width="0.6348%" height="15" fill="rgb(209,189,4)" fg:x="24434195253" fg:w="369041114"/><text x="42.2796%" y="1487.50"></text></g><g><title>native_queued_spin_lock_slowpath (352,480,315 samples, 0.61%)</title><rect x="42.0581%" y="1461" width="0.6063%" height="15" fill="rgb(214,107,37)" fg:x="24450756052" fg:w="352480315"/><text x="42.3081%" y="1471.50"></text></g><g><title>__lock_acquire (18,227,281 samples, 0.03%)</title><rect x="42.6761%" y="1461" width="0.0314%" height="15" fill="rgb(245,88,54)" fg:x="24810037881" fg:w="18227281"/><text x="42.9261%" y="1471.50"></text></g><g><title>_raw_spin_lock (398,052,276 samples, 0.68%)</title><rect x="42.0296%" y="1493" width="0.6847%" height="15" fill="rgb(205,146,20)" fg:x="24434195253" fg:w="398052276"/><text x="42.2796%" y="1503.50"></text></g><g><title>lock_acquire (29,011,162 samples, 0.05%)</title><rect x="42.6644%" y="1477" width="0.0499%" height="15" fill="rgb(220,161,25)" fg:x="24803236367" fg:w="29011162"/><text x="42.9144%" y="1487.50"></text></g><g><title>do_raw_spin_lock (14,741,810 samples, 0.03%)</title><rect x="42.7156%" y="1477" width="0.0254%" height="15" fill="rgb(215,152,15)" fg:x="24833020428" fg:w="14741810"/><text x="42.9656%" y="1487.50"></text></g><g><title>_raw_spin_lock_irq (29,620,835 samples, 0.05%)</title><rect x="42.7143%" y="1493" width="0.0510%" height="15" fill="rgb(233,192,44)" fg:x="24832247529" fg:w="29620835"/><text x="42.9643%" y="1503.50"></text></g><g><title>lock_acquire (14,106,126 samples, 0.02%)</title><rect x="42.7410%" y="1477" width="0.0243%" height="15" fill="rgb(240,170,46)" fg:x="24847762238" fg:w="14106126"/><text x="42.9910%" y="1487.50"></text></g><g><title>__lock_acquire (8,221,334 samples, 0.01%)</title><rect x="42.7511%" y="1461" width="0.0141%" height="15" fill="rgb(207,104,33)" fg:x="24853647030" fg:w="8221334"/><text x="43.0011%" y="1471.50"></text></g><g><title>do_raw_spin_unlock (7,020,558 samples, 0.01%)</title><rect x="42.7652%" y="1477" width="0.0121%" height="15" fill="rgb(219,21,39)" fg:x="24861868364" fg:w="7020558"/><text x="43.0152%" y="1487.50"></text></g><g><title>_raw_spin_unlock (12,506,238 samples, 0.02%)</title><rect x="42.7652%" y="1493" width="0.0215%" height="15" fill="rgb(214,133,29)" fg:x="24861868364" fg:w="12506238"/><text x="43.0152%" y="1503.50"></text></g><g><title>asm_common_interrupt (5,947,821 samples, 0.01%)</title><rect x="42.7905%" y="1477" width="0.0102%" height="15" fill="rgb(226,93,6)" fg:x="24876592060" fg:w="5947821"/><text x="43.0405%" y="1487.50"></text></g><g><title>common_interrupt (5,947,821 samples, 0.01%)</title><rect x="42.7905%" y="1461" width="0.0102%" height="15" fill="rgb(252,222,34)" fg:x="24876592060" fg:w="5947821"/><text x="43.0405%" y="1471.50"></text></g><g><title>__sysvec_apic_timer_interrupt (6,215,026 samples, 0.01%)</title><rect x="42.8008%" y="1445" width="0.0107%" height="15" fill="rgb(252,92,48)" fg:x="24882539881" fg:w="6215026"/><text x="43.0508%" y="1455.50"></text></g><g><title>hrtimer_interrupt (6,215,026 samples, 0.01%)</title><rect x="42.8008%" y="1429" width="0.0107%" height="15" fill="rgb(245,223,24)" fg:x="24882539881" fg:w="6215026"/><text x="43.0508%" y="1439.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (9,972,009 samples, 0.02%)</title><rect x="42.8008%" y="1477" width="0.0172%" height="15" fill="rgb(205,176,3)" fg:x="24882539881" fg:w="9972009"/><text x="43.0508%" y="1487.50"></text></g><g><title>sysvec_apic_timer_interrupt (9,972,009 samples, 0.02%)</title><rect x="42.8008%" y="1461" width="0.0172%" height="15" fill="rgb(235,151,15)" fg:x="24882539881" fg:w="9972009"/><text x="43.0508%" y="1471.50"></text></g><g><title>_raw_spin_unlock_irq (34,747,084 samples, 0.06%)</title><rect x="42.7867%" y="1493" width="0.0598%" height="15" fill="rgb(237,209,11)" fg:x="24874374602" fg:w="34747084"/><text x="43.0367%" y="1503.50"></text></g><g><title>lock_release (8,876,877 samples, 0.02%)</title><rect x="42.8312%" y="1477" width="0.0153%" height="15" fill="rgb(243,227,24)" fg:x="24900244809" fg:w="8876877"/><text x="43.0812%" y="1487.50"></text></g><g><title>__remove_mapping (2,153,244,492 samples, 3.70%)</title><rect x="39.2112%" y="1509" width="3.7038%" height="15" fill="rgb(239,193,16)" fg:x="22795730515" fg:w="2153244492"/><text x="39.4612%" y="1519.50">__re..</text></g><g><title>workingset_eviction (35,215,055 samples, 0.06%)</title><rect x="42.8545%" y="1493" width="0.0606%" height="15" fill="rgb(231,27,9)" fg:x="24913759952" fg:w="35215055"/><text x="43.1045%" y="1503.50"></text></g><g><title>jbd2_journal_grab_journal_head (22,127,006 samples, 0.04%)</title><rect x="42.9293%" y="1461" width="0.0381%" height="15" fill="rgb(219,169,10)" fg:x="24957277495" fg:w="22127006"/><text x="43.1793%" y="1471.50"></text></g><g><title>__lock_acquire (7,684,170 samples, 0.01%)</title><rect x="42.9727%" y="1413" width="0.0132%" height="15" fill="rgb(244,229,43)" fg:x="24982461151" fg:w="7684170"/><text x="43.2227%" y="1423.50"></text></g><g><title>_raw_spin_lock (12,280,084 samples, 0.02%)</title><rect x="42.9674%" y="1445" width="0.0211%" height="15" fill="rgb(254,38,20)" fg:x="24979404501" fg:w="12280084"/><text x="43.2174%" y="1455.50"></text></g><g><title>lock_acquire (9,223,434 samples, 0.02%)</title><rect x="42.9727%" y="1429" width="0.0159%" height="15" fill="rgb(250,47,30)" fg:x="24982461151" fg:w="9223434"/><text x="43.2227%" y="1439.50"></text></g><g><title>cache_from_obj (21,559,416 samples, 0.04%)</title><rect x="43.0090%" y="1413" width="0.0371%" height="15" fill="rgb(224,124,36)" fg:x="25003604719" fg:w="21559416"/><text x="43.2590%" y="1423.50"></text></g><g><title>mod_objcg_state (9,806,597 samples, 0.02%)</title><rect x="43.0989%" y="1397" width="0.0169%" height="15" fill="rgb(246,68,51)" fg:x="25055832994" fg:w="9806597"/><text x="43.3489%" y="1407.50"></text></g><g><title>memcg_slab_free_hook (60,630,184 samples, 0.10%)</title><rect x="43.0461%" y="1413" width="0.1043%" height="15" fill="rgb(253,43,49)" fg:x="25025164135" fg:w="60630184"/><text x="43.2961%" y="1423.50"></text></g><g><title>obj_cgroup_uncharge (20,154,728 samples, 0.03%)</title><rect x="43.1157%" y="1397" width="0.0347%" height="15" fill="rgb(219,54,36)" fg:x="25065639591" fg:w="20154728"/><text x="43.3657%" y="1407.50"></text></g><g><title>refill_obj_stock (20,154,728 samples, 0.03%)</title><rect x="43.1157%" y="1381" width="0.0347%" height="15" fill="rgb(227,133,34)" fg:x="25065639591" fg:w="20154728"/><text x="43.3657%" y="1391.50"></text></g><g><title>filemap_release_folio (139,897,004 samples, 0.24%)</title><rect x="42.9164%" y="1509" width="0.2406%" height="15" fill="rgb(247,227,15)" fg:x="24949768423" fg:w="139897004"/><text x="43.1664%" y="1519.50"></text></g><g><title>ext4_release_folio (137,544,179 samples, 0.24%)</title><rect x="42.9205%" y="1493" width="0.2366%" height="15" fill="rgb(229,96,14)" fg:x="24952121248" fg:w="137544179"/><text x="43.1705%" y="1503.50"></text></g><g><title>jbd2_journal_try_to_free_buffers (134,590,909 samples, 0.23%)</title><rect x="42.9255%" y="1477" width="0.2315%" height="15" fill="rgb(220,79,17)" fg:x="24955074518" fg:w="134590909"/><text x="43.1755%" y="1487.50"></text></g><g><title>try_to_free_buffers (110,260,926 samples, 0.19%)</title><rect x="42.9674%" y="1461" width="0.1897%" height="15" fill="rgb(205,131,53)" fg:x="24979404501" fg:w="110260926"/><text x="43.2174%" y="1471.50"></text></g><g><title>free_buffer_head (92,125,421 samples, 0.16%)</title><rect x="42.9986%" y="1445" width="0.1585%" height="15" fill="rgb(209,50,29)" fg:x="24997540006" fg:w="92125421"/><text x="43.2486%" y="1455.50"></text></g><g><title>kmem_cache_free (92,125,421 samples, 0.16%)</title><rect x="42.9986%" y="1429" width="0.1585%" height="15" fill="rgb(245,86,46)" fg:x="24997540006" fg:w="92125421"/><text x="43.2486%" y="1439.50"></text></g><g><title>free_unref_page_commit (6,972,208 samples, 0.01%)</title><rect x="43.1868%" y="1493" width="0.0120%" height="15" fill="rgb(235,66,46)" fg:x="25106949403" fg:w="6972208"/><text x="43.4368%" y="1503.50"></text></g><g><title>free_unref_page_prepare (13,614,102 samples, 0.02%)</title><rect x="43.1988%" y="1493" width="0.0234%" height="15" fill="rgb(232,148,31)" fg:x="25113921611" fg:w="13614102"/><text x="43.4488%" y="1503.50"></text></g><g><title>free_unref_page_list (34,051,945 samples, 0.06%)</title><rect x="43.1686%" y="1509" width="0.0586%" height="15" fill="rgb(217,149,8)" fg:x="25096401407" fg:w="34051945"/><text x="43.4186%" y="1519.50"></text></g><g><title>__lock_acquire (8,239,743 samples, 0.01%)</title><rect x="43.2401%" y="1493" width="0.0142%" height="15" fill="rgb(209,183,11)" fg:x="25137949472" fg:w="8239743"/><text x="43.4901%" y="1503.50"></text></g><g><title>lock_acquire (19,669,504 samples, 0.03%)</title><rect x="43.2285%" y="1509" width="0.0338%" height="15" fill="rgb(208,55,20)" fg:x="25131219740" fg:w="19669504"/><text x="43.4785%" y="1519.50"></text></g><g><title>lock_release (14,449,205 samples, 0.02%)</title><rect x="43.2624%" y="1509" width="0.0249%" height="15" fill="rgb(218,39,14)" fg:x="25150889244" fg:w="14449205"/><text x="43.5124%" y="1519.50"></text></g><g><title>shrink_folio_list (2,486,810,666 samples, 4.28%)</title><rect x="39.0241%" y="1525" width="4.2776%" height="15" fill="rgb(216,169,33)" fg:x="22686952136" fg:w="2486810666"/><text x="39.2741%" y="1535.50">shrin..</text></g><g><title>reclaim_pages (2,576,422,794 samples, 4.43%)</title><rect x="38.8713%" y="1557" width="4.4317%" height="15" fill="rgb(233,80,24)" fg:x="22598103193" fg:w="2576422794"/><text x="39.1213%" y="1567.50">recla..</text></g><g><title>reclaim_folio_list (2,564,630,175 samples, 4.41%)</title><rect x="38.8916%" y="1541" width="4.4115%" height="15" fill="rgb(213,179,31)" fg:x="22609895812" fg:w="2564630175"/><text x="39.1416%" y="1551.50">recla..</text></g><g><title>__page_cache_ext_isolate_and_reclaim (2,943,221,226 samples, 5.06%)</title><rect x="38.5737%" y="1573" width="5.0627%" height="15" fill="rgb(209,19,5)" fg:x="22425095782" fg:w="2943221226"/><text x="38.8237%" y="1583.50">__page..</text></g><g><title>valid_folios_exists_unlocked (193,791,021 samples, 0.33%)</title><rect x="43.3030%" y="1557" width="0.3333%" height="15" fill="rgb(219,18,35)" fg:x="25174525987" fg:w="193791021"/><text x="43.5530%" y="1567.50"></text></g><g><title>page_cache_ext_isolate_and_reclaim (2,944,670,768 samples, 5.07%)</title><rect x="38.5737%" y="1589" width="5.0652%" height="15" fill="rgb(209,169,16)" fg:x="22425095782" fg:w="2944670768"/><text x="38.8237%" y="1599.50">page_c..</text></g><g><title>shrink_active_list (14,587,551 samples, 0.03%)</title><rect x="43.6389%" y="1573" width="0.0251%" height="15" fill="rgb(245,90,51)" fg:x="25369766550" fg:w="14587551"/><text x="43.8889%" y="1583.50"></text></g><g><title>move_folios_to_lru (6,217,686 samples, 0.01%)</title><rect x="43.6533%" y="1557" width="0.0107%" height="15" fill="rgb(220,99,45)" fg:x="25378136415" fg:w="6217686"/><text x="43.9033%" y="1567.50"></text></g><g><title>filemap_unaccount_folio (6,153,515 samples, 0.01%)</title><rect x="43.6945%" y="1509" width="0.0106%" height="15" fill="rgb(249,89,25)" fg:x="25402115843" fg:w="6153515"/><text x="43.9445%" y="1519.50"></text></g><g><title>__mod_lruvec_page_state (6,153,515 samples, 0.01%)</title><rect x="43.6945%" y="1493" width="0.0106%" height="15" fill="rgb(239,193,0)" fg:x="25402115843" fg:w="6153515"/><text x="43.9445%" y="1503.50"></text></g><g><title>do_raw_write_lock (57,085,683 samples, 0.10%)</title><rect x="43.7156%" y="1461" width="0.0982%" height="15" fill="rgb(231,126,1)" fg:x="25414381359" fg:w="57085683"/><text x="43.9656%" y="1471.50"></text></g><g><title>queued_write_lock_slowpath (57,085,683 samples, 0.10%)</title><rect x="43.7156%" y="1445" width="0.0982%" height="15" fill="rgb(243,166,3)" fg:x="25414381359" fg:w="57085683"/><text x="43.9656%" y="1455.50"></text></g><g><title>native_queued_spin_lock_slowpath (26,068,547 samples, 0.04%)</title><rect x="43.7690%" y="1429" width="0.0448%" height="15" fill="rgb(223,22,34)" fg:x="25445398495" fg:w="26068547"/><text x="44.0190%" y="1439.50"></text></g><g><title>cache_ext_ds_registry_write_lock (62,365,035 samples, 0.11%)</title><rect x="43.7130%" y="1493" width="0.1073%" height="15" fill="rgb(251,52,51)" fg:x="25412862141" fg:w="62365035"/><text x="43.9630%" y="1503.50"></text></g><g><title>_raw_write_lock (60,845,817 samples, 0.10%)</title><rect x="43.7156%" y="1477" width="0.1047%" height="15" fill="rgb(221,165,28)" fg:x="25414381359" fg:w="60845817"/><text x="43.9656%" y="1487.50"></text></g><g><title>cache_ext_list_node_free (7,537,242 samples, 0.01%)</title><rect x="43.8229%" y="1493" width="0.0130%" height="15" fill="rgb(218,121,47)" fg:x="25476735178" fg:w="7537242"/><text x="44.0729%" y="1503.50"></text></g><g><title>kfree (7,537,242 samples, 0.01%)</title><rect x="43.8229%" y="1477" width="0.0130%" height="15" fill="rgb(209,120,9)" fg:x="25476735178" fg:w="7537242"/><text x="44.0729%" y="1487.50"></text></g><g><title>__slab_free (6,065,590 samples, 0.01%)</title><rect x="43.8412%" y="1461" width="0.0104%" height="15" fill="rgb(236,68,12)" fg:x="25487408569" fg:w="6065590"/><text x="44.0912%" y="1471.50"></text></g><g><title>valid_folios_del (85,177,526 samples, 0.15%)</title><rect x="43.7064%" y="1509" width="0.1465%" height="15" fill="rgb(225,194,26)" fg:x="25409042177" fg:w="85177526"/><text x="43.9564%" y="1519.50"></text></g><g><title>kfree (9,947,283 samples, 0.02%)</title><rect x="43.8358%" y="1493" width="0.0171%" height="15" fill="rgb(231,84,39)" fg:x="25484272420" fg:w="9947283"/><text x="44.0858%" y="1503.50"></text></g><g><title>__kmem_cache_free (6,811,134 samples, 0.01%)</title><rect x="43.8412%" y="1477" width="0.0117%" height="15" fill="rgb(210,11,45)" fg:x="25487408569" fg:w="6811134"/><text x="44.0912%" y="1487.50"></text></g><g><title>__filemap_remove_folio (102,094,075 samples, 0.18%)</title><rect x="43.6920%" y="1525" width="0.1756%" height="15" fill="rgb(224,54,52)" fg:x="25400638787" fg:w="102094075"/><text x="43.9420%" y="1535.50"></text></g><g><title>do_raw_spin_lock (96,892,031 samples, 0.17%)</title><rect x="43.8689%" y="1509" width="0.1667%" height="15" fill="rgb(238,102,14)" fg:x="25503528251" fg:w="96892031"/><text x="44.1189%" y="1519.50"></text></g><g><title>native_queued_spin_lock_slowpath (94,598,755 samples, 0.16%)</title><rect x="43.8729%" y="1493" width="0.1627%" height="15" fill="rgb(243,160,52)" fg:x="25505821527" fg:w="94598755"/><text x="44.1229%" y="1503.50"></text></g><g><title>_raw_spin_lock (100,723,115 samples, 0.17%)</title><rect x="43.8676%" y="1525" width="0.1733%" height="15" fill="rgb(216,114,19)" fg:x="25502732862" fg:w="100723115"/><text x="44.1176%" y="1535.50"></text></g><g><title>_raw_spin_lock_irq (6,212,257 samples, 0.01%)</title><rect x="44.0408%" y="1525" width="0.0107%" height="15" fill="rgb(244,166,37)" fg:x="25603455977" fg:w="6212257"/><text x="44.2908%" y="1535.50"></text></g><g><title>__remove_mapping (223,470,143 samples, 0.38%)</title><rect x="43.6894%" y="1541" width="0.3844%" height="15" fill="rgb(246,29,44)" fg:x="25399124174" fg:w="223470143"/><text x="43.9394%" y="1551.50"></text></g><g><title>jbd2_journal_grab_journal_head (8,307,759 samples, 0.01%)</title><rect x="44.0778%" y="1493" width="0.0143%" height="15" fill="rgb(215,56,53)" fg:x="25624971688" fg:w="8307759"/><text x="44.3278%" y="1503.50"></text></g><g><title>memcg_slab_free_hook (9,093,490 samples, 0.02%)</title><rect x="44.1002%" y="1445" width="0.0156%" height="15" fill="rgb(217,60,2)" fg:x="25637943682" fg:w="9093490"/><text x="44.3502%" y="1455.50"></text></g><g><title>filemap_release_folio (25,976,540 samples, 0.04%)</title><rect x="44.0738%" y="1541" width="0.0447%" height="15" fill="rgb(207,26,24)" fg:x="25622594317" fg:w="25976540"/><text x="44.3238%" y="1551.50"></text></g><g><title>ext4_release_folio (25,976,540 samples, 0.04%)</title><rect x="44.0738%" y="1525" width="0.0447%" height="15" fill="rgb(252,210,15)" fg:x="25622594317" fg:w="25976540"/><text x="44.3238%" y="1535.50"></text></g><g><title>jbd2_journal_try_to_free_buffers (24,392,846 samples, 0.04%)</title><rect x="44.0765%" y="1509" width="0.0420%" height="15" fill="rgb(253,209,26)" fg:x="25624178011" fg:w="24392846"/><text x="44.3265%" y="1519.50"></text></g><g><title>try_to_free_buffers (15,291,410 samples, 0.03%)</title><rect x="44.0921%" y="1493" width="0.0263%" height="15" fill="rgb(238,170,14)" fg:x="25633279447" fg:w="15291410"/><text x="44.3421%" y="1503.50"></text></g><g><title>free_buffer_head (13,731,876 samples, 0.02%)</title><rect x="44.0948%" y="1477" width="0.0236%" height="15" fill="rgb(216,178,15)" fg:x="25634838981" fg:w="13731876"/><text x="44.3448%" y="1487.50"></text></g><g><title>kmem_cache_free (13,731,876 samples, 0.02%)</title><rect x="44.0948%" y="1461" width="0.0236%" height="15" fill="rgb(250,197,2)" fg:x="25634838981" fg:w="13731876"/><text x="44.3448%" y="1471.50"></text></g><g><title>shrink_lruvec (3,230,927,237 samples, 5.56%)</title><rect x="38.5728%" y="1605" width="5.5576%" height="15" fill="rgb(212,70,42)" fg:x="22424590062" fg:w="3230927237"/><text x="38.8228%" y="1615.50">shrink_..</text></g><g><title>shrink_list (285,750,749 samples, 0.49%)</title><rect x="43.6389%" y="1589" width="0.4915%" height="15" fill="rgb(227,213,9)" fg:x="25369766550" fg:w="285750749"/><text x="43.8889%" y="1599.50"></text></g><g><title>shrink_inactive_list (271,163,198 samples, 0.47%)</title><rect x="43.6640%" y="1573" width="0.4664%" height="15" fill="rgb(245,99,25)" fg:x="25384354101" fg:w="271163198"/><text x="43.9140%" y="1583.50"></text></g><g><title>shrink_folio_list (261,041,710 samples, 0.45%)</title><rect x="43.6814%" y="1557" width="0.4490%" height="15" fill="rgb(250,82,29)" fg:x="25394475589" fg:w="261041710"/><text x="43.9314%" y="1567.50"></text></g><g><title>_raw_spin_lock_irqsave (6,156,501 samples, 0.01%)</title><rect x="44.1397%" y="1493" width="0.0106%" height="15" fill="rgb(241,226,54)" fg:x="25660913235" fg:w="6156501"/><text x="44.3897%" y="1503.50"></text></g><g><title>shrink_slab (23,020,175 samples, 0.04%)</title><rect x="44.1304%" y="1605" width="0.0396%" height="15" fill="rgb(221,99,41)" fg:x="25655517299" fg:w="23020175"/><text x="44.3804%" y="1615.50"></text></g><g><title>shrink_slab_memcg (23,020,175 samples, 0.04%)</title><rect x="44.1304%" y="1589" width="0.0396%" height="15" fill="rgb(213,90,21)" fg:x="25655517299" fg:w="23020175"/><text x="44.3804%" y="1599.50"></text></g><g><title>do_shrink_slab (21,567,799 samples, 0.04%)</title><rect x="44.1329%" y="1573" width="0.0371%" height="15" fill="rgb(205,208,24)" fg:x="25656969675" fg:w="21567799"/><text x="44.3829%" y="1583.50"></text></g><g><title>count_shadow_nodes (21,567,799 samples, 0.04%)</title><rect x="44.1329%" y="1557" width="0.0371%" height="15" fill="rgb(246,31,12)" fg:x="25656969675" fg:w="21567799"/><text x="44.3829%" y="1567.50"></text></g><g><title>mem_cgroup_flush_stats (20,773,456 samples, 0.04%)</title><rect x="44.1343%" y="1541" width="0.0357%" height="15" fill="rgb(213,154,6)" fg:x="25657764018" fg:w="20773456"/><text x="44.3843%" y="1551.50"></text></g><g><title>cgroup_rstat_flush (20,773,456 samples, 0.04%)</title><rect x="44.1343%" y="1525" width="0.0357%" height="15" fill="rgb(222,163,29)" fg:x="25657764018" fg:w="20773456"/><text x="44.3843%" y="1535.50"></text></g><g><title>cgroup_rstat_flush_locked (20,773,456 samples, 0.04%)</title><rect x="44.1343%" y="1509" width="0.0357%" height="15" fill="rgb(227,201,8)" fg:x="25657764018" fg:w="20773456"/><text x="44.3843%" y="1519.50"></text></g><g><title>mem_cgroup_css_rstat_flush (9,134,161 samples, 0.02%)</title><rect x="44.1543%" y="1493" width="0.0157%" height="15" fill="rgb(233,9,32)" fg:x="25669403313" fg:w="9134161"/><text x="44.4043%" y="1503.50"></text></g><g><title>shrink_node_memcgs (3,256,783,260 samples, 5.60%)</title><rect x="38.5693%" y="1621" width="5.6020%" height="15" fill="rgb(217,54,24)" fg:x="22422550485" fg:w="3256783260"/><text x="38.8193%" y="1631.50">shrink_..</text></g><g><title>charge_memcg (3,346,299,609 samples, 5.76%)</title><rect x="38.4209%" y="1717" width="5.7560%" height="15" fill="rgb(235,192,0)" fg:x="22336276919" fg:w="3346299609"/><text x="38.6709%" y="1727.50">charge_..</text></g><g><title>try_charge_memcg (3,318,232,341 samples, 5.71%)</title><rect x="38.4692%" y="1701" width="5.7077%" height="15" fill="rgb(235,45,9)" fg:x="22364344187" fg:w="3318232341"/><text x="38.7192%" y="1711.50">try_cha..</text></g><g><title>try_to_free_mem_cgroup_pages (3,284,561,652 samples, 5.65%)</title><rect x="38.5271%" y="1685" width="5.6498%" height="15" fill="rgb(246,42,40)" fg:x="22398014876" fg:w="3284561652"/><text x="38.7771%" y="1695.50">try_to_..</text></g><g><title>do_try_to_free_pages (3,284,561,652 samples, 5.65%)</title><rect x="38.5271%" y="1669" width="5.6498%" height="15" fill="rgb(248,111,24)" fg:x="22398014876" fg:w="3284561652"/><text x="38.7771%" y="1679.50">do_try_..</text></g><g><title>shrink_zones (3,284,561,652 samples, 5.65%)</title><rect x="38.5271%" y="1653" width="5.6498%" height="15" fill="rgb(249,65,22)" fg:x="22398014876" fg:w="3284561652"/><text x="38.7771%" y="1663.50">shrink_..</text></g><g><title>shrink_node (3,284,561,652 samples, 5.65%)</title><rect x="38.5271%" y="1637" width="5.6498%" height="15" fill="rgb(238,111,51)" fg:x="22398014876" fg:w="3284561652"/><text x="38.7771%" y="1647.50">shrink_..</text></g><g><title>lock_acquire (19,965,204 samples, 0.03%)</title><rect x="44.1882%" y="1701" width="0.0343%" height="15" fill="rgb(250,118,22)" fg:x="25689131837" fg:w="19965204"/><text x="44.4382%" y="1711.50"></text></g><g><title>trace_lock_acquire (5,851,139 samples, 0.01%)</title><rect x="44.2125%" y="1685" width="0.0101%" height="15" fill="rgb(234,84,26)" fg:x="25703245902" fg:w="5851139"/><text x="44.4625%" y="1695.50"></text></g><g><title>lock_release (9,025,987 samples, 0.02%)</title><rect x="44.2226%" y="1701" width="0.0155%" height="15" fill="rgb(243,172,12)" fg:x="25709097041" fg:w="9025987"/><text x="44.4726%" y="1711.50"></text></g><g><title>lock_acquire (12,651,028 samples, 0.02%)</title><rect x="44.2421%" y="1685" width="0.0218%" height="15" fill="rgb(236,150,49)" fg:x="25720463306" fg:w="12651028"/><text x="44.4921%" y="1695.50"></text></g><g><title>__lock_acquire (9,273,996 samples, 0.02%)</title><rect x="44.2479%" y="1669" width="0.0160%" height="15" fill="rgb(225,197,26)" fg:x="25723840338" fg:w="9273996"/><text x="44.4979%" y="1679.50"></text></g><g><title>get_mem_cgroup_from_mm (53,995,731 samples, 0.09%)</title><rect x="44.1769%" y="1717" width="0.0929%" height="15" fill="rgb(214,17,42)" fg:x="25682576528" fg:w="53995731"/><text x="44.4269%" y="1727.50"></text></g><g><title>percpu_ref_tryget (17,660,504 samples, 0.03%)</title><rect x="44.2394%" y="1701" width="0.0304%" height="15" fill="rgb(224,165,40)" fg:x="25718911755" fg:w="17660504"/><text x="44.4894%" y="1711.50"></text></g><g><title>__lock_acquire (8,129,312 samples, 0.01%)</title><rect x="44.2771%" y="1701" width="0.0140%" height="15" fill="rgb(246,100,4)" fg:x="25740808385" fg:w="8129312"/><text x="44.5271%" y="1711.50"></text></g><g><title>lock_acquire (14,739,742 samples, 0.03%)</title><rect x="44.2698%" y="1717" width="0.0254%" height="15" fill="rgb(222,103,0)" fg:x="25736572259" fg:w="14739742"/><text x="44.5198%" y="1727.50"></text></g><g><title>__mem_cgroup_charge (3,423,808,046 samples, 5.89%)</title><rect x="38.4186%" y="1733" width="5.8893%" height="15" fill="rgb(227,189,26)" fg:x="22334928472" fg:w="3423808046"/><text x="38.6686%" y="1743.50">__mem_c..</text></g><g><title>lock_release (7,424,517 samples, 0.01%)</title><rect x="44.2952%" y="1717" width="0.0128%" height="15" fill="rgb(214,202,17)" fg:x="25751312001" fg:w="7424517"/><text x="44.5452%" y="1727.50"></text></g><g><title>lock_acquire (13,752,533 samples, 0.02%)</title><rect x="44.3257%" y="1717" width="0.0237%" height="15" fill="rgb(229,111,3)" fg:x="25769076190" fg:w="13752533"/><text x="44.5757%" y="1727.50"></text></g><g><title>__mod_lruvec_page_state (35,687,259 samples, 0.06%)</title><rect x="44.3079%" y="1733" width="0.0614%" height="15" fill="rgb(229,172,15)" fg:x="25758736518" fg:w="35687259"/><text x="44.5579%" y="1743.50"></text></g><g><title>lock_release (11,595,054 samples, 0.02%)</title><rect x="44.3494%" y="1717" width="0.0199%" height="15" fill="rgb(230,224,35)" fg:x="25782828723" fg:w="11595054"/><text x="44.5994%" y="1727.50"></text></g><g><title>_raw_spin_lock_irq (13,948,301 samples, 0.02%)</title><rect x="44.3722%" y="1733" width="0.0240%" height="15" fill="rgb(251,141,6)" fg:x="25796119177" fg:w="13948301"/><text x="44.6222%" y="1743.50"></text></g><g><title>lock_acquire (10,313,470 samples, 0.02%)</title><rect x="44.3785%" y="1717" width="0.0177%" height="15" fill="rgb(225,208,6)" fg:x="25799754008" fg:w="10313470"/><text x="44.6285%" y="1727.50"></text></g><g><title>_raw_spin_unlock_irq (11,042,497 samples, 0.02%)</title><rect x="44.3962%" y="1733" width="0.0190%" height="15" fill="rgb(246,181,16)" fg:x="25810067478" fg:w="11042497"/><text x="44.6462%" y="1743.50"></text></g><g><title>lock_release (6,788,200 samples, 0.01%)</title><rect x="44.4035%" y="1717" width="0.0117%" height="15" fill="rgb(227,129,36)" fg:x="25814321775" fg:w="6788200"/><text x="44.6535%" y="1727.50"></text></g><g><title>asm_common_interrupt (7,265,575 samples, 0.01%)</title><rect x="44.4152%" y="1733" width="0.0125%" height="15" fill="rgb(248,117,24)" fg:x="25821109975" fg:w="7265575"/><text x="44.6652%" y="1743.50"></text></g><g><title>common_interrupt (7,265,575 samples, 0.01%)</title><rect x="44.4152%" y="1717" width="0.0125%" height="15" fill="rgb(214,185,35)" fg:x="25821109975" fg:w="7265575"/><text x="44.6652%" y="1727.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (9,647,774 samples, 0.02%)</title><rect x="44.4277%" y="1733" width="0.0166%" height="15" fill="rgb(236,150,34)" fg:x="25828375550" fg:w="9647774"/><text x="44.6777%" y="1743.50"></text></g><g><title>sysvec_apic_timer_interrupt (9,647,774 samples, 0.02%)</title><rect x="44.4277%" y="1717" width="0.0166%" height="15" fill="rgb(243,228,27)" fg:x="25828375550" fg:w="9647774"/><text x="44.6777%" y="1727.50"></text></g><g><title>lock_acquire (15,380,836 samples, 0.03%)</title><rect x="44.6358%" y="1653" width="0.0265%" height="15" fill="rgb(245,77,44)" fg:x="25949367778" fg:w="15380836"/><text x="44.8858%" y="1663.50"></text></g><g><title>get_partial_node (46,364,719 samples, 0.08%)</title><rect x="44.5852%" y="1685" width="0.0798%" height="15" fill="rgb(235,214,42)" fg:x="25919912561" fg:w="46364719"/><text x="44.8352%" y="1695.50"></text></g><g><title>put_cpu_partial (16,909,502 samples, 0.03%)</title><rect x="44.6358%" y="1669" width="0.0291%" height="15" fill="rgb(221,74,3)" fg:x="25949367778" fg:w="16909502"/><text x="44.8858%" y="1679.50"></text></g><g><title>__lock_acquire (9,207,204 samples, 0.02%)</title><rect x="44.6785%" y="1669" width="0.0158%" height="15" fill="rgb(206,121,29)" fg:x="25974165827" fg:w="9207204"/><text x="44.9285%" y="1679.50"></text></g><g><title>lock_acquire (19,806,171 samples, 0.03%)</title><rect x="44.6649%" y="1685" width="0.0341%" height="15" fill="rgb(249,131,53)" fg:x="25966277280" fg:w="19806171"/><text x="44.9149%" y="1695.50"></text></g><g><title>lock_is_held_type (6,095,194 samples, 0.01%)</title><rect x="44.6990%" y="1685" width="0.0105%" height="15" fill="rgb(236,170,29)" fg:x="25986083451" fg:w="6095194"/><text x="44.9490%" y="1695.50"></text></g><g><title>___slab_alloc (115,267,998 samples, 0.20%)</title><rect x="44.5269%" y="1701" width="0.1983%" height="15" fill="rgb(247,96,15)" fg:x="25886008470" fg:w="115267998"/><text x="44.7769%" y="1711.50"></text></g><g><title>lock_release (9,097,823 samples, 0.02%)</title><rect x="44.7095%" y="1685" width="0.0156%" height="15" fill="rgb(211,210,7)" fg:x="25992178645" fg:w="9097823"/><text x="44.9595%" y="1695.50"></text></g><g><title>__lock_acquire (35,218,702 samples, 0.06%)</title><rect x="44.7709%" y="1669" width="0.0606%" height="15" fill="rgb(240,88,50)" fg:x="26027859898" fg:w="35218702"/><text x="45.0209%" y="1679.50"></text></g><g><title>lock_acquire (67,575,767 samples, 0.12%)</title><rect x="44.7336%" y="1685" width="0.1162%" height="15" fill="rgb(209,229,26)" fg:x="26006218184" fg:w="67575767"/><text x="44.9836%" y="1695.50"></text></g><g><title>trace_lock_acquire (10,715,351 samples, 0.02%)</title><rect x="44.8314%" y="1669" width="0.0184%" height="15" fill="rgb(210,68,23)" fg:x="26063078600" fg:w="10715351"/><text x="45.0814%" y="1679.50"></text></g><g><title>fs_reclaim_acquire (75,511,639 samples, 0.13%)</title><rect x="44.7279%" y="1701" width="0.1299%" height="15" fill="rgb(229,180,13)" fg:x="26002867168" fg:w="75511639"/><text x="44.9779%" y="1711.50"></text></g><g><title>fs_reclaim_release (10,557,274 samples, 0.02%)</title><rect x="44.8578%" y="1701" width="0.0182%" height="15" fill="rgb(236,53,44)" fg:x="26078378807" fg:w="10557274"/><text x="45.1078%" y="1711.50"></text></g><g><title>lock_release (9,932,053 samples, 0.02%)</title><rect x="44.8588%" y="1685" width="0.0171%" height="15" fill="rgb(244,214,29)" fg:x="26079004028" fg:w="9932053"/><text x="45.1088%" y="1695.50"></text></g><g><title>__kmem_cache_alloc_node (245,823,147 samples, 0.42%)</title><rect x="44.4621%" y="1717" width="0.4228%" height="15" fill="rgb(220,75,29)" fg:x="25848349128" fg:w="245823147"/><text x="44.7121%" y="1727.50"></text></g><g><title>kmalloc_trace (254,362,362 samples, 0.44%)</title><rect x="44.4572%" y="1733" width="0.4375%" height="15" fill="rgb(214,183,37)" fg:x="25845541110" fg:w="254362362"/><text x="44.7072%" y="1743.50"></text></g><g><title>__lock_acquire (33,829,132 samples, 0.06%)</title><rect x="45.0678%" y="1685" width="0.0582%" height="15" fill="rgb(239,117,29)" fg:x="26200460329" fg:w="33829132"/><text x="45.3178%" y="1695.50"></text></g><g><title>lock_acquire (42,250,258 samples, 0.07%)</title><rect x="45.0596%" y="1701" width="0.0727%" height="15" fill="rgb(237,171,35)" fg:x="26195713479" fg:w="42250258"/><text x="45.3096%" y="1711.50"></text></g><g><title>_raw_spin_lock (47,466,495 samples, 0.08%)</title><rect x="45.0569%" y="1717" width="0.0816%" height="15" fill="rgb(229,178,53)" fg:x="26194125410" fg:w="47466495"/><text x="45.3069%" y="1727.50"></text></g><g><title>lock_acquire (10,061,799 samples, 0.02%)</title><rect x="45.2992%" y="1621" width="0.0173%" height="15" fill="rgb(210,102,19)" fg:x="26335028334" fg:w="10061799"/><text x="45.5492%" y="1631.50"></text></g><g><title>get_partial_node (34,300,257 samples, 0.06%)</title><rect x="45.2621%" y="1653" width="0.0590%" height="15" fill="rgb(235,127,22)" fg:x="26313462062" fg:w="34300257"/><text x="45.5121%" y="1663.50"></text></g><g><title>put_cpu_partial (13,315,883 samples, 0.02%)</title><rect x="45.2982%" y="1637" width="0.0229%" height="15" fill="rgb(244,31,31)" fg:x="26334446436" fg:w="13315883"/><text x="45.5482%" y="1647.50"></text></g><g><title>__lock_acquire (7,698,637 samples, 0.01%)</title><rect x="45.3353%" y="1637" width="0.0132%" height="15" fill="rgb(231,43,21)" fg:x="26356004356" fg:w="7698637"/><text x="45.5853%" y="1647.50"></text></g><g><title>lock_acquire (16,636,757 samples, 0.03%)</title><rect x="45.3246%" y="1653" width="0.0286%" height="15" fill="rgb(217,131,35)" fg:x="26349773296" fg:w="16636757"/><text x="45.5746%" y="1663.50"></text></g><g><title>lock_is_held_type (6,581,017 samples, 0.01%)</title><rect x="45.3532%" y="1653" width="0.0113%" height="15" fill="rgb(221,149,4)" fg:x="26366410053" fg:w="6581017"/><text x="45.6032%" y="1663.50"></text></g><g><title>___slab_alloc (99,793,671 samples, 0.17%)</title><rect x="45.2055%" y="1669" width="0.1717%" height="15" fill="rgb(232,170,28)" fg:x="26280526686" fg:w="99793671"/><text x="45.4555%" y="1679.50"></text></g><g><title>__lock_acquire (16,218,579 samples, 0.03%)</title><rect x="45.4038%" y="1637" width="0.0279%" height="15" fill="rgb(238,56,10)" fg:x="26395848410" fg:w="16218579"/><text x="45.6538%" y="1647.50"></text></g><g><title>lock_acquire (38,820,009 samples, 0.07%)</title><rect x="45.3817%" y="1653" width="0.0668%" height="15" fill="rgb(235,196,14)" fg:x="26382982994" fg:w="38820009"/><text x="45.6317%" y="1663.50"></text></g><g><title>trace_lock_acquire (9,736,014 samples, 0.02%)</title><rect x="45.4317%" y="1637" width="0.0167%" height="15" fill="rgb(216,45,48)" fg:x="26412066989" fg:w="9736014"/><text x="45.6817%" y="1647.50"></text></g><g><title>fs_reclaim_acquire (52,447,507 samples, 0.09%)</title><rect x="45.3771%" y="1669" width="0.0902%" height="15" fill="rgb(238,213,17)" fg:x="26380320357" fg:w="52447507"/><text x="45.6271%" y="1679.50"></text></g><g><title>lock_release (10,964,861 samples, 0.02%)</title><rect x="45.4485%" y="1653" width="0.0189%" height="15" fill="rgb(212,13,2)" fg:x="26421803003" fg:w="10964861"/><text x="45.6985%" y="1663.50"></text></g><g><title>trace_lock_release (6,643,516 samples, 0.01%)</title><rect x="45.4559%" y="1637" width="0.0114%" height="15" fill="rgb(240,114,20)" fg:x="26426124348" fg:w="6643516"/><text x="45.7059%" y="1647.50"></text></g><g><title>fs_reclaim_release (10,153,771 samples, 0.02%)</title><rect x="45.4673%" y="1669" width="0.0175%" height="15" fill="rgb(228,41,40)" fg:x="26432767864" fg:w="10153771"/><text x="45.7173%" y="1679.50"></text></g><g><title>lock_release (9,475,273 samples, 0.02%)</title><rect x="45.4685%" y="1653" width="0.0163%" height="15" fill="rgb(244,132,35)" fg:x="26433446362" fg:w="9475273"/><text x="45.7185%" y="1663.50"></text></g><g><title>__kmem_cache_alloc_node (194,392,009 samples, 0.33%)</title><rect x="45.1553%" y="1685" width="0.3344%" height="15" fill="rgb(253,189,4)" fg:x="26251341288" fg:w="194392009"/><text x="45.4053%" y="1695.50"></text></g><g><title>cache_ext_list_node_alloc (205,569,344 samples, 0.35%)</title><rect x="45.1432%" y="1717" width="0.3536%" height="15" fill="rgb(224,37,19)" fg:x="26244351839" fg:w="205569344"/><text x="45.3932%" y="1727.50"></text></g><g><title>kmalloc_trace (204,963,239 samples, 0.35%)</title><rect x="45.1443%" y="1701" width="0.3526%" height="15" fill="rgb(235,223,18)" fg:x="26244957944" fg:w="204963239"/><text x="45.3943%" y="1711.50"></text></g><g><title>valid_folios_add (350,780,091 samples, 0.60%)</title><rect x="44.8958%" y="1733" width="0.6034%" height="15" fill="rgb(235,163,25)" fg:x="26100491571" fg:w="350780091"/><text x="45.1458%" y="1743.50"></text></g><g><title>__lock_acquire (6,659,610 samples, 0.01%)</title><rect x="45.5338%" y="1701" width="0.0115%" height="15" fill="rgb(217,145,28)" fg:x="26471410697" fg:w="6659610"/><text x="45.7838%" y="1711.50"></text></g><g><title>lock_acquire (19,385,247 samples, 0.03%)</title><rect x="45.5197%" y="1717" width="0.0333%" height="15" fill="rgb(223,223,32)" fg:x="26463222669" fg:w="19385247"/><text x="45.7697%" y="1727.50"></text></g><g><title>lock_release (14,212,752 samples, 0.02%)</title><rect x="45.5531%" y="1717" width="0.0244%" height="15" fill="rgb(227,189,39)" fg:x="26482607916" fg:w="14212752"/><text x="45.8031%" y="1727.50"></text></g><g><title>xa_get_order (45,653,411 samples, 0.08%)</title><rect x="45.5089%" y="1733" width="0.0785%" height="15" fill="rgb(248,10,22)" fg:x="26456910771" fg:w="45653411"/><text x="45.7589%" y="1743.50"></text></g><g><title>xas_find_conflict (7,655,511 samples, 0.01%)</title><rect x="45.5874%" y="1733" width="0.0132%" height="15" fill="rgb(248,46,39)" fg:x="26502564182" fg:w="7655511"/><text x="45.8374%" y="1743.50"></text></g><g><title>workingset_update_node (16,559,450 samples, 0.03%)</title><rect x="45.6174%" y="1717" width="0.0285%" height="15" fill="rgb(248,113,48)" fg:x="26520030509" fg:w="16559450"/><text x="45.8674%" y="1727.50"></text></g><g><title>lock_is_held_type (11,714,075 samples, 0.02%)</title><rect x="45.6258%" y="1701" width="0.0201%" height="15" fill="rgb(245,16,25)" fg:x="26524875884" fg:w="11714075"/><text x="45.8758%" y="1711.50"></text></g><g><title>__filemap_add_folio (4,219,207,759 samples, 7.26%)</title><rect x="38.3894%" y="1749" width="7.2575%" height="15" fill="rgb(249,152,16)" fg:x="22317971146" fg:w="4219207759"/><text x="38.6394%" y="1759.50">__filemap_..</text></g><g><title>xas_store (24,455,888 samples, 0.04%)</title><rect x="45.6049%" y="1733" width="0.0421%" height="15" fill="rgb(250,16,1)" fg:x="26512723017" fg:w="24455888"/><text x="45.8549%" y="1743.50"></text></g><g><title>clear_page_rep (193,852,108 samples, 0.33%)</title><rect x="45.6739%" y="1669" width="0.3334%" height="15" fill="rgb(249,138,3)" fg:x="26552848905" fg:w="193852108"/><text x="45.9239%" y="1679.50"></text></g><g><title>node_dirty_ok (14,620,612 samples, 0.03%)</title><rect x="46.0073%" y="1669" width="0.0251%" height="15" fill="rgb(227,71,41)" fg:x="26746701013" fg:w="14620612"/><text x="46.2573%" y="1679.50"></text></g><g><title>__rmqueue_pcplist (16,266,597 samples, 0.03%)</title><rect x="46.0475%" y="1637" width="0.0280%" height="15" fill="rgb(209,184,23)" fg:x="26770059386" fg:w="16266597"/><text x="46.2975%" y="1647.50"></text></g><g><title>__lock_acquire (11,271,858 samples, 0.02%)</title><rect x="46.0944%" y="1605" width="0.0194%" height="15" fill="rgb(223,215,31)" fg:x="26797283643" fg:w="11271858"/><text x="46.3444%" y="1615.50"></text></g><g><title>_raw_spin_trylock (26,344,303 samples, 0.05%)</title><rect x="46.0755%" y="1637" width="0.0453%" height="15" fill="rgb(210,146,28)" fg:x="26786325983" fg:w="26344303"/><text x="46.3255%" y="1647.50"></text></g><g><title>lock_acquire (20,410,614 samples, 0.04%)</title><rect x="46.0857%" y="1621" width="0.0351%" height="15" fill="rgb(209,183,41)" fg:x="26792259672" fg:w="20410614"/><text x="46.3357%" y="1631.50"></text></g><g><title>_raw_spin_unlock (32,419,006 samples, 0.06%)</title><rect x="46.1208%" y="1637" width="0.0558%" height="15" fill="rgb(209,224,45)" fg:x="26812670286" fg:w="32419006"/><text x="46.3708%" y="1647.50"></text></g><g><title>lock_release (29,070,398 samples, 0.05%)</title><rect x="46.1266%" y="1621" width="0.0500%" height="15" fill="rgb(224,209,51)" fg:x="26816018894" fg:w="29070398"/><text x="46.3766%" y="1631.50"></text></g><g><title>rmqueue (84,494,933 samples, 0.15%)</title><rect x="46.0374%" y="1669" width="0.1453%" height="15" fill="rgb(223,17,39)" fg:x="26764157292" fg:w="84494933"/><text x="46.2874%" y="1679.50"></text></g><g><title>rmqueue_pcplist (81,166,617 samples, 0.14%)</title><rect x="46.0431%" y="1653" width="0.1396%" height="15" fill="rgb(234,204,37)" fg:x="26767485608" fg:w="81166617"/><text x="46.2931%" y="1663.50"></text></g><g><title>get_page_from_freelist (301,755,943 samples, 0.52%)</title><rect x="45.6685%" y="1685" width="0.5191%" height="15" fill="rgb(236,120,5)" fg:x="26549730732" fg:w="301755943"/><text x="45.9185%" y="1695.50"></text></g><g><title>__lock_acquire (19,400,292 samples, 0.03%)</title><rect x="46.2336%" y="1637" width="0.0334%" height="15" fill="rgb(248,97,27)" fg:x="26878244120" fg:w="19400292"/><text x="46.4836%" y="1647.50"></text></g><g><title>lock_acquire (45,177,497 samples, 0.08%)</title><rect x="46.2029%" y="1653" width="0.0777%" height="15" fill="rgb(240,66,17)" fg:x="26860413464" fg:w="45177497"/><text x="46.4529%" y="1663.50"></text></g><g><title>trace_lock_acquire (7,946,549 samples, 0.01%)</title><rect x="46.2670%" y="1637" width="0.0137%" height="15" fill="rgb(210,79,3)" fg:x="26897644412" fg:w="7946549"/><text x="46.5170%" y="1647.50"></text></g><g><title>fs_reclaim_acquire (58,841,354 samples, 0.10%)</title><rect x="46.1995%" y="1669" width="0.1012%" height="15" fill="rgb(214,176,27)" fg:x="26858435193" fg:w="58841354"/><text x="46.4495%" y="1679.50"></text></g><g><title>lock_release (11,685,586 samples, 0.02%)</title><rect x="46.2807%" y="1653" width="0.0201%" height="15" fill="rgb(235,185,3)" fg:x="26905590961" fg:w="11685586"/><text x="46.5307%" y="1663.50"></text></g><g><title>prepare_alloc_pages (70,623,673 samples, 0.12%)</title><rect x="46.1876%" y="1685" width="0.1215%" height="15" fill="rgb(227,24,12)" fg:x="26851486675" fg:w="70623673"/><text x="46.4376%" y="1695.50"></text></g><g><title>filemap_alloc_folio (380,450,114 samples, 0.65%)</title><rect x="45.6557%" y="1749" width="0.6544%" height="15" fill="rgb(252,169,48)" fg:x="26542285732" fg:w="380450114"/><text x="45.9057%" y="1759.50"></text></g><g><title>folio_alloc (380,450,114 samples, 0.65%)</title><rect x="45.6557%" y="1733" width="0.6544%" height="15" fill="rgb(212,65,1)" fg:x="26542285732" fg:w="380450114"/><text x="45.9057%" y="1743.50"></text></g><g><title>alloc_pages (380,161,701 samples, 0.65%)</title><rect x="45.6562%" y="1717" width="0.6539%" height="15" fill="rgb(242,39,24)" fg:x="26542574145" fg:w="380161701"/><text x="45.9062%" y="1727.50"></text></g><g><title>__alloc_pages (378,672,409 samples, 0.65%)</title><rect x="45.6588%" y="1701" width="0.6514%" height="15" fill="rgb(249,32,23)" fg:x="26544063437" fg:w="378672409"/><text x="45.9088%" y="1711.50"></text></g><g><title>__lock_acquire (14,109,086 samples, 0.02%)</title><rect x="46.3470%" y="1717" width="0.0243%" height="15" fill="rgb(251,195,23)" fg:x="26944184858" fg:w="14109086"/><text x="46.5970%" y="1727.50"></text></g><g><title>lock_acquire (28,742,535 samples, 0.05%)</title><rect x="46.3318%" y="1733" width="0.0494%" height="15" fill="rgb(236,174,8)" fg:x="26935314269" fg:w="28742535"/><text x="46.5818%" y="1743.50"></text></g><g><title>lock_release (8,811,625 samples, 0.02%)</title><rect x="46.3812%" y="1733" width="0.0152%" height="15" fill="rgb(220,197,8)" fg:x="26964056804" fg:w="8811625"/><text x="46.6312%" y="1743.50"></text></g><g><title>filemap_get_entry (59,006,734 samples, 0.10%)</title><rect x="46.3101%" y="1749" width="0.1015%" height="15" fill="rgb(240,108,37)" fg:x="26922735846" fg:w="59006734"/><text x="46.5601%" y="1759.50"></text></g><g><title>xas_load (8,874,151 samples, 0.02%)</title><rect x="46.3964%" y="1733" width="0.0153%" height="15" fill="rgb(232,176,24)" fg:x="26972868429" fg:w="8874151"/><text x="46.6464%" y="1743.50"></text></g><g><title>folio_lruvec_lock_irqsave (9,265,885 samples, 0.02%)</title><rect x="46.4273%" y="1717" width="0.0159%" height="15" fill="rgb(243,35,29)" fg:x="26990861214" fg:w="9265885"/><text x="46.6773%" y="1727.50"></text></g><g><title>_raw_spin_lock_irqsave (9,265,885 samples, 0.02%)</title><rect x="46.4273%" y="1701" width="0.0159%" height="15" fill="rgb(210,37,18)" fg:x="26990861214" fg:w="9265885"/><text x="46.6773%" y="1711.50"></text></g><g><title>__mod_lruvec_state (8,171,358 samples, 0.01%)</title><rect x="46.4589%" y="1701" width="0.0141%" height="15" fill="rgb(224,184,40)" fg:x="27009216241" fg:w="8171358"/><text x="46.7089%" y="1711.50"></text></g><g><title>__lock_acquire (13,605,768 samples, 0.02%)</title><rect x="46.4793%" y="1685" width="0.0234%" height="15" fill="rgb(236,39,29)" fg:x="27021072751" fg:w="13605768"/><text x="46.7293%" y="1695.50"></text></g><g><title>lock_acquire (19,450,681 samples, 0.03%)</title><rect x="46.4755%" y="1701" width="0.0335%" height="15" fill="rgb(232,48,39)" fg:x="27018892673" fg:w="19450681"/><text x="46.7255%" y="1711.50"></text></g><g><title>lock_is_held_type (8,889,838 samples, 0.02%)</title><rect x="46.5090%" y="1701" width="0.0153%" height="15" fill="rgb(236,34,42)" fg:x="27038343354" fg:w="8889838"/><text x="46.7590%" y="1711.50"></text></g><g><title>lru_add_fn (58,092,689 samples, 0.10%)</title><rect x="46.4441%" y="1717" width="0.0999%" height="15" fill="rgb(243,106,37)" fg:x="27000616378" fg:w="58092689"/><text x="46.6941%" y="1727.50"></text></g><g><title>folio_batch_move_lru (81,544,163 samples, 0.14%)</title><rect x="46.4150%" y="1733" width="0.1403%" height="15" fill="rgb(218,96,6)" fg:x="26983674227" fg:w="81544163"/><text x="46.6650%" y="1743.50"></text></g><g><title>release_pages (6,509,323 samples, 0.01%)</title><rect x="46.5440%" y="1717" width="0.0112%" height="15" fill="rgb(235,130,12)" fg:x="27058709067" fg:w="6509323"/><text x="46.7940%" y="1727.50"></text></g><g><title>__lock_acquire (18,151,147 samples, 0.03%)</title><rect x="46.5607%" y="1717" width="0.0312%" height="15" fill="rgb(231,95,0)" fg:x="27068386477" fg:w="18151147"/><text x="46.8107%" y="1727.50"></text></g><g><title>lock_acquire (22,791,375 samples, 0.04%)</title><rect x="46.5552%" y="1733" width="0.0392%" height="15" fill="rgb(228,12,23)" fg:x="27065218390" fg:w="22791375"/><text x="46.8052%" y="1743.50"></text></g><g><title>lock_release (11,252,543 samples, 0.02%)</title><rect x="46.5944%" y="1733" width="0.0194%" height="15" fill="rgb(216,12,1)" fg:x="27088009765" fg:w="11252543"/><text x="46.8444%" y="1743.50"></text></g><g><title>folio_add_lru (118,445,974 samples, 0.20%)</title><rect x="46.4116%" y="1749" width="0.2037%" height="15" fill="rgb(219,59,3)" fg:x="26981742580" fg:w="118445974"/><text x="46.6616%" y="1759.50"></text></g><g><title>__filemap_get_folio (4,793,060,990 samples, 8.24%)</title><rect x="38.3793%" y="1765" width="8.2446%" height="15" fill="rgb(215,208,46)" fg:x="22312097057" fg:w="4793060990"/><text x="38.6293%" y="1775.50">__filemap_g..</text></g><g><title>pick_next_task (6,770,589 samples, 0.01%)</title><rect x="46.6635%" y="1637" width="0.0116%" height="15" fill="rgb(254,224,29)" fg:x="27128163021" fg:w="6770589"/><text x="46.9135%" y="1647.50"></text></g><g><title>pick_next_task_fair (6,770,589 samples, 0.01%)</title><rect x="46.6635%" y="1621" width="0.0116%" height="15" fill="rgb(232,14,29)" fg:x="27128163021" fg:w="6770589"/><text x="46.9135%" y="1631.50"></text></g><g><title>__sched_text_start (13,038,529 samples, 0.02%)</title><rect x="46.6588%" y="1653" width="0.0224%" height="15" fill="rgb(208,45,52)" fg:x="27125429931" fg:w="13038529"/><text x="46.9088%" y="1663.50"></text></g><g><title>__wait_on_bit (14,124,339 samples, 0.02%)</title><rect x="46.6577%" y="1717" width="0.0243%" height="15" fill="rgb(234,191,28)" fg:x="27124799286" fg:w="14124339"/><text x="46.9077%" y="1727.50"></text></g><g><title>bit_wait_io (13,493,694 samples, 0.02%)</title><rect x="46.6588%" y="1701" width="0.0232%" height="15" fill="rgb(244,67,43)" fg:x="27125429931" fg:w="13493694"/><text x="46.9088%" y="1711.50"></text></g><g><title>io_schedule (13,493,694 samples, 0.02%)</title><rect x="46.6588%" y="1685" width="0.0232%" height="15" fill="rgb(236,189,24)" fg:x="27125429931" fg:w="13493694"/><text x="46.9088%" y="1695.50"></text></g><g><title>schedule (13,493,694 samples, 0.02%)</title><rect x="46.6588%" y="1669" width="0.0232%" height="15" fill="rgb(239,214,33)" fg:x="27125429931" fg:w="13493694"/><text x="46.9088%" y="1679.50"></text></g><g><title>__wait_on_buffer (15,014,346 samples, 0.03%)</title><rect x="46.6577%" y="1749" width="0.0258%" height="15" fill="rgb(226,176,41)" fg:x="27124799286" fg:w="15014346"/><text x="46.9077%" y="1759.50"></text></g><g><title>out_of_line_wait_on_bit (15,014,346 samples, 0.03%)</title><rect x="46.6577%" y="1733" width="0.0258%" height="15" fill="rgb(248,47,8)" fg:x="27124799286" fg:w="15014346"/><text x="46.9077%" y="1743.50"></text></g><g><title>__lock_acquire (7,338,036 samples, 0.01%)</title><rect x="46.7303%" y="1685" width="0.0126%" height="15" fill="rgb(218,81,44)" fg:x="27166979042" fg:w="7338036"/><text x="46.9803%" y="1695.50"></text></g><g><title>lock_acquire (24,688,581 samples, 0.04%)</title><rect x="46.7080%" y="1701" width="0.0425%" height="15" fill="rgb(213,98,6)" fg:x="27154050342" fg:w="24688581"/><text x="46.9580%" y="1711.50"></text></g><g><title>_raw_spin_lock (28,246,390 samples, 0.05%)</title><rect x="46.7045%" y="1717" width="0.0486%" height="15" fill="rgb(222,85,22)" fg:x="27151982987" fg:w="28246390"/><text x="46.9545%" y="1727.50"></text></g><g><title>debug_check_no_locks_freed (10,592,234 samples, 0.02%)</title><rect x="46.7838%" y="1669" width="0.0182%" height="15" fill="rgb(239,46,39)" fg:x="27198091720" fg:w="10592234"/><text x="47.0338%" y="1679.50"></text></g><g><title>__raw_spin_lock_init (18,251,692 samples, 0.03%)</title><rect x="46.7769%" y="1685" width="0.0314%" height="15" fill="rgb(237,12,29)" fg:x="27194087502" fg:w="18251692"/><text x="47.0269%" y="1695.50"></text></g><g><title>get_partial_node (15,249,054 samples, 0.03%)</title><rect x="46.8587%" y="1653" width="0.0262%" height="15" fill="rgb(214,77,8)" fg:x="27241656999" fg:w="15249054"/><text x="47.1087%" y="1663.50"></text></g><g><title>___slab_alloc (30,656,525 samples, 0.05%)</title><rect x="46.8461%" y="1669" width="0.0527%" height="15" fill="rgb(217,168,37)" fg:x="27234310371" fg:w="30656525"/><text x="47.0961%" y="1679.50"></text></g><g><title>__lock_acquire (7,307,910 samples, 0.01%)</title><rect x="46.9105%" y="1637" width="0.0126%" height="15" fill="rgb(221,217,23)" fg:x="27271764138" fg:w="7307910"/><text x="47.1605%" y="1647.50"></text></g><g><title>lock_acquire (14,283,409 samples, 0.02%)</title><rect x="46.9035%" y="1653" width="0.0246%" height="15" fill="rgb(243,229,36)" fg:x="27267678006" fg:w="14283409"/><text x="47.1535%" y="1663.50"></text></g><g><title>fs_reclaim_acquire (23,937,958 samples, 0.04%)</title><rect x="46.9002%" y="1669" width="0.0412%" height="15" fill="rgb(251,163,40)" fg:x="27265772665" fg:w="23937958"/><text x="47.1502%" y="1679.50"></text></g><g><title>lock_release (7,749,208 samples, 0.01%)</title><rect x="46.9281%" y="1653" width="0.0133%" height="15" fill="rgb(237,222,12)" fg:x="27281961415" fg:w="7749208"/><text x="47.1781%" y="1663.50"></text></g><g><title>__lock_acquire (13,757,511 samples, 0.02%)</title><rect x="47.0121%" y="1637" width="0.0237%" height="15" fill="rgb(248,132,6)" fg:x="27330805248" fg:w="13757511"/><text x="47.2621%" y="1647.50"></text></g><g><title>lock_acquire (39,382,688 samples, 0.07%)</title><rect x="46.9769%" y="1653" width="0.0677%" height="15" fill="rgb(227,167,50)" fg:x="27310334500" fg:w="39382688"/><text x="47.2269%" y="1663.50"></text></g><g><title>lock_release (14,838,315 samples, 0.03%)</title><rect x="47.0446%" y="1653" width="0.0255%" height="15" fill="rgb(242,84,37)" fg:x="27349717188" fg:w="14838315"/><text x="47.2946%" y="1663.50"></text></g><g><title>__lock_acquire (37,078,546 samples, 0.06%)</title><rect x="47.0934%" y="1621" width="0.0638%" height="15" fill="rgb(212,4,50)" fg:x="27378074951" fg:w="37078546"/><text x="47.3434%" y="1631.50"></text></g><g><title>lock_acquire (46,220,162 samples, 0.08%)</title><rect x="47.0822%" y="1637" width="0.0795%" height="15" fill="rgb(230,228,32)" fg:x="27371592554" fg:w="46220162"/><text x="47.3322%" y="1647.50"></text></g><g><title>lock_release (9,965,016 samples, 0.02%)</title><rect x="47.1617%" y="1637" width="0.0171%" height="15" fill="rgb(248,217,23)" fg:x="27417812716" fg:w="9965016"/><text x="47.4117%" y="1647.50"></text></g><g><title>mod_objcg_state (65,817,963 samples, 0.11%)</title><rect x="47.0715%" y="1653" width="0.1132%" height="15" fill="rgb(238,197,32)" fg:x="27365341044" fg:w="65817963"/><text x="47.3215%" y="1663.50"></text></g><g><title>memcg_slab_post_alloc_hook (168,560,671 samples, 0.29%)</title><rect x="46.9438%" y="1669" width="0.2899%" height="15" fill="rgb(236,106,1)" fg:x="27291101174" fg:w="168560671"/><text x="47.1938%" y="1679.50"></text></g><g><title>trace_lock_acquire (28,502,838 samples, 0.05%)</title><rect x="47.1847%" y="1653" width="0.0490%" height="15" fill="rgb(219,228,13)" fg:x="27431159007" fg:w="28502838"/><text x="47.4347%" y="1663.50"></text></g><g><title>lock_acquire (11,950,350 samples, 0.02%)</title><rect x="47.2398%" y="1637" width="0.0206%" height="15" fill="rgb(238,30,35)" fg:x="27463204552" fg:w="11950350"/><text x="47.4898%" y="1647.50"></text></g><g><title>lock_release (6,716,613 samples, 0.01%)</title><rect x="47.2604%" y="1637" width="0.0116%" height="15" fill="rgb(236,70,23)" fg:x="27475154902" fg:w="6716613"/><text x="47.5104%" y="1647.50"></text></g><g><title>__lock_acquire (11,366,838 samples, 0.02%)</title><rect x="47.3031%" y="1605" width="0.0196%" height="15" fill="rgb(249,104,48)" fg:x="27500006671" fg:w="11366838"/><text x="47.5531%" y="1615.50"></text></g><g><title>lock_acquire (20,061,117 samples, 0.03%)</title><rect x="47.2946%" y="1621" width="0.0345%" height="15" fill="rgb(254,117,50)" fg:x="27495073697" fg:w="20061117"/><text x="47.5446%" y="1631.50"></text></g><g><title>lock_release (6,714,579 samples, 0.01%)</title><rect x="47.3291%" y="1621" width="0.0115%" height="15" fill="rgb(223,152,4)" fg:x="27515134814" fg:w="6714579"/><text x="47.5791%" y="1631.50"></text></g><g><title>get_obj_cgroup_from_current (61,913,991 samples, 0.11%)</title><rect x="47.2350%" y="1653" width="0.1065%" height="15" fill="rgb(245,6,2)" fg:x="27460427780" fg:w="61913991"/><text x="47.4850%" y="1663.50"></text></g><g><title>percpu_ref_tryget (39,694,345 samples, 0.07%)</title><rect x="47.2733%" y="1637" width="0.0683%" height="15" fill="rgb(249,150,24)" fg:x="27482647426" fg:w="39694345"/><text x="47.5233%" y="1647.50"></text></g><g><title>__lock_acquire (7,065,274 samples, 0.01%)</title><rect x="47.3549%" y="1621" width="0.0122%" height="15" fill="rgb(228,185,42)" fg:x="27530096769" fg:w="7065274"/><text x="47.6049%" y="1631.50"></text></g><g><title>lock_acquire (13,944,219 samples, 0.02%)</title><rect x="47.3465%" y="1637" width="0.0240%" height="15" fill="rgb(226,39,33)" fg:x="27525245120" fg:w="13944219"/><text x="47.5965%" y="1647.50"></text></g><g><title>page_cache_ext_isolate_folio (7,696,443 samples, 0.01%)</title><rect x="47.3919%" y="1477" width="0.0132%" height="15" fill="rgb(221,166,19)" fg:x="27551608320" fg:w="7696443"/><text x="47.6419%" y="1487.50"></text></g><g><title>do_raw_write_lock (44,747,932 samples, 0.08%)</title><rect x="47.4293%" y="1349" width="0.0770%" height="15" fill="rgb(209,109,2)" fg:x="27573382346" fg:w="44747932"/><text x="47.6793%" y="1359.50"></text></g><g><title>queued_write_lock_slowpath (44,747,932 samples, 0.08%)</title><rect x="47.4293%" y="1333" width="0.0770%" height="15" fill="rgb(252,216,26)" fg:x="27573382346" fg:w="44747932"/><text x="47.6793%" y="1343.50"></text></g><g><title>native_queued_spin_lock_slowpath (16,709,820 samples, 0.03%)</title><rect x="47.4776%" y="1317" width="0.0287%" height="15" fill="rgb(227,173,36)" fg:x="27601420458" fg:w="16709820"/><text x="47.7276%" y="1327.50"></text></g><g><title>cache_ext_ds_registry_write_lock (50,033,146 samples, 0.09%)</title><rect x="47.4293%" y="1381" width="0.0861%" height="15" fill="rgb(209,90,7)" fg:x="27573382346" fg:w="50033146"/><text x="47.6793%" y="1391.50"></text></g><g><title>_raw_write_lock (50,033,146 samples, 0.09%)</title><rect x="47.4293%" y="1365" width="0.0861%" height="15" fill="rgb(250,194,11)" fg:x="27573382346" fg:w="50033146"/><text x="47.6793%" y="1375.50"></text></g><g><title>valid_folios_del (65,235,904 samples, 0.11%)</title><rect x="47.4206%" y="1397" width="0.1122%" height="15" fill="rgb(220,72,50)" fg:x="27568311844" fg:w="65235904"/><text x="47.6706%" y="1407.50"></text></g><g><title>__filemap_remove_folio (71,475,540 samples, 0.12%)</title><rect x="47.4192%" y="1413" width="0.1229%" height="15" fill="rgb(222,106,48)" fg:x="27567519656" fg:w="71475540"/><text x="47.6692%" y="1423.50"></text></g><g><title>do_raw_spin_lock (22,452,890 samples, 0.04%)</title><rect x="47.5422%" y="1397" width="0.0386%" height="15" fill="rgb(216,220,45)" fg:x="27638995196" fg:w="22452890"/><text x="47.7922%" y="1407.50"></text></g><g><title>native_queued_spin_lock_slowpath (22,452,890 samples, 0.04%)</title><rect x="47.5422%" y="1381" width="0.0386%" height="15" fill="rgb(234,112,18)" fg:x="27638995196" fg:w="22452890"/><text x="47.7922%" y="1391.50"></text></g><g><title>_raw_spin_lock (23,215,639 samples, 0.04%)</title><rect x="47.5422%" y="1413" width="0.0399%" height="15" fill="rgb(206,179,9)" fg:x="27638995196" fg:w="23215639"/><text x="47.7922%" y="1423.50"></text></g><g><title>__remove_mapping (103,264,833 samples, 0.18%)</title><rect x="47.4192%" y="1429" width="0.1776%" height="15" fill="rgb(215,115,40)" fg:x="27567519656" fg:w="103264833"/><text x="47.6692%" y="1439.50"></text></g><g><title>filemap_release_folio (6,567,246 samples, 0.01%)</title><rect x="47.5969%" y="1429" width="0.0113%" height="15" fill="rgb(222,69,34)" fg:x="27670784489" fg:w="6567246"/><text x="47.8469%" y="1439.50"></text></g><g><title>ext4_release_folio (5,859,865 samples, 0.01%)</title><rect x="47.5981%" y="1413" width="0.0101%" height="15" fill="rgb(209,161,10)" fg:x="27671491870" fg:w="5859865"/><text x="47.8481%" y="1423.50"></text></g><g><title>reclaim_pages (124,922,305 samples, 0.21%)</title><rect x="47.4051%" y="1477" width="0.2149%" height="15" fill="rgb(217,6,38)" fg:x="27559304763" fg:w="124922305"/><text x="47.6551%" y="1487.50"></text></g><g><title>reclaim_folio_list (124,922,305 samples, 0.21%)</title><rect x="47.4051%" y="1461" width="0.2149%" height="15" fill="rgb(229,229,48)" fg:x="27559304763" fg:w="124922305"/><text x="47.6551%" y="1471.50"></text></g><g><title>shrink_folio_list (119,641,501 samples, 0.21%)</title><rect x="47.4142%" y="1445" width="0.2058%" height="15" fill="rgb(225,21,28)" fg:x="27564585567" fg:w="119641501"/><text x="47.6642%" y="1455.50"></text></g><g><title>page_cache_ext_isolate_and_reclaim (145,616,607 samples, 0.25%)</title><rect x="47.3905%" y="1509" width="0.2505%" height="15" fill="rgb(206,33,13)" fg:x="27550812156" fg:w="145616607"/><text x="47.6405%" y="1519.50"></text></g><g><title>__page_cache_ext_isolate_and_reclaim (145,616,607 samples, 0.25%)</title><rect x="47.3905%" y="1493" width="0.2505%" height="15" fill="rgb(242,178,17)" fg:x="27550812156" fg:w="145616607"/><text x="47.6405%" y="1503.50"></text></g><g><title>valid_folios_exists_unlocked (12,201,695 samples, 0.02%)</title><rect x="47.6200%" y="1477" width="0.0210%" height="15" fill="rgb(220,162,5)" fg:x="27684227068" fg:w="12201695"/><text x="47.8700%" y="1487.50"></text></g><g><title>__remove_mapping (9,288,613 samples, 0.02%)</title><rect x="47.6423%" y="1461" width="0.0160%" height="15" fill="rgb(210,33,43)" fg:x="27697220098" fg:w="9288613"/><text x="47.8923%" y="1471.50"></text></g><g><title>shrink_lruvec (157,230,635 samples, 0.27%)</title><rect x="47.3905%" y="1525" width="0.2705%" height="15" fill="rgb(216,116,54)" fg:x="27550812156" fg:w="157230635"/><text x="47.6405%" y="1535.50"></text></g><g><title>shrink_list (11,614,028 samples, 0.02%)</title><rect x="47.6410%" y="1509" width="0.0200%" height="15" fill="rgb(249,92,24)" fg:x="27696428763" fg:w="11614028"/><text x="47.8910%" y="1519.50"></text></g><g><title>shrink_inactive_list (11,614,028 samples, 0.02%)</title><rect x="47.6410%" y="1493" width="0.0200%" height="15" fill="rgb(231,189,14)" fg:x="27696428763" fg:w="11614028"/><text x="47.8910%" y="1503.50"></text></g><g><title>shrink_folio_list (10,822,693 samples, 0.02%)</title><rect x="47.6423%" y="1477" width="0.0186%" height="15" fill="rgb(230,8,41)" fg:x="27697220098" fg:w="10822693"/><text x="47.8923%" y="1487.50"></text></g><g><title>obj_cgroup_charge_pages (163,754,495 samples, 0.28%)</title><rect x="47.3806%" y="1637" width="0.2817%" height="15" fill="rgb(249,7,27)" fg:x="27545069119" fg:w="163754495"/><text x="47.6306%" y="1647.50"></text></g><g><title>try_charge_memcg (160,221,050 samples, 0.28%)</title><rect x="47.3867%" y="1621" width="0.2756%" height="15" fill="rgb(232,86,5)" fg:x="27548602564" fg:w="160221050"/><text x="47.6367%" y="1631.50"></text></g><g><title>try_to_free_mem_cgroup_pages (159,322,908 samples, 0.27%)</title><rect x="47.3883%" y="1605" width="0.2741%" height="15" fill="rgb(224,175,18)" fg:x="27549500706" fg:w="159322908"/><text x="47.6383%" y="1615.50"></text></g><g><title>do_try_to_free_pages (159,322,908 samples, 0.27%)</title><rect x="47.3883%" y="1589" width="0.2741%" height="15" fill="rgb(220,129,12)" fg:x="27549500706" fg:w="159322908"/><text x="47.6383%" y="1599.50"></text></g><g><title>shrink_zones (159,322,908 samples, 0.27%)</title><rect x="47.3883%" y="1573" width="0.2741%" height="15" fill="rgb(210,19,36)" fg:x="27549500706" fg:w="159322908"/><text x="47.6383%" y="1583.50"></text></g><g><title>shrink_node (159,322,908 samples, 0.27%)</title><rect x="47.3883%" y="1557" width="0.2741%" height="15" fill="rgb(219,96,14)" fg:x="27549500706" fg:w="159322908"/><text x="47.6383%" y="1567.50"></text></g><g><title>shrink_node_memcgs (158,011,458 samples, 0.27%)</title><rect x="47.3905%" y="1541" width="0.2718%" height="15" fill="rgb(249,106,1)" fg:x="27550812156" fg:w="158011458"/><text x="47.6405%" y="1551.50"></text></g><g><title>memcg_slab_pre_alloc_hook (253,662,773 samples, 0.44%)</title><rect x="47.2337%" y="1669" width="0.4363%" height="15" fill="rgb(249,155,20)" fg:x="27459661845" fg:w="253662773"/><text x="47.4837%" y="1679.50"></text></g><g><title>obj_cgroup_charge (189,644,626 samples, 0.33%)</title><rect x="47.3438%" y="1653" width="0.3262%" height="15" fill="rgb(244,168,9)" fg:x="27523679992" fg:w="189644626"/><text x="47.5938%" y="1663.50"></text></g><g><title>kmem_cache_alloc (504,441,556 samples, 0.87%)</title><rect x="46.8083%" y="1685" width="0.8677%" height="15" fill="rgb(216,23,50)" fg:x="27212339194" fg:w="504441556"/><text x="47.0583%" y="1695.50"></text></g><g><title>alloc_buffer_head (527,073,020 samples, 0.91%)</title><rect x="46.7718%" y="1701" width="0.9066%" height="15" fill="rgb(224,219,20)" fg:x="27191119283" fg:w="527073020"/><text x="47.0218%" y="1711.50"></text></g><g><title>create_empty_buffers (579,138,015 samples, 1.00%)</title><rect x="46.6835%" y="1749" width="0.9962%" height="15" fill="rgb(222,156,15)" fg:x="27139813632" fg:w="579138015"/><text x="46.9335%" y="1759.50"></text></g><g><title>folio_create_empty_buffers (576,442,484 samples, 0.99%)</title><rect x="46.6882%" y="1733" width="0.9915%" height="15" fill="rgb(231,97,17)" fg:x="27142509163" fg:w="576442484"/><text x="46.9382%" y="1743.50"></text></g><g><title>folio_alloc_buffers (534,006,317 samples, 0.92%)</title><rect x="46.7612%" y="1717" width="0.9186%" height="15" fill="rgb(218,70,48)" fg:x="27184945330" fg:w="534006317"/><text x="47.0112%" y="1727.50"></text></g><g><title>__lock_acquire (6,123,371 samples, 0.01%)</title><rect x="47.7229%" y="1685" width="0.0105%" height="15" fill="rgb(212,196,52)" fg:x="27744023988" fg:w="6123371"/><text x="47.9729%" y="1695.50"></text></g><g><title>lock_acquire (14,355,786 samples, 0.02%)</title><rect x="47.7099%" y="1701" width="0.0247%" height="15" fill="rgb(243,203,18)" fg:x="27736503222" fg:w="14355786"/><text x="47.9599%" y="1711.50"></text></g><g><title>_raw_read_lock (18,272,422 samples, 0.03%)</title><rect x="47.7065%" y="1717" width="0.0314%" height="15" fill="rgb(252,125,41)" fg:x="27734494581" fg:w="18272422"/><text x="47.9565%" y="1727.50"></text></g><g><title>_raw_read_unlock (11,310,529 samples, 0.02%)</title><rect x="47.7379%" y="1717" width="0.0195%" height="15" fill="rgb(223,180,33)" fg:x="27752767003" fg:w="11310529"/><text x="47.9879%" y="1727.50"></text></g><g><title>lock_release (9,924,140 samples, 0.02%)</title><rect x="47.7403%" y="1701" width="0.0171%" height="15" fill="rgb(254,159,46)" fg:x="27754153392" fg:w="9924140"/><text x="47.9903%" y="1711.50"></text></g><g><title>percpu_counter_add_batch (11,748,825 samples, 0.02%)</title><rect x="47.7573%" y="1717" width="0.0202%" height="15" fill="rgb(254,38,10)" fg:x="27764077532" fg:w="11748825"/><text x="48.0073%" y="1727.50"></text></g><g><title>ext4_es_lookup_extent (48,947,453 samples, 0.08%)</title><rect x="47.7047%" y="1733" width="0.0842%" height="15" fill="rgb(208,217,32)" fg:x="27733444362" fg:w="48947453"/><text x="47.9547%" y="1743.50"></text></g><g><title>ext4_da_get_block_prep (64,610,320 samples, 0.11%)</title><rect x="47.6797%" y="1749" width="0.1111%" height="15" fill="rgb(221,120,13)" fg:x="27718951647" fg:w="64610320"/><text x="47.9297%" y="1759.50"></text></g><g><title>__queue_delayed_work (11,419,697 samples, 0.02%)</title><rect x="47.8067%" y="1541" width="0.0196%" height="15" fill="rgb(246,54,52)" fg:x="27792752559" fg:w="11419697"/><text x="48.0567%" y="1551.50"></text></g><g><title>__queue_work (11,419,697 samples, 0.02%)</title><rect x="47.8067%" y="1525" width="0.0196%" height="15" fill="rgb(242,34,25)" fg:x="27792752559" fg:w="11419697"/><text x="48.0567%" y="1535.50"></text></g><g><title>kick_pool (8,383,648 samples, 0.01%)</title><rect x="47.8119%" y="1509" width="0.0144%" height="15" fill="rgb(247,209,9)" fg:x="27795788608" fg:w="8383648"/><text x="48.0619%" y="1519.50"></text></g><g><title>wake_up_process (8,383,648 samples, 0.01%)</title><rect x="47.8119%" y="1493" width="0.0144%" height="15" fill="rgb(228,71,26)" fg:x="27795788608" fg:w="8383648"/><text x="48.0619%" y="1503.50"></text></g><g><title>try_to_wake_up (8,383,648 samples, 0.01%)</title><rect x="47.8119%" y="1477" width="0.0144%" height="15" fill="rgb(222,145,49)" fg:x="27795788608" fg:w="8383648"/><text x="48.0619%" y="1487.50"></text></g><g><title>ttwu_queue (7,294,980 samples, 0.01%)</title><rect x="47.8138%" y="1461" width="0.0125%" height="15" fill="rgb(218,121,17)" fg:x="27796877276" fg:w="7294980"/><text x="48.0638%" y="1471.50"></text></g><g><title>blk_mq_delay_run_hw_queue (11,847,473 samples, 0.02%)</title><rect x="47.8067%" y="1589" width="0.0204%" height="15" fill="rgb(244,50,7)" fg:x="27792752559" fg:w="11847473"/><text x="48.0567%" y="1599.50"></text></g><g><title>kblockd_mod_delayed_work_on (11,847,473 samples, 0.02%)</title><rect x="47.8067%" y="1573" width="0.0204%" height="15" fill="rgb(246,229,37)" fg:x="27792752559" fg:w="11847473"/><text x="48.0567%" y="1583.50"></text></g><g><title>mod_delayed_work_on (11,847,473 samples, 0.02%)</title><rect x="47.8067%" y="1557" width="0.0204%" height="15" fill="rgb(225,18,5)" fg:x="27792752559" fg:w="11847473"/><text x="48.0567%" y="1567.50"></text></g><g><title>blk_mq_run_hw_queue (12,532,402 samples, 0.02%)</title><rect x="47.8060%" y="1605" width="0.0216%" height="15" fill="rgb(213,204,8)" fg:x="27792357899" fg:w="12532402"/><text x="48.0560%" y="1615.50"></text></g><g><title>submit_bio (19,542,356 samples, 0.03%)</title><rect x="47.7959%" y="1685" width="0.0336%" height="15" fill="rgb(238,103,6)" fg:x="27786486147" fg:w="19542356"/><text x="48.0459%" y="1695.50"></text></g><g><title>submit_bio_noacct (19,542,356 samples, 0.03%)</title><rect x="47.7959%" y="1669" width="0.0336%" height="15" fill="rgb(222,25,35)" fg:x="27786486147" fg:w="19542356"/><text x="48.0459%" y="1679.50"></text></g><g><title>submit_bio_noacct_nocheck (18,913,788 samples, 0.03%)</title><rect x="47.7970%" y="1653" width="0.0325%" height="15" fill="rgb(213,203,35)" fg:x="27787114715" fg:w="18913788"/><text x="48.0470%" y="1663.50"></text></g><g><title>__submit_bio (18,913,788 samples, 0.03%)</title><rect x="47.7970%" y="1637" width="0.0325%" height="15" fill="rgb(221,79,53)" fg:x="27787114715" fg:w="18913788"/><text x="48.0470%" y="1647.50"></text></g><g><title>blk_mq_submit_bio (18,913,788 samples, 0.03%)</title><rect x="47.7970%" y="1621" width="0.0325%" height="15" fill="rgb(243,200,35)" fg:x="27787114715" fg:w="18913788"/><text x="48.0470%" y="1631.50"></text></g><g><title>ext4_read_bh_lock (23,260,226 samples, 0.04%)</title><rect x="47.7909%" y="1749" width="0.0400%" height="15" fill="rgb(248,60,25)" fg:x="27783561967" fg:w="23260226"/><text x="48.0409%" y="1759.50"></text></g><g><title>ext4_read_bh_nowait (23,260,226 samples, 0.04%)</title><rect x="47.7909%" y="1733" width="0.0400%" height="15" fill="rgb(227,53,46)" fg:x="27783561967" fg:w="23260226"/><text x="48.0409%" y="1743.50"></text></g><g><title>submit_bh (23,260,226 samples, 0.04%)</title><rect x="47.7909%" y="1717" width="0.0400%" height="15" fill="rgb(216,120,32)" fg:x="27783561967" fg:w="23260226"/><text x="48.0409%" y="1727.50"></text></g><g><title>submit_bh_wbc (23,260,226 samples, 0.04%)</title><rect x="47.7909%" y="1701" width="0.0400%" height="15" fill="rgb(220,134,1)" fg:x="27783561967" fg:w="23260226"/><text x="48.0409%" y="1711.50"></text></g><g><title>ext4_block_write_begin (702,288,796 samples, 1.21%)</title><rect x="46.6250%" y="1765" width="1.2080%" height="15" fill="rgb(237,168,5)" fg:x="27105768835" fg:w="702288796"/><text x="46.8750%" y="1775.50"></text></g><g><title>ext4_da_get_block_prep (6,163,725 samples, 0.01%)</title><rect x="47.8330%" y="1765" width="0.0106%" height="15" fill="rgb(231,100,33)" fg:x="27808057631" fg:w="6163725"/><text x="48.0830%" y="1775.50"></text></g><g><title>ext4_da_write_begin (5,512,481,243 samples, 9.48%)</title><rect x="38.3679%" y="1781" width="9.4821%" height="15" fill="rgb(236,177,47)" fg:x="22305458044" fg:w="5512481243"/><text x="38.6179%" y="1791.50">ext4_da_write_..</text></g><g><title>xas_load (5,998,858 samples, 0.01%)</title><rect x="47.8808%" y="1669" width="0.0103%" height="15" fill="rgb(235,7,49)" fg:x="27835838610" fg:w="5998858"/><text x="48.1308%" y="1679.50"></text></g><g><title>__xa_set_mark (9,793,853 samples, 0.02%)</title><rect x="47.8790%" y="1685" width="0.0168%" height="15" fill="rgb(232,119,22)" fg:x="27834792940" fg:w="9793853"/><text x="48.1290%" y="1695.50"></text></g><g><title>__lock_acquire (6,186,687 samples, 0.01%)</title><rect x="47.9180%" y="1653" width="0.0106%" height="15" fill="rgb(254,73,53)" fg:x="27857449503" fg:w="6186687"/><text x="48.1680%" y="1663.50"></text></g><g><title>_raw_spin_lock_irqsave (21,387,932 samples, 0.04%)</title><rect x="47.8958%" y="1685" width="0.0368%" height="15" fill="rgb(251,35,20)" fg:x="27844586793" fg:w="21387932"/><text x="48.1458%" y="1695.50"></text></g><g><title>lock_acquire (13,757,569 samples, 0.02%)</title><rect x="47.9090%" y="1669" width="0.0237%" height="15" fill="rgb(241,119,20)" fg:x="27852217156" fg:w="13757569"/><text x="48.1590%" y="1679.50"></text></g><g><title>_raw_spin_unlock_irqrestore (10,800,536 samples, 0.02%)</title><rect x="47.9326%" y="1685" width="0.0186%" height="15" fill="rgb(207,102,14)" fg:x="27865974725" fg:w="10800536"/><text x="48.1826%" y="1695.50"></text></g><g><title>lock_release (7,906,408 samples, 0.01%)</title><rect x="47.9376%" y="1669" width="0.0136%" height="15" fill="rgb(248,201,50)" fg:x="27868868853" fg:w="7906408"/><text x="48.1876%" y="1679.50"></text></g><g><title>__mod_memcg_lruvec_state (9,205,446 samples, 0.02%)</title><rect x="47.9718%" y="1653" width="0.0158%" height="15" fill="rgb(222,185,44)" fg:x="27888751597" fg:w="9205446"/><text x="48.2218%" y="1663.50"></text></g><g><title>__lock_acquire (6,856,470 samples, 0.01%)</title><rect x="48.0053%" y="1637" width="0.0118%" height="15" fill="rgb(218,107,18)" fg:x="27908232295" fg:w="6856470"/><text x="48.2553%" y="1647.50"></text></g><g><title>lock_acquire (18,992,326 samples, 0.03%)</title><rect x="47.9940%" y="1653" width="0.0327%" height="15" fill="rgb(237,177,39)" fg:x="27901670790" fg:w="18992326"/><text x="48.2440%" y="1663.50"></text></g><g><title>__mod_lruvec_page_state (51,600,537 samples, 0.09%)</title><rect x="47.9636%" y="1669" width="0.0888%" height="15" fill="rgb(246,69,6)" fg:x="27883962819" fg:w="51600537"/><text x="48.2136%" y="1679.50"></text></g><g><title>lock_release (14,900,240 samples, 0.03%)</title><rect x="48.0267%" y="1653" width="0.0256%" height="15" fill="rgb(234,208,37)" fg:x="27920663116" fg:w="14900240"/><text x="48.2767%" y="1663.50"></text></g><g><title>lock_is_held_type (23,080,001 samples, 0.04%)</title><rect x="48.0643%" y="1669" width="0.0397%" height="15" fill="rgb(225,4,6)" fg:x="27942511585" fg:w="23080001"/><text x="48.3143%" y="1679.50"></text></g><g><title>match_held_lock (8,493,692 samples, 0.01%)</title><rect x="48.0894%" y="1653" width="0.0146%" height="15" fill="rgb(233,45,0)" fg:x="27957097894" fg:w="8493692"/><text x="48.3394%" y="1663.50"></text></g><g><title>_raw_spin_lock (6,852,649 samples, 0.01%)</title><rect x="48.1354%" y="1653" width="0.0118%" height="15" fill="rgb(226,136,5)" fg:x="27983852219" fg:w="6852649"/><text x="48.3854%" y="1663.50"></text></g><g><title>percpu_counter_add_batch (19,302,648 samples, 0.03%)</title><rect x="48.1151%" y="1669" width="0.0332%" height="15" fill="rgb(211,91,47)" fg:x="27972057646" fg:w="19302648"/><text x="48.3651%" y="1679.50"></text></g><g><title>folio_account_dirtied (113,989,419 samples, 0.20%)</title><rect x="47.9531%" y="1685" width="0.1961%" height="15" fill="rgb(242,88,51)" fg:x="27877881732" fg:w="113989419"/><text x="48.2031%" y="1695.50"></text></g><g><title>__folio_mark_dirty (158,345,477 samples, 0.27%)</title><rect x="47.8790%" y="1701" width="0.2724%" height="15" fill="rgb(230,91,28)" fg:x="27834792940" fg:w="158345477"/><text x="48.1290%" y="1711.50"></text></g><g><title>__lock_acquire (13,806,346 samples, 0.02%)</title><rect x="48.1820%" y="1669" width="0.0237%" height="15" fill="rgb(254,186,29)" fg:x="28010970077" fg:w="13806346"/><text x="48.4320%" y="1679.50"></text></g><g><title>lock_acquire (30,000,321 samples, 0.05%)</title><rect x="48.1677%" y="1685" width="0.0516%" height="15" fill="rgb(238,6,4)" fg:x="28002646913" fg:w="30000321"/><text x="48.4177%" y="1695.50"></text></g><g><title>trace_lock_acquire (7,870,811 samples, 0.01%)</title><rect x="48.2058%" y="1669" width="0.0135%" height="15" fill="rgb(221,151,16)" fg:x="28024776423" fg:w="7870811"/><text x="48.4558%" y="1679.50"></text></g><g><title>folio_memcg_lock (37,058,111 samples, 0.06%)</title><rect x="48.1569%" y="1701" width="0.0637%" height="15" fill="rgb(251,143,52)" fg:x="27996357570" fg:w="37058111"/><text x="48.4069%" y="1711.50"></text></g><g><title>folio_memcg_unlock (12,230,531 samples, 0.02%)</title><rect x="48.2206%" y="1701" width="0.0210%" height="15" fill="rgb(206,90,15)" fg:x="28033415681" fg:w="12230531"/><text x="48.4706%" y="1711.50"></text></g><g><title>lock_release (9,150,958 samples, 0.02%)</title><rect x="48.2259%" y="1685" width="0.0157%" height="15" fill="rgb(218,35,8)" fg:x="28036495254" fg:w="9150958"/><text x="48.4759%" y="1695.50"></text></g><g><title>block_write_end (225,393,923 samples, 0.39%)</title><rect x="47.8662%" y="1749" width="0.3877%" height="15" fill="rgb(239,215,6)" fg:x="27827363206" fg:w="225393923"/><text x="48.1162%" y="1759.50"></text></g><g><title>__block_commit_write (224,946,817 samples, 0.39%)</title><rect x="47.8670%" y="1733" width="0.3869%" height="15" fill="rgb(245,116,39)" fg:x="27827810312" fg:w="224946817"/><text x="48.1170%" y="1743.50"></text></g><g><title>mark_buffer_dirty (220,315,054 samples, 0.38%)</title><rect x="47.8749%" y="1717" width="0.3790%" height="15" fill="rgb(242,65,28)" fg:x="27832442075" fg:w="220315054"/><text x="48.1249%" y="1727.50"></text></g><g><title>ext4_da_do_write_end (235,723,440 samples, 0.41%)</title><rect x="47.8552%" y="1765" width="0.4055%" height="15" fill="rgb(252,132,53)" fg:x="27820974022" fg:w="235723440"/><text x="48.1052%" y="1775.50"></text></g><g><title>trace_ext4_da_write_end (6,029,711 samples, 0.01%)</title><rect x="48.2607%" y="1765" width="0.0104%" height="15" fill="rgb(224,159,50)" fg:x="28056697462" fg:w="6029711"/><text x="48.5107%" y="1775.50"></text></g><g><title>ext4_da_write_end (246,824,978 samples, 0.42%)</title><rect x="47.8500%" y="1781" width="0.4246%" height="15" fill="rgb(224,93,4)" fg:x="27817939287" fg:w="246824978"/><text x="48.1000%" y="1791.50"></text></g><g><title>fault_in_iov_iter_readable (21,511,451 samples, 0.04%)</title><rect x="48.2746%" y="1781" width="0.0370%" height="15" fill="rgb(208,81,34)" fg:x="28064764265" fg:w="21511451"/><text x="48.5246%" y="1791.50"></text></g><g><title>fault_in_readable (19,813,299 samples, 0.03%)</title><rect x="48.2775%" y="1765" width="0.0341%" height="15" fill="rgb(233,92,54)" fg:x="28066462417" fg:w="19813299"/><text x="48.5275%" y="1775.50"></text></g><g><title>rep_movs_alternative (90,034,544 samples, 0.15%)</title><rect x="48.3123%" y="1781" width="0.1549%" height="15" fill="rgb(237,21,14)" fg:x="28086694364" fg:w="90034544"/><text x="48.5623%" y="1791.50"></text></g><g><title>generic_perform_write (6,010,478,557 samples, 10.34%)</title><rect x="38.1347%" y="1797" width="10.3387%" height="15" fill="rgb(249,128,51)" fg:x="22169856580" fg:w="6010478557"/><text x="38.3847%" y="1807.50">generic_perform..</text></g><g><title>ext4_file_write_iter (10,706,855,253 samples, 18.42%)</title><rect x="30.0601%" y="1829" width="18.4170%" height="15" fill="rgb(223,129,24)" fg:x="17475658321" fg:w="10706855253"/><text x="30.3101%" y="1839.50">ext4_file_write_iter</text></g><g><title>ext4_buffered_write_iter (10,705,998,481 samples, 18.42%)</title><rect x="30.0616%" y="1813" width="18.4155%" height="15" fill="rgb(231,168,25)" fg:x="17476515093" fg:w="10705998481"/><text x="30.3116%" y="1823.50">ext4_buffered_write_iter</text></g><g><title>__x64_sys_pwrite64 (10,733,388,664 samples, 18.46%)</title><rect x="30.0173%" y="1861" width="18.4626%" height="15" fill="rgb(224,39,20)" fg:x="17450765927" fg:w="10733388664"/><text x="30.2673%" y="1871.50">__x64_sys_pwrite64</text></g><g><title>vfs_write (10,731,303,202 samples, 18.46%)</title><rect x="30.0209%" y="1845" width="18.4591%" height="15" fill="rgb(225,152,53)" fg:x="17452851389" fg:w="10731303202"/><text x="30.2709%" y="1855.50">vfs_write</text></g><g><title>entry_SYSCALL_64 (10,740,519,581 samples, 18.47%)</title><rect x="30.0173%" y="1893" width="18.4749%" height="15" fill="rgb(252,17,24)" fg:x="17450765927" fg:w="10740519581"/><text x="30.2673%" y="1903.50">entry_SYSCALL_64</text></g><g><title>do_syscall_64 (10,740,519,581 samples, 18.47%)</title><rect x="30.0173%" y="1877" width="18.4749%" height="15" fill="rgb(250,114,30)" fg:x="17450765927" fg:w="10740519581"/><text x="30.2673%" y="1887.50">do_syscall_64</text></g><g><title>__libc_pwrite (24,330,405,028 samples, 41.85%)</title><rect x="6.6471%" y="1909" width="41.8510%" height="15" fill="rgb(229,5,4)" fg:x="3864335582" fg:w="24330405028"/><text x="6.8971%" y="1919.50">__libc_pwrite</text></g><g><title>__memmove_sse2_unaligned_erms (109,614,142 samples, 0.19%)</title><rect x="48.4981%" y="1909" width="0.1885%" height="15" fill="rgb(225,176,49)" fg:x="28194740610" fg:w="109614142"/><text x="48.7481%" y="1919.50"></text></g><g><title>__sanitizer::mem_is_zero (11,926,892 samples, 0.02%)</title><rect x="48.6867%" y="1909" width="0.0205%" height="15" fill="rgb(224,221,49)" fg:x="28304354752" fg:w="11926892"/><text x="48.9367%" y="1919.50"></text></g><g><title>generate_random_string (24,443,092 samples, 0.04%)</title><rect x="48.7072%" y="1909" width="0.0420%" height="15" fill="rgb(253,169,27)" fg:x="28316281644" fg:w="24443092"/><text x="48.9572%" y="1919.50"></text></g><g><title>__sanitizer::mem_is_zero (24,443,092 samples, 0.04%)</title><rect x="48.7072%" y="1893" width="0.0420%" height="15" fill="rgb(211,206,16)" fg:x="28316281644" fg:w="24443092"/><text x="48.9572%" y="1903.50"></text></g><g><title>get_file_and_offset_and_size_from_key (8,134,056 samples, 0.01%)</title><rect x="48.7492%" y="1909" width="0.0140%" height="15" fill="rgb(244,87,35)" fg:x="28340724736" fg:w="8134056"/><text x="48.9992%" y="1919.50"></text></g><g><title>IOTraceClient::do_insert (24,503,364,516 samples, 42.15%)</title><rect x="6.6182%" y="1925" width="42.1486%" height="15" fill="rgb(246,28,10)" fg:x="3847559577" fg:w="24503364516"/><text x="6.8682%" y="1935.50">IOTraceClient::do_insert</text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (7,177,950 samples, 0.01%)</title><rect x="48.7685%" y="1861" width="0.0123%" height="15" fill="rgb(229,12,44)" fg:x="28351937539" fg:w="7177950"/><text x="49.0185%" y="1871.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (7,177,950 samples, 0.01%)</title><rect x="48.7685%" y="1845" width="0.0123%" height="15" fill="rgb(210,145,37)" fg:x="28351937539" fg:w="7177950"/><text x="49.0185%" y="1855.50"></text></g><g><title>FileDescriptorCache::get_file_descriptor (9,708,172 samples, 0.02%)</title><rect x="48.7668%" y="1909" width="0.0167%" height="15" fill="rgb(227,112,52)" fg:x="28350924093" fg:w="9708172"/><text x="49.0168%" y="1919.50"></text></g><g><title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; &gt; &gt;::find (8,694,726 samples, 0.01%)</title><rect x="48.7685%" y="1893" width="0.0150%" height="15" fill="rgb(238,155,34)" fg:x="28351937539" fg:w="8694726"/><text x="49.0185%" y="1903.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (8,694,726 samples, 0.01%)</title><rect x="48.7685%" y="1877" width="0.0150%" height="15" fill="rgb(239,226,36)" fg:x="28351937539" fg:w="8694726"/><text x="49.0185%" y="1887.50"></text></g><g><title>__lock_acquire (23,503,094 samples, 0.04%)</title><rect x="48.8178%" y="1861" width="0.0404%" height="15" fill="rgb(230,16,23)" fg:x="28380576139" fg:w="23503094"/><text x="49.0678%" y="1871.50"></text></g><g><title>lock_acquire (47,936,683 samples, 0.08%)</title><rect x="48.7940%" y="1877" width="0.0825%" height="15" fill="rgb(236,171,36)" fg:x="28366714453" fg:w="47936683"/><text x="49.0440%" y="1887.50"></text></g><g><title>trace_lock_acquire (9,199,038 samples, 0.02%)</title><rect x="48.8606%" y="1861" width="0.0158%" height="15" fill="rgb(221,22,14)" fg:x="28405452098" fg:w="9199038"/><text x="49.1106%" y="1871.50"></text></g><g><title>rcu_is_watching (5,867,917 samples, 0.01%)</title><rect x="48.8663%" y="1845" width="0.0101%" height="15" fill="rgb(242,43,11)" fg:x="28408783219" fg:w="5867917"/><text x="49.1163%" y="1855.50"></text></g><g><title>__bpf_prog_enter (58,164,765 samples, 0.10%)</title><rect x="48.7863%" y="1893" width="0.1000%" height="15" fill="rgb(232,69,23)" fg:x="28362259796" fg:w="58164765"/><text x="49.0363%" y="1903.50"></text></g><g><title>lock_release (23,773,809 samples, 0.04%)</title><rect x="48.8863%" y="1877" width="0.0409%" height="15" fill="rgb(216,180,54)" fg:x="28420424561" fg:w="23773809"/><text x="49.1363%" y="1887.50"></text></g><g><title>trace_lock_release (9,611,208 samples, 0.02%)</title><rect x="48.9107%" y="1861" width="0.0165%" height="15" fill="rgb(216,5,24)" fg:x="28434587162" fg:w="9611208"/><text x="49.1607%" y="1871.50"></text></g><g><title>__bpf_prog_exit (26,054,080 samples, 0.04%)</title><rect x="48.8863%" y="1893" width="0.0448%" height="15" fill="rgb(225,89,9)" fg:x="28420424561" fg:w="26054080"/><text x="49.1363%" y="1903.50"></text></g><g><title>lock_is_held_type (7,107,178 samples, 0.01%)</title><rect x="49.0331%" y="1845" width="0.0122%" height="15" fill="rgb(243,75,33)" fg:x="28505756407" fg:w="7107178"/><text x="49.2831%" y="1855.50"></text></g><g><title>__htab_map_lookup_elem (15,913,387 samples, 0.03%)</title><rect x="49.0204%" y="1877" width="0.0274%" height="15" fill="rgb(247,141,45)" fg:x="28498342968" fg:w="15913387"/><text x="49.2704%" y="1887.50"></text></g><g><title>rcu_read_lock_held (9,295,392 samples, 0.02%)</title><rect x="49.0318%" y="1861" width="0.0160%" height="15" fill="rgb(232,177,36)" fg:x="28504960963" fg:w="9295392"/><text x="49.2818%" y="1871.50"></text></g><g><title>_raw_spin_lock (12,179,868 samples, 0.02%)</title><rect x="49.1026%" y="1845" width="0.0210%" height="15" fill="rgb(219,125,36)" fg:x="28546159865" fg:w="12179868"/><text x="49.3526%" y="1855.50"></text></g><g><title>lock_acquire (10,325,699 samples, 0.02%)</title><rect x="49.1058%" y="1829" width="0.0178%" height="15" fill="rgb(227,94,9)" fg:x="28548014034" fg:w="10325699"/><text x="49.3558%" y="1839.50"></text></g><g><title>do_raw_spin_unlock (7,092,878 samples, 0.01%)</title><rect x="49.1236%" y="1829" width="0.0122%" height="15" fill="rgb(240,34,52)" fg:x="28558339733" fg:w="7092878"/><text x="49.3736%" y="1839.50"></text></g><g><title>_raw_spin_unlock (16,399,632 samples, 0.03%)</title><rect x="49.1236%" y="1845" width="0.0282%" height="15" fill="rgb(216,45,12)" fg:x="28558339733" fg:w="16399632"/><text x="49.3736%" y="1855.50"></text></g><g><title>lock_release (9,306,754 samples, 0.02%)</title><rect x="49.1358%" y="1829" width="0.0160%" height="15" fill="rgb(246,21,19)" fg:x="28565432611" fg:w="9306754"/><text x="49.3858%" y="1839.50"></text></g><g><title>queued_write_lock_slowpath (384,425,762 samples, 0.66%)</title><rect x="49.1937%" y="1813" width="0.6613%" height="15" fill="rgb(213,98,42)" fg:x="28599088756" fg:w="384425762"/><text x="49.4437%" y="1823.50"></text></g><g><title>native_queued_spin_lock_slowpath (164,146,020 samples, 0.28%)</title><rect x="49.5726%" y="1797" width="0.2823%" height="15" fill="rgb(250,136,47)" fg:x="28819368498" fg:w="164146020"/><text x="49.8226%" y="1807.50"></text></g><g><title>do_raw_write_lock (408,425,370 samples, 0.70%)</title><rect x="49.1537%" y="1829" width="0.7025%" height="15" fill="rgb(251,124,27)" fg:x="28575883972" fg:w="408425370"/><text x="49.4037%" y="1839.50"></text></g><g><title>__lock_acquire (12,154,085 samples, 0.02%)</title><rect x="49.8633%" y="1813" width="0.0209%" height="15" fill="rgb(229,180,14)" fg:x="28988406787" fg:w="12154085"/><text x="50.1133%" y="1823.50"></text></g><g><title>_raw_write_lock (427,345,359 samples, 0.74%)</title><rect x="49.1518%" y="1845" width="0.7351%" height="15" fill="rgb(245,216,25)" fg:x="28574739365" fg:w="427345359"/><text x="49.4018%" y="1855.50"></text></g><g><title>lock_acquire (17,775,382 samples, 0.03%)</title><rect x="49.8563%" y="1829" width="0.0306%" height="15" fill="rgb(251,43,5)" fg:x="28984309342" fg:w="17775382"/><text x="50.1063%" y="1839.50"></text></g><g><title>do_raw_write_unlock (8,642,731 samples, 0.01%)</title><rect x="49.8880%" y="1829" width="0.0149%" height="15" fill="rgb(250,128,24)" fg:x="29002756837" fg:w="8642731"/><text x="50.1380%" y="1839.50"></text></g><g><title>_raw_write_unlock (17,688,367 samples, 0.03%)</title><rect x="49.8869%" y="1845" width="0.0304%" height="15" fill="rgb(217,117,27)" fg:x="29002084724" fg:w="17688367"/><text x="50.1369%" y="1855.50"></text></g><g><title>lock_release (8,373,523 samples, 0.01%)</title><rect x="49.9029%" y="1829" width="0.0144%" height="15" fill="rgb(245,147,4)" fg:x="29011399568" fg:w="8373523"/><text x="50.1529%" y="1839.50"></text></g><g><title>__cache_ext_list_add_impl (507,678,563 samples, 0.87%)</title><rect x="49.0539%" y="1861" width="0.8733%" height="15" fill="rgb(242,201,35)" fg:x="28517851885" fg:w="507678563"/><text x="49.3039%" y="1871.50"></text></g><g><title>do_raw_read_lock (3,519,616,356 samples, 6.05%)</title><rect x="49.9283%" y="1845" width="6.0541%" height="15" fill="rgb(218,181,1)" fg:x="29026204453" fg:w="3519616356"/><text x="50.1783%" y="1855.50">do_raw_r..</text></g><g><title>queued_read_lock_slowpath (3,510,368,382 samples, 6.04%)</title><rect x="49.9443%" y="1829" width="6.0382%" height="15" fill="rgb(222,6,29)" fg:x="29035452427" fg:w="3510368382"/><text x="50.1943%" y="1839.50">queued_r..</text></g><g><title>native_queued_spin_lock_slowpath (2,672,055,701 samples, 4.60%)</title><rect x="51.3862%" y="1813" width="4.5962%" height="15" fill="rgb(208,186,3)" fg:x="29873765108" fg:w="2672055701"/><text x="51.6362%" y="1823.50">nativ..</text></g><g><title>__lock_acquire (53,536,734 samples, 0.09%)</title><rect x="55.9861%" y="1829" width="0.0921%" height="15" fill="rgb(216,36,26)" fg:x="32547912933" fg:w="53536734"/><text x="56.2361%" y="1839.50"></text></g><g><title>_raw_read_lock (3,580,331,797 samples, 6.16%)</title><rect x="49.9272%" y="1861" width="6.1586%" height="15" fill="rgb(248,201,23)" fg:x="29025530448" fg:w="3580331797"/><text x="50.1772%" y="1871.50">_raw_rea..</text></g><g><title>lock_acquire (60,041,436 samples, 0.10%)</title><rect x="55.9825%" y="1845" width="0.1033%" height="15" fill="rgb(251,170,31)" fg:x="32545820809" fg:w="60041436"/><text x="56.2325%" y="1855.50"></text></g><g><title>bpf_cache_ext_list_add_tail (4,110,426,660 samples, 7.07%)</title><rect x="49.0477%" y="1877" width="7.0704%" height="15" fill="rgb(207,110,25)" fg:x="28514256355" fg:w="4110426660"/><text x="49.2977%" y="1887.50">bpf_cache..</text></g><g><title>_raw_spin_unlock (13,041,747 samples, 0.02%)</title><rect x="56.0957%" y="1861" width="0.0224%" height="15" fill="rgb(250,54,15)" fg:x="32611641268" fg:w="13041747"/><text x="56.3457%" y="1871.50"></text></g><g><title>ktime_get_mono_fast_ns (12,986,663 samples, 0.02%)</title><rect x="56.1181%" y="1861" width="0.0223%" height="15" fill="rgb(227,68,33)" fg:x="32624683015" fg:w="12986663"/><text x="56.3681%" y="1871.50"></text></g><g><title>read_tsc (10,529,208 samples, 0.02%)</title><rect x="56.1224%" y="1845" width="0.0181%" height="15" fill="rgb(238,34,41)" fg:x="32627140470" fg:w="10529208"/><text x="56.3724%" y="1855.50"></text></g><g><title>bpf_ktime_get_ns (14,318,389 samples, 0.02%)</title><rect x="56.1181%" y="1877" width="0.0246%" height="15" fill="rgb(220,11,15)" fg:x="32624683015" fg:w="14318389"/><text x="56.3681%" y="1887.50"></text></g><g><title>lock_release (8,057,175 samples, 0.01%)</title><rect x="56.2334%" y="1845" width="0.0139%" height="15" fill="rgb(246,111,35)" fg:x="32691712922" fg:w="8057175"/><text x="56.4834%" y="1855.50"></text></g><g><title>_raw_spin_unlock (11,789,616 samples, 0.02%)</title><rect x="56.2281%" y="1861" width="0.0203%" height="15" fill="rgb(209,88,53)" fg:x="32688599609" fg:w="11789616"/><text x="56.4781%" y="1871.50"></text></g><g><title>__lock_acquire (7,808,812 samples, 0.01%)</title><rect x="56.3528%" y="1797" width="0.0134%" height="15" fill="rgb(231,185,47)" fg:x="32761075948" fg:w="7808812"/><text x="56.6028%" y="1807.50"></text></g><g><title>_raw_spin_lock (14,578,047 samples, 0.03%)</title><rect x="56.3451%" y="1829" width="0.0251%" height="15" fill="rgb(233,154,1)" fg:x="32756656639" fg:w="14578047"/><text x="56.5951%" y="1839.50"></text></g><g><title>lock_acquire (13,144,814 samples, 0.02%)</title><rect x="56.3476%" y="1813" width="0.0226%" height="15" fill="rgb(225,15,46)" fg:x="32758089872" fg:w="13144814"/><text x="56.5976%" y="1823.50"></text></g><g><title>alloc_htab_elem (77,139,969 samples, 0.13%)</title><rect x="56.2484%" y="1861" width="0.1327%" height="15" fill="rgb(211,135,41)" fg:x="32700389225" fg:w="77139969"/><text x="56.4984%" y="1871.50"></text></g><g><title>__pcpu_freelist_pop (73,162,088 samples, 0.13%)</title><rect x="56.2552%" y="1845" width="0.1258%" height="15" fill="rgb(208,54,0)" fg:x="32704367106" fg:w="73162088"/><text x="56.5052%" y="1855.50"></text></g><g><title>do_raw_spin_lock (11,101,591 samples, 0.02%)</title><rect x="56.3857%" y="1829" width="0.0191%" height="15" fill="rgb(244,136,14)" fg:x="32780235520" fg:w="11101591"/><text x="56.6357%" y="1839.50"></text></g><g><title>__lock_acquire (35,849,667 samples, 0.06%)</title><rect x="56.4120%" y="1813" width="0.0617%" height="15" fill="rgb(241,56,14)" fg:x="32795504935" fg:w="35849667"/><text x="56.6620%" y="1823.50"></text></g><g><title>lock_acquire (41,460,594 samples, 0.07%)</title><rect x="56.4048%" y="1829" width="0.0713%" height="15" fill="rgb(205,80,24)" fg:x="32791337111" fg:w="41460594"/><text x="56.6548%" y="1839.50"></text></g><g><title>htab_lock_bucket (55,946,038 samples, 0.10%)</title><rect x="56.3811%" y="1861" width="0.0962%" height="15" fill="rgb(220,57,4)" fg:x="32777529194" fg:w="55946038"/><text x="56.6311%" y="1871.50"></text></g><g><title>_raw_spin_lock (54,680,305 samples, 0.09%)</title><rect x="56.3832%" y="1845" width="0.0941%" height="15" fill="rgb(226,193,50)" fg:x="32778794927" fg:w="54680305"/><text x="56.6332%" y="1855.50"></text></g><g><title>bpf_prog_0ba38f2e803f3434_sampling_folio_added (4,387,152,493 samples, 7.55%)</title><rect x="48.9402%" y="1893" width="7.5464%" height="15" fill="rgb(231,168,22)" fg:x="28451722702" fg:w="4387152493"/><text x="49.1902%" y="1903.50">bpf_prog_0..</text></g><g><title>htab_map_update_elem (199,170,240 samples, 0.34%)</title><rect x="56.1440%" y="1877" width="0.3426%" height="15" fill="rgb(254,215,14)" fg:x="32639704955" fg:w="199170240"/><text x="56.3940%" y="1887.50"></text></g><g><title>do_raw_read_lock (713,372,907 samples, 1.23%)</title><rect x="57.9825%" y="1845" width="1.2271%" height="15" fill="rgb(211,115,16)" fg:x="33708547439" fg:w="713372907"/><text x="58.2325%" y="1855.50"></text></g><g><title>queued_read_lock_slowpath (713,372,907 samples, 1.23%)</title><rect x="57.9825%" y="1829" width="1.2271%" height="15" fill="rgb(236,210,16)" fg:x="33708547439" fg:w="713372907"/><text x="58.2325%" y="1839.50"></text></g><g><title>native_queued_spin_lock_slowpath (572,574,875 samples, 0.98%)</title><rect x="58.2247%" y="1813" width="0.9849%" height="15" fill="rgb(221,94,12)" fg:x="33849345471" fg:w="572574875"/><text x="58.4747%" y="1823.50"></text></g><g><title>_raw_read_lock (717,891,450 samples, 1.23%)</title><rect x="57.9825%" y="1861" width="1.2349%" height="15" fill="rgb(235,218,49)" fg:x="33708547439" fg:w="717891450"/><text x="58.2325%" y="1871.50"></text></g><g><title>do_raw_write_lock (81,749,151 samples, 0.14%)</title><rect x="59.2212%" y="1845" width="0.1406%" height="15" fill="rgb(217,114,14)" fg:x="34428674206" fg:w="81749151"/><text x="59.4712%" y="1855.50"></text></g><g><title>queued_write_lock_slowpath (79,513,227 samples, 0.14%)</title><rect x="59.2251%" y="1829" width="0.1368%" height="15" fill="rgb(216,145,22)" fg:x="34430910130" fg:w="79513227"/><text x="59.4751%" y="1839.50"></text></g><g><title>native_queued_spin_lock_slowpath (38,719,203 samples, 0.07%)</title><rect x="59.2952%" y="1813" width="0.0666%" height="15" fill="rgb(217,112,39)" fg:x="34471704154" fg:w="38719203"/><text x="59.5452%" y="1823.50"></text></g><g><title>_raw_write_lock (82,477,441 samples, 0.14%)</title><rect x="59.2212%" y="1861" width="0.1419%" height="15" fill="rgb(225,85,32)" fg:x="34428674206" fg:w="82477441"/><text x="59.4712%" y="1871.50"></text></g><g><title>htab_map_hash (42,167,398 samples, 0.07%)</title><rect x="62.7061%" y="1829" width="0.0725%" height="15" fill="rgb(245,209,47)" fg:x="36454628961" fg:w="42167398"/><text x="62.9561%" y="1839.50"></text></g><g><title>debug_lockdep_rcu_enabled (9,224,687 samples, 0.02%)</title><rect x="62.7912%" y="1813" width="0.0159%" height="15" fill="rgb(218,220,15)" fg:x="36504101377" fg:w="9224687"/><text x="63.0412%" y="1823.50"></text></g><g><title>lock_is_held_type (64,281,877 samples, 0.11%)</title><rect x="62.8070%" y="1813" width="0.1106%" height="15" fill="rgb(222,202,31)" fg:x="36513326064" fg:w="64281877"/><text x="63.0570%" y="1823.50"></text></g><g><title>match_held_lock (6,713,287 samples, 0.01%)</title><rect x="62.9061%" y="1797" width="0.0115%" height="15" fill="rgb(243,203,4)" fg:x="36570894654" fg:w="6713287"/><text x="63.1561%" y="1807.50"></text></g><g><title>__htab_map_lookup_elem (2,020,753,544 samples, 3.48%)</title><rect x="59.4724%" y="1845" width="3.4759%" height="15" fill="rgb(237,92,17)" fg:x="34574731634" fg:w="2020753544"/><text x="59.7224%" y="1855.50">__h..</text></g><g><title>rcu_read_lock_held (96,585,259 samples, 0.17%)</title><rect x="62.7822%" y="1829" width="0.1661%" height="15" fill="rgb(231,119,7)" fg:x="36498899919" fg:w="96585259"/><text x="63.0322%" y="1839.50"></text></g><g><title>rcu_is_watching (13,997,299 samples, 0.02%)</title><rect x="62.9243%" y="1813" width="0.0241%" height="15" fill="rgb(237,82,41)" fg:x="36581487879" fg:w="13997299"/><text x="63.1743%" y="1823.50"></text></g><g><title>bpf_prog_baff5aaf85fd2c96_bpf_lfu_score_fn (2,082,921,211 samples, 3.58%)</title><rect x="59.3682%" y="1861" width="3.5829%" height="15" fill="rgb(226,81,48)" fg:x="34514101592" fg:w="2082921211"/><text x="59.6182%" y="1871.50">bpf_..</text></g><g><title>bpf_cache_ext_list_sample (3,756,620,527 samples, 6.46%)</title><rect x="56.4903%" y="1877" width="6.4618%" height="15" fill="rgb(234,70,51)" fg:x="32841029460" fg:w="3756620527"/><text x="56.7403%" y="1887.50">bpf_cach..</text></g><g><title>bpf_prog_53d125a157918351_sampling_evict_folios (3,769,002,690 samples, 6.48%)</title><rect x="56.4866%" y="1893" width="6.4831%" height="15" fill="rgb(251,86,4)" fg:x="32838875195" fg:w="3769002690"/><text x="56.7366%" y="1903.50">bpf_prog..</text></g><g><title>bpf_prog_baff5aaf85fd2c96_bpf_lfu_score_fn (10,227,898 samples, 0.02%)</title><rect x="62.9521%" y="1877" width="0.0176%" height="15" fill="rgb(244,144,28)" fg:x="36597649987" fg:w="10227898"/><text x="63.2021%" y="1887.50"></text></g><g><title>htab_map_hash (11,290,709 samples, 0.02%)</title><rect x="63.2157%" y="1861" width="0.0194%" height="15" fill="rgb(232,161,39)" fg:x="36750887396" fg:w="11290709"/><text x="63.4657%" y="1871.50"></text></g><g><title>lock_is_held_type (6,401,208 samples, 0.01%)</title><rect x="63.2383%" y="1845" width="0.0110%" height="15" fill="rgb(247,34,51)" fg:x="36764039433" fg:w="6401208"/><text x="63.4883%" y="1855.50"></text></g><g><title>__htab_map_lookup_elem (162,521,951 samples, 0.28%)</title><rect x="62.9719%" y="1877" width="0.2796%" height="15" fill="rgb(225,132,2)" fg:x="36609146139" fg:w="162521951"/><text x="63.2219%" y="1887.50"></text></g><g><title>rcu_read_lock_held (9,489,985 samples, 0.02%)</title><rect x="63.2351%" y="1861" width="0.0163%" height="15" fill="rgb(209,159,44)" fg:x="36762178105" fg:w="9489985"/><text x="63.4851%" y="1871.50"></text></g><g><title>bpf_ktime_get_ns (11,042,132 samples, 0.02%)</title><rect x="63.2514%" y="1877" width="0.0190%" height="15" fill="rgb(251,214,1)" fg:x="36771668090" fg:w="11042132"/><text x="63.5014%" y="1887.50"></text></g><g><title>ktime_get_mono_fast_ns (11,042,132 samples, 0.02%)</title><rect x="63.2514%" y="1861" width="0.0190%" height="15" fill="rgb(247,84,47)" fg:x="36771668090" fg:w="11042132"/><text x="63.5014%" y="1871.50"></text></g><g><title>read_tsc (10,116,371 samples, 0.02%)</title><rect x="63.2530%" y="1845" width="0.0174%" height="15" fill="rgb(240,111,43)" fg:x="36772593851" fg:w="10116371"/><text x="63.5030%" y="1855.50"></text></g><g><title>bpf_prog_790e9b214d9c9b97_sampling_folio_accessed (175,100,074 samples, 0.30%)</title><rect x="62.9697%" y="1893" width="0.3012%" height="15" fill="rgb(215,214,35)" fg:x="36607877885" fg:w="175100074"/><text x="63.2197%" y="1903.50"></text></g><g><title>__lock_acquire (67,411,840 samples, 0.12%)</title><rect x="63.3683%" y="1813" width="0.1160%" height="15" fill="rgb(248,207,23)" fg:x="36839631025" fg:w="67411840"/><text x="63.6183%" y="1823.50"></text></g><g><title>_raw_spin_lock (74,024,816 samples, 0.13%)</title><rect x="63.3619%" y="1845" width="0.1273%" height="15" fill="rgb(214,186,4)" fg:x="36835895710" fg:w="74024816"/><text x="63.6119%" y="1855.50"></text></g><g><title>lock_acquire (73,241,902 samples, 0.13%)</title><rect x="63.3632%" y="1829" width="0.1260%" height="15" fill="rgb(220,133,22)" fg:x="36836678624" fg:w="73241902"/><text x="63.6132%" y="1839.50"></text></g><g><title>_raw_spin_unlock (12,209,141 samples, 0.02%)</title><rect x="63.4892%" y="1845" width="0.0210%" height="15" fill="rgb(239,134,19)" fg:x="36909920526" fg:w="12209141"/><text x="63.7392%" y="1855.50"></text></g><g><title>lock_release (9,106,891 samples, 0.02%)</title><rect x="63.4946%" y="1829" width="0.0157%" height="15" fill="rgb(250,140,9)" fg:x="36913022776" fg:w="9106891"/><text x="63.7446%" y="1839.50"></text></g><g><title>native_queued_spin_lock_slowpath (2,730,422,130 samples, 4.70%)</title><rect x="65.7881%" y="1797" width="4.6966%" height="15" fill="rgb(225,59,14)" fg:x="38246378721" fg:w="2730422130"/><text x="66.0381%" y="1807.50">nativ..</text></g><g><title>do_raw_write_lock (4,055,418,184 samples, 6.98%)</title><rect x="63.5102%" y="1829" width="6.9758%" height="15" fill="rgb(214,152,51)" fg:x="36922129667" fg:w="4055418184"/><text x="63.7602%" y="1839.50">do_raw_wr..</text></g><g><title>queued_write_lock_slowpath (4,040,678,171 samples, 6.95%)</title><rect x="63.5356%" y="1813" width="6.9504%" height="15" fill="rgb(251,227,43)" fg:x="36936869680" fg:w="4040678171"/><text x="63.7856%" y="1823.50">queued_wr..</text></g><g><title>lock_acquire (57,632,147 samples, 0.10%)</title><rect x="70.4860%" y="1829" width="0.0991%" height="15" fill="rgb(241,96,17)" fg:x="40977547851" fg:w="57632147"/><text x="70.7360%" y="1839.50"></text></g><g><title>__lock_acquire (54,664,374 samples, 0.09%)</title><rect x="70.4911%" y="1813" width="0.0940%" height="15" fill="rgb(234,198,43)" fg:x="40980515624" fg:w="54664374"/><text x="70.7411%" y="1823.50"></text></g><g><title>_raw_write_lock (4,114,619,753 samples, 7.08%)</title><rect x="63.5102%" y="1845" width="7.0776%" height="15" fill="rgb(220,108,29)" fg:x="36922129667" fg:w="4114619753"/><text x="63.7602%" y="1855.50">_raw_writ..</text></g><g><title>lock_release (5,925,943 samples, 0.01%)</title><rect x="70.5917%" y="1829" width="0.0102%" height="15" fill="rgb(226,163,33)" fg:x="41038982674" fg:w="5925943"/><text x="70.8417%" y="1839.50"></text></g><g><title>_raw_write_unlock (8,914,118 samples, 0.02%)</title><rect x="70.5878%" y="1845" width="0.0153%" height="15" fill="rgb(205,194,45)" fg:x="41036749420" fg:w="8914118"/><text x="70.8378%" y="1855.50"></text></g><g><title>cache_ext_list_del (4,241,544,612 samples, 7.30%)</title><rect x="63.3451%" y="1861" width="7.2959%" height="15" fill="rgb(206,143,44)" fg:x="36826140117" fg:w="4241544612"/><text x="63.5951%" y="1871.50">cache_ext_..</text></g><g><title>valid_folios_lookup (19,797,835 samples, 0.03%)</title><rect x="70.6070%" y="1845" width="0.0341%" height="15" fill="rgb(236,136,36)" fg:x="41047886894" fg:w="19797835"/><text x="70.8570%" y="1855.50"></text></g><g><title>bpf_cache_ext_list_del (4,243,098,837 samples, 7.30%)</title><rect x="63.3438%" y="1877" width="7.2986%" height="15" fill="rgb(249,172,42)" fg:x="36825374206" fg:w="4243098837"/><text x="63.5938%" y="1887.50">bpf_cache_..</text></g><g><title>_raw_spin_unlock (11,643,478 samples, 0.02%)</title><rect x="70.6960%" y="1861" width="0.0200%" height="15" fill="rgb(216,139,23)" fg:x="41099628326" fg:w="11643478"/><text x="70.9460%" y="1871.50"></text></g><g><title>lock_release (11,643,478 samples, 0.02%)</title><rect x="70.6960%" y="1845" width="0.0200%" height="15" fill="rgb(207,166,20)" fg:x="41099628326" fg:w="11643478"/><text x="70.9460%" y="1855.50"></text></g><g><title>_raw_spin_lock (30,625,161 samples, 0.05%)</title><rect x="70.7188%" y="1829" width="0.0527%" height="15" fill="rgb(210,209,22)" fg:x="41112871851" fg:w="30625161"/><text x="70.9688%" y="1839.50"></text></g><g><title>lock_acquire (30,625,161 samples, 0.05%)</title><rect x="70.7188%" y="1813" width="0.0527%" height="15" fill="rgb(232,118,20)" fg:x="41112871851" fg:w="30625161"/><text x="70.9688%" y="1823.50"></text></g><g><title>trace_lock_acquire (17,162,604 samples, 0.03%)</title><rect x="70.7419%" y="1797" width="0.0295%" height="15" fill="rgb(238,113,42)" fg:x="41126334408" fg:w="17162604"/><text x="70.9919%" y="1807.50"></text></g><g><title>__pcpu_freelist_push (44,067,996 samples, 0.08%)</title><rect x="70.7174%" y="1845" width="0.0758%" height="15" fill="rgb(231,42,5)" fg:x="41112074551" fg:w="44067996"/><text x="70.9674%" y="1855.50"></text></g><g><title>_raw_spin_unlock (12,645,535 samples, 0.02%)</title><rect x="70.7715%" y="1829" width="0.0218%" height="15" fill="rgb(243,166,24)" fg:x="41143497012" fg:w="12645535"/><text x="71.0215%" y="1839.50"></text></g><g><title>lock_release (10,301,062 samples, 0.02%)</title><rect x="70.7755%" y="1813" width="0.0177%" height="15" fill="rgb(237,226,12)" fg:x="41145841485" fg:w="10301062"/><text x="71.0255%" y="1823.50"></text></g><g><title>free_htab_elem (47,103,047 samples, 0.08%)</title><rect x="70.7174%" y="1861" width="0.0810%" height="15" fill="rgb(229,133,24)" fg:x="41112074551" fg:w="47103047"/><text x="70.9674%" y="1871.50"></text></g><g><title>do_raw_spin_lock (6,202,761 samples, 0.01%)</title><rect x="70.8025%" y="1829" width="0.0107%" height="15" fill="rgb(238,33,43)" fg:x="41161514751" fg:w="6202761"/><text x="71.0525%" y="1839.50"></text></g><g><title>__lock_acquire (18,478,571 samples, 0.03%)</title><rect x="70.8220%" y="1813" width="0.0318%" height="15" fill="rgb(227,59,38)" fg:x="41172884823" fg:w="18478571"/><text x="71.0720%" y="1823.50"></text></g><g><title>htab_lock_bucket (33,654,420 samples, 0.06%)</title><rect x="70.7984%" y="1861" width="0.0579%" height="15" fill="rgb(230,97,0)" fg:x="41159177598" fg:w="33654420"/><text x="71.0484%" y="1871.50"></text></g><g><title>_raw_spin_lock (31,317,267 samples, 0.05%)</title><rect x="70.8025%" y="1845" width="0.0539%" height="15" fill="rgb(250,173,50)" fg:x="41161514751" fg:w="31317267"/><text x="71.0525%" y="1855.50"></text></g><g><title>lock_acquire (25,114,506 samples, 0.04%)</title><rect x="70.8131%" y="1829" width="0.0432%" height="15" fill="rgb(240,15,50)" fg:x="41167717512" fg:w="25114506"/><text x="71.0631%" y="1839.50"></text></g><g><title>bpf_prog_94714edc913e697a_sampling_folio_evicted (4,416,785,829 samples, 7.60%)</title><rect x="63.2709%" y="1893" width="7.5974%" height="15" fill="rgb(221,93,22)" fg:x="36782977959" fg:w="4416785829"/><text x="63.5209%" y="1903.50">bpf_prog_9..</text></g><g><title>htab_map_delete_elem (131,290,745 samples, 0.23%)</title><rect x="70.6424%" y="1877" width="0.2258%" height="15" fill="rgb(245,180,53)" fg:x="41068473043" fg:w="131290745"/><text x="70.8924%" y="1887.50"></text></g><g><title>_copy_to_iter (13,434,304 samples, 0.02%)</title><rect x="70.9013%" y="1765" width="0.0231%" height="15" fill="rgb(231,88,51)" fg:x="41219001624" fg:w="13434304"/><text x="71.1513%" y="1775.50"></text></g><g><title>copy_page_to_iter (229,250,717 samples, 0.39%)</title><rect x="70.8966%" y="1781" width="0.3943%" height="15" fill="rgb(240,58,21)" fg:x="41216230200" fg:w="229250717"/><text x="71.1466%" y="1791.50"></text></g><g><title>rep_movs_alternative (211,581,890 samples, 0.36%)</title><rect x="70.9270%" y="1765" width="0.3639%" height="15" fill="rgb(237,21,10)" fg:x="41233899027" fg:w="211581890"/><text x="71.1770%" y="1775.50"></text></g><g><title>filemap_get_read_batch (48,691,853 samples, 0.08%)</title><rect x="71.2968%" y="1765" width="0.0838%" height="15" fill="rgb(218,43,11)" fg:x="41448922826" fg:w="48691853"/><text x="71.5468%" y="1775.50"></text></g><g><title>dequeue_task (6,951,298 samples, 0.01%)</title><rect x="71.3863%" y="1701" width="0.0120%" height="15" fill="rgb(218,221,29)" fg:x="41500912681" fg:w="6951298"/><text x="71.6363%" y="1711.50"></text></g><g><title>dequeue_task_fair (6,951,298 samples, 0.01%)</title><rect x="71.3863%" y="1685" width="0.0120%" height="15" fill="rgb(214,118,42)" fg:x="41500912681" fg:w="6951298"/><text x="71.6363%" y="1695.50"></text></g><g><title>dequeue_entity (6,951,298 samples, 0.01%)</title><rect x="71.3863%" y="1669" width="0.0120%" height="15" fill="rgb(251,200,26)" fg:x="41500912681" fg:w="6951298"/><text x="71.6363%" y="1679.50"></text></g><g><title>pick_next_task (5,888,944 samples, 0.01%)</title><rect x="71.4027%" y="1701" width="0.0101%" height="15" fill="rgb(237,101,39)" fg:x="41510455395" fg:w="5888944"/><text x="71.6527%" y="1711.50"></text></g><g><title>__sched_text_start (28,019,826 samples, 0.05%)</title><rect x="71.3825%" y="1717" width="0.0482%" height="15" fill="rgb(251,117,11)" fg:x="41498727792" fg:w="28019826"/><text x="71.6325%" y="1727.50"></text></g><g><title>io_schedule (28,810,422 samples, 0.05%)</title><rect x="71.3825%" y="1749" width="0.0496%" height="15" fill="rgb(216,223,23)" fg:x="41498727792" fg:w="28810422"/><text x="71.6325%" y="1759.50"></text></g><g><title>schedule (28,810,422 samples, 0.05%)</title><rect x="71.3825%" y="1733" width="0.0496%" height="15" fill="rgb(251,54,12)" fg:x="41498727792" fg:w="28810422"/><text x="71.6325%" y="1743.50"></text></g><g><title>folio_wait_bit_common (30,380,313 samples, 0.05%)</title><rect x="71.3806%" y="1765" width="0.0523%" height="15" fill="rgb(254,176,54)" fg:x="41497614679" fg:w="30380313"/><text x="71.6306%" y="1775.50"></text></g><g><title>page_cache_next_miss (10,016,078 samples, 0.02%)</title><rect x="71.4383%" y="1733" width="0.0172%" height="15" fill="rgb(210,32,8)" fg:x="41531150115" fg:w="10016078"/><text x="71.6883%" y="1743.50"></text></g><g><title>lock_acquire (6,653,683 samples, 0.01%)</title><rect x="71.5083%" y="1621" width="0.0114%" height="15" fill="rgb(235,52,38)" fg:x="41571888115" fg:w="6653683"/><text x="71.7583%" y="1631.50"></text></g><g><title>prepare_scan_count (6,944,078 samples, 0.01%)</title><rect x="71.5281%" y="1557" width="0.0119%" height="15" fill="rgb(231,4,44)" fg:x="41583397240" fg:w="6944078"/><text x="71.7781%" y="1567.50"></text></g><g><title>mem_cgroup_flush_stats (6,944,078 samples, 0.01%)</title><rect x="71.5281%" y="1541" width="0.0119%" height="15" fill="rgb(249,2,32)" fg:x="41583397240" fg:w="6944078"/><text x="71.7781%" y="1551.50"></text></g><g><title>cgroup_rstat_flush (6,944,078 samples, 0.01%)</title><rect x="71.5281%" y="1525" width="0.0119%" height="15" fill="rgb(224,65,26)" fg:x="41583397240" fg:w="6944078"/><text x="71.7781%" y="1535.50"></text></g><g><title>cgroup_rstat_flush_locked (6,393,582 samples, 0.01%)</title><rect x="71.5291%" y="1509" width="0.0110%" height="15" fill="rgb(250,73,40)" fg:x="41583947736" fg:w="6393582"/><text x="71.7791%" y="1519.50"></text></g><g><title>__mod_memcg_lruvec_state (18,279,035 samples, 0.03%)</title><rect x="71.5703%" y="1461" width="0.0314%" height="15" fill="rgb(253,177,16)" fg:x="41607908490" fg:w="18279035"/><text x="71.8203%" y="1471.50"></text></g><g><title>__mod_lruvec_state (19,822,063 samples, 0.03%)</title><rect x="71.5703%" y="1477" width="0.0341%" height="15" fill="rgb(217,32,34)" fg:x="41607908490" fg:w="19822063"/><text x="71.8203%" y="1487.50"></text></g><g><title>_raw_spin_unlock_irq (7,572,796 samples, 0.01%)</title><rect x="71.6071%" y="1477" width="0.0130%" height="15" fill="rgb(212,7,10)" fg:x="41629321178" fg:w="7572796"/><text x="71.8571%" y="1487.50"></text></g><g><title>do_raw_spin_lock (8,885,995 samples, 0.02%)</title><rect x="71.6214%" y="1445" width="0.0153%" height="15" fill="rgb(245,89,8)" fg:x="41637635582" fg:w="8885995"/><text x="71.8714%" y="1455.50"></text></g><g><title>native_queued_spin_lock_slowpath (8,195,428 samples, 0.01%)</title><rect x="71.6226%" y="1429" width="0.0141%" height="15" fill="rgb(237,16,53)" fg:x="41638326149" fg:w="8195428"/><text x="71.8726%" y="1439.50"></text></g><g><title>__lock_acquire (9,406,733 samples, 0.02%)</title><rect x="71.6391%" y="1429" width="0.0162%" height="15" fill="rgb(250,204,30)" fg:x="41647886611" fg:w="9406733"/><text x="71.8891%" y="1439.50"></text></g><g><title>folio_lruvec_lock_irq (21,190,219 samples, 0.04%)</title><rect x="71.6202%" y="1477" width="0.0364%" height="15" fill="rgb(208,77,27)" fg:x="41636893974" fg:w="21190219"/><text x="71.8702%" y="1487.50"></text></g><g><title>_raw_spin_lock_irq (21,190,219 samples, 0.04%)</title><rect x="71.6202%" y="1461" width="0.0364%" height="15" fill="rgb(250,204,28)" fg:x="41636893974" fg:w="21190219"/><text x="71.8702%" y="1471.50"></text></g><g><title>lock_acquire (11,562,616 samples, 0.02%)</title><rect x="71.6367%" y="1445" width="0.0199%" height="15" fill="rgb(244,63,21)" fg:x="41646521577" fg:w="11562616"/><text x="71.8867%" y="1455.50"></text></g><g><title>page_cache_ext_isolate_folio (60,962,831 samples, 0.10%)</title><rect x="71.5610%" y="1493" width="0.1049%" height="15" fill="rgb(236,85,44)" fg:x="41602494041" fg:w="60962831"/><text x="71.8110%" y="1503.50"></text></g><g><title>lock_acquire (6,049,913 samples, 0.01%)</title><rect x="71.6906%" y="1413" width="0.0104%" height="15" fill="rgb(215,98,4)" fg:x="41677820289" fg:w="6049913"/><text x="71.9406%" y="1423.50"></text></g><g><title>folio_batch_move_lru (15,781,774 samples, 0.03%)</title><rect x="71.6814%" y="1445" width="0.0271%" height="15" fill="rgb(235,38,11)" fg:x="41672499171" fg:w="15781774"/><text x="71.9314%" y="1455.50"></text></g><g><title>lru_add_fn (13,561,836 samples, 0.02%)</title><rect x="71.6852%" y="1429" width="0.0233%" height="15" fill="rgb(254,186,25)" fg:x="41674719109" fg:w="13561836"/><text x="71.9352%" y="1439.50"></text></g><g><title>folio_add_lru (24,305,157 samples, 0.04%)</title><rect x="71.6746%" y="1461" width="0.0418%" height="15" fill="rgb(225,55,31)" fg:x="41668534395" fg:w="24305157"/><text x="71.9246%" y="1471.50"></text></g><g><title>__mem_cgroup_uncharge_list (10,669,739 samples, 0.02%)</title><rect x="71.7499%" y="1445" width="0.0184%" height="15" fill="rgb(211,15,21)" fg:x="41712329472" fg:w="10669739"/><text x="71.9999%" y="1455.50"></text></g><g><title>uncharge_folio (8,290,653 samples, 0.01%)</title><rect x="71.7540%" y="1429" width="0.0143%" height="15" fill="rgb(215,187,41)" fg:x="41714708558" fg:w="8290653"/><text x="72.0040%" y="1439.50"></text></g><g><title>__mod_lruvec_page_state (10,172,842 samples, 0.02%)</title><rect x="71.7769%" y="1397" width="0.0175%" height="15" fill="rgb(248,69,32)" fg:x="41728016215" fg:w="10172842"/><text x="72.0269%" y="1407.50"></text></g><g><title>filemap_unaccount_folio (10,966,359 samples, 0.02%)</title><rect x="71.7769%" y="1413" width="0.0189%" height="15" fill="rgb(252,102,52)" fg:x="41728016215" fg:w="10966359"/><text x="72.0269%" y="1423.50"></text></g><g><title>do_raw_write_lock (378,904,860 samples, 0.65%)</title><rect x="71.8439%" y="1365" width="0.6518%" height="15" fill="rgb(253,140,32)" fg:x="41766942767" fg:w="378904860"/><text x="72.0939%" y="1375.50"></text></g><g><title>queued_write_lock_slowpath (373,425,575 samples, 0.64%)</title><rect x="71.8533%" y="1349" width="0.6423%" height="15" fill="rgb(216,56,42)" fg:x="41772422052" fg:w="373425575"/><text x="72.1033%" y="1359.50"></text></g><g><title>native_queued_spin_lock_slowpath (134,715,851 samples, 0.23%)</title><rect x="72.2639%" y="1333" width="0.2317%" height="15" fill="rgb(216,184,14)" fg:x="42011131776" fg:w="134715851"/><text x="72.5139%" y="1343.50"></text></g><g><title>__lock_acquire (14,503,454 samples, 0.02%)</title><rect x="72.4969%" y="1349" width="0.0249%" height="15" fill="rgb(237,187,27)" fg:x="42146608635" fg:w="14503454"/><text x="72.7469%" y="1359.50"></text></g><g><title>cache_ext_ds_registry_write_lock (396,415,294 samples, 0.68%)</title><rect x="71.8427%" y="1397" width="0.6819%" height="15" fill="rgb(219,65,3)" fg:x="41766269154" fg:w="396415294"/><text x="72.0927%" y="1407.50"></text></g><g><title>_raw_write_lock (395,741,681 samples, 0.68%)</title><rect x="71.8439%" y="1381" width="0.6807%" height="15" fill="rgb(245,83,25)" fg:x="41766942767" fg:w="395741681"/><text x="72.0939%" y="1391.50"></text></g><g><title>lock_acquire (16,836,821 samples, 0.03%)</title><rect x="72.4956%" y="1365" width="0.0290%" height="15" fill="rgb(214,205,45)" fg:x="42145847627" fg:w="16836821"/><text x="72.7456%" y="1375.50"></text></g><g><title>__unfreeze_partials (6,719,525 samples, 0.01%)</title><rect x="72.5644%" y="1317" width="0.0116%" height="15" fill="rgb(241,20,18)" fg:x="42185842704" fg:w="6719525"/><text x="72.8144%" y="1327.50"></text></g><g><title>put_cpu_partial (12,869,537 samples, 0.02%)</title><rect x="72.5618%" y="1333" width="0.0221%" height="15" fill="rgb(232,163,23)" fg:x="42184296586" fg:w="12869537"/><text x="72.8118%" y="1343.50"></text></g><g><title>__kmem_cache_free (20,492,942 samples, 0.04%)</title><rect x="72.5591%" y="1365" width="0.0353%" height="15" fill="rgb(214,5,46)" fg:x="42182756421" fg:w="20492942"/><text x="72.8091%" y="1375.50"></text></g><g><title>__slab_free (20,492,942 samples, 0.04%)</title><rect x="72.5591%" y="1349" width="0.0353%" height="15" fill="rgb(229,78,17)" fg:x="42182756421" fg:w="20492942"/><text x="72.8091%" y="1359.50"></text></g><g><title>slab_update_freelist (6,083,240 samples, 0.01%)</title><rect x="72.5839%" y="1333" width="0.0105%" height="15" fill="rgb(248,89,10)" fg:x="42197166123" fg:w="6083240"/><text x="72.8339%" y="1343.50"></text></g><g><title>cache_ext_list_node_free (39,745,868 samples, 0.07%)</title><rect x="72.5272%" y="1397" width="0.0684%" height="15" fill="rgb(248,54,15)" fg:x="42164203995" fg:w="39745868"/><text x="72.7772%" y="1407.50"></text></g><g><title>kfree (39,745,868 samples, 0.07%)</title><rect x="72.5272%" y="1381" width="0.0684%" height="15" fill="rgb(223,116,6)" fg:x="42164203995" fg:w="39745868"/><text x="72.7772%" y="1391.50"></text></g><g><title>__slab_free (9,079,272 samples, 0.02%)</title><rect x="72.6004%" y="1365" width="0.0156%" height="15" fill="rgb(205,125,38)" fg:x="42206750750" fg:w="9079272"/><text x="72.8504%" y="1375.50"></text></g><g><title>__kmem_cache_free (14,404,366 samples, 0.02%)</title><rect x="72.6004%" y="1381" width="0.0248%" height="15" fill="rgb(251,78,38)" fg:x="42206750750" fg:w="14404366"/><text x="72.8504%" y="1391.50"></text></g><g><title>valid_folios_del (484,288,462 samples, 0.83%)</title><rect x="71.7970%" y="1413" width="0.8330%" height="15" fill="rgb(253,78,28)" fg:x="41739721536" fg:w="484288462"/><text x="72.0470%" y="1423.50"></text></g><g><title>kfree (20,060,135 samples, 0.03%)</title><rect x="72.5956%" y="1397" width="0.0345%" height="15" fill="rgb(209,120,3)" fg:x="42203949863" fg:w="20060135"/><text x="72.8456%" y="1407.50"></text></g><g><title>xas_init_marks (18,012,742 samples, 0.03%)</title><rect x="72.6301%" y="1413" width="0.0310%" height="15" fill="rgb(238,229,9)" fg:x="42224009998" fg:w="18012742"/><text x="72.8801%" y="1423.50"></text></g><g><title>xas_clear_mark (18,012,742 samples, 0.03%)</title><rect x="72.6301%" y="1397" width="0.0310%" height="15" fill="rgb(253,159,18)" fg:x="42224009998" fg:w="18012742"/><text x="72.8801%" y="1407.50"></text></g><g><title>__filemap_remove_folio (548,162,324 samples, 0.94%)</title><rect x="71.7730%" y="1429" width="0.9429%" height="15" fill="rgb(244,42,34)" fg:x="41725774570" fg:w="548162324"/><text x="72.0230%" y="1439.50"></text></g><g><title>xas_store (31,914,154 samples, 0.05%)</title><rect x="72.6610%" y="1413" width="0.0549%" height="15" fill="rgb(224,8,7)" fg:x="42242022740" fg:w="31914154"/><text x="72.9110%" y="1423.50"></text></g><g><title>xas_create (29,131,712 samples, 0.05%)</title><rect x="72.6658%" y="1397" width="0.0501%" height="15" fill="rgb(210,201,45)" fg:x="42244805182" fg:w="29131712"/><text x="72.9158%" y="1407.50"></text></g><g><title>do_raw_spin_lock (127,602,451 samples, 0.22%)</title><rect x="72.7159%" y="1413" width="0.2195%" height="15" fill="rgb(252,185,21)" fg:x="42273936894" fg:w="127602451"/><text x="72.9659%" y="1423.50"></text></g><g><title>native_queued_spin_lock_slowpath (122,219,209 samples, 0.21%)</title><rect x="72.7252%" y="1397" width="0.2102%" height="15" fill="rgb(223,131,1)" fg:x="42279320136" fg:w="122219209"/><text x="72.9752%" y="1407.50"></text></g><g><title>_raw_spin_lock (132,638,548 samples, 0.23%)</title><rect x="72.7159%" y="1429" width="0.2282%" height="15" fill="rgb(245,141,16)" fg:x="42273936894" fg:w="132638548"/><text x="72.9659%" y="1439.50"></text></g><g><title>do_raw_spin_lock (7,037,316 samples, 0.01%)</title><rect x="72.9441%" y="1413" width="0.0121%" height="15" fill="rgb(229,55,45)" fg:x="42406575442" fg:w="7037316"/><text x="73.1941%" y="1423.50"></text></g><g><title>_raw_spin_lock_irq (10,077,498 samples, 0.02%)</title><rect x="72.9441%" y="1429" width="0.0173%" height="15" fill="rgb(208,92,15)" fg:x="42406575442" fg:w="10077498"/><text x="73.1941%" y="1439.50"></text></g><g><title>_raw_spin_unlock_irq (15,558,012 samples, 0.03%)</title><rect x="72.9706%" y="1429" width="0.0268%" height="15" fill="rgb(234,185,47)" fg:x="42421976030" fg:w="15558012"/><text x="73.2206%" y="1439.50"></text></g><g><title>__remove_mapping (722,706,688 samples, 1.24%)</title><rect x="71.7683%" y="1445" width="1.2431%" height="15" fill="rgb(253,104,50)" fg:x="41722999211" fg:w="722706688"/><text x="72.0183%" y="1455.50"></text></g><g><title>workingset_eviction (7,411,102 samples, 0.01%)</title><rect x="72.9987%" y="1429" width="0.0127%" height="15" fill="rgb(205,70,7)" fg:x="42438294797" fg:w="7411102"/><text x="73.2487%" y="1439.50"></text></g><g><title>jbd2_journal_grab_journal_head (7,508,510 samples, 0.01%)</title><rect x="73.0167%" y="1397" width="0.0129%" height="15" fill="rgb(240,178,43)" fg:x="42448782133" fg:w="7508510"/><text x="73.2667%" y="1407.50"></text></g><g><title>cache_from_obj (7,526,611 samples, 0.01%)</title><rect x="73.0488%" y="1349" width="0.0129%" height="15" fill="rgb(214,112,2)" fg:x="42467467235" fg:w="7526611"/><text x="73.2988%" y="1359.50"></text></g><g><title>memcg_slab_free_hook (24,956,328 samples, 0.04%)</title><rect x="73.0618%" y="1349" width="0.0429%" height="15" fill="rgb(206,46,17)" fg:x="42474993846" fg:w="24956328"/><text x="73.3118%" y="1359.50"></text></g><g><title>obj_cgroup_uncharge (8,383,155 samples, 0.01%)</title><rect x="73.0903%" y="1333" width="0.0144%" height="15" fill="rgb(225,220,16)" fg:x="42491567019" fg:w="8383155"/><text x="73.3403%" y="1343.50"></text></g><g><title>refill_obj_stock (8,383,155 samples, 0.01%)</title><rect x="73.0903%" y="1317" width="0.0144%" height="15" fill="rgb(238,65,40)" fg:x="42491567019" fg:w="8383155"/><text x="73.3403%" y="1327.50"></text></g><g><title>kmem_cache_free (39,850,056 samples, 0.07%)</title><rect x="73.0400%" y="1365" width="0.0685%" height="15" fill="rgb(230,151,21)" fg:x="42462333688" fg:w="39850056"/><text x="73.2900%" y="1375.50"></text></g><g><title>filemap_release_folio (56,520,964 samples, 0.10%)</title><rect x="73.0127%" y="1445" width="0.0972%" height="15" fill="rgb(218,58,49)" fg:x="42446454154" fg:w="56520964"/><text x="73.2627%" y="1455.50"></text></g><g><title>ext4_release_folio (56,520,964 samples, 0.10%)</title><rect x="73.0127%" y="1429" width="0.0972%" height="15" fill="rgb(219,179,14)" fg:x="42446454154" fg:w="56520964"/><text x="73.2627%" y="1439.50"></text></g><g><title>jbd2_journal_try_to_free_buffers (54,192,985 samples, 0.09%)</title><rect x="73.0167%" y="1413" width="0.0932%" height="15" fill="rgb(223,72,1)" fg:x="42448782133" fg:w="54192985"/><text x="73.2667%" y="1423.50"></text></g><g><title>try_to_free_buffers (46,684,475 samples, 0.08%)</title><rect x="73.0296%" y="1397" width="0.0803%" height="15" fill="rgb(238,126,10)" fg:x="42456290643" fg:w="46684475"/><text x="73.2796%" y="1407.50"></text></g><g><title>free_buffer_head (40,641,430 samples, 0.07%)</title><rect x="73.0400%" y="1381" width="0.0699%" height="15" fill="rgb(224,206,38)" fg:x="42462333688" fg:w="40641430"/><text x="73.2900%" y="1391.50"></text></g><g><title>free_unref_page_list (6,976,653 samples, 0.01%)</title><rect x="73.1153%" y="1445" width="0.0120%" height="15" fill="rgb(212,201,54)" fg:x="42506129370" fg:w="6976653"/><text x="73.3653%" y="1455.50"></text></g><g><title>lock_acquire (8,211,677 samples, 0.01%)</title><rect x="73.1273%" y="1445" width="0.0141%" height="15" fill="rgb(218,154,48)" fg:x="42513106023" fg:w="8211677"/><text x="73.3773%" y="1455.50"></text></g><g><title>reclaim_pages (863,546,728 samples, 1.49%)</title><rect x="71.6659%" y="1493" width="1.4854%" height="15" fill="rgb(232,93,24)" fg:x="41663456872" fg:w="863546728"/><text x="71.9159%" y="1503.50"></text></g><g><title>reclaim_folio_list (860,494,917 samples, 1.48%)</title><rect x="71.6711%" y="1477" width="1.4801%" height="15" fill="rgb(245,30,21)" fg:x="41666508683" fg:w="860494917"/><text x="71.9211%" y="1487.50"></text></g><g><title>shrink_folio_list (833,576,804 samples, 1.43%)</title><rect x="71.7174%" y="1461" width="1.4338%" height="15" fill="rgb(242,148,29)" fg:x="41693426796" fg:w="833576804"/><text x="71.9674%" y="1471.50"></text></g><g><title>page_cache_ext_isolate_and_reclaim (1,003,442,675 samples, 1.73%)</title><rect x="71.5401%" y="1525" width="1.7260%" height="15" fill="rgb(244,153,54)" fg:x="41590341318" fg:w="1003442675"/><text x="71.7901%" y="1535.50"></text></g><g><title>__page_cache_ext_isolate_and_reclaim (1,003,442,675 samples, 1.73%)</title><rect x="71.5401%" y="1509" width="1.7260%" height="15" fill="rgb(252,87,22)" fg:x="41590341318" fg:w="1003442675"/><text x="71.7901%" y="1519.50"></text></g><g><title>valid_folios_exists_unlocked (66,780,393 samples, 0.11%)</title><rect x="73.1512%" y="1493" width="0.1149%" height="15" fill="rgb(210,51,29)" fg:x="42527003600" fg:w="66780393"/><text x="73.4012%" y="1503.50"></text></g><g><title>do_raw_write_lock (27,242,054 samples, 0.05%)</title><rect x="73.2900%" y="1397" width="0.0469%" height="15" fill="rgb(242,136,47)" fg:x="42607664710" fg:w="27242054"/><text x="73.5400%" y="1407.50"></text></g><g><title>queued_write_lock_slowpath (26,470,960 samples, 0.05%)</title><rect x="73.2913%" y="1381" width="0.0455%" height="15" fill="rgb(238,68,4)" fg:x="42608435804" fg:w="26470960"/><text x="73.5413%" y="1391.50"></text></g><g><title>native_queued_spin_lock_slowpath (10,095,268 samples, 0.02%)</title><rect x="73.3195%" y="1365" width="0.0174%" height="15" fill="rgb(242,161,30)" fg:x="42624811496" fg:w="10095268"/><text x="73.5695%" y="1375.50"></text></g><g><title>cache_ext_ds_registry_write_lock (30,364,136 samples, 0.05%)</title><rect x="73.2900%" y="1429" width="0.0522%" height="15" fill="rgb(218,58,44)" fg:x="42607664710" fg:w="30364136"/><text x="73.5400%" y="1439.50"></text></g><g><title>_raw_write_lock (30,364,136 samples, 0.05%)</title><rect x="73.2900%" y="1413" width="0.0522%" height="15" fill="rgb(252,125,32)" fg:x="42607664710" fg:w="30364136"/><text x="73.5400%" y="1423.50"></text></g><g><title>valid_folios_del (35,016,883 samples, 0.06%)</title><rect x="73.2875%" y="1445" width="0.0602%" height="15" fill="rgb(219,178,0)" fg:x="42606187775" fg:w="35016883"/><text x="73.5375%" y="1455.50"></text></g><g><title>__filemap_remove_folio (40,417,965 samples, 0.07%)</title><rect x="73.2809%" y="1461" width="0.0695%" height="15" fill="rgb(213,152,7)" fg:x="42602361783" fg:w="40417965"/><text x="73.5309%" y="1471.50"></text></g><g><title>do_raw_spin_lock (27,003,163 samples, 0.05%)</title><rect x="73.3504%" y="1445" width="0.0464%" height="15" fill="rgb(249,109,34)" fg:x="42642779748" fg:w="27003163"/><text x="73.6004%" y="1455.50"></text></g><g><title>native_queued_spin_lock_slowpath (25,425,194 samples, 0.04%)</title><rect x="73.3531%" y="1429" width="0.0437%" height="15" fill="rgb(232,96,21)" fg:x="42644357717" fg:w="25425194"/><text x="73.6031%" y="1439.50"></text></g><g><title>_raw_spin_lock (27,796,080 samples, 0.05%)</title><rect x="73.3504%" y="1461" width="0.0478%" height="15" fill="rgb(228,27,39)" fg:x="42642779748" fg:w="27796080"/><text x="73.6004%" y="1471.50"></text></g><g><title>__remove_mapping (74,487,847 samples, 0.13%)</title><rect x="73.2809%" y="1477" width="0.1281%" height="15" fill="rgb(211,182,52)" fg:x="42602361783" fg:w="74487847"/><text x="73.5309%" y="1487.50"></text></g><g><title>shrink_lruvec (1,094,177,642 samples, 1.88%)</title><rect x="71.5401%" y="1541" width="1.8821%" height="15" fill="rgb(234,178,38)" fg:x="41590341318" fg:w="1094177642"/><text x="71.7901%" y="1551.50">s..</text></g><g><title>shrink_list (90,734,967 samples, 0.16%)</title><rect x="73.2661%" y="1525" width="0.1561%" height="15" fill="rgb(221,111,3)" fg:x="42593783993" fg:w="90734967"/><text x="73.5161%" y="1535.50"></text></g><g><title>shrink_inactive_list (89,207,478 samples, 0.15%)</title><rect x="73.2687%" y="1509" width="0.1534%" height="15" fill="rgb(228,175,21)" fg:x="42595311482" fg:w="89207478"/><text x="73.5187%" y="1519.50"></text></g><g><title>shrink_folio_list (84,498,839 samples, 0.15%)</title><rect x="73.2768%" y="1493" width="0.1453%" height="15" fill="rgb(228,174,43)" fg:x="42600020121" fg:w="84498839"/><text x="73.5268%" y="1503.50"></text></g><g><title>filemap_release_folio (7,669,330 samples, 0.01%)</title><rect x="73.4090%" y="1477" width="0.0132%" height="15" fill="rgb(211,191,0)" fg:x="42676849630" fg:w="7669330"/><text x="73.6590%" y="1487.50"></text></g><g><title>ext4_release_folio (7,669,330 samples, 0.01%)</title><rect x="73.4090%" y="1461" width="0.0132%" height="15" fill="rgb(253,117,3)" fg:x="42676849630" fg:w="7669330"/><text x="73.6590%" y="1471.50"></text></g><g><title>jbd2_journal_try_to_free_buffers (6,783,818 samples, 0.01%)</title><rect x="73.4105%" y="1445" width="0.0117%" height="15" fill="rgb(241,127,19)" fg:x="42677735142" fg:w="6783818"/><text x="73.6605%" y="1455.50"></text></g><g><title>shrink_node_memcgs (1,108,804,067 samples, 1.91%)</title><rect x="71.5401%" y="1557" width="1.9073%" height="15" fill="rgb(218,103,12)" fg:x="41590341318" fg:w="1108804067"/><text x="71.7901%" y="1567.50">s..</text></g><g><title>shrink_slab (14,626,425 samples, 0.03%)</title><rect x="73.4222%" y="1541" width="0.0252%" height="15" fill="rgb(236,214,43)" fg:x="42684518960" fg:w="14626425"/><text x="73.6722%" y="1551.50"></text></g><g><title>shrink_slab_memcg (14,626,425 samples, 0.03%)</title><rect x="73.4222%" y="1525" width="0.0252%" height="15" fill="rgb(244,144,19)" fg:x="42684518960" fg:w="14626425"/><text x="73.6722%" y="1535.50"></text></g><g><title>do_shrink_slab (14,626,425 samples, 0.03%)</title><rect x="73.4222%" y="1509" width="0.0252%" height="15" fill="rgb(246,188,10)" fg:x="42684518960" fg:w="14626425"/><text x="73.6722%" y="1519.50"></text></g><g><title>count_shadow_nodes (14,626,425 samples, 0.03%)</title><rect x="73.4222%" y="1493" width="0.0252%" height="15" fill="rgb(212,193,33)" fg:x="42684518960" fg:w="14626425"/><text x="73.6722%" y="1503.50"></text></g><g><title>mem_cgroup_flush_stats (13,850,965 samples, 0.02%)</title><rect x="73.4235%" y="1477" width="0.0238%" height="15" fill="rgb(241,51,29)" fg:x="42685294420" fg:w="13850965"/><text x="73.6735%" y="1487.50"></text></g><g><title>cgroup_rstat_flush (13,850,965 samples, 0.02%)</title><rect x="73.4235%" y="1461" width="0.0238%" height="15" fill="rgb(211,58,19)" fg:x="42685294420" fg:w="13850965"/><text x="73.6735%" y="1471.50"></text></g><g><title>cgroup_rstat_flush_locked (13,850,965 samples, 0.02%)</title><rect x="73.4235%" y="1445" width="0.0238%" height="15" fill="rgb(229,111,26)" fg:x="42685294420" fg:w="13850965"/><text x="73.6735%" y="1455.50"></text></g><g><title>mem_cgroup_css_rstat_flush (6,161,657 samples, 0.01%)</title><rect x="73.4368%" y="1429" width="0.0106%" height="15" fill="rgb(213,115,40)" fg:x="42692983728" fg:w="6161657"/><text x="73.6868%" y="1439.50"></text></g><g><title>charge_memcg (1,141,960,868 samples, 1.96%)</title><rect x="71.4844%" y="1653" width="1.9643%" height="15" fill="rgb(209,56,44)" fg:x="41557975688" fg:w="1141960868"/><text x="71.7344%" y="1663.50">c..</text></g><g><title>try_charge_memcg (1,129,883,039 samples, 1.94%)</title><rect x="71.5052%" y="1637" width="1.9435%" height="15" fill="rgb(230,108,32)" fg:x="41570053517" fg:w="1129883039"/><text x="71.7552%" y="1647.50">t..</text></g><g><title>try_to_free_mem_cgroup_pages (1,116,539,316 samples, 1.92%)</title><rect x="71.5281%" y="1621" width="1.9206%" height="15" fill="rgb(216,165,31)" fg:x="41583397240" fg:w="1116539316"/><text x="71.7781%" y="1631.50">t..</text></g><g><title>do_try_to_free_pages (1,116,539,316 samples, 1.92%)</title><rect x="71.5281%" y="1605" width="1.9206%" height="15" fill="rgb(218,122,21)" fg:x="41583397240" fg:w="1116539316"/><text x="71.7781%" y="1615.50">d..</text></g><g><title>shrink_zones (1,116,539,316 samples, 1.92%)</title><rect x="71.5281%" y="1589" width="1.9206%" height="15" fill="rgb(223,224,47)" fg:x="41583397240" fg:w="1116539316"/><text x="71.7781%" y="1599.50">s..</text></g><g><title>shrink_node (1,116,539,316 samples, 1.92%)</title><rect x="71.5281%" y="1573" width="1.9206%" height="15" fill="rgb(238,102,44)" fg:x="41583397240" fg:w="1116539316"/><text x="71.7781%" y="1583.50">s..</text></g><g><title>lock_acquire (6,204,999 samples, 0.01%)</title><rect x="73.4523%" y="1637" width="0.0107%" height="15" fill="rgb(236,46,40)" fg:x="42702000518" fg:w="6204999"/><text x="73.7023%" y="1647.50"></text></g><g><title>lock_acquire (8,551,621 samples, 0.01%)</title><rect x="73.4707%" y="1621" width="0.0147%" height="15" fill="rgb(247,202,50)" fg:x="42712732001" fg:w="8551621"/><text x="73.7207%" y="1631.50"></text></g><g><title>percpu_ref_tryget (14,536,270 samples, 0.03%)</title><rect x="73.4694%" y="1637" width="0.0250%" height="15" fill="rgb(209,99,20)" fg:x="42711973523" fg:w="14536270"/><text x="73.7194%" y="1647.50"></text></g><g><title>get_mem_cgroup_from_mm (27,356,278 samples, 0.05%)</title><rect x="73.4487%" y="1653" width="0.0471%" height="15" fill="rgb(252,27,34)" fg:x="42699936556" fg:w="27356278"/><text x="73.6987%" y="1663.50"></text></g><g><title>__mem_cgroup_charge (1,174,469,385 samples, 2.02%)</title><rect x="71.4844%" y="1669" width="2.0202%" height="15" fill="rgb(215,206,23)" fg:x="41557975688" fg:w="1174469385"/><text x="71.7344%" y="1679.50">_..</text></g><g><title>lock_acquire (7,185,257 samples, 0.01%)</title><rect x="73.5074%" y="1653" width="0.0124%" height="15" fill="rgb(212,135,36)" fg:x="42734068422" fg:w="7185257"/><text x="73.7574%" y="1663.50"></text></g><g><title>__mod_lruvec_page_state (10,857,377 samples, 0.02%)</title><rect x="73.5046%" y="1669" width="0.0187%" height="15" fill="rgb(240,189,1)" fg:x="42732445073" fg:w="10857377"/><text x="73.7546%" y="1679.50"></text></g><g><title>_raw_spin_lock_irq (8,451,528 samples, 0.01%)</title><rect x="73.5269%" y="1669" width="0.0145%" height="15" fill="rgb(242,56,20)" fg:x="42745363885" fg:w="8451528"/><text x="73.7769%" y="1679.50"></text></g><g><title>lock_acquire (6,884,610 samples, 0.01%)</title><rect x="73.5295%" y="1653" width="0.0118%" height="15" fill="rgb(247,132,33)" fg:x="42746930803" fg:w="6884610"/><text x="73.7795%" y="1663.50"></text></g><g><title>get_partial_node (14,104,607 samples, 0.02%)</title><rect x="73.6077%" y="1621" width="0.0243%" height="15" fill="rgb(208,149,11)" fg:x="42792359681" fg:w="14104607"/><text x="73.8577%" y="1631.50"></text></g><g><title>___slab_alloc (34,890,994 samples, 0.06%)</title><rect x="73.5856%" y="1637" width="0.0600%" height="15" fill="rgb(211,33,11)" fg:x="42779517825" fg:w="34890994"/><text x="73.8356%" y="1647.50"></text></g><g><title>__lock_acquire (7,303,116 samples, 0.01%)</title><rect x="73.6523%" y="1605" width="0.0126%" height="15" fill="rgb(221,29,38)" fg:x="42818288576" fg:w="7303116"/><text x="73.9023%" y="1615.50"></text></g><g><title>lock_acquire (12,030,197 samples, 0.02%)</title><rect x="73.6469%" y="1621" width="0.0207%" height="15" fill="rgb(206,182,49)" fg:x="42815165352" fg:w="12030197"/><text x="73.8969%" y="1631.50"></text></g><g><title>fs_reclaim_acquire (14,905,654 samples, 0.03%)</title><rect x="73.6469%" y="1637" width="0.0256%" height="15" fill="rgb(216,140,1)" fg:x="42815165352" fg:w="14905654"/><text x="73.8969%" y="1647.50"></text></g><g><title>__kmem_cache_alloc_node (62,162,507 samples, 0.11%)</title><rect x="73.5690%" y="1653" width="0.1069%" height="15" fill="rgb(232,57,40)" fg:x="42769852390" fg:w="62162507"/><text x="73.8190%" y="1663.50"></text></g><g><title>kmalloc_trace (65,642,543 samples, 0.11%)</title><rect x="73.5663%" y="1669" width="0.1129%" height="15" fill="rgb(224,186,18)" fg:x="42768285672" fg:w="65642543"/><text x="73.8163%" y="1679.50"></text></g><g><title>__lock_acquire (18,808,827 samples, 0.03%)</title><rect x="73.7535%" y="1621" width="0.0324%" height="15" fill="rgb(215,121,11)" fg:x="42877109317" fg:w="18808827"/><text x="74.0035%" y="1631.50"></text></g><g><title>lock_acquire (20,290,222 samples, 0.03%)</title><rect x="73.7522%" y="1637" width="0.0349%" height="15" fill="rgb(245,147,10)" fg:x="42876371984" fg:w="20290222"/><text x="74.0022%" y="1647.50"></text></g><g><title>_raw_spin_lock (21,062,383 samples, 0.04%)</title><rect x="73.7522%" y="1653" width="0.0362%" height="15" fill="rgb(238,153,13)" fg:x="42876371984" fg:w="21062383"/><text x="74.0022%" y="1663.50"></text></g><g><title>lock_acquire (5,968,079 samples, 0.01%)</title><rect x="73.8399%" y="1557" width="0.0103%" height="15" fill="rgb(233,108,0)" fg:x="42927359048" fg:w="5968079"/><text x="74.0899%" y="1567.50"></text></g><g><title>get_partial_node (12,273,623 samples, 0.02%)</title><rect x="73.8299%" y="1589" width="0.0211%" height="15" fill="rgb(212,157,17)" fg:x="42921526658" fg:w="12273623"/><text x="74.0799%" y="1599.50"></text></g><g><title>put_cpu_partial (6,441,233 samples, 0.01%)</title><rect x="73.8399%" y="1573" width="0.0111%" height="15" fill="rgb(225,213,38)" fg:x="42927359048" fg:w="6441233"/><text x="74.0899%" y="1583.50"></text></g><g><title>___slab_alloc (28,001,671 samples, 0.05%)</title><rect x="73.8150%" y="1605" width="0.0482%" height="15" fill="rgb(248,16,11)" fg:x="42912882464" fg:w="28001671"/><text x="74.0650%" y="1615.50"></text></g><g><title>fs_reclaim_acquire (10,101,551 samples, 0.02%)</title><rect x="73.8632%" y="1605" width="0.0174%" height="15" fill="rgb(241,33,4)" fg:x="42940884135" fg:w="10101551"/><text x="74.1132%" y="1615.50"></text></g><g><title>__kmem_cache_alloc_node (50,548,185 samples, 0.09%)</title><rect x="73.7970%" y="1621" width="0.0869%" height="15" fill="rgb(222,26,43)" fg:x="42902393132" fg:w="50548185"/><text x="74.0470%" y="1631.50"></text></g><g><title>valid_folios_add (120,165,169 samples, 0.21%)</title><rect x="73.6818%" y="1669" width="0.2067%" height="15" fill="rgb(243,29,36)" fg:x="42835422552" fg:w="120165169"/><text x="73.9318%" y="1679.50"></text></g><g><title>cache_ext_list_node_alloc (55,952,255 samples, 0.10%)</title><rect x="73.7922%" y="1653" width="0.0962%" height="15" fill="rgb(241,9,27)" fg:x="42899635466" fg:w="55952255"/><text x="74.0422%" y="1663.50"></text></g><g><title>kmalloc_trace (55,952,255 samples, 0.10%)</title><rect x="73.7922%" y="1637" width="0.0962%" height="15" fill="rgb(205,117,26)" fg:x="42899635466" fg:w="55952255"/><text x="74.0422%" y="1647.50"></text></g><g><title>lock_acquire (12,962,423 samples, 0.02%)</title><rect x="73.8945%" y="1653" width="0.0223%" height="15" fill="rgb(209,80,39)" fg:x="42959102264" fg:w="12962423"/><text x="74.1445%" y="1663.50"></text></g><g><title>lock_release (6,209,934 samples, 0.01%)</title><rect x="73.9168%" y="1653" width="0.0107%" height="15" fill="rgb(239,155,6)" fg:x="42972064687" fg:w="6209934"/><text x="74.1668%" y="1663.50"></text></g><g><title>xa_get_order (23,120,676 samples, 0.04%)</title><rect x="73.8912%" y="1669" width="0.0398%" height="15" fill="rgb(212,104,12)" fg:x="42957150742" fg:w="23120676"/><text x="74.1412%" y="1679.50"></text></g><g><title>workingset_update_node (7,645,603 samples, 0.01%)</title><rect x="73.9383%" y="1653" width="0.0132%" height="15" fill="rgb(234,204,3)" fg:x="42984575763" fg:w="7645603"/><text x="74.1883%" y="1663.50"></text></g><g><title>lock_is_held_type (6,855,913 samples, 0.01%)</title><rect x="73.9397%" y="1637" width="0.0118%" height="15" fill="rgb(251,218,7)" fg:x="42985365453" fg:w="6855913"/><text x="74.1897%" y="1647.50"></text></g><g><title>__filemap_add_folio (1,440,249,760 samples, 2.48%)</title><rect x="71.4752%" y="1685" width="2.4774%" height="15" fill="rgb(221,81,32)" fg:x="41552626828" fg:w="1440249760"/><text x="71.7252%" y="1695.50">__..</text></g><g><title>xas_store (10,526,813 samples, 0.02%)</title><rect x="73.9345%" y="1669" width="0.0181%" height="15" fill="rgb(214,152,26)" fg:x="42982349775" fg:w="10526813"/><text x="74.1845%" y="1679.50"></text></g><g><title>lock_acquire (6,381,770 samples, 0.01%)</title><rect x="73.9805%" y="1637" width="0.0110%" height="15" fill="rgb(223,22,3)" fg:x="43009086630" fg:w="6381770"/><text x="74.2305%" y="1647.50"></text></g><g><title>lru_add_fn (18,602,604 samples, 0.03%)</title><rect x="73.9685%" y="1653" width="0.0320%" height="15" fill="rgb(207,174,7)" fg:x="43002109518" fg:w="18602604"/><text x="74.2185%" y="1663.50"></text></g><g><title>folio_batch_move_lru (28,091,274 samples, 0.05%)</title><rect x="73.9573%" y="1669" width="0.0483%" height="15" fill="rgb(224,19,52)" fg:x="42995591738" fg:w="28091274"/><text x="74.2073%" y="1679.50"></text></g><g><title>lock_acquire (6,561,865 samples, 0.01%)</title><rect x="74.0056%" y="1669" width="0.0113%" height="15" fill="rgb(228,24,14)" fg:x="43023683012" fg:w="6561865"/><text x="74.2556%" y="1679.50"></text></g><g><title>folio_add_lru (39,866,620 samples, 0.07%)</title><rect x="73.9550%" y="1685" width="0.0686%" height="15" fill="rgb(230,153,43)" fg:x="42994296887" fg:w="39866620"/><text x="74.2050%" y="1695.50"></text></g><g><title>lock_release (6,162,096 samples, 0.01%)</title><rect x="74.0519%" y="1669" width="0.0106%" height="15" fill="rgb(231,106,12)" fg:x="43050621205" fg:w="6162096"/><text x="74.3019%" y="1679.50"></text></g><g><title>filemap_add_folio (1,523,676,169 samples, 2.62%)</title><rect x="71.4741%" y="1701" width="2.6209%" height="15" fill="rgb(215,92,2)" fg:x="41551972453" fg:w="1523676169"/><text x="71.7241%" y="1711.50">fi..</text></g><g><title>workingset_refault (39,956,992 samples, 0.07%)</title><rect x="74.0262%" y="1685" width="0.0687%" height="15" fill="rgb(249,143,25)" fg:x="43035691630" fg:w="39956992"/><text x="74.2762%" y="1695.50"></text></g><g><title>workingset_test_recent (12,955,891 samples, 0.02%)</title><rect x="74.0727%" y="1669" width="0.0223%" height="15" fill="rgb(252,7,35)" fg:x="43062692731" fg:w="12955891"/><text x="74.3227%" y="1679.50"></text></g><g><title>clear_page_rep (61,880,150 samples, 0.11%)</title><rect x="74.1112%" y="1621" width="0.1064%" height="15" fill="rgb(216,69,40)" fg:x="43085057370" fg:w="61880150"/><text x="74.3612%" y="1631.50"></text></g><g><title>_raw_spin_trylock (8,747,942 samples, 0.02%)</title><rect x="74.2287%" y="1589" width="0.0150%" height="15" fill="rgb(240,36,33)" fg:x="43153364144" fg:w="8747942"/><text x="74.4787%" y="1599.50"></text></g><g><title>lock_acquire (7,589,628 samples, 0.01%)</title><rect x="74.2307%" y="1573" width="0.0131%" height="15" fill="rgb(231,128,14)" fg:x="43154522458" fg:w="7589628"/><text x="74.4807%" y="1583.50"></text></g><g><title>get_page_from_freelist (91,844,021 samples, 0.16%)</title><rect x="74.1050%" y="1637" width="0.1580%" height="15" fill="rgb(245,143,14)" fg:x="43081461438" fg:w="91844021"/><text x="74.3550%" y="1647.50"></text></g><g><title>rmqueue (26,367,939 samples, 0.05%)</title><rect x="74.2176%" y="1621" width="0.0454%" height="15" fill="rgb(222,130,28)" fg:x="43146937520" fg:w="26367939"/><text x="74.4676%" y="1631.50"></text></g><g><title>rmqueue_pcplist (25,542,108 samples, 0.04%)</title><rect x="74.2190%" y="1605" width="0.0439%" height="15" fill="rgb(212,10,48)" fg:x="43147763351" fg:w="25542108"/><text x="74.4690%" y="1615.50"></text></g><g><title>_raw_spin_unlock (11,193,373 samples, 0.02%)</title><rect x="74.2437%" y="1589" width="0.0193%" height="15" fill="rgb(254,118,45)" fg:x="43162112086" fg:w="11193373"/><text x="74.4937%" y="1599.50"></text></g><g><title>lock_release (11,193,373 samples, 0.02%)</title><rect x="74.2437%" y="1573" width="0.0193%" height="15" fill="rgb(228,6,45)" fg:x="43162112086" fg:w="11193373"/><text x="74.4937%" y="1583.50"></text></g><g><title>__alloc_pages (101,220,838 samples, 0.17%)</title><rect x="74.1003%" y="1653" width="0.1741%" height="15" fill="rgb(241,18,35)" fg:x="43078732028" fg:w="101220838"/><text x="74.3503%" y="1663.50"></text></g><g><title>prepare_alloc_pages (6,647,407 samples, 0.01%)</title><rect x="74.2630%" y="1637" width="0.0114%" height="15" fill="rgb(227,214,53)" fg:x="43173305459" fg:w="6647407"/><text x="74.5130%" y="1647.50"></text></g><g><title>filemap_alloc_folio (105,266,992 samples, 0.18%)</title><rect x="74.0950%" y="1701" width="0.1811%" height="15" fill="rgb(224,107,51)" fg:x="43075648622" fg:w="105266992"/><text x="74.3450%" y="1711.50"></text></g><g><title>folio_alloc (103,689,563 samples, 0.18%)</title><rect x="74.0977%" y="1685" width="0.1784%" height="15" fill="rgb(248,60,28)" fg:x="43077226051" fg:w="103689563"/><text x="74.3477%" y="1695.50"></text></g><g><title>alloc_pages (102,892,696 samples, 0.18%)</title><rect x="74.0991%" y="1669" width="0.1770%" height="15" fill="rgb(249,101,23)" fg:x="43078022918" fg:w="102892696"/><text x="74.3491%" y="1679.50"></text></g><g><title>amd_iommu_map_pages (12,268,958 samples, 0.02%)</title><rect x="74.3050%" y="1413" width="0.0211%" height="15" fill="rgb(228,51,19)" fg:x="43197732172" fg:w="12268958"/><text x="74.5550%" y="1423.50"></text></g><g><title>iommu_v1_map_pages (11,560,504 samples, 0.02%)</title><rect x="74.3062%" y="1397" width="0.0199%" height="15" fill="rgb(213,20,6)" fg:x="43198440626" fg:w="11560504"/><text x="74.5562%" y="1407.50"></text></g><g><title>__iommu_map_pages (14,270,377 samples, 0.02%)</title><rect x="74.3039%" y="1429" width="0.0245%" height="15" fill="rgb(212,124,10)" fg:x="43197103509" fg:w="14270377"/><text x="74.5539%" y="1439.50"></text></g><g><title>iommu_map_sg (16,316,411 samples, 0.03%)</title><rect x="74.3029%" y="1461" width="0.0281%" height="15" fill="rgb(248,3,40)" fg:x="43196533520" fg:w="16316411"/><text x="74.5529%" y="1471.50"></text></g><g><title>__iommu_map (15,746,422 samples, 0.03%)</title><rect x="74.3039%" y="1445" width="0.0271%" height="15" fill="rgb(223,178,23)" fg:x="43197103509" fg:w="15746422"/><text x="74.5539%" y="1455.50"></text></g><g><title>dma_map_sg_attrs (22,215,086 samples, 0.04%)</title><rect x="74.2940%" y="1509" width="0.0382%" height="15" fill="rgb(240,132,45)" fg:x="43191344145" fg:w="22215086"/><text x="74.5440%" y="1519.50"></text></g><g><title>__dma_map_sg_attrs (21,451,697 samples, 0.04%)</title><rect x="74.2953%" y="1493" width="0.0369%" height="15" fill="rgb(245,164,36)" fg:x="43192107534" fg:w="21451697"/><text x="74.5453%" y="1503.50"></text></g><g><title>iommu_dma_map_sg (21,451,697 samples, 0.04%)</title><rect x="74.2953%" y="1477" width="0.0369%" height="15" fill="rgb(231,188,53)" fg:x="43192107534" fg:w="21451697"/><text x="74.5453%" y="1487.50"></text></g><g><title>ata_qc_issue (23,698,096 samples, 0.04%)</title><rect x="74.2928%" y="1525" width="0.0408%" height="15" fill="rgb(237,198,39)" fg:x="43190657195" fg:w="23698096"/><text x="74.5428%" y="1535.50"></text></g><g><title>__ata_scsi_queuecmd (27,351,009 samples, 0.05%)</title><rect x="74.2893%" y="1541" width="0.0470%" height="15" fill="rgb(223,120,35)" fg:x="43188594897" fg:w="27351009"/><text x="74.5393%" y="1551.50"></text></g><g><title>ata_scsi_queuecmd (35,318,440 samples, 0.06%)</title><rect x="74.2893%" y="1557" width="0.0608%" height="15" fill="rgb(253,107,49)" fg:x="43188594897" fg:w="35318440"/><text x="74.5393%" y="1567.50"></text></g><g><title>blk_mq_dispatch_rq_list (52,148,960 samples, 0.09%)</title><rect x="74.2853%" y="1589" width="0.0897%" height="15" fill="rgb(216,44,31)" fg:x="43186285733" fg:w="52148960"/><text x="74.5353%" y="1599.50"></text></g><g><title>scsi_queue_rq (50,591,568 samples, 0.09%)</title><rect x="74.2880%" y="1573" width="0.0870%" height="15" fill="rgb(253,87,21)" fg:x="43187843125" fg:w="50591568"/><text x="74.5380%" y="1583.50"></text></g><g><title>sd_init_command (8,497,013 samples, 0.01%)</title><rect x="74.3604%" y="1557" width="0.0146%" height="15" fill="rgb(226,18,2)" fg:x="43229937680" fg:w="8497013"/><text x="74.6104%" y="1567.50"></text></g><g><title>scsi_alloc_sgtables (8,028,186 samples, 0.01%)</title><rect x="74.3612%" y="1541" width="0.0138%" height="15" fill="rgb(216,8,46)" fg:x="43230406507" fg:w="8028186"/><text x="74.6112%" y="1551.50"></text></g><g><title>__blk_mq_sched_dispatch_requests (58,926,610 samples, 0.10%)</title><rect x="74.2820%" y="1605" width="0.1014%" height="15" fill="rgb(226,140,39)" fg:x="43184368918" fg:w="58926610"/><text x="74.5320%" y="1615.50"></text></g><g><title>blk_mq_sched_dispatch_requests (60,119,157 samples, 0.10%)</title><rect x="74.2813%" y="1621" width="0.1034%" height="15" fill="rgb(221,194,54)" fg:x="43183944051" fg:w="60119157"/><text x="74.5313%" y="1631.50"></text></g><g><title>blk_mq_run_hw_queue (62,224,615 samples, 0.11%)</title><rect x="74.2813%" y="1637" width="0.1070%" height="15" fill="rgb(213,92,11)" fg:x="43183944051" fg:w="62224615"/><text x="74.5313%" y="1647.50"></text></g><g><title>__blk_flush_plug (66,415,254 samples, 0.11%)</title><rect x="74.2813%" y="1669" width="0.1142%" height="15" fill="rgb(229,162,46)" fg:x="43183944051" fg:w="66415254"/><text x="74.5313%" y="1679.50"></text></g><g><title>blk_mq_flush_plug_list (66,415,254 samples, 0.11%)</title><rect x="74.2813%" y="1653" width="0.1142%" height="15" fill="rgb(214,111,36)" fg:x="43183944051" fg:w="66415254"/><text x="74.5313%" y="1663.50"></text></g><g><title>blk_finish_plug (67,160,084 samples, 0.12%)</title><rect x="74.2813%" y="1685" width="0.1155%" height="15" fill="rgb(207,6,21)" fg:x="43183944051" fg:w="67160084"/><text x="74.5313%" y="1695.50"></text></g><g><title>__blk_mq_alloc_requests (7,513,370 samples, 0.01%)</title><rect x="74.4266%" y="1573" width="0.0129%" height="15" fill="rgb(213,127,38)" fg:x="43268424242" fg:w="7513370"/><text x="74.6766%" y="1583.50"></text></g><g><title>__submit_bio (15,651,791 samples, 0.03%)</title><rect x="74.4231%" y="1605" width="0.0269%" height="15" fill="rgb(238,118,32)" fg:x="43266375109" fg:w="15651791"/><text x="74.6731%" y="1615.50"></text></g><g><title>blk_mq_submit_bio (15,651,791 samples, 0.03%)</title><rect x="74.4231%" y="1589" width="0.0269%" height="15" fill="rgb(240,139,39)" fg:x="43266375109" fg:w="15651791"/><text x="74.6731%" y="1599.50"></text></g><g><title>submit_bio_noacct (18,448,645 samples, 0.03%)</title><rect x="74.4205%" y="1637" width="0.0317%" height="15" fill="rgb(235,10,37)" fg:x="43264875110" fg:w="18448645"/><text x="74.6705%" y="1647.50"></text></g><g><title>submit_bio_noacct_nocheck (17,661,970 samples, 0.03%)</title><rect x="74.4218%" y="1621" width="0.0304%" height="15" fill="rgb(249,171,38)" fg:x="43265661785" fg:w="17661970"/><text x="74.6718%" y="1631.50"></text></g><g><title>submit_bio (18,891,927 samples, 0.03%)</title><rect x="74.4205%" y="1653" width="0.0325%" height="15" fill="rgb(242,144,32)" fg:x="43264875110" fg:w="18891927"/><text x="74.6705%" y="1663.50"></text></g><g><title>lock_acquire (10,146,352 samples, 0.02%)</title><rect x="74.4530%" y="1637" width="0.0175%" height="15" fill="rgb(217,117,21)" fg:x="43283767037" fg:w="10146352"/><text x="74.7030%" y="1647.50"></text></g><g><title>ext4_readahead (45,610,699 samples, 0.08%)</title><rect x="74.3981%" y="1685" width="0.0785%" height="15" fill="rgb(249,87,1)" fg:x="43251865171" fg:w="45610699"/><text x="74.6481%" y="1695.50"></text></g><g><title>ext4_mpage_readpages (44,815,555 samples, 0.08%)</title><rect x="74.3995%" y="1669" width="0.0771%" height="15" fill="rgb(248,196,48)" fg:x="43252660315" fg:w="44815555"/><text x="74.6495%" y="1679.50"></text></g><g><title>xa_load (13,708,833 samples, 0.02%)</title><rect x="74.4530%" y="1653" width="0.0236%" height="15" fill="rgb(251,206,33)" fg:x="43283767037" fg:w="13708833"/><text x="74.7030%" y="1663.50"></text></g><g><title>read_pages (118,048,038 samples, 0.20%)</title><rect x="74.2761%" y="1701" width="0.2031%" height="15" fill="rgb(232,141,28)" fg:x="43180915614" fg:w="118048038"/><text x="74.5261%" y="1711.50"></text></g><g><title>__lock_acquire (34,086,605 samples, 0.06%)</title><rect x="74.5273%" y="1669" width="0.0586%" height="15" fill="rgb(209,167,14)" fg:x="43327007238" fg:w="34086605"/><text x="74.7773%" y="1679.50"></text></g><g><title>lock_acquire (70,503,568 samples, 0.12%)</title><rect x="74.4907%" y="1685" width="0.1213%" height="15" fill="rgb(225,11,50)" fg:x="43305679709" fg:w="70503568"/><text x="74.7407%" y="1695.50"></text></g><g><title>trace_lock_acquire (15,089,434 samples, 0.03%)</title><rect x="74.5860%" y="1669" width="0.0260%" height="15" fill="rgb(209,50,20)" fg:x="43361093843" fg:w="15089434"/><text x="74.8360%" y="1679.50"></text></g><g><title>rcu_is_watching (7,652,990 samples, 0.01%)</title><rect x="74.5988%" y="1653" width="0.0132%" height="15" fill="rgb(212,17,46)" fg:x="43368530287" fg:w="7652990"/><text x="74.8488%" y="1663.50"></text></g><g><title>lock_release (42,534,501 samples, 0.07%)</title><rect x="74.6119%" y="1685" width="0.0732%" height="15" fill="rgb(216,101,39)" fg:x="43376183277" fg:w="42534501"/><text x="74.8619%" y="1695.50"></text></g><g><title>trace_lock_release (14,010,947 samples, 0.02%)</title><rect x="74.6610%" y="1669" width="0.0241%" height="15" fill="rgb(212,228,48)" fg:x="43404706831" fg:w="14010947"/><text x="74.9110%" y="1679.50"></text></g><g><title>rcu_is_watching (8,392,163 samples, 0.01%)</title><rect x="74.6707%" y="1653" width="0.0144%" height="15" fill="rgb(250,6,50)" fg:x="43410325615" fg:w="8392163"/><text x="74.9207%" y="1663.50"></text></g><g><title>xa_load (143,747,153 samples, 0.25%)</title><rect x="74.4874%" y="1701" width="0.2473%" height="15" fill="rgb(250,160,48)" fg:x="43303799725" fg:w="143747153"/><text x="74.7374%" y="1711.50"></text></g><g><title>xas_load (28,064,157 samples, 0.05%)</title><rect x="74.6864%" y="1685" width="0.0483%" height="15" fill="rgb(244,216,33)" fg:x="43419482721" fg:w="28064157"/><text x="74.9364%" y="1695.50"></text></g><g><title>xas_start (7,059,700 samples, 0.01%)</title><rect x="74.7225%" y="1669" width="0.0121%" height="15" fill="rgb(207,157,5)" fg:x="43440487178" fg:w="7059700"/><text x="74.9725%" y="1679.50"></text></g><g><title>page_cache_async_ra (1,920,565,773 samples, 3.30%)</title><rect x="71.4337%" y="1765" width="3.3036%" height="15" fill="rgb(228,199,8)" fg:x="41528486898" fg:w="1920565773"/><text x="71.6837%" y="1775.50">pag..</text></g><g><title>ondemand_readahead (1,918,592,564 samples, 3.30%)</title><rect x="71.4371%" y="1749" width="3.3002%" height="15" fill="rgb(227,80,20)" fg:x="41530460107" fg:w="1918592564"/><text x="71.6871%" y="1759.50">ond..</text></g><g><title>page_cache_ra_order (1,907,886,478 samples, 3.28%)</title><rect x="71.4555%" y="1733" width="3.2818%" height="15" fill="rgb(222,9,33)" fg:x="41541166193" fg:w="1907886478"/><text x="71.7055%" y="1743.50">pag..</text></g><g><title>page_cache_ra_unbounded (1,907,886,478 samples, 3.28%)</title><rect x="71.4555%" y="1717" width="3.2818%" height="15" fill="rgb(239,44,28)" fg:x="41541166193" fg:w="1907886478"/><text x="71.7055%" y="1727.50">pag..</text></g><g><title>prepare_scan_count (6,157,334 samples, 0.01%)</title><rect x="74.7906%" y="1557" width="0.0106%" height="15" fill="rgb(249,187,43)" fg:x="43480046316" fg:w="6157334"/><text x="75.0406%" y="1567.50"></text></g><g><title>mem_cgroup_flush_stats (6,157,334 samples, 0.01%)</title><rect x="74.7906%" y="1541" width="0.0106%" height="15" fill="rgb(216,141,28)" fg:x="43480046316" fg:w="6157334"/><text x="75.0406%" y="1551.50"></text></g><g><title>cgroup_rstat_flush (6,157,334 samples, 0.01%)</title><rect x="74.7906%" y="1525" width="0.0106%" height="15" fill="rgb(230,154,53)" fg:x="43480046316" fg:w="6157334"/><text x="75.0406%" y="1535.50"></text></g><g><title>cgroup_rstat_flush_locked (6,157,334 samples, 0.01%)</title><rect x="74.7906%" y="1509" width="0.0106%" height="15" fill="rgb(227,82,4)" fg:x="43480046316" fg:w="6157334"/><text x="75.0406%" y="1519.50"></text></g><g><title>__mod_memcg_lruvec_state (14,768,720 samples, 0.03%)</title><rect x="74.8263%" y="1461" width="0.0254%" height="15" fill="rgb(220,107,16)" fg:x="43500825401" fg:w="14768720"/><text x="75.0763%" y="1471.50"></text></g><g><title>__mod_lruvec_state (16,361,758 samples, 0.03%)</title><rect x="74.8263%" y="1477" width="0.0281%" height="15" fill="rgb(207,187,2)" fg:x="43500825401" fg:w="16361758"/><text x="75.0763%" y="1487.50"></text></g><g><title>do_raw_spin_lock (7,893,858 samples, 0.01%)</title><rect x="74.8659%" y="1445" width="0.0136%" height="15" fill="rgb(210,162,52)" fg:x="43523826204" fg:w="7893858"/><text x="75.1159%" y="1455.50"></text></g><g><title>native_queued_spin_lock_slowpath (7,087,791 samples, 0.01%)</title><rect x="74.8673%" y="1429" width="0.0122%" height="15" fill="rgb(217,216,49)" fg:x="43524632271" fg:w="7087791"/><text x="75.1173%" y="1439.50"></text></g><g><title>__lock_acquire (6,598,387 samples, 0.01%)</title><rect x="74.8858%" y="1429" width="0.0113%" height="15" fill="rgb(218,146,49)" fg:x="43535395927" fg:w="6598387"/><text x="75.1358%" y="1439.50"></text></g><g><title>folio_lruvec_lock_irq (19,690,477 samples, 0.03%)</title><rect x="74.8646%" y="1477" width="0.0339%" height="15" fill="rgb(216,55,40)" fg:x="43523072951" fg:w="19690477"/><text x="75.1146%" y="1487.50"></text></g><g><title>_raw_spin_lock_irq (18,937,224 samples, 0.03%)</title><rect x="74.8659%" y="1461" width="0.0326%" height="15" fill="rgb(208,196,21)" fg:x="43523826204" fg:w="18937224"/><text x="75.1159%" y="1471.50"></text></g><g><title>lock_acquire (11,043,366 samples, 0.02%)</title><rect x="74.8795%" y="1445" width="0.0190%" height="15" fill="rgb(242,117,42)" fg:x="43531720062" fg:w="11043366"/><text x="75.1295%" y="1455.50"></text></g><g><title>page_cache_ext_isolate_folio (52,119,447 samples, 0.09%)</title><rect x="74.8164%" y="1493" width="0.0897%" height="15" fill="rgb(210,11,23)" fg:x="43495049001" fg:w="52119447"/><text x="75.0664%" y="1503.50"></text></g><g><title>lru_add_fn (6,695,874 samples, 0.01%)</title><rect x="74.9176%" y="1429" width="0.0115%" height="15" fill="rgb(217,110,2)" fg:x="43553903106" fg:w="6695874"/><text x="75.1676%" y="1439.50"></text></g><g><title>folio_batch_move_lru (11,091,041 samples, 0.02%)</title><rect x="74.9112%" y="1445" width="0.0191%" height="15" fill="rgb(229,77,54)" fg:x="43550178999" fg:w="11091041"/><text x="75.1612%" y="1455.50"></text></g><g><title>folio_add_lru (19,592,060 samples, 0.03%)</title><rect x="74.9085%" y="1461" width="0.0337%" height="15" fill="rgb(218,53,16)" fg:x="43548589054" fg:w="19592060"/><text x="75.1585%" y="1471.50"></text></g><g><title>__mem_cgroup_uncharge_list (9,542,986 samples, 0.02%)</title><rect x="74.9861%" y="1445" width="0.0164%" height="15" fill="rgb(215,38,13)" fg:x="43593690782" fg:w="9542986"/><text x="75.2361%" y="1455.50"></text></g><g><title>uncharge_folio (6,783,355 samples, 0.01%)</title><rect x="74.9908%" y="1429" width="0.0117%" height="15" fill="rgb(235,42,18)" fg:x="43596450413" fg:w="6783355"/><text x="75.2408%" y="1439.50"></text></g><g><title>__mod_lruvec_page_state (8,338,350 samples, 0.01%)</title><rect x="75.0167%" y="1397" width="0.0143%" height="15" fill="rgb(219,66,54)" fg:x="43611521007" fg:w="8338350"/><text x="75.2667%" y="1407.50"></text></g><g><title>filemap_unaccount_folio (10,585,172 samples, 0.02%)</title><rect x="75.0154%" y="1413" width="0.0182%" height="15" fill="rgb(222,205,4)" fg:x="43610765995" fg:w="10585172"/><text x="75.2654%" y="1423.50"></text></g><g><title>do_raw_write_lock (433,048,517 samples, 0.74%)</title><rect x="75.0822%" y="1365" width="0.7449%" height="15" fill="rgb(227,213,46)" fg:x="43649585414" fg:w="433048517"/><text x="75.3322%" y="1375.50"></text></g><g><title>queued_write_lock_slowpath (427,044,498 samples, 0.73%)</title><rect x="75.0925%" y="1349" width="0.7346%" height="15" fill="rgb(250,145,42)" fg:x="43655589433" fg:w="427044498"/><text x="75.3425%" y="1359.50"></text></g><g><title>native_queued_spin_lock_slowpath (197,993,993 samples, 0.34%)</title><rect x="75.4865%" y="1333" width="0.3406%" height="15" fill="rgb(219,15,2)" fg:x="43884639938" fg:w="197993993"/><text x="75.7365%" y="1343.50"></text></g><g><title>__lock_acquire (8,555,605 samples, 0.01%)</title><rect x="75.8297%" y="1349" width="0.0147%" height="15" fill="rgb(231,181,52)" fg:x="44084152063" fg:w="8555605"/><text x="76.0797%" y="1359.50"></text></g><g><title>cache_ext_ds_registry_write_lock (443,918,168 samples, 0.76%)</title><rect x="75.0822%" y="1397" width="0.7636%" height="15" fill="rgb(235,1,42)" fg:x="43649585414" fg:w="443918168"/><text x="75.3322%" y="1407.50"></text></g><g><title>_raw_write_lock (443,918,168 samples, 0.76%)</title><rect x="75.0822%" y="1381" width="0.7636%" height="15" fill="rgb(249,88,27)" fg:x="43649585414" fg:w="443918168"/><text x="75.3322%" y="1391.50"></text></g><g><title>lock_acquire (10,869,651 samples, 0.02%)</title><rect x="75.8271%" y="1365" width="0.0187%" height="15" fill="rgb(235,145,16)" fg:x="44082633931" fg:w="10869651"/><text x="76.0771%" y="1375.50"></text></g><g><title>__unfreeze_partials (9,949,580 samples, 0.02%)</title><rect x="75.8951%" y="1317" width="0.0171%" height="15" fill="rgb(237,114,19)" fg:x="44122139974" fg:w="9949580"/><text x="76.1451%" y="1327.50"></text></g><g><title>put_cpu_partial (18,160,537 samples, 0.03%)</title><rect x="75.8912%" y="1333" width="0.0312%" height="15" fill="rgb(238,51,50)" fg:x="44119906782" fg:w="18160537"/><text x="76.1412%" y="1343.50"></text></g><g><title>__slab_free (24,899,601 samples, 0.04%)</title><rect x="75.8887%" y="1349" width="0.0428%" height="15" fill="rgb(205,194,25)" fg:x="44118430909" fg:w="24899601"/><text x="76.1387%" y="1359.50"></text></g><g><title>__kmem_cache_free (28,616,718 samples, 0.05%)</title><rect x="75.8887%" y="1365" width="0.0492%" height="15" fill="rgb(215,203,17)" fg:x="44118430909" fg:w="28616718"/><text x="76.1387%" y="1375.50"></text></g><g><title>cache_ext_list_node_free (51,192,685 samples, 0.09%)</title><rect x="75.8511%" y="1397" width="0.0881%" height="15" fill="rgb(233,112,49)" fg:x="44096608435" fg:w="51192685"/><text x="76.1011%" y="1407.50"></text></g><g><title>kfree (51,192,685 samples, 0.09%)</title><rect x="75.8511%" y="1381" width="0.0881%" height="15" fill="rgb(241,130,26)" fg:x="44096608435" fg:w="51192685"/><text x="76.1011%" y="1391.50"></text></g><g><title>put_cpu_partial (6,952,812 samples, 0.01%)</title><rect x="75.9457%" y="1349" width="0.0120%" height="15" fill="rgb(252,223,19)" fg:x="44151592014" fg:w="6952812"/><text x="76.1957%" y="1359.50"></text></g><g><title>__slab_free (9,915,995 samples, 0.02%)</title><rect x="75.9457%" y="1365" width="0.0171%" height="15" fill="rgb(211,95,25)" fg:x="44151592014" fg:w="9915995"/><text x="76.1957%" y="1375.50"></text></g><g><title>valid_folios_del (545,531,447 samples, 0.94%)</title><rect x="75.0337%" y="1413" width="0.9384%" height="15" fill="rgb(251,182,27)" fg:x="43621351167" fg:w="545531447"/><text x="75.2837%" y="1423.50"></text></g><g><title>kfree (19,081,494 samples, 0.03%)</title><rect x="75.9392%" y="1397" width="0.0328%" height="15" fill="rgb(238,24,4)" fg:x="44147801120" fg:w="19081494"/><text x="76.1892%" y="1407.50"></text></g><g><title>__kmem_cache_free (16,725,057 samples, 0.03%)</title><rect x="75.9433%" y="1381" width="0.0288%" height="15" fill="rgb(224,220,25)" fg:x="44150157557" fg:w="16725057"/><text x="76.1933%" y="1391.50"></text></g><g><title>xas_init_marks (15,820,461 samples, 0.03%)</title><rect x="75.9748%" y="1413" width="0.0272%" height="15" fill="rgb(239,133,26)" fg:x="44168472138" fg:w="15820461"/><text x="76.2248%" y="1423.50"></text></g><g><title>xas_clear_mark (14,296,379 samples, 0.02%)</title><rect x="75.9774%" y="1397" width="0.0246%" height="15" fill="rgb(211,94,48)" fg:x="44169996220" fg:w="14296379"/><text x="76.2274%" y="1407.50"></text></g><g><title>__filemap_remove_folio (606,207,627 samples, 1.04%)</title><rect x="75.0077%" y="1429" width="1.0427%" height="15" fill="rgb(239,87,6)" fg:x="43606267155" fg:w="606207627"/><text x="75.2577%" y="1439.50"></text></g><g><title>xas_store (28,182,183 samples, 0.05%)</title><rect x="76.0020%" y="1413" width="0.0485%" height="15" fill="rgb(227,62,0)" fg:x="44184292599" fg:w="28182183"/><text x="76.2520%" y="1423.50"></text></g><g><title>xas_create (26,141,487 samples, 0.04%)</title><rect x="76.0055%" y="1397" width="0.0450%" height="15" fill="rgb(211,226,4)" fg:x="44186333295" fg:w="26141487"/><text x="76.2555%" y="1407.50"></text></g><g><title>do_raw_spin_lock (174,752,582 samples, 0.30%)</title><rect x="76.0504%" y="1413" width="0.3006%" height="15" fill="rgb(253,38,52)" fg:x="44212474782" fg:w="174752582"/><text x="76.3004%" y="1423.50"></text></g><g><title>native_queued_spin_lock_slowpath (163,471,333 samples, 0.28%)</title><rect x="76.0699%" y="1397" width="0.2812%" height="15" fill="rgb(229,126,40)" fg:x="44223756031" fg:w="163471333"/><text x="76.3199%" y="1407.50"></text></g><g><title>_raw_spin_lock (180,793,542 samples, 0.31%)</title><rect x="76.0504%" y="1429" width="0.3110%" height="15" fill="rgb(229,165,44)" fg:x="44212474782" fg:w="180793542"/><text x="76.3004%" y="1439.50"></text></g><g><title>lock_acquire (6,040,960 samples, 0.01%)</title><rect x="76.3510%" y="1413" width="0.0104%" height="15" fill="rgb(247,95,47)" fg:x="44387227364" fg:w="6040960"/><text x="76.6010%" y="1423.50"></text></g><g><title>do_raw_spin_lock (8,177,363 samples, 0.01%)</title><rect x="76.3614%" y="1413" width="0.0141%" height="15" fill="rgb(216,140,30)" fg:x="44393268324" fg:w="8177363"/><text x="76.6114%" y="1423.50"></text></g><g><title>_raw_spin_lock_irq (11,883,446 samples, 0.02%)</title><rect x="76.3614%" y="1429" width="0.0204%" height="15" fill="rgb(246,214,8)" fg:x="44393268324" fg:w="11883446"/><text x="76.6114%" y="1439.50"></text></g><g><title>_raw_spin_unlock (6,978,398 samples, 0.01%)</title><rect x="76.3819%" y="1429" width="0.0120%" height="15" fill="rgb(227,224,15)" fg:x="44405151770" fg:w="6978398"/><text x="76.6319%" y="1439.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (7,431,146 samples, 0.01%)</title><rect x="76.3992%" y="1413" width="0.0128%" height="15" fill="rgb(233,175,4)" fg:x="44415233179" fg:w="7431146"/><text x="76.6492%" y="1423.50"></text></g><g><title>sysvec_apic_timer_interrupt (7,431,146 samples, 0.01%)</title><rect x="76.3992%" y="1397" width="0.0128%" height="15" fill="rgb(221,66,45)" fg:x="44415233179" fg:w="7431146"/><text x="76.6492%" y="1407.50"></text></g><g><title>_raw_spin_unlock_irq (13,639,160 samples, 0.02%)</title><rect x="76.3939%" y="1429" width="0.0235%" height="15" fill="rgb(221,178,18)" fg:x="44412130168" fg:w="13639160"/><text x="76.6439%" y="1439.50"></text></g><g><title>__remove_mapping (833,673,092 samples, 1.43%)</title><rect x="75.0025%" y="1445" width="1.4340%" height="15" fill="rgb(213,81,29)" fg:x="43603233768" fg:w="833673092"/><text x="75.2525%" y="1455.50"></text></g><g><title>workingset_eviction (9,655,401 samples, 0.02%)</title><rect x="76.4199%" y="1429" width="0.0166%" height="15" fill="rgb(220,89,49)" fg:x="44427251459" fg:w="9655401"/><text x="76.6699%" y="1439.50"></text></g><g><title>jbd2_journal_grab_journal_head (9,858,502 samples, 0.02%)</title><rect x="76.4406%" y="1397" width="0.0170%" height="15" fill="rgb(227,60,33)" fg:x="44439292196" fg:w="9858502"/><text x="76.6906%" y="1407.50"></text></g><g><title>filemap_release_folio (59,194,331 samples, 0.10%)</title><rect x="76.4379%" y="1445" width="0.1018%" height="15" fill="rgb(205,113,12)" fg:x="44437699645" fg:w="59194331"/><text x="76.6879%" y="1455.50"></text></g><g><title>ext4_release_folio (59,194,331 samples, 0.10%)</title><rect x="76.4379%" y="1429" width="0.1018%" height="15" fill="rgb(211,32,1)" fg:x="44437699645" fg:w="59194331"/><text x="76.6879%" y="1439.50"></text></g><g><title>jbd2_journal_try_to_free_buffers (57,601,780 samples, 0.10%)</title><rect x="76.4406%" y="1413" width="0.0991%" height="15" fill="rgb(246,2,12)" fg:x="44439292196" fg:w="57601780"/><text x="76.6906%" y="1423.50"></text></g><g><title>try_to_free_buffers (47,743,278 samples, 0.08%)</title><rect x="76.4576%" y="1397" width="0.0821%" height="15" fill="rgb(243,37,27)" fg:x="44449150698" fg:w="47743278"/><text x="76.7076%" y="1407.50"></text></g><g><title>free_buffer_head (42,620,393 samples, 0.07%)</title><rect x="76.4664%" y="1381" width="0.0733%" height="15" fill="rgb(248,211,31)" fg:x="44454273583" fg:w="42620393"/><text x="76.7164%" y="1391.50"></text></g><g><title>kmem_cache_free (42,620,393 samples, 0.07%)</title><rect x="76.4664%" y="1365" width="0.0733%" height="15" fill="rgb(242,146,47)" fg:x="44454273583" fg:w="42620393"/><text x="76.7164%" y="1375.50"></text></g><g><title>memcg_slab_free_hook (33,181,178 samples, 0.06%)</title><rect x="76.4826%" y="1349" width="0.0571%" height="15" fill="rgb(206,70,20)" fg:x="44463712798" fg:w="33181178"/><text x="76.7326%" y="1359.50"></text></g><g><title>obj_cgroup_uncharge (11,612,993 samples, 0.02%)</title><rect x="76.5197%" y="1333" width="0.0200%" height="15" fill="rgb(215,10,51)" fg:x="44485280983" fg:w="11612993"/><text x="76.7697%" y="1343.50"></text></g><g><title>refill_obj_stock (11,612,993 samples, 0.02%)</title><rect x="76.5197%" y="1317" width="0.0200%" height="15" fill="rgb(243,178,53)" fg:x="44485280983" fg:w="11612993"/><text x="76.7697%" y="1327.50"></text></g><g><title>free_unref_page_list (6,006,410 samples, 0.01%)</title><rect x="76.5397%" y="1445" width="0.0103%" height="15" fill="rgb(233,221,20)" fg:x="44496893976" fg:w="6006410"/><text x="76.7897%" y="1455.50"></text></g><g><title>lock_acquire (8,166,847 samples, 0.01%)</title><rect x="76.5514%" y="1445" width="0.0140%" height="15" fill="rgb(218,95,35)" fg:x="44503697116" fg:w="8166847"/><text x="76.8014%" y="1455.50"></text></g><g><title>reclaim_pages (967,796,838 samples, 1.66%)</title><rect x="74.9060%" y="1493" width="1.6647%" height="15" fill="rgb(229,13,5)" fg:x="43547168448" fg:w="967796838"/><text x="75.1560%" y="1503.50"></text></g><g><title>reclaim_folio_list (966,376,232 samples, 1.66%)</title><rect x="74.9085%" y="1477" width="1.6623%" height="15" fill="rgb(252,164,30)" fg:x="43548589054" fg:w="966376232"/><text x="75.1585%" y="1487.50"></text></g><g><title>shrink_folio_list (944,797,912 samples, 1.63%)</title><rect x="74.9456%" y="1461" width="1.6252%" height="15" fill="rgb(232,68,36)" fg:x="43570167374" fg:w="944797912"/><text x="75.1956%" y="1471.50"></text></g><g><title>__page_cache_ext_isolate_and_reclaim (1,092,283,474 samples, 1.88%)</title><rect x="74.8026%" y="1509" width="1.8789%" height="15" fill="rgb(219,59,54)" fg:x="43487001168" fg:w="1092283474"/><text x="75.0526%" y="1519.50">_..</text></g><g><title>valid_folios_exists_unlocked (64,319,356 samples, 0.11%)</title><rect x="76.5708%" y="1493" width="0.1106%" height="15" fill="rgb(250,92,33)" fg:x="44514965286" fg:w="64319356"/><text x="76.8208%" y="1503.50"></text></g><g><title>page_cache_ext_isolate_and_reclaim (1,094,538,349 samples, 1.88%)</title><rect x="74.8026%" y="1525" width="1.8827%" height="15" fill="rgb(229,162,54)" fg:x="43487001168" fg:w="1094538349"/><text x="75.0526%" y="1535.50">p..</text></g><g><title>do_raw_write_lock (19,516,455 samples, 0.03%)</title><rect x="76.7198%" y="1397" width="0.0336%" height="15" fill="rgb(244,114,52)" fg:x="44601587590" fg:w="19516455"/><text x="76.9698%" y="1407.50"></text></g><g><title>queued_write_lock_slowpath (19,516,455 samples, 0.03%)</title><rect x="76.7198%" y="1381" width="0.0336%" height="15" fill="rgb(212,211,43)" fg:x="44601587590" fg:w="19516455"/><text x="76.9698%" y="1391.50"></text></g><g><title>native_queued_spin_lock_slowpath (7,792,177 samples, 0.01%)</title><rect x="76.7399%" y="1365" width="0.0134%" height="15" fill="rgb(226,147,8)" fg:x="44613311868" fg:w="7792177"/><text x="76.9899%" y="1375.50"></text></g><g><title>cache_ext_ds_registry_write_lock (20,960,736 samples, 0.04%)</title><rect x="76.7198%" y="1429" width="0.0361%" height="15" fill="rgb(226,23,13)" fg:x="44601587590" fg:w="20960736"/><text x="76.9698%" y="1439.50"></text></g><g><title>_raw_write_lock (20,960,736 samples, 0.04%)</title><rect x="76.7198%" y="1413" width="0.0361%" height="15" fill="rgb(240,63,4)" fg:x="44601587590" fg:w="20960736"/><text x="76.9698%" y="1423.50"></text></g><g><title>valid_folios_del (30,864,684 samples, 0.05%)</title><rect x="76.7132%" y="1445" width="0.0531%" height="15" fill="rgb(221,1,32)" fg:x="44597764985" fg:w="30864684"/><text x="76.9632%" y="1455.50"></text></g><g><title>__filemap_remove_folio (34,813,764 samples, 0.06%)</title><rect x="76.7091%" y="1461" width="0.0599%" height="15" fill="rgb(242,117,10)" fg:x="44595403075" fg:w="34813764"/><text x="76.9591%" y="1471.50"></text></g><g><title>do_raw_spin_lock (51,295,653 samples, 0.09%)</title><rect x="76.7690%" y="1445" width="0.0882%" height="15" fill="rgb(249,172,44)" fg:x="44630216839" fg:w="51295653"/><text x="77.0190%" y="1455.50"></text></g><g><title>native_queued_spin_lock_slowpath (48,957,642 samples, 0.08%)</title><rect x="76.7730%" y="1429" width="0.0842%" height="15" fill="rgb(244,46,45)" fg:x="44632554850" fg:w="48957642"/><text x="77.0230%" y="1439.50"></text></g><g><title>_raw_spin_lock (52,032,939 samples, 0.09%)</title><rect x="76.7690%" y="1461" width="0.0895%" height="15" fill="rgb(206,43,17)" fg:x="44630216839" fg:w="52032939"/><text x="77.0190%" y="1471.50"></text></g><g><title>__remove_mapping (91,508,535 samples, 0.16%)</title><rect x="76.7065%" y="1477" width="0.1574%" height="15" fill="rgb(239,218,39)" fg:x="44593871323" fg:w="91508535"/><text x="76.9565%" y="1487.50"></text></g><g><title>shrink_lruvec (1,206,031,398 samples, 2.07%)</title><rect x="74.8012%" y="1541" width="2.0745%" height="15" fill="rgb(208,169,54)" fg:x="43486203650" fg:w="1206031398"/><text x="75.0512%" y="1551.50">s..</text></g><g><title>shrink_list (110,695,531 samples, 0.19%)</title><rect x="76.6853%" y="1525" width="0.1904%" height="15" fill="rgb(247,25,42)" fg:x="44581539517" fg:w="110695531"/><text x="76.9353%" y="1535.50"></text></g><g><title>shrink_inactive_list (106,094,729 samples, 0.18%)</title><rect x="76.6932%" y="1509" width="0.1825%" height="15" fill="rgb(226,23,31)" fg:x="44586140319" fg:w="106094729"/><text x="76.9432%" y="1519.50"></text></g><g><title>shrink_folio_list (102,265,644 samples, 0.18%)</title><rect x="76.6998%" y="1493" width="0.1759%" height="15" fill="rgb(247,16,28)" fg:x="44589969404" fg:w="102265644"/><text x="76.9498%" y="1503.50"></text></g><g><title>charge_memcg (1,233,198,981 samples, 2.12%)</title><rect x="74.7649%" y="1653" width="2.1212%" height="15" fill="rgb(231,147,38)" fg:x="43465099991" fg:w="1233198981"/><text x="75.0149%" y="1663.50">c..</text></g><g><title>try_charge_memcg (1,228,539,464 samples, 2.11%)</title><rect x="74.7729%" y="1637" width="2.1132%" height="15" fill="rgb(253,81,48)" fg:x="43469759508" fg:w="1228539464"/><text x="75.0229%" y="1647.50">t..</text></g><g><title>try_to_free_mem_cgroup_pages (1,218,252,656 samples, 2.10%)</title><rect x="74.7906%" y="1621" width="2.0955%" height="15" fill="rgb(249,222,43)" fg:x="43480046316" fg:w="1218252656"/><text x="75.0406%" y="1631.50">t..</text></g><g><title>do_try_to_free_pages (1,218,252,656 samples, 2.10%)</title><rect x="74.7906%" y="1605" width="2.0955%" height="15" fill="rgb(221,3,27)" fg:x="43480046316" fg:w="1218252656"/><text x="75.0406%" y="1615.50">d..</text></g><g><title>shrink_zones (1,218,252,656 samples, 2.10%)</title><rect x="74.7906%" y="1589" width="2.0955%" height="15" fill="rgb(228,180,5)" fg:x="43480046316" fg:w="1218252656"/><text x="75.0406%" y="1599.50">s..</text></g><g><title>shrink_node (1,218,252,656 samples, 2.10%)</title><rect x="74.7906%" y="1573" width="2.0955%" height="15" fill="rgb(227,131,42)" fg:x="43480046316" fg:w="1218252656"/><text x="75.0406%" y="1583.50">s..</text></g><g><title>shrink_node_memcgs (1,212,095,322 samples, 2.08%)</title><rect x="74.8012%" y="1557" width="2.0849%" height="15" fill="rgb(212,3,39)" fg:x="43486203650" fg:w="1212095322"/><text x="75.0512%" y="1567.50">s..</text></g><g><title>shrink_slab (6,063,924 samples, 0.01%)</title><rect x="76.8757%" y="1541" width="0.0104%" height="15" fill="rgb(226,45,5)" fg:x="44692235048" fg:w="6063924"/><text x="77.1257%" y="1551.50"></text></g><g><title>shrink_slab_memcg (6,063,924 samples, 0.01%)</title><rect x="76.8757%" y="1525" width="0.0104%" height="15" fill="rgb(215,167,45)" fg:x="44692235048" fg:w="6063924"/><text x="77.1257%" y="1535.50"></text></g><g><title>lock_acquire (7,846,115 samples, 0.01%)</title><rect x="76.8896%" y="1637" width="0.0135%" height="15" fill="rgb(250,218,53)" fg:x="44700337246" fg:w="7846115"/><text x="77.1396%" y="1647.50"></text></g><g><title>get_mem_cgroup_from_mm (18,636,029 samples, 0.03%)</title><rect x="76.8861%" y="1653" width="0.0321%" height="15" fill="rgb(207,140,0)" fg:x="44698298972" fg:w="18636029"/><text x="77.1361%" y="1663.50"></text></g><g><title>percpu_ref_tryget (7,043,537 samples, 0.01%)</title><rect x="76.9061%" y="1637" width="0.0121%" height="15" fill="rgb(238,133,51)" fg:x="44709891464" fg:w="7043537"/><text x="77.1561%" y="1647.50"></text></g><g><title>__mem_cgroup_charge (1,256,407,095 samples, 2.16%)</title><rect x="74.7649%" y="1669" width="2.1612%" height="15" fill="rgb(218,203,53)" fg:x="43465099991" fg:w="1256407095"/><text x="75.0149%" y="1679.50">_..</text></g><g><title>__mod_lruvec_page_state (9,463,616 samples, 0.02%)</title><rect x="76.9260%" y="1669" width="0.0163%" height="15" fill="rgb(226,184,25)" fg:x="44721507086" fg:w="9463616"/><text x="77.1760%" y="1679.50"></text></g><g><title>_raw_spin_lock_irq (10,593,301 samples, 0.02%)</title><rect x="76.9436%" y="1669" width="0.0182%" height="15" fill="rgb(231,121,21)" fg:x="44731715521" fg:w="10593301"/><text x="77.1936%" y="1679.50"></text></g><g><title>asm_common_interrupt (6,874,704 samples, 0.01%)</title><rect x="76.9702%" y="1669" width="0.0118%" height="15" fill="rgb(251,14,34)" fg:x="44747159354" fg:w="6874704"/><text x="77.2202%" y="1679.50"></text></g><g><title>common_interrupt (6,874,704 samples, 0.01%)</title><rect x="76.9702%" y="1653" width="0.0118%" height="15" fill="rgb(249,193,11)" fg:x="44747159354" fg:w="6874704"/><text x="77.2202%" y="1663.50"></text></g><g><title>get_partial_node (9,282,662 samples, 0.02%)</title><rect x="77.0266%" y="1621" width="0.0160%" height="15" fill="rgb(220,172,37)" fg:x="44779947479" fg:w="9282662"/><text x="77.2766%" y="1631.50"></text></g><g><title>___slab_alloc (27,334,515 samples, 0.05%)</title><rect x="77.0126%" y="1637" width="0.0470%" height="15" fill="rgb(231,229,43)" fg:x="44771851209" fg:w="27334515"/><text x="77.2626%" y="1647.50"></text></g><g><title>lock_acquire (5,997,078 samples, 0.01%)</title><rect x="77.0647%" y="1621" width="0.0103%" height="15" fill="rgb(250,161,5)" fg:x="44802132066" fg:w="5997078"/><text x="77.3147%" y="1631.50"></text></g><g><title>fs_reclaim_acquire (10,434,265 samples, 0.02%)</title><rect x="77.0607%" y="1637" width="0.0179%" height="15" fill="rgb(218,225,18)" fg:x="44799788186" fg:w="10434265"/><text x="77.3107%" y="1647.50"></text></g><g><title>__kmem_cache_alloc_node (48,779,563 samples, 0.08%)</title><rect x="76.9984%" y="1653" width="0.0839%" height="15" fill="rgb(245,45,42)" fg:x="44763554175" fg:w="48779563"/><text x="77.2484%" y="1663.50"></text></g><g><title>kmalloc_trace (50,929,514 samples, 0.09%)</title><rect x="76.9959%" y="1669" width="0.0876%" height="15" fill="rgb(211,115,1)" fg:x="44762139397" fg:w="50929514"/><text x="77.2459%" y="1679.50"></text></g><g><title>__lock_acquire (7,070,888 samples, 0.01%)</title><rect x="77.1267%" y="1621" width="0.0122%" height="15" fill="rgb(248,133,52)" fg:x="44838177529" fg:w="7070888"/><text x="77.3767%" y="1631.50"></text></g><g><title>_raw_spin_lock (13,415,292 samples, 0.02%)</title><rect x="77.1170%" y="1653" width="0.0231%" height="15" fill="rgb(238,100,21)" fg:x="44832500031" fg:w="13415292"/><text x="77.3670%" y="1663.50"></text></g><g><title>lock_acquire (11,239,375 samples, 0.02%)</title><rect x="77.1207%" y="1637" width="0.0193%" height="15" fill="rgb(247,144,11)" fg:x="44834675948" fg:w="11239375"/><text x="77.3707%" y="1647.50"></text></g><g><title>get_partial_node (12,295,563 samples, 0.02%)</title><rect x="77.1754%" y="1589" width="0.0211%" height="15" fill="rgb(206,164,16)" fg:x="44866480723" fg:w="12295563"/><text x="77.4254%" y="1599.50"></text></g><g><title>___slab_alloc (24,748,024 samples, 0.04%)</title><rect x="77.1626%" y="1605" width="0.0426%" height="15" fill="rgb(222,34,3)" fg:x="44859046729" fg:w="24748024"/><text x="77.4126%" y="1615.50"></text></g><g><title>fs_reclaim_acquire (9,565,473 samples, 0.02%)</title><rect x="77.2052%" y="1605" width="0.0165%" height="15" fill="rgb(248,82,4)" fg:x="44883794753" fg:w="9565473"/><text x="77.4552%" y="1615.50"></text></g><g><title>__kmem_cache_alloc_node (46,704,499 samples, 0.08%)</title><rect x="77.1437%" y="1621" width="0.0803%" height="15" fill="rgb(228,81,46)" fg:x="44848060972" fg:w="46704499"/><text x="77.3937%" y="1631.50"></text></g><g><title>valid_folios_add (82,209,401 samples, 0.14%)</title><rect x="77.0835%" y="1669" width="0.1414%" height="15" fill="rgb(227,67,47)" fg:x="44813068911" fg:w="82209401"/><text x="77.3335%" y="1679.50"></text></g><g><title>cache_ext_list_node_alloc (47,977,556 samples, 0.08%)</title><rect x="77.1424%" y="1653" width="0.0825%" height="15" fill="rgb(215,93,53)" fg:x="44847300756" fg:w="47977556"/><text x="77.3924%" y="1663.50"></text></g><g><title>kmalloc_trace (47,977,556 samples, 0.08%)</title><rect x="77.1424%" y="1637" width="0.0825%" height="15" fill="rgb(248,194,39)" fg:x="44847300756" fg:w="47977556"/><text x="77.3924%" y="1647.50"></text></g><g><title>lock_acquire (8,976,469 samples, 0.02%)</title><rect x="77.2288%" y="1653" width="0.0154%" height="15" fill="rgb(215,5,19)" fg:x="44897541747" fg:w="8976469"/><text x="77.4788%" y="1663.50"></text></g><g><title>xa_get_order (14,906,904 samples, 0.03%)</title><rect x="77.2266%" y="1669" width="0.0256%" height="15" fill="rgb(226,215,51)" fg:x="44896249534" fg:w="14906904"/><text x="77.4766%" y="1679.50"></text></g><g><title>__filemap_add_folio (1,467,414,408 samples, 2.52%)</title><rect x="74.7448%" y="1685" width="2.5241%" height="15" fill="rgb(225,56,26)" fg:x="43453414215" fg:w="1467414408"/><text x="74.9948%" y="1695.50">__..</text></g><g><title>lru_add_fn (18,476,192 samples, 0.03%)</title><rect x="77.2864%" y="1653" width="0.0318%" height="15" fill="rgb(222,75,29)" fg:x="44930978447" fg:w="18476192"/><text x="77.5364%" y="1663.50"></text></g><g><title>folio_batch_move_lru (28,248,653 samples, 0.05%)</title><rect x="77.2730%" y="1669" width="0.0486%" height="15" fill="rgb(236,139,6)" fg:x="44923240179" fg:w="28248653"/><text x="77.5230%" y="1679.50"></text></g><g><title>lock_acquire (7,134,786 samples, 0.01%)</title><rect x="77.3216%" y="1669" width="0.0123%" height="15" fill="rgb(223,137,36)" fg:x="44951488832" fg:w="7134786"/><text x="77.5716%" y="1679.50"></text></g><g><title>folio_add_lru (38,234,335 samples, 0.07%)</title><rect x="77.2716%" y="1685" width="0.0658%" height="15" fill="rgb(226,99,2)" fg:x="44922373491" fg:w="38234335"/><text x="77.5216%" y="1695.50"></text></g><g><title>__lock_acquire (6,286,244 samples, 0.01%)</title><rect x="77.3538%" y="1653" width="0.0108%" height="15" fill="rgb(206,133,23)" fg:x="44970196253" fg:w="6286244"/><text x="77.6038%" y="1663.50"></text></g><g><title>lock_acquire (9,604,243 samples, 0.02%)</title><rect x="77.3490%" y="1669" width="0.0165%" height="15" fill="rgb(243,173,15)" fg:x="44967407918" fg:w="9604243"/><text x="77.5990%" y="1679.50"></text></g><g><title>filemap_add_folio (1,543,490,255 samples, 2.65%)</title><rect x="74.7419%" y="1701" width="2.6550%" height="15" fill="rgb(228,69,28)" fg:x="43451740210" fg:w="1543490255"/><text x="74.9919%" y="1711.50">fi..</text></g><g><title>workingset_refault (34,355,840 samples, 0.06%)</title><rect x="77.3378%" y="1685" width="0.0591%" height="15" fill="rgb(212,51,22)" fg:x="44960874625" fg:w="34355840"/><text x="77.5878%" y="1695.50"></text></g><g><title>workingset_test_recent (9,737,436 samples, 0.02%)</title><rect x="77.3801%" y="1669" width="0.0167%" height="15" fill="rgb(227,113,0)" fg:x="44985493029" fg:w="9737436"/><text x="77.6301%" y="1679.50"></text></g><g><title>clear_page_rep (45,750,156 samples, 0.08%)</title><rect x="77.4050%" y="1621" width="0.0787%" height="15" fill="rgb(252,84,27)" fg:x="44999939764" fg:w="45750156"/><text x="77.6550%" y="1631.50"></text></g><g><title>_raw_spin_trylock (6,601,512 samples, 0.01%)</title><rect x="77.4957%" y="1589" width="0.0114%" height="15" fill="rgb(223,145,39)" fg:x="45052682238" fg:w="6601512"/><text x="77.7457%" y="1599.50"></text></g><g><title>lock_acquire (6,601,512 samples, 0.01%)</title><rect x="77.4957%" y="1573" width="0.0114%" height="15" fill="rgb(239,219,30)" fg:x="45052682238" fg:w="6601512"/><text x="77.7457%" y="1583.50"></text></g><g><title>lock_release (9,061,181 samples, 0.02%)</title><rect x="77.5081%" y="1573" width="0.0156%" height="15" fill="rgb(224,196,39)" fg:x="45059895966" fg:w="9061181"/><text x="77.7581%" y="1583.50"></text></g><g><title>_raw_spin_unlock (10,430,986 samples, 0.02%)</title><rect x="77.5071%" y="1589" width="0.0179%" height="15" fill="rgb(205,35,43)" fg:x="45059283750" fg:w="10430986"/><text x="77.7571%" y="1599.50"></text></g><g><title>get_page_from_freelist (72,447,209 samples, 0.12%)</title><rect x="77.4026%" y="1637" width="0.1246%" height="15" fill="rgb(228,201,21)" fg:x="44998581432" fg:w="72447209"/><text x="77.6526%" y="1647.50"></text></g><g><title>rmqueue (25,338,721 samples, 0.04%)</title><rect x="77.4837%" y="1621" width="0.0436%" height="15" fill="rgb(237,118,16)" fg:x="45045689920" fg:w="25338721"/><text x="77.7337%" y="1631.50"></text></g><g><title>rmqueue_pcplist (23,411,827 samples, 0.04%)</title><rect x="77.4870%" y="1605" width="0.0403%" height="15" fill="rgb(241,17,19)" fg:x="45047616814" fg:w="23411827"/><text x="77.7370%" y="1615.50"></text></g><g><title>prepare_alloc_pages (9,891,858 samples, 0.02%)</title><rect x="77.5273%" y="1637" width="0.0170%" height="15" fill="rgb(214,10,25)" fg:x="45071028641" fg:w="9891858"/><text x="77.7773%" y="1647.50"></text></g><g><title>fs_reclaim_acquire (6,556,345 samples, 0.01%)</title><rect x="77.5330%" y="1621" width="0.0113%" height="15" fill="rgb(238,37,29)" fg:x="45074364154" fg:w="6556345"/><text x="77.7830%" y="1631.50"></text></g><g><title>__alloc_pages (83,436,783 samples, 0.14%)</title><rect x="77.4014%" y="1653" width="0.1435%" height="15" fill="rgb(253,83,25)" fg:x="44997841485" fg:w="83436783"/><text x="77.6514%" y="1663.50"></text></g><g><title>filemap_alloc_folio (86,669,271 samples, 0.15%)</title><rect x="77.3969%" y="1701" width="0.1491%" height="15" fill="rgb(234,192,12)" fg:x="44995230465" fg:w="86669271"/><text x="77.6469%" y="1711.50"></text></g><g><title>folio_alloc (85,887,700 samples, 0.15%)</title><rect x="77.3982%" y="1685" width="0.1477%" height="15" fill="rgb(241,216,45)" fg:x="44996012036" fg:w="85887700"/><text x="77.6482%" y="1695.50"></text></g><g><title>alloc_pages (85,887,700 samples, 0.15%)</title><rect x="77.3982%" y="1669" width="0.1477%" height="15" fill="rgb(242,22,33)" fg:x="44996012036" fg:w="85887700"/><text x="77.6482%" y="1679.50"></text></g><g><title>amd_iommu_map_pages (11,395,310 samples, 0.02%)</title><rect x="77.5844%" y="1413" width="0.0196%" height="15" fill="rgb(231,105,49)" fg:x="45104245461" fg:w="11395310"/><text x="77.8344%" y="1423.50"></text></g><g><title>iommu_v1_map_pages (9,235,786 samples, 0.02%)</title><rect x="77.5881%" y="1397" width="0.0159%" height="15" fill="rgb(218,204,15)" fg:x="45106404985" fg:w="9235786"/><text x="77.8381%" y="1407.50"></text></g><g><title>__iommu_map_pages (16,661,460 samples, 0.03%)</title><rect x="77.5844%" y="1429" width="0.0287%" height="15" fill="rgb(235,138,41)" fg:x="45104245461" fg:w="16661460"/><text x="77.8344%" y="1439.50"></text></g><g><title>iommu_map_sg (22,120,507 samples, 0.04%)</title><rect x="77.5798%" y="1461" width="0.0380%" height="15" fill="rgb(246,0,9)" fg:x="45101596505" fg:w="22120507"/><text x="77.8298%" y="1471.50"></text></g><g><title>__iommu_map (21,434,762 samples, 0.04%)</title><rect x="77.5810%" y="1445" width="0.0369%" height="15" fill="rgb(210,74,4)" fg:x="45102282250" fg:w="21434762"/><text x="77.8310%" y="1455.50"></text></g><g><title>__dma_map_sg_attrs (29,255,501 samples, 0.05%)</title><rect x="77.5686%" y="1493" width="0.0503%" height="15" fill="rgb(250,60,41)" fg:x="45095042245" fg:w="29255501"/><text x="77.8186%" y="1503.50"></text></g><g><title>iommu_dma_map_sg (29,255,501 samples, 0.05%)</title><rect x="77.5686%" y="1477" width="0.0503%" height="15" fill="rgb(220,115,12)" fg:x="45095042245" fg:w="29255501"/><text x="77.8186%" y="1487.50"></text></g><g><title>dma_map_sg_attrs (30,730,338 samples, 0.05%)</title><rect x="77.5686%" y="1509" width="0.0529%" height="15" fill="rgb(237,100,13)" fg:x="45095042245" fg:w="30730338"/><text x="77.8186%" y="1519.50"></text></g><g><title>ata_qc_issue (34,773,322 samples, 0.06%)</title><rect x="77.5640%" y="1525" width="0.0598%" height="15" fill="rgb(213,55,26)" fg:x="45092403297" fg:w="34773322"/><text x="77.8140%" y="1535.50"></text></g><g><title>__ata_scsi_queuecmd (38,155,592 samples, 0.07%)</title><rect x="77.5595%" y="1541" width="0.0656%" height="15" fill="rgb(216,17,4)" fg:x="45089780069" fg:w="38155592"/><text x="77.8095%" y="1551.50"></text></g><g><title>do_raw_spin_unlock (7,982,247 samples, 0.01%)</title><rect x="77.6334%" y="1525" width="0.0137%" height="15" fill="rgb(220,153,47)" fg:x="45132751030" fg:w="7982247"/><text x="77.8834%" y="1535.50"></text></g><g><title>_raw_spin_unlock_irqrestore (10,042,336 samples, 0.02%)</title><rect x="77.6310%" y="1541" width="0.0173%" height="15" fill="rgb(215,131,9)" fg:x="45131346323" fg:w="10042336"/><text x="77.8810%" y="1551.50"></text></g><g><title>ata_scsi_queuecmd (52,907,161 samples, 0.09%)</title><rect x="77.5586%" y="1557" width="0.0910%" height="15" fill="rgb(233,46,42)" fg:x="45089239219" fg:w="52907161"/><text x="77.8086%" y="1567.50"></text></g><g><title>scsi_queue_rq (70,130,193 samples, 0.12%)</title><rect x="77.5547%" y="1573" width="0.1206%" height="15" fill="rgb(226,86,7)" fg:x="45086989824" fg:w="70130193"/><text x="77.8047%" y="1583.50"></text></g><g><title>sd_init_command (9,553,107 samples, 0.02%)</title><rect x="77.6589%" y="1557" width="0.0164%" height="15" fill="rgb(239,226,21)" fg:x="45147566910" fg:w="9553107"/><text x="77.9089%" y="1567.50"></text></g><g><title>scsi_alloc_sgtables (6,373,297 samples, 0.01%)</title><rect x="77.6644%" y="1541" width="0.0110%" height="15" fill="rgb(244,137,22)" fg:x="45150746720" fg:w="6373297"/><text x="77.9144%" y="1551.50"></text></g><g><title>blk_mq_dispatch_rq_list (71,387,470 samples, 0.12%)</title><rect x="77.5547%" y="1589" width="0.1228%" height="15" fill="rgb(211,139,35)" fg:x="45086989824" fg:w="71387470"/><text x="77.8047%" y="1599.50"></text></g><g><title>dd_dispatch_request (6,185,452 samples, 0.01%)</title><rect x="77.6775%" y="1589" width="0.0106%" height="15" fill="rgb(214,62,50)" fg:x="45158377294" fg:w="6185452"/><text x="77.9275%" y="1599.50"></text></g><g><title>__blk_mq_sched_dispatch_requests (87,257,555 samples, 0.15%)</title><rect x="77.5511%" y="1605" width="0.1501%" height="15" fill="rgb(212,113,44)" fg:x="45084863523" fg:w="87257555"/><text x="77.8011%" y="1615.50"></text></g><g><title>blk_mq_sched_dispatch_requests (87,989,408 samples, 0.15%)</title><rect x="77.5511%" y="1621" width="0.1514%" height="15" fill="rgb(226,150,43)" fg:x="45084863523" fg:w="87989408"/><text x="77.8011%" y="1631.50"></text></g><g><title>blk_mq_run_hw_queue (91,357,709 samples, 0.16%)</title><rect x="77.5497%" y="1637" width="0.1571%" height="15" fill="rgb(250,71,37)" fg:x="45084075554" fg:w="91357709"/><text x="77.7997%" y="1647.50"></text></g><g><title>dd_insert_requests (7,871,028 samples, 0.01%)</title><rect x="77.7068%" y="1637" width="0.0135%" height="15" fill="rgb(219,76,19)" fg:x="45175433263" fg:w="7871028"/><text x="77.9568%" y="1647.50"></text></g><g><title>blk_finish_plug (100,275,737 samples, 0.17%)</title><rect x="77.5484%" y="1685" width="0.1725%" height="15" fill="rgb(250,39,11)" fg:x="45083335098" fg:w="100275737"/><text x="77.7984%" y="1695.50"></text></g><g><title>__blk_flush_plug (100,275,737 samples, 0.17%)</title><rect x="77.5484%" y="1669" width="0.1725%" height="15" fill="rgb(230,64,31)" fg:x="45083335098" fg:w="100275737"/><text x="77.7984%" y="1679.50"></text></g><g><title>blk_mq_flush_plug_list (100,275,737 samples, 0.17%)</title><rect x="77.5484%" y="1653" width="0.1725%" height="15" fill="rgb(208,222,23)" fg:x="45083335098" fg:w="100275737"/><text x="77.7984%" y="1663.50"></text></g><g><title>bio_alloc_bioset (6,415,983 samples, 0.01%)</title><rect x="77.7368%" y="1653" width="0.0110%" height="15" fill="rgb(227,125,18)" fg:x="45192871241" fg:w="6415983"/><text x="77.9868%" y="1663.50"></text></g><g><title>__blk_mq_alloc_requests (9,733,914 samples, 0.02%)</title><rect x="77.7626%" y="1573" width="0.0167%" height="15" fill="rgb(234,210,9)" fg:x="45207868136" fg:w="9733914"/><text x="78.0126%" y="1583.50"></text></g><g><title>__submit_bio (19,250,830 samples, 0.03%)</title><rect x="77.7589%" y="1605" width="0.0331%" height="15" fill="rgb(217,127,24)" fg:x="45205673007" fg:w="19250830"/><text x="78.0089%" y="1615.50"></text></g><g><title>blk_mq_submit_bio (18,343,310 samples, 0.03%)</title><rect x="77.7604%" y="1589" width="0.0316%" height="15" fill="rgb(239,141,48)" fg:x="45206580527" fg:w="18343310"/><text x="78.0104%" y="1599.50"></text></g><g><title>submit_bio (20,953,134 samples, 0.04%)</title><rect x="77.7572%" y="1653" width="0.0360%" height="15" fill="rgb(227,109,8)" fg:x="45204691367" fg:w="20953134"/><text x="78.0072%" y="1663.50"></text></g><g><title>submit_bio_noacct (20,953,134 samples, 0.04%)</title><rect x="77.7572%" y="1637" width="0.0360%" height="15" fill="rgb(235,184,23)" fg:x="45204691367" fg:w="20953134"/><text x="78.0072%" y="1647.50"></text></g><g><title>submit_bio_noacct_nocheck (20,577,312 samples, 0.04%)</title><rect x="77.7578%" y="1621" width="0.0354%" height="15" fill="rgb(227,226,48)" fg:x="45205067189" fg:w="20577312"/><text x="78.0078%" y="1631.50"></text></g><g><title>ext4_readahead (52,016,050 samples, 0.09%)</title><rect x="77.7229%" y="1685" width="0.0895%" height="15" fill="rgb(206,150,11)" fg:x="45184773753" fg:w="52016050"/><text x="77.9729%" y="1695.50"></text></g><g><title>ext4_mpage_readpages (50,827,360 samples, 0.09%)</title><rect x="77.7250%" y="1669" width="0.0874%" height="15" fill="rgb(254,2,33)" fg:x="45185962443" fg:w="50827360"/><text x="77.9750%" y="1679.50"></text></g><g><title>xa_load (11,145,302 samples, 0.02%)</title><rect x="77.7932%" y="1653" width="0.0192%" height="15" fill="rgb(243,160,20)" fg:x="45225644501" fg:w="11145302"/><text x="78.0432%" y="1663.50"></text></g><g><title>read_pages (156,120,810 samples, 0.27%)</title><rect x="77.5473%" y="1701" width="0.2685%" height="15" fill="rgb(218,208,30)" fg:x="45082665757" fg:w="156120810"/><text x="77.7973%" y="1711.50"></text></g><g><title>page_cache_ra_unbounded (1,806,342,830 samples, 3.11%)</title><rect x="74.7378%" y="1717" width="3.1071%" height="15" fill="rgb(224,120,49)" fg:x="43449328420" fg:w="1806342830"/><text x="74.9878%" y="1727.50">pag..</text></g><g><title>xa_load (15,578,992 samples, 0.03%)</title><rect x="77.8181%" y="1701" width="0.0268%" height="15" fill="rgb(246,12,2)" fg:x="45240092258" fg:w="15578992"/><text x="78.0681%" y="1711.50"></text></g><g><title>do_page_cache_ra (1,807,979,595 samples, 3.11%)</title><rect x="74.7373%" y="1733" width="3.1099%" height="15" fill="rgb(236,117,3)" fg:x="43449052671" fg:w="1807979595"/><text x="74.9873%" y="1743.50">do_..</text></g><g><title>prepare_scan_count (7,092,895 samples, 0.01%)</title><rect x="77.8958%" y="1557" width="0.0122%" height="15" fill="rgb(216,128,52)" fg:x="45285299193" fg:w="7092895"/><text x="78.1458%" y="1567.50"></text></g><g><title>mem_cgroup_flush_stats (7,092,895 samples, 0.01%)</title><rect x="77.8958%" y="1541" width="0.0122%" height="15" fill="rgb(246,145,19)" fg:x="45285299193" fg:w="7092895"/><text x="78.1458%" y="1551.50"></text></g><g><title>cgroup_rstat_flush (7,092,895 samples, 0.01%)</title><rect x="77.8958%" y="1525" width="0.0122%" height="15" fill="rgb(222,11,46)" fg:x="45285299193" fg:w="7092895"/><text x="78.1458%" y="1535.50"></text></g><g><title>cgroup_rstat_flush_locked (6,411,404 samples, 0.01%)</title><rect x="77.8970%" y="1509" width="0.0110%" height="15" fill="rgb(245,82,36)" fg:x="45285980684" fg:w="6411404"/><text x="78.1470%" y="1519.50"></text></g><g><title>__mod_memcg_lruvec_state (13,779,407 samples, 0.02%)</title><rect x="77.9293%" y="1461" width="0.0237%" height="15" fill="rgb(250,73,51)" fg:x="45304756935" fg:w="13779407"/><text x="78.1793%" y="1471.50"></text></g><g><title>__mod_lruvec_state (16,075,497 samples, 0.03%)</title><rect x="77.9293%" y="1477" width="0.0277%" height="15" fill="rgb(221,189,23)" fg:x="45304756935" fg:w="16075497"/><text x="78.1793%" y="1487.50"></text></g><g><title>folio_lruvec_lock_irq (12,746,143 samples, 0.02%)</title><rect x="77.9676%" y="1477" width="0.0219%" height="15" fill="rgb(210,33,7)" fg:x="45327050436" fg:w="12746143"/><text x="78.2176%" y="1487.50"></text></g><g><title>_raw_spin_lock_irq (12,746,143 samples, 0.02%)</title><rect x="77.9676%" y="1461" width="0.0219%" height="15" fill="rgb(210,107,22)" fg:x="45327050436" fg:w="12746143"/><text x="78.2176%" y="1471.50"></text></g><g><title>lock_acquire (7,401,105 samples, 0.01%)</title><rect x="77.9768%" y="1445" width="0.0127%" height="15" fill="rgb(222,116,37)" fg:x="45332395474" fg:w="7401105"/><text x="78.2268%" y="1455.50"></text></g><g><title>__lock_acquire (6,685,748 samples, 0.01%)</title><rect x="77.9781%" y="1429" width="0.0115%" height="15" fill="rgb(254,17,48)" fg:x="45333110831" fg:w="6685748"/><text x="78.2281%" y="1439.50"></text></g><g><title>page_cache_ext_isolate_folio (44,106,959 samples, 0.08%)</title><rect x="77.9204%" y="1493" width="0.0759%" height="15" fill="rgb(224,36,32)" fg:x="45299568537" fg:w="44106959"/><text x="78.1704%" y="1503.50"></text></g><g><title>folio_batch_move_lru (12,075,405 samples, 0.02%)</title><rect x="78.0029%" y="1445" width="0.0208%" height="15" fill="rgb(232,90,46)" fg:x="45347528012" fg:w="12075405"/><text x="78.2529%" y="1455.50"></text></g><g><title>lru_add_fn (8,313,473 samples, 0.01%)</title><rect x="78.0093%" y="1429" width="0.0143%" height="15" fill="rgb(241,66,40)" fg:x="45351289944" fg:w="8313473"/><text x="78.2593%" y="1439.50"></text></g><g><title>folio_add_lru (15,972,719 samples, 0.03%)</title><rect x="77.9988%" y="1461" width="0.0275%" height="15" fill="rgb(249,184,29)" fg:x="45345184825" fg:w="15972719"/><text x="78.2488%" y="1471.50"></text></g><g><title>lock_acquire (5,978,154 samples, 0.01%)</title><rect x="78.0548%" y="1413" width="0.0103%" height="15" fill="rgb(231,181,1)" fg:x="45377706213" fg:w="5978154"/><text x="78.3048%" y="1423.50"></text></g><g><title>__mem_cgroup_uncharge_list (9,020,644 samples, 0.02%)</title><rect x="78.0536%" y="1445" width="0.0155%" height="15" fill="rgb(224,94,2)" fg:x="45376993764" fg:w="9020644"/><text x="78.3036%" y="1455.50"></text></g><g><title>uncharge_folio (9,020,644 samples, 0.02%)</title><rect x="78.0536%" y="1429" width="0.0155%" height="15" fill="rgb(229,170,15)" fg:x="45376993764" fg:w="9020644"/><text x="78.3036%" y="1439.50"></text></g><g><title>__mod_lruvec_page_state (11,858,777 samples, 0.02%)</title><rect x="78.0792%" y="1397" width="0.0204%" height="15" fill="rgb(240,127,35)" fg:x="45391924082" fg:w="11858777"/><text x="78.3292%" y="1407.50"></text></g><g><title>filemap_unaccount_folio (12,612,593 samples, 0.02%)</title><rect x="78.0792%" y="1413" width="0.0217%" height="15" fill="rgb(248,196,34)" fg:x="45391924082" fg:w="12612593"/><text x="78.3292%" y="1423.50"></text></g><g><title>do_raw_write_lock (281,512,062 samples, 0.48%)</title><rect x="78.1406%" y="1365" width="0.4842%" height="15" fill="rgb(236,137,7)" fg:x="45427579957" fg:w="281512062"/><text x="78.3906%" y="1375.50"></text></g><g><title>queued_write_lock_slowpath (276,142,074 samples, 0.47%)</title><rect x="78.1498%" y="1349" width="0.4750%" height="15" fill="rgb(235,127,16)" fg:x="45432949945" fg:w="276142074"/><text x="78.3998%" y="1359.50"></text></g><g><title>native_queued_spin_lock_slowpath (98,959,251 samples, 0.17%)</title><rect x="78.4546%" y="1333" width="0.1702%" height="15" fill="rgb(250,192,54)" fg:x="45610132768" fg:w="98959251"/><text x="78.7046%" y="1343.50"></text></g><g><title>cache_ext_ds_registry_write_lock (298,705,587 samples, 0.51%)</title><rect x="78.1380%" y="1397" width="0.5138%" height="15" fill="rgb(218,98,20)" fg:x="45426098262" fg:w="298705587"/><text x="78.3880%" y="1407.50"></text></g><g><title>_raw_write_lock (297,223,892 samples, 0.51%)</title><rect x="78.1406%" y="1381" width="0.5113%" height="15" fill="rgb(230,176,47)" fg:x="45427579957" fg:w="297223892"/><text x="78.3906%" y="1391.50"></text></g><g><title>lock_acquire (15,711,830 samples, 0.03%)</title><rect x="78.6248%" y="1365" width="0.0270%" height="15" fill="rgb(244,2,33)" fg:x="45709092019" fg:w="15711830"/><text x="78.8748%" y="1375.50"></text></g><g><title>__lock_acquire (13,369,751 samples, 0.02%)</title><rect x="78.6288%" y="1349" width="0.0230%" height="15" fill="rgb(231,100,17)" fg:x="45711434098" fg:w="13369751"/><text x="78.8788%" y="1359.50"></text></g><g><title>_raw_spin_lock_irqsave (6,780,127 samples, 0.01%)</title><rect x="78.6714%" y="1301" width="0.0117%" height="15" fill="rgb(245,23,12)" fg:x="45736177511" fg:w="6780127"/><text x="78.9214%" y="1311.50"></text></g><g><title>__unfreeze_partials (9,363,482 samples, 0.02%)</title><rect x="78.6714%" y="1317" width="0.0161%" height="15" fill="rgb(249,55,22)" fg:x="45736177511" fg:w="9363482"/><text x="78.9214%" y="1327.50"></text></g><g><title>put_cpu_partial (11,592,791 samples, 0.02%)</title><rect x="78.6714%" y="1333" width="0.0199%" height="15" fill="rgb(207,134,9)" fg:x="45736177511" fg:w="11592791"/><text x="78.9214%" y="1343.50"></text></g><g><title>__slab_free (14,761,907 samples, 0.03%)</title><rect x="78.6700%" y="1349" width="0.0254%" height="15" fill="rgb(218,134,0)" fg:x="45735381527" fg:w="14761907"/><text x="78.9200%" y="1359.50"></text></g><g><title>__kmem_cache_free (16,344,276 samples, 0.03%)</title><rect x="78.6687%" y="1365" width="0.0281%" height="15" fill="rgb(213,212,33)" fg:x="45734590605" fg:w="16344276"/><text x="78.9187%" y="1375.50"></text></g><g><title>cache_ext_list_node_free (23,069,214 samples, 0.04%)</title><rect x="78.6585%" y="1397" width="0.0397%" height="15" fill="rgb(252,106,18)" fg:x="45728654638" fg:w="23069214"/><text x="78.9085%" y="1407.50"></text></g><g><title>kfree (23,069,214 samples, 0.04%)</title><rect x="78.6585%" y="1381" width="0.0397%" height="15" fill="rgb(208,126,42)" fg:x="45728654638" fg:w="23069214"/><text x="78.9085%" y="1391.50"></text></g><g><title>__kmem_cache_free (7,674,437 samples, 0.01%)</title><rect x="78.7005%" y="1381" width="0.0132%" height="15" fill="rgb(246,175,29)" fg:x="45753073003" fg:w="7674437"/><text x="78.9505%" y="1391.50"></text></g><g><title>valid_folios_del (356,806,582 samples, 0.61%)</title><rect x="78.1009%" y="1413" width="0.6137%" height="15" fill="rgb(215,13,50)" fg:x="45404536675" fg:w="356806582"/><text x="78.3509%" y="1423.50"></text></g><g><title>kfree (9,619,405 samples, 0.02%)</title><rect x="78.6981%" y="1397" width="0.0165%" height="15" fill="rgb(216,172,15)" fg:x="45751723852" fg:w="9619405"/><text x="78.9481%" y="1407.50"></text></g><g><title>xas_init_marks (11,461,792 samples, 0.02%)</title><rect x="78.7170%" y="1413" width="0.0197%" height="15" fill="rgb(212,103,13)" fg:x="45762712845" fg:w="11461792"/><text x="78.9670%" y="1423.50"></text></g><g><title>xas_clear_mark (9,989,152 samples, 0.02%)</title><rect x="78.7196%" y="1397" width="0.0172%" height="15" fill="rgb(231,171,36)" fg:x="45764185485" fg:w="9989152"/><text x="78.9696%" y="1407.50"></text></g><g><title>__filemap_remove_folio (411,715,977 samples, 0.71%)</title><rect x="78.0731%" y="1429" width="0.7082%" height="15" fill="rgb(250,123,20)" fg:x="45388339176" fg:w="411715977"/><text x="78.3231%" y="1439.50"></text></g><g><title>xas_store (25,880,516 samples, 0.04%)</title><rect x="78.7367%" y="1413" width="0.0445%" height="15" fill="rgb(212,53,50)" fg:x="45774174637" fg:w="25880516"/><text x="78.9867%" y="1423.50"></text></g><g><title>xas_create (24,390,611 samples, 0.04%)</title><rect x="78.7393%" y="1397" width="0.0420%" height="15" fill="rgb(243,54,12)" fg:x="45775664542" fg:w="24390611"/><text x="78.9893%" y="1407.50"></text></g><g><title>do_raw_spin_lock (106,842,786 samples, 0.18%)</title><rect x="78.7813%" y="1413" width="0.1838%" height="15" fill="rgb(234,101,34)" fg:x="45800055153" fg:w="106842786"/><text x="79.0313%" y="1423.50"></text></g><g><title>native_queued_spin_lock_slowpath (99,827,717 samples, 0.17%)</title><rect x="78.7933%" y="1397" width="0.1717%" height="15" fill="rgb(254,67,22)" fg:x="45807070222" fg:w="99827717"/><text x="79.0433%" y="1407.50"></text></g><g><title>_raw_spin_lock (112,965,948 samples, 0.19%)</title><rect x="78.7813%" y="1429" width="0.1943%" height="15" fill="rgb(250,35,47)" fg:x="45800055153" fg:w="112965948"/><text x="79.0313%" y="1439.50"></text></g><g><title>lock_acquire (6,123,162 samples, 0.01%)</title><rect x="78.9650%" y="1413" width="0.0105%" height="15" fill="rgb(226,126,38)" fg:x="45906897939" fg:w="6123162"/><text x="79.2150%" y="1423.50"></text></g><g><title>do_raw_spin_lock (5,994,929 samples, 0.01%)</title><rect x="78.9756%" y="1413" width="0.0103%" height="15" fill="rgb(216,138,53)" fg:x="45913021101" fg:w="5994929"/><text x="79.2256%" y="1423.50"></text></g><g><title>_raw_spin_lock_irq (11,454,143 samples, 0.02%)</title><rect x="78.9756%" y="1429" width="0.0197%" height="15" fill="rgb(246,199,43)" fg:x="45913021101" fg:w="11454143"/><text x="79.2256%" y="1439.50"></text></g><g><title>_raw_spin_unlock (6,869,999 samples, 0.01%)</title><rect x="78.9953%" y="1429" width="0.0118%" height="15" fill="rgb(232,125,11)" fg:x="45924475244" fg:w="6869999"/><text x="79.2453%" y="1439.50"></text></g><g><title>_raw_spin_unlock_irq (9,786,900 samples, 0.02%)</title><rect x="79.0071%" y="1429" width="0.0168%" height="15" fill="rgb(218,219,45)" fg:x="45931345243" fg:w="9786900"/><text x="79.2571%" y="1439.50"></text></g><g><title>__remove_mapping (569,121,072 samples, 0.98%)</title><rect x="78.0691%" y="1445" width="0.9790%" height="15" fill="rgb(216,102,54)" fg:x="45386014408" fg:w="569121072"/><text x="78.3191%" y="1455.50"></text></g><g><title>workingset_eviction (14,003,337 samples, 0.02%)</title><rect x="79.0239%" y="1429" width="0.0241%" height="15" fill="rgb(250,228,7)" fg:x="45941132143" fg:w="14003337"/><text x="79.2739%" y="1439.50"></text></g><g><title>jbd2_journal_grab_journal_head (7,435,062 samples, 0.01%)</title><rect x="79.0525%" y="1397" width="0.0128%" height="15" fill="rgb(226,125,25)" fg:x="45957761641" fg:w="7435062"/><text x="79.3025%" y="1407.50"></text></g><g><title>filemap_release_folio (32,229,597 samples, 0.06%)</title><rect x="79.0491%" y="1445" width="0.0554%" height="15" fill="rgb(224,165,27)" fg:x="45955758110" fg:w="32229597"/><text x="79.2991%" y="1455.50"></text></g><g><title>ext4_release_folio (31,516,792 samples, 0.05%)</title><rect x="79.0503%" y="1429" width="0.0542%" height="15" fill="rgb(233,86,3)" fg:x="45956470915" fg:w="31516792"/><text x="79.3003%" y="1439.50"></text></g><g><title>jbd2_journal_try_to_free_buffers (30,226,066 samples, 0.05%)</title><rect x="79.0525%" y="1413" width="0.0520%" height="15" fill="rgb(228,116,20)" fg:x="45957761641" fg:w="30226066"/><text x="79.3025%" y="1423.50"></text></g><g><title>try_to_free_buffers (22,791,004 samples, 0.04%)</title><rect x="79.0653%" y="1397" width="0.0392%" height="15" fill="rgb(209,192,17)" fg:x="45965196703" fg:w="22791004"/><text x="79.3153%" y="1407.50"></text></g><g><title>free_buffer_head (15,803,224 samples, 0.03%)</title><rect x="79.0773%" y="1381" width="0.0272%" height="15" fill="rgb(224,88,34)" fg:x="45972184483" fg:w="15803224"/><text x="79.3273%" y="1391.50"></text></g><g><title>kmem_cache_free (15,803,224 samples, 0.03%)</title><rect x="79.0773%" y="1365" width="0.0272%" height="15" fill="rgb(233,38,6)" fg:x="45972184483" fg:w="15803224"/><text x="79.3273%" y="1375.50"></text></g><g><title>memcg_slab_free_hook (9,830,880 samples, 0.02%)</title><rect x="79.0876%" y="1349" width="0.0169%" height="15" fill="rgb(212,59,30)" fg:x="45978156827" fg:w="9830880"/><text x="79.3376%" y="1359.50"></text></g><g><title>free_unref_page_prepare (6,494,448 samples, 0.01%)</title><rect x="79.1136%" y="1429" width="0.0112%" height="15" fill="rgb(213,80,3)" fg:x="45993251648" fg:w="6494448"/><text x="79.3636%" y="1439.50"></text></g><g><title>free_unref_page_list (12,542,310 samples, 0.02%)</title><rect x="79.1045%" y="1445" width="0.0216%" height="15" fill="rgb(251,178,7)" fg:x="45987987707" fg:w="12542310"/><text x="79.3545%" y="1455.50"></text></g><g><title>reclaim_pages (662,149,460 samples, 1.14%)</title><rect x="77.9962%" y="1493" width="1.1390%" height="15" fill="rgb(213,154,26)" fg:x="45343675496" fg:w="662149460"/><text x="78.2462%" y="1503.50"></text></g><g><title>reclaim_folio_list (660,640,131 samples, 1.14%)</title><rect x="77.9988%" y="1477" width="1.1364%" height="15" fill="rgb(238,165,49)" fg:x="45345184825" fg:w="660640131"/><text x="78.2488%" y="1487.50"></text></g><g><title>shrink_folio_list (642,332,003 samples, 1.10%)</title><rect x="78.0303%" y="1461" width="1.1049%" height="15" fill="rgb(248,91,46)" fg:x="45363492953" fg:w="642332003"/><text x="78.2803%" y="1471.50"></text></g><g><title>__page_cache_ext_isolate_and_reclaim (763,106,892 samples, 1.31%)</title><rect x="77.9080%" y="1509" width="1.3126%" height="15" fill="rgb(244,21,52)" fg:x="45292392088" fg:w="763106892"/><text x="78.1580%" y="1519.50"></text></g><g><title>valid_folios_exists_unlocked (49,674,024 samples, 0.09%)</title><rect x="79.1352%" y="1493" width="0.0854%" height="15" fill="rgb(247,122,20)" fg:x="46005824956" fg:w="49674024"/><text x="79.3852%" y="1503.50"></text></g><g><title>page_cache_ext_isolate_and_reclaim (765,238,898 samples, 1.32%)</title><rect x="77.9080%" y="1525" width="1.3163%" height="15" fill="rgb(218,27,9)" fg:x="45292392088" fg:w="765238898"/><text x="78.1580%" y="1535.50"></text></g><g><title>do_raw_write_lock (18,636,128 samples, 0.03%)</title><rect x="79.2400%" y="1397" width="0.0321%" height="15" fill="rgb(246,7,6)" fg:x="46066751329" fg:w="18636128"/><text x="79.4900%" y="1407.50"></text></g><g><title>queued_write_lock_slowpath (17,889,568 samples, 0.03%)</title><rect x="79.2413%" y="1381" width="0.0308%" height="15" fill="rgb(227,135,54)" fg:x="46067497889" fg:w="17889568"/><text x="79.4913%" y="1391.50"></text></g><g><title>native_queued_spin_lock_slowpath (8,602,494 samples, 0.01%)</title><rect x="79.2573%" y="1365" width="0.0148%" height="15" fill="rgb(247,14,11)" fg:x="46076784963" fg:w="8602494"/><text x="79.5073%" y="1375.50"></text></g><g><title>cache_ext_ds_registry_write_lock (21,582,241 samples, 0.04%)</title><rect x="79.2400%" y="1429" width="0.0371%" height="15" fill="rgb(206,149,34)" fg:x="46066751329" fg:w="21582241"/><text x="79.4900%" y="1439.50"></text></g><g><title>_raw_write_lock (21,582,241 samples, 0.04%)</title><rect x="79.2400%" y="1413" width="0.0371%" height="15" fill="rgb(227,228,4)" fg:x="46066751329" fg:w="21582241"/><text x="79.4900%" y="1423.50"></text></g><g><title>valid_folios_del (29,290,882 samples, 0.05%)</title><rect x="79.2349%" y="1445" width="0.0504%" height="15" fill="rgb(238,218,28)" fg:x="46063751722" fg:w="29290882"/><text x="79.4849%" y="1455.50"></text></g><g><title>__filemap_remove_folio (34,699,270 samples, 0.06%)</title><rect x="79.2321%" y="1461" width="0.0597%" height="15" fill="rgb(252,86,40)" fg:x="46062170233" fg:w="34699270"/><text x="79.4821%" y="1471.50"></text></g><g><title>do_raw_spin_lock (26,200,558 samples, 0.05%)</title><rect x="79.2918%" y="1445" width="0.0451%" height="15" fill="rgb(251,225,11)" fg:x="46096869503" fg:w="26200558"/><text x="79.5418%" y="1455.50"></text></g><g><title>native_queued_spin_lock_slowpath (23,975,275 samples, 0.04%)</title><rect x="79.2956%" y="1429" width="0.0412%" height="15" fill="rgb(206,46,49)" fg:x="46099094786" fg:w="23975275"/><text x="79.5456%" y="1439.50"></text></g><g><title>_raw_spin_lock (26,985,845 samples, 0.05%)</title><rect x="79.2918%" y="1461" width="0.0464%" height="15" fill="rgb(245,128,24)" fg:x="46096869503" fg:w="26985845"/><text x="79.5418%" y="1471.50"></text></g><g><title>__remove_mapping (67,068,557 samples, 0.12%)</title><rect x="79.2308%" y="1477" width="0.1154%" height="15" fill="rgb(219,177,34)" fg:x="46061386849" fg:w="67068557"/><text x="79.4808%" y="1487.50"></text></g><g><title>shrink_lruvec (842,222,945 samples, 1.45%)</title><rect x="77.9080%" y="1541" width="1.4487%" height="15" fill="rgb(218,60,48)" fg:x="45292392088" fg:w="842222945"/><text x="78.1580%" y="1551.50"></text></g><g><title>shrink_list (76,984,047 samples, 0.13%)</title><rect x="79.2243%" y="1525" width="0.1324%" height="15" fill="rgb(221,11,5)" fg:x="46057630986" fg:w="76984047"/><text x="79.4743%" y="1535.50"></text></g><g><title>shrink_inactive_list (76,984,047 samples, 0.13%)</title><rect x="79.2243%" y="1509" width="0.1324%" height="15" fill="rgb(220,148,13)" fg:x="46057630986" fg:w="76984047"/><text x="79.4743%" y="1519.50"></text></g><g><title>shrink_folio_list (74,741,732 samples, 0.13%)</title><rect x="79.2282%" y="1493" width="0.1286%" height="15" fill="rgb(210,16,3)" fg:x="46059873301" fg:w="74741732"/><text x="79.4782%" y="1503.50"></text></g><g><title>shrink_slab (8,596,176 samples, 0.01%)</title><rect x="79.3567%" y="1541" width="0.0148%" height="15" fill="rgb(236,80,2)" fg:x="46134615033" fg:w="8596176"/><text x="79.6067%" y="1551.50"></text></g><g><title>shrink_slab_memcg (8,596,176 samples, 0.01%)</title><rect x="79.3567%" y="1525" width="0.0148%" height="15" fill="rgb(239,129,19)" fg:x="46134615033" fg:w="8596176"/><text x="79.6067%" y="1535.50"></text></g><g><title>do_shrink_slab (8,596,176 samples, 0.01%)</title><rect x="79.3567%" y="1509" width="0.0148%" height="15" fill="rgb(220,106,35)" fg:x="46134615033" fg:w="8596176"/><text x="79.6067%" y="1519.50"></text></g><g><title>count_shadow_nodes (8,596,176 samples, 0.01%)</title><rect x="79.3567%" y="1493" width="0.0148%" height="15" fill="rgb(252,139,45)" fg:x="46134615033" fg:w="8596176"/><text x="79.6067%" y="1503.50"></text></g><g><title>mem_cgroup_flush_stats (8,596,176 samples, 0.01%)</title><rect x="79.3567%" y="1477" width="0.0148%" height="15" fill="rgb(229,8,36)" fg:x="46134615033" fg:w="8596176"/><text x="79.6067%" y="1487.50"></text></g><g><title>cgroup_rstat_flush (8,596,176 samples, 0.01%)</title><rect x="79.3567%" y="1461" width="0.0148%" height="15" fill="rgb(230,126,33)" fg:x="46134615033" fg:w="8596176"/><text x="79.6067%" y="1471.50"></text></g><g><title>cgroup_rstat_flush_locked (7,855,945 samples, 0.01%)</title><rect x="79.3580%" y="1445" width="0.0135%" height="15" fill="rgb(239,140,21)" fg:x="46135355264" fg:w="7855945"/><text x="79.6080%" y="1455.50"></text></g><g><title>charge_memcg (877,412,770 samples, 1.51%)</title><rect x="77.8636%" y="1653" width="1.5092%" height="15" fill="rgb(254,104,9)" fg:x="45266567895" fg:w="877412770"/><text x="78.1136%" y="1663.50"></text></g><g><title>try_charge_memcg (865,962,385 samples, 1.49%)</title><rect x="77.8833%" y="1637" width="1.4896%" height="15" fill="rgb(239,52,14)" fg:x="45278018280" fg:w="865962385"/><text x="78.1333%" y="1647.50"></text></g><g><title>try_to_free_mem_cgroup_pages (858,681,472 samples, 1.48%)</title><rect x="77.8958%" y="1621" width="1.4770%" height="15" fill="rgb(208,227,44)" fg:x="45285299193" fg:w="858681472"/><text x="78.1458%" y="1631.50"></text></g><g><title>do_try_to_free_pages (858,681,472 samples, 1.48%)</title><rect x="77.8958%" y="1605" width="1.4770%" height="15" fill="rgb(246,18,19)" fg:x="45285299193" fg:w="858681472"/><text x="78.1458%" y="1615.50"></text></g><g><title>shrink_zones (858,681,472 samples, 1.48%)</title><rect x="77.8958%" y="1589" width="1.4770%" height="15" fill="rgb(235,228,25)" fg:x="45285299193" fg:w="858681472"/><text x="78.1458%" y="1599.50"></text></g><g><title>shrink_node (858,681,472 samples, 1.48%)</title><rect x="77.8958%" y="1573" width="1.4770%" height="15" fill="rgb(240,156,20)" fg:x="45285299193" fg:w="858681472"/><text x="78.1458%" y="1583.50"></text></g><g><title>shrink_node_memcgs (851,588,577 samples, 1.46%)</title><rect x="77.9080%" y="1557" width="1.4648%" height="15" fill="rgb(224,8,20)" fg:x="45292392088" fg:w="851588577"/><text x="78.1580%" y="1567.50"></text></g><g><title>get_mem_cgroup_from_mm (14,441,391 samples, 0.02%)</title><rect x="79.3729%" y="1653" width="0.0248%" height="15" fill="rgb(214,12,52)" fg:x="46143980665" fg:w="14441391"/><text x="79.6229%" y="1663.50"></text></g><g><title>percpu_ref_tryget (8,973,880 samples, 0.02%)</title><rect x="79.3823%" y="1637" width="0.0154%" height="15" fill="rgb(211,220,47)" fg:x="46149448176" fg:w="8973880"/><text x="79.6323%" y="1647.50"></text></g><g><title>__mem_cgroup_charge (897,601,672 samples, 1.54%)</title><rect x="77.8591%" y="1669" width="1.5440%" height="15" fill="rgb(250,173,5)" fg:x="45263937905" fg:w="897601672"/><text x="78.1091%" y="1679.50"></text></g><g><title>__mod_lruvec_page_state (9,997,294 samples, 0.02%)</title><rect x="79.4031%" y="1669" width="0.0172%" height="15" fill="rgb(250,125,52)" fg:x="46161539577" fg:w="9997294"/><text x="79.6531%" y="1679.50"></text></g><g><title>_raw_spin_lock_irq (7,728,593 samples, 0.01%)</title><rect x="79.4207%" y="1669" width="0.0133%" height="15" fill="rgb(209,133,18)" fg:x="46171798347" fg:w="7728593"/><text x="79.6707%" y="1679.50"></text></g><g><title>get_partial_node (9,570,015 samples, 0.02%)</title><rect x="79.4912%" y="1621" width="0.0165%" height="15" fill="rgb(216,173,22)" fg:x="46212776750" fg:w="9570015"/><text x="79.7412%" y="1631.50"></text></g><g><title>___slab_alloc (26,206,430 samples, 0.05%)</title><rect x="79.4733%" y="1637" width="0.0451%" height="15" fill="rgb(205,3,22)" fg:x="46202383139" fg:w="26206430"/><text x="79.7233%" y="1647.50"></text></g><g><title>lock_acquire (7,831,502 samples, 0.01%)</title><rect x="79.5217%" y="1621" width="0.0135%" height="15" fill="rgb(248,22,20)" fg:x="46230508518" fg:w="7831502"/><text x="79.7717%" y="1631.50"></text></g><g><title>fs_reclaim_acquire (11,474,891 samples, 0.02%)</title><rect x="79.5197%" y="1637" width="0.0197%" height="15" fill="rgb(233,6,29)" fg:x="46229343705" fg:w="11474891"/><text x="79.7697%" y="1647.50"></text></g><g><title>__kmem_cache_alloc_node (48,397,808 samples, 0.08%)</title><rect x="79.4584%" y="1653" width="0.0832%" height="15" fill="rgb(240,22,54)" fg:x="46193707467" fg:w="48397808"/><text x="79.7084%" y="1663.50"></text></g><g><title>kmalloc_trace (49,083,589 samples, 0.08%)</title><rect x="79.4584%" y="1669" width="0.0844%" height="15" fill="rgb(231,133,32)" fg:x="46193707467" fg:w="49083589"/><text x="79.7084%" y="1679.50"></text></g><g><title>lock_acquire (11,754,604 samples, 0.02%)</title><rect x="79.5809%" y="1637" width="0.0202%" height="15" fill="rgb(248,193,4)" fg:x="46264948853" fg:w="11754604"/><text x="79.8309%" y="1647.50"></text></g><g><title>__lock_acquire (10,961,968 samples, 0.02%)</title><rect x="79.5823%" y="1621" width="0.0189%" height="15" fill="rgb(211,178,46)" fg:x="46265741489" fg:w="10961968"/><text x="79.8323%" y="1631.50"></text></g><g><title>_raw_spin_lock (12,499,724 samples, 0.02%)</title><rect x="79.5809%" y="1653" width="0.0215%" height="15" fill="rgb(224,5,42)" fg:x="46264948853" fg:w="12499724"/><text x="79.8309%" y="1663.50"></text></g><g><title>get_partial_node (10,138,879 samples, 0.02%)</title><rect x="79.6281%" y="1589" width="0.0174%" height="15" fill="rgb(239,176,25)" fg:x="46292395913" fg:w="10138879"/><text x="79.8781%" y="1599.50"></text></g><g><title>___slab_alloc (23,255,078 samples, 0.04%)</title><rect x="79.6115%" y="1605" width="0.0400%" height="15" fill="rgb(245,187,50)" fg:x="46282726750" fg:w="23255078"/><text x="79.8615%" y="1615.50"></text></g><g><title>fs_reclaim_acquire (6,222,900 samples, 0.01%)</title><rect x="79.6515%" y="1605" width="0.0107%" height="15" fill="rgb(248,24,15)" fg:x="46305981828" fg:w="6222900"/><text x="79.9015%" y="1615.50"></text></g><g><title>__kmem_cache_alloc_node (35,116,552 samples, 0.06%)</title><rect x="79.6024%" y="1621" width="0.0604%" height="15" fill="rgb(205,166,13)" fg:x="46277448577" fg:w="35116552"/><text x="79.8524%" y="1631.50"></text></g><g><title>cache_ext_list_node_alloc (36,648,884 samples, 0.06%)</title><rect x="79.6024%" y="1653" width="0.0630%" height="15" fill="rgb(208,114,23)" fg:x="46277448577" fg:w="36648884"/><text x="79.8524%" y="1663.50"></text></g><g><title>kmalloc_trace (36,648,884 samples, 0.06%)</title><rect x="79.6024%" y="1637" width="0.0630%" height="15" fill="rgb(239,127,18)" fg:x="46277448577" fg:w="36648884"/><text x="79.8524%" y="1647.50"></text></g><g><title>valid_folios_add (71,836,652 samples, 0.12%)</title><rect x="79.5428%" y="1669" width="0.1236%" height="15" fill="rgb(219,154,28)" fg:x="46242791056" fg:w="71836652"/><text x="79.7928%" y="1679.50"></text></g><g><title>lock_acquire (11,207,955 samples, 0.02%)</title><rect x="79.6700%" y="1653" width="0.0193%" height="15" fill="rgb(225,157,23)" fg:x="46316744758" fg:w="11207955"/><text x="79.9200%" y="1663.50"></text></g><g><title>__lock_acquire (8,937,640 samples, 0.02%)</title><rect x="79.6739%" y="1637" width="0.0154%" height="15" fill="rgb(219,8,6)" fg:x="46319015073" fg:w="8937640"/><text x="79.9239%" y="1647.50"></text></g><g><title>xa_get_order (15,313,647 samples, 0.03%)</title><rect x="79.6677%" y="1669" width="0.0263%" height="15" fill="rgb(212,47,6)" fg:x="46315409110" fg:w="15313647"/><text x="79.9177%" y="1679.50"></text></g><g><title>__filemap_add_folio (1,076,545,075 samples, 1.85%)</title><rect x="77.8498%" y="1685" width="1.8518%" height="15" fill="rgb(224,190,4)" fg:x="45258521952" fg:w="1076545075"/><text x="78.0998%" y="1695.50">_..</text></g><g><title>lock_acquire (5,940,781 samples, 0.01%)</title><rect x="79.7161%" y="1637" width="0.0102%" height="15" fill="rgb(239,183,29)" fg:x="46343505174" fg:w="5940781"/><text x="79.9661%" y="1647.50"></text></g><g><title>lru_add_fn (15,144,651 samples, 0.03%)</title><rect x="79.7108%" y="1653" width="0.0261%" height="15" fill="rgb(213,57,7)" fg:x="46340465600" fg:w="15144651"/><text x="79.9608%" y="1663.50"></text></g><g><title>folio_batch_move_lru (18,768,573 samples, 0.03%)</title><rect x="79.7059%" y="1669" width="0.0323%" height="15" fill="rgb(216,148,1)" fg:x="46337586663" fg:w="18768573"/><text x="79.9559%" y="1679.50"></text></g><g><title>folio_add_lru (25,321,607 samples, 0.04%)</title><rect x="79.7037%" y="1685" width="0.0436%" height="15" fill="rgb(236,182,29)" fg:x="46336300491" fg:w="25321607"/><text x="79.9537%" y="1695.50"></text></g><g><title>workingset_refault (32,945,098 samples, 0.06%)</title><rect x="79.7482%" y="1685" width="0.0567%" height="15" fill="rgb(244,120,48)" fg:x="46362167451" fg:w="32945098"/><text x="79.9982%" y="1695.50"></text></g><g><title>workingset_test_recent (14,022,443 samples, 0.02%)</title><rect x="79.7807%" y="1669" width="0.0241%" height="15" fill="rgb(206,71,34)" fg:x="46381090106" fg:w="14022443"/><text x="80.0307%" y="1679.50"></text></g><g><title>filemap_add_folio (1,138,862,459 samples, 1.96%)</title><rect x="77.8498%" y="1701" width="1.9590%" height="15" fill="rgb(242,32,6)" fg:x="45258521952" fg:w="1138862459"/><text x="78.0998%" y="1711.50">f..</text></g><g><title>clear_page_rep (41,044,734 samples, 0.07%)</title><rect x="79.8188%" y="1621" width="0.0706%" height="15" fill="rgb(241,35,3)" fg:x="46403231026" fg:w="41044734"/><text x="80.0688%" y="1631.50"></text></g><g><title>_raw_spin_trylock (9,587,529 samples, 0.02%)</title><rect x="79.8942%" y="1589" width="0.0165%" height="15" fill="rgb(222,62,19)" fg:x="46447073391" fg:w="9587529"/><text x="80.1442%" y="1599.50"></text></g><g><title>lock_acquire (8,236,831 samples, 0.01%)</title><rect x="79.8965%" y="1573" width="0.0142%" height="15" fill="rgb(223,110,41)" fg:x="46448424089" fg:w="8236831"/><text x="80.1465%" y="1583.50"></text></g><g><title>get_page_from_freelist (59,877,232 samples, 0.10%)</title><rect x="79.8158%" y="1637" width="0.1030%" height="15" fill="rgb(208,224,4)" fg:x="46401487546" fg:w="59877232"/><text x="80.0658%" y="1647.50"></text></g><g><title>rmqueue (17,089,018 samples, 0.03%)</title><rect x="79.8894%" y="1621" width="0.0294%" height="15" fill="rgb(241,137,19)" fg:x="46444275760" fg:w="17089018"/><text x="80.1394%" y="1631.50"></text></g><g><title>rmqueue_pcplist (16,332,724 samples, 0.03%)</title><rect x="79.8907%" y="1605" width="0.0281%" height="15" fill="rgb(244,24,17)" fg:x="46445032054" fg:w="16332724"/><text x="80.1407%" y="1615.50"></text></g><g><title>lock_acquire (7,235,878 samples, 0.01%)</title><rect x="79.9251%" y="1605" width="0.0124%" height="15" fill="rgb(245,178,49)" fg:x="46465008482" fg:w="7235878"/><text x="80.1751%" y="1615.50"></text></g><g><title>__alloc_pages (73,386,910 samples, 0.13%)</title><rect x="79.8136%" y="1653" width="0.1262%" height="15" fill="rgb(219,160,38)" fg:x="46400230469" fg:w="73386910"/><text x="80.0636%" y="1663.50"></text></g><g><title>prepare_alloc_pages (12,252,601 samples, 0.02%)</title><rect x="79.9188%" y="1637" width="0.0211%" height="15" fill="rgb(228,137,14)" fg:x="46461364778" fg:w="12252601"/><text x="80.1688%" y="1647.50"></text></g><g><title>fs_reclaim_acquire (10,791,958 samples, 0.02%)</title><rect x="79.9213%" y="1621" width="0.0186%" height="15" fill="rgb(237,134,11)" fg:x="46462825421" fg:w="10791958"/><text x="80.1713%" y="1631.50"></text></g><g><title>filemap_alloc_folio (77,024,709 samples, 0.13%)</title><rect x="79.8087%" y="1701" width="0.1325%" height="15" fill="rgb(211,126,44)" fg:x="46397384411" fg:w="77024709"/><text x="80.0587%" y="1711.50"></text></g><g><title>folio_alloc (76,278,524 samples, 0.13%)</title><rect x="79.8100%" y="1685" width="0.1312%" height="15" fill="rgb(226,171,33)" fg:x="46398130596" fg:w="76278524"/><text x="80.0600%" y="1695.50"></text></g><g><title>alloc_pages (75,674,043 samples, 0.13%)</title><rect x="79.8111%" y="1669" width="0.1302%" height="15" fill="rgb(253,99,13)" fg:x="46398735077" fg:w="75674043"/><text x="80.0611%" y="1679.50"></text></g><g><title>iommu_v1_map_pages (6,145,238 samples, 0.01%)</title><rect x="79.9725%" y="1397" width="0.0106%" height="15" fill="rgb(244,48,7)" fg:x="46492592455" fg:w="6145238"/><text x="80.2225%" y="1407.50"></text></g><g><title>amd_iommu_map_pages (7,374,222 samples, 0.01%)</title><rect x="79.9715%" y="1413" width="0.0127%" height="15" fill="rgb(244,217,54)" fg:x="46491997995" fg:w="7374222"/><text x="80.2215%" y="1423.50"></text></g><g><title>iommu_map_sg (8,860,702 samples, 0.02%)</title><rect x="79.9702%" y="1461" width="0.0152%" height="15" fill="rgb(224,15,18)" fg:x="46491223251" fg:w="8860702"/><text x="80.2202%" y="1471.50"></text></g><g><title>__iommu_map (8,860,702 samples, 0.02%)</title><rect x="79.9702%" y="1445" width="0.0152%" height="15" fill="rgb(244,99,12)" fg:x="46491223251" fg:w="8860702"/><text x="80.2202%" y="1455.50"></text></g><g><title>__iommu_map_pages (8,085,958 samples, 0.01%)</title><rect x="79.9715%" y="1429" width="0.0139%" height="15" fill="rgb(233,226,8)" fg:x="46491997995" fg:w="8085958"/><text x="80.2215%" y="1439.50"></text></g><g><title>iommu_dma_map_sg (14,141,248 samples, 0.02%)</title><rect x="79.9619%" y="1477" width="0.0243%" height="15" fill="rgb(229,211,3)" fg:x="46486414583" fg:w="14141248"/><text x="80.2119%" y="1487.50"></text></g><g><title>__ata_scsi_queuecmd (19,081,736 samples, 0.03%)</title><rect x="79.9547%" y="1541" width="0.0328%" height="15" fill="rgb(216,140,21)" fg:x="46482253240" fg:w="19081736"/><text x="80.2047%" y="1551.50"></text></g><g><title>ata_qc_issue (16,730,539 samples, 0.03%)</title><rect x="79.9588%" y="1525" width="0.0288%" height="15" fill="rgb(234,122,30)" fg:x="46484604437" fg:w="16730539"/><text x="80.2088%" y="1535.50"></text></g><g><title>dma_map_sg_attrs (14,920,393 samples, 0.03%)</title><rect x="79.9619%" y="1509" width="0.0257%" height="15" fill="rgb(236,25,46)" fg:x="46486414583" fg:w="14920393"/><text x="80.2119%" y="1519.50"></text></g><g><title>__dma_map_sg_attrs (14,920,393 samples, 0.03%)</title><rect x="79.9619%" y="1493" width="0.0257%" height="15" fill="rgb(217,52,54)" fg:x="46486414583" fg:w="14920393"/><text x="80.2119%" y="1503.50"></text></g><g><title>ata_scsi_queuecmd (23,897,193 samples, 0.04%)</title><rect x="79.9547%" y="1557" width="0.0411%" height="15" fill="rgb(222,29,26)" fg:x="46482253240" fg:w="23897193"/><text x="80.2047%" y="1567.50"></text></g><g><title>blk_mq_dispatch_rq_list (37,169,293 samples, 0.06%)</title><rect x="79.9486%" y="1589" width="0.0639%" height="15" fill="rgb(216,177,29)" fg:x="46478674392" fg:w="37169293"/><text x="80.1986%" y="1599.50"></text></g><g><title>scsi_queue_rq (36,409,092 samples, 0.06%)</title><rect x="79.9499%" y="1573" width="0.0626%" height="15" fill="rgb(247,136,51)" fg:x="46479434593" fg:w="36409092"/><text x="80.1999%" y="1583.50"></text></g><g><title>dd_dispatch_request (8,055,184 samples, 0.01%)</title><rect x="80.0125%" y="1589" width="0.0139%" height="15" fill="rgb(231,47,47)" fg:x="46515843685" fg:w="8055184"/><text x="80.2625%" y="1599.50"></text></g><g><title>__blk_mq_sched_dispatch_requests (48,850,766 samples, 0.08%)</title><rect x="79.9460%" y="1605" width="0.0840%" height="15" fill="rgb(211,192,36)" fg:x="46477195475" fg:w="48850766"/><text x="80.1960%" y="1615.50"></text></g><g><title>blk_mq_sched_dispatch_requests (50,532,962 samples, 0.09%)</title><rect x="79.9447%" y="1621" width="0.0869%" height="15" fill="rgb(229,156,32)" fg:x="46476428446" fg:w="50532962"/><text x="80.1947%" y="1631.50"></text></g><g><title>blk_mq_run_hw_queue (54,406,470 samples, 0.09%)</title><rect x="79.9425%" y="1637" width="0.0936%" height="15" fill="rgb(248,213,20)" fg:x="46475158835" fg:w="54406470"/><text x="80.1925%" y="1647.50"></text></g><g><title>blk_finish_plug (61,805,647 samples, 0.11%)</title><rect x="79.9425%" y="1685" width="0.1063%" height="15" fill="rgb(217,64,7)" fg:x="46475158835" fg:w="61805647"/><text x="80.1925%" y="1695.50"></text></g><g><title>__blk_flush_plug (61,805,647 samples, 0.11%)</title><rect x="79.9425%" y="1669" width="0.1063%" height="15" fill="rgb(232,142,8)" fg:x="46475158835" fg:w="61805647"/><text x="80.1925%" y="1679.50"></text></g><g><title>blk_mq_flush_plug_list (61,805,647 samples, 0.11%)</title><rect x="79.9425%" y="1653" width="0.1063%" height="15" fill="rgb(224,92,44)" fg:x="46475158835" fg:w="61805647"/><text x="80.1925%" y="1663.50"></text></g><g><title>bio_alloc_bioset (6,748,239 samples, 0.01%)</title><rect x="80.0539%" y="1653" width="0.0116%" height="15" fill="rgb(214,169,17)" fg:x="46539925728" fg:w="6748239"/><text x="80.3039%" y="1663.50"></text></g><g><title>__submit_bio (12,264,163 samples, 0.02%)</title><rect x="80.0792%" y="1605" width="0.0211%" height="15" fill="rgb(210,59,37)" fg:x="46554616393" fg:w="12264163"/><text x="80.3292%" y="1615.50"></text></g><g><title>blk_mq_submit_bio (12,264,163 samples, 0.02%)</title><rect x="80.0792%" y="1589" width="0.0211%" height="15" fill="rgb(214,116,48)" fg:x="46554616393" fg:w="12264163"/><text x="80.3292%" y="1599.50"></text></g><g><title>submit_bio (15,354,497 samples, 0.03%)</title><rect x="80.0762%" y="1653" width="0.0264%" height="15" fill="rgb(244,191,6)" fg:x="46552855423" fg:w="15354497"/><text x="80.3262%" y="1663.50"></text></g><g><title>submit_bio_noacct (15,354,497 samples, 0.03%)</title><rect x="80.0762%" y="1637" width="0.0264%" height="15" fill="rgb(241,50,52)" fg:x="46552855423" fg:w="15354497"/><text x="80.3262%" y="1647.50"></text></g><g><title>submit_bio_noacct_nocheck (13,593,527 samples, 0.02%)</title><rect x="80.0792%" y="1621" width="0.0234%" height="15" fill="rgb(236,75,39)" fg:x="46554616393" fg:w="13593527"/><text x="80.3292%" y="1631.50"></text></g><g><title>ext4_readahead (34,779,762 samples, 0.06%)</title><rect x="80.0488%" y="1685" width="0.0598%" height="15" fill="rgb(236,99,0)" fg:x="46536964482" fg:w="34779762"/><text x="80.2988%" y="1695.50"></text></g><g><title>ext4_mpage_readpages (34,779,762 samples, 0.06%)</title><rect x="80.0488%" y="1669" width="0.0598%" height="15" fill="rgb(207,202,15)" fg:x="46536964482" fg:w="34779762"/><text x="80.2988%" y="1679.50"></text></g><g><title>read_pages (99,181,768 samples, 0.17%)</title><rect x="79.9412%" y="1701" width="0.1706%" height="15" fill="rgb(233,207,14)" fg:x="46474409120" fg:w="99181768"/><text x="80.1912%" y="1711.50"></text></g><g><title>lock_acquire (6,808,026 samples, 0.01%)</title><rect x="80.1127%" y="1685" width="0.0117%" height="15" fill="rgb(226,27,51)" fg:x="46574099613" fg:w="6808026"/><text x="80.3627%" y="1695.50"></text></g><g><title>page_cache_ra_order (1,332,064,378 samples, 2.29%)</title><rect x="77.8472%" y="1733" width="2.2913%" height="15" fill="rgb(206,104,42)" fg:x="45257032266" fg:w="1332064378"/><text x="78.0972%" y="1743.50">p..</text></g><g><title>page_cache_ra_unbounded (1,331,292,672 samples, 2.29%)</title><rect x="77.8485%" y="1717" width="2.2900%" height="15" fill="rgb(212,225,4)" fg:x="45257803972" fg:w="1331292672"/><text x="78.0985%" y="1727.50">p..</text></g><g><title>xa_load (15,505,756 samples, 0.03%)</title><rect x="80.1118%" y="1701" width="0.0267%" height="15" fill="rgb(233,96,42)" fg:x="46573590888" fg:w="15505756"/><text x="80.3618%" y="1711.50"></text></g><g><title>page_cache_sync_ra (3,140,941,397 samples, 5.40%)</title><rect x="74.7373%" y="1765" width="5.4028%" height="15" fill="rgb(229,21,32)" fg:x="43449052671" fg:w="3140941397"/><text x="74.9873%" y="1775.50">page_ca..</text></g><g><title>ondemand_readahead (3,140,941,397 samples, 5.40%)</title><rect x="74.7373%" y="1749" width="5.4028%" height="15" fill="rgb(226,216,24)" fg:x="43449052671" fg:w="3140941397"/><text x="74.9873%" y="1759.50">ondeman..</text></g><g><title>filemap_get_pages (5,145,234,062 samples, 8.85%)</title><rect x="71.2909%" y="1781" width="8.8504%" height="15" fill="rgb(221,163,17)" fg:x="41445480917" fg:w="5145234062"/><text x="71.5409%" y="1791.50">filemap_get_p..</text></g><g><title>folio_activate_fn (11,991,734 samples, 0.02%)</title><rect x="80.1568%" y="1733" width="0.0206%" height="15" fill="rgb(216,216,42)" fg:x="46599733724" fg:w="11991734"/><text x="80.4068%" y="1743.50"></text></g><g><title>folio_batch_move_lru (14,240,856 samples, 0.02%)</title><rect x="80.1553%" y="1749" width="0.0245%" height="15" fill="rgb(240,118,7)" fg:x="46598842999" fg:w="14240856"/><text x="80.4053%" y="1759.50"></text></g><g><title>folio_activate (20,517,567 samples, 0.04%)</title><rect x="80.1528%" y="1765" width="0.0353%" height="15" fill="rgb(221,67,37)" fg:x="46597380600" fg:w="20517567"/><text x="80.4028%" y="1775.50"></text></g><g><title>folio_mark_accessed (45,375,238 samples, 0.08%)</title><rect x="80.1413%" y="1781" width="0.0781%" height="15" fill="rgb(241,32,44)" fg:x="46590714979" fg:w="45375238"/><text x="80.3913%" y="1791.50"></text></g><g><title>workingset_activation (14,836,727 samples, 0.03%)</title><rect x="80.1938%" y="1765" width="0.0255%" height="15" fill="rgb(235,204,43)" fg:x="46621253490" fg:w="14836727"/><text x="80.4438%" y="1775.50"></text></g><g><title>filemap_read (5,432,462,177 samples, 9.34%)</title><rect x="70.8789%" y="1797" width="9.3444%" height="15" fill="rgb(213,116,10)" fg:x="41205963699" fg:w="5432462177"/><text x="71.1289%" y="1807.50">filemap_read</text></g><g><title>ext4_file_read_iter (5,432,993,450 samples, 9.35%)</title><rect x="70.8789%" y="1829" width="9.3454%" height="15" fill="rgb(239,15,48)" fg:x="41205963699" fg:w="5432993450"/><text x="71.1289%" y="1839.50">ext4_file_rea..</text></g><g><title>generic_file_read_iter (5,432,993,450 samples, 9.35%)</title><rect x="70.8789%" y="1813" width="9.3454%" height="15" fill="rgb(207,123,36)" fg:x="41205963699" fg:w="5432993450"/><text x="71.1289%" y="1823.50">generic_file_..</text></g><g><title>__x64_sys_pread64 (5,442,934,890 samples, 9.36%)</title><rect x="70.8694%" y="1861" width="9.3625%" height="15" fill="rgb(209,103,30)" fg:x="41200413946" fg:w="5442934890"/><text x="71.1194%" y="1871.50">__x64_sys_pre..</text></g><g><title>vfs_read (5,441,854,251 samples, 9.36%)</title><rect x="70.8712%" y="1845" width="9.3606%" height="15" fill="rgb(238,100,19)" fg:x="41201494585" fg:w="5441854251"/><text x="71.1212%" y="1855.50">vfs_read</text></g><g><title>do_syscall_64 (5,446,295,518 samples, 9.37%)</title><rect x="70.8694%" y="1877" width="9.3682%" height="15" fill="rgb(244,30,14)" fg:x="41200413946" fg:w="5446295518"/><text x="71.1194%" y="1887.50">do_syscall_64</text></g><g><title>entry_SYSCALL_64 (5,447,662,306 samples, 9.37%)</title><rect x="70.8682%" y="1893" width="9.3706%" height="15" fill="rgb(249,174,6)" fg:x="41199763788" fg:w="5447662306"/><text x="71.1182%" y="1903.50">entry_SYSCALL..</text></g><g><title>__libc_pread (18,291,743,912 samples, 31.46%)</title><rect x="48.7856%" y="1909" width="31.4639%" height="15" fill="rgb(235,213,41)" fg:x="28361867332" fg:w="18291743912"/><text x="49.0356%" y="1919.50">__libc_pread</text></g><g><title>__sanitizer::mem_is_zero (12,173,829 samples, 0.02%)</title><rect x="80.2495%" y="1909" width="0.0209%" height="15" fill="rgb(213,118,6)" fg:x="46653611244" fg:w="12173829"/><text x="80.4995%" y="1919.50"></text></g><g><title>get_file_and_offset_and_size_from_key (15,402,822 samples, 0.03%)</title><rect x="80.2704%" y="1909" width="0.0265%" height="15" fill="rgb(235,44,51)" fg:x="46665785073" fg:w="15402822"/><text x="80.5204%" y="1919.50"></text></g><g><title>IOTraceClient::do_read (18,331,476,628 samples, 31.53%)</title><rect x="48.7668%" y="1925" width="31.5322%" height="15" fill="rgb(217,9,53)" fg:x="28350924093" fg:w="18331476628"/><text x="49.0168%" y="1935.50">IOTraceClient::do_read</text></g><g><title>IOTraceClient::do_operation (42,838,845,789 samples, 73.69%)</title><rect x="6.6166%" y="1941" width="73.6877%" height="15" fill="rgb(237,172,34)" fg:x="3846634071" fg:w="42838845789"/><text x="6.8666%" y="1951.50">IOTraceClient::do_operation</text></g><g><title>std::unordered_map&lt;int, std::vector&lt;long, std::allocator&lt;long&gt; &gt; [5], std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::vector&lt;long, std::allocator&lt;long&gt; &gt; [5]&gt; &gt; &gt;::operator[] (6,536,114 samples, 0.01%)</title><rect x="80.3210%" y="1925" width="0.0112%" height="15" fill="rgb(206,206,11)" fg:x="46695195446" fg:w="6536114"/><text x="80.5710%" y="1935.50"></text></g><g><title>std::__detail::_Map_base&lt;int, std::pair&lt;int const, std::vector&lt;long, std::allocator&lt;long&gt; &gt; [5]&gt;, std::allocator&lt;std::pair&lt;int const, std::vector&lt;long, std::allocator&lt;long&gt; &gt; [5]&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (6,536,114 samples, 0.01%)</title><rect x="80.3210%" y="1909" width="0.0112%" height="15" fill="rgb(214,149,29)" fg:x="46695195446" fg:w="6536114"/><text x="80.5710%" y="1919.50"></text></g><g><title>OpMeasurement::record_op (18,350,039 samples, 0.03%)</title><rect x="80.3043%" y="1941" width="0.0316%" height="15" fill="rgb(208,123,3)" fg:x="46685479860" fg:w="18350039"/><text x="80.5543%" y="1951.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (12,160,229 samples, 0.02%)</title><rect x="80.3626%" y="1909" width="0.0209%" height="15" fill="rgb(229,126,4)" fg:x="46719381420" fg:w="12160229"/><text x="80.6126%" y="1919.50"></text></g><g><title>void std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (10,187,918 samples, 0.02%)</title><rect x="80.3660%" y="1893" width="0.0175%" height="15" fill="rgb(222,92,36)" fg:x="46721353731" fg:w="10187918"/><text x="80.6160%" y="1903.50"></text></g><g><title>TraceIterator::next_op (29,445,040 samples, 0.05%)</title><rect x="80.3371%" y="1925" width="0.0506%" height="15" fill="rgb(216,39,41)" fg:x="46704572490" fg:w="29445040"/><text x="80.5871%" y="1935.50"></text></g><g><title>TraceWorkload::next_op (35,971,428 samples, 0.06%)</title><rect x="80.3371%" y="1941" width="0.0619%" height="15" fill="rgb(253,127,28)" fg:x="46704572490" fg:w="35971428"/><text x="80.5871%" y="1951.50"></text></g><g><title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void (*)(Client*, Workload*, OpMeasurement*, long), Client*, Workload*, OpMeasurement*, long&gt; &gt; &gt;::_M_run (42,905,435,381 samples, 73.80%)</title><rect x="6.6075%" y="2037" width="73.8022%" height="15" fill="rgb(249,152,51)" fg:x="3841336491" fg:w="42905435381"/><text x="6.8575%" y="2047.50">std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void (*)(Client*, Workload*, OpMeasurement*, long), Client*, Work..</text></g><g><title>std::thread::_Invoker&lt;std::tuple&lt;void (*)(Client*, Workload*, OpMeasurement*, long), Client*, Workload*, OpMeasurement*, long&gt; &gt;::operator (42,905,435,381 samples, 73.80%)</title><rect x="6.6075%" y="2021" width="73.8022%" height="15" fill="rgb(209,123,42)" fg:x="3841336491" fg:w="42905435381"/><text x="6.8575%" y="2031.50">std::thread::_Invoker&lt;std::tuple&lt;void (*)(Client*, Workload*, OpMeasurement*, long), Client*, Workload*, OpMeasurement*, lo..</text></g><g><title>void std::thread::_Invoker&lt;std::tuple&lt;void (*)(Client*, Workload*, OpMeasurement*, long), Client*, Workload*, OpMeasurement*, long&gt; &gt;::_M_invoke&lt;0ul, 1ul, 2ul, 3ul, 4ul&gt; (42,905,435,381 samples, 73.80%)</title><rect x="6.6075%" y="2005" width="73.8022%" height="15" fill="rgb(241,118,22)" fg:x="3841336491" fg:w="42905435381"/><text x="6.8575%" y="2015.50">void std::thread::_Invoker&lt;std::tuple&lt;void (*)(Client*, Workload*, OpMeasurement*, long), Client*, Workload*, OpMeasurement..</text></g><g><title>std::__invoke_result&lt;void (*)(Client*, Workload*, OpMeasurement*, long), Client*, Workload*, OpMeasurement*, long&gt;::type std::__invoke&lt;void (*)(Client*, Workload*, OpMeasurement*, long), Client*, Workload*, OpMeasurement*, long&gt; (42,905,435,381 samples, 73.80%)</title><rect x="6.6075%" y="1989" width="73.8022%" height="15" fill="rgb(208,25,7)" fg:x="3841336491" fg:w="42905435381"/><text x="6.8575%" y="1999.50">std::__invoke_result&lt;void (*)(Client*, Workload*, OpMeasurement*, long), Client*, Workload*, OpMeasurement*, long&gt;::type st..</text></g><g><title>void std::__invoke_impl&lt;void, void (*)(Client*, Workload*, OpMeasurement*, long), Client*, Workload*, OpMeasurement*, long&gt; (42,905,435,381 samples, 73.80%)</title><rect x="6.6075%" y="1973" width="73.8022%" height="15" fill="rgb(243,144,39)" fg:x="3841336491" fg:w="42905435381"/><text x="6.8575%" y="1983.50">void std::__invoke_impl&lt;void, void (*)(Client*, Workload*, OpMeasurement*, long), Client*, Workload*, OpMeasurement*, long&gt;</text></g><g><title>worker_thread_fn (42,901,680,027 samples, 73.80%)</title><rect x="6.6140%" y="1957" width="73.7957%" height="15" fill="rgb(250,50,5)" fg:x="3845091845" fg:w="42901680027"/><text x="6.8640%" y="1967.50">worker_thread_fn</text></g><g><title>[libstdc++.so.6.0.30] (42,905,583,332 samples, 73.80%)</title><rect x="6.6075%" y="2053" width="73.8024%" height="15" fill="rgb(207,67,11)" fg:x="3841336491" fg:w="42905583332"/><text x="6.8575%" y="2063.50">[libstdc++.so.6.0.30]</text></g><g><title>[unknown] (22,384,784 samples, 0.04%)</title><rect x="80.4100%" y="2037" width="0.0385%" height="15" fill="rgb(245,204,40)" fg:x="46746919823" fg:w="22384784"/><text x="80.6600%" y="2047.50"></text></g><g><title>do_raw_write_lock (46,037,429 samples, 0.08%)</title><rect x="80.5136%" y="1589" width="0.0792%" height="15" fill="rgb(238,228,24)" fg:x="46807154753" fg:w="46037429"/><text x="80.7636%" y="1599.50"></text></g><g><title>queued_write_lock_slowpath (45,294,159 samples, 0.08%)</title><rect x="80.5149%" y="1573" width="0.0779%" height="15" fill="rgb(217,116,22)" fg:x="46807898023" fg:w="45294159"/><text x="80.7649%" y="1583.50"></text></g><g><title>native_queued_spin_lock_slowpath (17,302,609 samples, 0.03%)</title><rect x="80.5630%" y="1557" width="0.0298%" height="15" fill="rgb(234,98,12)" fg:x="46835889573" fg:w="17302609"/><text x="80.8130%" y="1567.50"></text></g><g><title>cache_ext_ds_registry_write_lock (50,690,866 samples, 0.09%)</title><rect x="80.5136%" y="1621" width="0.0872%" height="15" fill="rgb(242,170,50)" fg:x="46807154753" fg:w="50690866"/><text x="80.7636%" y="1631.50"></text></g><g><title>_raw_write_lock (50,690,866 samples, 0.09%)</title><rect x="80.5136%" y="1605" width="0.0872%" height="15" fill="rgb(235,7,5)" fg:x="46807154753" fg:w="50690866"/><text x="80.7636%" y="1615.50"></text></g><g><title>cache_ext_list_node_free (8,791,969 samples, 0.02%)</title><rect x="80.6020%" y="1621" width="0.0151%" height="15" fill="rgb(241,114,28)" fg:x="46858551572" fg:w="8791969"/><text x="80.8520%" y="1631.50"></text></g><g><title>kfree (8,791,969 samples, 0.02%)</title><rect x="80.6020%" y="1605" width="0.0151%" height="15" fill="rgb(246,112,42)" fg:x="46858551572" fg:w="8791969"/><text x="80.8520%" y="1615.50"></text></g><g><title>valid_folios_del (63,325,589 samples, 0.11%)</title><rect x="80.5095%" y="1637" width="0.1089%" height="15" fill="rgb(248,228,14)" fg:x="46804797759" fg:w="63325589"/><text x="80.7595%" y="1647.50"></text></g><g><title>__filemap_remove_folio (68,674,807 samples, 0.12%)</title><rect x="80.5082%" y="1653" width="0.1181%" height="15" fill="rgb(208,133,18)" fg:x="46804001086" fg:w="68674807"/><text x="80.7582%" y="1663.50"></text></g><g><title>do_raw_spin_lock (16,935,226 samples, 0.03%)</title><rect x="80.6263%" y="1637" width="0.0291%" height="15" fill="rgb(207,35,49)" fg:x="46872675893" fg:w="16935226"/><text x="80.8763%" y="1647.50"></text></g><g><title>native_queued_spin_lock_slowpath (15,460,737 samples, 0.03%)</title><rect x="80.6288%" y="1621" width="0.0266%" height="15" fill="rgb(205,68,36)" fg:x="46874150382" fg:w="15460737"/><text x="80.8788%" y="1631.50"></text></g><g><title>_raw_spin_lock (19,314,049 samples, 0.03%)</title><rect x="80.6263%" y="1653" width="0.0332%" height="15" fill="rgb(245,62,40)" fg:x="46872675893" fg:w="19314049"/><text x="80.8763%" y="1663.50"></text></g><g><title>__remove_mapping (91,154,686 samples, 0.16%)</title><rect x="80.5068%" y="1669" width="0.1568%" height="15" fill="rgb(228,27,24)" fg:x="46803202842" fg:w="91154686"/><text x="80.7568%" y="1679.50"></text></g><g><title>reclaim_pages (109,567,772 samples, 0.19%)</title><rect x="80.4939%" y="1717" width="0.1885%" height="15" fill="rgb(253,19,12)" fg:x="46795713709" fg:w="109567772"/><text x="80.7439%" y="1727.50"></text></g><g><title>reclaim_folio_list (107,974,775 samples, 0.19%)</title><rect x="80.4967%" y="1701" width="0.1857%" height="15" fill="rgb(232,28,20)" fg:x="46797306706" fg:w="107974775"/><text x="80.7467%" y="1711.50"></text></g><g><title>shrink_folio_list (105,590,469 samples, 0.18%)</title><rect x="80.5008%" y="1685" width="0.1816%" height="15" fill="rgb(218,35,51)" fg:x="46799691012" fg:w="105590469"/><text x="80.7508%" y="1695.50"></text></g><g><title>page_cache_ext_isolate_and_reclaim (123,382,448 samples, 0.21%)</title><rect x="80.4833%" y="1749" width="0.2122%" height="15" fill="rgb(212,90,40)" fg:x="46789553685" fg:w="123382448"/><text x="80.7333%" y="1759.50"></text></g><g><title>__page_cache_ext_isolate_and_reclaim (123,382,448 samples, 0.21%)</title><rect x="80.4833%" y="1733" width="0.2122%" height="15" fill="rgb(220,172,12)" fg:x="46789553685" fg:w="123382448"/><text x="80.7333%" y="1743.50"></text></g><g><title>valid_folios_exists_unlocked (7,654,652 samples, 0.01%)</title><rect x="80.6824%" y="1717" width="0.0132%" height="15" fill="rgb(226,159,20)" fg:x="46905281481" fg:w="7654652"/><text x="80.9324%" y="1727.50"></text></g><g><title>shrink_lruvec (131,806,441 samples, 0.23%)</title><rect x="80.4833%" y="1765" width="0.2267%" height="15" fill="rgb(234,205,16)" fg:x="46789553685" fg:w="131806441"/><text x="80.7333%" y="1775.50"></text></g><g><title>shrink_list (8,423,993 samples, 0.01%)</title><rect x="80.6955%" y="1749" width="0.0145%" height="15" fill="rgb(207,9,39)" fg:x="46912936133" fg:w="8423993"/><text x="80.9455%" y="1759.50"></text></g><g><title>shrink_inactive_list (8,423,993 samples, 0.01%)</title><rect x="80.6955%" y="1733" width="0.0145%" height="15" fill="rgb(249,143,15)" fg:x="46912936133" fg:w="8423993"/><text x="80.9455%" y="1743.50"></text></g><g><title>shrink_folio_list (7,653,572 samples, 0.01%)</title><rect x="80.6969%" y="1717" width="0.0132%" height="15" fill="rgb(253,133,29)" fg:x="46913706554" fg:w="7653572"/><text x="80.9469%" y="1727.50"></text></g><g><title>__remove_mapping (7,653,572 samples, 0.01%)</title><rect x="80.6969%" y="1701" width="0.0132%" height="15" fill="rgb(221,187,0)" fg:x="46913706554" fg:w="7653572"/><text x="80.9469%" y="1711.50"></text></g><g><title>charge_memcg (135,496,327 samples, 0.23%)</title><rect x="80.4809%" y="1877" width="0.2331%" height="15" fill="rgb(205,204,26)" fg:x="46788153053" fg:w="135496327"/><text x="80.7309%" y="1887.50"></text></g><g><title>try_charge_memcg (134,698,078 samples, 0.23%)</title><rect x="80.4823%" y="1861" width="0.2317%" height="15" fill="rgb(224,68,54)" fg:x="46788951302" fg:w="134698078"/><text x="80.7323%" y="1871.50"></text></g><g><title>try_to_free_mem_cgroup_pages (134,095,695 samples, 0.23%)</title><rect x="80.4833%" y="1845" width="0.2307%" height="15" fill="rgb(209,67,4)" fg:x="46789553685" fg:w="134095695"/><text x="80.7333%" y="1855.50"></text></g><g><title>do_try_to_free_pages (134,095,695 samples, 0.23%)</title><rect x="80.4833%" y="1829" width="0.2307%" height="15" fill="rgb(228,229,18)" fg:x="46789553685" fg:w="134095695"/><text x="80.7333%" y="1839.50"></text></g><g><title>shrink_zones (134,095,695 samples, 0.23%)</title><rect x="80.4833%" y="1813" width="0.2307%" height="15" fill="rgb(231,89,13)" fg:x="46789553685" fg:w="134095695"/><text x="80.7333%" y="1823.50"></text></g><g><title>shrink_node (134,095,695 samples, 0.23%)</title><rect x="80.4833%" y="1797" width="0.2307%" height="15" fill="rgb(210,182,18)" fg:x="46789553685" fg:w="134095695"/><text x="80.7333%" y="1807.50"></text></g><g><title>shrink_node_memcgs (134,095,695 samples, 0.23%)</title><rect x="80.4833%" y="1781" width="0.2307%" height="15" fill="rgb(240,105,2)" fg:x="46789553685" fg:w="134095695"/><text x="80.7333%" y="1791.50"></text></g><g><title>__mem_cgroup_charge (137,091,761 samples, 0.24%)</title><rect x="80.4809%" y="1893" width="0.2358%" height="15" fill="rgb(207,170,50)" fg:x="46788153053" fg:w="137091761"/><text x="80.7309%" y="1903.50"></text></g><g><title>flush_tlb_mm_range (11,694,579 samples, 0.02%)</title><rect x="80.7180%" y="1877" width="0.0201%" height="15" fill="rgb(232,133,24)" fg:x="46925962183" fg:w="11694579"/><text x="80.9680%" y="1887.50"></text></g><g><title>native_flush_tlb_multi (11,071,530 samples, 0.02%)</title><rect x="80.7190%" y="1861" width="0.0190%" height="15" fill="rgb(235,166,27)" fg:x="46926585232" fg:w="11071530"/><text x="80.9690%" y="1871.50"></text></g><g><title>on_each_cpu_cond_mask (11,071,530 samples, 0.02%)</title><rect x="80.7190%" y="1845" width="0.0190%" height="15" fill="rgb(209,19,13)" fg:x="46926585232" fg:w="11071530"/><text x="80.9690%" y="1855.50"></text></g><g><title>smp_call_function_many_cond (11,071,530 samples, 0.02%)</title><rect x="80.7190%" y="1829" width="0.0190%" height="15" fill="rgb(226,79,39)" fg:x="46926585232" fg:w="11071530"/><text x="80.9690%" y="1839.50"></text></g><g><title>ptep_clear_flush (12,232,820 samples, 0.02%)</title><rect x="80.7180%" y="1893" width="0.0210%" height="15" fill="rgb(222,163,10)" fg:x="46925962183" fg:w="12232820"/><text x="80.9680%" y="1903.50"></text></g><g><title>do_wp_page (154,451,324 samples, 0.27%)</title><rect x="80.4784%" y="1925" width="0.2657%" height="15" fill="rgb(214,44,19)" fg:x="46786691933" fg:w="154451324"/><text x="80.7284%" y="1935.50"></text></g><g><title>wp_page_copy (154,451,324 samples, 0.27%)</title><rect x="80.4784%" y="1909" width="0.2657%" height="15" fill="rgb(210,217,13)" fg:x="46786691933" fg:w="154451324"/><text x="80.7284%" y="1919.50"></text></g><g><title>__handle_mm_fault (158,242,062 samples, 0.27%)</title><rect x="80.4739%" y="1957" width="0.2722%" height="15" fill="rgb(237,61,54)" fg:x="46784055628" fg:w="158242062"/><text x="80.7239%" y="1967.50"></text></g><g><title>handle_pte_fault (156,974,299 samples, 0.27%)</title><rect x="80.4760%" y="1941" width="0.2700%" height="15" fill="rgb(226,184,24)" fg:x="46785323391" fg:w="156974299"/><text x="80.7260%" y="1951.50"></text></g><g><title>handle_mm_fault (160,519,828 samples, 0.28%)</title><rect x="80.4739%" y="1973" width="0.2761%" height="15" fill="rgb(223,226,4)" fg:x="46784055628" fg:w="160519828"/><text x="80.7239%" y="1983.50"></text></g><g><title>do_user_addr_fault (165,318,083 samples, 0.28%)</title><rect x="80.4718%" y="1989" width="0.2844%" height="15" fill="rgb(210,26,41)" fg:x="46782859263" fg:w="165318083"/><text x="80.7218%" y="1999.50"></text></g><g><title>asm_exc_page_fault (166,647,856 samples, 0.29%)</title><rect x="80.4699%" y="2021" width="0.2867%" height="15" fill="rgb(220,221,6)" fg:x="46781751105" fg:w="166647856"/><text x="80.7199%" y="2031.50"></text></g><g><title>exc_page_fault (166,336,514 samples, 0.29%)</title><rect x="80.4704%" y="2005" width="0.2861%" height="15" fill="rgb(225,89,49)" fg:x="46782062447" fg:w="166336514"/><text x="80.7204%" y="2015.50"></text></g><g><title>_raw_read_lock (27,099,796 samples, 0.05%)</title><rect x="80.8026%" y="1989" width="0.0466%" height="15" fill="rgb(218,70,45)" fg:x="46975166733" fg:w="27099796"/><text x="81.0526%" y="1999.50"></text></g><g><title>do_raw_read_lock (27,099,796 samples, 0.05%)</title><rect x="80.8026%" y="1973" width="0.0466%" height="15" fill="rgb(238,166,21)" fg:x="46975166733" fg:w="27099796"/><text x="81.0526%" y="1983.50"></text></g><g><title>queued_read_lock_slowpath (27,099,796 samples, 0.05%)</title><rect x="80.8026%" y="1957" width="0.0466%" height="15" fill="rgb(224,141,44)" fg:x="46975166733" fg:w="27099796"/><text x="81.0526%" y="1967.50"></text></g><g><title>native_queued_spin_lock_slowpath (22,269,637 samples, 0.04%)</title><rect x="80.8109%" y="1941" width="0.0383%" height="15" fill="rgb(230,12,49)" fg:x="46979996892" fg:w="22269637"/><text x="81.0609%" y="1951.50"></text></g><g><title>bpf_prog_53d125a157918351_sampling_evict_folios (124,871,850 samples, 0.21%)</title><rect x="80.7565%" y="2021" width="0.2148%" height="15" fill="rgb(212,174,12)" fg:x="46948398961" fg:w="124871850"/><text x="81.0065%" y="2031.50"></text></g><g><title>bpf_cache_ext_list_sample (124,871,850 samples, 0.21%)</title><rect x="80.7565%" y="2005" width="0.2148%" height="15" fill="rgb(246,67,9)" fg:x="46948398961" fg:w="124871850"/><text x="81.0065%" y="2015.50"></text></g><g><title>bpf_prog_baff5aaf85fd2c96_bpf_lfu_score_fn (68,899,890 samples, 0.12%)</title><rect x="80.8528%" y="1989" width="0.1185%" height="15" fill="rgb(239,35,23)" fg:x="47004370921" fg:w="68899890"/><text x="81.1028%" y="1999.50"></text></g><g><title>__htab_map_lookup_elem (68,899,890 samples, 0.12%)</title><rect x="80.8528%" y="1973" width="0.1185%" height="15" fill="rgb(211,167,0)" fg:x="47004370921" fg:w="68899890"/><text x="81.1028%" y="1983.50"></text></g><g><title>rcu_read_lock_held (7,852,025 samples, 0.01%)</title><rect x="80.9578%" y="1957" width="0.0135%" height="15" fill="rgb(225,119,45)" fg:x="47065418786" fg:w="7852025"/><text x="81.2078%" y="1967.50"></text></g><g><title>do_raw_write_lock (179,556,149 samples, 0.31%)</title><rect x="80.9818%" y="1957" width="0.3089%" height="15" fill="rgb(210,162,6)" fg:x="47079325026" fg:w="179556149"/><text x="81.2318%" y="1967.50"></text></g><g><title>queued_write_lock_slowpath (179,556,149 samples, 0.31%)</title><rect x="80.9818%" y="1941" width="0.3089%" height="15" fill="rgb(208,118,35)" fg:x="47079325026" fg:w="179556149"/><text x="81.2318%" y="1951.50"></text></g><g><title>native_queued_spin_lock_slowpath (125,890,526 samples, 0.22%)</title><rect x="81.0741%" y="1925" width="0.2165%" height="15" fill="rgb(239,4,53)" fg:x="47132990649" fg:w="125890526"/><text x="81.3241%" y="1935.50"></text></g><g><title>cache_ext_list_del (185,622,643 samples, 0.32%)</title><rect x="80.9727%" y="1989" width="0.3193%" height="15" fill="rgb(213,130,21)" fg:x="47074055285" fg:w="185622643"/><text x="81.2227%" y="1999.50"></text></g><g><title>_raw_write_lock (180,352,902 samples, 0.31%)</title><rect x="80.9818%" y="1973" width="0.3102%" height="15" fill="rgb(235,148,0)" fg:x="47079325026" fg:w="180352902"/><text x="81.2318%" y="1983.50"></text></g><g><title>bpf_cache_ext_list_del (186,411,371 samples, 0.32%)</title><rect x="80.9727%" y="2005" width="0.3206%" height="15" fill="rgb(244,224,18)" fg:x="47074055285" fg:w="186411371"/><text x="81.2227%" y="2015.50"></text></g><g><title>bpf_prog_94714edc913e697a_sampling_folio_evicted (192,692,713 samples, 0.33%)</title><rect x="80.9713%" y="2021" width="0.3315%" height="15" fill="rgb(211,214,4)" fg:x="47073270811" fg:w="192692713"/><text x="81.2213%" y="2031.50"></text></g><g><title>__asan::Allocator::Allocate (498,348,019 samples, 0.86%)</title><rect x="80.4498%" y="2037" width="0.8572%" height="15" fill="rgb(206,119,25)" fg:x="46770045368" fg:w="498348019"/><text x="80.6998%" y="2047.50"></text></g><g><title>[unknown] (542,179,728 samples, 0.93%)</title><rect x="80.4100%" y="2053" width="0.9326%" height="15" fill="rgb(243,93,47)" fg:x="46746919823" fg:w="542179728"/><text x="80.6600%" y="2063.50"></text></g><g><title>handle_mm_fault (204,212,976 samples, 0.35%)</title><rect x="81.3592%" y="1989" width="0.3513%" height="15" fill="rgb(224,194,6)" fg:x="47298750855" fg:w="204212976"/><text x="81.6092%" y="1999.50"></text></g><g><title>__handle_mm_fault (204,212,976 samples, 0.35%)</title><rect x="81.3592%" y="1973" width="0.3513%" height="15" fill="rgb(243,229,6)" fg:x="47298750855" fg:w="204212976"/><text x="81.6092%" y="1983.50"></text></g><g><title>handle_pte_fault (203,769,959 samples, 0.35%)</title><rect x="81.3600%" y="1957" width="0.3505%" height="15" fill="rgb(207,23,50)" fg:x="47299193872" fg:w="203769959"/><text x="81.6100%" y="1967.50"></text></g><g><title>do_wp_page (202,455,579 samples, 0.35%)</title><rect x="81.3622%" y="1941" width="0.3482%" height="15" fill="rgb(253,192,32)" fg:x="47300508252" fg:w="202455579"/><text x="81.6122%" y="1951.50"></text></g><g><title>wp_page_copy (202,455,579 samples, 0.35%)</title><rect x="81.3622%" y="1925" width="0.3482%" height="15" fill="rgb(213,21,6)" fg:x="47300508252" fg:w="202455579"/><text x="81.6122%" y="1935.50"></text></g><g><title>ptep_clear_flush (199,314,956 samples, 0.34%)</title><rect x="81.3676%" y="1909" width="0.3428%" height="15" fill="rgb(243,151,13)" fg:x="47303648875" fg:w="199314956"/><text x="81.6176%" y="1919.50"></text></g><g><title>flush_tlb_mm_range (199,314,956 samples, 0.34%)</title><rect x="81.3676%" y="1893" width="0.3428%" height="15" fill="rgb(233,165,41)" fg:x="47303648875" fg:w="199314956"/><text x="81.6176%" y="1903.50"></text></g><g><title>native_flush_tlb_multi (199,314,956 samples, 0.34%)</title><rect x="81.3676%" y="1877" width="0.3428%" height="15" fill="rgb(246,176,45)" fg:x="47303648875" fg:w="199314956"/><text x="81.6176%" y="1887.50"></text></g><g><title>on_each_cpu_cond_mask (199,314,956 samples, 0.34%)</title><rect x="81.3676%" y="1861" width="0.3428%" height="15" fill="rgb(217,170,52)" fg:x="47303648875" fg:w="199314956"/><text x="81.6176%" y="1871.50"></text></g><g><title>smp_call_function_many_cond (199,314,956 samples, 0.34%)</title><rect x="81.3676%" y="1845" width="0.3428%" height="15" fill="rgb(214,203,54)" fg:x="47303648875" fg:w="199314956"/><text x="81.6176%" y="1855.50"></text></g><g><title>__asan::Allocator::Allocate (216,370,061 samples, 0.37%)</title><rect x="81.3439%" y="2053" width="0.3722%" height="15" fill="rgb(248,215,49)" fg:x="47289862466" fg:w="216370061"/><text x="81.5939%" y="2063.50"></text></g><g><title>asm_exc_page_fault (207,481,672 samples, 0.36%)</title><rect x="81.3592%" y="2037" width="0.3569%" height="15" fill="rgb(208,46,10)" fg:x="47298750855" fg:w="207481672"/><text x="81.6092%" y="2047.50"></text></g><g><title>exc_page_fault (207,481,672 samples, 0.36%)</title><rect x="81.3592%" y="2021" width="0.3569%" height="15" fill="rgb(254,5,31)" fg:x="47298750855" fg:w="207481672"/><text x="81.6092%" y="2031.50"></text></g><g><title>do_user_addr_fault (207,481,672 samples, 0.36%)</title><rect x="81.3592%" y="2005" width="0.3569%" height="15" fill="rgb(222,104,33)" fg:x="47298750855" fg:w="207481672"/><text x="81.6092%" y="2015.50"></text></g><g><title>__sanitizer::BufferedStackTrace::UnwindFast (8,672,003 samples, 0.01%)</title><rect x="81.7275%" y="2053" width="0.0149%" height="15" fill="rgb(248,49,16)" fg:x="47512880945" fg:w="8672003"/><text x="81.9775%" y="2063.50"></text></g><g><title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (8,650,554 samples, 0.01%)</title><rect x="81.7433%" y="2053" width="0.0149%" height="15" fill="rgb(232,198,41)" fg:x="47522033474" fg:w="8650554"/><text x="81.9933%" y="2063.50"></text></g><g><title>bpf_prog_53d125a157918351_sampling_evict_folios (10,221,266 samples, 0.02%)</title><rect x="81.7651%" y="2037" width="0.0176%" height="15" fill="rgb(214,125,3)" fg:x="47534701491" fg:w="10221266"/><text x="82.0151%" y="2047.50"></text></g><g><title>bpf_cache_ext_list_sample (10,221,266 samples, 0.02%)</title><rect x="81.7651%" y="2021" width="0.0176%" height="15" fill="rgb(229,220,28)" fg:x="47534701491" fg:w="10221266"/><text x="82.0151%" y="2031.50"></text></g><g><title>bpf_prog_baff5aaf85fd2c96_bpf_lfu_score_fn (7,045,009 samples, 0.01%)</title><rect x="81.7705%" y="2005" width="0.0121%" height="15" fill="rgb(222,64,37)" fg:x="47537877748" fg:w="7045009"/><text x="82.0205%" y="2015.50"></text></g><g><title>__htab_map_lookup_elem (7,045,009 samples, 0.01%)</title><rect x="81.7705%" y="1989" width="0.0121%" height="15" fill="rgb(249,184,13)" fg:x="47537877748" fg:w="7045009"/><text x="82.0205%" y="1999.50"></text></g><g><title>bpf_prog_94714edc913e697a_sampling_folio_evicted (7,151,279 samples, 0.01%)</title><rect x="81.7826%" y="2037" width="0.0123%" height="15" fill="rgb(252,176,6)" fg:x="47544922757" fg:w="7151279"/><text x="82.0326%" y="2047.50"></text></g><g><title>bpf_cache_ext_list_del (6,354,084 samples, 0.01%)</title><rect x="81.7840%" y="2021" width="0.0109%" height="15" fill="rgb(228,153,7)" fg:x="47545719952" fg:w="6354084"/><text x="82.0340%" y="2031.50"></text></g><g><title>cache_ext_list_del (6,354,084 samples, 0.01%)</title><rect x="81.7840%" y="2005" width="0.0109%" height="15" fill="rgb(242,193,5)" fg:x="47545719952" fg:w="6354084"/><text x="82.0340%" y="2015.50"></text></g><g><title>__sanitizer::internal_mmap (23,642,806 samples, 0.04%)</title><rect x="81.7651%" y="2053" width="0.0407%" height="15" fill="rgb(232,140,9)" fg:x="47534701491" fg:w="23642806"/><text x="82.0151%" y="2063.50"></text></g><g><title>entry_SYSCALL_64 (6,270,261 samples, 0.01%)</title><rect x="81.7949%" y="2037" width="0.0108%" height="15" fill="rgb(213,222,16)" fg:x="47552074036" fg:w="6270261"/><text x="82.0449%" y="2047.50"></text></g><g><title>do_syscall_64 (6,270,261 samples, 0.01%)</title><rect x="81.7949%" y="2021" width="0.0108%" height="15" fill="rgb(222,75,50)" fg:x="47552074036" fg:w="6270261"/><text x="82.0449%" y="2031.50"></text></g><g><title>__x64_sys_mmap (6,270,261 samples, 0.01%)</title><rect x="81.7949%" y="2005" width="0.0108%" height="15" fill="rgb(205,180,2)" fg:x="47552074036" fg:w="6270261"/><text x="82.0449%" y="2015.50"></text></g><g><title>ksys_mmap_pgoff (6,270,261 samples, 0.01%)</title><rect x="81.7949%" y="1989" width="0.0108%" height="15" fill="rgb(216,34,7)" fg:x="47552074036" fg:w="6270261"/><text x="82.0449%" y="1999.50"></text></g><g><title>vm_mmap_pgoff (6,270,261 samples, 0.01%)</title><rect x="81.7949%" y="1973" width="0.0108%" height="15" fill="rgb(253,16,32)" fg:x="47552074036" fg:w="6270261"/><text x="82.0449%" y="1983.50"></text></g><g><title>do_mmap (6,270,261 samples, 0.01%)</title><rect x="81.7949%" y="1957" width="0.0108%" height="15" fill="rgb(208,97,28)" fg:x="47552074036" fg:w="6270261"/><text x="82.0449%" y="1967.50"></text></g><g><title>mmap_region (6,270,261 samples, 0.01%)</title><rect x="81.7949%" y="1941" width="0.0108%" height="15" fill="rgb(225,92,11)" fg:x="47552074036" fg:w="6270261"/><text x="82.0449%" y="1951.50"></text></g><g><title>do_vmi_munmap (6,270,261 samples, 0.01%)</title><rect x="81.7949%" y="1925" width="0.0108%" height="15" fill="rgb(243,38,12)" fg:x="47552074036" fg:w="6270261"/><text x="82.0449%" y="1935.50"></text></g><g><title>do_vmi_align_munmap (6,270,261 samples, 0.01%)</title><rect x="81.7949%" y="1909" width="0.0108%" height="15" fill="rgb(208,139,16)" fg:x="47552074036" fg:w="6270261"/><text x="82.0449%" y="1919.50"></text></g><g><title>__split_vma (6,270,261 samples, 0.01%)</title><rect x="81.7949%" y="1893" width="0.0108%" height="15" fill="rgb(227,24,9)" fg:x="47552074036" fg:w="6270261"/><text x="82.0449%" y="1903.50"></text></g><g><title>vm_area_dup (6,270,261 samples, 0.01%)</title><rect x="81.7949%" y="1877" width="0.0108%" height="15" fill="rgb(206,62,11)" fg:x="47552074036" fg:w="6270261"/><text x="82.0449%" y="1887.50"></text></g><g><title>kmem_cache_alloc (6,270,261 samples, 0.01%)</title><rect x="81.7949%" y="1861" width="0.0108%" height="15" fill="rgb(228,134,27)" fg:x="47552074036" fg:w="6270261"/><text x="82.0449%" y="1871.50"></text></g><g><title>memcg_slab_pre_alloc_hook (6,270,261 samples, 0.01%)</title><rect x="81.7949%" y="1845" width="0.0108%" height="15" fill="rgb(205,55,33)" fg:x="47552074036" fg:w="6270261"/><text x="82.0449%" y="1855.50"></text></g><g><title>obj_cgroup_charge (6,270,261 samples, 0.01%)</title><rect x="81.7949%" y="1829" width="0.0108%" height="15" fill="rgb(243,75,43)" fg:x="47552074036" fg:w="6270261"/><text x="82.0449%" y="1839.50"></text></g><g><title>obj_cgroup_charge_pages (6,270,261 samples, 0.01%)</title><rect x="81.7949%" y="1813" width="0.0108%" height="15" fill="rgb(223,27,42)" fg:x="47552074036" fg:w="6270261"/><text x="82.0449%" y="1823.50"></text></g><g><title>try_charge_memcg (6,270,261 samples, 0.01%)</title><rect x="81.7949%" y="1797" width="0.0108%" height="15" fill="rgb(232,189,33)" fg:x="47552074036" fg:w="6270261"/><text x="82.0449%" y="1807.50"></text></g><g><title>try_to_free_mem_cgroup_pages (6,270,261 samples, 0.01%)</title><rect x="81.7949%" y="1781" width="0.0108%" height="15" fill="rgb(210,9,39)" fg:x="47552074036" fg:w="6270261"/><text x="82.0449%" y="1791.50"></text></g><g><title>do_try_to_free_pages (6,270,261 samples, 0.01%)</title><rect x="81.7949%" y="1765" width="0.0108%" height="15" fill="rgb(242,85,26)" fg:x="47552074036" fg:w="6270261"/><text x="82.0449%" y="1775.50"></text></g><g><title>shrink_zones (6,270,261 samples, 0.01%)</title><rect x="81.7949%" y="1749" width="0.0108%" height="15" fill="rgb(248,44,4)" fg:x="47552074036" fg:w="6270261"/><text x="82.0449%" y="1759.50"></text></g><g><title>shrink_node (6,270,261 samples, 0.01%)</title><rect x="81.7949%" y="1733" width="0.0108%" height="15" fill="rgb(250,96,46)" fg:x="47552074036" fg:w="6270261"/><text x="82.0449%" y="1743.50"></text></g><g><title>run_io_trace (43,728,490,369 samples, 75.22%)</title><rect x="6.6075%" y="2069" width="75.2179%" height="15" fill="rgb(229,116,26)" fg:x="3841336491" fg:w="43728490369"/><text x="6.8575%" y="2079.50">run_io_trace</text></g><g><title>sed (8,378,268 samples, 0.01%)</title><rect x="81.8255%" y="2069" width="0.0144%" height="15" fill="rgb(246,94,34)" fg:x="47569826860" fg:w="8378268"/><text x="82.0755%" y="2079.50"></text></g><g><title>__GI___getdents64 (6,226,623 samples, 0.01%)</title><rect x="81.8457%" y="2037" width="0.0107%" height="15" fill="rgb(251,73,21)" fg:x="47581610733" fg:w="6226623"/><text x="82.0957%" y="2047.50"></text></g><g><title>entry_SYSCALL_64 (6,226,623 samples, 0.01%)</title><rect x="81.8457%" y="2021" width="0.0107%" height="15" fill="rgb(254,121,25)" fg:x="47581610733" fg:w="6226623"/><text x="82.0957%" y="2031.50"></text></g><g><title>do_syscall_64 (6,226,623 samples, 0.01%)</title><rect x="81.8457%" y="2005" width="0.0107%" height="15" fill="rgb(215,161,49)" fg:x="47581610733" fg:w="6226623"/><text x="82.0957%" y="2015.50"></text></g><g><title>__x64_sys_getdents64 (6,226,623 samples, 0.01%)</title><rect x="81.8457%" y="1989" width="0.0107%" height="15" fill="rgb(221,43,13)" fg:x="47581610733" fg:w="6226623"/><text x="82.0957%" y="1999.50"></text></g><g><title>__se_sys_getdents64 (6,226,623 samples, 0.01%)</title><rect x="81.8457%" y="1973" width="0.0107%" height="15" fill="rgb(249,5,37)" fg:x="47581610733" fg:w="6226623"/><text x="82.0957%" y="1983.50"></text></g><g><title>iterate_dir (6,226,623 samples, 0.01%)</title><rect x="81.8457%" y="1957" width="0.0107%" height="15" fill="rgb(226,25,44)" fg:x="47581610733" fg:w="6226623"/><text x="82.0957%" y="1967.50"></text></g><g><title>do_filp_open (10,338,409 samples, 0.02%)</title><rect x="81.8577%" y="1957" width="0.0178%" height="15" fill="rgb(238,189,16)" fg:x="47588557444" fg:w="10338409"/><text x="82.1077%" y="1967.50"></text></g><g><title>path_openat (10,338,409 samples, 0.02%)</title><rect x="81.8577%" y="1941" width="0.0178%" height="15" fill="rgb(251,186,8)" fg:x="47588557444" fg:w="10338409"/><text x="82.1077%" y="1951.50"></text></g><g><title>__x64_sys_openat (11,012,051 samples, 0.02%)</title><rect x="81.8577%" y="1989" width="0.0189%" height="15" fill="rgb(254,34,31)" fg:x="47588557444" fg:w="11012051"/><text x="82.1077%" y="1999.50"></text></g><g><title>do_sys_openat2 (11,012,051 samples, 0.02%)</title><rect x="81.8577%" y="1973" width="0.0189%" height="15" fill="rgb(225,215,27)" fg:x="47588557444" fg:w="11012051"/><text x="82.1077%" y="1983.50"></text></g><g><title>entry_SYSCALL_64 (11,756,951 samples, 0.02%)</title><rect x="81.8577%" y="2021" width="0.0202%" height="15" fill="rgb(221,192,48)" fg:x="47588557444" fg:w="11756951"/><text x="82.1077%" y="2031.50"></text></g><g><title>do_syscall_64 (11,756,951 samples, 0.02%)</title><rect x="81.8577%" y="2005" width="0.0202%" height="15" fill="rgb(219,137,20)" fg:x="47588557444" fg:w="11756951"/><text x="82.1077%" y="2015.50"></text></g><g><title>__open64_nocancel (12,313,946 samples, 0.02%)</title><rect x="81.8577%" y="2037" width="0.0212%" height="15" fill="rgb(219,84,11)" fg:x="47588557444" fg:w="12313946"/><text x="82.1077%" y="2047.50"></text></g><g><title>[unknown] (25,205,721 samples, 0.04%)</title><rect x="81.8399%" y="2053" width="0.0434%" height="15" fill="rgb(224,10,23)" fg:x="47578205128" fg:w="25205721"/><text x="82.0899%" y="2063.50"></text></g><g><title>sh (42,892,696 samples, 0.07%)</title><rect x="81.8399%" y="2069" width="0.0738%" height="15" fill="rgb(248,22,39)" fg:x="47578205128" fg:w="42892696"/><text x="82.0899%" y="2079.50"></text></g><g><title>sleep (6,037,312 samples, 0.01%)</title><rect x="81.9137%" y="2069" width="0.0104%" height="15" fill="rgb(212,154,20)" fg:x="47621097824" fg:w="6037312"/><text x="82.1637%" y="2079.50"></text></g><g><title>sshd (11,531,196 samples, 0.02%)</title><rect x="81.9241%" y="2069" width="0.0198%" height="15" fill="rgb(236,199,50)" fg:x="47627135136" fg:w="11531196"/><text x="82.1741%" y="2079.50"></text></g><g><title>error_entry (8,765,668 samples, 0.02%)</title><rect x="81.9628%" y="2053" width="0.0151%" height="15" fill="rgb(211,9,17)" fg:x="47649649954" fg:w="8765668"/><text x="82.2128%" y="2063.50"></text></g><g><title>irq_enter_rcu (11,960,301 samples, 0.02%)</title><rect x="81.9779%" y="2053" width="0.0206%" height="15" fill="rgb(243,216,36)" fg:x="47658415622" fg:w="11960301"/><text x="82.2279%" y="2063.50"></text></g><g><title>asm_common_interrupt (12,839,736 samples, 0.02%)</title><rect x="82.0680%" y="1973" width="0.0221%" height="15" fill="rgb(250,2,10)" fg:x="47710832564" fg:w="12839736"/><text x="82.3180%" y="1983.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (102,979,398 samples, 0.18%)</title><rect x="82.0901%" y="1973" width="0.1771%" height="15" fill="rgb(226,50,48)" fg:x="47723672300" fg:w="102979398"/><text x="82.3401%" y="1983.50"></text></g><g><title>asm_sysvec_call_function_single (1,011,473,773 samples, 1.74%)</title><rect x="82.2672%" y="1973" width="1.7398%" height="15" fill="rgb(243,81,16)" fg:x="47826651698" fg:w="1011473773"/><text x="82.5172%" y="1983.50"></text></g><g><title>asm_sysvec_reschedule_ipi (9,004,621 samples, 0.02%)</title><rect x="84.0071%" y="1973" width="0.0155%" height="15" fill="rgb(250,14,2)" fg:x="48838125471" fg:w="9004621"/><text x="84.2571%" y="1983.50"></text></g><g><title>common_interrupt (7,125,723 samples, 0.01%)</title><rect x="84.0226%" y="1973" width="0.0123%" height="15" fill="rgb(233,135,29)" fg:x="48847130092" fg:w="7125723"/><text x="84.2726%" y="1983.50"></text></g><g><title>acpi_processor_ffh_cstate_enter (24,414,534 samples, 0.04%)</title><rect x="84.0897%" y="1925" width="0.0420%" height="15" fill="rgb(224,64,43)" fg:x="48886128335" fg:w="24414534"/><text x="84.3397%" y="1935.50"></text></g><g><title>acpi_idle_do_entry (57,599,582 samples, 0.10%)</title><rect x="84.0894%" y="1941" width="0.0991%" height="15" fill="rgb(238,84,13)" fg:x="48885972548" fg:w="57599582"/><text x="84.3394%" y="1951.50"></text></g><g><title>io_idle (33,029,261 samples, 0.06%)</title><rect x="84.1317%" y="1925" width="0.0568%" height="15" fill="rgb(253,48,26)" fg:x="48910542869" fg:w="33029261"/><text x="84.3817%" y="1935.50"></text></g><g><title>acpi_idle_enter (60,620,243 samples, 0.10%)</title><rect x="84.0843%" y="1957" width="0.1043%" height="15" fill="rgb(205,223,31)" fg:x="48882985021" fg:w="60620243"/><text x="84.3343%" y="1967.50"></text></g><g><title>__lock_acquire (16,724,489 samples, 0.03%)</title><rect x="84.2804%" y="1861" width="0.0288%" height="15" fill="rgb(221,41,32)" fg:x="48997017103" fg:w="16724489"/><text x="84.5304%" y="1871.50"></text></g><g><title>lock_acquire (45,374,373 samples, 0.08%)</title><rect x="84.2538%" y="1877" width="0.0780%" height="15" fill="rgb(213,158,31)" fg:x="48981525318" fg:w="45374373"/><text x="84.5038%" y="1887.50"></text></g><g><title>trace_lock_acquire (13,158,099 samples, 0.02%)</title><rect x="84.3092%" y="1861" width="0.0226%" height="15" fill="rgb(245,126,43)" fg:x="49013741592" fg:w="13158099"/><text x="84.5592%" y="1871.50"></text></g><g><title>rcu_is_watching (7,211,050 samples, 0.01%)</title><rect x="84.3194%" y="1845" width="0.0124%" height="15" fill="rgb(227,7,22)" fg:x="49019688641" fg:w="7211050"/><text x="84.5694%" y="1855.50"></text></g><g><title>_raw_spin_lock (49,219,438 samples, 0.08%)</title><rect x="84.2483%" y="1893" width="0.0847%" height="15" fill="rgb(252,90,44)" fg:x="48978355066" fg:w="49219438"/><text x="84.4983%" y="1903.50"></text></g><g><title>apic_ack_irq (18,654,883 samples, 0.03%)</title><rect x="84.3388%" y="1893" width="0.0321%" height="15" fill="rgb(253,91,0)" fg:x="49030938795" fg:w="18654883"/><text x="84.5888%" y="1903.50"></text></g><g><title>ata_scsi_qc_complete (15,340,307 samples, 0.03%)</title><rect x="84.6841%" y="1765" width="0.0264%" height="15" fill="rgb(252,175,49)" fg:x="49231686849" fg:w="15340307"/><text x="84.9341%" y="1775.50"></text></g><g><title>scsi_done (14,416,617 samples, 0.02%)</title><rect x="84.6857%" y="1749" width="0.0248%" height="15" fill="rgb(246,150,1)" fg:x="49232610539" fg:w="14416617"/><text x="84.9357%" y="1759.50"></text></g><g><title>blk_mq_complete_request (7,709,571 samples, 0.01%)</title><rect x="84.6972%" y="1733" width="0.0133%" height="15" fill="rgb(241,192,25)" fg:x="49239317585" fg:w="7709571"/><text x="84.9472%" y="1743.50"></text></g><g><title>blk_mq_complete_request_remote (7,709,571 samples, 0.01%)</title><rect x="84.6972%" y="1717" width="0.0133%" height="15" fill="rgb(239,187,11)" fg:x="49239317585" fg:w="7709571"/><text x="84.9472%" y="1727.50"></text></g><g><title>iommu_v1_unmap_pages (9,262,105 samples, 0.02%)</title><rect x="84.7190%" y="1669" width="0.0159%" height="15" fill="rgb(218,202,51)" fg:x="49251997984" fg:w="9262105"/><text x="84.9690%" y="1679.50"></text></g><g><title>fetch_pte (8,643,721 samples, 0.01%)</title><rect x="84.7201%" y="1653" width="0.0149%" height="15" fill="rgb(225,176,8)" fg:x="49252616368" fg:w="8643721"/><text x="84.9701%" y="1663.50"></text></g><g><title>amd_iommu_unmap_pages (10,665,979 samples, 0.02%)</title><rect x="84.7181%" y="1685" width="0.0183%" height="15" fill="rgb(219,122,41)" fg:x="49251497637" fg:w="10665979"/><text x="84.9681%" y="1695.50"></text></g><g><title>__iommu_unmap (12,160,104 samples, 0.02%)</title><rect x="84.7181%" y="1701" width="0.0209%" height="15" fill="rgb(248,140,20)" fg:x="49251497637" fg:w="12160104"/><text x="84.9681%" y="1711.50"></text></g><g><title>ahci_qc_complete (33,865,447 samples, 0.06%)</title><rect x="84.6821%" y="1829" width="0.0583%" height="15" fill="rgb(245,41,37)" fg:x="49230525884" fg:w="33865447"/><text x="84.9321%" y="1839.50"></text></g><g><title>ata_qc_complete_multiple (33,261,889 samples, 0.06%)</title><rect x="84.6831%" y="1813" width="0.0572%" height="15" fill="rgb(235,82,39)" fg:x="49231129442" fg:w="33261889"/><text x="84.9331%" y="1823.50"></text></g><g><title>ata_qc_complete (33,261,889 samples, 0.06%)</title><rect x="84.6831%" y="1797" width="0.0572%" height="15" fill="rgb(230,108,42)" fg:x="49231129442" fg:w="33261889"/><text x="84.9331%" y="1807.50"></text></g><g><title>__ata_qc_complete (33,261,889 samples, 0.06%)</title><rect x="84.6831%" y="1781" width="0.0572%" height="15" fill="rgb(215,150,50)" fg:x="49231129442" fg:w="33261889"/><text x="84.9331%" y="1791.50"></text></g><g><title>dma_unmap_sg_attrs (17,364,175 samples, 0.03%)</title><rect x="84.7104%" y="1765" width="0.0299%" height="15" fill="rgb(233,212,5)" fg:x="49247027156" fg:w="17364175"/><text x="84.9604%" y="1775.50"></text></g><g><title>iommu_dma_unmap_sg (17,364,175 samples, 0.03%)</title><rect x="84.7104%" y="1749" width="0.0299%" height="15" fill="rgb(245,80,22)" fg:x="49247027156" fg:w="17364175"/><text x="84.9604%" y="1759.50"></text></g><g><title>__iommu_dma_unmap (16,855,186 samples, 0.03%)</title><rect x="84.7113%" y="1733" width="0.0290%" height="15" fill="rgb(238,129,16)" fg:x="49247536145" fg:w="16855186"/><text x="84.9613%" y="1743.50"></text></g><g><title>iommu_unmap_fast (12,893,694 samples, 0.02%)</title><rect x="84.7181%" y="1717" width="0.0222%" height="15" fill="rgb(240,19,0)" fg:x="49251497637" fg:w="12893694"/><text x="84.9681%" y="1727.50"></text></g><g><title>ahci_multi_irqs_intr_hard (207,359,614 samples, 0.36%)</title><rect x="84.4134%" y="1861" width="0.3567%" height="15" fill="rgb(232,42,35)" fg:x="49074313731" fg:w="207359614"/><text x="84.6634%" y="1871.50"></text></g><g><title>ahci_handle_port_interrupt (51,147,461 samples, 0.09%)</title><rect x="84.6821%" y="1845" width="0.0880%" height="15" fill="rgb(223,130,24)" fg:x="49230525884" fg:w="51147461"/><text x="84.9321%" y="1855.50"></text></g><g><title>sata_async_notification (17,282,014 samples, 0.03%)</title><rect x="84.7403%" y="1829" width="0.0297%" height="15" fill="rgb(237,16,22)" fg:x="49264391331" fg:w="17282014"/><text x="84.9903%" y="1839.50"></text></g><g><title>ahci_scr_read (17,282,014 samples, 0.03%)</title><rect x="84.7403%" y="1813" width="0.0297%" height="15" fill="rgb(248,192,20)" fg:x="49264391331" fg:w="17282014"/><text x="84.9903%" y="1823.50"></text></g><g><title>__handle_irq_event_percpu (214,998,581 samples, 0.37%)</title><rect x="84.4071%" y="1877" width="0.3698%" height="15" fill="rgb(233,167,2)" fg:x="49070656397" fg:w="214998581"/><text x="84.6571%" y="1887.50"></text></g><g><title>do_raw_spin_unlock (139,838,218 samples, 0.24%)</title><rect x="84.8046%" y="1861" width="0.2405%" height="15" fill="rgb(252,71,44)" fg:x="49301786795" fg:w="139838218"/><text x="85.0546%" y="1871.50"></text></g><g><title>_raw_spin_unlock (207,349,656 samples, 0.36%)</title><rect x="84.7796%" y="1877" width="0.3567%" height="15" fill="rgb(238,37,47)" fg:x="49287254489" fg:w="207349656"/><text x="85.0296%" y="1887.50"></text></g><g><title>lock_release (52,979,132 samples, 0.09%)</title><rect x="85.0452%" y="1861" width="0.0911%" height="15" fill="rgb(214,202,54)" fg:x="49441625013" fg:w="52979132"/><text x="85.2952%" y="1871.50"></text></g><g><title>trace_lock_release (26,906,252 samples, 0.05%)</title><rect x="85.0900%" y="1845" width="0.0463%" height="15" fill="rgb(254,165,40)" fg:x="49467697893" fg:w="26906252"/><text x="85.3400%" y="1855.50"></text></g><g><title>rcu_is_watching (13,625,857 samples, 0.02%)</title><rect x="85.1129%" y="1829" width="0.0234%" height="15" fill="rgb(246,173,38)" fg:x="49480978288" fg:w="13625857"/><text x="85.3629%" y="1839.50"></text></g><g><title>handle_irq_event (451,657,145 samples, 0.78%)</title><rect x="84.3717%" y="1893" width="0.7769%" height="15" fill="rgb(215,3,27)" fg:x="49050078302" fg:w="451657145"/><text x="84.6217%" y="1903.50"></text></g><g><title>apic_ack_irq (8,445,054 samples, 0.01%)</title><rect x="85.1621%" y="1877" width="0.0145%" height="15" fill="rgb(239,169,51)" fg:x="49509592979" fg:w="8445054"/><text x="85.4121%" y="1887.50"></text></g><g><title>irq_chip_ack_parent (22,083,008 samples, 0.04%)</title><rect x="85.1486%" y="1893" width="0.0380%" height="15" fill="rgb(212,5,25)" fg:x="49501735447" fg:w="22083008"/><text x="85.3986%" y="1903.50"></text></g><g><title>handle_edge_irq (557,488,620 samples, 0.96%)</title><rect x="84.2366%" y="1909" width="0.9589%" height="15" fill="rgb(243,45,17)" fg:x="48971530639" fg:w="557488620"/><text x="84.4866%" y="1919.50"></text></g><g><title>handle_irq_event (8,875,910 samples, 0.02%)</title><rect x="85.1955%" y="1909" width="0.0153%" height="15" fill="rgb(242,97,9)" fg:x="49529019259" fg:w="8875910"/><text x="85.4455%" y="1919.50"></text></g><g><title>__common_interrupt (577,585,061 samples, 0.99%)</title><rect x="84.2272%" y="1925" width="0.9935%" height="15" fill="rgb(228,71,31)" fg:x="48966090151" fg:w="577585061"/><text x="84.4772%" y="1935.50"></text></g><g><title>ct_irq_enter (6,847,647 samples, 0.01%)</title><rect x="85.2207%" y="1925" width="0.0118%" height="15" fill="rgb(252,184,16)" fg:x="49543675212" fg:w="6847647"/><text x="85.4707%" y="1935.50"></text></g><g><title>handle_edge_irq (13,907,083 samples, 0.02%)</title><rect x="85.2325%" y="1925" width="0.0239%" height="15" fill="rgb(236,169,46)" fg:x="49550522859" fg:w="13907083"/><text x="85.4825%" y="1935.50"></text></g><g><title>sched_clock (40,640,090 samples, 0.07%)</title><rect x="85.2884%" y="1877" width="0.0699%" height="15" fill="rgb(207,17,47)" fg:x="49583030030" fg:w="40640090"/><text x="85.5384%" y="1887.50"></text></g><g><title>sched_clock_noinstr (39,859,028 samples, 0.07%)</title><rect x="85.2898%" y="1861" width="0.0686%" height="15" fill="rgb(206,201,28)" fg:x="49583811092" fg:w="39859028"/><text x="85.5398%" y="1871.50"></text></g><g><title>native_sched_clock (39,410,370 samples, 0.07%)</title><rect x="85.2905%" y="1845" width="0.0678%" height="15" fill="rgb(224,184,23)" fg:x="49584259750" fg:w="39410370"/><text x="85.5405%" y="1855.50"></text></g><g><title>irqtime_account_irq (50,717,958 samples, 0.09%)</title><rect x="85.2724%" y="1909" width="0.0872%" height="15" fill="rgb(208,139,48)" fg:x="49573712003" fg:w="50717958"/><text x="85.5224%" y="1919.50"></text></g><g><title>sched_clock_cpu (43,029,978 samples, 0.07%)</title><rect x="85.2856%" y="1893" width="0.0740%" height="15" fill="rgb(208,130,10)" fg:x="49581399983" fg:w="43029978"/><text x="85.5356%" y="1903.50"></text></g><g><title>ktime_get (18,658,616 samples, 0.03%)</title><rect x="85.3596%" y="1909" width="0.0321%" height="15" fill="rgb(211,213,45)" fg:x="49624429961" fg:w="18658616"/><text x="85.6096%" y="1919.50"></text></g><g><title>tick_check_oneshot_broadcast_this_cpu (18,106,223 samples, 0.03%)</title><rect x="85.3944%" y="1909" width="0.0311%" height="15" fill="rgb(235,100,30)" fg:x="49644635997" fg:w="18106223"/><text x="85.6444%" y="1919.50"></text></g><g><title>__lock_acquire (42,799,494 samples, 0.07%)</title><rect x="85.8753%" y="1861" width="0.0736%" height="15" fill="rgb(206,144,31)" fg:x="49924206408" fg:w="42799494"/><text x="86.1253%" y="1871.50"></text></g><g><title>lock_acquire (191,487,411 samples, 0.33%)</title><rect x="85.6531%" y="1877" width="0.3294%" height="15" fill="rgb(224,200,26)" fg:x="49795027275" fg:w="191487411"/><text x="85.9031%" y="1887.50"></text></g><g><title>trace_lock_acquire (19,170,627 samples, 0.03%)</title><rect x="85.9495%" y="1861" width="0.0330%" height="15" fill="rgb(247,104,53)" fg:x="49967344059" fg:w="19170627"/><text x="86.1995%" y="1871.50"></text></g><g><title>rcu_is_watching (6,540,259 samples, 0.01%)</title><rect x="85.9712%" y="1845" width="0.0112%" height="15" fill="rgb(220,14,17)" fg:x="49979974427" fg:w="6540259"/><text x="86.2212%" y="1855.50"></text></g><g><title>lock_release (56,833,000 samples, 0.10%)</title><rect x="85.9825%" y="1877" width="0.0978%" height="15" fill="rgb(230,140,40)" fg:x="49986514686" fg:w="56833000"/><text x="86.2325%" y="1887.50"></text></g><g><title>trace_lock_release (8,524,974 samples, 0.01%)</title><rect x="86.0655%" y="1861" width="0.0147%" height="15" fill="rgb(229,2,41)" fg:x="50034822712" fg:w="8524974"/><text x="86.3155%" y="1871.50"></text></g><g><title>rcu_is_watching (6,878,459 samples, 0.01%)</title><rect x="86.0684%" y="1845" width="0.0118%" height="15" fill="rgb(232,89,16)" fg:x="50036469227" fg:w="6878459"/><text x="86.3184%" y="1855.50"></text></g><g><title>read_tsc (52,598,842 samples, 0.09%)</title><rect x="86.0822%" y="1877" width="0.0905%" height="15" fill="rgb(247,59,52)" fg:x="50044529160" fg:w="52598842"/><text x="86.3322%" y="1887.50"></text></g><g><title>ktime_get (351,911,074 samples, 0.61%)</title><rect x="85.5703%" y="1893" width="0.6053%" height="15" fill="rgb(226,110,21)" fg:x="49746916351" fg:w="351911074"/><text x="85.8203%" y="1903.50"></text></g><g><title>read_tsc (22,930,007 samples, 0.04%)</title><rect x="86.1855%" y="1893" width="0.0394%" height="15" fill="rgb(224,176,43)" fg:x="50104554441" fg:w="22930007"/><text x="86.4355%" y="1903.50"></text></g><g><title>sched_clock_idle_wakeup_event (7,500,407 samples, 0.01%)</title><rect x="86.2249%" y="1893" width="0.0129%" height="15" fill="rgb(221,73,6)" fg:x="50127484448" fg:w="7500407"/><text x="86.4749%" y="1903.50"></text></g><g><title>tick_check_oneshot_broadcast_this_cpu (324,329,568 samples, 0.56%)</title><rect x="86.2378%" y="1893" width="0.5579%" height="15" fill="rgb(232,78,19)" fg:x="50134984855" fg:w="324329568"/><text x="86.4878%" y="1903.50"></text></g><g><title>__lock_acquire (51,413,622 samples, 0.09%)</title><rect x="86.9186%" y="1861" width="0.0884%" height="15" fill="rgb(233,112,48)" fg:x="50530766289" fg:w="51413622"/><text x="87.1686%" y="1871.50"></text></g><g><title>lock_acquire (86,811,069 samples, 0.15%)</title><rect x="86.8758%" y="1877" width="0.1493%" height="15" fill="rgb(243,131,47)" fg:x="50505847209" fg:w="86811069"/><text x="87.1258%" y="1887.50"></text></g><g><title>trace_lock_acquire (8,961,719 samples, 0.02%)</title><rect x="87.0097%" y="1861" width="0.0154%" height="15" fill="rgb(226,51,1)" fg:x="50583696559" fg:w="8961719"/><text x="87.2597%" y="1871.50"></text></g><g><title>lock_release (91,568,025 samples, 0.16%)</title><rect x="87.0251%" y="1877" width="0.1575%" height="15" fill="rgb(247,58,7)" fg:x="50592658278" fg:w="91568025"/><text x="87.2751%" y="1887.50"></text></g><g><title>trace_lock_release (21,404,365 samples, 0.04%)</title><rect x="87.1458%" y="1861" width="0.0368%" height="15" fill="rgb(209,7,32)" fg:x="50662821938" fg:w="21404365"/><text x="87.3958%" y="1871.50"></text></g><g><title>rcu_is_watching (7,905,828 samples, 0.01%)</title><rect x="87.1690%" y="1845" width="0.0136%" height="15" fill="rgb(209,39,41)" fg:x="50676320475" fg:w="7905828"/><text x="87.4190%" y="1855.50"></text></g><g><title>nr_iowait_cpu (35,151,180 samples, 0.06%)</title><rect x="87.1855%" y="1877" width="0.0605%" height="15" fill="rgb(226,182,46)" fg:x="50685892598" fg:w="35151180"/><text x="87.4355%" y="1887.50"></text></g><g><title>sched_clock_idle_wakeup_event (7,916,185 samples, 0.01%)</title><rect x="87.2459%" y="1877" width="0.0136%" height="15" fill="rgb(230,219,10)" fg:x="50721043778" fg:w="7916185"/><text x="87.4959%" y="1887.50"></text></g><g><title>tick_nohz_stop_idle (267,813,132 samples, 0.46%)</title><rect x="86.8010%" y="1893" width="0.4607%" height="15" fill="rgb(227,175,30)" fg:x="50462409630" fg:w="267813132"/><text x="87.0510%" y="1903.50"></text></g><g><title>tick_irq_enter (1,067,909,435 samples, 1.84%)</title><rect x="85.4255%" y="1909" width="1.8369%" height="15" fill="rgb(217,2,50)" fg:x="49662742220" fg:w="1067909435"/><text x="85.6755%" y="1919.50">t..</text></g><g><title>irq_enter_rcu (1,168,853,926 samples, 2.01%)</title><rect x="85.2564%" y="1925" width="2.0106%" height="15" fill="rgb(229,160,0)" fg:x="49564429942" fg:w="1168853926"/><text x="85.5064%" y="1935.50">i..</text></g><g><title>__folio_end_writeback (21,661,248 samples, 0.04%)</title><rect x="87.2953%" y="1717" width="0.0373%" height="15" fill="rgb(207,78,37)" fg:x="50749744199" fg:w="21661248"/><text x="87.5453%" y="1727.50"></text></g><g><title>ext4_end_bio (35,613,284 samples, 0.06%)</title><rect x="87.2849%" y="1765" width="0.0613%" height="15" fill="rgb(225,57,0)" fg:x="50743674607" fg:w="35613284"/><text x="87.5349%" y="1775.50"></text></g><g><title>ext4_finish_bio (35,613,284 samples, 0.06%)</title><rect x="87.2849%" y="1749" width="0.0613%" height="15" fill="rgb(232,154,2)" fg:x="50743674607" fg:w="35613284"/><text x="87.5349%" y="1759.50"></text></g><g><title>folio_end_writeback (30,047,967 samples, 0.05%)</title><rect x="87.2944%" y="1733" width="0.0517%" height="15" fill="rgb(241,212,25)" fg:x="50749239924" fg:w="30047967"/><text x="87.5444%" y="1743.50"></text></g><g><title>folio_rotate_reclaimable (7,882,444 samples, 0.01%)</title><rect x="87.3326%" y="1717" width="0.0136%" height="15" fill="rgb(226,69,20)" fg:x="50771405447" fg:w="7882444"/><text x="87.5826%" y="1727.50"></text></g><g><title>bio_endio (42,766,745 samples, 0.07%)</title><rect x="87.2805%" y="1781" width="0.0736%" height="15" fill="rgb(247,184,54)" fg:x="50741123380" fg:w="42766745"/><text x="87.5305%" y="1791.50"></text></g><g><title>blk_update_request (44,572,538 samples, 0.08%)</title><rect x="87.2782%" y="1797" width="0.0767%" height="15" fill="rgb(210,145,0)" fg:x="50739790151" fg:w="44572538"/><text x="87.5282%" y="1807.50"></text></g><g><title>blk_done_softirq (52,324,441 samples, 0.09%)</title><rect x="87.2679%" y="1877" width="0.0900%" height="15" fill="rgb(253,82,12)" fg:x="50733802901" fg:w="52324441"/><text x="87.5179%" y="1887.50"></text></g><g><title>scsi_complete (52,324,441 samples, 0.09%)</title><rect x="87.2679%" y="1861" width="0.0900%" height="15" fill="rgb(245,42,11)" fg:x="50733802901" fg:w="52324441"/><text x="87.5179%" y="1871.50"></text></g><g><title>scsi_finish_command (51,923,636 samples, 0.09%)</title><rect x="87.2686%" y="1845" width="0.0893%" height="15" fill="rgb(219,147,32)" fg:x="50734203706" fg:w="51923636"/><text x="87.5186%" y="1855.50"></text></g><g><title>scsi_io_completion (51,188,674 samples, 0.09%)</title><rect x="87.2698%" y="1829" width="0.0881%" height="15" fill="rgb(246,12,7)" fg:x="50734938668" fg:w="51188674"/><text x="87.5198%" y="1839.50"></text></g><g><title>scsi_end_request (51,188,674 samples, 0.09%)</title><rect x="87.2698%" y="1813" width="0.0881%" height="15" fill="rgb(243,50,9)" fg:x="50734938668" fg:w="51188674"/><text x="87.5198%" y="1823.50"></text></g><g><title>__kprobes_text_end (53,573,483 samples, 0.09%)</title><rect x="87.2679%" y="1893" width="0.0922%" height="15" fill="rgb(219,149,6)" fg:x="50733802901" fg:w="53573483"/><text x="87.5179%" y="1903.50"></text></g><g><title>irq_exit_rcu (56,043,695 samples, 0.10%)</title><rect x="87.2670%" y="1925" width="0.0964%" height="15" fill="rgb(241,51,42)" fg:x="50733283868" fg:w="56043695"/><text x="87.5170%" y="1935.50"></text></g><g><title>__irq_exit_rcu (56,043,695 samples, 0.10%)</title><rect x="87.2670%" y="1909" width="0.0964%" height="15" fill="rgb(226,128,27)" fg:x="50733283868" fg:w="56043695"/><text x="87.5170%" y="1919.50"></text></g><g><title>ct_irq_enter (9,040,885 samples, 0.02%)</title><rect x="87.4057%" y="1909" width="0.0156%" height="15" fill="rgb(244,144,4)" fg:x="50813924670" fg:w="9040885"/><text x="87.6557%" y="1919.50"></text></g><g><title>ct_nmi_enter (8,750,647 samples, 0.02%)</title><rect x="87.4062%" y="1893" width="0.0151%" height="15" fill="rgb(221,4,13)" fg:x="50814214908" fg:w="8750647"/><text x="87.6562%" y="1903.50"></text></g><g><title>irqentry_enter (36,261,030 samples, 0.06%)</title><rect x="87.3634%" y="1925" width="0.0624%" height="15" fill="rgb(208,170,28)" fg:x="50789327563" fg:w="36261030"/><text x="87.6134%" y="1935.50"></text></g><g><title>common_interrupt (1,890,608,317 samples, 3.25%)</title><rect x="84.1885%" y="1941" width="3.2521%" height="15" fill="rgb(226,131,13)" fg:x="48943605264" fg:w="1890608317"/><text x="84.4385%" y="1951.50">com..</text></g><g><title>asm_common_interrupt (1,894,632,678 samples, 3.26%)</title><rect x="84.1885%" y="1957" width="3.2590%" height="15" fill="rgb(215,72,41)" fg:x="48943605264" fg:w="1894632678"/><text x="84.4385%" y="1967.50">asm..</text></g><g><title>irqentry_enter (16,406,168 samples, 0.03%)</title><rect x="87.4475%" y="1941" width="0.0282%" height="15" fill="rgb(243,108,20)" fg:x="50838237942" fg:w="16406168"/><text x="87.6975%" y="1951.50"></text></g><g><title>__hrtimer_run_queues (6,177,762 samples, 0.01%)</title><rect x="87.5872%" y="1893" width="0.0106%" height="15" fill="rgb(230,189,17)" fg:x="50919432862" fg:w="6177762"/><text x="87.8372%" y="1903.50"></text></g><g><title>_raw_spin_lock_irqsave (19,269,405 samples, 0.03%)</title><rect x="87.5982%" y="1893" width="0.0331%" height="15" fill="rgb(220,50,17)" fg:x="50925861353" fg:w="19269405"/><text x="87.8482%" y="1903.50"></text></g><g><title>lock_acquire (15,493,407 samples, 0.03%)</title><rect x="87.6047%" y="1877" width="0.0267%" height="15" fill="rgb(248,152,48)" fg:x="50929637351" fg:w="15493407"/><text x="87.8547%" y="1887.50"></text></g><g><title>trace_lock_acquire (15,067,665 samples, 0.03%)</title><rect x="87.6055%" y="1861" width="0.0259%" height="15" fill="rgb(244,91,11)" fg:x="50930063093" fg:w="15067665"/><text x="87.8555%" y="1871.50"></text></g><g><title>rcu_is_watching (13,694,314 samples, 0.02%)</title><rect x="87.6078%" y="1845" width="0.0236%" height="15" fill="rgb(220,157,5)" fg:x="50931436444" fg:w="13694314"/><text x="87.8578%" y="1855.50"></text></g><g><title>ktime_get_update_offsets_now (10,656,294 samples, 0.02%)</title><rect x="87.6319%" y="1893" width="0.0183%" height="15" fill="rgb(253,137,8)" fg:x="50945440398" fg:w="10656294"/><text x="87.8819%" y="1903.50"></text></g><g><title>hrtimer_interrupt (41,023,238 samples, 0.07%)</title><rect x="87.5834%" y="1909" width="0.0706%" height="15" fill="rgb(217,137,51)" fg:x="50917263924" fg:w="41023238"/><text x="87.8334%" y="1919.50"></text></g><g><title>__sysvec_apic_timer_interrupt (54,583,766 samples, 0.09%)</title><rect x="87.5788%" y="1925" width="0.0939%" height="15" fill="rgb(218,209,53)" fg:x="50914569279" fg:w="54583766"/><text x="87.8288%" y="1935.50"></text></g><g><title>trace_local_timer_entry (7,468,045 samples, 0.01%)</title><rect x="87.6599%" y="1909" width="0.0128%" height="15" fill="rgb(249,137,25)" fg:x="50961685000" fg:w="7468045"/><text x="87.9099%" y="1919.50"></text></g><g><title>ct_irq_enter (18,810,230 samples, 0.03%)</title><rect x="87.6764%" y="1925" width="0.0324%" height="15" fill="rgb(239,155,26)" fg:x="50971316504" fg:w="18810230"/><text x="87.9264%" y="1935.50"></text></g><g><title>irqtime_account_irq (19,023,518 samples, 0.03%)</title><rect x="87.7343%" y="1909" width="0.0327%" height="15" fill="rgb(227,85,46)" fg:x="51004951897" fg:w="19023518"/><text x="87.9843%" y="1919.50"></text></g><g><title>sched_clock_cpu (12,649,300 samples, 0.02%)</title><rect x="87.7452%" y="1893" width="0.0218%" height="15" fill="rgb(251,107,43)" fg:x="51011326115" fg:w="12649300"/><text x="87.9952%" y="1903.50"></text></g><g><title>sched_clock (12,649,300 samples, 0.02%)</title><rect x="87.7452%" y="1877" width="0.0218%" height="15" fill="rgb(234,170,33)" fg:x="51011326115" fg:w="12649300"/><text x="87.9952%" y="1887.50"></text></g><g><title>sched_clock_noinstr (11,013,890 samples, 0.02%)</title><rect x="87.7481%" y="1861" width="0.0189%" height="15" fill="rgb(206,29,35)" fg:x="51012961525" fg:w="11013890"/><text x="87.9981%" y="1871.50"></text></g><g><title>native_sched_clock (11,013,890 samples, 0.02%)</title><rect x="87.7481%" y="1845" width="0.0189%" height="15" fill="rgb(227,138,25)" fg:x="51012961525" fg:w="11013890"/><text x="87.9981%" y="1855.50"></text></g><g><title>ktime_get (22,505,806 samples, 0.04%)</title><rect x="87.7670%" y="1909" width="0.0387%" height="15" fill="rgb(249,131,35)" fg:x="51023975415" fg:w="22505806"/><text x="88.0170%" y="1919.50"></text></g><g><title>tick_check_oneshot_broadcast_this_cpu (38,110,509 samples, 0.07%)</title><rect x="87.8058%" y="1909" width="0.0656%" height="15" fill="rgb(239,6,40)" fg:x="51046548939" fg:w="38110509"/><text x="88.0558%" y="1919.50"></text></g><g><title>__lock_acquire (38,873,456 samples, 0.07%)</title><rect x="88.2594%" y="1861" width="0.0669%" height="15" fill="rgb(246,136,47)" fg:x="51310214486" fg:w="38873456"/><text x="88.5094%" y="1871.50"></text></g><g><title>lock_acquire (208,093,460 samples, 0.36%)</title><rect x="88.0086%" y="1877" width="0.3579%" height="15" fill="rgb(253,58,26)" fg:x="51164438454" fg:w="208093460"/><text x="88.2586%" y="1887.50"></text></g><g><title>trace_lock_acquire (22,905,330 samples, 0.04%)</title><rect x="88.3272%" y="1861" width="0.0394%" height="15" fill="rgb(237,141,10)" fg:x="51349626584" fg:w="22905330"/><text x="88.5772%" y="1871.50"></text></g><g><title>rcu_is_watching (11,362,428 samples, 0.02%)</title><rect x="88.3470%" y="1845" width="0.0195%" height="15" fill="rgb(234,156,12)" fg:x="51361169486" fg:w="11362428"/><text x="88.5970%" y="1855.50"></text></g><g><title>lock_release (37,669,456 samples, 0.06%)</title><rect x="88.3666%" y="1877" width="0.0648%" height="15" fill="rgb(243,224,36)" fg:x="51372531914" fg:w="37669456"/><text x="88.6166%" y="1887.50"></text></g><g><title>trace_lock_release (7,221,706 samples, 0.01%)</title><rect x="88.4189%" y="1861" width="0.0124%" height="15" fill="rgb(205,229,51)" fg:x="51402979664" fg:w="7221706"/><text x="88.6689%" y="1871.50"></text></g><g><title>read_tsc (60,035,858 samples, 0.10%)</title><rect x="88.4326%" y="1877" width="0.1033%" height="15" fill="rgb(223,189,4)" fg:x="51410924505" fg:w="60035858"/><text x="88.6826%" y="1887.50"></text></g><g><title>ktime_get (338,781,011 samples, 0.58%)</title><rect x="87.9598%" y="1893" width="0.5827%" height="15" fill="rgb(249,167,54)" fg:x="51136056506" fg:w="338781011"/><text x="88.2098%" y="1903.50"></text></g><g><title>read_tsc (15,494,015 samples, 0.03%)</title><rect x="88.5613%" y="1893" width="0.0267%" height="15" fill="rgb(218,34,28)" fg:x="51485761753" fg:w="15494015"/><text x="88.8113%" y="1903.50"></text></g><g><title>tick_check_oneshot_broadcast_this_cpu (277,899,715 samples, 0.48%)</title><rect x="88.5885%" y="1893" width="0.4780%" height="15" fill="rgb(232,109,42)" fg:x="51501582492" fg:w="277899715"/><text x="88.8385%" y="1903.50"></text></g><g><title>__lock_acquire (47,176,233 samples, 0.08%)</title><rect x="89.1389%" y="1861" width="0.0811%" height="15" fill="rgb(248,214,46)" fg:x="51821566527" fg:w="47176233"/><text x="89.3889%" y="1871.50"></text></g><g><title>lock_acquire (89,206,812 samples, 0.15%)</title><rect x="89.0880%" y="1877" width="0.1534%" height="15" fill="rgb(244,216,40)" fg:x="51791934735" fg:w="89206812"/><text x="89.3380%" y="1887.50"></text></g><g><title>trace_lock_acquire (11,180,011 samples, 0.02%)</title><rect x="89.2222%" y="1861" width="0.0192%" height="15" fill="rgb(231,226,31)" fg:x="51869961536" fg:w="11180011"/><text x="89.4722%" y="1871.50"></text></g><g><title>lock_release (23,035,286 samples, 0.04%)</title><rect x="89.2414%" y="1877" width="0.0396%" height="15" fill="rgb(238,38,43)" fg:x="51881141547" fg:w="23035286"/><text x="89.4914%" y="1887.50"></text></g><g><title>trace_lock_release (6,451,678 samples, 0.01%)</title><rect x="89.2699%" y="1861" width="0.0111%" height="15" fill="rgb(208,88,43)" fg:x="51897725155" fg:w="6451678"/><text x="89.5199%" y="1871.50"></text></g><g><title>nr_iowait_cpu (23,448,354 samples, 0.04%)</title><rect x="89.2810%" y="1877" width="0.0403%" height="15" fill="rgb(205,136,37)" fg:x="51904176833" fg:w="23448354"/><text x="89.5310%" y="1887.50"></text></g><g><title>tick_irq_enter (846,029,064 samples, 1.46%)</title><rect x="87.8714%" y="1909" width="1.4553%" height="15" fill="rgb(237,34,14)" fg:x="51084659448" fg:w="846029064"/><text x="88.1214%" y="1919.50"></text></g><g><title>tick_nohz_stop_idle (150,133,524 samples, 0.26%)</title><rect x="89.0684%" y="1893" width="0.2582%" height="15" fill="rgb(236,193,44)" fg:x="51780554988" fg:w="150133524"/><text x="89.3184%" y="1903.50"></text></g><g><title>irq_enter_rcu (936,014,838 samples, 1.61%)</title><rect x="87.7183%" y="1925" width="1.6101%" height="15" fill="rgb(231,48,10)" fg:x="50995677980" fg:w="936014838"/><text x="87.9683%" y="1935.50"></text></g><g><title>file_free_rcu (6,476,233 samples, 0.01%)</title><rect x="89.3305%" y="1845" width="0.0111%" height="15" fill="rgb(213,141,34)" fg:x="51932910493" fg:w="6476233"/><text x="89.5805%" y="1855.50"></text></g><g><title>kmem_cache_free (6,476,233 samples, 0.01%)</title><rect x="89.3305%" y="1829" width="0.0111%" height="15" fill="rgb(249,130,34)" fg:x="51932910493" fg:w="6476233"/><text x="89.5805%" y="1839.50"></text></g><g><title>rcu_core_si (9,899,583 samples, 0.02%)</title><rect x="89.3284%" y="1877" width="0.0170%" height="15" fill="rgb(219,42,41)" fg:x="51931692818" fg:w="9899583"/><text x="89.5784%" y="1887.50"></text></g><g><title>rcu_core (9,839,083 samples, 0.02%)</title><rect x="89.3285%" y="1861" width="0.0169%" height="15" fill="rgb(224,100,54)" fg:x="51931753318" fg:w="9839083"/><text x="89.5785%" y="1871.50"></text></g><g><title>__kprobes_text_end (14,769,023 samples, 0.03%)</title><rect x="89.3284%" y="1893" width="0.0254%" height="15" fill="rgb(229,200,27)" fg:x="51931692818" fg:w="14769023"/><text x="89.5784%" y="1903.50"></text></g><g><title>irq_exit_rcu (15,063,680 samples, 0.03%)</title><rect x="89.3284%" y="1925" width="0.0259%" height="15" fill="rgb(217,118,10)" fg:x="51931692818" fg:w="15063680"/><text x="89.5784%" y="1935.50"></text></g><g><title>__irq_exit_rcu (15,063,680 samples, 0.03%)</title><rect x="89.3284%" y="1909" width="0.0259%" height="15" fill="rgb(206,22,3)" fg:x="51931692818" fg:w="15063680"/><text x="89.5784%" y="1919.50"></text></g><g><title>ct_irq_enter (29,836,760 samples, 0.05%)</title><rect x="89.4064%" y="1909" width="0.0513%" height="15" fill="rgb(232,163,46)" fg:x="51977078675" fg:w="29836760"/><text x="89.6564%" y="1919.50"></text></g><g><title>ct_nmi_enter (18,851,950 samples, 0.03%)</title><rect x="89.4253%" y="1893" width="0.0324%" height="15" fill="rgb(206,95,13)" fg:x="51988063485" fg:w="18851950"/><text x="89.6753%" y="1903.50"></text></g><g><title>irqentry_enter (68,814,470 samples, 0.12%)</title><rect x="89.3543%" y="1925" width="0.1184%" height="15" fill="rgb(253,154,18)" fg:x="51946756498" fg:w="68814470"/><text x="89.6043%" y="1935.50"></text></g><g><title>ct_nmi_enter (8,655,533 samples, 0.01%)</title><rect x="89.4578%" y="1909" width="0.0149%" height="15" fill="rgb(219,32,23)" fg:x="52006915435" fg:w="8655533"/><text x="89.7078%" y="1919.50"></text></g><g><title>irqtime_account_irq (6,660,714 samples, 0.01%)</title><rect x="89.4727%" y="1925" width="0.0115%" height="15" fill="rgb(230,191,45)" fg:x="52015619865" fg:w="6660714"/><text x="89.7227%" y="1935.50"></text></g><g><title>native_apic_mem_eoi (6,131,737 samples, 0.01%)</title><rect x="89.4842%" y="1925" width="0.0105%" height="15" fill="rgb(229,64,36)" fg:x="52022280579" fg:w="6131737"/><text x="89.7342%" y="1935.50"></text></g><g><title>tick_irq_enter (7,240,937 samples, 0.01%)</title><rect x="89.4947%" y="1925" width="0.0125%" height="15" fill="rgb(205,129,25)" fg:x="52028412316" fg:w="7240937"/><text x="89.7447%" y="1935.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1,203,881,264 samples, 2.07%)</title><rect x="87.4475%" y="1957" width="2.0708%" height="15" fill="rgb(254,112,7)" fg:x="50838237942" fg:w="1203881264"/><text x="87.6975%" y="1967.50">a..</text></g><g><title>sysvec_apic_timer_interrupt (1,187,475,096 samples, 2.04%)</title><rect x="87.4757%" y="1941" width="2.0426%" height="15" fill="rgb(226,53,48)" fg:x="50854644110" fg:w="1187475096"/><text x="87.7257%" y="1951.50">s..</text></g><g><title>trace_local_timer_entry (6,465,953 samples, 0.01%)</title><rect x="89.5072%" y="1925" width="0.0111%" height="15" fill="rgb(214,153,38)" fg:x="52035653253" fg:w="6465953"/><text x="89.7572%" y="1935.50"></text></g><g><title>irqentry_enter (64,677,537 samples, 0.11%)</title><rect x="89.5183%" y="1941" width="0.1113%" height="15" fill="rgb(243,101,7)" fg:x="52042119206" fg:w="64677537"/><text x="89.7683%" y="1951.50"></text></g><g><title>ttwu_do_activate (7,140,417 samples, 0.01%)</title><rect x="89.7240%" y="1861" width="0.0123%" height="15" fill="rgb(240,140,22)" fg:x="52161705006" fg:w="7140417"/><text x="89.9740%" y="1871.50"></text></g><g><title>__flush_smp_call_function_queue (15,550,633 samples, 0.03%)</title><rect x="89.7109%" y="1893" width="0.0267%" height="15" fill="rgb(235,114,2)" fg:x="52154086825" fg:w="15550633"/><text x="89.9609%" y="1903.50"></text></g><g><title>sched_ttwu_pending (7,932,452 samples, 0.01%)</title><rect x="89.7240%" y="1877" width="0.0136%" height="15" fill="rgb(242,59,12)" fg:x="52161705006" fg:w="7932452"/><text x="89.9740%" y="1887.50"></text></g><g><title>generic_smp_call_function_single_interrupt (15,823,079 samples, 0.03%)</title><rect x="89.7109%" y="1909" width="0.0272%" height="15" fill="rgb(252,134,9)" fg:x="52154086825" fg:w="15823079"/><text x="89.9609%" y="1919.50"></text></g><g><title>__sysvec_call_function_single (17,363,661 samples, 0.03%)</title><rect x="89.7109%" y="1925" width="0.0299%" height="15" fill="rgb(236,4,44)" fg:x="52154086825" fg:w="17363661"/><text x="89.9609%" y="1935.50"></text></g><g><title>ct_irq_enter (23,580,443 samples, 0.04%)</title><rect x="89.7408%" y="1925" width="0.0406%" height="15" fill="rgb(254,172,41)" fg:x="52171450486" fg:w="23580443"/><text x="89.9908%" y="1935.50"></text></g><g><title>ktime_get (6,234,340 samples, 0.01%)</title><rect x="89.7982%" y="1909" width="0.0107%" height="15" fill="rgb(244,63,20)" fg:x="52204825402" fg:w="6234340"/><text x="90.0482%" y="1919.50"></text></g><g><title>tick_check_oneshot_broadcast_this_cpu (22,421,241 samples, 0.04%)</title><rect x="89.8089%" y="1909" width="0.0386%" height="15" fill="rgb(250,73,31)" fg:x="52211059742" fg:w="22421241"/><text x="90.0589%" y="1919.50"></text></g><g><title>__lock_acquire (17,038,116 samples, 0.03%)</title><rect x="90.0665%" y="1861" width="0.0293%" height="15" fill="rgb(241,38,36)" fg:x="52360797669" fg:w="17038116"/><text x="90.3165%" y="1871.50"></text></g><g><title>lock_acquire (101,825,397 samples, 0.18%)</title><rect x="89.9414%" y="1877" width="0.1752%" height="15" fill="rgb(245,211,2)" fg:x="52288068521" fg:w="101825397"/><text x="90.1914%" y="1887.50"></text></g><g><title>trace_lock_acquire (12,001,921 samples, 0.02%)</title><rect x="90.0959%" y="1861" width="0.0206%" height="15" fill="rgb(206,120,28)" fg:x="52377891997" fg:w="12001921"/><text x="90.3459%" y="1871.50"></text></g><g><title>rcu_is_watching (7,126,294 samples, 0.01%)</title><rect x="90.1043%" y="1845" width="0.0123%" height="15" fill="rgb(211,59,34)" fg:x="52382767624" fg:w="7126294"/><text x="90.3543%" y="1855.50"></text></g><g><title>lock_release (19,073,206 samples, 0.03%)</title><rect x="90.1165%" y="1877" width="0.0328%" height="15" fill="rgb(233,168,5)" fg:x="52389893918" fg:w="19073206"/><text x="90.3665%" y="1887.50"></text></g><g><title>read_tsc (6,804,278 samples, 0.01%)</title><rect x="90.1493%" y="1877" width="0.0117%" height="15" fill="rgb(234,33,13)" fg:x="52408967124" fg:w="6804278"/><text x="90.3993%" y="1887.50"></text></g><g><title>ktime_get (150,986,459 samples, 0.26%)</title><rect x="89.9053%" y="1893" width="0.2597%" height="15" fill="rgb(231,150,26)" fg:x="52267107951" fg:w="150986459"/><text x="90.1553%" y="1903.50"></text></g><g><title>tick_check_oneshot_broadcast_this_cpu (130,500,939 samples, 0.22%)</title><rect x="90.1701%" y="1893" width="0.2245%" height="15" fill="rgb(217,191,4)" fg:x="52421043564" fg:w="130500939"/><text x="90.4201%" y="1903.50"></text></g><g><title>lock_acquire (8,870,784 samples, 0.02%)</title><rect x="90.4045%" y="1877" width="0.0153%" height="15" fill="rgb(246,198,38)" fg:x="52557331387" fg:w="8870784"/><text x="90.6545%" y="1887.50"></text></g><g><title>__lock_acquire (6,043,650 samples, 0.01%)</title><rect x="90.4094%" y="1861" width="0.0104%" height="15" fill="rgb(245,64,37)" fg:x="52560158521" fg:w="6043650"/><text x="90.6594%" y="1871.50"></text></g><g><title>irq_enter_rcu (373,770,862 samples, 0.64%)</title><rect x="89.7813%" y="1925" width="0.6429%" height="15" fill="rgb(250,30,36)" fg:x="52195030929" fg:w="373770862"/><text x="90.0313%" y="1935.50"></text></g><g><title>tick_irq_enter (334,530,152 samples, 0.58%)</title><rect x="89.8488%" y="1909" width="0.5754%" height="15" fill="rgb(217,86,53)" fg:x="52234271639" fg:w="334530152"/><text x="90.0988%" y="1919.50"></text></g><g><title>tick_nohz_stop_idle (15,404,307 samples, 0.03%)</title><rect x="90.3978%" y="1893" width="0.0265%" height="15" fill="rgb(228,157,16)" fg:x="52553397484" fg:w="15404307"/><text x="90.6478%" y="1903.50"></text></g><g><title>__blk_mq_end_request (7,796,761 samples, 0.01%)</title><rect x="90.4280%" y="1797" width="0.0134%" height="15" fill="rgb(217,59,31)" fg:x="52570951166" fg:w="7796761"/><text x="90.6780%" y="1807.50"></text></g><g><title>_raw_spin_lock_irqsave (16,742,162 samples, 0.03%)</title><rect x="90.4603%" y="1733" width="0.0288%" height="15" fill="rgb(237,138,41)" fg:x="52589736530" fg:w="16742162"/><text x="90.7103%" y="1743.50"></text></g><g><title>lock_acquire (15,030,291 samples, 0.03%)</title><rect x="90.4632%" y="1717" width="0.0259%" height="15" fill="rgb(227,91,49)" fg:x="52591448401" fg:w="15030291"/><text x="90.7132%" y="1727.50"></text></g><g><title>__lock_acquire (14,177,240 samples, 0.02%)</title><rect x="90.4647%" y="1701" width="0.0244%" height="15" fill="rgb(247,21,44)" fg:x="52592301452" fg:w="14177240"/><text x="90.7147%" y="1711.50"></text></g><g><title>__lock_acquire (6,473,405 samples, 0.01%)</title><rect x="90.5182%" y="1669" width="0.0111%" height="15" fill="rgb(219,210,51)" fg:x="52623409209" fg:w="6473405"/><text x="90.7682%" y="1679.50"></text></g><g><title>lock_acquire (10,073,748 samples, 0.02%)</title><rect x="90.5143%" y="1685" width="0.0173%" height="15" fill="rgb(209,140,6)" fg:x="52621145807" fg:w="10073748"/><text x="90.7643%" y="1695.50"></text></g><g><title>lock_release (7,508,696 samples, 0.01%)</title><rect x="90.5316%" y="1685" width="0.0129%" height="15" fill="rgb(221,188,24)" fg:x="52631219555" fg:w="7508696"/><text x="90.7816%" y="1695.50"></text></g><g><title>__mod_lruvec_page_state (22,837,086 samples, 0.04%)</title><rect x="90.5069%" y="1701" width="0.0393%" height="15" fill="rgb(232,154,20)" fg:x="52616809905" fg:w="22837086"/><text x="90.7569%" y="1711.50"></text></g><g><title>__fprop_add_percpu_max (13,073,284 samples, 0.02%)</title><rect x="90.5478%" y="1685" width="0.0225%" height="15" fill="rgb(244,137,50)" fg:x="52640621747" fg:w="13073284"/><text x="90.7978%" y="1695.50"></text></g><g><title>percpu_counter_add_batch (7,481,636 samples, 0.01%)</title><rect x="90.5574%" y="1669" width="0.0129%" height="15" fill="rgb(225,185,43)" fg:x="52646213395" fg:w="7481636"/><text x="90.8074%" y="1679.50"></text></g><g><title>__wb_writeout_add (14,456,852 samples, 0.02%)</title><rect x="90.5461%" y="1701" width="0.0249%" height="15" fill="rgb(213,205,38)" fg:x="52639646991" fg:w="14456852"/><text x="90.7961%" y="1711.50"></text></g><g><title>_raw_spin_lock_irqsave (11,279,905 samples, 0.02%)</title><rect x="90.5747%" y="1701" width="0.0194%" height="15" fill="rgb(236,73,12)" fg:x="52656235126" fg:w="11279905"/><text x="90.8247%" y="1711.50"></text></g><g><title>lock_acquire (7,014,863 samples, 0.01%)</title><rect x="90.5820%" y="1685" width="0.0121%" height="15" fill="rgb(235,219,13)" fg:x="52660500168" fg:w="7014863"/><text x="90.8320%" y="1695.50"></text></g><g><title>__folio_end_writeback (76,598,786 samples, 0.13%)</title><rect x="90.4980%" y="1717" width="0.1318%" height="15" fill="rgb(218,59,36)" fg:x="52611644601" fg:w="76598786"/><text x="90.7480%" y="1727.50"></text></g><g><title>__mod_memcg_lruvec_state (10,850,268 samples, 0.02%)</title><rect x="90.6487%" y="1653" width="0.0187%" height="15" fill="rgb(205,110,39)" fg:x="52699258556" fg:w="10850268"/><text x="90.8987%" y="1663.50"></text></g><g><title>__mod_lruvec_state (11,801,581 samples, 0.02%)</title><rect x="90.6487%" y="1669" width="0.0203%" height="15" fill="rgb(218,206,42)" fg:x="52699258556" fg:w="11801581"/><text x="90.8987%" y="1679.50"></text></g><g><title>lru_move_tail_fn (22,717,237 samples, 0.04%)</title><rect x="90.6425%" y="1685" width="0.0391%" height="15" fill="rgb(248,125,24)" fg:x="52695672458" fg:w="22717237"/><text x="90.8925%" y="1695.50"></text></g><g><title>folio_batch_move_lru (25,742,848 samples, 0.04%)</title><rect x="90.6394%" y="1701" width="0.0443%" height="15" fill="rgb(242,28,27)" fg:x="52693880367" fg:w="25742848"/><text x="90.8894%" y="1711.50"></text></g><g><title>folio_rotate_reclaimable (33,934,631 samples, 0.06%)</title><rect x="90.6319%" y="1717" width="0.0584%" height="15" fill="rgb(216,228,15)" fg:x="52689509405" fg:w="33934631"/><text x="90.8819%" y="1727.50"></text></g><g><title>folio_end_writeback (114,129,336 samples, 0.20%)</title><rect x="90.4946%" y="1733" width="0.1963%" height="15" fill="rgb(235,116,46)" fg:x="52609710344" fg:w="114129336"/><text x="90.7446%" y="1743.50"></text></g><g><title>ext4_end_bio (142,362,837 samples, 0.24%)</title><rect x="90.4469%" y="1765" width="0.2449%" height="15" fill="rgb(224,18,32)" fg:x="52581954444" fg:w="142362837"/><text x="90.6969%" y="1775.50"></text></g><g><title>ext4_finish_bio (140,984,160 samples, 0.24%)</title><rect x="90.4493%" y="1749" width="0.2425%" height="15" fill="rgb(252,5,12)" fg:x="52583333121" fg:w="140984160"/><text x="90.6993%" y="1759.50"></text></g><g><title>blk_update_request (148,771,619 samples, 0.26%)</title><rect x="90.4420%" y="1797" width="0.2559%" height="15" fill="rgb(251,36,5)" fg:x="52579104753" fg:w="148771619"/><text x="90.6920%" y="1807.50"></text></g><g><title>bio_endio (148,771,619 samples, 0.26%)</title><rect x="90.4420%" y="1781" width="0.2559%" height="15" fill="rgb(217,53,14)" fg:x="52579104753" fg:w="148771619"/><text x="90.6920%" y="1791.50"></text></g><g><title>blk_done_softirq (161,047,769 samples, 0.28%)</title><rect x="90.4243%" y="1877" width="0.2770%" height="15" fill="rgb(215,86,45)" fg:x="52568801791" fg:w="161047769"/><text x="90.6743%" y="1887.50"></text></g><g><title>scsi_complete (161,047,769 samples, 0.28%)</title><rect x="90.4243%" y="1861" width="0.2770%" height="15" fill="rgb(242,169,11)" fg:x="52568801791" fg:w="161047769"/><text x="90.6743%" y="1871.50"></text></g><g><title>scsi_finish_command (160,455,659 samples, 0.28%)</title><rect x="90.4253%" y="1845" width="0.2760%" height="15" fill="rgb(211,213,45)" fg:x="52569393901" fg:w="160455659"/><text x="90.6753%" y="1855.50"></text></g><g><title>scsi_io_completion (159,870,662 samples, 0.27%)</title><rect x="90.4263%" y="1829" width="0.2750%" height="15" fill="rgb(205,88,11)" fg:x="52569978898" fg:w="159870662"/><text x="90.6763%" y="1839.50"></text></g><g><title>scsi_end_request (159,870,662 samples, 0.27%)</title><rect x="90.4263%" y="1813" width="0.2750%" height="15" fill="rgb(252,69,26)" fg:x="52569978898" fg:w="159870662"/><text x="90.6763%" y="1823.50"></text></g><g><title>__kprobes_text_end (164,639,876 samples, 0.28%)</title><rect x="90.4243%" y="1893" width="0.2832%" height="15" fill="rgb(246,123,37)" fg:x="52568801791" fg:w="164639876"/><text x="90.6743%" y="1903.50"></text></g><g><title>irq_exit_rcu (166,001,331 samples, 0.29%)</title><rect x="90.4243%" y="1925" width="0.2855%" height="15" fill="rgb(212,205,5)" fg:x="52568801791" fg:w="166001331"/><text x="90.6743%" y="1935.50"></text></g><g><title>__irq_exit_rcu (166,001,331 samples, 0.29%)</title><rect x="90.4243%" y="1909" width="0.2855%" height="15" fill="rgb(253,148,0)" fg:x="52568801791" fg:w="166001331"/><text x="90.6743%" y="1919.50"></text></g><g><title>ct_irq_enter (32,633,218 samples, 0.06%)</title><rect x="92.8189%" y="1909" width="0.0561%" height="15" fill="rgb(239,22,4)" fg:x="53960956258" fg:w="32633218"/><text x="93.0689%" y="1919.50"></text></g><g><title>ct_nmi_enter (24,477,538 samples, 0.04%)</title><rect x="92.8330%" y="1893" width="0.0421%" height="15" fill="rgb(226,26,53)" fg:x="53969111938" fg:w="24477538"/><text x="93.0830%" y="1903.50"></text></g><g><title>irqentry_enter (1,271,312,800 samples, 2.19%)</title><rect x="90.7098%" y="1925" width="2.1868%" height="15" fill="rgb(225,229,45)" fg:x="52734803122" fg:w="1271312800"/><text x="90.9598%" y="1935.50">i..</text></g><g><title>ct_nmi_enter (12,526,446 samples, 0.02%)</title><rect x="92.8751%" y="1909" width="0.0215%" height="15" fill="rgb(220,60,37)" fg:x="53993589476" fg:w="12526446"/><text x="93.1251%" y="1919.50"></text></g><g><title>asm_sysvec_call_function_single (1,967,960,254 samples, 3.39%)</title><rect x="89.5183%" y="1957" width="3.3851%" height="15" fill="rgb(217,180,35)" fg:x="52042119206" fg:w="1967960254"/><text x="89.7683%" y="1967.50">asm..</text></g><g><title>sysvec_call_function_single (1,903,282,717 samples, 3.27%)</title><rect x="89.6296%" y="1941" width="3.2739%" height="15" fill="rgb(229,7,53)" fg:x="52106796743" fg:w="1903282717"/><text x="89.8796%" y="1951.50">sys..</text></g><g><title>ct_idle_exit (54,788,379 samples, 0.09%)</title><rect x="92.9080%" y="1957" width="0.0942%" height="15" fill="rgb(254,137,3)" fg:x="54012719084" fg:w="54788379"/><text x="93.1580%" y="1967.50"></text></g><g><title>ct_kernel_enter (52,213,290 samples, 0.09%)</title><rect x="92.9124%" y="1941" width="0.0898%" height="15" fill="rgb(215,140,41)" fg:x="54015294173" fg:w="52213290"/><text x="93.1624%" y="1951.50"></text></g><g><title>ct_kernel_enter_state (46,146,452 samples, 0.08%)</title><rect x="92.9228%" y="1925" width="0.0794%" height="15" fill="rgb(250,80,15)" fg:x="54021361011" fg:w="46146452"/><text x="93.1728%" y="1935.50"></text></g><g><title>local_clock_noinstr (28,692,458 samples, 0.05%)</title><rect x="93.0022%" y="1957" width="0.0494%" height="15" fill="rgb(252,191,6)" fg:x="54067507463" fg:w="28692458"/><text x="93.2522%" y="1967.50"></text></g><g><title>sched_clock_noinstr (25,785,164 samples, 0.04%)</title><rect x="93.0072%" y="1941" width="0.0444%" height="15" fill="rgb(246,217,18)" fg:x="54070414757" fg:w="25785164"/><text x="93.2572%" y="1951.50"></text></g><g><title>native_sched_clock (25,785,164 samples, 0.04%)</title><rect x="93.0072%" y="1925" width="0.0444%" height="15" fill="rgb(223,93,7)" fg:x="54070414757" fg:w="25785164"/><text x="93.2572%" y="1935.50"></text></g><g><title>__common_interrupt (7,050,886 samples, 0.01%)</title><rect x="93.2719%" y="1909" width="0.0121%" height="15" fill="rgb(225,55,52)" fg:x="54224280298" fg:w="7050886"/><text x="93.5219%" y="1919.50"></text></g><g><title>handle_edge_irq (7,050,886 samples, 0.01%)</title><rect x="93.2719%" y="1893" width="0.0121%" height="15" fill="rgb(240,31,24)" fg:x="54224280298" fg:w="7050886"/><text x="93.5219%" y="1903.50"></text></g><g><title>handle_irq_event (7,050,886 samples, 0.01%)</title><rect x="93.2719%" y="1877" width="0.0121%" height="15" fill="rgb(205,56,52)" fg:x="54224280298" fg:w="7050886"/><text x="93.5219%" y="1887.50"></text></g><g><title>__handle_irq_event_percpu (7,050,886 samples, 0.01%)</title><rect x="93.2719%" y="1861" width="0.0121%" height="15" fill="rgb(246,146,12)" fg:x="54224280298" fg:w="7050886"/><text x="93.5219%" y="1871.50"></text></g><g><title>ahci_multi_irqs_intr_hard (7,050,886 samples, 0.01%)</title><rect x="93.2719%" y="1845" width="0.0121%" height="15" fill="rgb(239,84,36)" fg:x="54224280298" fg:w="7050886"/><text x="93.5219%" y="1855.50"></text></g><g><title>ahci_handle_port_interrupt (5,857,587 samples, 0.01%)</title><rect x="93.2739%" y="1829" width="0.0101%" height="15" fill="rgb(207,41,40)" fg:x="54225473597" fg:w="5857587"/><text x="93.5239%" y="1839.50"></text></g><g><title>asm_common_interrupt (8,766,565 samples, 0.02%)</title><rect x="93.2719%" y="1941" width="0.0151%" height="15" fill="rgb(241,179,25)" fg:x="54224280298" fg:w="8766565"/><text x="93.5219%" y="1951.50"></text></g><g><title>common_interrupt (8,766,565 samples, 0.02%)</title><rect x="93.2719%" y="1925" width="0.0151%" height="15" fill="rgb(210,0,34)" fg:x="54224280298" fg:w="8766565"/><text x="93.5219%" y="1935.50"></text></g><g><title>poll_idle (139,963,977 samples, 0.24%)</title><rect x="93.0516%" y="1957" width="0.2408%" height="15" fill="rgb(225,217,29)" fg:x="54096199921" fg:w="139963977"/><text x="93.3016%" y="1967.50"></text></g><g><title>cpuidle_enter_state (5,397,063,647 samples, 9.28%)</title><rect x="84.0348%" y="1973" width="9.2836%" height="15" fill="rgb(216,191,38)" fg:x="48854255815" fg:w="5397063647"/><text x="84.2848%" y="1983.50">cpuidle_enter..</text></g><g><title>trace_cpu_idle (9,640,800 samples, 0.02%)</title><rect x="93.3018%" y="1957" width="0.0166%" height="15" fill="rgb(232,140,52)" fg:x="54241678662" fg:w="9640800"/><text x="93.5518%" y="1967.50"></text></g><g><title>error_entry (524,129,924 samples, 0.90%)</title><rect x="93.3184%" y="1973" width="0.9016%" height="15" fill="rgb(223,158,51)" fg:x="54251319462" fg:w="524129924"/><text x="93.5684%" y="1983.50"></text></g><g><title>irq_entries_start (42,851,039 samples, 0.07%)</title><rect x="94.2200%" y="1973" width="0.0737%" height="15" fill="rgb(235,29,51)" fg:x="54775449386" fg:w="42851039"/><text x="94.4700%" y="1983.50"></text></g><g><title>sched_idle_set_state (9,070,719 samples, 0.02%)</title><rect x="94.2950%" y="1973" width="0.0156%" height="15" fill="rgb(215,181,18)" fg:x="54819083533" fg:w="9070719"/><text x="94.5450%" y="1983.50"></text></g><g><title>sysvec_apic_timer_interrupt (23,288,569 samples, 0.04%)</title><rect x="94.3106%" y="1973" width="0.0401%" height="15" fill="rgb(227,125,34)" fg:x="54828154252" fg:w="23288569"/><text x="94.5606%" y="1983.50"></text></g><g><title>sysvec_call_function_single (161,906,963 samples, 0.28%)</title><rect x="94.3507%" y="1973" width="0.2785%" height="15" fill="rgb(230,197,49)" fg:x="54851442821" fg:w="161906963"/><text x="94.6007%" y="1983.50"></text></g><g><title>cpuidle_enter (7,306,574,226 samples, 12.57%)</title><rect x="82.0637%" y="1989" width="12.5681%" height="15" fill="rgb(239,141,16)" fg:x="47708321017" fg:w="7306574226"/><text x="82.3137%" y="1999.50">cpuidle_enter</text></g><g><title>nr_iowait_cpu (24,801,119 samples, 0.04%)</title><rect x="94.7100%" y="1957" width="0.0427%" height="15" fill="rgb(225,105,43)" fg:x="55060312337" fg:w="24801119"/><text x="94.9600%" y="1967.50"></text></g><g><title>_raw_spin_lock (8,555,349 samples, 0.01%)</title><rect x="94.7899%" y="1909" width="0.0147%" height="15" fill="rgb(214,131,14)" fg:x="55106782906" fg:w="8555349"/><text x="95.0399%" y="1919.50"></text></g><g><title>lock_acquire (7,118,894 samples, 0.01%)</title><rect x="94.7924%" y="1893" width="0.0122%" height="15" fill="rgb(229,177,11)" fg:x="55108219361" fg:w="7118894"/><text x="95.0424%" y="1903.50"></text></g><g><title>_raw_spin_lock_irqsave (9,392,393 samples, 0.02%)</title><rect x="94.8125%" y="1893" width="0.0162%" height="15" fill="rgb(231,180,14)" fg:x="55119914574" fg:w="9392393"/><text x="95.0625%" y="1903.50"></text></g><g><title>lock_acquire (7,818,808 samples, 0.01%)</title><rect x="94.8152%" y="1877" width="0.0134%" height="15" fill="rgb(232,88,2)" fg:x="55121488159" fg:w="7818808"/><text x="95.0652%" y="1887.50"></text></g><g><title>get_next_timer_interrupt (28,969,199 samples, 0.05%)</title><rect x="94.7851%" y="1925" width="0.0498%" height="15" fill="rgb(205,220,8)" fg:x="55104011997" fg:w="28969199"/><text x="95.0351%" y="1935.50"></text></g><g><title>hrtimer_get_next_event (13,321,925 samples, 0.02%)</title><rect x="94.8120%" y="1909" width="0.0229%" height="15" fill="rgb(225,23,53)" fg:x="55119659271" fg:w="13321925"/><text x="95.0620%" y="1919.50"></text></g><g><title>__lock_acquire (9,396,946 samples, 0.02%)</title><rect x="94.8473%" y="1909" width="0.0162%" height="15" fill="rgb(213,62,29)" fg:x="55140137630" fg:w="9396946"/><text x="95.0973%" y="1919.50"></text></g><g><title>lock_acquire (16,187,028 samples, 0.03%)</title><rect x="94.8379%" y="1925" width="0.0278%" height="15" fill="rgb(227,75,7)" fg:x="55134705321" fg:w="16187028"/><text x="95.0879%" y="1935.50"></text></g><g><title>tick_nohz_next_event (60,741,936 samples, 0.10%)</title><rect x="94.7767%" y="1941" width="0.1045%" height="15" fill="rgb(207,105,14)" fg:x="55099129234" fg:w="60741936"/><text x="95.0267%" y="1951.50"></text></g><g><title>tick_nohz_get_sleep_length (74,234,866 samples, 0.13%)</title><rect x="94.7539%" y="1957" width="0.1277%" height="15" fill="rgb(245,62,29)" fg:x="55085857138" fg:w="74234866"/><text x="95.0039%" y="1967.50"></text></g><g><title>cpuidle_select (145,156,011 samples, 0.25%)</title><rect x="94.6327%" y="1989" width="0.2497%" height="15" fill="rgb(236,202,4)" fg:x="55015375072" fg:w="145156011"/><text x="94.8827%" y="1999.50"></text></g><g><title>menu_select (144,393,358 samples, 0.25%)</title><rect x="94.6340%" y="1973" width="0.2484%" height="15" fill="rgb(250,67,1)" fg:x="55016137725" fg:w="144393358"/><text x="94.8840%" y="1983.50"></text></g><g><title>llist_reverse_order (57,919,526 samples, 0.10%)</title><rect x="95.3905%" y="1957" width="0.0996%" height="15" fill="rgb(253,115,44)" fg:x="55455960831" fg:w="57919526"/><text x="95.6405%" y="1967.50"></text></g><g><title>_raw_spin_lock_nested (11,961,398 samples, 0.02%)</title><rect x="95.5084%" y="1941" width="0.0206%" height="15" fill="rgb(251,139,18)" fg:x="55524493967" fg:w="11961398"/><text x="95.7584%" y="1951.50"></text></g><g><title>do_raw_spin_lock (8,403,371 samples, 0.01%)</title><rect x="95.5678%" y="1909" width="0.0145%" height="15" fill="rgb(218,22,32)" fg:x="55559003034" fg:w="8403371"/><text x="95.8178%" y="1919.50"></text></g><g><title>__lock_acquire (29,280,584 samples, 0.05%)</title><rect x="95.6093%" y="1893" width="0.0504%" height="15" fill="rgb(243,53,5)" fg:x="55583167503" fg:w="29280584"/><text x="95.8593%" y="1903.50"></text></g><g><title>lock_acquire (49,769,898 samples, 0.09%)</title><rect x="95.5822%" y="1909" width="0.0856%" height="15" fill="rgb(227,56,16)" fg:x="55567406405" fg:w="49769898"/><text x="95.8322%" y="1919.50"></text></g><g><title>_raw_spin_lock_nested (61,869,787 samples, 0.11%)</title><rect x="95.5625%" y="1925" width="0.1064%" height="15" fill="rgb(245,53,0)" fg:x="55555916852" fg:w="61869787"/><text x="95.8125%" y="1935.50"></text></g><g><title>rq_lock_irqsave (79,636,742 samples, 0.14%)</title><rect x="95.5389%" y="1941" width="0.1370%" height="15" fill="rgb(216,170,35)" fg:x="55542196456" fg:w="79636742"/><text x="95.7889%" y="1951.50"></text></g><g><title>enqueue_entity (7,467,047 samples, 0.01%)</title><rect x="95.6865%" y="1893" width="0.0128%" height="15" fill="rgb(211,200,8)" fg:x="55628053080" fg:w="7467047"/><text x="95.9365%" y="1903.50"></text></g><g><title>enqueue_task_fair (11,955,224 samples, 0.02%)</title><rect x="95.6801%" y="1909" width="0.0206%" height="15" fill="rgb(228,204,44)" fg:x="55624320084" fg:w="11955224"/><text x="95.9301%" y="1919.50"></text></g><g><title>lock_acquire (8,938,255 samples, 0.02%)</title><rect x="95.7166%" y="1877" width="0.0154%" height="15" fill="rgb(214,121,17)" fg:x="55645534045" fg:w="8938255"/><text x="95.9666%" y="1887.50"></text></g><g><title>__lock_acquire (5,857,925 samples, 0.01%)</title><rect x="95.7219%" y="1861" width="0.0101%" height="15" fill="rgb(233,64,38)" fg:x="55648614375" fg:w="5857925"/><text x="95.9719%" y="1871.50"></text></g><g><title>psi_group_change (16,186,734 samples, 0.03%)</title><rect x="95.7077%" y="1893" width="0.0278%" height="15" fill="rgb(253,54,19)" fg:x="55640376736" fg:w="16186734"/><text x="95.9577%" y="1903.50"></text></g><g><title>psi_task_change (21,994,894 samples, 0.04%)</title><rect x="95.7014%" y="1909" width="0.0378%" height="15" fill="rgb(253,94,18)" fg:x="55636676238" fg:w="21994894"/><text x="95.9514%" y="1919.50"></text></g><g><title>enqueue_task (35,624,928 samples, 0.06%)</title><rect x="95.6791%" y="1925" width="0.0613%" height="15" fill="rgb(227,57,52)" fg:x="55623706911" fg:w="35624928"/><text x="95.9291%" y="1935.50"></text></g><g><title>ttwu_do_activate (38,274,016 samples, 0.07%)</title><rect x="95.6758%" y="1941" width="0.0658%" height="15" fill="rgb(230,228,50)" fg:x="55621833198" fg:w="38274016"/><text x="95.9258%" y="1951.50"></text></g><g><title>sched_ttwu_pending (158,111,575 samples, 0.27%)</title><rect x="95.5006%" y="1957" width="0.2720%" height="15" fill="rgb(217,205,27)" fg:x="55519985654" fg:w="158111575"/><text x="95.7506%" y="1967.50"></text></g><g><title>update_rq_clock (17,990,015 samples, 0.03%)</title><rect x="95.7417%" y="1941" width="0.0309%" height="15" fill="rgb(252,71,50)" fg:x="55660107214" fg:w="17990015"/><text x="95.9917%" y="1951.50"></text></g><g><title>update_rq_clock_task (12,567,460 samples, 0.02%)</title><rect x="95.7510%" y="1925" width="0.0216%" height="15" fill="rgb(209,86,4)" fg:x="55665529769" fg:w="12567460"/><text x="96.0010%" y="1935.50"></text></g><g><title>lock_is_held_type (6,085,214 samples, 0.01%)</title><rect x="95.7621%" y="1909" width="0.0105%" height="15" fill="rgb(229,94,0)" fg:x="55672012015" fg:w="6085214"/><text x="96.0121%" y="1919.50"></text></g><g><title>trace_csd_function_entry (6,293,322 samples, 0.01%)</title><rect x="95.7726%" y="1957" width="0.0108%" height="15" fill="rgb(252,223,21)" fg:x="55678097229" fg:w="6293322"/><text x="96.0226%" y="1967.50"></text></g><g><title>__flush_smp_call_function_queue (240,142,044 samples, 0.41%)</title><rect x="95.3743%" y="1973" width="0.4131%" height="15" fill="rgb(230,210,4)" fg:x="55446549207" fg:w="240142044"/><text x="95.6243%" y="1983.50"></text></g><g><title>__blk_mq_end_request (6,188,088 samples, 0.01%)</title><rect x="95.7958%" y="1861" width="0.0106%" height="15" fill="rgb(240,149,38)" fg:x="55691562187" fg:w="6188088"/><text x="96.0458%" y="1871.50"></text></g><g><title>__lock_acquire (7,834,897 samples, 0.01%)</title><rect x="95.8291%" y="1765" width="0.0135%" height="15" fill="rgb(254,105,20)" fg:x="55710927737" fg:w="7834897"/><text x="96.0791%" y="1775.50"></text></g><g><title>_raw_spin_lock_irqsave (12,233,988 samples, 0.02%)</title><rect x="95.8223%" y="1797" width="0.0210%" height="15" fill="rgb(253,87,46)" fg:x="55706961318" fg:w="12233988"/><text x="96.0723%" y="1807.50"></text></g><g><title>lock_acquire (10,011,142 samples, 0.02%)</title><rect x="95.8261%" y="1781" width="0.0172%" height="15" fill="rgb(253,116,33)" fg:x="55709184164" fg:w="10011142"/><text x="96.0761%" y="1791.50"></text></g><g><title>lock_acquire (5,819,570 samples, 0.01%)</title><rect x="95.8621%" y="1749" width="0.0100%" height="15" fill="rgb(229,198,5)" fg:x="55730096146" fg:w="5819570"/><text x="96.1121%" y="1759.50"></text></g><g><title>__mod_lruvec_page_state (9,967,098 samples, 0.02%)</title><rect x="95.8583%" y="1765" width="0.0171%" height="15" fill="rgb(242,38,37)" fg:x="55727888244" fg:w="9967098"/><text x="96.1083%" y="1775.50"></text></g><g><title>__fprop_add_percpu_max (8,016,200 samples, 0.01%)</title><rect x="95.8776%" y="1749" width="0.0138%" height="15" fill="rgb(242,69,53)" fg:x="55739159127" fg:w="8016200"/><text x="96.1276%" y="1759.50"></text></g><g><title>__wb_writeout_add (9,337,384 samples, 0.02%)</title><rect x="95.8769%" y="1765" width="0.0161%" height="15" fill="rgb(249,80,16)" fg:x="55738729659" fg:w="9337384"/><text x="96.1269%" y="1775.50"></text></g><g><title>do_raw_spin_lock (11,136,246 samples, 0.02%)</title><rect x="95.8979%" y="1749" width="0.0192%" height="15" fill="rgb(206,128,11)" fg:x="55750943970" fg:w="11136246"/><text x="96.1479%" y="1759.50"></text></g><g><title>native_queued_spin_lock_slowpath (10,189,991 samples, 0.02%)</title><rect x="95.8995%" y="1733" width="0.0175%" height="15" fill="rgb(212,35,20)" fg:x="55751890225" fg:w="10189991"/><text x="96.1495%" y="1743.50"></text></g><g><title>_raw_spin_lock_irqsave (14,555,406 samples, 0.03%)</title><rect x="95.8972%" y="1765" width="0.0250%" height="15" fill="rgb(236,79,13)" fg:x="55750502070" fg:w="14555406"/><text x="96.1472%" y="1775.50"></text></g><g><title>folio_memcg_lock (6,031,483 samples, 0.01%)</title><rect x="95.9241%" y="1765" width="0.0104%" height="15" fill="rgb(233,123,3)" fg:x="55766144366" fg:w="6031483"/><text x="96.1741%" y="1775.50"></text></g><g><title>__folio_end_writeback (54,896,325 samples, 0.09%)</title><rect x="95.8547%" y="1781" width="0.0944%" height="15" fill="rgb(214,93,52)" fg:x="55725844751" fg:w="54896325"/><text x="96.1047%" y="1791.50"></text></g><g><title>__mod_memcg_lruvec_state (8,376,031 samples, 0.01%)</title><rect x="95.9631%" y="1717" width="0.0144%" height="15" fill="rgb(251,37,40)" fg:x="55788820765" fg:w="8376031"/><text x="96.2131%" y="1727.50"></text></g><g><title>__mod_lruvec_state (9,594,305 samples, 0.02%)</title><rect x="95.9631%" y="1733" width="0.0165%" height="15" fill="rgb(227,80,54)" fg:x="55788820765" fg:w="9594305"/><text x="96.2131%" y="1743.50"></text></g><g><title>lru_move_tail_fn (18,040,423 samples, 0.03%)</title><rect x="95.9585%" y="1749" width="0.0310%" height="15" fill="rgb(254,48,11)" fg:x="55786174136" fg:w="18040423"/><text x="96.2085%" y="1759.50"></text></g><g><title>folio_batch_move_lru (21,117,366 samples, 0.04%)</title><rect x="95.9540%" y="1765" width="0.0363%" height="15" fill="rgb(235,193,26)" fg:x="55783517843" fg:w="21117366"/><text x="96.2040%" y="1775.50"></text></g><g><title>ext4_end_bio (110,029,479 samples, 0.19%)</title><rect x="95.8111%" y="1829" width="0.1893%" height="15" fill="rgb(229,99,21)" fg:x="55700478855" fg:w="110029479"/><text x="96.0611%" y="1839.50"></text></g><g><title>ext4_finish_bio (109,140,233 samples, 0.19%)</title><rect x="95.8126%" y="1813" width="0.1877%" height="15" fill="rgb(211,140,41)" fg:x="55701368101" fg:w="109140233"/><text x="96.0626%" y="1823.50"></text></g><g><title>folio_end_writeback (87,441,066 samples, 0.15%)</title><rect x="95.8500%" y="1797" width="0.1504%" height="15" fill="rgb(240,227,30)" fg:x="55723067268" fg:w="87441066"/><text x="96.1000%" y="1807.50"></text></g><g><title>folio_rotate_reclaimable (28,922,301 samples, 0.05%)</title><rect x="95.9506%" y="1781" width="0.0497%" height="15" fill="rgb(215,224,45)" fg:x="55781586033" fg:w="28922301"/><text x="96.2006%" y="1791.50"></text></g><g><title>bio_endio (113,257,023 samples, 0.19%)</title><rect x="95.8102%" y="1845" width="0.1948%" height="15" fill="rgb(206,123,31)" fg:x="55699919456" fg:w="113257023"/><text x="96.0602%" y="1855.50"></text></g><g><title>scsi_end_request (122,830,619 samples, 0.21%)</title><rect x="95.7951%" y="1877" width="0.2113%" height="15" fill="rgb(210,138,16)" fg:x="55691143489" fg:w="122830619"/><text x="96.0451%" y="1887.50"></text></g><g><title>blk_update_request (114,520,640 samples, 0.20%)</title><rect x="95.8094%" y="1861" width="0.1970%" height="15" fill="rgb(228,57,28)" fg:x="55699453468" fg:w="114520640"/><text x="96.0594%" y="1871.50"></text></g><g><title>scsi_io_completion (123,398,006 samples, 0.21%)</title><rect x="95.7951%" y="1893" width="0.2123%" height="15" fill="rgb(242,170,10)" fg:x="55691143489" fg:w="123398006"/><text x="96.0451%" y="1903.50"></text></g><g><title>blk_done_softirq (127,463,942 samples, 0.22%)</title><rect x="95.7894%" y="1941" width="0.2193%" height="15" fill="rgb(228,214,39)" fg:x="55687831423" fg:w="127463942"/><text x="96.0394%" y="1951.50"></text></g><g><title>scsi_complete (125,887,887 samples, 0.22%)</title><rect x="95.7921%" y="1925" width="0.2165%" height="15" fill="rgb(218,179,33)" fg:x="55689407478" fg:w="125887887"/><text x="96.0421%" y="1935.50"></text></g><g><title>scsi_finish_command (125,291,118 samples, 0.22%)</title><rect x="95.7931%" y="1909" width="0.2155%" height="15" fill="rgb(235,193,39)" fg:x="55690004247" fg:w="125291118"/><text x="96.0431%" y="1919.50"></text></g><g><title>__kprobes_text_end (128,078,860 samples, 0.22%)</title><rect x="95.7894%" y="1957" width="0.2203%" height="15" fill="rgb(219,221,36)" fg:x="55687831423" fg:w="128078860"/><text x="96.0394%" y="1967.50"></text></g><g><title>do_softirq (129,635,300 samples, 0.22%)</title><rect x="95.7874%" y="1973" width="0.2230%" height="15" fill="rgb(248,218,19)" fg:x="55686691251" fg:w="129635300"/><text x="96.0374%" y="1983.50"></text></g><g><title>flush_smp_call_function_queue (664,328,552 samples, 1.14%)</title><rect x="94.8823%" y="1989" width="1.1427%" height="15" fill="rgb(205,50,9)" fg:x="55160531083" fg:w="664328552"/><text x="95.1323%" y="1999.50"></text></g><g><title>sched_ttwu_pending (7,771,481 samples, 0.01%)</title><rect x="96.0117%" y="1973" width="0.0134%" height="15" fill="rgb(238,81,28)" fg:x="55817088154" fg:w="7771481"/><text x="96.2617%" y="1983.50"></text></g><g><title>finish_task_switch (6,972,950 samples, 0.01%)</title><rect x="96.0503%" y="1957" width="0.0120%" height="15" fill="rgb(235,110,19)" fg:x="55839554233" fg:w="6972950"/><text x="96.3003%" y="1967.50"></text></g><g><title>pick_next_task_fair (8,275,864 samples, 0.01%)</title><rect x="96.0660%" y="1941" width="0.0142%" height="15" fill="rgb(214,7,14)" fg:x="55848672461" fg:w="8275864"/><text x="96.3160%" y="1951.50"></text></g><g><title>pick_next_task (9,658,944 samples, 0.02%)</title><rect x="96.0647%" y="1957" width="0.0166%" height="15" fill="rgb(211,77,3)" fg:x="55847899418" fg:w="9658944"/><text x="96.3147%" y="1967.50"></text></g><g><title>psi_task_switch (7,377,855 samples, 0.01%)</title><rect x="96.0813%" y="1957" width="0.0127%" height="15" fill="rgb(229,5,9)" fg:x="55857558362" fg:w="7377855"/><text x="96.3313%" y="1967.50"></text></g><g><title>__sched_text_start (38,056,836 samples, 0.07%)</title><rect x="96.0383%" y="1973" width="0.0655%" height="15" fill="rgb(225,90,11)" fg:x="55832534442" fg:w="38056836"/><text x="96.2883%" y="1983.50"></text></g><g><title>schedule_idle (38,983,626 samples, 0.07%)</title><rect x="96.0383%" y="1989" width="0.0671%" height="15" fill="rgb(242,56,8)" fg:x="55832534442" fg:w="38983626"/><text x="96.2883%" y="1999.50"></text></g><g><title>tick_nohz_idle_enter (8,248,011 samples, 0.01%)</title><rect x="96.1126%" y="1989" width="0.0142%" height="15" fill="rgb(249,212,39)" fg:x="55875767110" fg:w="8248011"/><text x="96.3626%" y="1999.50"></text></g><g><title>lock_acquire (181,505,310 samples, 0.31%)</title><rect x="96.1891%" y="1957" width="0.3122%" height="15" fill="rgb(236,90,9)" fg:x="55920212142" fg:w="181505310"/><text x="96.4391%" y="1967.50"></text></g><g><title>__lock_acquire (158,142,965 samples, 0.27%)</title><rect x="96.2293%" y="1941" width="0.2720%" height="15" fill="rgb(206,88,35)" fg:x="55943574487" fg:w="158142965"/><text x="96.4793%" y="1951.50"></text></g><g><title>lock_release (226,876,853 samples, 0.39%)</title><rect x="96.5013%" y="1957" width="0.3903%" height="15" fill="rgb(205,126,30)" fg:x="56101717452" fg:w="226876853"/><text x="96.7513%" y="1967.50"></text></g><g><title>ktime_get (499,601,810 samples, 0.86%)</title><rect x="96.1483%" y="1973" width="0.8594%" height="15" fill="rgb(230,176,12)" fg:x="55896500692" fg:w="499601810"/><text x="96.3983%" y="1983.50"></text></g><g><title>read_tsc (67,508,197 samples, 0.12%)</title><rect x="96.8915%" y="1957" width="0.1161%" height="15" fill="rgb(243,19,9)" fg:x="56328594305" fg:w="67508197"/><text x="97.1415%" y="1967.50"></text></g><g><title>nr_iowait_cpu (5,951,975 samples, 0.01%)</title><rect x="97.0140%" y="1973" width="0.0102%" height="15" fill="rgb(245,171,17)" fg:x="56399809348" fg:w="5951975"/><text x="97.2640%" y="1983.50"></text></g><g><title>read_tsc (25,220,006 samples, 0.04%)</title><rect x="97.0243%" y="1973" width="0.0434%" height="15" fill="rgb(227,52,21)" fg:x="56405761323" fg:w="25220006"/><text x="97.2743%" y="1983.50"></text></g><g><title>__remove_hrtimer (9,293,427 samples, 0.02%)</title><rect x="97.0807%" y="1925" width="0.0160%" height="15" fill="rgb(238,69,14)" fg:x="56438567440" fg:w="9293427"/><text x="97.3307%" y="1935.50"></text></g><g><title>_raw_spin_unlock_irqrestore (6,603,178 samples, 0.01%)</title><rect x="97.1047%" y="1925" width="0.0114%" height="15" fill="rgb(241,156,39)" fg:x="56452494712" fg:w="6603178"/><text x="97.3547%" y="1935.50"></text></g><g><title>hrtimer_try_to_cancel (23,315,185 samples, 0.04%)</title><rect x="97.0782%" y="1941" width="0.0401%" height="15" fill="rgb(212,227,28)" fg:x="56437132411" fg:w="23315185"/><text x="97.3282%" y="1951.50"></text></g><g><title>hrtimer_cancel (24,126,383 samples, 0.04%)</title><rect x="97.0776%" y="1957" width="0.0415%" height="15" fill="rgb(209,118,27)" fg:x="56436734760" fg:w="24126383"/><text x="97.3276%" y="1967.50"></text></g><g><title>hrtimer_start_range_ns (8,315,084 samples, 0.01%)</title><rect x="97.1201%" y="1957" width="0.0143%" height="15" fill="rgb(226,102,5)" fg:x="56461487137" fg:w="8315084"/><text x="97.3701%" y="1967.50"></text></g><g><title>tick_nohz_restart_sched_tick (43,691,072 samples, 0.08%)</title><rect x="97.0717%" y="1973" width="0.0752%" height="15" fill="rgb(223,34,3)" fg:x="56433310049" fg:w="43691072"/><text x="97.3217%" y="1983.50"></text></g><g><title>tick_do_update_jiffies64 (6,738,898 samples, 0.01%)</title><rect x="97.1352%" y="1957" width="0.0116%" height="15" fill="rgb(221,81,38)" fg:x="56470262223" fg:w="6738898"/><text x="97.3852%" y="1967.50"></text></g><g><title>__lock_acquire (42,869,363 samples, 0.07%)</title><rect x="97.2539%" y="1941" width="0.0737%" height="15" fill="rgb(236,219,28)" fg:x="56539273172" fg:w="42869363"/><text x="97.5039%" y="1951.50"></text></g><g><title>lock_acquire (83,058,328 samples, 0.14%)</title><rect x="97.2106%" y="1957" width="0.1429%" height="15" fill="rgb(213,200,14)" fg:x="56514094473" fg:w="83058328"/><text x="97.4606%" y="1967.50"></text></g><g><title>trace_lock_acquire (14,393,920 samples, 0.02%)</title><rect x="97.3287%" y="1941" width="0.0248%" height="15" fill="rgb(240,33,19)" fg:x="56582758881" fg:w="14393920"/><text x="97.5787%" y="1951.50"></text></g><g><title>rcu_is_watching (7,851,027 samples, 0.01%)</title><rect x="97.3400%" y="1925" width="0.0135%" height="15" fill="rgb(233,113,27)" fg:x="56589301774" fg:w="7851027"/><text x="97.5900%" y="1935.50"></text></g><g><title>lock_release (32,896,492 samples, 0.06%)</title><rect x="97.3535%" y="1957" width="0.0566%" height="15" fill="rgb(220,221,18)" fg:x="56597152801" fg:w="32896492"/><text x="97.6035%" y="1967.50"></text></g><g><title>trace_lock_release (11,389,354 samples, 0.02%)</title><rect x="97.3905%" y="1941" width="0.0196%" height="15" fill="rgb(238,92,8)" fg:x="56618659939" fg:w="11389354"/><text x="97.6405%" y="1951.50"></text></g><g><title>nr_iowait_cpu (142,778,678 samples, 0.25%)</title><rect x="97.4111%" y="1957" width="0.2456%" height="15" fill="rgb(222,164,16)" fg:x="56630656884" fg:w="142778678"/><text x="97.6611%" y="1967.50"></text></g><g><title>tick_nohz_stop_idle (299,908,108 samples, 0.52%)</title><rect x="97.1468%" y="1973" width="0.5159%" height="15" fill="rgb(241,119,3)" fg:x="56477001121" fg:w="299908108"/><text x="97.3968%" y="1983.50"></text></g><g><title>tick_nohz_idle_exit (897,695,750 samples, 1.54%)</title><rect x="96.1268%" y="1989" width="1.5441%" height="15" fill="rgb(241,44,8)" fg:x="55884015121" fg:w="897695750"/><text x="96.3768%" y="1999.50"></text></g><g><title>hrtimer_start_range_ns (6,735,670 samples, 0.01%)</title><rect x="97.6729%" y="1973" width="0.0116%" height="15" fill="rgb(230,36,40)" fg:x="56782816766" fg:w="6735670"/><text x="97.9229%" y="1983.50"></text></g><g><title>quiet_vmstat (10,132,136 samples, 0.02%)</title><rect x="97.6860%" y="1973" width="0.0174%" height="15" fill="rgb(243,16,36)" fg:x="56790471495" fg:w="10132136"/><text x="97.9360%" y="1983.50"></text></g><g><title>tick_nohz_idle_stop_tick (19,974,525 samples, 0.03%)</title><rect x="97.6710%" y="1989" width="0.0344%" height="15" fill="rgb(231,4,26)" fg:x="56781710871" fg:w="19974525"/><text x="97.9210%" y="1999.50"></text></g><g><title>do_idle (9,128,835,157 samples, 15.70%)</title><rect x="82.0063%" y="2005" width="15.7026%" height="15" fill="rgb(240,9,31)" fg:x="47674970908" fg:w="9128835157"/><text x="82.2563%" y="2015.50">do_idle</text></g><g><title>flush_smp_call_function_queue (6,169,003 samples, 0.01%)</title><rect x="97.7090%" y="2005" width="0.0106%" height="15" fill="rgb(207,173,15)" fg:x="56803806065" fg:w="6169003"/><text x="97.9590%" y="2015.50"></text></g><g><title>[vmlinux] (9,139,756,329 samples, 15.72%)</title><rect x="81.9999%" y="2037" width="15.7214%" height="15" fill="rgb(224,192,53)" fg:x="47671257827" fg:w="9139756329"/><text x="82.2499%" y="2047.50">[vmlinux]</text></g><g><title>cpu_startup_entry (9,139,756,329 samples, 15.72%)</title><rect x="81.9999%" y="2021" width="15.7214%" height="15" fill="rgb(223,67,28)" fg:x="47671257827" fg:w="9139756329"/><text x="82.2499%" y="2031.50">cpu_startup_entry</text></g><g><title>asm_sysvec_call_function_single (25,254,649 samples, 0.04%)</title><rect x="97.7303%" y="1909" width="0.0434%" height="15" fill="rgb(211,20,47)" fg:x="56816212090" fg:w="25254649"/><text x="97.9803%" y="1919.50"></text></g><g><title>__sysvec_apic_timer_interrupt (7,850,535 samples, 0.01%)</title><rect x="97.7878%" y="1861" width="0.0135%" height="15" fill="rgb(240,228,2)" fg:x="56849646252" fg:w="7850535"/><text x="98.0378%" y="1871.50"></text></g><g><title>__lock_acquire (7,174,995 samples, 0.01%)</title><rect x="97.8753%" y="1797" width="0.0123%" height="15" fill="rgb(248,151,12)" fg:x="56900493391" fg:w="7174995"/><text x="98.1253%" y="1807.50"></text></g><g><title>lock_acquire (27,851,959 samples, 0.05%)</title><rect x="97.8416%" y="1813" width="0.0479%" height="15" fill="rgb(244,8,39)" fg:x="56880902396" fg:w="27851959"/><text x="98.0916%" y="1823.50"></text></g><g><title>ktime_get (47,233,506 samples, 0.08%)</title><rect x="97.8330%" y="1829" width="0.0812%" height="15" fill="rgb(222,26,8)" fg:x="56875905626" fg:w="47233506"/><text x="98.0830%" y="1839.50"></text></g><g><title>read_tsc (8,926,090 samples, 0.02%)</title><rect x="97.8989%" y="1813" width="0.0154%" height="15" fill="rgb(213,106,44)" fg:x="56914213042" fg:w="8926090"/><text x="98.1489%" y="1823.50"></text></g><g><title>tick_check_oneshot_broadcast_this_cpu (26,215,520 samples, 0.05%)</title><rect x="97.9238%" y="1829" width="0.0451%" height="15" fill="rgb(214,129,20)" fg:x="56928701901" fg:w="26215520"/><text x="98.1738%" y="1839.50"></text></g><g><title>__lock_acquire (16,444,192 samples, 0.03%)</title><rect x="97.9972%" y="1797" width="0.0283%" height="15" fill="rgb(212,32,13)" fg:x="56971387652" fg:w="16444192"/><text x="98.2472%" y="1807.50"></text></g><g><title>lock_acquire (28,988,931 samples, 0.05%)</title><rect x="97.9833%" y="1813" width="0.0499%" height="15" fill="rgb(208,168,33)" fg:x="56963267511" fg:w="28988931"/><text x="98.2333%" y="1823.50"></text></g><g><title>irq_enter_rcu (141,840,264 samples, 0.24%)</title><rect x="97.8039%" y="1861" width="0.2440%" height="15" fill="rgb(231,207,8)" fg:x="56859021283" fg:w="141840264"/><text x="98.0539%" y="1871.50"></text></g><g><title>tick_irq_enter (132,888,957 samples, 0.23%)</title><rect x="97.8193%" y="1845" width="0.2286%" height="15" fill="rgb(235,219,23)" fg:x="56867972590" fg:w="132888957"/><text x="98.0693%" y="1855.50"></text></g><g><title>tick_nohz_stop_idle (45,944,126 samples, 0.08%)</title><rect x="97.9689%" y="1829" width="0.0790%" height="15" fill="rgb(226,216,26)" fg:x="56954917421" fg:w="45944126"/><text x="98.2189%" y="1839.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (159,757,813 samples, 0.27%)</title><rect x="97.7801%" y="1893" width="0.2748%" height="15" fill="rgb(239,137,16)" fg:x="56845156270" fg:w="159757813"/><text x="98.0301%" y="1903.50"></text></g><g><title>sysvec_apic_timer_interrupt (159,001,148 samples, 0.27%)</title><rect x="97.7814%" y="1877" width="0.2735%" height="15" fill="rgb(207,12,36)" fg:x="56845912935" fg:w="159001148"/><text x="98.0314%" y="1887.50"></text></g><g><title>__lock_acquire (10,949,536 samples, 0.02%)</title><rect x="98.1587%" y="1797" width="0.0188%" height="15" fill="rgb(210,214,24)" fg:x="57065268978" fg:w="10949536"/><text x="98.4087%" y="1807.50"></text></g><g><title>lock_acquire (43,417,121 samples, 0.07%)</title><rect x="98.1085%" y="1813" width="0.0747%" height="15" fill="rgb(206,56,30)" fg:x="57036099633" fg:w="43417121"/><text x="98.3585%" y="1823.50"></text></g><g><title>lock_release (10,222,593 samples, 0.02%)</title><rect x="98.1832%" y="1813" width="0.0176%" height="15" fill="rgb(228,143,26)" fg:x="57079516754" fg:w="10222593"/><text x="98.4332%" y="1823.50"></text></g><g><title>ktime_get (57,378,406 samples, 0.10%)</title><rect x="98.1047%" y="1829" width="0.0987%" height="15" fill="rgb(216,218,46)" fg:x="57033864525" fg:w="57378406"/><text x="98.3547%" y="1839.50"></text></g><g><title>tick_check_oneshot_broadcast_this_cpu (26,306,414 samples, 0.05%)</title><rect x="98.2038%" y="1829" width="0.0453%" height="15" fill="rgb(206,6,19)" fg:x="57091512233" fg:w="26306414"/><text x="98.4538%" y="1839.50"></text></g><g><title>irq_enter_rcu (105,574,983 samples, 0.18%)</title><rect x="98.0804%" y="1861" width="0.1816%" height="15" fill="rgb(239,177,51)" fg:x="57019771874" fg:w="105574983"/><text x="98.3304%" y="1871.50"></text></g><g><title>tick_irq_enter (98,376,745 samples, 0.17%)</title><rect x="98.0928%" y="1845" width="0.1692%" height="15" fill="rgb(216,55,25)" fg:x="57026970112" fg:w="98376745"/><text x="98.3428%" y="1855.50"></text></g><g><title>tick_nohz_stop_idle (7,528,210 samples, 0.01%)</title><rect x="98.2491%" y="1829" width="0.0129%" height="15" fill="rgb(231,163,29)" fg:x="57117818647" fg:w="7528210"/><text x="98.4991%" y="1839.50"></text></g><g><title>_raw_spin_lock_irqsave (14,636,226 samples, 0.03%)</title><rect x="98.2815%" y="1669" width="0.0252%" height="15" fill="rgb(232,149,50)" fg:x="57136626745" fg:w="14636226"/><text x="98.5315%" y="1679.50"></text></g><g><title>lock_acquire (13,583,583 samples, 0.02%)</title><rect x="98.2833%" y="1653" width="0.0234%" height="15" fill="rgb(223,142,48)" fg:x="57137679388" fg:w="13583583"/><text x="98.5333%" y="1663.50"></text></g><g><title>__lock_acquire (12,156,281 samples, 0.02%)</title><rect x="98.2857%" y="1637" width="0.0209%" height="15" fill="rgb(245,83,23)" fg:x="57139106690" fg:w="12156281"/><text x="98.5357%" y="1647.50"></text></g><g><title>__mod_lruvec_page_state (6,949,322 samples, 0.01%)</title><rect x="98.3283%" y="1637" width="0.0120%" height="15" fill="rgb(224,63,2)" fg:x="57163845199" fg:w="6949322"/><text x="98.5783%" y="1647.50"></text></g><g><title>__fprop_add_percpu_max (9,775,027 samples, 0.02%)</title><rect x="98.3433%" y="1621" width="0.0168%" height="15" fill="rgb(218,65,53)" fg:x="57172594069" fg:w="9775027"/><text x="98.5933%" y="1631.50"></text></g><g><title>percpu_counter_add_batch (7,044,902 samples, 0.01%)</title><rect x="98.3480%" y="1605" width="0.0121%" height="15" fill="rgb(221,84,29)" fg:x="57175324194" fg:w="7044902"/><text x="98.5980%" y="1615.50"></text></g><g><title>__wb_writeout_add (11,851,440 samples, 0.02%)</title><rect x="98.3410%" y="1637" width="0.0204%" height="15" fill="rgb(234,0,32)" fg:x="57171222305" fg:w="11851440"/><text x="98.5910%" y="1647.50"></text></g><g><title>do_raw_spin_lock (6,186,411 samples, 0.01%)</title><rect x="98.3642%" y="1621" width="0.0106%" height="15" fill="rgb(206,20,16)" fg:x="57184758628" fg:w="6186411"/><text x="98.6142%" y="1631.50"></text></g><g><title>native_queued_spin_lock_slowpath (5,908,684 samples, 0.01%)</title><rect x="98.3647%" y="1605" width="0.0102%" height="15" fill="rgb(244,172,18)" fg:x="57185036355" fg:w="5908684"/><text x="98.6147%" y="1615.50"></text></g><g><title>_raw_spin_lock_irqsave (11,111,984 samples, 0.02%)</title><rect x="98.3637%" y="1637" width="0.0191%" height="15" fill="rgb(254,133,1)" fg:x="57184437822" fg:w="11111984"/><text x="98.6137%" y="1647.50"></text></g><g><title>_raw_spin_unlock_irqrestore (6,159,246 samples, 0.01%)</title><rect x="98.3828%" y="1637" width="0.0106%" height="15" fill="rgb(222,206,41)" fg:x="57195549806" fg:w="6159246"/><text x="98.6328%" y="1647.50"></text></g><g><title>folio_memcg_lock (6,201,256 samples, 0.01%)</title><rect x="98.3942%" y="1637" width="0.0107%" height="15" fill="rgb(212,3,42)" fg:x="57202171815" fg:w="6201256"/><text x="98.6442%" y="1647.50"></text></g><g><title>__folio_end_writeback (61,439,431 samples, 0.11%)</title><rect x="98.3181%" y="1653" width="0.1057%" height="15" fill="rgb(241,11,4)" fg:x="57157953823" fg:w="61439431"/><text x="98.5681%" y="1663.50"></text></g><g><title>__mod_memcg_lruvec_state (6,735,055 samples, 0.01%)</title><rect x="98.4331%" y="1589" width="0.0116%" height="15" fill="rgb(205,19,26)" fg:x="57224788674" fg:w="6735055"/><text x="98.6831%" y="1599.50"></text></g><g><title>__mod_lruvec_state (7,682,937 samples, 0.01%)</title><rect x="98.4323%" y="1605" width="0.0132%" height="15" fill="rgb(210,179,32)" fg:x="57224299299" fg:w="7682937"/><text x="98.6823%" y="1615.50"></text></g><g><title>lru_move_tail_fn (12,172,282 samples, 0.02%)</title><rect x="98.4302%" y="1621" width="0.0209%" height="15" fill="rgb(227,116,49)" fg:x="57223083829" fg:w="12172282"/><text x="98.6802%" y="1631.50"></text></g><g><title>folio_batch_move_lru (14,420,014 samples, 0.02%)</title><rect x="98.4277%" y="1637" width="0.0248%" height="15" fill="rgb(211,146,6)" fg:x="57221622926" fg:w="14420014"/><text x="98.6777%" y="1647.50"></text></g><g><title>folio_rotate_reclaimable (19,811,061 samples, 0.03%)</title><rect x="98.4238%" y="1653" width="0.0341%" height="15" fill="rgb(219,44,39)" fg:x="57219393254" fg:w="19811061"/><text x="98.6738%" y="1663.50"></text></g><g><title>ext4_finish_bio (107,126,557 samples, 0.18%)</title><rect x="98.2745%" y="1685" width="0.1843%" height="15" fill="rgb(234,128,11)" fg:x="57132594216" fg:w="107126557"/><text x="98.5245%" y="1695.50"></text></g><g><title>folio_end_writeback (85,110,891 samples, 0.15%)</title><rect x="98.3124%" y="1669" width="0.1464%" height="15" fill="rgb(220,183,53)" fg:x="57154609882" fg:w="85110891"/><text x="98.5624%" y="1679.50"></text></g><g><title>blk_update_request (108,712,131 samples, 0.19%)</title><rect x="98.2726%" y="1733" width="0.1870%" height="15" fill="rgb(213,219,32)" fg:x="57131455772" fg:w="108712131"/><text x="98.5226%" y="1743.50"></text></g><g><title>bio_endio (108,712,131 samples, 0.19%)</title><rect x="98.2726%" y="1717" width="0.1870%" height="15" fill="rgb(232,156,16)" fg:x="57131455772" fg:w="108712131"/><text x="98.5226%" y="1727.50"></text></g><g><title>ext4_end_bio (107,953,626 samples, 0.19%)</title><rect x="98.2739%" y="1701" width="0.1857%" height="15" fill="rgb(246,135,34)" fg:x="57132214277" fg:w="107953626"/><text x="98.5239%" y="1711.50"></text></g><g><title>blk_done_softirq (115,590,781 samples, 0.20%)</title><rect x="98.2622%" y="1813" width="0.1988%" height="15" fill="rgb(241,99,0)" fg:x="57125409927" fg:w="115590781"/><text x="98.5122%" y="1823.50"></text></g><g><title>scsi_complete (115,590,781 samples, 0.20%)</title><rect x="98.2622%" y="1797" width="0.1988%" height="15" fill="rgb(222,103,45)" fg:x="57125409927" fg:w="115590781"/><text x="98.5122%" y="1807.50"></text></g><g><title>scsi_finish_command (115,590,781 samples, 0.20%)</title><rect x="98.2622%" y="1781" width="0.1988%" height="15" fill="rgb(212,57,4)" fg:x="57125409927" fg:w="115590781"/><text x="98.5122%" y="1791.50"></text></g><g><title>scsi_io_completion (114,808,490 samples, 0.20%)</title><rect x="98.2635%" y="1765" width="0.1975%" height="15" fill="rgb(215,68,47)" fg:x="57126192218" fg:w="114808490"/><text x="98.5135%" y="1775.50"></text></g><g><title>scsi_end_request (114,264,545 samples, 0.20%)</title><rect x="98.2644%" y="1749" width="0.1965%" height="15" fill="rgb(230,84,2)" fg:x="57126736163" fg:w="114264545"/><text x="98.5144%" y="1759.50"></text></g><g><title>run_rebalance_domains (6,608,510 samples, 0.01%)</title><rect x="98.4610%" y="1813" width="0.0114%" height="15" fill="rgb(220,102,14)" fg:x="57241000708" fg:w="6608510"/><text x="98.7110%" y="1823.50"></text></g><g><title>_nohz_idle_balance (6,608,510 samples, 0.01%)</title><rect x="98.4610%" y="1797" width="0.0114%" height="15" fill="rgb(240,10,32)" fg:x="57241000708" fg:w="6608510"/><text x="98.7110%" y="1807.50"></text></g><g><title>__kprobes_text_end (123,175,631 samples, 0.21%)</title><rect x="98.2620%" y="1829" width="0.2119%" height="15" fill="rgb(215,47,27)" fg:x="57125346857" fg:w="123175631"/><text x="98.5120%" y="1839.50"></text></g><g><title>irq_exit_rcu (123,238,977 samples, 0.21%)</title><rect x="98.2620%" y="1861" width="0.2120%" height="15" fill="rgb(233,188,43)" fg:x="57125346857" fg:w="123238977"/><text x="98.5120%" y="1871.50"></text></g><g><title>__irq_exit_rcu (123,238,977 samples, 0.21%)</title><rect x="98.2620%" y="1845" width="0.2120%" height="15" fill="rgb(253,190,1)" fg:x="57125346857" fg:w="123238977"/><text x="98.5120%" y="1855.50"></text></g><g><title>asm_sysvec_call_function_single (612,652,171 samples, 1.05%)</title><rect x="98.0549%" y="1893" width="1.0538%" height="15" fill="rgb(206,114,52)" fg:x="57004914083" fg:w="612652171"/><text x="98.3049%" y="1903.50"></text></g><g><title>sysvec_call_function_single (608,280,303 samples, 1.05%)</title><rect x="98.0624%" y="1877" width="1.0463%" height="15" fill="rgb(233,120,37)" fg:x="57009285951" fg:w="608280303"/><text x="98.3124%" y="1887.50"></text></g><g><title>irqentry_enter (368,980,420 samples, 0.63%)</title><rect x="98.4740%" y="1861" width="0.6347%" height="15" fill="rgb(214,52,39)" fg:x="57248585834" fg:w="368980420"/><text x="98.7240%" y="1871.50"></text></g><g><title>cpuidle_enter_state (781,611,872 samples, 1.34%)</title><rect x="97.7737%" y="1909" width="1.3445%" height="15" fill="rgb(223,80,29)" fg:x="56841466739" fg:w="781611872"/><text x="98.0237%" y="1919.50"></text></g><g><title>error_entry (7,584,097 samples, 0.01%)</title><rect x="99.1182%" y="1909" width="0.0130%" height="15" fill="rgb(230,101,40)" fg:x="57623078611" fg:w="7584097"/><text x="99.3682%" y="1919.50"></text></g><g><title>sysvec_call_function_single (7,041,322 samples, 0.01%)</title><rect x="99.1312%" y="1909" width="0.0121%" height="15" fill="rgb(219,211,8)" fg:x="57630662708" fg:w="7041322"/><text x="99.3812%" y="1919.50"></text></g><g><title>cpuidle_enter (822,655,368 samples, 1.42%)</title><rect x="97.7285%" y="1925" width="1.4151%" height="15" fill="rgb(252,126,28)" fg:x="56815184326" fg:w="822655368"/><text x="97.9785%" y="1935.50"></text></g><g><title>cpuidle_select (19,943,576 samples, 0.03%)</title><rect x="99.1436%" y="1925" width="0.0343%" height="15" fill="rgb(215,56,38)" fg:x="57637839694" fg:w="19943576"/><text x="99.3936%" y="1935.50"></text></g><g><title>menu_select (19,943,576 samples, 0.03%)</title><rect x="99.1436%" y="1909" width="0.0343%" height="15" fill="rgb(249,55,44)" fg:x="57637839694" fg:w="19943576"/><text x="99.3936%" y="1919.50"></text></g><g><title>tick_nohz_get_sleep_length (11,723,159 samples, 0.02%)</title><rect x="99.1577%" y="1893" width="0.0202%" height="15" fill="rgb(220,221,32)" fg:x="57646060111" fg:w="11723159"/><text x="99.4077%" y="1903.50"></text></g><g><title>tick_nohz_next_event (9,257,959 samples, 0.02%)</title><rect x="99.1620%" y="1877" width="0.0159%" height="15" fill="rgb(212,216,41)" fg:x="57648525311" fg:w="9257959"/><text x="99.4120%" y="1887.50"></text></g><g><title>llist_reverse_order (57,794,549 samples, 0.10%)</title><rect x="99.2972%" y="1893" width="0.0994%" height="15" fill="rgb(228,213,43)" fg:x="57727148653" fg:w="57794549"/><text x="99.5472%" y="1903.50"></text></g><g><title>__flush_smp_call_function_queue (70,391,284 samples, 0.12%)</title><rect x="99.2910%" y="1909" width="0.1211%" height="15" fill="rgb(211,31,26)" fg:x="57723557428" fg:w="70391284"/><text x="99.5410%" y="1919.50"></text></g><g><title>sched_ttwu_pending (7,060,446 samples, 0.01%)</title><rect x="99.4000%" y="1893" width="0.0121%" height="15" fill="rgb(229,202,19)" fg:x="57786888266" fg:w="7060446"/><text x="99.6500%" y="1903.50"></text></g><g><title>__lock_acquire (11,946,109 samples, 0.02%)</title><rect x="99.4334%" y="1701" width="0.0205%" height="15" fill="rgb(229,105,46)" fg:x="57806348536" fg:w="11946109"/><text x="99.6834%" y="1711.50"></text></g><g><title>_raw_spin_lock_irqsave (14,722,094 samples, 0.03%)</title><rect x="99.4319%" y="1733" width="0.0253%" height="15" fill="rgb(235,108,1)" fg:x="57805419681" fg:w="14722094"/><text x="99.6819%" y="1743.50"></text></g><g><title>lock_acquire (14,311,466 samples, 0.02%)</title><rect x="99.4326%" y="1717" width="0.0246%" height="15" fill="rgb(245,111,35)" fg:x="57805830309" fg:w="14311466"/><text x="99.6826%" y="1727.50"></text></g><g><title>__mod_lruvec_page_state (8,217,053 samples, 0.01%)</title><rect x="99.4748%" y="1701" width="0.0141%" height="15" fill="rgb(219,185,31)" fg:x="57830369243" fg:w="8217053"/><text x="99.7248%" y="1711.50"></text></g><g><title>do_raw_spin_lock (6,560,139 samples, 0.01%)</title><rect x="99.5031%" y="1685" width="0.0113%" height="15" fill="rgb(214,4,43)" fg:x="57846858009" fg:w="6560139"/><text x="99.7531%" y="1695.50"></text></g><g><title>native_queued_spin_lock_slowpath (6,560,139 samples, 0.01%)</title><rect x="99.5031%" y="1669" width="0.0113%" height="15" fill="rgb(235,227,40)" fg:x="57846858009" fg:w="6560139"/><text x="99.7531%" y="1679.50"></text></g><g><title>_raw_spin_lock_irqsave (11,790,017 samples, 0.02%)</title><rect x="99.5031%" y="1701" width="0.0203%" height="15" fill="rgb(230,88,30)" fg:x="57846858009" fg:w="11790017"/><text x="99.7531%" y="1711.50"></text></g><g><title>__folio_end_writeback (47,119,347 samples, 0.08%)</title><rect x="99.4673%" y="1717" width="0.0811%" height="15" fill="rgb(216,217,1)" fg:x="57826050504" fg:w="47119347"/><text x="99.7173%" y="1727.50"></text></g><g><title>__mod_lruvec_state (6,839,396 samples, 0.01%)</title><rect x="99.5606%" y="1669" width="0.0118%" height="15" fill="rgb(248,139,50)" fg:x="57880269597" fg:w="6839396"/><text x="99.8106%" y="1679.50"></text></g><g><title>lru_move_tail_fn (12,292,296 samples, 0.02%)</title><rect x="99.5559%" y="1685" width="0.0211%" height="15" fill="rgb(233,1,21)" fg:x="57877543037" fg:w="12292296"/><text x="99.8059%" y="1695.50"></text></g><g><title>folio_batch_move_lru (16,505,233 samples, 0.03%)</title><rect x="99.5502%" y="1701" width="0.0284%" height="15" fill="rgb(215,183,12)" fg:x="57874200669" fg:w="16505233"/><text x="99.8002%" y="1711.50"></text></g><g><title>ext4_end_bio (92,620,265 samples, 0.16%)</title><rect x="99.4254%" y="1765" width="0.1593%" height="15" fill="rgb(229,104,42)" fg:x="57801686689" fg:w="92620265"/><text x="99.6754%" y="1775.50"></text></g><g><title>ext4_finish_bio (91,566,330 samples, 0.16%)</title><rect x="99.4272%" y="1749" width="0.1575%" height="15" fill="rgb(243,34,48)" fg:x="57802740624" fg:w="91566330"/><text x="99.6772%" y="1759.50"></text></g><g><title>folio_end_writeback (71,476,674 samples, 0.12%)</title><rect x="99.4618%" y="1733" width="0.1229%" height="15" fill="rgb(239,11,44)" fg:x="57822830280" fg:w="71476674"/><text x="99.7118%" y="1743.50"></text></g><g><title>folio_rotate_reclaimable (21,137,103 samples, 0.04%)</title><rect x="99.5484%" y="1717" width="0.0364%" height="15" fill="rgb(231,98,35)" fg:x="57873169851" fg:w="21137103"/><text x="99.7984%" y="1727.50"></text></g><g><title>__kprobes_text_end (100,861,947 samples, 0.17%)</title><rect x="99.4121%" y="1893" width="0.1735%" height="15" fill="rgb(233,28,25)" fg:x="57793948712" fg:w="100861947"/><text x="99.6621%" y="1903.50"></text></g><g><title>blk_done_softirq (99,811,075 samples, 0.17%)</title><rect x="99.4139%" y="1877" width="0.1717%" height="15" fill="rgb(234,123,11)" fg:x="57794999584" fg:w="99811075"/><text x="99.6639%" y="1887.50"></text></g><g><title>scsi_complete (99,811,075 samples, 0.17%)</title><rect x="99.4139%" y="1861" width="0.1717%" height="15" fill="rgb(220,69,3)" fg:x="57794999584" fg:w="99811075"/><text x="99.6639%" y="1871.50"></text></g><g><title>scsi_finish_command (99,811,075 samples, 0.17%)</title><rect x="99.4139%" y="1845" width="0.1717%" height="15" fill="rgb(214,64,36)" fg:x="57794999584" fg:w="99811075"/><text x="99.6639%" y="1855.50"></text></g><g><title>scsi_io_completion (99,811,075 samples, 0.17%)</title><rect x="99.4139%" y="1829" width="0.1717%" height="15" fill="rgb(211,138,32)" fg:x="57794999584" fg:w="99811075"/><text x="99.6639%" y="1839.50"></text></g><g><title>scsi_end_request (99,811,075 samples, 0.17%)</title><rect x="99.4139%" y="1813" width="0.1717%" height="15" fill="rgb(213,118,47)" fg:x="57794999584" fg:w="99811075"/><text x="99.6639%" y="1823.50"></text></g><g><title>blk_update_request (93,123,970 samples, 0.16%)</title><rect x="99.4254%" y="1797" width="0.1602%" height="15" fill="rgb(243,124,49)" fg:x="57801686689" fg:w="93123970"/><text x="99.6754%" y="1807.50"></text></g><g><title>bio_endio (93,123,970 samples, 0.16%)</title><rect x="99.4254%" y="1781" width="0.1602%" height="15" fill="rgb(221,30,28)" fg:x="57801686689" fg:w="93123970"/><text x="99.6754%" y="1791.50"></text></g><g><title>do_softirq (101,987,751 samples, 0.18%)</title><rect x="99.4121%" y="1909" width="0.1754%" height="15" fill="rgb(246,37,13)" fg:x="57793948712" fg:w="101987751"/><text x="99.6621%" y="1919.50"></text></g><g><title>flush_smp_call_function_queue (238,155,626 samples, 0.41%)</title><rect x="99.1786%" y="1925" width="0.4097%" height="15" fill="rgb(249,66,14)" fg:x="57658208261" fg:w="238155626"/><text x="99.4286%" y="1935.50"></text></g><g><title>lock_release (7,986,163 samples, 0.01%)</title><rect x="99.6318%" y="1893" width="0.0137%" height="15" fill="rgb(213,166,5)" fg:x="57921653575" fg:w="7986163"/><text x="99.8818%" y="1903.50"></text></g><g><title>ktime_get (16,671,882 samples, 0.03%)</title><rect x="99.6239%" y="1909" width="0.0287%" height="15" fill="rgb(221,66,24)" fg:x="57917096824" fg:w="16671882"/><text x="99.8739%" y="1919.50"></text></g><g><title>nr_iowait_cpu (6,509,408 samples, 0.01%)</title><rect x="99.6557%" y="1909" width="0.0112%" height="15" fill="rgb(210,132,17)" fg:x="57935537269" fg:w="6509408"/><text x="99.9057%" y="1919.50"></text></g><g><title>hrtimer_cancel (10,241,459 samples, 0.02%)</title><rect x="99.6847%" y="1893" width="0.0176%" height="15" fill="rgb(243,202,5)" fg:x="57952393786" fg:w="10241459"/><text x="99.9347%" y="1903.50"></text></g><g><title>hrtimer_try_to_cancel (9,743,433 samples, 0.02%)</title><rect x="99.6855%" y="1877" width="0.0168%" height="15" fill="rgb(233,70,48)" fg:x="57952891812" fg:w="9743433"/><text x="99.9355%" y="1887.50"></text></g><g><title>tick_nohz_restart_sched_tick (18,177,800 samples, 0.03%)</title><rect x="99.6763%" y="1909" width="0.0313%" height="15" fill="rgb(238,41,26)" fg:x="57947536928" fg:w="18177800"/><text x="99.9263%" y="1919.50"></text></g><g><title>__lock_acquire (19,285,785 samples, 0.03%)</title><rect x="99.7930%" y="1877" width="0.0332%" height="15" fill="rgb(241,19,31)" fg:x="58015352246" fg:w="19285785"/><text x="100.0430%" y="1887.50"></text></g><g><title>lock_acquire (30,209,605 samples, 0.05%)</title><rect x="99.7758%" y="1893" width="0.0520%" height="15" fill="rgb(214,76,10)" fg:x="58005368126" fg:w="30209605"/><text x="100.0258%" y="1903.50"></text></g><g><title>lock_release (39,664,750 samples, 0.07%)</title><rect x="99.8277%" y="1893" width="0.0682%" height="15" fill="rgb(254,202,22)" fg:x="58035577731" fg:w="39664750"/><text x="100.0777%" y="1903.50"></text></g><g><title>trace_lock_release (9,726,296 samples, 0.02%)</title><rect x="99.8792%" y="1877" width="0.0167%" height="15" fill="rgb(214,72,24)" fg:x="58065516185" fg:w="9726296"/><text x="100.1292%" y="1887.50"></text></g><g><title>nr_iowait_cpu (20,219,145 samples, 0.03%)</title><rect x="99.8983%" y="1893" width="0.0348%" height="15" fill="rgb(221,92,46)" fg:x="58076616517" fg:w="20219145"/><text x="100.1483%" y="1903.50"></text></g><g><title>tick_nohz_stop_idle (135,637,258 samples, 0.23%)</title><rect x="99.7076%" y="1909" width="0.2333%" height="15" fill="rgb(246,13,50)" fg:x="57965714728" fg:w="135637258"/><text x="99.9576%" y="1919.50"></text></g><g><title>tick_nohz_idle_exit (198,882,157 samples, 0.34%)</title><rect x="99.5999%" y="1925" width="0.3421%" height="15" fill="rgb(240,165,38)" fg:x="57903136192" fg:w="198882157"/><text x="99.8499%" y="1935.50"></text></g><g><title>do_idle (1,293,550,052 samples, 2.23%)</title><rect x="97.7227%" y="1941" width="2.2251%" height="15" fill="rgb(241,24,51)" fg:x="56811771397" fg:w="1293550052"/><text x="97.9727%" y="1951.50">d..</text></g><g><title>swapper (10,469,418,792 samples, 18.01%)</title><rect x="81.9439%" y="2069" width="18.0086%" height="15" fill="rgb(227,51,44)" fg:x="47638666332" fg:w="10469418792"/><text x="82.1939%" y="2079.50">swapper</text></g><g><title>secondary_startup_64_no_verify (10,436,827,297 samples, 17.95%)</title><rect x="81.9999%" y="2053" width="17.9525%" height="15" fill="rgb(231,121,3)" fg:x="47671257827" fg:w="10436827297"/><text x="82.2499%" y="2063.50">secondary_startup_64_no_veri..</text></g><g><title>x86_64_start_kernel (1,297,070,968 samples, 2.23%)</title><rect x="97.7214%" y="2037" width="2.2311%" height="15" fill="rgb(245,3,41)" fg:x="56811014156" fg:w="1297070968"/><text x="97.9714%" y="2047.50">x..</text></g><g><title>[[kernel.vmlinux].init.text] (1,297,070,968 samples, 2.23%)</title><rect x="97.7214%" y="2021" width="2.2311%" height="15" fill="rgb(214,13,26)" fg:x="56811014156" fg:w="1297070968"/><text x="97.9714%" y="2031.50">[..</text></g><g><title>start_kernel (1,297,070,968 samples, 2.23%)</title><rect x="97.7214%" y="2005" width="2.2311%" height="15" fill="rgb(252,75,11)" fg:x="56811014156" fg:w="1297070968"/><text x="97.9714%" y="2015.50">s..</text></g><g><title>[[kernel.vmlinux].init.text] (1,297,070,968 samples, 2.23%)</title><rect x="97.7214%" y="1989" width="2.2311%" height="15" fill="rgb(218,226,17)" fg:x="56811014156" fg:w="1297070968"/><text x="97.9714%" y="1999.50">[..</text></g><g><title>[vmlinux] (1,297,070,968 samples, 2.23%)</title><rect x="97.7214%" y="1973" width="2.2311%" height="15" fill="rgb(248,89,38)" fg:x="56811014156" fg:w="1297070968"/><text x="97.9714%" y="1983.50">[..</text></g><g><title>cpu_startup_entry (1,297,070,968 samples, 2.23%)</title><rect x="97.7214%" y="1957" width="2.2311%" height="15" fill="rgb(237,73,46)" fg:x="56811014156" fg:w="1297070968"/><text x="97.9714%" y="1967.50">c..</text></g><g><title>[unknown] (7,219,257 samples, 0.01%)</title><rect x="99.9555%" y="2053" width="0.0124%" height="15" fill="rgb(242,78,33)" fg:x="58109825944" fg:w="7219257"/><text x="100.2055%" y="2063.50"></text></g><g><title>tmux:_server (12,851,440 samples, 0.02%)</title><rect x="99.9546%" y="2069" width="0.0221%" height="15" fill="rgb(235,60,3)" fg:x="58109332247" fg:w="12851440"/><text x="100.2046%" y="2079.50"></text></g><g><title>[cursor-51c8aff7cb5a89f4a0e462fbacab938bdbfaf140] (7,259,124 samples, 0.01%)</title><rect x="99.9767%" y="2053" width="0.0125%" height="15" fill="rgb(216,172,19)" fg:x="58122183687" fg:w="7259124"/><text x="100.2267%" y="2063.50"></text></g><g><title>tokio-runtime-w (10,465,808 samples, 0.02%)</title><rect x="99.9767%" y="2069" width="0.0180%" height="15" fill="rgb(227,6,42)" fg:x="58122183687" fg:w="10465808"/><text x="100.2267%" y="2079.50"></text></g><g><title>all (58,135,717,739 samples, 100%)</title><rect x="0.0000%" y="2085" width="100.0000%" height="15" fill="rgb(223,207,42)" fg:x="0" fg:w="58135717739"/><text x="0.2500%" y="2095.50"></text></g></svg></svg>